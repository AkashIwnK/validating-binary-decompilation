; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4750_type = type <{ [1 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G_0xa58ed__rip__type = type <{ [8 x i8] }>
%G_0xa5a55__rip__type = type <{ [8 x i8] }>
%G__0x4b23a0_type = type <{ [8 x i8] }>
%G__0x4b2750_type = type <{ [8 x i8] }>
%G__0x4b28d0_type = type <{ [8 x i8] }>
%G__0x4b2a50_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4750 = global %G_0x6d4750_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0xa58ed__rip_ = global %G_0xa58ed__rip__type zeroinitializer
@G_0xa5a55__rip_ = global %G_0xa5a55__rip__type zeroinitializer
@G__0x4b23a0 = global %G__0x4b23a0_type zeroinitializer
@G__0x4b2750 = global %G__0x4b2750_type zeroinitializer
@G__0x4b28d0 = global %G__0x4b28d0_type zeroinitializer
@G__0x4b2a50 = global %G__0x4b2a50_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4ace70.levrun_linfo_inter(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @dct_luma_sp(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40bde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40bde0, %struct.Memory** %MEMORY
  %loadMem_40bde1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i821 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i821
  %27 = load i64, i64* %PC.i820
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i820
  store i64 %26, i64* %RBP.i822, align 8
  store %struct.Memory* %loadMem_40bde1, %struct.Memory** %MEMORY
  %loadMem_40bde4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1108 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1108
  %36 = load i64, i64* %PC.i1107
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1107
  %38 = sub i64 %35, 416
  store i64 %38, i64* %RSP.i1108, align 8
  %39 = icmp ult i64 %35, 416
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 416, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40bde4, %struct.Memory** %MEMORY
  %loadMem_40bdeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 0
  %YMM0.i1141 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = bitcast %"class.std::bitset"* %YMM0.i1141 to i8*
  %73 = load i64, i64* %PC.i1140
  %74 = add i64 %73, ptrtoint (%G_0xa5a55__rip__type* @G_0xa5a55__rip_ to i64)
  %75 = load i64, i64* %PC.i1140
  %76 = add i64 %75, 8
  store i64 %76, i64* %PC.i1140
  %77 = inttoptr i64 %74 to double*
  %78 = load double, double* %77
  %79 = bitcast i8* %72 to double*
  store double %78, double* %79, align 1
  %80 = getelementptr inbounds i8, i8* %72, i64 8
  %81 = bitcast i8* %80 to double*
  store double 0.000000e+00, double* %81, align 1
  store %struct.Memory* %loadMem_40bdeb, %struct.Memory** %MEMORY
  %loadMem_40bdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %86 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %85, i64 0, i64 1
  %YMM1.i1150 = bitcast %union.VectorReg* %86 to %"class.std::bitset"*
  %87 = bitcast %"class.std::bitset"* %YMM1.i1150 to i8*
  %88 = load i64, i64* %PC.i1149
  %89 = add i64 %88, ptrtoint (%G_0xa5a55__rip__type* @G_0xa5a55__rip_ to i64)
  %90 = load i64, i64* %PC.i1149
  %91 = add i64 %90, 8
  store i64 %91, i64* %PC.i1149
  %92 = inttoptr i64 %89 to double*
  %93 = load double, double* %92
  %94 = bitcast i8* %87 to double*
  store double %93, double* %94, align 1
  %95 = getelementptr inbounds i8, i8* %87, i64 8
  %96 = bitcast i8* %95 to double*
  store double 0.000000e+00, double* %96, align 1
  store %struct.Memory* %loadMem_40bdf3, %struct.Memory** %MEMORY
  %loadMem_40bdfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 33
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RAX.i1161 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %PC.i1160
  %104 = add i64 %103, 5
  store i64 %104, i64* %PC.i1160
  store i64 2, i64* %RAX.i1161, align 8
  store %struct.Memory* %loadMem_40bdfb, %struct.Memory** %MEMORY
  %loadMem_40be00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 33
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %107 to i64*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 5
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %RCX.i1519 = bitcast %union.anon* %110 to i64*
  %111 = load i64, i64* %PC.i1518
  %112 = add i64 %111, 5
  store i64 %112, i64* %PC.i1518
  store i64 4, i64* %RCX.i1519, align 8
  store %struct.Memory* %loadMem_40be00, %struct.Memory** %MEMORY
  %loadMem_40be05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %114 = getelementptr inbounds %struct.GPR, %struct.GPR* %113, i32 0, i32 33
  %115 = getelementptr inbounds %struct.Reg, %struct.Reg* %114, i32 0, i32 0
  %PC.i1602 = bitcast %union.anon* %115 to i64*
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %117 = getelementptr inbounds %struct.GPR, %struct.GPR* %116, i32 0, i32 11
  %118 = getelementptr inbounds %struct.Reg, %struct.Reg* %117, i32 0, i32 0
  %EDI.i1603 = bitcast %union.anon* %118 to i32*
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 15
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %RBP.i1604 = bitcast %union.anon* %121 to i64*
  %122 = load i64, i64* %RBP.i1604
  %123 = sub i64 %122, 4
  %124 = load i32, i32* %EDI.i1603
  %125 = zext i32 %124 to i64
  %126 = load i64, i64* %PC.i1602
  %127 = add i64 %126, 3
  store i64 %127, i64* %PC.i1602
  %128 = inttoptr i64 %123 to i32*
  store i32 %124, i32* %128
  store %struct.Memory* %loadMem_40be05, %struct.Memory** %MEMORY
  %loadMem_40be08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 33
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %131 to i64*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 9
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %ESI.i1668 = bitcast %union.anon* %134 to i32*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 15
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %RBP.i1669 = bitcast %union.anon* %137 to i64*
  %138 = load i64, i64* %RBP.i1669
  %139 = sub i64 %138, 8
  %140 = load i32, i32* %ESI.i1668
  %141 = zext i32 %140 to i64
  %142 = load i64, i64* %PC.i1667
  %143 = add i64 %142, 3
  store i64 %143, i64* %PC.i1667
  %144 = inttoptr i64 %139 to i32*
  store i32 %140, i32* %144
  store %struct.Memory* %loadMem_40be08, %struct.Memory** %MEMORY
  %loadMem_40be0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 33
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %PC.i1747 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 7
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RDX.i1748 = bitcast %union.anon* %150 to i64*
  %151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %152 = getelementptr inbounds %struct.GPR, %struct.GPR* %151, i32 0, i32 15
  %153 = getelementptr inbounds %struct.Reg, %struct.Reg* %152, i32 0, i32 0
  %RBP.i1749 = bitcast %union.anon* %153 to i64*
  %154 = load i64, i64* %RBP.i1749
  %155 = sub i64 %154, 16
  %156 = load i64, i64* %RDX.i1748
  %157 = load i64, i64* %PC.i1747
  %158 = add i64 %157, 4
  store i64 %158, i64* %PC.i1747
  %159 = inttoptr i64 %155 to i64*
  store i64 %156, i64* %159
  store %struct.Memory* %loadMem_40be0b, %struct.Memory** %MEMORY
  %loadMem_40be0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %161 = getelementptr inbounds %struct.GPR, %struct.GPR* %160, i32 0, i32 33
  %162 = getelementptr inbounds %struct.Reg, %struct.Reg* %161, i32 0, i32 0
  %PC.i2776 = bitcast %union.anon* %162 to i64*
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %164 = getelementptr inbounds %struct.GPR, %struct.GPR* %163, i32 0, i32 9
  %165 = getelementptr inbounds %struct.Reg, %struct.Reg* %164, i32 0, i32 0
  %RSI.i2777 = bitcast %union.anon* %165 to i64*
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 15
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %RBP.i2778 = bitcast %union.anon* %168 to i64*
  %169 = load i64, i64* %RBP.i2778
  %170 = sub i64 %169, 4
  %171 = load i64, i64* %PC.i2776
  %172 = add i64 %171, 3
  store i64 %172, i64* %PC.i2776
  %173 = inttoptr i64 %170 to i32*
  %174 = load i32, i32* %173
  %175 = zext i32 %174 to i64
  store i64 %175, i64* %RSI.i2777, align 8
  store %struct.Memory* %loadMem_40be0f, %struct.Memory** %MEMORY
  %loadMem_40be12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 33
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %PC.i2799 = bitcast %union.anon* %178 to i64*
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 1
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %EAX.i2800 = bitcast %union.anon* %181 to i32*
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 15
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %RBP.i2801 = bitcast %union.anon* %184 to i64*
  %185 = load i64, i64* %RBP.i2801
  %186 = sub i64 %185, 300
  %187 = load i32, i32* %EAX.i2800
  %188 = zext i32 %187 to i64
  %189 = load i64, i64* %PC.i2799
  %190 = add i64 %189, 6
  store i64 %190, i64* %PC.i2799
  %191 = inttoptr i64 %186 to i32*
  store i32 %187, i32* %191
  store %struct.Memory* %loadMem_40be12, %struct.Memory** %MEMORY
  %loadMem_40be18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 33
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %PC.i2835 = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 9
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %ESI.i2836 = bitcast %union.anon* %197 to i32*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 1
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RAX.i2837 = bitcast %union.anon* %200 to i64*
  %201 = load i32, i32* %ESI.i2836
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC.i2835
  %204 = add i64 %203, 2
  store i64 %204, i64* %PC.i2835
  %205 = and i64 %202, 4294967295
  store i64 %205, i64* %RAX.i2837, align 8
  store %struct.Memory* %loadMem_40be18, %struct.Memory** %MEMORY
  %loadMem_40be1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i2853 = bitcast %union.anon* %208 to i64*
  %209 = load i64, i64* %PC.i2853
  %210 = add i64 %209, 1
  store i64 %210, i64* %PC.i2853
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %213 = bitcast %union.anon* %212 to i32*
  %214 = load i32, i32* %213, align 8
  %215 = sext i32 %214 to i64
  %216 = lshr i64 %215, 32
  store i64 %216, i64* %211, align 8
  store %struct.Memory* %loadMem_40be1a, %struct.Memory** %MEMORY
  %loadMem_40be1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %218 = getelementptr inbounds %struct.GPR, %struct.GPR* %217, i32 0, i32 33
  %219 = getelementptr inbounds %struct.Reg, %struct.Reg* %218, i32 0, i32 0
  %PC.i2880 = bitcast %union.anon* %219 to i64*
  %220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %221 = getelementptr inbounds %struct.GPR, %struct.GPR* %220, i32 0, i32 5
  %222 = getelementptr inbounds %struct.Reg, %struct.Reg* %221, i32 0, i32 0
  %ECX.i2881 = bitcast %union.anon* %222 to i32*
  %223 = load i32, i32* %ECX.i2881
  %224 = zext i32 %223 to i64
  %225 = load i64, i64* %PC.i2880
  %226 = add i64 %225, 2
  store i64 %226, i64* %PC.i2880
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %228 = bitcast %union.anon* %227 to i32*
  %229 = load i32, i32* %228, align 8
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %232 = bitcast %union.anon* %231 to i32*
  %233 = load i32, i32* %232, align 8
  %234 = zext i32 %233 to i64
  %235 = shl i64 %224, 32
  %236 = ashr exact i64 %235, 32
  %237 = shl i64 %234, 32
  %238 = or i64 %237, %230
  %239 = sdiv i64 %238, %236
  %240 = shl i64 %239, 32
  %241 = ashr exact i64 %240, 32
  %242 = icmp eq i64 %239, %241
  br i1 %242, label %247, label %243

; <label>:243:                                    ; preds = %entry
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %245, %struct.Memory* %loadMem_40be1b)
  br label %routine_idivl__ecx.exit

; <label>:247:                                    ; preds = %entry
  %248 = srem i64 %238, %236
  %249 = getelementptr inbounds %union.anon, %union.anon* %227, i64 0, i32 0
  %250 = and i64 %239, 4294967295
  store i64 %250, i64* %249, align 8
  %251 = getelementptr inbounds %union.anon, %union.anon* %231, i64 0, i32 0
  %252 = and i64 %248, 4294967295
  store i64 %252, i64* %251, align 8
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %253, align 1
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %254, align 1
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %255, align 1
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %256, align 1
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %257, align 1
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %258, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %243, %247
  %259 = phi %struct.Memory* [ %246, %243 ], [ %loadMem_40be1b, %247 ]
  store %struct.Memory* %259, %struct.Memory** %MEMORY
  %loadMem_40be1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %261 = getelementptr inbounds %struct.GPR, %struct.GPR* %260, i32 0, i32 33
  %262 = getelementptr inbounds %struct.Reg, %struct.Reg* %261, i32 0, i32 0
  %PC.i2882 = bitcast %union.anon* %262 to i64*
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 1
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %EAX.i2883 = bitcast %union.anon* %265 to i32*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 15
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %RBP.i2884 = bitcast %union.anon* %268 to i64*
  %269 = load i64, i64* %RBP.i2884
  %270 = sub i64 %269, 212
  %271 = load i32, i32* %EAX.i2883
  %272 = zext i32 %271 to i64
  %273 = load i64, i64* %PC.i2882
  %274 = add i64 %273, 6
  store i64 %274, i64* %PC.i2882
  %275 = inttoptr i64 %270 to i32*
  store i32 %271, i32* %275
  store %struct.Memory* %loadMem_40be1d, %struct.Memory** %MEMORY
  %loadMem_40be23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 33
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %PC.i2900 = bitcast %union.anon* %278 to i64*
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %280 = getelementptr inbounds %struct.GPR, %struct.GPR* %279, i32 0, i32 1
  %281 = getelementptr inbounds %struct.Reg, %struct.Reg* %280, i32 0, i32 0
  %RAX.i2901 = bitcast %union.anon* %281 to i64*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %283 = getelementptr inbounds %struct.GPR, %struct.GPR* %282, i32 0, i32 15
  %284 = getelementptr inbounds %struct.Reg, %struct.Reg* %283, i32 0, i32 0
  %RBP.i2902 = bitcast %union.anon* %284 to i64*
  %285 = load i64, i64* %RBP.i2902
  %286 = sub i64 %285, 8
  %287 = load i64, i64* %PC.i2900
  %288 = add i64 %287, 3
  store i64 %288, i64* %PC.i2900
  %289 = inttoptr i64 %286 to i32*
  %290 = load i32, i32* %289
  %291 = zext i32 %290 to i64
  store i64 %291, i64* %RAX.i2901, align 8
  store %struct.Memory* %loadMem_40be23, %struct.Memory** %MEMORY
  %loadMem_40be26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 33
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %PC.i2937 = bitcast %union.anon* %294 to i64*
  %295 = load i64, i64* %PC.i2937
  %296 = add i64 %295, 1
  store i64 %296, i64* %PC.i2937
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %299 = bitcast %union.anon* %298 to i32*
  %300 = load i32, i32* %299, align 8
  %301 = sext i32 %300 to i64
  %302 = lshr i64 %301, 32
  store i64 %302, i64* %297, align 8
  store %struct.Memory* %loadMem_40be26, %struct.Memory** %MEMORY
  %loadMem_40be27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 33
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %PC.i3026 = bitcast %union.anon* %305 to i64*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %307 = getelementptr inbounds %struct.GPR, %struct.GPR* %306, i32 0, i32 5
  %308 = getelementptr inbounds %struct.Reg, %struct.Reg* %307, i32 0, i32 0
  %ECX.i3027 = bitcast %union.anon* %308 to i32*
  %309 = load i32, i32* %ECX.i3027
  %310 = zext i32 %309 to i64
  %311 = load i64, i64* %PC.i3026
  %312 = add i64 %311, 2
  store i64 %312, i64* %PC.i3026
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %314 = bitcast %union.anon* %313 to i32*
  %315 = load i32, i32* %314, align 8
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %318 = bitcast %union.anon* %317 to i32*
  %319 = load i32, i32* %318, align 8
  %320 = zext i32 %319 to i64
  %321 = shl i64 %310, 32
  %322 = ashr exact i64 %321, 32
  %323 = shl i64 %320, 32
  %324 = or i64 %323, %316
  %325 = sdiv i64 %324, %322
  %326 = shl i64 %325, 32
  %327 = ashr exact i64 %326, 32
  %328 = icmp eq i64 %325, %327
  br i1 %328, label %333, label %329

; <label>:329:                                    ; preds = %routine_idivl__ecx.exit
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %331 = load i64, i64* %330, align 8
  %332 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %331, %struct.Memory* %loadMem_40be27)
  br label %routine_idivl__ecx.exit3028

; <label>:333:                                    ; preds = %routine_idivl__ecx.exit
  %334 = srem i64 %324, %322
  %335 = getelementptr inbounds %union.anon, %union.anon* %313, i64 0, i32 0
  %336 = and i64 %325, 4294967295
  store i64 %336, i64* %335, align 8
  %337 = getelementptr inbounds %union.anon, %union.anon* %317, i64 0, i32 0
  %338 = and i64 %334, 4294967295
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %339, align 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %340, align 1
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %341, align 1
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %342, align 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %343, align 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %344, align 1
  br label %routine_idivl__ecx.exit3028

routine_idivl__ecx.exit3028:                      ; preds = %329, %333
  %345 = phi %struct.Memory* [ %332, %329 ], [ %loadMem_40be27, %333 ]
  store %struct.Memory* %345, %struct.Memory** %MEMORY
  %loadMem_40be29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 33
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %PC.i3029 = bitcast %union.anon* %348 to i64*
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %350 = getelementptr inbounds %struct.GPR, %struct.GPR* %349, i32 0, i32 1
  %351 = getelementptr inbounds %struct.Reg, %struct.Reg* %350, i32 0, i32 0
  %EAX.i3030 = bitcast %union.anon* %351 to i32*
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %353 = getelementptr inbounds %struct.GPR, %struct.GPR* %352, i32 0, i32 15
  %354 = getelementptr inbounds %struct.Reg, %struct.Reg* %353, i32 0, i32 0
  %RBP.i3031 = bitcast %union.anon* %354 to i64*
  %355 = load i64, i64* %RBP.i3031
  %356 = sub i64 %355, 216
  %357 = load i32, i32* %EAX.i3030
  %358 = zext i32 %357 to i64
  %359 = load i64, i64* %PC.i3029
  %360 = add i64 %359, 6
  store i64 %360, i64* %PC.i3029
  %361 = inttoptr i64 %356 to i32*
  store i32 %357, i32* %361
  store %struct.Memory* %loadMem_40be29, %struct.Memory** %MEMORY
  %loadMem_40be2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 33
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %PC.i3047 = bitcast %union.anon* %364 to i64*
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %366 = getelementptr inbounds %struct.GPR, %struct.GPR* %365, i32 0, i32 1
  %367 = getelementptr inbounds %struct.Reg, %struct.Reg* %366, i32 0, i32 0
  %RAX.i3048 = bitcast %union.anon* %367 to i64*
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 15
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %RBP.i3049 = bitcast %union.anon* %370 to i64*
  %371 = load i64, i64* %RBP.i3049
  %372 = sub i64 %371, 216
  %373 = load i64, i64* %PC.i3047
  %374 = add i64 %373, 6
  store i64 %374, i64* %PC.i3047
  %375 = inttoptr i64 %372 to i32*
  %376 = load i32, i32* %375
  %377 = zext i32 %376 to i64
  store i64 %377, i64* %RAX.i3048, align 8
  store %struct.Memory* %loadMem_40be2f, %struct.Memory** %MEMORY
  %loadMem_40be35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 33
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %PC.i3066 = bitcast %union.anon* %380 to i64*
  %381 = load i64, i64* %PC.i3066
  %382 = add i64 %381, 1
  store i64 %382, i64* %PC.i3066
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %385 = bitcast %union.anon* %384 to i32*
  %386 = load i32, i32* %385, align 8
  %387 = sext i32 %386 to i64
  %388 = lshr i64 %387, 32
  store i64 %388, i64* %383, align 8
  store %struct.Memory* %loadMem_40be35, %struct.Memory** %MEMORY
  %loadMem_40be36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 33
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %PC.i3082 = bitcast %union.anon* %391 to i64*
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 5
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %RCX.i3083 = bitcast %union.anon* %394 to i64*
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 15
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %RBP.i3084 = bitcast %union.anon* %397 to i64*
  %398 = load i64, i64* %RBP.i3084
  %399 = sub i64 %398, 300
  %400 = load i64, i64* %PC.i3082
  %401 = add i64 %400, 6
  store i64 %401, i64* %PC.i3082
  %402 = inttoptr i64 %399 to i32*
  %403 = load i32, i32* %402
  %404 = zext i32 %403 to i64
  store i64 %404, i64* %RCX.i3083, align 8
  store %struct.Memory* %loadMem_40be36, %struct.Memory** %MEMORY
  %loadMem_40be3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 33
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %PC.i3079 = bitcast %union.anon* %407 to i64*
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 5
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %ECX.i3080 = bitcast %union.anon* %410 to i32*
  %411 = load i32, i32* %ECX.i3080
  %412 = zext i32 %411 to i64
  %413 = load i64, i64* %PC.i3079
  %414 = add i64 %413, 2
  store i64 %414, i64* %PC.i3079
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %416 = bitcast %union.anon* %415 to i32*
  %417 = load i32, i32* %416, align 8
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %420 = bitcast %union.anon* %419 to i32*
  %421 = load i32, i32* %420, align 8
  %422 = zext i32 %421 to i64
  %423 = shl i64 %412, 32
  %424 = ashr exact i64 %423, 32
  %425 = shl i64 %422, 32
  %426 = or i64 %425, %418
  %427 = sdiv i64 %426, %424
  %428 = shl i64 %427, 32
  %429 = ashr exact i64 %428, 32
  %430 = icmp eq i64 %427, %429
  br i1 %430, label %435, label %431

; <label>:431:                                    ; preds = %routine_idivl__ecx.exit3028
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %433 = load i64, i64* %432, align 8
  %434 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %433, %struct.Memory* %loadMem_40be3c)
  br label %routine_idivl__ecx.exit3081

; <label>:435:                                    ; preds = %routine_idivl__ecx.exit3028
  %436 = srem i64 %426, %424
  %437 = getelementptr inbounds %union.anon, %union.anon* %415, i64 0, i32 0
  %438 = and i64 %427, 4294967295
  store i64 %438, i64* %437, align 8
  %439 = getelementptr inbounds %union.anon, %union.anon* %419, i64 0, i32 0
  %440 = and i64 %436, 4294967295
  store i64 %440, i64* %439, align 8
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %441, align 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %442, align 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %443, align 1
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %444, align 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %445, align 1
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %446, align 1
  br label %routine_idivl__ecx.exit3081

routine_idivl__ecx.exit3081:                      ; preds = %431, %435
  %447 = phi %struct.Memory* [ %434, %431 ], [ %loadMem_40be3c, %435 ]
  store %struct.Memory* %447, %struct.Memory** %MEMORY
  %loadMem_40be3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %449 = getelementptr inbounds %struct.GPR, %struct.GPR* %448, i32 0, i32 33
  %450 = getelementptr inbounds %struct.Reg, %struct.Reg* %449, i32 0, i32 0
  %PC.i3077 = bitcast %union.anon* %450 to i64*
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %452 = getelementptr inbounds %struct.GPR, %struct.GPR* %451, i32 0, i32 1
  %453 = getelementptr inbounds %struct.Reg, %struct.Reg* %452, i32 0, i32 0
  %RAX.i3078 = bitcast %union.anon* %453 to i64*
  %454 = load i64, i64* %RAX.i3078
  %455 = load i64, i64* %PC.i3077
  %456 = add i64 %455, 2
  store i64 %456, i64* %PC.i3077
  %457 = trunc i64 %454 to i32
  %458 = shl i32 %457, 1
  %459 = icmp slt i32 %457, 0
  %460 = icmp slt i32 %458, 0
  %461 = xor i1 %459, %460
  %462 = zext i32 %458 to i64
  store i64 %462, i64* %RAX.i3078, align 8
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %464 = zext i1 %459 to i8
  store i8 %464, i8* %463, align 1
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %466 = and i32 %458, 254
  %467 = call i32 @llvm.ctpop.i32(i32 %466)
  %468 = trunc i32 %467 to i8
  %469 = and i8 %468, 1
  %470 = xor i8 %469, 1
  store i8 %470, i8* %465, align 1
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %471, align 1
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %473 = icmp eq i32 %458, 0
  %474 = zext i1 %473 to i8
  store i8 %474, i8* %472, align 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %476 = lshr i32 %458, 31
  %477 = trunc i32 %476 to i8
  store i8 %477, i8* %475, align 1
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %479 = zext i1 %461 to i8
  store i8 %479, i8* %478, align 1
  store %struct.Memory* %loadMem_40be3e, %struct.Memory** %MEMORY
  %loadMem_40be41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 33
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %PC.i3074 = bitcast %union.anon* %482 to i64*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 9
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %RSI.i3075 = bitcast %union.anon* %485 to i64*
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %487 = getelementptr inbounds %struct.GPR, %struct.GPR* %486, i32 0, i32 15
  %488 = getelementptr inbounds %struct.Reg, %struct.Reg* %487, i32 0, i32 0
  %RBP.i3076 = bitcast %union.anon* %488 to i64*
  %489 = load i64, i64* %RBP.i3076
  %490 = sub i64 %489, 212
  %491 = load i64, i64* %PC.i3074
  %492 = add i64 %491, 6
  store i64 %492, i64* %PC.i3074
  %493 = inttoptr i64 %490 to i32*
  %494 = load i32, i32* %493
  %495 = zext i32 %494 to i64
  store i64 %495, i64* %RSI.i3075, align 8
  store %struct.Memory* %loadMem_40be41, %struct.Memory** %MEMORY
  %loadMem_40be47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 33
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %PC.i3071 = bitcast %union.anon* %498 to i64*
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 1
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %EAX.i3072 = bitcast %union.anon* %501 to i32*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 15
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %RBP.i3073 = bitcast %union.anon* %504 to i64*
  %505 = load i64, i64* %RBP.i3073
  %506 = sub i64 %505, 304
  %507 = load i32, i32* %EAX.i3072
  %508 = zext i32 %507 to i64
  %509 = load i64, i64* %PC.i3071
  %510 = add i64 %509, 6
  store i64 %510, i64* %PC.i3071
  %511 = inttoptr i64 %506 to i32*
  store i32 %507, i32* %511
  store %struct.Memory* %loadMem_40be47, %struct.Memory** %MEMORY
  %loadMem_40be4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 33
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %PC.i3068 = bitcast %union.anon* %514 to i64*
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %516 = getelementptr inbounds %struct.GPR, %struct.GPR* %515, i32 0, i32 9
  %517 = getelementptr inbounds %struct.Reg, %struct.Reg* %516, i32 0, i32 0
  %ESI.i3069 = bitcast %union.anon* %517 to i32*
  %518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %519 = getelementptr inbounds %struct.GPR, %struct.GPR* %518, i32 0, i32 1
  %520 = getelementptr inbounds %struct.Reg, %struct.Reg* %519, i32 0, i32 0
  %RAX.i3070 = bitcast %union.anon* %520 to i64*
  %521 = load i32, i32* %ESI.i3069
  %522 = zext i32 %521 to i64
  %523 = load i64, i64* %PC.i3068
  %524 = add i64 %523, 2
  store i64 %524, i64* %PC.i3068
  %525 = and i64 %522, 4294967295
  store i64 %525, i64* %RAX.i3070, align 8
  store %struct.Memory* %loadMem_40be4d, %struct.Memory** %MEMORY
  %loadMem_40be4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %527 = getelementptr inbounds %struct.GPR, %struct.GPR* %526, i32 0, i32 33
  %528 = getelementptr inbounds %struct.Reg, %struct.Reg* %527, i32 0, i32 0
  %PC.i3067 = bitcast %union.anon* %528 to i64*
  %529 = load i64, i64* %PC.i3067
  %530 = add i64 %529, 1
  store i64 %530, i64* %PC.i3067
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %533 = bitcast %union.anon* %532 to i32*
  %534 = load i32, i32* %533, align 8
  %535 = sext i32 %534 to i64
  %536 = lshr i64 %535, 32
  store i64 %536, i64* %531, align 8
  store %struct.Memory* %loadMem_40be4f, %struct.Memory** %MEMORY
  %loadMem_40be50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %538 = getelementptr inbounds %struct.GPR, %struct.GPR* %537, i32 0, i32 33
  %539 = getelementptr inbounds %struct.Reg, %struct.Reg* %538, i32 0, i32 0
  %PC.i3063 = bitcast %union.anon* %539 to i64*
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %541 = getelementptr inbounds %struct.GPR, %struct.GPR* %540, i32 0, i32 5
  %542 = getelementptr inbounds %struct.Reg, %struct.Reg* %541, i32 0, i32 0
  %ECX.i3064 = bitcast %union.anon* %542 to i32*
  %543 = load i32, i32* %ECX.i3064
  %544 = zext i32 %543 to i64
  %545 = load i64, i64* %PC.i3063
  %546 = add i64 %545, 2
  store i64 %546, i64* %PC.i3063
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %548 = bitcast %union.anon* %547 to i32*
  %549 = load i32, i32* %548, align 8
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %552 = bitcast %union.anon* %551 to i32*
  %553 = load i32, i32* %552, align 8
  %554 = zext i32 %553 to i64
  %555 = shl i64 %544, 32
  %556 = ashr exact i64 %555, 32
  %557 = shl i64 %554, 32
  %558 = or i64 %557, %550
  %559 = sdiv i64 %558, %556
  %560 = shl i64 %559, 32
  %561 = ashr exact i64 %560, 32
  %562 = icmp eq i64 %559, %561
  br i1 %562, label %567, label %563

; <label>:563:                                    ; preds = %routine_idivl__ecx.exit3081
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %565 = load i64, i64* %564, align 8
  %566 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %565, %struct.Memory* %loadMem_40be50)
  br label %routine_idivl__ecx.exit3065

; <label>:567:                                    ; preds = %routine_idivl__ecx.exit3081
  %568 = srem i64 %558, %556
  %569 = getelementptr inbounds %union.anon, %union.anon* %547, i64 0, i32 0
  %570 = and i64 %559, 4294967295
  store i64 %570, i64* %569, align 8
  %571 = getelementptr inbounds %union.anon, %union.anon* %551, i64 0, i32 0
  %572 = and i64 %568, 4294967295
  store i64 %572, i64* %571, align 8
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %573, align 1
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %574, align 1
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %575, align 1
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %576, align 1
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %577, align 1
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %578, align 1
  br label %routine_idivl__ecx.exit3065

routine_idivl__ecx.exit3065:                      ; preds = %563, %567
  %579 = phi %struct.Memory* [ %566, %563 ], [ %loadMem_40be50, %567 ]
  store %struct.Memory* %579, %struct.Memory** %MEMORY
  %loadMem_40be52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 33
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %PC.i3060 = bitcast %union.anon* %582 to i64*
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 9
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %RSI.i3061 = bitcast %union.anon* %585 to i64*
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %587 = getelementptr inbounds %struct.GPR, %struct.GPR* %586, i32 0, i32 15
  %588 = getelementptr inbounds %struct.Reg, %struct.Reg* %587, i32 0, i32 0
  %RBP.i3062 = bitcast %union.anon* %588 to i64*
  %589 = load i64, i64* %RBP.i3062
  %590 = sub i64 %589, 304
  %591 = load i64, i64* %PC.i3060
  %592 = add i64 %591, 6
  store i64 %592, i64* %PC.i3060
  %593 = inttoptr i64 %590 to i32*
  %594 = load i32, i32* %593
  %595 = zext i32 %594 to i64
  store i64 %595, i64* %RSI.i3061, align 8
  store %struct.Memory* %loadMem_40be52, %struct.Memory** %MEMORY
  %loadMem_40be58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %597 = getelementptr inbounds %struct.GPR, %struct.GPR* %596, i32 0, i32 33
  %598 = getelementptr inbounds %struct.Reg, %struct.Reg* %597, i32 0, i32 0
  %PC.i3057 = bitcast %union.anon* %598 to i64*
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %600 = getelementptr inbounds %struct.GPR, %struct.GPR* %599, i32 0, i32 1
  %601 = getelementptr inbounds %struct.Reg, %struct.Reg* %600, i32 0, i32 0
  %EAX.i3058 = bitcast %union.anon* %601 to i32*
  %602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %603 = getelementptr inbounds %struct.GPR, %struct.GPR* %602, i32 0, i32 9
  %604 = getelementptr inbounds %struct.Reg, %struct.Reg* %603, i32 0, i32 0
  %RSI.i3059 = bitcast %union.anon* %604 to i64*
  %605 = load i64, i64* %RSI.i3059
  %606 = load i32, i32* %EAX.i3058
  %607 = zext i32 %606 to i64
  %608 = load i64, i64* %PC.i3057
  %609 = add i64 %608, 2
  store i64 %609, i64* %PC.i3057
  %610 = trunc i64 %605 to i32
  %611 = add i32 %606, %610
  %612 = zext i32 %611 to i64
  store i64 %612, i64* %RSI.i3059, align 8
  %613 = icmp ult i32 %611, %610
  %614 = icmp ult i32 %611, %606
  %615 = or i1 %613, %614
  %616 = zext i1 %615 to i8
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %616, i8* %617, align 1
  %618 = and i32 %611, 255
  %619 = call i32 @llvm.ctpop.i32(i32 %618)
  %620 = trunc i32 %619 to i8
  %621 = and i8 %620, 1
  %622 = xor i8 %621, 1
  %623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %622, i8* %623, align 1
  %624 = xor i64 %607, %605
  %625 = trunc i64 %624 to i32
  %626 = xor i32 %625, %611
  %627 = lshr i32 %626, 4
  %628 = trunc i32 %627 to i8
  %629 = and i8 %628, 1
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %629, i8* %630, align 1
  %631 = icmp eq i32 %611, 0
  %632 = zext i1 %631 to i8
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %632, i8* %633, align 1
  %634 = lshr i32 %611, 31
  %635 = trunc i32 %634 to i8
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %635, i8* %636, align 1
  %637 = lshr i32 %610, 31
  %638 = lshr i32 %606, 31
  %639 = xor i32 %634, %637
  %640 = xor i32 %634, %638
  %641 = add i32 %639, %640
  %642 = icmp eq i32 %641, 2
  %643 = zext i1 %642 to i8
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %643, i8* %644, align 1
  store %struct.Memory* %loadMem_40be58, %struct.Memory** %MEMORY
  %loadMem_40be5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %646 = getelementptr inbounds %struct.GPR, %struct.GPR* %645, i32 0, i32 33
  %647 = getelementptr inbounds %struct.Reg, %struct.Reg* %646, i32 0, i32 0
  %PC.i3054 = bitcast %union.anon* %647 to i64*
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 9
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %ESI.i3055 = bitcast %union.anon* %650 to i32*
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %652 = getelementptr inbounds %struct.GPR, %struct.GPR* %651, i32 0, i32 15
  %653 = getelementptr inbounds %struct.Reg, %struct.Reg* %652, i32 0, i32 0
  %RBP.i3056 = bitcast %union.anon* %653 to i64*
  %654 = load i64, i64* %RBP.i3056
  %655 = sub i64 %654, 220
  %656 = load i32, i32* %ESI.i3055
  %657 = zext i32 %656 to i64
  %658 = load i64, i64* %PC.i3054
  %659 = add i64 %658, 6
  store i64 %659, i64* %PC.i3054
  %660 = inttoptr i64 %655 to i32*
  store i32 %656, i32* %660
  store %struct.Memory* %loadMem_40be5a, %struct.Memory** %MEMORY
  %loadMem_40be60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 33
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %PC.i3051 = bitcast %union.anon* %663 to i64*
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 1
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %RAX.i3052 = bitcast %union.anon* %666 to i64*
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 15
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %RBP.i3053 = bitcast %union.anon* %669 to i64*
  %670 = load i64, i64* %RBP.i3053
  %671 = sub i64 %670, 216
  %672 = load i64, i64* %PC.i3051
  %673 = add i64 %672, 6
  store i64 %673, i64* %PC.i3051
  %674 = inttoptr i64 %671 to i32*
  %675 = load i32, i32* %674
  %676 = zext i32 %675 to i64
  store i64 %676, i64* %RAX.i3052, align 8
  store %struct.Memory* %loadMem_40be60, %struct.Memory** %MEMORY
  %loadMem_40be66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %678 = getelementptr inbounds %struct.GPR, %struct.GPR* %677, i32 0, i32 33
  %679 = getelementptr inbounds %struct.Reg, %struct.Reg* %678, i32 0, i32 0
  %PC.i3050 = bitcast %union.anon* %679 to i64*
  %680 = load i64, i64* %PC.i3050
  %681 = add i64 %680, 1
  store i64 %681, i64* %PC.i3050
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %684 = bitcast %union.anon* %683 to i32*
  %685 = load i32, i32* %684, align 8
  %686 = sext i32 %685 to i64
  %687 = lshr i64 %686, 32
  store i64 %687, i64* %682, align 8
  store %struct.Memory* %loadMem_40be66, %struct.Memory** %MEMORY
  %loadMem_40be67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 33
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %PC.i3044 = bitcast %union.anon* %690 to i64*
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %692 = getelementptr inbounds %struct.GPR, %struct.GPR* %691, i32 0, i32 5
  %693 = getelementptr inbounds %struct.Reg, %struct.Reg* %692, i32 0, i32 0
  %ECX.i3045 = bitcast %union.anon* %693 to i32*
  %694 = load i32, i32* %ECX.i3045
  %695 = zext i32 %694 to i64
  %696 = load i64, i64* %PC.i3044
  %697 = add i64 %696, 2
  store i64 %697, i64* %PC.i3044
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %699 = bitcast %union.anon* %698 to i32*
  %700 = load i32, i32* %699, align 8
  %701 = zext i32 %700 to i64
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %703 = bitcast %union.anon* %702 to i32*
  %704 = load i32, i32* %703, align 8
  %705 = zext i32 %704 to i64
  %706 = shl i64 %695, 32
  %707 = ashr exact i64 %706, 32
  %708 = shl i64 %705, 32
  %709 = or i64 %708, %701
  %710 = sdiv i64 %709, %707
  %711 = shl i64 %710, 32
  %712 = ashr exact i64 %711, 32
  %713 = icmp eq i64 %710, %712
  br i1 %713, label %718, label %714

; <label>:714:                                    ; preds = %routine_idivl__ecx.exit3065
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %716 = load i64, i64* %715, align 8
  %717 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %716, %struct.Memory* %loadMem_40be67)
  br label %routine_idivl__ecx.exit3046

; <label>:718:                                    ; preds = %routine_idivl__ecx.exit3065
  %719 = srem i64 %709, %707
  %720 = getelementptr inbounds %union.anon, %union.anon* %698, i64 0, i32 0
  %721 = and i64 %710, 4294967295
  store i64 %721, i64* %720, align 8
  %722 = getelementptr inbounds %union.anon, %union.anon* %702, i64 0, i32 0
  %723 = and i64 %719, 4294967295
  store i64 %723, i64* %722, align 8
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %724, align 1
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %725, align 1
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %726, align 1
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %727, align 1
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %728, align 1
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %729, align 1
  br label %routine_idivl__ecx.exit3046

routine_idivl__ecx.exit3046:                      ; preds = %714, %718
  %730 = phi %struct.Memory* [ %717, %714 ], [ %loadMem_40be67, %718 ]
  store %struct.Memory* %730, %struct.Memory** %MEMORY
  %loadMem_40be69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 33
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %PC.i3042 = bitcast %union.anon* %733 to i64*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 7
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %RDX.i3043 = bitcast %union.anon* %736 to i64*
  %737 = load i64, i64* %RDX.i3043
  %738 = load i64, i64* %PC.i3042
  %739 = add i64 %738, 2
  store i64 %739, i64* %PC.i3042
  %740 = trunc i64 %737 to i32
  %741 = shl i32 %740, 1
  %742 = icmp slt i32 %740, 0
  %743 = icmp slt i32 %741, 0
  %744 = xor i1 %742, %743
  %745 = zext i32 %741 to i64
  store i64 %745, i64* %RDX.i3043, align 8
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %747 = zext i1 %742 to i8
  store i8 %747, i8* %746, align 1
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %749 = and i32 %741, 254
  %750 = call i32 @llvm.ctpop.i32(i32 %749)
  %751 = trunc i32 %750 to i8
  %752 = and i8 %751, 1
  %753 = xor i8 %752, 1
  store i8 %753, i8* %748, align 1
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %754, align 1
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %756 = icmp eq i32 %741, 0
  %757 = zext i1 %756 to i8
  store i8 %757, i8* %755, align 1
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %759 = lshr i32 %741, 31
  %760 = trunc i32 %759 to i8
  store i8 %760, i8* %758, align 1
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %762 = zext i1 %744 to i8
  store i8 %762, i8* %761, align 1
  store %struct.Memory* %loadMem_40be69, %struct.Memory** %MEMORY
  %loadMem_40be6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %764 = getelementptr inbounds %struct.GPR, %struct.GPR* %763, i32 0, i32 33
  %765 = getelementptr inbounds %struct.Reg, %struct.Reg* %764, i32 0, i32 0
  %PC.i3039 = bitcast %union.anon* %765 to i64*
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %767 = getelementptr inbounds %struct.GPR, %struct.GPR* %766, i32 0, i32 9
  %768 = getelementptr inbounds %struct.Reg, %struct.Reg* %767, i32 0, i32 0
  %RSI.i3040 = bitcast %union.anon* %768 to i64*
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %770 = getelementptr inbounds %struct.GPR, %struct.GPR* %769, i32 0, i32 15
  %771 = getelementptr inbounds %struct.Reg, %struct.Reg* %770, i32 0, i32 0
  %RBP.i3041 = bitcast %union.anon* %771 to i64*
  %772 = load i64, i64* %RBP.i3041
  %773 = sub i64 %772, 212
  %774 = load i64, i64* %PC.i3039
  %775 = add i64 %774, 6
  store i64 %775, i64* %PC.i3039
  %776 = inttoptr i64 %773 to i32*
  %777 = load i32, i32* %776
  %778 = zext i32 %777 to i64
  store i64 %778, i64* %RSI.i3040, align 8
  store %struct.Memory* %loadMem_40be6c, %struct.Memory** %MEMORY
  %loadMem_40be72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %PC.i3036 = bitcast %union.anon* %781 to i64*
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 9
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %ESI.i3037 = bitcast %union.anon* %784 to i32*
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 1
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %RAX.i3038 = bitcast %union.anon* %787 to i64*
  %788 = load i32, i32* %ESI.i3037
  %789 = zext i32 %788 to i64
  %790 = load i64, i64* %PC.i3036
  %791 = add i64 %790, 2
  store i64 %791, i64* %PC.i3036
  %792 = and i64 %789, 4294967295
  store i64 %792, i64* %RAX.i3038, align 8
  store %struct.Memory* %loadMem_40be72, %struct.Memory** %MEMORY
  %loadMem_40be74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 33
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %PC.i3033 = bitcast %union.anon* %795 to i64*
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 7
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %EDX.i3034 = bitcast %union.anon* %798 to i32*
  %799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %800 = getelementptr inbounds %struct.GPR, %struct.GPR* %799, i32 0, i32 15
  %801 = getelementptr inbounds %struct.Reg, %struct.Reg* %800, i32 0, i32 0
  %RBP.i3035 = bitcast %union.anon* %801 to i64*
  %802 = load i64, i64* %RBP.i3035
  %803 = sub i64 %802, 308
  %804 = load i32, i32* %EDX.i3034
  %805 = zext i32 %804 to i64
  %806 = load i64, i64* %PC.i3033
  %807 = add i64 %806, 6
  store i64 %807, i64* %PC.i3033
  %808 = inttoptr i64 %803 to i32*
  store i32 %804, i32* %808
  store %struct.Memory* %loadMem_40be74, %struct.Memory** %MEMORY
  %loadMem_40be7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 33
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %PC.i3032 = bitcast %union.anon* %811 to i64*
  %812 = load i64, i64* %PC.i3032
  %813 = add i64 %812, 1
  store i64 %813, i64* %PC.i3032
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %816 = bitcast %union.anon* %815 to i32*
  %817 = load i32, i32* %816, align 8
  %818 = sext i32 %817 to i64
  %819 = lshr i64 %818, 32
  store i64 %819, i64* %814, align 8
  store %struct.Memory* %loadMem_40be7a, %struct.Memory** %MEMORY
  %loadMem_40be7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 33
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %PC.i3023 = bitcast %union.anon* %822 to i64*
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %824 = getelementptr inbounds %struct.GPR, %struct.GPR* %823, i32 0, i32 5
  %825 = getelementptr inbounds %struct.Reg, %struct.Reg* %824, i32 0, i32 0
  %ECX.i3024 = bitcast %union.anon* %825 to i32*
  %826 = load i32, i32* %ECX.i3024
  %827 = zext i32 %826 to i64
  %828 = load i64, i64* %PC.i3023
  %829 = add i64 %828, 2
  store i64 %829, i64* %PC.i3023
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %831 = bitcast %union.anon* %830 to i32*
  %832 = load i32, i32* %831, align 8
  %833 = zext i32 %832 to i64
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %835 = bitcast %union.anon* %834 to i32*
  %836 = load i32, i32* %835, align 8
  %837 = zext i32 %836 to i64
  %838 = shl i64 %827, 32
  %839 = ashr exact i64 %838, 32
  %840 = shl i64 %837, 32
  %841 = or i64 %840, %833
  %842 = sdiv i64 %841, %839
  %843 = shl i64 %842, 32
  %844 = ashr exact i64 %843, 32
  %845 = icmp eq i64 %842, %844
  br i1 %845, label %850, label %846

; <label>:846:                                    ; preds = %routine_idivl__ecx.exit3046
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %848 = load i64, i64* %847, align 8
  %849 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %848, %struct.Memory* %loadMem_40be7b)
  br label %routine_idivl__ecx.exit3025

; <label>:850:                                    ; preds = %routine_idivl__ecx.exit3046
  %851 = srem i64 %841, %839
  %852 = getelementptr inbounds %union.anon, %union.anon* %830, i64 0, i32 0
  %853 = and i64 %842, 4294967295
  store i64 %853, i64* %852, align 8
  %854 = getelementptr inbounds %union.anon, %union.anon* %834, i64 0, i32 0
  %855 = and i64 %851, 4294967295
  store i64 %855, i64* %854, align 8
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %856, align 1
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %857, align 1
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %858, align 1
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %859, align 1
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %860, align 1
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %861, align 1
  br label %routine_idivl__ecx.exit3025

routine_idivl__ecx.exit3025:                      ; preds = %846, %850
  %862 = phi %struct.Memory* [ %849, %846 ], [ %loadMem_40be7b, %850 ]
  store %struct.Memory* %862, %struct.Memory** %MEMORY
  %loadMem_40be7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 33
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %PC.i3020 = bitcast %union.anon* %865 to i64*
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 9
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %RSI.i3021 = bitcast %union.anon* %868 to i64*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 15
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %RBP.i3022 = bitcast %union.anon* %871 to i64*
  %872 = load i64, i64* %RBP.i3022
  %873 = sub i64 %872, 308
  %874 = load i64, i64* %PC.i3020
  %875 = add i64 %874, 6
  store i64 %875, i64* %PC.i3020
  %876 = inttoptr i64 %873 to i32*
  %877 = load i32, i32* %876
  %878 = zext i32 %877 to i64
  store i64 %878, i64* %RSI.i3021, align 8
  store %struct.Memory* %loadMem_40be7d, %struct.Memory** %MEMORY
  %loadMem_40be83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %880 = getelementptr inbounds %struct.GPR, %struct.GPR* %879, i32 0, i32 33
  %881 = getelementptr inbounds %struct.Reg, %struct.Reg* %880, i32 0, i32 0
  %PC.i3017 = bitcast %union.anon* %881 to i64*
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 7
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %EDX.i3018 = bitcast %union.anon* %884 to i32*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 9
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %RSI.i3019 = bitcast %union.anon* %887 to i64*
  %888 = load i64, i64* %RSI.i3019
  %889 = load i32, i32* %EDX.i3018
  %890 = zext i32 %889 to i64
  %891 = load i64, i64* %PC.i3017
  %892 = add i64 %891, 2
  store i64 %892, i64* %PC.i3017
  %893 = trunc i64 %888 to i32
  %894 = add i32 %889, %893
  %895 = zext i32 %894 to i64
  store i64 %895, i64* %RSI.i3019, align 8
  %896 = icmp ult i32 %894, %893
  %897 = icmp ult i32 %894, %889
  %898 = or i1 %896, %897
  %899 = zext i1 %898 to i8
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %899, i8* %900, align 1
  %901 = and i32 %894, 255
  %902 = call i32 @llvm.ctpop.i32(i32 %901)
  %903 = trunc i32 %902 to i8
  %904 = and i8 %903, 1
  %905 = xor i8 %904, 1
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %905, i8* %906, align 1
  %907 = xor i64 %890, %888
  %908 = trunc i64 %907 to i32
  %909 = xor i32 %908, %894
  %910 = lshr i32 %909, 4
  %911 = trunc i32 %910 to i8
  %912 = and i8 %911, 1
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %912, i8* %913, align 1
  %914 = icmp eq i32 %894, 0
  %915 = zext i1 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %915, i8* %916, align 1
  %917 = lshr i32 %894, 31
  %918 = trunc i32 %917 to i8
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %918, i8* %919, align 1
  %920 = lshr i32 %893, 31
  %921 = lshr i32 %889, 31
  %922 = xor i32 %917, %920
  %923 = xor i32 %917, %921
  %924 = add i32 %922, %923
  %925 = icmp eq i32 %924, 2
  %926 = zext i1 %925 to i8
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %926, i8* %927, align 1
  store %struct.Memory* %loadMem_40be83, %struct.Memory** %MEMORY
  %loadMem_40be85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %929 = getelementptr inbounds %struct.GPR, %struct.GPR* %928, i32 0, i32 33
  %930 = getelementptr inbounds %struct.Reg, %struct.Reg* %929, i32 0, i32 0
  %PC.i3014 = bitcast %union.anon* %930 to i64*
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %932 = getelementptr inbounds %struct.GPR, %struct.GPR* %931, i32 0, i32 9
  %933 = getelementptr inbounds %struct.Reg, %struct.Reg* %932, i32 0, i32 0
  %ESI.i3015 = bitcast %union.anon* %933 to i32*
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %935 = getelementptr inbounds %struct.GPR, %struct.GPR* %934, i32 0, i32 15
  %936 = getelementptr inbounds %struct.Reg, %struct.Reg* %935, i32 0, i32 0
  %RBP.i3016 = bitcast %union.anon* %936 to i64*
  %937 = load i64, i64* %RBP.i3016
  %938 = sub i64 %937, 224
  %939 = load i32, i32* %ESI.i3015
  %940 = zext i32 %939 to i64
  %941 = load i64, i64* %PC.i3014
  %942 = add i64 %941, 6
  store i64 %942, i64* %PC.i3014
  %943 = inttoptr i64 %938 to i32*
  store i32 %939, i32* %943
  store %struct.Memory* %loadMem_40be85, %struct.Memory** %MEMORY
  %loadMem_40be8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %945 = getelementptr inbounds %struct.GPR, %struct.GPR* %944, i32 0, i32 33
  %946 = getelementptr inbounds %struct.Reg, %struct.Reg* %945, i32 0, i32 0
  %PC.i3012 = bitcast %union.anon* %946 to i64*
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %948 = getelementptr inbounds %struct.GPR, %struct.GPR* %947, i32 0, i32 17
  %949 = getelementptr inbounds %struct.Reg, %struct.Reg* %948, i32 0, i32 0
  %R8.i3013 = bitcast %union.anon* %949 to i64*
  %950 = load i64, i64* %PC.i3012
  %951 = add i64 %950, 8
  store i64 %951, i64* %PC.i3012
  %952 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %952, i64* %R8.i3013, align 8
  store %struct.Memory* %loadMem_40be8b, %struct.Memory** %MEMORY
  %loadMem_40be93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %954 = getelementptr inbounds %struct.GPR, %struct.GPR* %953, i32 0, i32 33
  %955 = getelementptr inbounds %struct.Reg, %struct.Reg* %954, i32 0, i32 0
  %PC.i3010 = bitcast %union.anon* %955 to i64*
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 17
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %R8.i3011 = bitcast %union.anon* %958 to i64*
  %959 = load i64, i64* %R8.i3011
  %960 = add i64 %959, 14136
  %961 = load i64, i64* %PC.i3010
  %962 = add i64 %961, 7
  store i64 %962, i64* %PC.i3010
  %963 = inttoptr i64 %960 to i64*
  %964 = load i64, i64* %963
  store i64 %964, i64* %R8.i3011, align 8
  store %struct.Memory* %loadMem_40be93, %struct.Memory** %MEMORY
  %loadMem_40be9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 33
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %PC.i3007 = bitcast %union.anon* %967 to i64*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 15
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RBP.i3008 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 19
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %R9.i3009 = bitcast %union.anon* %973 to i64*
  %974 = load i64, i64* %RBP.i3008
  %975 = sub i64 %974, 220
  %976 = load i64, i64* %PC.i3007
  %977 = add i64 %976, 7
  store i64 %977, i64* %PC.i3007
  %978 = inttoptr i64 %975 to i32*
  %979 = load i32, i32* %978
  %980 = sext i32 %979 to i64
  store i64 %980, i64* %R9.i3009, align 8
  store %struct.Memory* %loadMem_40be9a, %struct.Memory** %MEMORY
  %loadMem_40bea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 33
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %PC.i3004 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 17
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %R8.i3005 = bitcast %union.anon* %986 to i64*
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 19
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %R9.i3006 = bitcast %union.anon* %989 to i64*
  %990 = load i64, i64* %R8.i3005
  %991 = load i64, i64* %R9.i3006
  %992 = mul i64 %991, 8
  %993 = add i64 %992, %990
  %994 = load i64, i64* %PC.i3004
  %995 = add i64 %994, 4
  store i64 %995, i64* %PC.i3004
  %996 = inttoptr i64 %993 to i64*
  %997 = load i64, i64* %996
  store i64 %997, i64* %R8.i3005, align 8
  store %struct.Memory* %loadMem_40bea1, %struct.Memory** %MEMORY
  %loadMem_40bea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %999 = getelementptr inbounds %struct.GPR, %struct.GPR* %998, i32 0, i32 33
  %1000 = getelementptr inbounds %struct.Reg, %struct.Reg* %999, i32 0, i32 0
  %PC.i3001 = bitcast %union.anon* %1000 to i64*
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1002 = getelementptr inbounds %struct.GPR, %struct.GPR* %1001, i32 0, i32 15
  %1003 = getelementptr inbounds %struct.Reg, %struct.Reg* %1002, i32 0, i32 0
  %RBP.i3002 = bitcast %union.anon* %1003 to i64*
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 19
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %R9.i3003 = bitcast %union.anon* %1006 to i64*
  %1007 = load i64, i64* %RBP.i3002
  %1008 = sub i64 %1007, 224
  %1009 = load i64, i64* %PC.i3001
  %1010 = add i64 %1009, 7
  store i64 %1010, i64* %PC.i3001
  %1011 = inttoptr i64 %1008 to i32*
  %1012 = load i32, i32* %1011
  %1013 = sext i32 %1012 to i64
  store i64 %1013, i64* %R9.i3003, align 8
  store %struct.Memory* %loadMem_40bea5, %struct.Memory** %MEMORY
  %loadMem_40beac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 33
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %PC.i2998 = bitcast %union.anon* %1016 to i64*
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 17
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %R8.i2999 = bitcast %union.anon* %1019 to i64*
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1021 = getelementptr inbounds %struct.GPR, %struct.GPR* %1020, i32 0, i32 19
  %1022 = getelementptr inbounds %struct.Reg, %struct.Reg* %1021, i32 0, i32 0
  %R9.i3000 = bitcast %union.anon* %1022 to i64*
  %1023 = load i64, i64* %R8.i2999
  %1024 = load i64, i64* %R9.i3000
  %1025 = mul i64 %1024, 8
  %1026 = add i64 %1025, %1023
  %1027 = load i64, i64* %PC.i2998
  %1028 = add i64 %1027, 4
  store i64 %1028, i64* %PC.i2998
  %1029 = inttoptr i64 %1026 to i64*
  %1030 = load i64, i64* %1029
  store i64 %1030, i64* %R8.i2999, align 8
  store %struct.Memory* %loadMem_40beac, %struct.Memory** %MEMORY
  %loadMem_40beb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 33
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %PC.i2996 = bitcast %union.anon* %1033 to i64*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1035 = getelementptr inbounds %struct.GPR, %struct.GPR* %1034, i32 0, i32 17
  %1036 = getelementptr inbounds %struct.Reg, %struct.Reg* %1035, i32 0, i32 0
  %R8.i2997 = bitcast %union.anon* %1036 to i64*
  %1037 = load i64, i64* %R8.i2997
  %1038 = load i64, i64* %PC.i2996
  %1039 = add i64 %1038, 3
  store i64 %1039, i64* %PC.i2996
  %1040 = inttoptr i64 %1037 to i64*
  %1041 = load i64, i64* %1040
  store i64 %1041, i64* %R8.i2997, align 8
  store %struct.Memory* %loadMem_40beb0, %struct.Memory** %MEMORY
  %loadMem_40beb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1043 = getelementptr inbounds %struct.GPR, %struct.GPR* %1042, i32 0, i32 33
  %1044 = getelementptr inbounds %struct.Reg, %struct.Reg* %1043, i32 0, i32 0
  %PC.i2993 = bitcast %union.anon* %1044 to i64*
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1046 = getelementptr inbounds %struct.GPR, %struct.GPR* %1045, i32 0, i32 15
  %1047 = getelementptr inbounds %struct.Reg, %struct.Reg* %1046, i32 0, i32 0
  %RBP.i2994 = bitcast %union.anon* %1047 to i64*
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 17
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %R8.i2995 = bitcast %union.anon* %1050 to i64*
  %1051 = load i64, i64* %RBP.i2994
  %1052 = sub i64 %1051, 232
  %1053 = load i64, i64* %R8.i2995
  %1054 = load i64, i64* %PC.i2993
  %1055 = add i64 %1054, 7
  store i64 %1055, i64* %PC.i2993
  %1056 = inttoptr i64 %1052 to i64*
  store i64 %1053, i64* %1056
  store %struct.Memory* %loadMem_40beb3, %struct.Memory** %MEMORY
  %loadMem_40beba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 33
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %PC.i2991 = bitcast %union.anon* %1059 to i64*
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 17
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %R8.i2992 = bitcast %union.anon* %1062 to i64*
  %1063 = load i64, i64* %PC.i2991
  %1064 = add i64 %1063, 8
  store i64 %1064, i64* %PC.i2991
  %1065 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1065, i64* %R8.i2992, align 8
  store %struct.Memory* %loadMem_40beba, %struct.Memory** %MEMORY
  %loadMem_40bec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1067 = getelementptr inbounds %struct.GPR, %struct.GPR* %1066, i32 0, i32 33
  %1068 = getelementptr inbounds %struct.Reg, %struct.Reg* %1067, i32 0, i32 0
  %PC.i2989 = bitcast %union.anon* %1068 to i64*
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 17
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %R8.i2990 = bitcast %union.anon* %1071 to i64*
  %1072 = load i64, i64* %R8.i2990
  %1073 = add i64 %1072, 14136
  %1074 = load i64, i64* %PC.i2989
  %1075 = add i64 %1074, 7
  store i64 %1075, i64* %PC.i2989
  %1076 = inttoptr i64 %1073 to i64*
  %1077 = load i64, i64* %1076
  store i64 %1077, i64* %R8.i2990, align 8
  store %struct.Memory* %loadMem_40bec2, %struct.Memory** %MEMORY
  %loadMem_40bec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i2986 = bitcast %union.anon* %1080 to i64*
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1082 = getelementptr inbounds %struct.GPR, %struct.GPR* %1081, i32 0, i32 15
  %1083 = getelementptr inbounds %struct.Reg, %struct.Reg* %1082, i32 0, i32 0
  %RBP.i2987 = bitcast %union.anon* %1083 to i64*
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 19
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %R9.i2988 = bitcast %union.anon* %1086 to i64*
  %1087 = load i64, i64* %RBP.i2987
  %1088 = sub i64 %1087, 220
  %1089 = load i64, i64* %PC.i2986
  %1090 = add i64 %1089, 7
  store i64 %1090, i64* %PC.i2986
  %1091 = inttoptr i64 %1088 to i32*
  %1092 = load i32, i32* %1091
  %1093 = sext i32 %1092 to i64
  store i64 %1093, i64* %R9.i2988, align 8
  store %struct.Memory* %loadMem_40bec9, %struct.Memory** %MEMORY
  %loadMem_40bed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 33
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %PC.i2983 = bitcast %union.anon* %1096 to i64*
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1098 = getelementptr inbounds %struct.GPR, %struct.GPR* %1097, i32 0, i32 17
  %1099 = getelementptr inbounds %struct.Reg, %struct.Reg* %1098, i32 0, i32 0
  %R8.i2984 = bitcast %union.anon* %1099 to i64*
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1101 = getelementptr inbounds %struct.GPR, %struct.GPR* %1100, i32 0, i32 19
  %1102 = getelementptr inbounds %struct.Reg, %struct.Reg* %1101, i32 0, i32 0
  %R9.i2985 = bitcast %union.anon* %1102 to i64*
  %1103 = load i64, i64* %R8.i2984
  %1104 = load i64, i64* %R9.i2985
  %1105 = mul i64 %1104, 8
  %1106 = add i64 %1105, %1103
  %1107 = load i64, i64* %PC.i2983
  %1108 = add i64 %1107, 4
  store i64 %1108, i64* %PC.i2983
  %1109 = inttoptr i64 %1106 to i64*
  %1110 = load i64, i64* %1109
  store i64 %1110, i64* %R8.i2984, align 8
  store %struct.Memory* %loadMem_40bed0, %struct.Memory** %MEMORY
  %loadMem_40bed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 33
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %PC.i2980 = bitcast %union.anon* %1113 to i64*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 15
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %RBP.i2981 = bitcast %union.anon* %1116 to i64*
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1118 = getelementptr inbounds %struct.GPR, %struct.GPR* %1117, i32 0, i32 19
  %1119 = getelementptr inbounds %struct.Reg, %struct.Reg* %1118, i32 0, i32 0
  %R9.i2982 = bitcast %union.anon* %1119 to i64*
  %1120 = load i64, i64* %RBP.i2981
  %1121 = sub i64 %1120, 224
  %1122 = load i64, i64* %PC.i2980
  %1123 = add i64 %1122, 7
  store i64 %1123, i64* %PC.i2980
  %1124 = inttoptr i64 %1121 to i32*
  %1125 = load i32, i32* %1124
  %1126 = sext i32 %1125 to i64
  store i64 %1126, i64* %R9.i2982, align 8
  store %struct.Memory* %loadMem_40bed4, %struct.Memory** %MEMORY
  %loadMem_40bedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 33
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %PC.i2977 = bitcast %union.anon* %1129 to i64*
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1131 = getelementptr inbounds %struct.GPR, %struct.GPR* %1130, i32 0, i32 17
  %1132 = getelementptr inbounds %struct.Reg, %struct.Reg* %1131, i32 0, i32 0
  %R8.i2978 = bitcast %union.anon* %1132 to i64*
  %1133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1134 = getelementptr inbounds %struct.GPR, %struct.GPR* %1133, i32 0, i32 19
  %1135 = getelementptr inbounds %struct.Reg, %struct.Reg* %1134, i32 0, i32 0
  %R9.i2979 = bitcast %union.anon* %1135 to i64*
  %1136 = load i64, i64* %R8.i2978
  %1137 = load i64, i64* %R9.i2979
  %1138 = mul i64 %1137, 8
  %1139 = add i64 %1138, %1136
  %1140 = load i64, i64* %PC.i2977
  %1141 = add i64 %1140, 4
  store i64 %1141, i64* %PC.i2977
  %1142 = inttoptr i64 %1139 to i64*
  %1143 = load i64, i64* %1142
  store i64 %1143, i64* %R8.i2978, align 8
  store %struct.Memory* %loadMem_40bedb, %struct.Memory** %MEMORY
  %loadMem_40bedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 33
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %PC.i2975 = bitcast %union.anon* %1146 to i64*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 17
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %R8.i2976 = bitcast %union.anon* %1149 to i64*
  %1150 = load i64, i64* %R8.i2976
  %1151 = add i64 %1150, 8
  %1152 = load i64, i64* %PC.i2975
  %1153 = add i64 %1152, 4
  store i64 %1153, i64* %PC.i2975
  %1154 = inttoptr i64 %1151 to i64*
  %1155 = load i64, i64* %1154
  store i64 %1155, i64* %R8.i2976, align 8
  store %struct.Memory* %loadMem_40bedf, %struct.Memory** %MEMORY
  %loadMem_40bee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 33
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %PC.i2972 = bitcast %union.anon* %1158 to i64*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 15
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %RBP.i2973 = bitcast %union.anon* %1161 to i64*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 17
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %R8.i2974 = bitcast %union.anon* %1164 to i64*
  %1165 = load i64, i64* %RBP.i2973
  %1166 = sub i64 %1165, 240
  %1167 = load i64, i64* %R8.i2974
  %1168 = load i64, i64* %PC.i2972
  %1169 = add i64 %1168, 7
  store i64 %1169, i64* %PC.i2972
  %1170 = inttoptr i64 %1166 to i64*
  store i64 %1167, i64* %1170
  store %struct.Memory* %loadMem_40bee3, %struct.Memory** %MEMORY
  %loadMem_40beea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 33
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %PC.i2970 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 17
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %R8.i2971 = bitcast %union.anon* %1176 to i64*
  %1177 = load i64, i64* %PC.i2970
  %1178 = add i64 %1177, 8
  store i64 %1178, i64* %PC.i2970
  %1179 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1179, i64* %R8.i2971, align 8
  store %struct.Memory* %loadMem_40beea, %struct.Memory** %MEMORY
  %loadMem_40bef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 33
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %PC.i2968 = bitcast %union.anon* %1182 to i64*
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 17
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %R8.i2969 = bitcast %union.anon* %1185 to i64*
  %1186 = load i64, i64* %R8.i2969
  %1187 = add i64 %1186, 14168
  %1188 = load i64, i64* %PC.i2968
  %1189 = add i64 %1188, 7
  store i64 %1189, i64* %PC.i2968
  %1190 = inttoptr i64 %1187 to i64*
  %1191 = load i64, i64* %1190
  store i64 %1191, i64* %R8.i2969, align 8
  store %struct.Memory* %loadMem_40bef2, %struct.Memory** %MEMORY
  %loadMem_40bef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 33
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %PC.i2966 = bitcast %union.anon* %1194 to i64*
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 19
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %R9.i2967 = bitcast %union.anon* %1197 to i64*
  %1198 = load i64, i64* %PC.i2966
  %1199 = add i64 %1198, 8
  store i64 %1199, i64* %PC.i2966
  %1200 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1200, i64* %R9.i2967, align 8
  store %struct.Memory* %loadMem_40bef9, %struct.Memory** %MEMORY
  %loadMem_40bf01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 33
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %PC.i2964 = bitcast %union.anon* %1203 to i64*
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 19
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %R9.i2965 = bitcast %union.anon* %1206 to i64*
  %1207 = load i64, i64* %R9.i2965
  %1208 = add i64 %1207, 12
  %1209 = load i64, i64* %PC.i2964
  %1210 = add i64 %1209, 4
  store i64 %1210, i64* %PC.i2964
  %1211 = inttoptr i64 %1208 to i32*
  %1212 = load i32, i32* %1211
  %1213 = sext i32 %1212 to i64
  store i64 %1213, i64* %R9.i2965, align 8
  store %struct.Memory* %loadMem_40bf01, %struct.Memory** %MEMORY
  %loadMem_40bf05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 33
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %PC.i2962 = bitcast %union.anon* %1216 to i64*
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 19
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %R9.i2963 = bitcast %union.anon* %1219 to i64*
  %1220 = load i64, i64* %R9.i2963
  %1221 = load i64, i64* %PC.i2962
  %1222 = add i64 %1221, 7
  store i64 %1222, i64* %PC.i2962
  %1223 = sext i64 %1220 to i128
  %1224 = and i128 %1223, -18446744073709551616
  %1225 = zext i64 %1220 to i128
  %1226 = or i128 %1224, %1225
  %1227 = mul i128 632, %1226
  %1228 = trunc i128 %1227 to i64
  store i64 %1228, i64* %R9.i2963, align 8
  %1229 = sext i64 %1228 to i128
  %1230 = icmp ne i128 %1229, %1227
  %1231 = zext i1 %1230 to i8
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1231, i8* %1232, align 1
  %1233 = trunc i128 %1227 to i32
  %1234 = and i32 %1233, 255
  %1235 = call i32 @llvm.ctpop.i32(i32 %1234)
  %1236 = trunc i32 %1235 to i8
  %1237 = and i8 %1236, 1
  %1238 = xor i8 %1237, 1
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1238, i8* %1239, align 1
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1240, align 1
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1241, align 1
  %1242 = lshr i64 %1228, 63
  %1243 = trunc i64 %1242 to i8
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1243, i8* %1244, align 1
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1231, i8* %1245, align 1
  store %struct.Memory* %loadMem_40bf05, %struct.Memory** %MEMORY
  %loadMem_40bf0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1247 = getelementptr inbounds %struct.GPR, %struct.GPR* %1246, i32 0, i32 33
  %1248 = getelementptr inbounds %struct.Reg, %struct.Reg* %1247, i32 0, i32 0
  %PC.i2959 = bitcast %union.anon* %1248 to i64*
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1250 = getelementptr inbounds %struct.GPR, %struct.GPR* %1249, i32 0, i32 17
  %1251 = getelementptr inbounds %struct.Reg, %struct.Reg* %1250, i32 0, i32 0
  %R8.i2960 = bitcast %union.anon* %1251 to i64*
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 19
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %R9.i2961 = bitcast %union.anon* %1254 to i64*
  %1255 = load i64, i64* %R8.i2960
  %1256 = load i64, i64* %R9.i2961
  %1257 = load i64, i64* %PC.i2959
  %1258 = add i64 %1257, 3
  store i64 %1258, i64* %PC.i2959
  %1259 = add i64 %1256, %1255
  store i64 %1259, i64* %R8.i2960, align 8
  %1260 = icmp ult i64 %1259, %1255
  %1261 = icmp ult i64 %1259, %1256
  %1262 = or i1 %1260, %1261
  %1263 = zext i1 %1262 to i8
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1263, i8* %1264, align 1
  %1265 = trunc i64 %1259 to i32
  %1266 = and i32 %1265, 255
  %1267 = call i32 @llvm.ctpop.i32(i32 %1266)
  %1268 = trunc i32 %1267 to i8
  %1269 = and i8 %1268, 1
  %1270 = xor i8 %1269, 1
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1270, i8* %1271, align 1
  %1272 = xor i64 %1256, %1255
  %1273 = xor i64 %1272, %1259
  %1274 = lshr i64 %1273, 4
  %1275 = trunc i64 %1274 to i8
  %1276 = and i8 %1275, 1
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1276, i8* %1277, align 1
  %1278 = icmp eq i64 %1259, 0
  %1279 = zext i1 %1278 to i8
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1279, i8* %1280, align 1
  %1281 = lshr i64 %1259, 63
  %1282 = trunc i64 %1281 to i8
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1282, i8* %1283, align 1
  %1284 = lshr i64 %1255, 63
  %1285 = lshr i64 %1256, 63
  %1286 = xor i64 %1281, %1284
  %1287 = xor i64 %1281, %1285
  %1288 = add i64 %1286, %1287
  %1289 = icmp eq i64 %1288, 2
  %1290 = zext i1 %1289 to i8
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1290, i8* %1291, align 1
  store %struct.Memory* %loadMem_40bf0c, %struct.Memory** %MEMORY
  %loadMem_40bf0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1293 = getelementptr inbounds %struct.GPR, %struct.GPR* %1292, i32 0, i32 33
  %1294 = getelementptr inbounds %struct.Reg, %struct.Reg* %1293, i32 0, i32 0
  %PC.i2956 = bitcast %union.anon* %1294 to i64*
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1296 = getelementptr inbounds %struct.GPR, %struct.GPR* %1295, i32 0, i32 15
  %1297 = getelementptr inbounds %struct.Reg, %struct.Reg* %1296, i32 0, i32 0
  %RBP.i2957 = bitcast %union.anon* %1297 to i64*
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 17
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %R8.i2958 = bitcast %union.anon* %1300 to i64*
  %1301 = load i64, i64* %RBP.i2957
  %1302 = sub i64 %1301, 248
  %1303 = load i64, i64* %R8.i2958
  %1304 = load i64, i64* %PC.i2956
  %1305 = add i64 %1304, 7
  store i64 %1305, i64* %PC.i2956
  %1306 = inttoptr i64 %1302 to i64*
  store i64 %1303, i64* %1306
  store %struct.Memory* %loadMem_40bf0f, %struct.Memory** %MEMORY
  %loadMem_40bf16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 33
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %PC.i2953 = bitcast %union.anon* %1309 to i64*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 15
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %RBP.i2954 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 17
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %R8.i2955 = bitcast %union.anon* %1315 to i64*
  %1316 = load i64, i64* %RBP.i2954
  %1317 = sub i64 %1316, 248
  %1318 = load i64, i64* %PC.i2953
  %1319 = add i64 %1318, 7
  store i64 %1319, i64* %PC.i2953
  %1320 = inttoptr i64 %1317 to i64*
  %1321 = load i64, i64* %1320
  store i64 %1321, i64* %R8.i2955, align 8
  store %struct.Memory* %loadMem_40bf16, %struct.Memory** %MEMORY
  %loadMem_40bf1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 33
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %PC.i2950 = bitcast %union.anon* %1324 to i64*
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1326 = getelementptr inbounds %struct.GPR, %struct.GPR* %1325, i32 0, i32 7
  %1327 = getelementptr inbounds %struct.Reg, %struct.Reg* %1326, i32 0, i32 0
  %RDX.i2951 = bitcast %union.anon* %1327 to i64*
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 17
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %R8.i2952 = bitcast %union.anon* %1330 to i64*
  %1331 = load i64, i64* %R8.i2952
  %1332 = add i64 %1331, 12
  %1333 = load i64, i64* %PC.i2950
  %1334 = add i64 %1333, 4
  store i64 %1334, i64* %PC.i2950
  %1335 = inttoptr i64 %1332 to i32*
  %1336 = load i32, i32* %1335
  %1337 = zext i32 %1336 to i64
  store i64 %1337, i64* %RDX.i2951, align 8
  store %struct.Memory* %loadMem_40bf1d, %struct.Memory** %MEMORY
  %loadMem_40bf21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 33
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %PC.i2948 = bitcast %union.anon* %1340 to i64*
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 7
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %RDX.i2949 = bitcast %union.anon* %1343 to i64*
  %1344 = load i64, i64* %RDX.i2949
  %1345 = load i64, i64* %PC.i2948
  %1346 = add i64 %1345, 3
  store i64 %1346, i64* %PC.i2948
  %1347 = trunc i64 %1344 to i32
  %1348 = sub i32 %1347, 12
  %1349 = zext i32 %1348 to i64
  store i64 %1349, i64* %RDX.i2949, align 8
  %1350 = icmp ult i32 %1347, 12
  %1351 = zext i1 %1350 to i8
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1351, i8* %1352, align 1
  %1353 = and i32 %1348, 255
  %1354 = call i32 @llvm.ctpop.i32(i32 %1353)
  %1355 = trunc i32 %1354 to i8
  %1356 = and i8 %1355, 1
  %1357 = xor i8 %1356, 1
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1357, i8* %1358, align 1
  %1359 = xor i64 12, %1344
  %1360 = trunc i64 %1359 to i32
  %1361 = xor i32 %1360, %1348
  %1362 = lshr i32 %1361, 4
  %1363 = trunc i32 %1362 to i8
  %1364 = and i8 %1363, 1
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1364, i8* %1365, align 1
  %1366 = icmp eq i32 %1348, 0
  %1367 = zext i1 %1366 to i8
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1367, i8* %1368, align 1
  %1369 = lshr i32 %1348, 31
  %1370 = trunc i32 %1369 to i8
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1370, i8* %1371, align 1
  %1372 = lshr i32 %1347, 31
  %1373 = xor i32 %1369, %1372
  %1374 = add i32 %1373, %1372
  %1375 = icmp eq i32 %1374, 2
  %1376 = zext i1 %1375 to i8
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1376, i8* %1377, align 1
  store %struct.Memory* %loadMem_40bf21, %struct.Memory** %MEMORY
  %loadMem_40bf24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1379 = getelementptr inbounds %struct.GPR, %struct.GPR* %1378, i32 0, i32 33
  %1380 = getelementptr inbounds %struct.Reg, %struct.Reg* %1379, i32 0, i32 0
  %PC.i2945 = bitcast %union.anon* %1380 to i64*
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 7
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %EDX.i2946 = bitcast %union.anon* %1383 to i32*
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1385 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1384, i64 0, i64 2
  %YMM2.i2947 = bitcast %union.VectorReg* %1385 to %"class.std::bitset"*
  %1386 = bitcast %"class.std::bitset"* %YMM2.i2947 to i8*
  %1387 = load i32, i32* %EDX.i2946
  %1388 = zext i32 %1387 to i64
  %1389 = load i64, i64* %PC.i2945
  %1390 = add i64 %1389, 4
  store i64 %1390, i64* %PC.i2945
  %1391 = sitofp i32 %1387 to double
  %1392 = bitcast i8* %1386 to double*
  store double %1391, double* %1392, align 1
  store %struct.Memory* %loadMem_40bf24, %struct.Memory** %MEMORY
  %loadMem_40bf28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1394 = getelementptr inbounds %struct.GPR, %struct.GPR* %1393, i32 0, i32 33
  %1395 = getelementptr inbounds %struct.Reg, %struct.Reg* %1394, i32 0, i32 0
  %PC.i2942 = bitcast %union.anon* %1395 to i64*
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1396, i64 0, i64 2
  %YMM2.i2943 = bitcast %union.VectorReg* %1397 to %"class.std::bitset"*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1398, i64 0, i64 1
  %XMM1.i2944 = bitcast %union.VectorReg* %1399 to %union.vec128_t*
  %1400 = bitcast %"class.std::bitset"* %YMM2.i2943 to i8*
  %1401 = bitcast %"class.std::bitset"* %YMM2.i2943 to i8*
  %1402 = bitcast %union.vec128_t* %XMM1.i2944 to i8*
  %1403 = load i64, i64* %PC.i2942
  %1404 = add i64 %1403, 4
  store i64 %1404, i64* %PC.i2942
  %1405 = bitcast i8* %1401 to double*
  %1406 = load double, double* %1405, align 1
  %1407 = getelementptr inbounds i8, i8* %1401, i64 8
  %1408 = bitcast i8* %1407 to i64*
  %1409 = load i64, i64* %1408, align 1
  %1410 = bitcast i8* %1402 to double*
  %1411 = load double, double* %1410, align 1
  %1412 = fdiv double %1406, %1411
  %1413 = bitcast i8* %1400 to double*
  store double %1412, double* %1413, align 1
  %1414 = getelementptr inbounds i8, i8* %1400, i64 8
  %1415 = bitcast i8* %1414 to i64*
  store i64 %1409, i64* %1415, align 1
  store %struct.Memory* %loadMem_40bf28, %struct.Memory** %MEMORY
  %loadMem_40bf2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1417 = getelementptr inbounds %struct.GPR, %struct.GPR* %1416, i32 0, i32 33
  %1418 = getelementptr inbounds %struct.Reg, %struct.Reg* %1417, i32 0, i32 0
  %PC.i2939 = bitcast %union.anon* %1418 to i64*
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1419, i64 0, i64 1
  %YMM1.i2940 = bitcast %union.VectorReg* %1420 to %"class.std::bitset"*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1422 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1421, i64 0, i64 2
  %XMM2.i2941 = bitcast %union.VectorReg* %1422 to %union.vec128_t*
  %1423 = bitcast %"class.std::bitset"* %YMM1.i2940 to i8*
  %1424 = bitcast %union.vec128_t* %XMM2.i2941 to i8*
  %1425 = load i64, i64* %PC.i2939
  %1426 = add i64 %1425, 3
  store i64 %1426, i64* %PC.i2939
  %1427 = bitcast i8* %1424 to <2 x i32>*
  %1428 = load <2 x i32>, <2 x i32>* %1427, align 1
  %1429 = getelementptr inbounds i8, i8* %1424, i64 8
  %1430 = bitcast i8* %1429 to <2 x i32>*
  %1431 = load <2 x i32>, <2 x i32>* %1430, align 1
  %1432 = extractelement <2 x i32> %1428, i32 0
  %1433 = bitcast i8* %1423 to i32*
  store i32 %1432, i32* %1433, align 1
  %1434 = extractelement <2 x i32> %1428, i32 1
  %1435 = getelementptr inbounds i8, i8* %1423, i64 4
  %1436 = bitcast i8* %1435 to i32*
  store i32 %1434, i32* %1436, align 1
  %1437 = extractelement <2 x i32> %1431, i32 0
  %1438 = getelementptr inbounds i8, i8* %1423, i64 8
  %1439 = bitcast i8* %1438 to i32*
  store i32 %1437, i32* %1439, align 1
  %1440 = extractelement <2 x i32> %1431, i32 1
  %1441 = getelementptr inbounds i8, i8* %1423, i64 12
  %1442 = bitcast i8* %1441 to i32*
  store i32 %1440, i32* %1442, align 1
  store %struct.Memory* %loadMem_40bf2c, %struct.Memory** %MEMORY
  %loadMem1_40bf2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 33
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %PC.i2938 = bitcast %union.anon* %1445 to i64*
  %1446 = load i64, i64* %PC.i2938
  %1447 = add i64 %1446, -44719
  %1448 = load i64, i64* %PC.i2938
  %1449 = add i64 %1448, 5
  %1450 = load i64, i64* %PC.i2938
  %1451 = add i64 %1450, 5
  store i64 %1451, i64* %PC.i2938
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1453 = load i64, i64* %1452, align 8
  %1454 = add i64 %1453, -8
  %1455 = inttoptr i64 %1454 to i64*
  store i64 %1449, i64* %1455
  store i64 %1454, i64* %1452, align 8
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1447, i64* %1456, align 8
  store %struct.Memory* %loadMem1_40bf2f, %struct.Memory** %MEMORY
  %loadMem2_40bf2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40bf2f = load i64, i64* %3
  %1457 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %loadMem2_40bf2f)
  store %struct.Memory* %1457, %struct.Memory** %MEMORY
  %loadMem_40bf34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 33
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %PC.i2935 = bitcast %union.anon* %1460 to i64*
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 5
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %RCX.i2936 = bitcast %union.anon* %1463 to i64*
  %1464 = load i64, i64* %PC.i2935
  %1465 = add i64 %1464, 5
  store i64 %1465, i64* %PC.i2935
  store i64 2, i64* %RCX.i2936, align 8
  store %struct.Memory* %loadMem_40bf34, %struct.Memory** %MEMORY
  %loadMem_40bf39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 33
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %PC.i2933 = bitcast %union.anon* %1468 to i64*
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1470 = getelementptr inbounds %struct.GPR, %struct.GPR* %1469, i32 0, i32 7
  %1471 = getelementptr inbounds %struct.Reg, %struct.Reg* %1470, i32 0, i32 0
  %RDX.i2934 = bitcast %union.anon* %1471 to i64*
  %1472 = load i64, i64* %PC.i2933
  %1473 = add i64 %1472, 5
  store i64 %1473, i64* %PC.i2933
  store i64 1, i64* %RDX.i2934, align 8
  store %struct.Memory* %loadMem_40bf39, %struct.Memory** %MEMORY
  %loadMem_40bf3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 33
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %PC.i2931 = bitcast %union.anon* %1476 to i64*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 9
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %RSI.i2932 = bitcast %union.anon* %1479 to i64*
  %1480 = load i64, i64* %PC.i2931
  %1481 = add i64 %1480, 5
  store i64 %1481, i64* %PC.i2931
  store i64 6, i64* %RSI.i2932, align 8
  store %struct.Memory* %loadMem_40bf3e, %struct.Memory** %MEMORY
  %loadMem_40bf43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 33
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %PC.i2929 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1486 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1485, i64 0, i64 1
  %YMM1.i2930 = bitcast %union.VectorReg* %1486 to %"class.std::bitset"*
  %1487 = bitcast %"class.std::bitset"* %YMM1.i2930 to i8*
  %1488 = load i64, i64* %PC.i2929
  %1489 = add i64 %1488, ptrtoint (%G_0xa58ed__rip__type* @G_0xa58ed__rip_ to i64)
  %1490 = load i64, i64* %PC.i2929
  %1491 = add i64 %1490, 8
  store i64 %1491, i64* %PC.i2929
  %1492 = inttoptr i64 %1489 to double*
  %1493 = load double, double* %1492
  %1494 = bitcast i8* %1487 to double*
  store double %1493, double* %1494, align 1
  %1495 = getelementptr inbounds i8, i8* %1487, i64 8
  %1496 = bitcast i8* %1495 to double*
  store double 0.000000e+00, double* %1496, align 1
  store %struct.Memory* %loadMem_40bf43, %struct.Memory** %MEMORY
  %loadMem_40bf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 33
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %PC.i2927 = bitcast %union.anon* %1499 to i64*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1501 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1500, i64 0, i64 2
  %YMM2.i2928 = bitcast %union.VectorReg* %1501 to %"class.std::bitset"*
  %1502 = bitcast %"class.std::bitset"* %YMM2.i2928 to i8*
  %1503 = load i64, i64* %PC.i2927
  %1504 = add i64 %1503, ptrtoint (%G_0xa58ed__rip__type* @G_0xa58ed__rip_ to i64)
  %1505 = load i64, i64* %PC.i2927
  %1506 = add i64 %1505, 8
  store i64 %1506, i64* %PC.i2927
  %1507 = inttoptr i64 %1504 to double*
  %1508 = load double, double* %1507
  %1509 = bitcast i8* %1502 to double*
  store double %1508, double* %1509, align 1
  %1510 = getelementptr inbounds i8, i8* %1502, i64 8
  %1511 = bitcast i8* %1510 to double*
  store double 0.000000e+00, double* %1511, align 1
  store %struct.Memory* %loadMem_40bf4b, %struct.Memory** %MEMORY
  %loadMem_40bf53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1513 = getelementptr inbounds %struct.GPR, %struct.GPR* %1512, i32 0, i32 33
  %1514 = getelementptr inbounds %struct.Reg, %struct.Reg* %1513, i32 0, i32 0
  %PC.i2924 = bitcast %union.anon* %1514 to i64*
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1516 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1515, i64 0, i64 2
  %YMM2.i2925 = bitcast %union.VectorReg* %1516 to %"class.std::bitset"*
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1518 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1517, i64 0, i64 0
  %XMM0.i2926 = bitcast %union.VectorReg* %1518 to %union.vec128_t*
  %1519 = bitcast %"class.std::bitset"* %YMM2.i2925 to i8*
  %1520 = bitcast %"class.std::bitset"* %YMM2.i2925 to i8*
  %1521 = bitcast %union.vec128_t* %XMM0.i2926 to i8*
  %1522 = load i64, i64* %PC.i2924
  %1523 = add i64 %1522, 4
  store i64 %1523, i64* %PC.i2924
  %1524 = bitcast i8* %1520 to double*
  %1525 = load double, double* %1524, align 1
  %1526 = getelementptr inbounds i8, i8* %1520, i64 8
  %1527 = bitcast i8* %1526 to i64*
  %1528 = load i64, i64* %1527, align 1
  %1529 = bitcast i8* %1521 to double*
  %1530 = load double, double* %1529, align 1
  %1531 = fmul double %1525, %1530
  %1532 = bitcast i8* %1519 to double*
  store double %1531, double* %1532, align 1
  %1533 = getelementptr inbounds i8, i8* %1519, i64 8
  %1534 = bitcast i8* %1533 to i64*
  store i64 %1528, i64* %1534, align 1
  store %struct.Memory* %loadMem_40bf53, %struct.Memory** %MEMORY
  %loadMem_40bf57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 33
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %PC.i2921 = bitcast %union.anon* %1537 to i64*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1539 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1538, i64 0, i64 2
  %YMM2.i2922 = bitcast %union.VectorReg* %1539 to %"class.std::bitset"*
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1541 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1540, i64 0, i64 1
  %XMM1.i2923 = bitcast %union.VectorReg* %1541 to %union.vec128_t*
  %1542 = bitcast %"class.std::bitset"* %YMM2.i2922 to i8*
  %1543 = bitcast %"class.std::bitset"* %YMM2.i2922 to i8*
  %1544 = bitcast %union.vec128_t* %XMM1.i2923 to i8*
  %1545 = load i64, i64* %PC.i2921
  %1546 = add i64 %1545, 4
  store i64 %1546, i64* %PC.i2921
  %1547 = bitcast i8* %1543 to double*
  %1548 = load double, double* %1547, align 1
  %1549 = getelementptr inbounds i8, i8* %1543, i64 8
  %1550 = bitcast i8* %1549 to i64*
  %1551 = load i64, i64* %1550, align 1
  %1552 = bitcast i8* %1544 to double*
  %1553 = load double, double* %1552, align 1
  %1554 = fmul double %1548, %1553
  %1555 = bitcast i8* %1542 to double*
  store double %1554, double* %1555, align 1
  %1556 = getelementptr inbounds i8, i8* %1542, i64 8
  %1557 = bitcast i8* %1556 to i64*
  store i64 %1551, i64* %1557, align 1
  store %struct.Memory* %loadMem_40bf57, %struct.Memory** %MEMORY
  %loadMem_40bf5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1559 = getelementptr inbounds %struct.GPR, %struct.GPR* %1558, i32 0, i32 33
  %1560 = getelementptr inbounds %struct.Reg, %struct.Reg* %1559, i32 0, i32 0
  %PC.i2918 = bitcast %union.anon* %1560 to i64*
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 15
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %RBP.i2919 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1565 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1564, i64 0, i64 2
  %XMM2.i2920 = bitcast %union.VectorReg* %1565 to %union.vec128_t*
  %1566 = load i64, i64* %RBP.i2919
  %1567 = sub i64 %1566, 296
  %1568 = bitcast %union.vec128_t* %XMM2.i2920 to i8*
  %1569 = load i64, i64* %PC.i2918
  %1570 = add i64 %1569, 8
  store i64 %1570, i64* %PC.i2918
  %1571 = bitcast i8* %1568 to double*
  %1572 = load double, double* %1571, align 1
  %1573 = inttoptr i64 %1567 to double*
  store double %1572, double* %1573
  store %struct.Memory* %loadMem_40bf5b, %struct.Memory** %MEMORY
  %loadMem_40bf63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 33
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %PC.i2915 = bitcast %union.anon* %1576 to i64*
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 15
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %RBP.i2916 = bitcast %union.anon* %1579 to i64*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 17
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %R8.i2917 = bitcast %union.anon* %1582 to i64*
  %1583 = load i64, i64* %RBP.i2916
  %1584 = sub i64 %1583, 248
  %1585 = load i64, i64* %PC.i2915
  %1586 = add i64 %1585, 7
  store i64 %1586, i64* %PC.i2915
  %1587 = inttoptr i64 %1584 to i64*
  %1588 = load i64, i64* %1587
  store i64 %1588, i64* %R8.i2917, align 8
  store %struct.Memory* %loadMem_40bf63, %struct.Memory** %MEMORY
  %loadMem_40bf6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1590 = getelementptr inbounds %struct.GPR, %struct.GPR* %1589, i32 0, i32 33
  %1591 = getelementptr inbounds %struct.Reg, %struct.Reg* %1590, i32 0, i32 0
  %PC.i2912 = bitcast %union.anon* %1591 to i64*
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1593 = getelementptr inbounds %struct.GPR, %struct.GPR* %1592, i32 0, i32 11
  %1594 = getelementptr inbounds %struct.Reg, %struct.Reg* %1593, i32 0, i32 0
  %RDI.i2913 = bitcast %union.anon* %1594 to i64*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1596 = getelementptr inbounds %struct.GPR, %struct.GPR* %1595, i32 0, i32 17
  %1597 = getelementptr inbounds %struct.Reg, %struct.Reg* %1596, i32 0, i32 0
  %R8.i2914 = bitcast %union.anon* %1597 to i64*
  %1598 = load i64, i64* %R8.i2914
  %1599 = add i64 %1598, 12
  %1600 = load i64, i64* %PC.i2912
  %1601 = add i64 %1600, 4
  store i64 %1601, i64* %PC.i2912
  %1602 = inttoptr i64 %1599 to i32*
  %1603 = load i32, i32* %1602
  %1604 = zext i32 %1603 to i64
  store i64 %1604, i64* %RDI.i2913, align 8
  store %struct.Memory* %loadMem_40bf6a, %struct.Memory** %MEMORY
  %loadMem_40bf6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i2910 = bitcast %union.anon* %1607 to i64*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 11
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %RDI.i2911 = bitcast %union.anon* %1610 to i64*
  %1611 = load i64, i64* %RDI.i2911
  %1612 = load i64, i64* %PC.i2910
  %1613 = add i64 %1612, 3
  store i64 %1613, i64* %PC.i2910
  %1614 = trunc i64 %1611 to i32
  %1615 = zext i32 %1614 to i64
  store i64 %1615, i64* %RDI.i2911, align 8
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1616, align 1
  %1617 = and i32 %1614, 255
  %1618 = call i32 @llvm.ctpop.i32(i32 %1617)
  %1619 = trunc i32 %1618 to i8
  %1620 = and i8 %1619, 1
  %1621 = xor i8 %1620, 1
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1621, i8* %1622, align 1
  %1623 = trunc i64 %1611 to i32
  %1624 = xor i32 %1623, %1614
  %1625 = lshr i32 %1624, 4
  %1626 = trunc i32 %1625 to i8
  %1627 = and i8 %1626, 1
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1627, i8* %1628, align 1
  %1629 = icmp eq i32 %1614, 0
  %1630 = zext i1 %1629 to i8
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1630, i8* %1631, align 1
  %1632 = lshr i32 %1614, 31
  %1633 = trunc i32 %1632 to i8
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1633, i8* %1634, align 1
  %1635 = lshr i32 %1614, 31
  %1636 = xor i32 %1632, %1635
  %1637 = add i32 %1636, %1635
  %1638 = icmp eq i32 %1637, 2
  %1639 = zext i1 %1638 to i8
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1639, i8* %1640, align 1
  store %struct.Memory* %loadMem_40bf6e, %struct.Memory** %MEMORY
  %loadMem_40bf71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1642 = getelementptr inbounds %struct.GPR, %struct.GPR* %1641, i32 0, i32 33
  %1643 = getelementptr inbounds %struct.Reg, %struct.Reg* %1642, i32 0, i32 0
  %PC.i2907 = bitcast %union.anon* %1643 to i64*
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1645 = getelementptr inbounds %struct.GPR, %struct.GPR* %1644, i32 0, i32 11
  %1646 = getelementptr inbounds %struct.Reg, %struct.Reg* %1645, i32 0, i32 0
  %EDI.i2908 = bitcast %union.anon* %1646 to i32*
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 1
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %RAX.i2909 = bitcast %union.anon* %1649 to i64*
  %1650 = load i32, i32* %EDI.i2908
  %1651 = zext i32 %1650 to i64
  %1652 = load i64, i64* %PC.i2907
  %1653 = add i64 %1652, 2
  store i64 %1653, i64* %PC.i2907
  %1654 = and i64 %1651, 4294967295
  store i64 %1654, i64* %RAX.i2909, align 8
  store %struct.Memory* %loadMem_40bf71, %struct.Memory** %MEMORY
  %loadMem_40bf73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 33
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %PC.i2904 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 7
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %EDX.i2905 = bitcast %union.anon* %1660 to i32*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 15
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RBP.i2906 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RBP.i2906
  %1665 = sub i64 %1664, 312
  %1666 = load i32, i32* %EDX.i2905
  %1667 = zext i32 %1666 to i64
  %1668 = load i64, i64* %PC.i2904
  %1669 = add i64 %1668, 6
  store i64 %1669, i64* %PC.i2904
  %1670 = inttoptr i64 %1665 to i32*
  store i32 %1666, i32* %1670
  store %struct.Memory* %loadMem_40bf73, %struct.Memory** %MEMORY
  %loadMem_40bf79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 33
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %PC.i2903 = bitcast %union.anon* %1673 to i64*
  %1674 = load i64, i64* %PC.i2903
  %1675 = add i64 %1674, 1
  store i64 %1675, i64* %PC.i2903
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1678 = bitcast %union.anon* %1677 to i32*
  %1679 = load i32, i32* %1678, align 8
  %1680 = sext i32 %1679 to i64
  %1681 = lshr i64 %1680, 32
  store i64 %1681, i64* %1676, align 8
  store %struct.Memory* %loadMem_40bf79, %struct.Memory** %MEMORY
  %loadMem_40bf7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1683 = getelementptr inbounds %struct.GPR, %struct.GPR* %1682, i32 0, i32 33
  %1684 = getelementptr inbounds %struct.Reg, %struct.Reg* %1683, i32 0, i32 0
  %PC.i2897 = bitcast %union.anon* %1684 to i64*
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1686 = getelementptr inbounds %struct.GPR, %struct.GPR* %1685, i32 0, i32 9
  %1687 = getelementptr inbounds %struct.Reg, %struct.Reg* %1686, i32 0, i32 0
  %ESI.i2898 = bitcast %union.anon* %1687 to i32*
  %1688 = load i32, i32* %ESI.i2898
  %1689 = zext i32 %1688 to i64
  %1690 = load i64, i64* %PC.i2897
  %1691 = add i64 %1690, 2
  store i64 %1691, i64* %PC.i2897
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1693 = bitcast %union.anon* %1692 to i32*
  %1694 = load i32, i32* %1693, align 8
  %1695 = zext i32 %1694 to i64
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1697 = bitcast %union.anon* %1696 to i32*
  %1698 = load i32, i32* %1697, align 8
  %1699 = zext i32 %1698 to i64
  %1700 = shl i64 %1689, 32
  %1701 = ashr exact i64 %1700, 32
  %1702 = shl i64 %1699, 32
  %1703 = or i64 %1702, %1695
  %1704 = sdiv i64 %1703, %1701
  %1705 = shl i64 %1704, 32
  %1706 = ashr exact i64 %1705, 32
  %1707 = icmp eq i64 %1704, %1706
  br i1 %1707, label %1712, label %1708

; <label>:1708:                                   ; preds = %routine_idivl__ecx.exit3025
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1710 = load i64, i64* %1709, align 8
  %1711 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1710, %struct.Memory* %loadMem_40bf7a)
  br label %routine_idivl__esi.exit2899

; <label>:1712:                                   ; preds = %routine_idivl__ecx.exit3025
  %1713 = srem i64 %1703, %1701
  %1714 = getelementptr inbounds %union.anon, %union.anon* %1692, i64 0, i32 0
  %1715 = and i64 %1704, 4294967295
  store i64 %1715, i64* %1714, align 8
  %1716 = getelementptr inbounds %union.anon, %union.anon* %1696, i64 0, i32 0
  %1717 = and i64 %1713, 4294967295
  store i64 %1717, i64* %1716, align 8
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1718, align 1
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1719, align 1
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1720, align 1
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1721, align 1
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1722, align 1
  %1723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1723, align 1
  br label %routine_idivl__esi.exit2899

routine_idivl__esi.exit2899:                      ; preds = %1708, %1712
  %1724 = phi %struct.Memory* [ %1711, %1708 ], [ %loadMem_40bf7a, %1712 ]
  store %struct.Memory* %1724, %struct.Memory** %MEMORY
  %loadMem_40bf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 33
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %PC.i2894 = bitcast %union.anon* %1727 to i64*
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 1
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %EAX.i2895 = bitcast %union.anon* %1730 to i32*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 15
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %RBP.i2896 = bitcast %union.anon* %1733 to i64*
  %1734 = load i64, i64* %RBP.i2896
  %1735 = sub i64 %1734, 188
  %1736 = load i32, i32* %EAX.i2895
  %1737 = zext i32 %1736 to i64
  %1738 = load i64, i64* %PC.i2894
  %1739 = add i64 %1738, 6
  store i64 %1739, i64* %PC.i2894
  %1740 = inttoptr i64 %1735 to i32*
  store i32 %1736, i32* %1740
  store %struct.Memory* %loadMem_40bf7c, %struct.Memory** %MEMORY
  %loadMem_40bf82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1742 = getelementptr inbounds %struct.GPR, %struct.GPR* %1741, i32 0, i32 33
  %1743 = getelementptr inbounds %struct.Reg, %struct.Reg* %1742, i32 0, i32 0
  %PC.i2891 = bitcast %union.anon* %1743 to i64*
  %1744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1745 = getelementptr inbounds %struct.GPR, %struct.GPR* %1744, i32 0, i32 15
  %1746 = getelementptr inbounds %struct.Reg, %struct.Reg* %1745, i32 0, i32 0
  %RBP.i2892 = bitcast %union.anon* %1746 to i64*
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 17
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %R8.i2893 = bitcast %union.anon* %1749 to i64*
  %1750 = load i64, i64* %RBP.i2892
  %1751 = sub i64 %1750, 248
  %1752 = load i64, i64* %PC.i2891
  %1753 = add i64 %1752, 7
  store i64 %1753, i64* %PC.i2891
  %1754 = inttoptr i64 %1751 to i64*
  %1755 = load i64, i64* %1754
  store i64 %1755, i64* %R8.i2893, align 8
  store %struct.Memory* %loadMem_40bf82, %struct.Memory** %MEMORY
  %loadMem_40bf89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 33
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %PC.i2888 = bitcast %union.anon* %1758 to i64*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 1
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %RAX.i2889 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 17
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %R8.i2890 = bitcast %union.anon* %1764 to i64*
  %1765 = load i64, i64* %R8.i2890
  %1766 = add i64 %1765, 12
  %1767 = load i64, i64* %PC.i2888
  %1768 = add i64 %1767, 4
  store i64 %1768, i64* %PC.i2888
  %1769 = inttoptr i64 %1766 to i32*
  %1770 = load i32, i32* %1769
  %1771 = zext i32 %1770 to i64
  store i64 %1771, i64* %RAX.i2889, align 8
  store %struct.Memory* %loadMem_40bf89, %struct.Memory** %MEMORY
  %loadMem_40bf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1773 = getelementptr inbounds %struct.GPR, %struct.GPR* %1772, i32 0, i32 33
  %1774 = getelementptr inbounds %struct.Reg, %struct.Reg* %1773, i32 0, i32 0
  %PC.i2886 = bitcast %union.anon* %1774 to i64*
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 1
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %RAX.i2887 = bitcast %union.anon* %1777 to i64*
  %1778 = load i64, i64* %RAX.i2887
  %1779 = load i64, i64* %PC.i2886
  %1780 = add i64 %1779, 3
  store i64 %1780, i64* %PC.i2886
  %1781 = trunc i64 %1778 to i32
  %1782 = zext i32 %1781 to i64
  store i64 %1782, i64* %RAX.i2887, align 8
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1783, align 1
  %1784 = and i32 %1781, 255
  %1785 = call i32 @llvm.ctpop.i32(i32 %1784)
  %1786 = trunc i32 %1785 to i8
  %1787 = and i8 %1786, 1
  %1788 = xor i8 %1787, 1
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1788, i8* %1789, align 1
  %1790 = trunc i64 %1778 to i32
  %1791 = xor i32 %1790, %1781
  %1792 = lshr i32 %1791, 4
  %1793 = trunc i32 %1792 to i8
  %1794 = and i8 %1793, 1
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1794, i8* %1795, align 1
  %1796 = icmp eq i32 %1781, 0
  %1797 = zext i1 %1796 to i8
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1797, i8* %1798, align 1
  %1799 = lshr i32 %1781, 31
  %1800 = trunc i32 %1799 to i8
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1800, i8* %1801, align 1
  %1802 = lshr i32 %1781, 31
  %1803 = xor i32 %1799, %1802
  %1804 = add i32 %1803, %1802
  %1805 = icmp eq i32 %1804, 2
  %1806 = zext i1 %1805 to i8
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1806, i8* %1807, align 1
  store %struct.Memory* %loadMem_40bf8d, %struct.Memory** %MEMORY
  %loadMem_40bf90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 33
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %PC.i2885 = bitcast %union.anon* %1810 to i64*
  %1811 = load i64, i64* %PC.i2885
  %1812 = add i64 %1811, 1
  store i64 %1812, i64* %PC.i2885
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1815 = bitcast %union.anon* %1814 to i32*
  %1816 = load i32, i32* %1815, align 8
  %1817 = sext i32 %1816 to i64
  %1818 = lshr i64 %1817, 32
  store i64 %1818, i64* %1813, align 8
  store %struct.Memory* %loadMem_40bf90, %struct.Memory** %MEMORY
  %loadMem_40bf91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1820 = getelementptr inbounds %struct.GPR, %struct.GPR* %1819, i32 0, i32 33
  %1821 = getelementptr inbounds %struct.Reg, %struct.Reg* %1820, i32 0, i32 0
  %PC.i2877 = bitcast %union.anon* %1821 to i64*
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 9
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %ESI.i2878 = bitcast %union.anon* %1824 to i32*
  %1825 = load i32, i32* %ESI.i2878
  %1826 = zext i32 %1825 to i64
  %1827 = load i64, i64* %PC.i2877
  %1828 = add i64 %1827, 2
  store i64 %1828, i64* %PC.i2877
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1830 = bitcast %union.anon* %1829 to i32*
  %1831 = load i32, i32* %1830, align 8
  %1832 = zext i32 %1831 to i64
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1834 = bitcast %union.anon* %1833 to i32*
  %1835 = load i32, i32* %1834, align 8
  %1836 = zext i32 %1835 to i64
  %1837 = shl i64 %1826, 32
  %1838 = ashr exact i64 %1837, 32
  %1839 = shl i64 %1836, 32
  %1840 = or i64 %1839, %1832
  %1841 = sdiv i64 %1840, %1838
  %1842 = shl i64 %1841, 32
  %1843 = ashr exact i64 %1842, 32
  %1844 = icmp eq i64 %1841, %1843
  br i1 %1844, label %1849, label %1845

; <label>:1845:                                   ; preds = %routine_idivl__esi.exit2899
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1847 = load i64, i64* %1846, align 8
  %1848 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1847, %struct.Memory* %loadMem_40bf91)
  br label %routine_idivl__esi.exit2879

; <label>:1849:                                   ; preds = %routine_idivl__esi.exit2899
  %1850 = srem i64 %1840, %1838
  %1851 = getelementptr inbounds %union.anon, %union.anon* %1829, i64 0, i32 0
  %1852 = and i64 %1841, 4294967295
  store i64 %1852, i64* %1851, align 8
  %1853 = getelementptr inbounds %union.anon, %union.anon* %1833, i64 0, i32 0
  %1854 = and i64 %1850, 4294967295
  store i64 %1854, i64* %1853, align 8
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1855, align 1
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1856, align 1
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1857, align 1
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1858, align 1
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1859, align 1
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1860, align 1
  br label %routine_idivl__esi.exit2879

routine_idivl__esi.exit2879:                      ; preds = %1845, %1849
  %1861 = phi %struct.Memory* [ %1848, %1845 ], [ %loadMem_40bf91, %1849 ]
  store %struct.Memory* %1861, %struct.Memory** %MEMORY
  %loadMem_40bf93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 33
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %PC.i2874 = bitcast %union.anon* %1864 to i64*
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 7
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %EDX.i2875 = bitcast %union.anon* %1867 to i32*
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 15
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %RBP.i2876 = bitcast %union.anon* %1870 to i64*
  %1871 = load i64, i64* %RBP.i2876
  %1872 = sub i64 %1871, 192
  %1873 = load i32, i32* %EDX.i2875
  %1874 = zext i32 %1873 to i64
  %1875 = load i64, i64* %PC.i2874
  %1876 = add i64 %1875, 6
  store i64 %1876, i64* %PC.i2874
  %1877 = inttoptr i64 %1872 to i32*
  store i32 %1873, i32* %1877
  store %struct.Memory* %loadMem_40bf93, %struct.Memory** %MEMORY
  %loadMem_40bf99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1879 = getelementptr inbounds %struct.GPR, %struct.GPR* %1878, i32 0, i32 33
  %1880 = getelementptr inbounds %struct.Reg, %struct.Reg* %1879, i32 0, i32 0
  %PC.i2871 = bitcast %union.anon* %1880 to i64*
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1882 = getelementptr inbounds %struct.GPR, %struct.GPR* %1881, i32 0, i32 7
  %1883 = getelementptr inbounds %struct.Reg, %struct.Reg* %1882, i32 0, i32 0
  %RDX.i2872 = bitcast %union.anon* %1883 to i64*
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 15
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %RBP.i2873 = bitcast %union.anon* %1886 to i64*
  %1887 = load i64, i64* %RBP.i2873
  %1888 = sub i64 %1887, 188
  %1889 = load i64, i64* %PC.i2871
  %1890 = add i64 %1889, 6
  store i64 %1890, i64* %PC.i2871
  %1891 = inttoptr i64 %1888 to i32*
  %1892 = load i32, i32* %1891
  %1893 = zext i32 %1892 to i64
  store i64 %1893, i64* %RDX.i2872, align 8
  store %struct.Memory* %loadMem_40bf99, %struct.Memory** %MEMORY
  %loadMem_40bf9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1895 = getelementptr inbounds %struct.GPR, %struct.GPR* %1894, i32 0, i32 33
  %1896 = getelementptr inbounds %struct.Reg, %struct.Reg* %1895, i32 0, i32 0
  %PC.i2869 = bitcast %union.anon* %1896 to i64*
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1898 = getelementptr inbounds %struct.GPR, %struct.GPR* %1897, i32 0, i32 7
  %1899 = getelementptr inbounds %struct.Reg, %struct.Reg* %1898, i32 0, i32 0
  %RDX.i2870 = bitcast %union.anon* %1899 to i64*
  %1900 = load i64, i64* %RDX.i2870
  %1901 = load i64, i64* %PC.i2869
  %1902 = add i64 %1901, 3
  store i64 %1902, i64* %PC.i2869
  %1903 = trunc i64 %1900 to i32
  %1904 = add i32 15, %1903
  %1905 = zext i32 %1904 to i64
  store i64 %1905, i64* %RDX.i2870, align 8
  %1906 = icmp ult i32 %1904, %1903
  %1907 = icmp ult i32 %1904, 15
  %1908 = or i1 %1906, %1907
  %1909 = zext i1 %1908 to i8
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1909, i8* %1910, align 1
  %1911 = and i32 %1904, 255
  %1912 = call i32 @llvm.ctpop.i32(i32 %1911)
  %1913 = trunc i32 %1912 to i8
  %1914 = and i8 %1913, 1
  %1915 = xor i8 %1914, 1
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1915, i8* %1916, align 1
  %1917 = xor i64 15, %1900
  %1918 = trunc i64 %1917 to i32
  %1919 = xor i32 %1918, %1904
  %1920 = lshr i32 %1919, 4
  %1921 = trunc i32 %1920 to i8
  %1922 = and i8 %1921, 1
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1922, i8* %1923, align 1
  %1924 = icmp eq i32 %1904, 0
  %1925 = zext i1 %1924 to i8
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1925, i8* %1926, align 1
  %1927 = lshr i32 %1904, 31
  %1928 = trunc i32 %1927 to i8
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1928, i8* %1929, align 1
  %1930 = lshr i32 %1903, 31
  %1931 = xor i32 %1927, %1930
  %1932 = add i32 %1931, %1927
  %1933 = icmp eq i32 %1932, 2
  %1934 = zext i1 %1933 to i8
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1934, i8* %1935, align 1
  store %struct.Memory* %loadMem_40bf9f, %struct.Memory** %MEMORY
  %loadMem_40bfa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1937 = getelementptr inbounds %struct.GPR, %struct.GPR* %1936, i32 0, i32 33
  %1938 = getelementptr inbounds %struct.Reg, %struct.Reg* %1937, i32 0, i32 0
  %PC.i2866 = bitcast %union.anon* %1938 to i64*
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 7
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %EDX.i2867 = bitcast %union.anon* %1941 to i32*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 15
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RBP.i2868 = bitcast %union.anon* %1944 to i64*
  %1945 = load i64, i64* %RBP.i2868
  %1946 = sub i64 %1945, 196
  %1947 = load i32, i32* %EDX.i2867
  %1948 = zext i32 %1947 to i64
  %1949 = load i64, i64* %PC.i2866
  %1950 = add i64 %1949, 6
  store i64 %1950, i64* %PC.i2866
  %1951 = inttoptr i64 %1946 to i32*
  store i32 %1947, i32* %1951
  store %struct.Memory* %loadMem_40bfa2, %struct.Memory** %MEMORY
  %loadMem_40bfa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 33
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %PC.i2863 = bitcast %union.anon* %1954 to i64*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 15
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %RBP.i2864 = bitcast %union.anon* %1957 to i64*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 17
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %R8.i2865 = bitcast %union.anon* %1960 to i64*
  %1961 = load i64, i64* %RBP.i2864
  %1962 = sub i64 %1961, 248
  %1963 = load i64, i64* %PC.i2863
  %1964 = add i64 %1963, 7
  store i64 %1964, i64* %PC.i2863
  %1965 = inttoptr i64 %1962 to i64*
  %1966 = load i64, i64* %1965
  store i64 %1966, i64* %R8.i2865, align 8
  store %struct.Memory* %loadMem_40bfa8, %struct.Memory** %MEMORY
  %loadMem_40bfaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 33
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %PC.i2860 = bitcast %union.anon* %1969 to i64*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 7
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %RDX.i2861 = bitcast %union.anon* %1972 to i64*
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 17
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %R8.i2862 = bitcast %union.anon* %1975 to i64*
  %1976 = load i64, i64* %R8.i2862
  %1977 = add i64 %1976, 16
  %1978 = load i64, i64* %PC.i2860
  %1979 = add i64 %1978, 4
  store i64 %1979, i64* %PC.i2860
  %1980 = inttoptr i64 %1977 to i32*
  %1981 = load i32, i32* %1980
  %1982 = zext i32 %1981 to i64
  store i64 %1982, i64* %RDX.i2861, align 8
  store %struct.Memory* %loadMem_40bfaf, %struct.Memory** %MEMORY
  %loadMem_40bfb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1984 = getelementptr inbounds %struct.GPR, %struct.GPR* %1983, i32 0, i32 33
  %1985 = getelementptr inbounds %struct.Reg, %struct.Reg* %1984, i32 0, i32 0
  %PC.i2858 = bitcast %union.anon* %1985 to i64*
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 7
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %RDX.i2859 = bitcast %union.anon* %1988 to i64*
  %1989 = load i64, i64* %RDX.i2859
  %1990 = load i64, i64* %PC.i2858
  %1991 = add i64 %1990, 3
  store i64 %1991, i64* %PC.i2858
  %1992 = trunc i64 %1989 to i32
  %1993 = zext i32 %1992 to i64
  store i64 %1993, i64* %RDX.i2859, align 8
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1994, align 1
  %1995 = and i32 %1992, 255
  %1996 = call i32 @llvm.ctpop.i32(i32 %1995)
  %1997 = trunc i32 %1996 to i8
  %1998 = and i8 %1997, 1
  %1999 = xor i8 %1998, 1
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1999, i8* %2000, align 1
  %2001 = trunc i64 %1989 to i32
  %2002 = xor i32 %2001, %1992
  %2003 = lshr i32 %2002, 4
  %2004 = trunc i32 %2003 to i8
  %2005 = and i8 %2004, 1
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2005, i8* %2006, align 1
  %2007 = icmp eq i32 %1992, 0
  %2008 = zext i1 %2007 to i8
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2008, i8* %2009, align 1
  %2010 = lshr i32 %1992, 31
  %2011 = trunc i32 %2010 to i8
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2011, i8* %2012, align 1
  %2013 = lshr i32 %1992, 31
  %2014 = xor i32 %2010, %2013
  %2015 = add i32 %2014, %2013
  %2016 = icmp eq i32 %2015, 2
  %2017 = zext i1 %2016 to i8
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2017, i8* %2018, align 1
  store %struct.Memory* %loadMem_40bfb3, %struct.Memory** %MEMORY
  %loadMem_40bfb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 33
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %PC.i2855 = bitcast %union.anon* %2021 to i64*
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 7
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %EDX.i2856 = bitcast %union.anon* %2024 to i32*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 1
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %RAX.i2857 = bitcast %union.anon* %2027 to i64*
  %2028 = load i32, i32* %EDX.i2856
  %2029 = zext i32 %2028 to i64
  %2030 = load i64, i64* %PC.i2855
  %2031 = add i64 %2030, 2
  store i64 %2031, i64* %PC.i2855
  %2032 = and i64 %2029, 4294967295
  store i64 %2032, i64* %RAX.i2857, align 8
  store %struct.Memory* %loadMem_40bfb6, %struct.Memory** %MEMORY
  %loadMem_40bfb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 33
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %PC.i2854 = bitcast %union.anon* %2035 to i64*
  %2036 = load i64, i64* %PC.i2854
  %2037 = add i64 %2036, 1
  store i64 %2037, i64* %PC.i2854
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2040 = bitcast %union.anon* %2039 to i32*
  %2041 = load i32, i32* %2040, align 8
  %2042 = sext i32 %2041 to i64
  %2043 = lshr i64 %2042, 32
  store i64 %2043, i64* %2038, align 8
  store %struct.Memory* %loadMem_40bfb8, %struct.Memory** %MEMORY
  %loadMem_40bfb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2045 = getelementptr inbounds %struct.GPR, %struct.GPR* %2044, i32 0, i32 33
  %2046 = getelementptr inbounds %struct.Reg, %struct.Reg* %2045, i32 0, i32 0
  %PC.i2850 = bitcast %union.anon* %2046 to i64*
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2048 = getelementptr inbounds %struct.GPR, %struct.GPR* %2047, i32 0, i32 9
  %2049 = getelementptr inbounds %struct.Reg, %struct.Reg* %2048, i32 0, i32 0
  %ESI.i2851 = bitcast %union.anon* %2049 to i32*
  %2050 = load i32, i32* %ESI.i2851
  %2051 = zext i32 %2050 to i64
  %2052 = load i64, i64* %PC.i2850
  %2053 = add i64 %2052, 2
  store i64 %2053, i64* %PC.i2850
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2055 = bitcast %union.anon* %2054 to i32*
  %2056 = load i32, i32* %2055, align 8
  %2057 = zext i32 %2056 to i64
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2059 = bitcast %union.anon* %2058 to i32*
  %2060 = load i32, i32* %2059, align 8
  %2061 = zext i32 %2060 to i64
  %2062 = shl i64 %2051, 32
  %2063 = ashr exact i64 %2062, 32
  %2064 = shl i64 %2061, 32
  %2065 = or i64 %2064, %2057
  %2066 = sdiv i64 %2065, %2063
  %2067 = shl i64 %2066, 32
  %2068 = ashr exact i64 %2067, 32
  %2069 = icmp eq i64 %2066, %2068
  br i1 %2069, label %2074, label %2070

; <label>:2070:                                   ; preds = %routine_idivl__esi.exit2879
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2072 = load i64, i64* %2071, align 8
  %2073 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2072, %struct.Memory* %loadMem_40bfb9)
  br label %routine_idivl__esi.exit2852

; <label>:2074:                                   ; preds = %routine_idivl__esi.exit2879
  %2075 = srem i64 %2065, %2063
  %2076 = getelementptr inbounds %union.anon, %union.anon* %2054, i64 0, i32 0
  %2077 = and i64 %2066, 4294967295
  store i64 %2077, i64* %2076, align 8
  %2078 = getelementptr inbounds %union.anon, %union.anon* %2058, i64 0, i32 0
  %2079 = and i64 %2075, 4294967295
  store i64 %2079, i64* %2078, align 8
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2080, align 1
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2081, align 1
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2082, align 1
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2083, align 1
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2084, align 1
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2085, align 1
  br label %routine_idivl__esi.exit2852

routine_idivl__esi.exit2852:                      ; preds = %2070, %2074
  %2086 = phi %struct.Memory* [ %2073, %2070 ], [ %loadMem_40bfb9, %2074 ]
  store %struct.Memory* %2086, %struct.Memory** %MEMORY
  %loadMem_40bfbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2088 = getelementptr inbounds %struct.GPR, %struct.GPR* %2087, i32 0, i32 33
  %2089 = getelementptr inbounds %struct.Reg, %struct.Reg* %2088, i32 0, i32 0
  %PC.i2847 = bitcast %union.anon* %2089 to i64*
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2091 = getelementptr inbounds %struct.GPR, %struct.GPR* %2090, i32 0, i32 1
  %2092 = getelementptr inbounds %struct.Reg, %struct.Reg* %2091, i32 0, i32 0
  %EAX.i2848 = bitcast %union.anon* %2092 to i32*
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2094 = getelementptr inbounds %struct.GPR, %struct.GPR* %2093, i32 0, i32 15
  %2095 = getelementptr inbounds %struct.Reg, %struct.Reg* %2094, i32 0, i32 0
  %RBP.i2849 = bitcast %union.anon* %2095 to i64*
  %2096 = load i64, i64* %RBP.i2849
  %2097 = sub i64 %2096, 200
  %2098 = load i32, i32* %EAX.i2848
  %2099 = zext i32 %2098 to i64
  %2100 = load i64, i64* %PC.i2847
  %2101 = add i64 %2100, 6
  store i64 %2101, i64* %PC.i2847
  %2102 = inttoptr i64 %2097 to i32*
  store i32 %2098, i32* %2102
  store %struct.Memory* %loadMem_40bfbb, %struct.Memory** %MEMORY
  %loadMem_40bfc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2104 = getelementptr inbounds %struct.GPR, %struct.GPR* %2103, i32 0, i32 33
  %2105 = getelementptr inbounds %struct.Reg, %struct.Reg* %2104, i32 0, i32 0
  %PC.i2844 = bitcast %union.anon* %2105 to i64*
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2107 = getelementptr inbounds %struct.GPR, %struct.GPR* %2106, i32 0, i32 15
  %2108 = getelementptr inbounds %struct.Reg, %struct.Reg* %2107, i32 0, i32 0
  %RBP.i2845 = bitcast %union.anon* %2108 to i64*
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2110 = getelementptr inbounds %struct.GPR, %struct.GPR* %2109, i32 0, i32 17
  %2111 = getelementptr inbounds %struct.Reg, %struct.Reg* %2110, i32 0, i32 0
  %R8.i2846 = bitcast %union.anon* %2111 to i64*
  %2112 = load i64, i64* %RBP.i2845
  %2113 = sub i64 %2112, 248
  %2114 = load i64, i64* %PC.i2844
  %2115 = add i64 %2114, 7
  store i64 %2115, i64* %PC.i2844
  %2116 = inttoptr i64 %2113 to i64*
  %2117 = load i64, i64* %2116
  store i64 %2117, i64* %R8.i2846, align 8
  store %struct.Memory* %loadMem_40bfc1, %struct.Memory** %MEMORY
  %loadMem_40bfc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 33
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %PC.i2841 = bitcast %union.anon* %2120 to i64*
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2122 = getelementptr inbounds %struct.GPR, %struct.GPR* %2121, i32 0, i32 1
  %2123 = getelementptr inbounds %struct.Reg, %struct.Reg* %2122, i32 0, i32 0
  %RAX.i2842 = bitcast %union.anon* %2123 to i64*
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 17
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %R8.i2843 = bitcast %union.anon* %2126 to i64*
  %2127 = load i64, i64* %R8.i2843
  %2128 = add i64 %2127, 16
  %2129 = load i64, i64* %PC.i2841
  %2130 = add i64 %2129, 4
  store i64 %2130, i64* %PC.i2841
  %2131 = inttoptr i64 %2128 to i32*
  %2132 = load i32, i32* %2131
  %2133 = zext i32 %2132 to i64
  store i64 %2133, i64* %RAX.i2842, align 8
  store %struct.Memory* %loadMem_40bfc8, %struct.Memory** %MEMORY
  %loadMem_40bfcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2135 = getelementptr inbounds %struct.GPR, %struct.GPR* %2134, i32 0, i32 33
  %2136 = getelementptr inbounds %struct.Reg, %struct.Reg* %2135, i32 0, i32 0
  %PC.i2839 = bitcast %union.anon* %2136 to i64*
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2138 = getelementptr inbounds %struct.GPR, %struct.GPR* %2137, i32 0, i32 1
  %2139 = getelementptr inbounds %struct.Reg, %struct.Reg* %2138, i32 0, i32 0
  %RAX.i2840 = bitcast %union.anon* %2139 to i64*
  %2140 = load i64, i64* %RAX.i2840
  %2141 = load i64, i64* %PC.i2839
  %2142 = add i64 %2141, 3
  store i64 %2142, i64* %PC.i2839
  %2143 = trunc i64 %2140 to i32
  %2144 = zext i32 %2143 to i64
  store i64 %2144, i64* %RAX.i2840, align 8
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2145, align 1
  %2146 = and i32 %2143, 255
  %2147 = call i32 @llvm.ctpop.i32(i32 %2146)
  %2148 = trunc i32 %2147 to i8
  %2149 = and i8 %2148, 1
  %2150 = xor i8 %2149, 1
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2150, i8* %2151, align 1
  %2152 = trunc i64 %2140 to i32
  %2153 = xor i32 %2152, %2143
  %2154 = lshr i32 %2153, 4
  %2155 = trunc i32 %2154 to i8
  %2156 = and i8 %2155, 1
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2156, i8* %2157, align 1
  %2158 = icmp eq i32 %2143, 0
  %2159 = zext i1 %2158 to i8
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2159, i8* %2160, align 1
  %2161 = lshr i32 %2143, 31
  %2162 = trunc i32 %2161 to i8
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2162, i8* %2163, align 1
  %2164 = lshr i32 %2143, 31
  %2165 = xor i32 %2161, %2164
  %2166 = add i32 %2165, %2164
  %2167 = icmp eq i32 %2166, 2
  %2168 = zext i1 %2167 to i8
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2168, i8* %2169, align 1
  store %struct.Memory* %loadMem_40bfcc, %struct.Memory** %MEMORY
  %loadMem_40bfcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2171 = getelementptr inbounds %struct.GPR, %struct.GPR* %2170, i32 0, i32 33
  %2172 = getelementptr inbounds %struct.Reg, %struct.Reg* %2171, i32 0, i32 0
  %PC.i2838 = bitcast %union.anon* %2172 to i64*
  %2173 = load i64, i64* %PC.i2838
  %2174 = add i64 %2173, 1
  store i64 %2174, i64* %PC.i2838
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2177 = bitcast %union.anon* %2176 to i32*
  %2178 = load i32, i32* %2177, align 8
  %2179 = sext i32 %2178 to i64
  %2180 = lshr i64 %2179, 32
  store i64 %2180, i64* %2175, align 8
  store %struct.Memory* %loadMem_40bfcf, %struct.Memory** %MEMORY
  %loadMem_40bfd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 33
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %PC.i2832 = bitcast %union.anon* %2183 to i64*
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2185 = getelementptr inbounds %struct.GPR, %struct.GPR* %2184, i32 0, i32 9
  %2186 = getelementptr inbounds %struct.Reg, %struct.Reg* %2185, i32 0, i32 0
  %ESI.i2833 = bitcast %union.anon* %2186 to i32*
  %2187 = load i32, i32* %ESI.i2833
  %2188 = zext i32 %2187 to i64
  %2189 = load i64, i64* %PC.i2832
  %2190 = add i64 %2189, 2
  store i64 %2190, i64* %PC.i2832
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2192 = bitcast %union.anon* %2191 to i32*
  %2193 = load i32, i32* %2192, align 8
  %2194 = zext i32 %2193 to i64
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2196 = bitcast %union.anon* %2195 to i32*
  %2197 = load i32, i32* %2196, align 8
  %2198 = zext i32 %2197 to i64
  %2199 = shl i64 %2188, 32
  %2200 = ashr exact i64 %2199, 32
  %2201 = shl i64 %2198, 32
  %2202 = or i64 %2201, %2194
  %2203 = sdiv i64 %2202, %2200
  %2204 = shl i64 %2203, 32
  %2205 = ashr exact i64 %2204, 32
  %2206 = icmp eq i64 %2203, %2205
  br i1 %2206, label %2211, label %2207

; <label>:2207:                                   ; preds = %routine_idivl__esi.exit2852
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2209 = load i64, i64* %2208, align 8
  %2210 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2209, %struct.Memory* %loadMem_40bfd0)
  br label %routine_idivl__esi.exit2834

; <label>:2211:                                   ; preds = %routine_idivl__esi.exit2852
  %2212 = srem i64 %2202, %2200
  %2213 = getelementptr inbounds %union.anon, %union.anon* %2191, i64 0, i32 0
  %2214 = and i64 %2203, 4294967295
  store i64 %2214, i64* %2213, align 8
  %2215 = getelementptr inbounds %union.anon, %union.anon* %2195, i64 0, i32 0
  %2216 = and i64 %2212, 4294967295
  store i64 %2216, i64* %2215, align 8
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2217, align 1
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2218, align 1
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2219, align 1
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2220, align 1
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2221, align 1
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2222, align 1
  br label %routine_idivl__esi.exit2834

routine_idivl__esi.exit2834:                      ; preds = %2207, %2211
  %2223 = phi %struct.Memory* [ %2210, %2207 ], [ %loadMem_40bfd0, %2211 ]
  store %struct.Memory* %2223, %struct.Memory** %MEMORY
  %loadMem_40bfd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 33
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %PC.i2829 = bitcast %union.anon* %2226 to i64*
  %2227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2228 = getelementptr inbounds %struct.GPR, %struct.GPR* %2227, i32 0, i32 7
  %2229 = getelementptr inbounds %struct.Reg, %struct.Reg* %2228, i32 0, i32 0
  %EDX.i2830 = bitcast %union.anon* %2229 to i32*
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2231 = getelementptr inbounds %struct.GPR, %struct.GPR* %2230, i32 0, i32 15
  %2232 = getelementptr inbounds %struct.Reg, %struct.Reg* %2231, i32 0, i32 0
  %RBP.i2831 = bitcast %union.anon* %2232 to i64*
  %2233 = load i64, i64* %RBP.i2831
  %2234 = sub i64 %2233, 204
  %2235 = load i32, i32* %EDX.i2830
  %2236 = zext i32 %2235 to i64
  %2237 = load i64, i64* %PC.i2829
  %2238 = add i64 %2237, 6
  store i64 %2238, i64* %PC.i2829
  %2239 = inttoptr i64 %2234 to i32*
  store i32 %2235, i32* %2239
  store %struct.Memory* %loadMem_40bfd2, %struct.Memory** %MEMORY
  %loadMem_40bfd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2241 = getelementptr inbounds %struct.GPR, %struct.GPR* %2240, i32 0, i32 33
  %2242 = getelementptr inbounds %struct.Reg, %struct.Reg* %2241, i32 0, i32 0
  %PC.i2826 = bitcast %union.anon* %2242 to i64*
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 7
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %RDX.i2827 = bitcast %union.anon* %2245 to i64*
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2247 = getelementptr inbounds %struct.GPR, %struct.GPR* %2246, i32 0, i32 15
  %2248 = getelementptr inbounds %struct.Reg, %struct.Reg* %2247, i32 0, i32 0
  %RBP.i2828 = bitcast %union.anon* %2248 to i64*
  %2249 = load i64, i64* %RBP.i2828
  %2250 = sub i64 %2249, 200
  %2251 = load i64, i64* %PC.i2826
  %2252 = add i64 %2251, 6
  store i64 %2252, i64* %PC.i2826
  %2253 = inttoptr i64 %2250 to i32*
  %2254 = load i32, i32* %2253
  %2255 = zext i32 %2254 to i64
  store i64 %2255, i64* %RDX.i2827, align 8
  store %struct.Memory* %loadMem_40bfd8, %struct.Memory** %MEMORY
  %loadMem_40bfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2257 = getelementptr inbounds %struct.GPR, %struct.GPR* %2256, i32 0, i32 33
  %2258 = getelementptr inbounds %struct.Reg, %struct.Reg* %2257, i32 0, i32 0
  %PC.i2824 = bitcast %union.anon* %2258 to i64*
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2260 = getelementptr inbounds %struct.GPR, %struct.GPR* %2259, i32 0, i32 7
  %2261 = getelementptr inbounds %struct.Reg, %struct.Reg* %2260, i32 0, i32 0
  %RDX.i2825 = bitcast %union.anon* %2261 to i64*
  %2262 = load i64, i64* %RDX.i2825
  %2263 = load i64, i64* %PC.i2824
  %2264 = add i64 %2263, 3
  store i64 %2264, i64* %PC.i2824
  %2265 = trunc i64 %2262 to i32
  %2266 = add i32 15, %2265
  %2267 = zext i32 %2266 to i64
  store i64 %2267, i64* %RDX.i2825, align 8
  %2268 = icmp ult i32 %2266, %2265
  %2269 = icmp ult i32 %2266, 15
  %2270 = or i1 %2268, %2269
  %2271 = zext i1 %2270 to i8
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2271, i8* %2272, align 1
  %2273 = and i32 %2266, 255
  %2274 = call i32 @llvm.ctpop.i32(i32 %2273)
  %2275 = trunc i32 %2274 to i8
  %2276 = and i8 %2275, 1
  %2277 = xor i8 %2276, 1
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2277, i8* %2278, align 1
  %2279 = xor i64 15, %2262
  %2280 = trunc i64 %2279 to i32
  %2281 = xor i32 %2280, %2266
  %2282 = lshr i32 %2281, 4
  %2283 = trunc i32 %2282 to i8
  %2284 = and i8 %2283, 1
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2284, i8* %2285, align 1
  %2286 = icmp eq i32 %2266, 0
  %2287 = zext i1 %2286 to i8
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2287, i8* %2288, align 1
  %2289 = lshr i32 %2266, 31
  %2290 = trunc i32 %2289 to i8
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2290, i8* %2291, align 1
  %2292 = lshr i32 %2265, 31
  %2293 = xor i32 %2289, %2292
  %2294 = add i32 %2293, %2289
  %2295 = icmp eq i32 %2294, 2
  %2296 = zext i1 %2295 to i8
  %2297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2296, i8* %2297, align 1
  store %struct.Memory* %loadMem_40bfde, %struct.Memory** %MEMORY
  %loadMem_40bfe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 33
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %PC.i2821 = bitcast %union.anon* %2300 to i64*
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2302 = getelementptr inbounds %struct.GPR, %struct.GPR* %2301, i32 0, i32 7
  %2303 = getelementptr inbounds %struct.Reg, %struct.Reg* %2302, i32 0, i32 0
  %EDX.i2822 = bitcast %union.anon* %2303 to i32*
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2305 = getelementptr inbounds %struct.GPR, %struct.GPR* %2304, i32 0, i32 15
  %2306 = getelementptr inbounds %struct.Reg, %struct.Reg* %2305, i32 0, i32 0
  %RBP.i2823 = bitcast %union.anon* %2306 to i64*
  %2307 = load i64, i64* %RBP.i2823
  %2308 = sub i64 %2307, 208
  %2309 = load i32, i32* %EDX.i2822
  %2310 = zext i32 %2309 to i64
  %2311 = load i64, i64* %PC.i2821
  %2312 = add i64 %2311, 6
  store i64 %2312, i64* %PC.i2821
  %2313 = inttoptr i64 %2308 to i32*
  store i32 %2309, i32* %2313
  store %struct.Memory* %loadMem_40bfe1, %struct.Memory** %MEMORY
  %loadMem_40bfe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2315 = getelementptr inbounds %struct.GPR, %struct.GPR* %2314, i32 0, i32 33
  %2316 = getelementptr inbounds %struct.Reg, %struct.Reg* %2315, i32 0, i32 0
  %PC.i2818 = bitcast %union.anon* %2316 to i64*
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2318 = getelementptr inbounds %struct.GPR, %struct.GPR* %2317, i32 0, i32 7
  %2319 = getelementptr inbounds %struct.Reg, %struct.Reg* %2318, i32 0, i32 0
  %RDX.i2819 = bitcast %union.anon* %2319 to i64*
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2321 = getelementptr inbounds %struct.GPR, %struct.GPR* %2320, i32 0, i32 15
  %2322 = getelementptr inbounds %struct.Reg, %struct.Reg* %2321, i32 0, i32 0
  %RBP.i2820 = bitcast %union.anon* %2322 to i64*
  %2323 = load i64, i64* %RBP.i2820
  %2324 = sub i64 %2323, 196
  %2325 = load i64, i64* %PC.i2818
  %2326 = add i64 %2325, 6
  store i64 %2326, i64* %PC.i2818
  %2327 = inttoptr i64 %2324 to i32*
  %2328 = load i32, i32* %2327
  %2329 = zext i32 %2328 to i64
  store i64 %2329, i64* %RDX.i2819, align 8
  store %struct.Memory* %loadMem_40bfe7, %struct.Memory** %MEMORY
  %loadMem_40bfed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 33
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %PC.i2815 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 5
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %ECX.i2816 = bitcast %union.anon* %2335 to i32*
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2337 = getelementptr inbounds %struct.GPR, %struct.GPR* %2336, i32 0, i32 15
  %2338 = getelementptr inbounds %struct.Reg, %struct.Reg* %2337, i32 0, i32 0
  %RBP.i2817 = bitcast %union.anon* %2338 to i64*
  %2339 = load i64, i64* %RBP.i2817
  %2340 = sub i64 %2339, 316
  %2341 = load i32, i32* %ECX.i2816
  %2342 = zext i32 %2341 to i64
  %2343 = load i64, i64* %PC.i2815
  %2344 = add i64 %2343, 6
  store i64 %2344, i64* %PC.i2815
  %2345 = inttoptr i64 %2340 to i32*
  store i32 %2341, i32* %2345
  store %struct.Memory* %loadMem_40bfed, %struct.Memory** %MEMORY
  %loadMem_40bff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 33
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %PC.i2812 = bitcast %union.anon* %2348 to i64*
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 7
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %EDX.i2813 = bitcast %union.anon* %2351 to i32*
  %2352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2353 = getelementptr inbounds %struct.GPR, %struct.GPR* %2352, i32 0, i32 5
  %2354 = getelementptr inbounds %struct.Reg, %struct.Reg* %2353, i32 0, i32 0
  %RCX.i2814 = bitcast %union.anon* %2354 to i64*
  %2355 = load i32, i32* %EDX.i2813
  %2356 = zext i32 %2355 to i64
  %2357 = load i64, i64* %PC.i2812
  %2358 = add i64 %2357, 2
  store i64 %2358, i64* %PC.i2812
  %2359 = and i64 %2356, 4294967295
  store i64 %2359, i64* %RCX.i2814, align 8
  store %struct.Memory* %loadMem_40bff3, %struct.Memory** %MEMORY
  %loadMem_40bff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 33
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %PC.i2809 = bitcast %union.anon* %2362 to i64*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 7
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %RDX.i2810 = bitcast %union.anon* %2365 to i64*
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2367 = getelementptr inbounds %struct.GPR, %struct.GPR* %2366, i32 0, i32 15
  %2368 = getelementptr inbounds %struct.Reg, %struct.Reg* %2367, i32 0, i32 0
  %RBP.i2811 = bitcast %union.anon* %2368 to i64*
  %2369 = load i64, i64* %RBP.i2811
  %2370 = sub i64 %2369, 312
  %2371 = load i64, i64* %PC.i2809
  %2372 = add i64 %2371, 6
  store i64 %2372, i64* %PC.i2809
  %2373 = inttoptr i64 %2370 to i32*
  %2374 = load i32, i32* %2373
  %2375 = zext i32 %2374 to i64
  store i64 %2375, i64* %RDX.i2810, align 8
  store %struct.Memory* %loadMem_40bff5, %struct.Memory** %MEMORY
  %loadMem_40bffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 33
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %PC.i2806 = bitcast %union.anon* %2378 to i64*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 5
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %2382 = bitcast %union.anon* %2381 to %struct.anon.2*
  %CL.i2807 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2382, i32 0, i32 0
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 7
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %RDX.i2808 = bitcast %union.anon* %2385 to i64*
  %2386 = load i64, i64* %RDX.i2808
  %2387 = load i8, i8* %CL.i2807
  %2388 = zext i8 %2387 to i64
  %2389 = load i64, i64* %PC.i2806
  %2390 = add i64 %2389, 2
  store i64 %2390, i64* %PC.i2806
  %2391 = trunc i64 %2388 to i5
  switch i5 %2391, label %2398 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %2392
  ]

; <label>:2392:                                   ; preds = %routine_idivl__esi.exit2834
  %2393 = trunc i64 %2386 to i32
  %2394 = shl i32 %2393, 1
  %2395 = icmp slt i32 %2393, 0
  %2396 = icmp slt i32 %2394, 0
  %2397 = xor i1 %2395, %2396
  br label %2407

; <label>:2398:                                   ; preds = %routine_idivl__esi.exit2834
  %2399 = and i64 %2388, 31
  %2400 = add i64 %2399, 4294967295
  %2401 = and i64 %2386, 4294967295
  %2402 = and i64 %2400, 4294967295
  %2403 = shl i64 %2401, %2402
  %2404 = trunc i64 %2403 to i32
  %2405 = icmp slt i32 %2404, 0
  %2406 = shl i32 %2404, 1
  br label %2407

; <label>:2407:                                   ; preds = %2398, %2392
  %2408 = phi i1 [ %2395, %2392 ], [ %2405, %2398 ]
  %2409 = phi i1 [ %2397, %2392 ], [ false, %2398 ]
  %2410 = phi i32 [ %2394, %2392 ], [ %2406, %2398 ]
  %2411 = zext i32 %2410 to i64
  store i64 %2411, i64* %RDX.i2808, align 8
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2413 = zext i1 %2408 to i8
  store i8 %2413, i8* %2412, align 1
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2415 = and i32 %2410, 254
  %2416 = call i32 @llvm.ctpop.i32(i32 %2415)
  %2417 = trunc i32 %2416 to i8
  %2418 = and i8 %2417, 1
  %2419 = xor i8 %2418, 1
  store i8 %2419, i8* %2414, align 1
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2420, align 1
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2422 = icmp eq i32 %2410, 0
  %2423 = zext i1 %2422 to i8
  store i8 %2423, i8* %2421, align 1
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2425 = lshr i32 %2410, 31
  %2426 = trunc i32 %2425 to i8
  store i8 %2426, i8* %2424, align 1
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2428 = zext i1 %2409 to i8
  store i8 %2428, i8* %2427, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %routine_idivl__esi.exit2834, %2407
  store %struct.Memory* %loadMem_40bffb, %struct.Memory** %MEMORY
  %loadMem_40bffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 33
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %PC.i2803 = bitcast %union.anon* %2431 to i64*
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 7
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %EDX.i2804 = bitcast %union.anon* %2434 to i32*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 1
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RAX.i2805 = bitcast %union.anon* %2437 to i64*
  %2438 = load i32, i32* %EDX.i2804
  %2439 = zext i32 %2438 to i64
  %2440 = load i64, i64* %PC.i2803
  %2441 = add i64 %2440, 2
  store i64 %2441, i64* %PC.i2803
  %2442 = and i64 %2439, 4294967295
  store i64 %2442, i64* %RAX.i2805, align 8
  store %struct.Memory* %loadMem_40bffd, %struct.Memory** %MEMORY
  %loadMem_40bfff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 33
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %PC.i2802 = bitcast %union.anon* %2445 to i64*
  %2446 = load i64, i64* %PC.i2802
  %2447 = add i64 %2446, 1
  store i64 %2447, i64* %PC.i2802
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2450 = bitcast %union.anon* %2449 to i32*
  %2451 = load i32, i32* %2450, align 8
  %2452 = sext i32 %2451 to i64
  %2453 = lshr i64 %2452, 32
  store i64 %2453, i64* %2448, align 8
  store %struct.Memory* %loadMem_40bfff, %struct.Memory** %MEMORY
  %loadMem_40c000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2455 = getelementptr inbounds %struct.GPR, %struct.GPR* %2454, i32 0, i32 33
  %2456 = getelementptr inbounds %struct.Reg, %struct.Reg* %2455, i32 0, i32 0
  %PC.i2796 = bitcast %union.anon* %2456 to i64*
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 9
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %ESI.i2797 = bitcast %union.anon* %2459 to i32*
  %2460 = load i32, i32* %ESI.i2797
  %2461 = zext i32 %2460 to i64
  %2462 = load i64, i64* %PC.i2796
  %2463 = add i64 %2462, 2
  store i64 %2463, i64* %PC.i2796
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2465 = bitcast %union.anon* %2464 to i32*
  %2466 = load i32, i32* %2465, align 8
  %2467 = zext i32 %2466 to i64
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2469 = bitcast %union.anon* %2468 to i32*
  %2470 = load i32, i32* %2469, align 8
  %2471 = zext i32 %2470 to i64
  %2472 = shl i64 %2461, 32
  %2473 = ashr exact i64 %2472, 32
  %2474 = shl i64 %2471, 32
  %2475 = or i64 %2474, %2467
  %2476 = sdiv i64 %2475, %2473
  %2477 = shl i64 %2476, 32
  %2478 = ashr exact i64 %2477, 32
  %2479 = icmp eq i64 %2476, %2478
  br i1 %2479, label %2484, label %2480

; <label>:2480:                                   ; preds = %routine_shll__cl___edx.exit
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2482 = load i64, i64* %2481, align 8
  %2483 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2482, %struct.Memory* %loadMem_40c000)
  br label %routine_idivl__esi.exit2798

; <label>:2484:                                   ; preds = %routine_shll__cl___edx.exit
  %2485 = srem i64 %2475, %2473
  %2486 = getelementptr inbounds %union.anon, %union.anon* %2464, i64 0, i32 0
  %2487 = and i64 %2476, 4294967295
  store i64 %2487, i64* %2486, align 8
  %2488 = getelementptr inbounds %union.anon, %union.anon* %2468, i64 0, i32 0
  %2489 = and i64 %2485, 4294967295
  store i64 %2489, i64* %2488, align 8
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2490, align 1
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2491, align 1
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2492, align 1
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2493, align 1
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2494, align 1
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2495, align 1
  br label %routine_idivl__esi.exit2798

routine_idivl__esi.exit2798:                      ; preds = %2480, %2484
  %2496 = phi %struct.Memory* [ %2483, %2480 ], [ %loadMem_40c000, %2484 ]
  store %struct.Memory* %2496, %struct.Memory** %MEMORY
  %loadMem_40c002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 33
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %PC.i2793 = bitcast %union.anon* %2499 to i64*
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2501 = getelementptr inbounds %struct.GPR, %struct.GPR* %2500, i32 0, i32 1
  %2502 = getelementptr inbounds %struct.Reg, %struct.Reg* %2501, i32 0, i32 0
  %EAX.i2794 = bitcast %union.anon* %2502 to i32*
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2504 = getelementptr inbounds %struct.GPR, %struct.GPR* %2503, i32 0, i32 15
  %2505 = getelementptr inbounds %struct.Reg, %struct.Reg* %2504, i32 0, i32 0
  %RBP.i2795 = bitcast %union.anon* %2505 to i64*
  %2506 = load i64, i64* %RBP.i2795
  %2507 = sub i64 %2506, 88
  %2508 = load i32, i32* %EAX.i2794
  %2509 = zext i32 %2508 to i64
  %2510 = load i64, i64* %PC.i2793
  %2511 = add i64 %2510, 3
  store i64 %2511, i64* %PC.i2793
  %2512 = inttoptr i64 %2507 to i32*
  store i32 %2508, i32* %2512
  store %struct.Memory* %loadMem_40c002, %struct.Memory** %MEMORY
  %loadMem_40c005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2514 = getelementptr inbounds %struct.GPR, %struct.GPR* %2513, i32 0, i32 33
  %2515 = getelementptr inbounds %struct.Reg, %struct.Reg* %2514, i32 0, i32 0
  %PC.i2790 = bitcast %union.anon* %2515 to i64*
  %2516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2517 = getelementptr inbounds %struct.GPR, %struct.GPR* %2516, i32 0, i32 5
  %2518 = getelementptr inbounds %struct.Reg, %struct.Reg* %2517, i32 0, i32 0
  %RCX.i2791 = bitcast %union.anon* %2518 to i64*
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2520 = getelementptr inbounds %struct.GPR, %struct.GPR* %2519, i32 0, i32 15
  %2521 = getelementptr inbounds %struct.Reg, %struct.Reg* %2520, i32 0, i32 0
  %RBP.i2792 = bitcast %union.anon* %2521 to i64*
  %2522 = load i64, i64* %RBP.i2792
  %2523 = sub i64 %2522, 208
  %2524 = load i64, i64* %PC.i2790
  %2525 = add i64 %2524, 6
  store i64 %2525, i64* %PC.i2790
  %2526 = inttoptr i64 %2523 to i32*
  %2527 = load i32, i32* %2526
  %2528 = zext i32 %2527 to i64
  store i64 %2528, i64* %RCX.i2791, align 8
  store %struct.Memory* %loadMem_40c005, %struct.Memory** %MEMORY
  %loadMem_40c00b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2530 = getelementptr inbounds %struct.GPR, %struct.GPR* %2529, i32 0, i32 33
  %2531 = getelementptr inbounds %struct.Reg, %struct.Reg* %2530, i32 0, i32 0
  %PC.i2787 = bitcast %union.anon* %2531 to i64*
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 1
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %RAX.i2788 = bitcast %union.anon* %2534 to i64*
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2536 = getelementptr inbounds %struct.GPR, %struct.GPR* %2535, i32 0, i32 15
  %2537 = getelementptr inbounds %struct.Reg, %struct.Reg* %2536, i32 0, i32 0
  %RBP.i2789 = bitcast %union.anon* %2537 to i64*
  %2538 = load i64, i64* %RBP.i2789
  %2539 = sub i64 %2538, 312
  %2540 = load i64, i64* %PC.i2787
  %2541 = add i64 %2540, 6
  store i64 %2541, i64* %PC.i2787
  %2542 = inttoptr i64 %2539 to i32*
  %2543 = load i32, i32* %2542
  %2544 = zext i32 %2543 to i64
  store i64 %2544, i64* %RAX.i2788, align 8
  store %struct.Memory* %loadMem_40c00b, %struct.Memory** %MEMORY
  %loadMem_40c011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 33
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %PC.i2783 = bitcast %union.anon* %2547 to i64*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 5
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %2551 = bitcast %union.anon* %2550 to %struct.anon.2*
  %CL.i2784 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2551, i32 0, i32 0
  %2552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2553 = getelementptr inbounds %struct.GPR, %struct.GPR* %2552, i32 0, i32 1
  %2554 = getelementptr inbounds %struct.Reg, %struct.Reg* %2553, i32 0, i32 0
  %RAX.i2785 = bitcast %union.anon* %2554 to i64*
  %2555 = load i64, i64* %RAX.i2785
  %2556 = load i8, i8* %CL.i2784
  %2557 = zext i8 %2556 to i64
  %2558 = load i64, i64* %PC.i2783
  %2559 = add i64 %2558, 2
  store i64 %2559, i64* %PC.i2783
  %2560 = trunc i64 %2557 to i5
  switch i5 %2560, label %2567 [
    i5 0, label %routine_shll__cl___eax.exit2786
    i5 1, label %2561
  ]

; <label>:2561:                                   ; preds = %routine_idivl__esi.exit2798
  %2562 = trunc i64 %2555 to i32
  %2563 = shl i32 %2562, 1
  %2564 = icmp slt i32 %2562, 0
  %2565 = icmp slt i32 %2563, 0
  %2566 = xor i1 %2564, %2565
  br label %2576

; <label>:2567:                                   ; preds = %routine_idivl__esi.exit2798
  %2568 = and i64 %2557, 31
  %2569 = add i64 %2568, 4294967295
  %2570 = and i64 %2555, 4294967295
  %2571 = and i64 %2569, 4294967295
  %2572 = shl i64 %2570, %2571
  %2573 = trunc i64 %2572 to i32
  %2574 = icmp slt i32 %2573, 0
  %2575 = shl i32 %2573, 1
  br label %2576

; <label>:2576:                                   ; preds = %2567, %2561
  %2577 = phi i1 [ %2564, %2561 ], [ %2574, %2567 ]
  %2578 = phi i1 [ %2566, %2561 ], [ false, %2567 ]
  %2579 = phi i32 [ %2563, %2561 ], [ %2575, %2567 ]
  %2580 = zext i32 %2579 to i64
  store i64 %2580, i64* %RAX.i2785, align 8
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2582 = zext i1 %2577 to i8
  store i8 %2582, i8* %2581, align 1
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2584 = and i32 %2579, 254
  %2585 = call i32 @llvm.ctpop.i32(i32 %2584)
  %2586 = trunc i32 %2585 to i8
  %2587 = and i8 %2586, 1
  %2588 = xor i8 %2587, 1
  store i8 %2588, i8* %2583, align 1
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2589, align 1
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2591 = icmp eq i32 %2579, 0
  %2592 = zext i1 %2591 to i8
  store i8 %2592, i8* %2590, align 1
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2594 = lshr i32 %2579, 31
  %2595 = trunc i32 %2594 to i8
  store i8 %2595, i8* %2593, align 1
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2597 = zext i1 %2578 to i8
  store i8 %2597, i8* %2596, align 1
  br label %routine_shll__cl___eax.exit2786

routine_shll__cl___eax.exit2786:                  ; preds = %routine_idivl__esi.exit2798, %2576
  store %struct.Memory* %loadMem_40c011, %struct.Memory** %MEMORY
  %loadMem_40c013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 33
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %PC.i2782 = bitcast %union.anon* %2600 to i64*
  %2601 = load i64, i64* %PC.i2782
  %2602 = add i64 %2601, 1
  store i64 %2602, i64* %PC.i2782
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2605 = bitcast %union.anon* %2604 to i32*
  %2606 = load i32, i32* %2605, align 8
  %2607 = sext i32 %2606 to i64
  %2608 = lshr i64 %2607, 32
  store i64 %2608, i64* %2603, align 8
  store %struct.Memory* %loadMem_40c013, %struct.Memory** %MEMORY
  %loadMem_40c014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2610 = getelementptr inbounds %struct.GPR, %struct.GPR* %2609, i32 0, i32 33
  %2611 = getelementptr inbounds %struct.Reg, %struct.Reg* %2610, i32 0, i32 0
  %PC.i2779 = bitcast %union.anon* %2611 to i64*
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2613 = getelementptr inbounds %struct.GPR, %struct.GPR* %2612, i32 0, i32 9
  %2614 = getelementptr inbounds %struct.Reg, %struct.Reg* %2613, i32 0, i32 0
  %RSI.i2780 = bitcast %union.anon* %2614 to i64*
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 15
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %RBP.i2781 = bitcast %union.anon* %2617 to i64*
  %2618 = load i64, i64* %RBP.i2781
  %2619 = sub i64 %2618, 316
  %2620 = load i64, i64* %PC.i2779
  %2621 = add i64 %2620, 6
  store i64 %2621, i64* %PC.i2779
  %2622 = inttoptr i64 %2619 to i32*
  %2623 = load i32, i32* %2622
  %2624 = zext i32 %2623 to i64
  store i64 %2624, i64* %RSI.i2780, align 8
  store %struct.Memory* %loadMem_40c014, %struct.Memory** %MEMORY
  %loadMem_40c01a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2626 = getelementptr inbounds %struct.GPR, %struct.GPR* %2625, i32 0, i32 33
  %2627 = getelementptr inbounds %struct.Reg, %struct.Reg* %2626, i32 0, i32 0
  %PC.i2774 = bitcast %union.anon* %2627 to i64*
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 9
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %ESI.i2775 = bitcast %union.anon* %2630 to i32*
  %2631 = load i32, i32* %ESI.i2775
  %2632 = zext i32 %2631 to i64
  %2633 = load i64, i64* %PC.i2774
  %2634 = add i64 %2633, 2
  store i64 %2634, i64* %PC.i2774
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %2636 = bitcast %union.anon* %2635 to i32*
  %2637 = load i32, i32* %2636, align 8
  %2638 = zext i32 %2637 to i64
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %2640 = bitcast %union.anon* %2639 to i32*
  %2641 = load i32, i32* %2640, align 8
  %2642 = zext i32 %2641 to i64
  %2643 = shl i64 %2632, 32
  %2644 = ashr exact i64 %2643, 32
  %2645 = shl i64 %2642, 32
  %2646 = or i64 %2645, %2638
  %2647 = sdiv i64 %2646, %2644
  %2648 = shl i64 %2647, 32
  %2649 = ashr exact i64 %2648, 32
  %2650 = icmp eq i64 %2647, %2649
  br i1 %2650, label %2655, label %2651

; <label>:2651:                                   ; preds = %routine_shll__cl___eax.exit2786
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2653 = load i64, i64* %2652, align 8
  %2654 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2653, %struct.Memory* %loadMem_40c01a)
  br label %routine_idivl__esi.exit

; <label>:2655:                                   ; preds = %routine_shll__cl___eax.exit2786
  %2656 = srem i64 %2646, %2644
  %2657 = getelementptr inbounds %union.anon, %union.anon* %2635, i64 0, i32 0
  %2658 = and i64 %2647, 4294967295
  store i64 %2658, i64* %2657, align 8
  %2659 = getelementptr inbounds %union.anon, %union.anon* %2639, i64 0, i32 0
  %2660 = and i64 %2656, 4294967295
  store i64 %2660, i64* %2659, align 8
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2661, align 1
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %2662, align 1
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2663, align 1
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2664, align 1
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2665, align 1
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2666, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %2651, %2655
  %2667 = phi %struct.Memory* [ %2654, %2651 ], [ %loadMem_40c01a, %2655 ]
  store %struct.Memory* %2667, %struct.Memory** %MEMORY
  %loadMem_40c01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 33
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %PC.i2771 = bitcast %union.anon* %2670 to i64*
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2672 = getelementptr inbounds %struct.GPR, %struct.GPR* %2671, i32 0, i32 1
  %2673 = getelementptr inbounds %struct.Reg, %struct.Reg* %2672, i32 0, i32 0
  %EAX.i2772 = bitcast %union.anon* %2673 to i32*
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 15
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %RBP.i2773 = bitcast %union.anon* %2676 to i64*
  %2677 = load i64, i64* %RBP.i2773
  %2678 = sub i64 %2677, 184
  %2679 = load i32, i32* %EAX.i2772
  %2680 = zext i32 %2679 to i64
  %2681 = load i64, i64* %PC.i2771
  %2682 = add i64 %2681, 6
  store i64 %2682, i64* %PC.i2771
  %2683 = inttoptr i64 %2678 to i32*
  store i32 %2679, i32* %2683
  store %struct.Memory* %loadMem_40c01c, %struct.Memory** %MEMORY
  %loadMem_40c022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 33
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %PC.i2769 = bitcast %union.anon* %2686 to i64*
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 15
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %RBP.i2770 = bitcast %union.anon* %2689 to i64*
  %2690 = load i64, i64* %RBP.i2770
  %2691 = sub i64 %2690, 24
  %2692 = load i64, i64* %PC.i2769
  %2693 = add i64 %2692, 7
  store i64 %2693, i64* %PC.i2769
  %2694 = inttoptr i64 %2691 to i32*
  store i32 0, i32* %2694
  store %struct.Memory* %loadMem_40c022, %struct.Memory** %MEMORY
  br label %block_.L_40c029

block_.L_40c029:                                  ; preds = %block_.L_40c0ec, %routine_idivl__esi.exit
  %loadMem_40c029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2696 = getelementptr inbounds %struct.GPR, %struct.GPR* %2695, i32 0, i32 33
  %2697 = getelementptr inbounds %struct.Reg, %struct.Reg* %2696, i32 0, i32 0
  %PC.i2767 = bitcast %union.anon* %2697 to i64*
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2699 = getelementptr inbounds %struct.GPR, %struct.GPR* %2698, i32 0, i32 15
  %2700 = getelementptr inbounds %struct.Reg, %struct.Reg* %2699, i32 0, i32 0
  %RBP.i2768 = bitcast %union.anon* %2700 to i64*
  %2701 = load i64, i64* %RBP.i2768
  %2702 = sub i64 %2701, 24
  %2703 = load i64, i64* %PC.i2767
  %2704 = add i64 %2703, 4
  store i64 %2704, i64* %PC.i2767
  %2705 = inttoptr i64 %2702 to i32*
  %2706 = load i32, i32* %2705
  %2707 = sub i32 %2706, 4
  %2708 = icmp ult i32 %2706, 4
  %2709 = zext i1 %2708 to i8
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2709, i8* %2710, align 1
  %2711 = and i32 %2707, 255
  %2712 = call i32 @llvm.ctpop.i32(i32 %2711)
  %2713 = trunc i32 %2712 to i8
  %2714 = and i8 %2713, 1
  %2715 = xor i8 %2714, 1
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2715, i8* %2716, align 1
  %2717 = xor i32 %2706, 4
  %2718 = xor i32 %2717, %2707
  %2719 = lshr i32 %2718, 4
  %2720 = trunc i32 %2719 to i8
  %2721 = and i8 %2720, 1
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2721, i8* %2722, align 1
  %2723 = icmp eq i32 %2707, 0
  %2724 = zext i1 %2723 to i8
  %2725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2724, i8* %2725, align 1
  %2726 = lshr i32 %2707, 31
  %2727 = trunc i32 %2726 to i8
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2727, i8* %2728, align 1
  %2729 = lshr i32 %2706, 31
  %2730 = xor i32 %2726, %2729
  %2731 = add i32 %2730, %2729
  %2732 = icmp eq i32 %2731, 2
  %2733 = zext i1 %2732 to i8
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2733, i8* %2734, align 1
  store %struct.Memory* %loadMem_40c029, %struct.Memory** %MEMORY
  %loadMem_40c02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 33
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %PC.i2766 = bitcast %union.anon* %2737 to i64*
  %2738 = load i64, i64* %PC.i2766
  %2739 = add i64 %2738, 205
  %2740 = load i64, i64* %PC.i2766
  %2741 = add i64 %2740, 6
  %2742 = load i64, i64* %PC.i2766
  %2743 = add i64 %2742, 6
  store i64 %2743, i64* %PC.i2766
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2745 = load i8, i8* %2744, align 1
  %2746 = icmp ne i8 %2745, 0
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2748 = load i8, i8* %2747, align 1
  %2749 = icmp ne i8 %2748, 0
  %2750 = xor i1 %2746, %2749
  %2751 = xor i1 %2750, true
  %2752 = zext i1 %2751 to i8
  store i8 %2752, i8* %BRANCH_TAKEN, align 1
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2754 = select i1 %2750, i64 %2741, i64 %2739
  store i64 %2754, i64* %2753, align 8
  store %struct.Memory* %loadMem_40c02d, %struct.Memory** %MEMORY
  %loadBr_40c02d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c02d = icmp eq i8 %loadBr_40c02d, 1
  br i1 %cmpBr_40c02d, label %block_.L_40c0fa, label %block_40c033

block_40c033:                                     ; preds = %block_.L_40c029
  %loadMem_40c033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2756 = getelementptr inbounds %struct.GPR, %struct.GPR* %2755, i32 0, i32 33
  %2757 = getelementptr inbounds %struct.Reg, %struct.Reg* %2756, i32 0, i32 0
  %PC.i2764 = bitcast %union.anon* %2757 to i64*
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2759 = getelementptr inbounds %struct.GPR, %struct.GPR* %2758, i32 0, i32 15
  %2760 = getelementptr inbounds %struct.Reg, %struct.Reg* %2759, i32 0, i32 0
  %RBP.i2765 = bitcast %union.anon* %2760 to i64*
  %2761 = load i64, i64* %RBP.i2765
  %2762 = sub i64 %2761, 20
  %2763 = load i64, i64* %PC.i2764
  %2764 = add i64 %2763, 7
  store i64 %2764, i64* %PC.i2764
  %2765 = inttoptr i64 %2762 to i32*
  store i32 0, i32* %2765
  store %struct.Memory* %loadMem_40c033, %struct.Memory** %MEMORY
  br label %block_.L_40c03a

block_.L_40c03a:                                  ; preds = %block_40c044, %block_40c033
  %loadMem_40c03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2767 = getelementptr inbounds %struct.GPR, %struct.GPR* %2766, i32 0, i32 33
  %2768 = getelementptr inbounds %struct.Reg, %struct.Reg* %2767, i32 0, i32 0
  %PC.i2762 = bitcast %union.anon* %2768 to i64*
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2770 = getelementptr inbounds %struct.GPR, %struct.GPR* %2769, i32 0, i32 15
  %2771 = getelementptr inbounds %struct.Reg, %struct.Reg* %2770, i32 0, i32 0
  %RBP.i2763 = bitcast %union.anon* %2771 to i64*
  %2772 = load i64, i64* %RBP.i2763
  %2773 = sub i64 %2772, 20
  %2774 = load i64, i64* %PC.i2762
  %2775 = add i64 %2774, 4
  store i64 %2775, i64* %PC.i2762
  %2776 = inttoptr i64 %2773 to i32*
  %2777 = load i32, i32* %2776
  %2778 = sub i32 %2777, 4
  %2779 = icmp ult i32 %2777, 4
  %2780 = zext i1 %2779 to i8
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2780, i8* %2781, align 1
  %2782 = and i32 %2778, 255
  %2783 = call i32 @llvm.ctpop.i32(i32 %2782)
  %2784 = trunc i32 %2783 to i8
  %2785 = and i8 %2784, 1
  %2786 = xor i8 %2785, 1
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2786, i8* %2787, align 1
  %2788 = xor i32 %2777, 4
  %2789 = xor i32 %2788, %2778
  %2790 = lshr i32 %2789, 4
  %2791 = trunc i32 %2790 to i8
  %2792 = and i8 %2791, 1
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2792, i8* %2793, align 1
  %2794 = icmp eq i32 %2778, 0
  %2795 = zext i1 %2794 to i8
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2795, i8* %2796, align 1
  %2797 = lshr i32 %2778, 31
  %2798 = trunc i32 %2797 to i8
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2798, i8* %2799, align 1
  %2800 = lshr i32 %2777, 31
  %2801 = xor i32 %2797, %2800
  %2802 = add i32 %2801, %2800
  %2803 = icmp eq i32 %2802, 2
  %2804 = zext i1 %2803 to i8
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2804, i8* %2805, align 1
  store %struct.Memory* %loadMem_40c03a, %struct.Memory** %MEMORY
  %loadMem_40c03e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2807 = getelementptr inbounds %struct.GPR, %struct.GPR* %2806, i32 0, i32 33
  %2808 = getelementptr inbounds %struct.Reg, %struct.Reg* %2807, i32 0, i32 0
  %PC.i2761 = bitcast %union.anon* %2808 to i64*
  %2809 = load i64, i64* %PC.i2761
  %2810 = add i64 %2809, 169
  %2811 = load i64, i64* %PC.i2761
  %2812 = add i64 %2811, 6
  %2813 = load i64, i64* %PC.i2761
  %2814 = add i64 %2813, 6
  store i64 %2814, i64* %PC.i2761
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2816 = load i8, i8* %2815, align 1
  %2817 = icmp ne i8 %2816, 0
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2819 = load i8, i8* %2818, align 1
  %2820 = icmp ne i8 %2819, 0
  %2821 = xor i1 %2817, %2820
  %2822 = xor i1 %2821, true
  %2823 = zext i1 %2822 to i8
  store i8 %2823, i8* %BRANCH_TAKEN, align 1
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2825 = select i1 %2821, i64 %2812, i64 %2810
  store i64 %2825, i64* %2824, align 8
  store %struct.Memory* %loadMem_40c03e, %struct.Memory** %MEMORY
  %loadBr_40c03e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c03e = icmp eq i8 %loadBr_40c03e, 1
  br i1 %cmpBr_40c03e, label %block_.L_40c0e7, label %block_40c044

block_40c044:                                     ; preds = %block_.L_40c03a
  %loadMem_40c044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 33
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %PC.i2758 = bitcast %union.anon* %2828 to i64*
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 1
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %RAX.i2759 = bitcast %union.anon* %2831 to i64*
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 15
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %RBP.i2760 = bitcast %union.anon* %2834 to i64*
  %2835 = load i64, i64* %RBP.i2760
  %2836 = sub i64 %2835, 176
  %2837 = load i64, i64* %PC.i2758
  %2838 = add i64 %2837, 7
  store i64 %2838, i64* %PC.i2758
  store i64 %2836, i64* %RAX.i2759, align 8
  store %struct.Memory* %loadMem_40c044, %struct.Memory** %MEMORY
  %loadMem_40c04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 33
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %PC.i2756 = bitcast %union.anon* %2841 to i64*
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 5
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %RCX.i2757 = bitcast %union.anon* %2844 to i64*
  %2845 = load i64, i64* %PC.i2756
  %2846 = add i64 %2845, 8
  store i64 %2846, i64* %PC.i2756
  %2847 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2847, i64* %RCX.i2757, align 8
  store %struct.Memory* %loadMem_40c04b, %struct.Memory** %MEMORY
  %loadMem_40c053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2849 = getelementptr inbounds %struct.GPR, %struct.GPR* %2848, i32 0, i32 33
  %2850 = getelementptr inbounds %struct.Reg, %struct.Reg* %2849, i32 0, i32 0
  %PC.i2754 = bitcast %union.anon* %2850 to i64*
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 5
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %RCX.i2755 = bitcast %union.anon* %2853 to i64*
  %2854 = load i64, i64* %RCX.i2755
  %2855 = load i64, i64* %PC.i2754
  %2856 = add i64 %2855, 7
  store i64 %2856, i64* %PC.i2754
  %2857 = add i64 12600, %2854
  store i64 %2857, i64* %RCX.i2755, align 8
  %2858 = icmp ult i64 %2857, %2854
  %2859 = icmp ult i64 %2857, 12600
  %2860 = or i1 %2858, %2859
  %2861 = zext i1 %2860 to i8
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2861, i8* %2862, align 1
  %2863 = trunc i64 %2857 to i32
  %2864 = and i32 %2863, 255
  %2865 = call i32 @llvm.ctpop.i32(i32 %2864)
  %2866 = trunc i32 %2865 to i8
  %2867 = and i8 %2866, 1
  %2868 = xor i8 %2867, 1
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2868, i8* %2869, align 1
  %2870 = xor i64 12600, %2854
  %2871 = xor i64 %2870, %2857
  %2872 = lshr i64 %2871, 4
  %2873 = trunc i64 %2872 to i8
  %2874 = and i8 %2873, 1
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2874, i8* %2875, align 1
  %2876 = icmp eq i64 %2857, 0
  %2877 = zext i1 %2876 to i8
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2877, i8* %2878, align 1
  %2879 = lshr i64 %2857, 63
  %2880 = trunc i64 %2879 to i8
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2880, i8* %2881, align 1
  %2882 = lshr i64 %2854, 63
  %2883 = xor i64 %2879, %2882
  %2884 = add i64 %2883, %2879
  %2885 = icmp eq i64 %2884, 2
  %2886 = zext i1 %2885 to i8
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2886, i8* %2887, align 1
  store %struct.Memory* %loadMem_40c053, %struct.Memory** %MEMORY
  %loadMem_40c05a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2889 = getelementptr inbounds %struct.GPR, %struct.GPR* %2888, i32 0, i32 33
  %2890 = getelementptr inbounds %struct.Reg, %struct.Reg* %2889, i32 0, i32 0
  %PC.i2751 = bitcast %union.anon* %2890 to i64*
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 7
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %RDX.i2752 = bitcast %union.anon* %2893 to i64*
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 15
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %RBP.i2753 = bitcast %union.anon* %2896 to i64*
  %2897 = load i64, i64* %RBP.i2753
  %2898 = sub i64 %2897, 20
  %2899 = load i64, i64* %PC.i2751
  %2900 = add i64 %2899, 3
  store i64 %2900, i64* %PC.i2751
  %2901 = inttoptr i64 %2898 to i32*
  %2902 = load i32, i32* %2901
  %2903 = zext i32 %2902 to i64
  store i64 %2903, i64* %RDX.i2752, align 8
  store %struct.Memory* %loadMem_40c05a, %struct.Memory** %MEMORY
  %loadMem_40c05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2905 = getelementptr inbounds %struct.GPR, %struct.GPR* %2904, i32 0, i32 33
  %2906 = getelementptr inbounds %struct.Reg, %struct.Reg* %2905, i32 0, i32 0
  %PC.i2748 = bitcast %union.anon* %2906 to i64*
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2908 = getelementptr inbounds %struct.GPR, %struct.GPR* %2907, i32 0, i32 7
  %2909 = getelementptr inbounds %struct.Reg, %struct.Reg* %2908, i32 0, i32 0
  %RDX.i2749 = bitcast %union.anon* %2909 to i64*
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 15
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %RBP.i2750 = bitcast %union.anon* %2912 to i64*
  %2913 = load i64, i64* %RDX.i2749
  %2914 = load i64, i64* %RBP.i2750
  %2915 = sub i64 %2914, 4
  %2916 = load i64, i64* %PC.i2748
  %2917 = add i64 %2916, 3
  store i64 %2917, i64* %PC.i2748
  %2918 = trunc i64 %2913 to i32
  %2919 = inttoptr i64 %2915 to i32*
  %2920 = load i32, i32* %2919
  %2921 = add i32 %2920, %2918
  %2922 = zext i32 %2921 to i64
  store i64 %2922, i64* %RDX.i2749, align 8
  %2923 = icmp ult i32 %2921, %2918
  %2924 = icmp ult i32 %2921, %2920
  %2925 = or i1 %2923, %2924
  %2926 = zext i1 %2925 to i8
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2926, i8* %2927, align 1
  %2928 = and i32 %2921, 255
  %2929 = call i32 @llvm.ctpop.i32(i32 %2928)
  %2930 = trunc i32 %2929 to i8
  %2931 = and i8 %2930, 1
  %2932 = xor i8 %2931, 1
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2932, i8* %2933, align 1
  %2934 = xor i32 %2920, %2918
  %2935 = xor i32 %2934, %2921
  %2936 = lshr i32 %2935, 4
  %2937 = trunc i32 %2936 to i8
  %2938 = and i8 %2937, 1
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2938, i8* %2939, align 1
  %2940 = icmp eq i32 %2921, 0
  %2941 = zext i1 %2940 to i8
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2941, i8* %2942, align 1
  %2943 = lshr i32 %2921, 31
  %2944 = trunc i32 %2943 to i8
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2944, i8* %2945, align 1
  %2946 = lshr i32 %2918, 31
  %2947 = lshr i32 %2920, 31
  %2948 = xor i32 %2943, %2946
  %2949 = xor i32 %2943, %2947
  %2950 = add i32 %2948, %2949
  %2951 = icmp eq i32 %2950, 2
  %2952 = zext i1 %2951 to i8
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2952, i8* %2953, align 1
  store %struct.Memory* %loadMem_40c05d, %struct.Memory** %MEMORY
  %loadMem_40c060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i2745 = bitcast %union.anon* %2956 to i64*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 7
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %EDX.i2746 = bitcast %union.anon* %2959 to i32*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 9
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %RSI.i2747 = bitcast %union.anon* %2962 to i64*
  %2963 = load i32, i32* %EDX.i2746
  %2964 = zext i32 %2963 to i64
  %2965 = load i64, i64* %PC.i2745
  %2966 = add i64 %2965, 3
  store i64 %2966, i64* %PC.i2745
  %2967 = shl i64 %2964, 32
  %2968 = ashr exact i64 %2967, 32
  store i64 %2968, i64* %RSI.i2747, align 8
  store %struct.Memory* %loadMem_40c060, %struct.Memory** %MEMORY
  %loadMem_40c063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2970 = getelementptr inbounds %struct.GPR, %struct.GPR* %2969, i32 0, i32 33
  %2971 = getelementptr inbounds %struct.Reg, %struct.Reg* %2970, i32 0, i32 0
  %PC.i2743 = bitcast %union.anon* %2971 to i64*
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2973 = getelementptr inbounds %struct.GPR, %struct.GPR* %2972, i32 0, i32 9
  %2974 = getelementptr inbounds %struct.Reg, %struct.Reg* %2973, i32 0, i32 0
  %RSI.i2744 = bitcast %union.anon* %2974 to i64*
  %2975 = load i64, i64* %RSI.i2744
  %2976 = load i64, i64* %PC.i2743
  %2977 = add i64 %2976, 4
  store i64 %2977, i64* %PC.i2743
  %2978 = shl i64 %2975, 4
  %2979 = icmp slt i64 %2978, 0
  %2980 = shl i64 %2978, 1
  store i64 %2980, i64* %RSI.i2744, align 8
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2982 = zext i1 %2979 to i8
  store i8 %2982, i8* %2981, align 1
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2984 = trunc i64 %2980 to i32
  %2985 = and i32 %2984, 254
  %2986 = call i32 @llvm.ctpop.i32(i32 %2985)
  %2987 = trunc i32 %2986 to i8
  %2988 = and i8 %2987, 1
  %2989 = xor i8 %2988, 1
  store i8 %2989, i8* %2983, align 1
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2990, align 1
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2992 = icmp eq i64 %2980, 0
  %2993 = zext i1 %2992 to i8
  store i8 %2993, i8* %2991, align 1
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2995 = lshr i64 %2980, 63
  %2996 = trunc i64 %2995 to i8
  store i8 %2996, i8* %2994, align 1
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2997, align 1
  store %struct.Memory* %loadMem_40c063, %struct.Memory** %MEMORY
  %loadMem_40c067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2999 = getelementptr inbounds %struct.GPR, %struct.GPR* %2998, i32 0, i32 33
  %3000 = getelementptr inbounds %struct.Reg, %struct.Reg* %2999, i32 0, i32 0
  %PC.i2740 = bitcast %union.anon* %3000 to i64*
  %3001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3002 = getelementptr inbounds %struct.GPR, %struct.GPR* %3001, i32 0, i32 5
  %3003 = getelementptr inbounds %struct.Reg, %struct.Reg* %3002, i32 0, i32 0
  %RCX.i2741 = bitcast %union.anon* %3003 to i64*
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3005 = getelementptr inbounds %struct.GPR, %struct.GPR* %3004, i32 0, i32 9
  %3006 = getelementptr inbounds %struct.Reg, %struct.Reg* %3005, i32 0, i32 0
  %RSI.i2742 = bitcast %union.anon* %3006 to i64*
  %3007 = load i64, i64* %RCX.i2741
  %3008 = load i64, i64* %RSI.i2742
  %3009 = load i64, i64* %PC.i2740
  %3010 = add i64 %3009, 3
  store i64 %3010, i64* %PC.i2740
  %3011 = add i64 %3008, %3007
  store i64 %3011, i64* %RCX.i2741, align 8
  %3012 = icmp ult i64 %3011, %3007
  %3013 = icmp ult i64 %3011, %3008
  %3014 = or i1 %3012, %3013
  %3015 = zext i1 %3014 to i8
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3015, i8* %3016, align 1
  %3017 = trunc i64 %3011 to i32
  %3018 = and i32 %3017, 255
  %3019 = call i32 @llvm.ctpop.i32(i32 %3018)
  %3020 = trunc i32 %3019 to i8
  %3021 = and i8 %3020, 1
  %3022 = xor i8 %3021, 1
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3022, i8* %3023, align 1
  %3024 = xor i64 %3008, %3007
  %3025 = xor i64 %3024, %3011
  %3026 = lshr i64 %3025, 4
  %3027 = trunc i64 %3026 to i8
  %3028 = and i8 %3027, 1
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3028, i8* %3029, align 1
  %3030 = icmp eq i64 %3011, 0
  %3031 = zext i1 %3030 to i8
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3031, i8* %3032, align 1
  %3033 = lshr i64 %3011, 63
  %3034 = trunc i64 %3033 to i8
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3034, i8* %3035, align 1
  %3036 = lshr i64 %3007, 63
  %3037 = lshr i64 %3008, 63
  %3038 = xor i64 %3033, %3036
  %3039 = xor i64 %3033, %3037
  %3040 = add i64 %3038, %3039
  %3041 = icmp eq i64 %3040, 2
  %3042 = zext i1 %3041 to i8
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3042, i8* %3043, align 1
  store %struct.Memory* %loadMem_40c067, %struct.Memory** %MEMORY
  %loadMem_40c06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 33
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %PC.i2737 = bitcast %union.anon* %3046 to i64*
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3048 = getelementptr inbounds %struct.GPR, %struct.GPR* %3047, i32 0, i32 7
  %3049 = getelementptr inbounds %struct.Reg, %struct.Reg* %3048, i32 0, i32 0
  %RDX.i2738 = bitcast %union.anon* %3049 to i64*
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3051 = getelementptr inbounds %struct.GPR, %struct.GPR* %3050, i32 0, i32 15
  %3052 = getelementptr inbounds %struct.Reg, %struct.Reg* %3051, i32 0, i32 0
  %RBP.i2739 = bitcast %union.anon* %3052 to i64*
  %3053 = load i64, i64* %RBP.i2739
  %3054 = sub i64 %3053, 24
  %3055 = load i64, i64* %PC.i2737
  %3056 = add i64 %3055, 3
  store i64 %3056, i64* %PC.i2737
  %3057 = inttoptr i64 %3054 to i32*
  %3058 = load i32, i32* %3057
  %3059 = zext i32 %3058 to i64
  store i64 %3059, i64* %RDX.i2738, align 8
  store %struct.Memory* %loadMem_40c06a, %struct.Memory** %MEMORY
  %loadMem_40c06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3061 = getelementptr inbounds %struct.GPR, %struct.GPR* %3060, i32 0, i32 33
  %3062 = getelementptr inbounds %struct.Reg, %struct.Reg* %3061, i32 0, i32 0
  %PC.i2734 = bitcast %union.anon* %3062 to i64*
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 7
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %RDX.i2735 = bitcast %union.anon* %3065 to i64*
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 15
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %RBP.i2736 = bitcast %union.anon* %3068 to i64*
  %3069 = load i64, i64* %RDX.i2735
  %3070 = load i64, i64* %RBP.i2736
  %3071 = sub i64 %3070, 8
  %3072 = load i64, i64* %PC.i2734
  %3073 = add i64 %3072, 3
  store i64 %3073, i64* %PC.i2734
  %3074 = trunc i64 %3069 to i32
  %3075 = inttoptr i64 %3071 to i32*
  %3076 = load i32, i32* %3075
  %3077 = add i32 %3076, %3074
  %3078 = zext i32 %3077 to i64
  store i64 %3078, i64* %RDX.i2735, align 8
  %3079 = icmp ult i32 %3077, %3074
  %3080 = icmp ult i32 %3077, %3076
  %3081 = or i1 %3079, %3080
  %3082 = zext i1 %3081 to i8
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3082, i8* %3083, align 1
  %3084 = and i32 %3077, 255
  %3085 = call i32 @llvm.ctpop.i32(i32 %3084)
  %3086 = trunc i32 %3085 to i8
  %3087 = and i8 %3086, 1
  %3088 = xor i8 %3087, 1
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3088, i8* %3089, align 1
  %3090 = xor i32 %3076, %3074
  %3091 = xor i32 %3090, %3077
  %3092 = lshr i32 %3091, 4
  %3093 = trunc i32 %3092 to i8
  %3094 = and i8 %3093, 1
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3094, i8* %3095, align 1
  %3096 = icmp eq i32 %3077, 0
  %3097 = zext i1 %3096 to i8
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3097, i8* %3098, align 1
  %3099 = lshr i32 %3077, 31
  %3100 = trunc i32 %3099 to i8
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3100, i8* %3101, align 1
  %3102 = lshr i32 %3074, 31
  %3103 = lshr i32 %3076, 31
  %3104 = xor i32 %3099, %3102
  %3105 = xor i32 %3099, %3103
  %3106 = add i32 %3104, %3105
  %3107 = icmp eq i32 %3106, 2
  %3108 = zext i1 %3107 to i8
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3108, i8* %3109, align 1
  store %struct.Memory* %loadMem_40c06d, %struct.Memory** %MEMORY
  %loadMem_40c070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 33
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %PC.i2731 = bitcast %union.anon* %3112 to i64*
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3114 = getelementptr inbounds %struct.GPR, %struct.GPR* %3113, i32 0, i32 7
  %3115 = getelementptr inbounds %struct.Reg, %struct.Reg* %3114, i32 0, i32 0
  %EDX.i2732 = bitcast %union.anon* %3115 to i32*
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 9
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %RSI.i2733 = bitcast %union.anon* %3118 to i64*
  %3119 = load i32, i32* %EDX.i2732
  %3120 = zext i32 %3119 to i64
  %3121 = load i64, i64* %PC.i2731
  %3122 = add i64 %3121, 3
  store i64 %3122, i64* %PC.i2731
  %3123 = shl i64 %3120, 32
  %3124 = ashr exact i64 %3123, 32
  store i64 %3124, i64* %RSI.i2733, align 8
  store %struct.Memory* %loadMem_40c070, %struct.Memory** %MEMORY
  %loadMem_40c073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 33
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %PC.i2727 = bitcast %union.anon* %3127 to i64*
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 5
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %RCX.i2728 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 7
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %RDX.i2729 = bitcast %union.anon* %3133 to i64*
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3135 = getelementptr inbounds %struct.GPR, %struct.GPR* %3134, i32 0, i32 9
  %3136 = getelementptr inbounds %struct.Reg, %struct.Reg* %3135, i32 0, i32 0
  %RSI.i2730 = bitcast %union.anon* %3136 to i64*
  %3137 = load i64, i64* %RCX.i2728
  %3138 = load i64, i64* %RSI.i2730
  %3139 = mul i64 %3138, 2
  %3140 = add i64 %3139, %3137
  %3141 = load i64, i64* %PC.i2727
  %3142 = add i64 %3141, 4
  store i64 %3142, i64* %PC.i2727
  %3143 = inttoptr i64 %3140 to i16*
  %3144 = load i16, i16* %3143
  %3145 = zext i16 %3144 to i64
  store i64 %3145, i64* %RDX.i2729, align 8
  store %struct.Memory* %loadMem_40c073, %struct.Memory** %MEMORY
  %loadMem_40c077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3147 = getelementptr inbounds %struct.GPR, %struct.GPR* %3146, i32 0, i32 33
  %3148 = getelementptr inbounds %struct.Reg, %struct.Reg* %3147, i32 0, i32 0
  %PC.i2725 = bitcast %union.anon* %3148 to i64*
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3150 = getelementptr inbounds %struct.GPR, %struct.GPR* %3149, i32 0, i32 5
  %3151 = getelementptr inbounds %struct.Reg, %struct.Reg* %3150, i32 0, i32 0
  %RCX.i2726 = bitcast %union.anon* %3151 to i64*
  %3152 = load i64, i64* %PC.i2725
  %3153 = add i64 %3152, 8
  store i64 %3153, i64* %PC.i2725
  %3154 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3154, i64* %RCX.i2726, align 8
  store %struct.Memory* %loadMem_40c077, %struct.Memory** %MEMORY
  %loadMem_40c07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 33
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %PC.i2723 = bitcast %union.anon* %3157 to i64*
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 5
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %RCX.i2724 = bitcast %union.anon* %3160 to i64*
  %3161 = load i64, i64* %RCX.i2724
  %3162 = load i64, i64* %PC.i2723
  %3163 = add i64 %3162, 7
  store i64 %3163, i64* %PC.i2723
  %3164 = add i64 13112, %3161
  store i64 %3164, i64* %RCX.i2724, align 8
  %3165 = icmp ult i64 %3164, %3161
  %3166 = icmp ult i64 %3164, 13112
  %3167 = or i1 %3165, %3166
  %3168 = zext i1 %3167 to i8
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3168, i8* %3169, align 1
  %3170 = trunc i64 %3164 to i32
  %3171 = and i32 %3170, 255
  %3172 = call i32 @llvm.ctpop.i32(i32 %3171)
  %3173 = trunc i32 %3172 to i8
  %3174 = and i8 %3173, 1
  %3175 = xor i8 %3174, 1
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3175, i8* %3176, align 1
  %3177 = xor i64 13112, %3161
  %3178 = xor i64 %3177, %3164
  %3179 = lshr i64 %3178, 4
  %3180 = trunc i64 %3179 to i8
  %3181 = and i8 %3180, 1
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3181, i8* %3182, align 1
  %3183 = icmp eq i64 %3164, 0
  %3184 = zext i1 %3183 to i8
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3184, i8* %3185, align 1
  %3186 = lshr i64 %3164, 63
  %3187 = trunc i64 %3186 to i8
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3187, i8* %3188, align 1
  %3189 = lshr i64 %3161, 63
  %3190 = xor i64 %3186, %3189
  %3191 = add i64 %3190, %3186
  %3192 = icmp eq i64 %3191, 2
  %3193 = zext i1 %3192 to i8
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3193, i8* %3194, align 1
  store %struct.Memory* %loadMem_40c07f, %struct.Memory** %MEMORY
  %loadMem_40c086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3196 = getelementptr inbounds %struct.GPR, %struct.GPR* %3195, i32 0, i32 33
  %3197 = getelementptr inbounds %struct.Reg, %struct.Reg* %3196, i32 0, i32 0
  %PC.i2720 = bitcast %union.anon* %3197 to i64*
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 9
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %RSI.i2721 = bitcast %union.anon* %3200 to i64*
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 15
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %RBP.i2722 = bitcast %union.anon* %3203 to i64*
  %3204 = load i64, i64* %RBP.i2722
  %3205 = sub i64 %3204, 20
  %3206 = load i64, i64* %PC.i2720
  %3207 = add i64 %3206, 4
  store i64 %3207, i64* %PC.i2720
  %3208 = inttoptr i64 %3205 to i32*
  %3209 = load i32, i32* %3208
  %3210 = sext i32 %3209 to i64
  store i64 %3210, i64* %RSI.i2721, align 8
  store %struct.Memory* %loadMem_40c086, %struct.Memory** %MEMORY
  %loadMem_40c08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3212 = getelementptr inbounds %struct.GPR, %struct.GPR* %3211, i32 0, i32 33
  %3213 = getelementptr inbounds %struct.Reg, %struct.Reg* %3212, i32 0, i32 0
  %PC.i2718 = bitcast %union.anon* %3213 to i64*
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 9
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %RSI.i2719 = bitcast %union.anon* %3216 to i64*
  %3217 = load i64, i64* %RSI.i2719
  %3218 = load i64, i64* %PC.i2718
  %3219 = add i64 %3218, 4
  store i64 %3219, i64* %PC.i2718
  %3220 = shl i64 %3217, 5
  %3221 = icmp slt i64 %3220, 0
  %3222 = shl i64 %3220, 1
  store i64 %3222, i64* %RSI.i2719, align 8
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3224 = zext i1 %3221 to i8
  store i8 %3224, i8* %3223, align 1
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3226 = trunc i64 %3222 to i32
  %3227 = and i32 %3226, 254
  %3228 = call i32 @llvm.ctpop.i32(i32 %3227)
  %3229 = trunc i32 %3228 to i8
  %3230 = and i8 %3229, 1
  %3231 = xor i8 %3230, 1
  store i8 %3231, i8* %3225, align 1
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3232, align 1
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3234 = icmp eq i64 %3222, 0
  %3235 = zext i1 %3234 to i8
  store i8 %3235, i8* %3233, align 1
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3237 = lshr i64 %3222, 63
  %3238 = trunc i64 %3237 to i8
  store i8 %3238, i8* %3236, align 1
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3239, align 1
  store %struct.Memory* %loadMem_40c08a, %struct.Memory** %MEMORY
  %loadMem_40c08e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 33
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %PC.i2715 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 5
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %RCX.i2716 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 9
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RSI.i2717 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RCX.i2716
  %3250 = load i64, i64* %RSI.i2717
  %3251 = load i64, i64* %PC.i2715
  %3252 = add i64 %3251, 3
  store i64 %3252, i64* %PC.i2715
  %3253 = add i64 %3250, %3249
  store i64 %3253, i64* %RCX.i2716, align 8
  %3254 = icmp ult i64 %3253, %3249
  %3255 = icmp ult i64 %3253, %3250
  %3256 = or i1 %3254, %3255
  %3257 = zext i1 %3256 to i8
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3257, i8* %3258, align 1
  %3259 = trunc i64 %3253 to i32
  %3260 = and i32 %3259, 255
  %3261 = call i32 @llvm.ctpop.i32(i32 %3260)
  %3262 = trunc i32 %3261 to i8
  %3263 = and i8 %3262, 1
  %3264 = xor i8 %3263, 1
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3264, i8* %3265, align 1
  %3266 = xor i64 %3250, %3249
  %3267 = xor i64 %3266, %3253
  %3268 = lshr i64 %3267, 4
  %3269 = trunc i64 %3268 to i8
  %3270 = and i8 %3269, 1
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3270, i8* %3271, align 1
  %3272 = icmp eq i64 %3253, 0
  %3273 = zext i1 %3272 to i8
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3273, i8* %3274, align 1
  %3275 = lshr i64 %3253, 63
  %3276 = trunc i64 %3275 to i8
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3276, i8* %3277, align 1
  %3278 = lshr i64 %3249, 63
  %3279 = lshr i64 %3250, 63
  %3280 = xor i64 %3275, %3278
  %3281 = xor i64 %3275, %3279
  %3282 = add i64 %3280, %3281
  %3283 = icmp eq i64 %3282, 2
  %3284 = zext i1 %3283 to i8
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3284, i8* %3285, align 1
  store %struct.Memory* %loadMem_40c08e, %struct.Memory** %MEMORY
  %loadMem_40c091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3287 = getelementptr inbounds %struct.GPR, %struct.GPR* %3286, i32 0, i32 33
  %3288 = getelementptr inbounds %struct.Reg, %struct.Reg* %3287, i32 0, i32 0
  %PC.i2712 = bitcast %union.anon* %3288 to i64*
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3290 = getelementptr inbounds %struct.GPR, %struct.GPR* %3289, i32 0, i32 9
  %3291 = getelementptr inbounds %struct.Reg, %struct.Reg* %3290, i32 0, i32 0
  %RSI.i2713 = bitcast %union.anon* %3291 to i64*
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3293 = getelementptr inbounds %struct.GPR, %struct.GPR* %3292, i32 0, i32 15
  %3294 = getelementptr inbounds %struct.Reg, %struct.Reg* %3293, i32 0, i32 0
  %RBP.i2714 = bitcast %union.anon* %3294 to i64*
  %3295 = load i64, i64* %RBP.i2714
  %3296 = sub i64 %3295, 24
  %3297 = load i64, i64* %PC.i2712
  %3298 = add i64 %3297, 4
  store i64 %3298, i64* %PC.i2712
  %3299 = inttoptr i64 %3296 to i32*
  %3300 = load i32, i32* %3299
  %3301 = sext i32 %3300 to i64
  store i64 %3301, i64* %RSI.i2713, align 8
  store %struct.Memory* %loadMem_40c091, %struct.Memory** %MEMORY
  %loadMem_40c095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3303 = getelementptr inbounds %struct.GPR, %struct.GPR* %3302, i32 0, i32 33
  %3304 = getelementptr inbounds %struct.Reg, %struct.Reg* %3303, i32 0, i32 0
  %PC.i2708 = bitcast %union.anon* %3304 to i64*
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 5
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %RCX.i2709 = bitcast %union.anon* %3307 to i64*
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3309 = getelementptr inbounds %struct.GPR, %struct.GPR* %3308, i32 0, i32 7
  %3310 = getelementptr inbounds %struct.Reg, %struct.Reg* %3309, i32 0, i32 0
  %RDX.i2710 = bitcast %union.anon* %3310 to i64*
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 9
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %RSI.i2711 = bitcast %union.anon* %3313 to i64*
  %3314 = load i64, i64* %RDX.i2710
  %3315 = load i64, i64* %RCX.i2709
  %3316 = load i64, i64* %RSI.i2711
  %3317 = mul i64 %3316, 4
  %3318 = add i64 %3317, %3315
  %3319 = load i64, i64* %PC.i2708
  %3320 = add i64 %3319, 3
  store i64 %3320, i64* %PC.i2708
  %3321 = trunc i64 %3314 to i32
  %3322 = inttoptr i64 %3318 to i32*
  %3323 = load i32, i32* %3322
  %3324 = add i32 %3323, %3321
  %3325 = zext i32 %3324 to i64
  store i64 %3325, i64* %RDX.i2710, align 8
  %3326 = icmp ult i32 %3324, %3321
  %3327 = icmp ult i32 %3324, %3323
  %3328 = or i1 %3326, %3327
  %3329 = zext i1 %3328 to i8
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3329, i8* %3330, align 1
  %3331 = and i32 %3324, 255
  %3332 = call i32 @llvm.ctpop.i32(i32 %3331)
  %3333 = trunc i32 %3332 to i8
  %3334 = and i8 %3333, 1
  %3335 = xor i8 %3334, 1
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3335, i8* %3336, align 1
  %3337 = xor i32 %3323, %3321
  %3338 = xor i32 %3337, %3324
  %3339 = lshr i32 %3338, 4
  %3340 = trunc i32 %3339 to i8
  %3341 = and i8 %3340, 1
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3341, i8* %3342, align 1
  %3343 = icmp eq i32 %3324, 0
  %3344 = zext i1 %3343 to i8
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3344, i8* %3345, align 1
  %3346 = lshr i32 %3324, 31
  %3347 = trunc i32 %3346 to i8
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3347, i8* %3348, align 1
  %3349 = lshr i32 %3321, 31
  %3350 = lshr i32 %3323, 31
  %3351 = xor i32 %3346, %3349
  %3352 = xor i32 %3346, %3350
  %3353 = add i32 %3351, %3352
  %3354 = icmp eq i32 %3353, 2
  %3355 = zext i1 %3354 to i8
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3355, i8* %3356, align 1
  store %struct.Memory* %loadMem_40c095, %struct.Memory** %MEMORY
  %loadMem_40c098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3358 = getelementptr inbounds %struct.GPR, %struct.GPR* %3357, i32 0, i32 33
  %3359 = getelementptr inbounds %struct.Reg, %struct.Reg* %3358, i32 0, i32 0
  %PC.i2704 = bitcast %union.anon* %3359 to i64*
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 7
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %EDX.i2705 = bitcast %union.anon* %3362 to i32*
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 5
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %RCX.i2706 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 9
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RSI.i2707 = bitcast %union.anon* %3368 to i64*
  %3369 = load i64, i64* %RCX.i2706
  %3370 = load i64, i64* %RSI.i2707
  %3371 = mul i64 %3370, 4
  %3372 = add i64 %3371, %3369
  %3373 = load i32, i32* %EDX.i2705
  %3374 = zext i32 %3373 to i64
  %3375 = load i64, i64* %PC.i2704
  %3376 = add i64 %3375, 3
  store i64 %3376, i64* %PC.i2704
  %3377 = inttoptr i64 %3372 to i32*
  store i32 %3373, i32* %3377
  store %struct.Memory* %loadMem_40c098, %struct.Memory** %MEMORY
  %loadMem_40c09b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 33
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %PC.i2702 = bitcast %union.anon* %3380 to i64*
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 5
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %RCX.i2703 = bitcast %union.anon* %3383 to i64*
  %3384 = load i64, i64* %PC.i2702
  %3385 = add i64 %3384, 8
  store i64 %3385, i64* %PC.i2702
  %3386 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3386, i64* %RCX.i2703, align 8
  store %struct.Memory* %loadMem_40c09b, %struct.Memory** %MEMORY
  %loadMem_40c0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 33
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %PC.i2700 = bitcast %union.anon* %3389 to i64*
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3391 = getelementptr inbounds %struct.GPR, %struct.GPR* %3390, i32 0, i32 5
  %3392 = getelementptr inbounds %struct.Reg, %struct.Reg* %3391, i32 0, i32 0
  %RCX.i2701 = bitcast %union.anon* %3392 to i64*
  %3393 = load i64, i64* %RCX.i2701
  %3394 = load i64, i64* %PC.i2700
  %3395 = add i64 %3394, 7
  store i64 %3395, i64* %PC.i2700
  %3396 = add i64 12600, %3393
  store i64 %3396, i64* %RCX.i2701, align 8
  %3397 = icmp ult i64 %3396, %3393
  %3398 = icmp ult i64 %3396, 12600
  %3399 = or i1 %3397, %3398
  %3400 = zext i1 %3399 to i8
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3400, i8* %3401, align 1
  %3402 = trunc i64 %3396 to i32
  %3403 = and i32 %3402, 255
  %3404 = call i32 @llvm.ctpop.i32(i32 %3403)
  %3405 = trunc i32 %3404 to i8
  %3406 = and i8 %3405, 1
  %3407 = xor i8 %3406, 1
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3407, i8* %3408, align 1
  %3409 = xor i64 12600, %3393
  %3410 = xor i64 %3409, %3396
  %3411 = lshr i64 %3410, 4
  %3412 = trunc i64 %3411 to i8
  %3413 = and i8 %3412, 1
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3413, i8* %3414, align 1
  %3415 = icmp eq i64 %3396, 0
  %3416 = zext i1 %3415 to i8
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3416, i8* %3417, align 1
  %3418 = lshr i64 %3396, 63
  %3419 = trunc i64 %3418 to i8
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3419, i8* %3420, align 1
  %3421 = lshr i64 %3393, 63
  %3422 = xor i64 %3418, %3421
  %3423 = add i64 %3422, %3418
  %3424 = icmp eq i64 %3423, 2
  %3425 = zext i1 %3424 to i8
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3425, i8* %3426, align 1
  store %struct.Memory* %loadMem_40c0a3, %struct.Memory** %MEMORY
  %loadMem_40c0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3428 = getelementptr inbounds %struct.GPR, %struct.GPR* %3427, i32 0, i32 33
  %3429 = getelementptr inbounds %struct.Reg, %struct.Reg* %3428, i32 0, i32 0
  %PC.i2697 = bitcast %union.anon* %3429 to i64*
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3431 = getelementptr inbounds %struct.GPR, %struct.GPR* %3430, i32 0, i32 7
  %3432 = getelementptr inbounds %struct.Reg, %struct.Reg* %3431, i32 0, i32 0
  %RDX.i2698 = bitcast %union.anon* %3432 to i64*
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3434 = getelementptr inbounds %struct.GPR, %struct.GPR* %3433, i32 0, i32 15
  %3435 = getelementptr inbounds %struct.Reg, %struct.Reg* %3434, i32 0, i32 0
  %RBP.i2699 = bitcast %union.anon* %3435 to i64*
  %3436 = load i64, i64* %RBP.i2699
  %3437 = sub i64 %3436, 20
  %3438 = load i64, i64* %PC.i2697
  %3439 = add i64 %3438, 3
  store i64 %3439, i64* %PC.i2697
  %3440 = inttoptr i64 %3437 to i32*
  %3441 = load i32, i32* %3440
  %3442 = zext i32 %3441 to i64
  store i64 %3442, i64* %RDX.i2698, align 8
  store %struct.Memory* %loadMem_40c0aa, %struct.Memory** %MEMORY
  %loadMem_40c0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3444 = getelementptr inbounds %struct.GPR, %struct.GPR* %3443, i32 0, i32 33
  %3445 = getelementptr inbounds %struct.Reg, %struct.Reg* %3444, i32 0, i32 0
  %PC.i2694 = bitcast %union.anon* %3445 to i64*
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 7
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %RDX.i2695 = bitcast %union.anon* %3448 to i64*
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 15
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %RBP.i2696 = bitcast %union.anon* %3451 to i64*
  %3452 = load i64, i64* %RDX.i2695
  %3453 = load i64, i64* %RBP.i2696
  %3454 = sub i64 %3453, 4
  %3455 = load i64, i64* %PC.i2694
  %3456 = add i64 %3455, 3
  store i64 %3456, i64* %PC.i2694
  %3457 = trunc i64 %3452 to i32
  %3458 = inttoptr i64 %3454 to i32*
  %3459 = load i32, i32* %3458
  %3460 = add i32 %3459, %3457
  %3461 = zext i32 %3460 to i64
  store i64 %3461, i64* %RDX.i2695, align 8
  %3462 = icmp ult i32 %3460, %3457
  %3463 = icmp ult i32 %3460, %3459
  %3464 = or i1 %3462, %3463
  %3465 = zext i1 %3464 to i8
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3465, i8* %3466, align 1
  %3467 = and i32 %3460, 255
  %3468 = call i32 @llvm.ctpop.i32(i32 %3467)
  %3469 = trunc i32 %3468 to i8
  %3470 = and i8 %3469, 1
  %3471 = xor i8 %3470, 1
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3471, i8* %3472, align 1
  %3473 = xor i32 %3459, %3457
  %3474 = xor i32 %3473, %3460
  %3475 = lshr i32 %3474, 4
  %3476 = trunc i32 %3475 to i8
  %3477 = and i8 %3476, 1
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3477, i8* %3478, align 1
  %3479 = icmp eq i32 %3460, 0
  %3480 = zext i1 %3479 to i8
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3480, i8* %3481, align 1
  %3482 = lshr i32 %3460, 31
  %3483 = trunc i32 %3482 to i8
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3483, i8* %3484, align 1
  %3485 = lshr i32 %3457, 31
  %3486 = lshr i32 %3459, 31
  %3487 = xor i32 %3482, %3485
  %3488 = xor i32 %3482, %3486
  %3489 = add i32 %3487, %3488
  %3490 = icmp eq i32 %3489, 2
  %3491 = zext i1 %3490 to i8
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3491, i8* %3492, align 1
  store %struct.Memory* %loadMem_40c0ad, %struct.Memory** %MEMORY
  %loadMem_40c0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3494 = getelementptr inbounds %struct.GPR, %struct.GPR* %3493, i32 0, i32 33
  %3495 = getelementptr inbounds %struct.Reg, %struct.Reg* %3494, i32 0, i32 0
  %PC.i2691 = bitcast %union.anon* %3495 to i64*
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3497 = getelementptr inbounds %struct.GPR, %struct.GPR* %3496, i32 0, i32 7
  %3498 = getelementptr inbounds %struct.Reg, %struct.Reg* %3497, i32 0, i32 0
  %EDX.i2692 = bitcast %union.anon* %3498 to i32*
  %3499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3500 = getelementptr inbounds %struct.GPR, %struct.GPR* %3499, i32 0, i32 9
  %3501 = getelementptr inbounds %struct.Reg, %struct.Reg* %3500, i32 0, i32 0
  %RSI.i2693 = bitcast %union.anon* %3501 to i64*
  %3502 = load i32, i32* %EDX.i2692
  %3503 = zext i32 %3502 to i64
  %3504 = load i64, i64* %PC.i2691
  %3505 = add i64 %3504, 3
  store i64 %3505, i64* %PC.i2691
  %3506 = shl i64 %3503, 32
  %3507 = ashr exact i64 %3506, 32
  store i64 %3507, i64* %RSI.i2693, align 8
  store %struct.Memory* %loadMem_40c0b0, %struct.Memory** %MEMORY
  %loadMem_40c0b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 33
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %PC.i2689 = bitcast %union.anon* %3510 to i64*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 9
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %RSI.i2690 = bitcast %union.anon* %3513 to i64*
  %3514 = load i64, i64* %RSI.i2690
  %3515 = load i64, i64* %PC.i2689
  %3516 = add i64 %3515, 4
  store i64 %3516, i64* %PC.i2689
  %3517 = shl i64 %3514, 4
  %3518 = icmp slt i64 %3517, 0
  %3519 = shl i64 %3517, 1
  store i64 %3519, i64* %RSI.i2690, align 8
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3521 = zext i1 %3518 to i8
  store i8 %3521, i8* %3520, align 1
  %3522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3523 = trunc i64 %3519 to i32
  %3524 = and i32 %3523, 254
  %3525 = call i32 @llvm.ctpop.i32(i32 %3524)
  %3526 = trunc i32 %3525 to i8
  %3527 = and i8 %3526, 1
  %3528 = xor i8 %3527, 1
  store i8 %3528, i8* %3522, align 1
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3529, align 1
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3531 = icmp eq i64 %3519, 0
  %3532 = zext i1 %3531 to i8
  store i8 %3532, i8* %3530, align 1
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3534 = lshr i64 %3519, 63
  %3535 = trunc i64 %3534 to i8
  store i8 %3535, i8* %3533, align 1
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3536, align 1
  store %struct.Memory* %loadMem_40c0b3, %struct.Memory** %MEMORY
  %loadMem_40c0b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3538 = getelementptr inbounds %struct.GPR, %struct.GPR* %3537, i32 0, i32 33
  %3539 = getelementptr inbounds %struct.Reg, %struct.Reg* %3538, i32 0, i32 0
  %PC.i2686 = bitcast %union.anon* %3539 to i64*
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3541 = getelementptr inbounds %struct.GPR, %struct.GPR* %3540, i32 0, i32 5
  %3542 = getelementptr inbounds %struct.Reg, %struct.Reg* %3541, i32 0, i32 0
  %RCX.i2687 = bitcast %union.anon* %3542 to i64*
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 9
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %RSI.i2688 = bitcast %union.anon* %3545 to i64*
  %3546 = load i64, i64* %RCX.i2687
  %3547 = load i64, i64* %RSI.i2688
  %3548 = load i64, i64* %PC.i2686
  %3549 = add i64 %3548, 3
  store i64 %3549, i64* %PC.i2686
  %3550 = add i64 %3547, %3546
  store i64 %3550, i64* %RCX.i2687, align 8
  %3551 = icmp ult i64 %3550, %3546
  %3552 = icmp ult i64 %3550, %3547
  %3553 = or i1 %3551, %3552
  %3554 = zext i1 %3553 to i8
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3554, i8* %3555, align 1
  %3556 = trunc i64 %3550 to i32
  %3557 = and i32 %3556, 255
  %3558 = call i32 @llvm.ctpop.i32(i32 %3557)
  %3559 = trunc i32 %3558 to i8
  %3560 = and i8 %3559, 1
  %3561 = xor i8 %3560, 1
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3561, i8* %3562, align 1
  %3563 = xor i64 %3547, %3546
  %3564 = xor i64 %3563, %3550
  %3565 = lshr i64 %3564, 4
  %3566 = trunc i64 %3565 to i8
  %3567 = and i8 %3566, 1
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3567, i8* %3568, align 1
  %3569 = icmp eq i64 %3550, 0
  %3570 = zext i1 %3569 to i8
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3570, i8* %3571, align 1
  %3572 = lshr i64 %3550, 63
  %3573 = trunc i64 %3572 to i8
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3573, i8* %3574, align 1
  %3575 = lshr i64 %3546, 63
  %3576 = lshr i64 %3547, 63
  %3577 = xor i64 %3572, %3575
  %3578 = xor i64 %3572, %3576
  %3579 = add i64 %3577, %3578
  %3580 = icmp eq i64 %3579, 2
  %3581 = zext i1 %3580 to i8
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3581, i8* %3582, align 1
  store %struct.Memory* %loadMem_40c0b7, %struct.Memory** %MEMORY
  %loadMem_40c0ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 33
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %PC.i2683 = bitcast %union.anon* %3585 to i64*
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 7
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %RDX.i2684 = bitcast %union.anon* %3588 to i64*
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 15
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %RBP.i2685 = bitcast %union.anon* %3591 to i64*
  %3592 = load i64, i64* %RBP.i2685
  %3593 = sub i64 %3592, 24
  %3594 = load i64, i64* %PC.i2683
  %3595 = add i64 %3594, 3
  store i64 %3595, i64* %PC.i2683
  %3596 = inttoptr i64 %3593 to i32*
  %3597 = load i32, i32* %3596
  %3598 = zext i32 %3597 to i64
  store i64 %3598, i64* %RDX.i2684, align 8
  store %struct.Memory* %loadMem_40c0ba, %struct.Memory** %MEMORY
  %loadMem_40c0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 33
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %PC.i2680 = bitcast %union.anon* %3601 to i64*
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3603 = getelementptr inbounds %struct.GPR, %struct.GPR* %3602, i32 0, i32 7
  %3604 = getelementptr inbounds %struct.Reg, %struct.Reg* %3603, i32 0, i32 0
  %RDX.i2681 = bitcast %union.anon* %3604 to i64*
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 15
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %RBP.i2682 = bitcast %union.anon* %3607 to i64*
  %3608 = load i64, i64* %RDX.i2681
  %3609 = load i64, i64* %RBP.i2682
  %3610 = sub i64 %3609, 8
  %3611 = load i64, i64* %PC.i2680
  %3612 = add i64 %3611, 3
  store i64 %3612, i64* %PC.i2680
  %3613 = trunc i64 %3608 to i32
  %3614 = inttoptr i64 %3610 to i32*
  %3615 = load i32, i32* %3614
  %3616 = add i32 %3615, %3613
  %3617 = zext i32 %3616 to i64
  store i64 %3617, i64* %RDX.i2681, align 8
  %3618 = icmp ult i32 %3616, %3613
  %3619 = icmp ult i32 %3616, %3615
  %3620 = or i1 %3618, %3619
  %3621 = zext i1 %3620 to i8
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3621, i8* %3622, align 1
  %3623 = and i32 %3616, 255
  %3624 = call i32 @llvm.ctpop.i32(i32 %3623)
  %3625 = trunc i32 %3624 to i8
  %3626 = and i8 %3625, 1
  %3627 = xor i8 %3626, 1
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3627, i8* %3628, align 1
  %3629 = xor i32 %3615, %3613
  %3630 = xor i32 %3629, %3616
  %3631 = lshr i32 %3630, 4
  %3632 = trunc i32 %3631 to i8
  %3633 = and i8 %3632, 1
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3633, i8* %3634, align 1
  %3635 = icmp eq i32 %3616, 0
  %3636 = zext i1 %3635 to i8
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3636, i8* %3637, align 1
  %3638 = lshr i32 %3616, 31
  %3639 = trunc i32 %3638 to i8
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3639, i8* %3640, align 1
  %3641 = lshr i32 %3613, 31
  %3642 = lshr i32 %3615, 31
  %3643 = xor i32 %3638, %3641
  %3644 = xor i32 %3638, %3642
  %3645 = add i32 %3643, %3644
  %3646 = icmp eq i32 %3645, 2
  %3647 = zext i1 %3646 to i8
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3647, i8* %3648, align 1
  store %struct.Memory* %loadMem_40c0bd, %struct.Memory** %MEMORY
  %loadMem_40c0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3650 = getelementptr inbounds %struct.GPR, %struct.GPR* %3649, i32 0, i32 33
  %3651 = getelementptr inbounds %struct.Reg, %struct.Reg* %3650, i32 0, i32 0
  %PC.i2677 = bitcast %union.anon* %3651 to i64*
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3653 = getelementptr inbounds %struct.GPR, %struct.GPR* %3652, i32 0, i32 7
  %3654 = getelementptr inbounds %struct.Reg, %struct.Reg* %3653, i32 0, i32 0
  %EDX.i2678 = bitcast %union.anon* %3654 to i32*
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 9
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %RSI.i2679 = bitcast %union.anon* %3657 to i64*
  %3658 = load i32, i32* %EDX.i2678
  %3659 = zext i32 %3658 to i64
  %3660 = load i64, i64* %PC.i2677
  %3661 = add i64 %3660, 3
  store i64 %3661, i64* %PC.i2677
  %3662 = shl i64 %3659, 32
  %3663 = ashr exact i64 %3662, 32
  store i64 %3663, i64* %RSI.i2679, align 8
  store %struct.Memory* %loadMem_40c0c0, %struct.Memory** %MEMORY
  %loadMem_40c0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 33
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %PC.i2673 = bitcast %union.anon* %3666 to i64*
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3668 = getelementptr inbounds %struct.GPR, %struct.GPR* %3667, i32 0, i32 5
  %3669 = getelementptr inbounds %struct.Reg, %struct.Reg* %3668, i32 0, i32 0
  %RCX.i2674 = bitcast %union.anon* %3669 to i64*
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3671 = getelementptr inbounds %struct.GPR, %struct.GPR* %3670, i32 0, i32 7
  %3672 = getelementptr inbounds %struct.Reg, %struct.Reg* %3671, i32 0, i32 0
  %RDX.i2675 = bitcast %union.anon* %3672 to i64*
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 9
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %RSI.i2676 = bitcast %union.anon* %3675 to i64*
  %3676 = load i64, i64* %RCX.i2674
  %3677 = load i64, i64* %RSI.i2676
  %3678 = mul i64 %3677, 2
  %3679 = add i64 %3678, %3676
  %3680 = load i64, i64* %PC.i2673
  %3681 = add i64 %3680, 4
  store i64 %3681, i64* %PC.i2673
  %3682 = inttoptr i64 %3679 to i16*
  %3683 = load i16, i16* %3682
  %3684 = zext i16 %3683 to i64
  store i64 %3684, i64* %RDX.i2675, align 8
  store %struct.Memory* %loadMem_40c0c3, %struct.Memory** %MEMORY
  %loadMem_40c0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3686 = getelementptr inbounds %struct.GPR, %struct.GPR* %3685, i32 0, i32 33
  %3687 = getelementptr inbounds %struct.Reg, %struct.Reg* %3686, i32 0, i32 0
  %PC.i2670 = bitcast %union.anon* %3687 to i64*
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 5
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %RCX.i2671 = bitcast %union.anon* %3690 to i64*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 15
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %RBP.i2672 = bitcast %union.anon* %3693 to i64*
  %3694 = load i64, i64* %RBP.i2672
  %3695 = sub i64 %3694, 20
  %3696 = load i64, i64* %PC.i2670
  %3697 = add i64 %3696, 4
  store i64 %3697, i64* %PC.i2670
  %3698 = inttoptr i64 %3695 to i32*
  %3699 = load i32, i32* %3698
  %3700 = sext i32 %3699 to i64
  store i64 %3700, i64* %RCX.i2671, align 8
  store %struct.Memory* %loadMem_40c0c7, %struct.Memory** %MEMORY
  %loadMem_40c0cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 33
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %PC.i2668 = bitcast %union.anon* %3703 to i64*
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 5
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %RCX.i2669 = bitcast %union.anon* %3706 to i64*
  %3707 = load i64, i64* %RCX.i2669
  %3708 = load i64, i64* %PC.i2668
  %3709 = add i64 %3708, 4
  store i64 %3709, i64* %PC.i2668
  %3710 = shl i64 %3707, 3
  %3711 = icmp slt i64 %3710, 0
  %3712 = shl i64 %3710, 1
  store i64 %3712, i64* %RCX.i2669, align 8
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3714 = zext i1 %3711 to i8
  store i8 %3714, i8* %3713, align 1
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3716 = trunc i64 %3712 to i32
  %3717 = and i32 %3716, 254
  %3718 = call i32 @llvm.ctpop.i32(i32 %3717)
  %3719 = trunc i32 %3718 to i8
  %3720 = and i8 %3719, 1
  %3721 = xor i8 %3720, 1
  store i8 %3721, i8* %3715, align 1
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3722, align 1
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3724 = icmp eq i64 %3712, 0
  %3725 = zext i1 %3724 to i8
  store i8 %3725, i8* %3723, align 1
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3727 = lshr i64 %3712, 63
  %3728 = trunc i64 %3727 to i8
  store i8 %3728, i8* %3726, align 1
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3729, align 1
  store %struct.Memory* %loadMem_40c0cb, %struct.Memory** %MEMORY
  %loadMem_40c0cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 33
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %PC.i2665 = bitcast %union.anon* %3732 to i64*
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 1
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %RAX.i2666 = bitcast %union.anon* %3735 to i64*
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 5
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %RCX.i2667 = bitcast %union.anon* %3738 to i64*
  %3739 = load i64, i64* %RAX.i2666
  %3740 = load i64, i64* %RCX.i2667
  %3741 = load i64, i64* %PC.i2665
  %3742 = add i64 %3741, 3
  store i64 %3742, i64* %PC.i2665
  %3743 = add i64 %3740, %3739
  store i64 %3743, i64* %RAX.i2666, align 8
  %3744 = icmp ult i64 %3743, %3739
  %3745 = icmp ult i64 %3743, %3740
  %3746 = or i1 %3744, %3745
  %3747 = zext i1 %3746 to i8
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3747, i8* %3748, align 1
  %3749 = trunc i64 %3743 to i32
  %3750 = and i32 %3749, 255
  %3751 = call i32 @llvm.ctpop.i32(i32 %3750)
  %3752 = trunc i32 %3751 to i8
  %3753 = and i8 %3752, 1
  %3754 = xor i8 %3753, 1
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3754, i8* %3755, align 1
  %3756 = xor i64 %3740, %3739
  %3757 = xor i64 %3756, %3743
  %3758 = lshr i64 %3757, 4
  %3759 = trunc i64 %3758 to i8
  %3760 = and i8 %3759, 1
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3760, i8* %3761, align 1
  %3762 = icmp eq i64 %3743, 0
  %3763 = zext i1 %3762 to i8
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3763, i8* %3764, align 1
  %3765 = lshr i64 %3743, 63
  %3766 = trunc i64 %3765 to i8
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3766, i8* %3767, align 1
  %3768 = lshr i64 %3739, 63
  %3769 = lshr i64 %3740, 63
  %3770 = xor i64 %3765, %3768
  %3771 = xor i64 %3765, %3769
  %3772 = add i64 %3770, %3771
  %3773 = icmp eq i64 %3772, 2
  %3774 = zext i1 %3773 to i8
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3774, i8* %3775, align 1
  store %struct.Memory* %loadMem_40c0cf, %struct.Memory** %MEMORY
  %loadMem_40c0d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 33
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %PC.i2662 = bitcast %union.anon* %3778 to i64*
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3780 = getelementptr inbounds %struct.GPR, %struct.GPR* %3779, i32 0, i32 5
  %3781 = getelementptr inbounds %struct.Reg, %struct.Reg* %3780, i32 0, i32 0
  %RCX.i2663 = bitcast %union.anon* %3781 to i64*
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3783 = getelementptr inbounds %struct.GPR, %struct.GPR* %3782, i32 0, i32 15
  %3784 = getelementptr inbounds %struct.Reg, %struct.Reg* %3783, i32 0, i32 0
  %RBP.i2664 = bitcast %union.anon* %3784 to i64*
  %3785 = load i64, i64* %RBP.i2664
  %3786 = sub i64 %3785, 24
  %3787 = load i64, i64* %PC.i2662
  %3788 = add i64 %3787, 4
  store i64 %3788, i64* %PC.i2662
  %3789 = inttoptr i64 %3786 to i32*
  %3790 = load i32, i32* %3789
  %3791 = sext i32 %3790 to i64
  store i64 %3791, i64* %RCX.i2663, align 8
  store %struct.Memory* %loadMem_40c0d2, %struct.Memory** %MEMORY
  %loadMem_40c0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 33
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %PC.i2658 = bitcast %union.anon* %3794 to i64*
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3796 = getelementptr inbounds %struct.GPR, %struct.GPR* %3795, i32 0, i32 7
  %3797 = getelementptr inbounds %struct.Reg, %struct.Reg* %3796, i32 0, i32 0
  %EDX.i2659 = bitcast %union.anon* %3797 to i32*
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3799 = getelementptr inbounds %struct.GPR, %struct.GPR* %3798, i32 0, i32 1
  %3800 = getelementptr inbounds %struct.Reg, %struct.Reg* %3799, i32 0, i32 0
  %RAX.i2660 = bitcast %union.anon* %3800 to i64*
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3802 = getelementptr inbounds %struct.GPR, %struct.GPR* %3801, i32 0, i32 5
  %3803 = getelementptr inbounds %struct.Reg, %struct.Reg* %3802, i32 0, i32 0
  %RCX.i2661 = bitcast %union.anon* %3803 to i64*
  %3804 = load i64, i64* %RAX.i2660
  %3805 = load i64, i64* %RCX.i2661
  %3806 = mul i64 %3805, 4
  %3807 = add i64 %3806, %3804
  %3808 = load i32, i32* %EDX.i2659
  %3809 = zext i32 %3808 to i64
  %3810 = load i64, i64* %PC.i2658
  %3811 = add i64 %3810, 3
  store i64 %3811, i64* %PC.i2658
  %3812 = inttoptr i64 %3807 to i32*
  store i32 %3808, i32* %3812
  store %struct.Memory* %loadMem_40c0d6, %struct.Memory** %MEMORY
  %loadMem_40c0d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 33
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %PC.i2655 = bitcast %union.anon* %3815 to i64*
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3817 = getelementptr inbounds %struct.GPR, %struct.GPR* %3816, i32 0, i32 1
  %3818 = getelementptr inbounds %struct.Reg, %struct.Reg* %3817, i32 0, i32 0
  %RAX.i2656 = bitcast %union.anon* %3818 to i64*
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3820 = getelementptr inbounds %struct.GPR, %struct.GPR* %3819, i32 0, i32 15
  %3821 = getelementptr inbounds %struct.Reg, %struct.Reg* %3820, i32 0, i32 0
  %RBP.i2657 = bitcast %union.anon* %3821 to i64*
  %3822 = load i64, i64* %RBP.i2657
  %3823 = sub i64 %3822, 20
  %3824 = load i64, i64* %PC.i2655
  %3825 = add i64 %3824, 3
  store i64 %3825, i64* %PC.i2655
  %3826 = inttoptr i64 %3823 to i32*
  %3827 = load i32, i32* %3826
  %3828 = zext i32 %3827 to i64
  store i64 %3828, i64* %RAX.i2656, align 8
  store %struct.Memory* %loadMem_40c0d9, %struct.Memory** %MEMORY
  %loadMem_40c0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3830 = getelementptr inbounds %struct.GPR, %struct.GPR* %3829, i32 0, i32 33
  %3831 = getelementptr inbounds %struct.Reg, %struct.Reg* %3830, i32 0, i32 0
  %PC.i2653 = bitcast %union.anon* %3831 to i64*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3833 = getelementptr inbounds %struct.GPR, %struct.GPR* %3832, i32 0, i32 1
  %3834 = getelementptr inbounds %struct.Reg, %struct.Reg* %3833, i32 0, i32 0
  %RAX.i2654 = bitcast %union.anon* %3834 to i64*
  %3835 = load i64, i64* %RAX.i2654
  %3836 = load i64, i64* %PC.i2653
  %3837 = add i64 %3836, 3
  store i64 %3837, i64* %PC.i2653
  %3838 = trunc i64 %3835 to i32
  %3839 = add i32 1, %3838
  %3840 = zext i32 %3839 to i64
  store i64 %3840, i64* %RAX.i2654, align 8
  %3841 = icmp ult i32 %3839, %3838
  %3842 = icmp ult i32 %3839, 1
  %3843 = or i1 %3841, %3842
  %3844 = zext i1 %3843 to i8
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3844, i8* %3845, align 1
  %3846 = and i32 %3839, 255
  %3847 = call i32 @llvm.ctpop.i32(i32 %3846)
  %3848 = trunc i32 %3847 to i8
  %3849 = and i8 %3848, 1
  %3850 = xor i8 %3849, 1
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3850, i8* %3851, align 1
  %3852 = xor i64 1, %3835
  %3853 = trunc i64 %3852 to i32
  %3854 = xor i32 %3853, %3839
  %3855 = lshr i32 %3854, 4
  %3856 = trunc i32 %3855 to i8
  %3857 = and i8 %3856, 1
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3857, i8* %3858, align 1
  %3859 = icmp eq i32 %3839, 0
  %3860 = zext i1 %3859 to i8
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3860, i8* %3861, align 1
  %3862 = lshr i32 %3839, 31
  %3863 = trunc i32 %3862 to i8
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3863, i8* %3864, align 1
  %3865 = lshr i32 %3838, 31
  %3866 = xor i32 %3862, %3865
  %3867 = add i32 %3866, %3862
  %3868 = icmp eq i32 %3867, 2
  %3869 = zext i1 %3868 to i8
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3869, i8* %3870, align 1
  store %struct.Memory* %loadMem_40c0dc, %struct.Memory** %MEMORY
  %loadMem_40c0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 33
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %PC.i2650 = bitcast %union.anon* %3873 to i64*
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3875 = getelementptr inbounds %struct.GPR, %struct.GPR* %3874, i32 0, i32 1
  %3876 = getelementptr inbounds %struct.Reg, %struct.Reg* %3875, i32 0, i32 0
  %EAX.i2651 = bitcast %union.anon* %3876 to i32*
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3878 = getelementptr inbounds %struct.GPR, %struct.GPR* %3877, i32 0, i32 15
  %3879 = getelementptr inbounds %struct.Reg, %struct.Reg* %3878, i32 0, i32 0
  %RBP.i2652 = bitcast %union.anon* %3879 to i64*
  %3880 = load i64, i64* %RBP.i2652
  %3881 = sub i64 %3880, 20
  %3882 = load i32, i32* %EAX.i2651
  %3883 = zext i32 %3882 to i64
  %3884 = load i64, i64* %PC.i2650
  %3885 = add i64 %3884, 3
  store i64 %3885, i64* %PC.i2650
  %3886 = inttoptr i64 %3881 to i32*
  store i32 %3882, i32* %3886
  store %struct.Memory* %loadMem_40c0df, %struct.Memory** %MEMORY
  %loadMem_40c0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3888 = getelementptr inbounds %struct.GPR, %struct.GPR* %3887, i32 0, i32 33
  %3889 = getelementptr inbounds %struct.Reg, %struct.Reg* %3888, i32 0, i32 0
  %PC.i2649 = bitcast %union.anon* %3889 to i64*
  %3890 = load i64, i64* %PC.i2649
  %3891 = add i64 %3890, -168
  %3892 = load i64, i64* %PC.i2649
  %3893 = add i64 %3892, 5
  store i64 %3893, i64* %PC.i2649
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3891, i64* %3894, align 8
  store %struct.Memory* %loadMem_40c0e2, %struct.Memory** %MEMORY
  br label %block_.L_40c03a

block_.L_40c0e7:                                  ; preds = %block_.L_40c03a
  %loadMem_40c0e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3896 = getelementptr inbounds %struct.GPR, %struct.GPR* %3895, i32 0, i32 33
  %3897 = getelementptr inbounds %struct.Reg, %struct.Reg* %3896, i32 0, i32 0
  %PC.i2648 = bitcast %union.anon* %3897 to i64*
  %3898 = load i64, i64* %PC.i2648
  %3899 = add i64 %3898, 5
  %3900 = load i64, i64* %PC.i2648
  %3901 = add i64 %3900, 5
  store i64 %3901, i64* %PC.i2648
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3899, i64* %3902, align 8
  store %struct.Memory* %loadMem_40c0e7, %struct.Memory** %MEMORY
  br label %block_.L_40c0ec

block_.L_40c0ec:                                  ; preds = %block_.L_40c0e7
  %loadMem_40c0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 33
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %PC.i2645 = bitcast %union.anon* %3905 to i64*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 1
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %RAX.i2646 = bitcast %union.anon* %3908 to i64*
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3910 = getelementptr inbounds %struct.GPR, %struct.GPR* %3909, i32 0, i32 15
  %3911 = getelementptr inbounds %struct.Reg, %struct.Reg* %3910, i32 0, i32 0
  %RBP.i2647 = bitcast %union.anon* %3911 to i64*
  %3912 = load i64, i64* %RBP.i2647
  %3913 = sub i64 %3912, 24
  %3914 = load i64, i64* %PC.i2645
  %3915 = add i64 %3914, 3
  store i64 %3915, i64* %PC.i2645
  %3916 = inttoptr i64 %3913 to i32*
  %3917 = load i32, i32* %3916
  %3918 = zext i32 %3917 to i64
  store i64 %3918, i64* %RAX.i2646, align 8
  store %struct.Memory* %loadMem_40c0ec, %struct.Memory** %MEMORY
  %loadMem_40c0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 33
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %PC.i2643 = bitcast %union.anon* %3921 to i64*
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3923 = getelementptr inbounds %struct.GPR, %struct.GPR* %3922, i32 0, i32 1
  %3924 = getelementptr inbounds %struct.Reg, %struct.Reg* %3923, i32 0, i32 0
  %RAX.i2644 = bitcast %union.anon* %3924 to i64*
  %3925 = load i64, i64* %RAX.i2644
  %3926 = load i64, i64* %PC.i2643
  %3927 = add i64 %3926, 3
  store i64 %3927, i64* %PC.i2643
  %3928 = trunc i64 %3925 to i32
  %3929 = add i32 1, %3928
  %3930 = zext i32 %3929 to i64
  store i64 %3930, i64* %RAX.i2644, align 8
  %3931 = icmp ult i32 %3929, %3928
  %3932 = icmp ult i32 %3929, 1
  %3933 = or i1 %3931, %3932
  %3934 = zext i1 %3933 to i8
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3934, i8* %3935, align 1
  %3936 = and i32 %3929, 255
  %3937 = call i32 @llvm.ctpop.i32(i32 %3936)
  %3938 = trunc i32 %3937 to i8
  %3939 = and i8 %3938, 1
  %3940 = xor i8 %3939, 1
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3940, i8* %3941, align 1
  %3942 = xor i64 1, %3925
  %3943 = trunc i64 %3942 to i32
  %3944 = xor i32 %3943, %3929
  %3945 = lshr i32 %3944, 4
  %3946 = trunc i32 %3945 to i8
  %3947 = and i8 %3946, 1
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3947, i8* %3948, align 1
  %3949 = icmp eq i32 %3929, 0
  %3950 = zext i1 %3949 to i8
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3950, i8* %3951, align 1
  %3952 = lshr i32 %3929, 31
  %3953 = trunc i32 %3952 to i8
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3953, i8* %3954, align 1
  %3955 = lshr i32 %3928, 31
  %3956 = xor i32 %3952, %3955
  %3957 = add i32 %3956, %3952
  %3958 = icmp eq i32 %3957, 2
  %3959 = zext i1 %3958 to i8
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3959, i8* %3960, align 1
  store %struct.Memory* %loadMem_40c0ef, %struct.Memory** %MEMORY
  %loadMem_40c0f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3962 = getelementptr inbounds %struct.GPR, %struct.GPR* %3961, i32 0, i32 33
  %3963 = getelementptr inbounds %struct.Reg, %struct.Reg* %3962, i32 0, i32 0
  %PC.i2640 = bitcast %union.anon* %3963 to i64*
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3965 = getelementptr inbounds %struct.GPR, %struct.GPR* %3964, i32 0, i32 1
  %3966 = getelementptr inbounds %struct.Reg, %struct.Reg* %3965, i32 0, i32 0
  %EAX.i2641 = bitcast %union.anon* %3966 to i32*
  %3967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3968 = getelementptr inbounds %struct.GPR, %struct.GPR* %3967, i32 0, i32 15
  %3969 = getelementptr inbounds %struct.Reg, %struct.Reg* %3968, i32 0, i32 0
  %RBP.i2642 = bitcast %union.anon* %3969 to i64*
  %3970 = load i64, i64* %RBP.i2642
  %3971 = sub i64 %3970, 24
  %3972 = load i32, i32* %EAX.i2641
  %3973 = zext i32 %3972 to i64
  %3974 = load i64, i64* %PC.i2640
  %3975 = add i64 %3974, 3
  store i64 %3975, i64* %PC.i2640
  %3976 = inttoptr i64 %3971 to i32*
  store i32 %3972, i32* %3976
  store %struct.Memory* %loadMem_40c0f2, %struct.Memory** %MEMORY
  %loadMem_40c0f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3978 = getelementptr inbounds %struct.GPR, %struct.GPR* %3977, i32 0, i32 33
  %3979 = getelementptr inbounds %struct.Reg, %struct.Reg* %3978, i32 0, i32 0
  %PC.i2639 = bitcast %union.anon* %3979 to i64*
  %3980 = load i64, i64* %PC.i2639
  %3981 = add i64 %3980, -204
  %3982 = load i64, i64* %PC.i2639
  %3983 = add i64 %3982, 5
  store i64 %3983, i64* %PC.i2639
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3981, i64* %3984, align 8
  store %struct.Memory* %loadMem_40c0f5, %struct.Memory** %MEMORY
  br label %block_.L_40c029

block_.L_40c0fa:                                  ; preds = %block_.L_40c029
  %loadMem_40c0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i2637 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 15
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %RBP.i2638 = bitcast %union.anon* %3990 to i64*
  %3991 = load i64, i64* %RBP.i2638
  %3992 = sub i64 %3991, 24
  %3993 = load i64, i64* %PC.i2637
  %3994 = add i64 %3993, 7
  store i64 %3994, i64* %PC.i2637
  %3995 = inttoptr i64 %3992 to i32*
  store i32 0, i32* %3995
  store %struct.Memory* %loadMem_40c0fa, %struct.Memory** %MEMORY
  br label %block_.L_40c101

block_.L_40c101:                                  ; preds = %block_.L_40c1c9, %block_.L_40c0fa
  %loadMem_40c101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3997 = getelementptr inbounds %struct.GPR, %struct.GPR* %3996, i32 0, i32 33
  %3998 = getelementptr inbounds %struct.Reg, %struct.Reg* %3997, i32 0, i32 0
  %PC.i2635 = bitcast %union.anon* %3998 to i64*
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 15
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %RBP.i2636 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %RBP.i2636
  %4003 = sub i64 %4002, 24
  %4004 = load i64, i64* %PC.i2635
  %4005 = add i64 %4004, 4
  store i64 %4005, i64* %PC.i2635
  %4006 = inttoptr i64 %4003 to i32*
  %4007 = load i32, i32* %4006
  %4008 = sub i32 %4007, 4
  %4009 = icmp ult i32 %4007, 4
  %4010 = zext i1 %4009 to i8
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4010, i8* %4011, align 1
  %4012 = and i32 %4008, 255
  %4013 = call i32 @llvm.ctpop.i32(i32 %4012)
  %4014 = trunc i32 %4013 to i8
  %4015 = and i8 %4014, 1
  %4016 = xor i8 %4015, 1
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4016, i8* %4017, align 1
  %4018 = xor i32 %4007, 4
  %4019 = xor i32 %4018, %4008
  %4020 = lshr i32 %4019, 4
  %4021 = trunc i32 %4020 to i8
  %4022 = and i8 %4021, 1
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4022, i8* %4023, align 1
  %4024 = icmp eq i32 %4008, 0
  %4025 = zext i1 %4024 to i8
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4025, i8* %4026, align 1
  %4027 = lshr i32 %4008, 31
  %4028 = trunc i32 %4027 to i8
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4028, i8* %4029, align 1
  %4030 = lshr i32 %4007, 31
  %4031 = xor i32 %4027, %4030
  %4032 = add i32 %4031, %4030
  %4033 = icmp eq i32 %4032, 2
  %4034 = zext i1 %4033 to i8
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4034, i8* %4035, align 1
  store %struct.Memory* %loadMem_40c101, %struct.Memory** %MEMORY
  %loadMem_40c105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 33
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %PC.i2634 = bitcast %union.anon* %4038 to i64*
  %4039 = load i64, i64* %PC.i2634
  %4040 = add i64 %4039, 318
  %4041 = load i64, i64* %PC.i2634
  %4042 = add i64 %4041, 6
  %4043 = load i64, i64* %PC.i2634
  %4044 = add i64 %4043, 6
  store i64 %4044, i64* %PC.i2634
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4046 = load i8, i8* %4045, align 1
  %4047 = icmp ne i8 %4046, 0
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4049 = load i8, i8* %4048, align 1
  %4050 = icmp ne i8 %4049, 0
  %4051 = xor i1 %4047, %4050
  %4052 = xor i1 %4051, true
  %4053 = zext i1 %4052 to i8
  store i8 %4053, i8* %BRANCH_TAKEN, align 1
  %4054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4055 = select i1 %4051, i64 %4042, i64 %4040
  store i64 %4055, i64* %4054, align 8
  store %struct.Memory* %loadMem_40c105, %struct.Memory** %MEMORY
  %loadBr_40c105 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c105 = icmp eq i8 %loadBr_40c105, 1
  br i1 %cmpBr_40c105, label %block_.L_40c243, label %block_40c10b

block_40c10b:                                     ; preds = %block_.L_40c101
  %loadMem_40c10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 33
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %PC.i2632 = bitcast %union.anon* %4058 to i64*
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 15
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %RBP.i2633 = bitcast %union.anon* %4061 to i64*
  %4062 = load i64, i64* %RBP.i2633
  %4063 = sub i64 %4062, 20
  %4064 = load i64, i64* %PC.i2632
  %4065 = add i64 %4064, 7
  store i64 %4065, i64* %PC.i2632
  %4066 = inttoptr i64 %4063 to i32*
  store i32 0, i32* %4066
  store %struct.Memory* %loadMem_40c10b, %struct.Memory** %MEMORY
  br label %block_.L_40c112

block_.L_40c112:                                  ; preds = %block_40c11c, %block_40c10b
  %loadMem_40c112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4068 = getelementptr inbounds %struct.GPR, %struct.GPR* %4067, i32 0, i32 33
  %4069 = getelementptr inbounds %struct.Reg, %struct.Reg* %4068, i32 0, i32 0
  %PC.i2630 = bitcast %union.anon* %4069 to i64*
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4071 = getelementptr inbounds %struct.GPR, %struct.GPR* %4070, i32 0, i32 15
  %4072 = getelementptr inbounds %struct.Reg, %struct.Reg* %4071, i32 0, i32 0
  %RBP.i2631 = bitcast %union.anon* %4072 to i64*
  %4073 = load i64, i64* %RBP.i2631
  %4074 = sub i64 %4073, 20
  %4075 = load i64, i64* %PC.i2630
  %4076 = add i64 %4075, 4
  store i64 %4076, i64* %PC.i2630
  %4077 = inttoptr i64 %4074 to i32*
  %4078 = load i32, i32* %4077
  %4079 = sub i32 %4078, 2
  %4080 = icmp ult i32 %4078, 2
  %4081 = zext i1 %4080 to i8
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4081, i8* %4082, align 1
  %4083 = and i32 %4079, 255
  %4084 = call i32 @llvm.ctpop.i32(i32 %4083)
  %4085 = trunc i32 %4084 to i8
  %4086 = and i8 %4085, 1
  %4087 = xor i8 %4086, 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4087, i8* %4088, align 1
  %4089 = xor i32 %4078, 2
  %4090 = xor i32 %4089, %4079
  %4091 = lshr i32 %4090, 4
  %4092 = trunc i32 %4091 to i8
  %4093 = and i8 %4092, 1
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4093, i8* %4094, align 1
  %4095 = icmp eq i32 %4079, 0
  %4096 = zext i1 %4095 to i8
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4096, i8* %4097, align 1
  %4098 = lshr i32 %4079, 31
  %4099 = trunc i32 %4098 to i8
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4099, i8* %4100, align 1
  %4101 = lshr i32 %4078, 31
  %4102 = xor i32 %4098, %4101
  %4103 = add i32 %4102, %4101
  %4104 = icmp eq i32 %4103, 2
  %4105 = zext i1 %4104 to i8
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4105, i8* %4106, align 1
  store %struct.Memory* %loadMem_40c112, %struct.Memory** %MEMORY
  %loadMem_40c116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 33
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %PC.i2629 = bitcast %union.anon* %4109 to i64*
  %4110 = load i64, i64* %PC.i2629
  %4111 = add i64 %4110, 179
  %4112 = load i64, i64* %PC.i2629
  %4113 = add i64 %4112, 6
  %4114 = load i64, i64* %PC.i2629
  %4115 = add i64 %4114, 6
  store i64 %4115, i64* %PC.i2629
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4117 = load i8, i8* %4116, align 1
  %4118 = icmp ne i8 %4117, 0
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4120 = load i8, i8* %4119, align 1
  %4121 = icmp ne i8 %4120, 0
  %4122 = xor i1 %4118, %4121
  %4123 = xor i1 %4122, true
  %4124 = zext i1 %4123 to i8
  store i8 %4124, i8* %BRANCH_TAKEN, align 1
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4126 = select i1 %4122, i64 %4113, i64 %4111
  store i64 %4126, i64* %4125, align 8
  store %struct.Memory* %loadMem_40c116, %struct.Memory** %MEMORY
  %loadBr_40c116 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c116 = icmp eq i8 %loadBr_40c116, 1
  br i1 %cmpBr_40c116, label %block_.L_40c1c9, label %block_40c11c

block_40c11c:                                     ; preds = %block_.L_40c112
  %loadMem_40c11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4128 = getelementptr inbounds %struct.GPR, %struct.GPR* %4127, i32 0, i32 33
  %4129 = getelementptr inbounds %struct.Reg, %struct.Reg* %4128, i32 0, i32 0
  %PC.i2627 = bitcast %union.anon* %4129 to i64*
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4131 = getelementptr inbounds %struct.GPR, %struct.GPR* %4130, i32 0, i32 1
  %4132 = getelementptr inbounds %struct.Reg, %struct.Reg* %4131, i32 0, i32 0
  %RAX.i2628 = bitcast %union.anon* %4132 to i64*
  %4133 = load i64, i64* %PC.i2627
  %4134 = add i64 %4133, 5
  store i64 %4134, i64* %PC.i2627
  store i64 3, i64* %RAX.i2628, align 8
  store %struct.Memory* %loadMem_40c11c, %struct.Memory** %MEMORY
  %loadMem_40c121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 33
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %PC.i2624 = bitcast %union.anon* %4137 to i64*
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 1
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %RAX.i2625 = bitcast %union.anon* %4140 to i64*
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 15
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %RBP.i2626 = bitcast %union.anon* %4143 to i64*
  %4144 = load i64, i64* %RAX.i2625
  %4145 = load i64, i64* %RBP.i2626
  %4146 = sub i64 %4145, 20
  %4147 = load i64, i64* %PC.i2624
  %4148 = add i64 %4147, 3
  store i64 %4148, i64* %PC.i2624
  %4149 = trunc i64 %4144 to i32
  %4150 = inttoptr i64 %4146 to i32*
  %4151 = load i32, i32* %4150
  %4152 = sub i32 %4149, %4151
  %4153 = zext i32 %4152 to i64
  store i64 %4153, i64* %RAX.i2625, align 8
  %4154 = icmp ult i32 %4149, %4151
  %4155 = zext i1 %4154 to i8
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4155, i8* %4156, align 1
  %4157 = and i32 %4152, 255
  %4158 = call i32 @llvm.ctpop.i32(i32 %4157)
  %4159 = trunc i32 %4158 to i8
  %4160 = and i8 %4159, 1
  %4161 = xor i8 %4160, 1
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4161, i8* %4162, align 1
  %4163 = xor i32 %4151, %4149
  %4164 = xor i32 %4163, %4152
  %4165 = lshr i32 %4164, 4
  %4166 = trunc i32 %4165 to i8
  %4167 = and i8 %4166, 1
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4167, i8* %4168, align 1
  %4169 = icmp eq i32 %4152, 0
  %4170 = zext i1 %4169 to i8
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4170, i8* %4171, align 1
  %4172 = lshr i32 %4152, 31
  %4173 = trunc i32 %4172 to i8
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4173, i8* %4174, align 1
  %4175 = lshr i32 %4149, 31
  %4176 = lshr i32 %4151, 31
  %4177 = xor i32 %4176, %4175
  %4178 = xor i32 %4172, %4175
  %4179 = add i32 %4178, %4177
  %4180 = icmp eq i32 %4179, 2
  %4181 = zext i1 %4180 to i8
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4181, i8* %4182, align 1
  store %struct.Memory* %loadMem_40c121, %struct.Memory** %MEMORY
  %loadMem_40c124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4184 = getelementptr inbounds %struct.GPR, %struct.GPR* %4183, i32 0, i32 33
  %4185 = getelementptr inbounds %struct.Reg, %struct.Reg* %4184, i32 0, i32 0
  %PC.i2621 = bitcast %union.anon* %4185 to i64*
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 1
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %EAX.i2622 = bitcast %union.anon* %4188 to i32*
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 15
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %RBP.i2623 = bitcast %union.anon* %4191 to i64*
  %4192 = load i64, i64* %RBP.i2623
  %4193 = sub i64 %4192, 28
  %4194 = load i32, i32* %EAX.i2622
  %4195 = zext i32 %4194 to i64
  %4196 = load i64, i64* %PC.i2621
  %4197 = add i64 %4196, 3
  store i64 %4197, i64* %PC.i2621
  %4198 = inttoptr i64 %4193 to i32*
  store i32 %4194, i32* %4198
  store %struct.Memory* %loadMem_40c124, %struct.Memory** %MEMORY
  %loadMem_40c127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 33
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %PC.i2619 = bitcast %union.anon* %4201 to i64*
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 5
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %RCX.i2620 = bitcast %union.anon* %4204 to i64*
  %4205 = load i64, i64* %PC.i2619
  %4206 = add i64 %4205, 8
  store i64 %4206, i64* %PC.i2619
  %4207 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4207, i64* %RCX.i2620, align 8
  store %struct.Memory* %loadMem_40c127, %struct.Memory** %MEMORY
  %loadMem_40c12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 33
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %PC.i2617 = bitcast %union.anon* %4210 to i64*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 5
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %RCX.i2618 = bitcast %union.anon* %4213 to i64*
  %4214 = load i64, i64* %RCX.i2618
  %4215 = load i64, i64* %PC.i2617
  %4216 = add i64 %4215, 7
  store i64 %4216, i64* %PC.i2617
  %4217 = add i64 13112, %4214
  store i64 %4217, i64* %RCX.i2618, align 8
  %4218 = icmp ult i64 %4217, %4214
  %4219 = icmp ult i64 %4217, 13112
  %4220 = or i1 %4218, %4219
  %4221 = zext i1 %4220 to i8
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4221, i8* %4222, align 1
  %4223 = trunc i64 %4217 to i32
  %4224 = and i32 %4223, 255
  %4225 = call i32 @llvm.ctpop.i32(i32 %4224)
  %4226 = trunc i32 %4225 to i8
  %4227 = and i8 %4226, 1
  %4228 = xor i8 %4227, 1
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4228, i8* %4229, align 1
  %4230 = xor i64 13112, %4214
  %4231 = xor i64 %4230, %4217
  %4232 = lshr i64 %4231, 4
  %4233 = trunc i64 %4232 to i8
  %4234 = and i8 %4233, 1
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4234, i8* %4235, align 1
  %4236 = icmp eq i64 %4217, 0
  %4237 = zext i1 %4236 to i8
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4237, i8* %4238, align 1
  %4239 = lshr i64 %4217, 63
  %4240 = trunc i64 %4239 to i8
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4240, i8* %4241, align 1
  %4242 = lshr i64 %4214, 63
  %4243 = xor i64 %4239, %4242
  %4244 = add i64 %4243, %4239
  %4245 = icmp eq i64 %4244, 2
  %4246 = zext i1 %4245 to i8
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4246, i8* %4247, align 1
  store %struct.Memory* %loadMem_40c12f, %struct.Memory** %MEMORY
  %loadMem_40c136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 33
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %PC.i2614 = bitcast %union.anon* %4250 to i64*
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 7
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %RDX.i2615 = bitcast %union.anon* %4253 to i64*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 15
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %RBP.i2616 = bitcast %union.anon* %4256 to i64*
  %4257 = load i64, i64* %RBP.i2616
  %4258 = sub i64 %4257, 20
  %4259 = load i64, i64* %PC.i2614
  %4260 = add i64 %4259, 4
  store i64 %4260, i64* %PC.i2614
  %4261 = inttoptr i64 %4258 to i32*
  %4262 = load i32, i32* %4261
  %4263 = sext i32 %4262 to i64
  store i64 %4263, i64* %RDX.i2615, align 8
  store %struct.Memory* %loadMem_40c136, %struct.Memory** %MEMORY
  %loadMem_40c13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 33
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %PC.i2612 = bitcast %union.anon* %4266 to i64*
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 7
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %RDX.i2613 = bitcast %union.anon* %4269 to i64*
  %4270 = load i64, i64* %RDX.i2613
  %4271 = load i64, i64* %PC.i2612
  %4272 = add i64 %4271, 4
  store i64 %4272, i64* %PC.i2612
  %4273 = shl i64 %4270, 5
  %4274 = icmp slt i64 %4273, 0
  %4275 = shl i64 %4273, 1
  store i64 %4275, i64* %RDX.i2613, align 8
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4277 = zext i1 %4274 to i8
  store i8 %4277, i8* %4276, align 1
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4279 = trunc i64 %4275 to i32
  %4280 = and i32 %4279, 254
  %4281 = call i32 @llvm.ctpop.i32(i32 %4280)
  %4282 = trunc i32 %4281 to i8
  %4283 = and i8 %4282, 1
  %4284 = xor i8 %4283, 1
  store i8 %4284, i8* %4278, align 1
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4285, align 1
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4287 = icmp eq i64 %4275, 0
  %4288 = zext i1 %4287 to i8
  store i8 %4288, i8* %4286, align 1
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4290 = lshr i64 %4275, 63
  %4291 = trunc i64 %4290 to i8
  store i8 %4291, i8* %4289, align 1
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4292, align 1
  store %struct.Memory* %loadMem_40c13a, %struct.Memory** %MEMORY
  %loadMem_40c13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 33
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %PC.i2609 = bitcast %union.anon* %4295 to i64*
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 5
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %RCX.i2610 = bitcast %union.anon* %4298 to i64*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 7
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %RDX.i2611 = bitcast %union.anon* %4301 to i64*
  %4302 = load i64, i64* %RCX.i2610
  %4303 = load i64, i64* %RDX.i2611
  %4304 = load i64, i64* %PC.i2609
  %4305 = add i64 %4304, 3
  store i64 %4305, i64* %PC.i2609
  %4306 = add i64 %4303, %4302
  store i64 %4306, i64* %RCX.i2610, align 8
  %4307 = icmp ult i64 %4306, %4302
  %4308 = icmp ult i64 %4306, %4303
  %4309 = or i1 %4307, %4308
  %4310 = zext i1 %4309 to i8
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4310, i8* %4311, align 1
  %4312 = trunc i64 %4306 to i32
  %4313 = and i32 %4312, 255
  %4314 = call i32 @llvm.ctpop.i32(i32 %4313)
  %4315 = trunc i32 %4314 to i8
  %4316 = and i8 %4315, 1
  %4317 = xor i8 %4316, 1
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4317, i8* %4318, align 1
  %4319 = xor i64 %4303, %4302
  %4320 = xor i64 %4319, %4306
  %4321 = lshr i64 %4320, 4
  %4322 = trunc i64 %4321 to i8
  %4323 = and i8 %4322, 1
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4323, i8* %4324, align 1
  %4325 = icmp eq i64 %4306, 0
  %4326 = zext i1 %4325 to i8
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4326, i8* %4327, align 1
  %4328 = lshr i64 %4306, 63
  %4329 = trunc i64 %4328 to i8
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4329, i8* %4330, align 1
  %4331 = lshr i64 %4302, 63
  %4332 = lshr i64 %4303, 63
  %4333 = xor i64 %4328, %4331
  %4334 = xor i64 %4328, %4332
  %4335 = add i64 %4333, %4334
  %4336 = icmp eq i64 %4335, 2
  %4337 = zext i1 %4336 to i8
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4337, i8* %4338, align 1
  store %struct.Memory* %loadMem_40c13e, %struct.Memory** %MEMORY
  %loadMem_40c141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 33
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %PC.i2606 = bitcast %union.anon* %4341 to i64*
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 7
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %RDX.i2607 = bitcast %union.anon* %4344 to i64*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4346 = getelementptr inbounds %struct.GPR, %struct.GPR* %4345, i32 0, i32 15
  %4347 = getelementptr inbounds %struct.Reg, %struct.Reg* %4346, i32 0, i32 0
  %RBP.i2608 = bitcast %union.anon* %4347 to i64*
  %4348 = load i64, i64* %RBP.i2608
  %4349 = sub i64 %4348, 24
  %4350 = load i64, i64* %PC.i2606
  %4351 = add i64 %4350, 4
  store i64 %4351, i64* %PC.i2606
  %4352 = inttoptr i64 %4349 to i32*
  %4353 = load i32, i32* %4352
  %4354 = sext i32 %4353 to i64
  store i64 %4354, i64* %RDX.i2607, align 8
  store %struct.Memory* %loadMem_40c141, %struct.Memory** %MEMORY
  %loadMem_40c145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 33
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %PC.i2602 = bitcast %union.anon* %4357 to i64*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 1
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %RAX.i2603 = bitcast %union.anon* %4360 to i64*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4362 = getelementptr inbounds %struct.GPR, %struct.GPR* %4361, i32 0, i32 5
  %4363 = getelementptr inbounds %struct.Reg, %struct.Reg* %4362, i32 0, i32 0
  %RCX.i2604 = bitcast %union.anon* %4363 to i64*
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4365 = getelementptr inbounds %struct.GPR, %struct.GPR* %4364, i32 0, i32 7
  %4366 = getelementptr inbounds %struct.Reg, %struct.Reg* %4365, i32 0, i32 0
  %RDX.i2605 = bitcast %union.anon* %4366 to i64*
  %4367 = load i64, i64* %RCX.i2604
  %4368 = load i64, i64* %RDX.i2605
  %4369 = mul i64 %4368, 4
  %4370 = add i64 %4369, %4367
  %4371 = load i64, i64* %PC.i2602
  %4372 = add i64 %4371, 3
  store i64 %4372, i64* %PC.i2602
  %4373 = inttoptr i64 %4370 to i32*
  %4374 = load i32, i32* %4373
  %4375 = zext i32 %4374 to i64
  store i64 %4375, i64* %RAX.i2603, align 8
  store %struct.Memory* %loadMem_40c145, %struct.Memory** %MEMORY
  %loadMem_40c148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 33
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %PC.i2600 = bitcast %union.anon* %4378 to i64*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 5
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %RCX.i2601 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %PC.i2600
  %4383 = add i64 %4382, 8
  store i64 %4383, i64* %PC.i2600
  %4384 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4384, i64* %RCX.i2601, align 8
  store %struct.Memory* %loadMem_40c148, %struct.Memory** %MEMORY
  %loadMem_40c150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 33
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %PC.i2598 = bitcast %union.anon* %4387 to i64*
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4389 = getelementptr inbounds %struct.GPR, %struct.GPR* %4388, i32 0, i32 5
  %4390 = getelementptr inbounds %struct.Reg, %struct.Reg* %4389, i32 0, i32 0
  %RCX.i2599 = bitcast %union.anon* %4390 to i64*
  %4391 = load i64, i64* %RCX.i2599
  %4392 = load i64, i64* %PC.i2598
  %4393 = add i64 %4392, 7
  store i64 %4393, i64* %PC.i2598
  %4394 = add i64 13112, %4391
  store i64 %4394, i64* %RCX.i2599, align 8
  %4395 = icmp ult i64 %4394, %4391
  %4396 = icmp ult i64 %4394, 13112
  %4397 = or i1 %4395, %4396
  %4398 = zext i1 %4397 to i8
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4398, i8* %4399, align 1
  %4400 = trunc i64 %4394 to i32
  %4401 = and i32 %4400, 255
  %4402 = call i32 @llvm.ctpop.i32(i32 %4401)
  %4403 = trunc i32 %4402 to i8
  %4404 = and i8 %4403, 1
  %4405 = xor i8 %4404, 1
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4405, i8* %4406, align 1
  %4407 = xor i64 13112, %4391
  %4408 = xor i64 %4407, %4394
  %4409 = lshr i64 %4408, 4
  %4410 = trunc i64 %4409 to i8
  %4411 = and i8 %4410, 1
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4411, i8* %4412, align 1
  %4413 = icmp eq i64 %4394, 0
  %4414 = zext i1 %4413 to i8
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4414, i8* %4415, align 1
  %4416 = lshr i64 %4394, 63
  %4417 = trunc i64 %4416 to i8
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4417, i8* %4418, align 1
  %4419 = lshr i64 %4391, 63
  %4420 = xor i64 %4416, %4419
  %4421 = add i64 %4420, %4416
  %4422 = icmp eq i64 %4421, 2
  %4423 = zext i1 %4422 to i8
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4423, i8* %4424, align 1
  store %struct.Memory* %loadMem_40c150, %struct.Memory** %MEMORY
  %loadMem_40c157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 33
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %PC.i2595 = bitcast %union.anon* %4427 to i64*
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4429 = getelementptr inbounds %struct.GPR, %struct.GPR* %4428, i32 0, i32 7
  %4430 = getelementptr inbounds %struct.Reg, %struct.Reg* %4429, i32 0, i32 0
  %RDX.i2596 = bitcast %union.anon* %4430 to i64*
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4432 = getelementptr inbounds %struct.GPR, %struct.GPR* %4431, i32 0, i32 15
  %4433 = getelementptr inbounds %struct.Reg, %struct.Reg* %4432, i32 0, i32 0
  %RBP.i2597 = bitcast %union.anon* %4433 to i64*
  %4434 = load i64, i64* %RBP.i2597
  %4435 = sub i64 %4434, 28
  %4436 = load i64, i64* %PC.i2595
  %4437 = add i64 %4436, 4
  store i64 %4437, i64* %PC.i2595
  %4438 = inttoptr i64 %4435 to i32*
  %4439 = load i32, i32* %4438
  %4440 = sext i32 %4439 to i64
  store i64 %4440, i64* %RDX.i2596, align 8
  store %struct.Memory* %loadMem_40c157, %struct.Memory** %MEMORY
  %loadMem_40c15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 33
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %PC.i2593 = bitcast %union.anon* %4443 to i64*
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 7
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %RDX.i2594 = bitcast %union.anon* %4446 to i64*
  %4447 = load i64, i64* %RDX.i2594
  %4448 = load i64, i64* %PC.i2593
  %4449 = add i64 %4448, 4
  store i64 %4449, i64* %PC.i2593
  %4450 = shl i64 %4447, 5
  %4451 = icmp slt i64 %4450, 0
  %4452 = shl i64 %4450, 1
  store i64 %4452, i64* %RDX.i2594, align 8
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4454 = zext i1 %4451 to i8
  store i8 %4454, i8* %4453, align 1
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4456 = trunc i64 %4452 to i32
  %4457 = and i32 %4456, 254
  %4458 = call i32 @llvm.ctpop.i32(i32 %4457)
  %4459 = trunc i32 %4458 to i8
  %4460 = and i8 %4459, 1
  %4461 = xor i8 %4460, 1
  store i8 %4461, i8* %4455, align 1
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4462, align 1
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4464 = icmp eq i64 %4452, 0
  %4465 = zext i1 %4464 to i8
  store i8 %4465, i8* %4463, align 1
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4467 = lshr i64 %4452, 63
  %4468 = trunc i64 %4467 to i8
  store i8 %4468, i8* %4466, align 1
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4469, align 1
  store %struct.Memory* %loadMem_40c15b, %struct.Memory** %MEMORY
  %loadMem_40c15f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4471 = getelementptr inbounds %struct.GPR, %struct.GPR* %4470, i32 0, i32 33
  %4472 = getelementptr inbounds %struct.Reg, %struct.Reg* %4471, i32 0, i32 0
  %PC.i2590 = bitcast %union.anon* %4472 to i64*
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4474 = getelementptr inbounds %struct.GPR, %struct.GPR* %4473, i32 0, i32 5
  %4475 = getelementptr inbounds %struct.Reg, %struct.Reg* %4474, i32 0, i32 0
  %RCX.i2591 = bitcast %union.anon* %4475 to i64*
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4477 = getelementptr inbounds %struct.GPR, %struct.GPR* %4476, i32 0, i32 7
  %4478 = getelementptr inbounds %struct.Reg, %struct.Reg* %4477, i32 0, i32 0
  %RDX.i2592 = bitcast %union.anon* %4478 to i64*
  %4479 = load i64, i64* %RCX.i2591
  %4480 = load i64, i64* %RDX.i2592
  %4481 = load i64, i64* %PC.i2590
  %4482 = add i64 %4481, 3
  store i64 %4482, i64* %PC.i2590
  %4483 = add i64 %4480, %4479
  store i64 %4483, i64* %RCX.i2591, align 8
  %4484 = icmp ult i64 %4483, %4479
  %4485 = icmp ult i64 %4483, %4480
  %4486 = or i1 %4484, %4485
  %4487 = zext i1 %4486 to i8
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4487, i8* %4488, align 1
  %4489 = trunc i64 %4483 to i32
  %4490 = and i32 %4489, 255
  %4491 = call i32 @llvm.ctpop.i32(i32 %4490)
  %4492 = trunc i32 %4491 to i8
  %4493 = and i8 %4492, 1
  %4494 = xor i8 %4493, 1
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4494, i8* %4495, align 1
  %4496 = xor i64 %4480, %4479
  %4497 = xor i64 %4496, %4483
  %4498 = lshr i64 %4497, 4
  %4499 = trunc i64 %4498 to i8
  %4500 = and i8 %4499, 1
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4500, i8* %4501, align 1
  %4502 = icmp eq i64 %4483, 0
  %4503 = zext i1 %4502 to i8
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4503, i8* %4504, align 1
  %4505 = lshr i64 %4483, 63
  %4506 = trunc i64 %4505 to i8
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4506, i8* %4507, align 1
  %4508 = lshr i64 %4479, 63
  %4509 = lshr i64 %4480, 63
  %4510 = xor i64 %4505, %4508
  %4511 = xor i64 %4505, %4509
  %4512 = add i64 %4510, %4511
  %4513 = icmp eq i64 %4512, 2
  %4514 = zext i1 %4513 to i8
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4514, i8* %4515, align 1
  store %struct.Memory* %loadMem_40c15f, %struct.Memory** %MEMORY
  %loadMem_40c162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4517 = getelementptr inbounds %struct.GPR, %struct.GPR* %4516, i32 0, i32 33
  %4518 = getelementptr inbounds %struct.Reg, %struct.Reg* %4517, i32 0, i32 0
  %PC.i2587 = bitcast %union.anon* %4518 to i64*
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4520 = getelementptr inbounds %struct.GPR, %struct.GPR* %4519, i32 0, i32 7
  %4521 = getelementptr inbounds %struct.Reg, %struct.Reg* %4520, i32 0, i32 0
  %RDX.i2588 = bitcast %union.anon* %4521 to i64*
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4523 = getelementptr inbounds %struct.GPR, %struct.GPR* %4522, i32 0, i32 15
  %4524 = getelementptr inbounds %struct.Reg, %struct.Reg* %4523, i32 0, i32 0
  %RBP.i2589 = bitcast %union.anon* %4524 to i64*
  %4525 = load i64, i64* %RBP.i2589
  %4526 = sub i64 %4525, 24
  %4527 = load i64, i64* %PC.i2587
  %4528 = add i64 %4527, 4
  store i64 %4528, i64* %PC.i2587
  %4529 = inttoptr i64 %4526 to i32*
  %4530 = load i32, i32* %4529
  %4531 = sext i32 %4530 to i64
  store i64 %4531, i64* %RDX.i2588, align 8
  store %struct.Memory* %loadMem_40c162, %struct.Memory** %MEMORY
  %loadMem_40c166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4533 = getelementptr inbounds %struct.GPR, %struct.GPR* %4532, i32 0, i32 33
  %4534 = getelementptr inbounds %struct.Reg, %struct.Reg* %4533, i32 0, i32 0
  %PC.i2583 = bitcast %union.anon* %4534 to i64*
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 1
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %RAX.i2584 = bitcast %union.anon* %4537 to i64*
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 5
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %RCX.i2585 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 7
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RDX.i2586 = bitcast %union.anon* %4543 to i64*
  %4544 = load i64, i64* %RAX.i2584
  %4545 = load i64, i64* %RCX.i2585
  %4546 = load i64, i64* %RDX.i2586
  %4547 = mul i64 %4546, 4
  %4548 = add i64 %4547, %4545
  %4549 = load i64, i64* %PC.i2583
  %4550 = add i64 %4549, 3
  store i64 %4550, i64* %PC.i2583
  %4551 = trunc i64 %4544 to i32
  %4552 = inttoptr i64 %4548 to i32*
  %4553 = load i32, i32* %4552
  %4554 = add i32 %4553, %4551
  %4555 = zext i32 %4554 to i64
  store i64 %4555, i64* %RAX.i2584, align 8
  %4556 = icmp ult i32 %4554, %4551
  %4557 = icmp ult i32 %4554, %4553
  %4558 = or i1 %4556, %4557
  %4559 = zext i1 %4558 to i8
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4559, i8* %4560, align 1
  %4561 = and i32 %4554, 255
  %4562 = call i32 @llvm.ctpop.i32(i32 %4561)
  %4563 = trunc i32 %4562 to i8
  %4564 = and i8 %4563, 1
  %4565 = xor i8 %4564, 1
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4565, i8* %4566, align 1
  %4567 = xor i32 %4553, %4551
  %4568 = xor i32 %4567, %4554
  %4569 = lshr i32 %4568, 4
  %4570 = trunc i32 %4569 to i8
  %4571 = and i8 %4570, 1
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4571, i8* %4572, align 1
  %4573 = icmp eq i32 %4554, 0
  %4574 = zext i1 %4573 to i8
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4574, i8* %4575, align 1
  %4576 = lshr i32 %4554, 31
  %4577 = trunc i32 %4576 to i8
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4577, i8* %4578, align 1
  %4579 = lshr i32 %4551, 31
  %4580 = lshr i32 %4553, 31
  %4581 = xor i32 %4576, %4579
  %4582 = xor i32 %4576, %4580
  %4583 = add i32 %4581, %4582
  %4584 = icmp eq i32 %4583, 2
  %4585 = zext i1 %4584 to i8
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4585, i8* %4586, align 1
  store %struct.Memory* %loadMem_40c166, %struct.Memory** %MEMORY
  %loadMem_40c169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4588 = getelementptr inbounds %struct.GPR, %struct.GPR* %4587, i32 0, i32 33
  %4589 = getelementptr inbounds %struct.Reg, %struct.Reg* %4588, i32 0, i32 0
  %PC.i2580 = bitcast %union.anon* %4589 to i64*
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 5
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %RCX.i2581 = bitcast %union.anon* %4592 to i64*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 15
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %RBP.i2582 = bitcast %union.anon* %4595 to i64*
  %4596 = load i64, i64* %RBP.i2582
  %4597 = sub i64 %4596, 20
  %4598 = load i64, i64* %PC.i2580
  %4599 = add i64 %4598, 4
  store i64 %4599, i64* %PC.i2580
  %4600 = inttoptr i64 %4597 to i32*
  %4601 = load i32, i32* %4600
  %4602 = sext i32 %4601 to i64
  store i64 %4602, i64* %RCX.i2581, align 8
  store %struct.Memory* %loadMem_40c169, %struct.Memory** %MEMORY
  %loadMem_40c16d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4604 = getelementptr inbounds %struct.GPR, %struct.GPR* %4603, i32 0, i32 33
  %4605 = getelementptr inbounds %struct.Reg, %struct.Reg* %4604, i32 0, i32 0
  %PC.i2576 = bitcast %union.anon* %4605 to i64*
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 1
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %EAX.i2577 = bitcast %union.anon* %4608 to i32*
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 5
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %RCX.i2578 = bitcast %union.anon* %4611 to i64*
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 15
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %RBP.i2579 = bitcast %union.anon* %4614 to i64*
  %4615 = load i64, i64* %RBP.i2579
  %4616 = load i64, i64* %RCX.i2578
  %4617 = mul i64 %4616, 4
  %4618 = add i64 %4615, -64
  %4619 = add i64 %4618, %4617
  %4620 = load i32, i32* %EAX.i2577
  %4621 = zext i32 %4620 to i64
  %4622 = load i64, i64* %PC.i2576
  %4623 = add i64 %4622, 4
  store i64 %4623, i64* %PC.i2576
  %4624 = inttoptr i64 %4619 to i32*
  store i32 %4620, i32* %4624
  store %struct.Memory* %loadMem_40c16d, %struct.Memory** %MEMORY
  %loadMem_40c171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 33
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %PC.i2574 = bitcast %union.anon* %4627 to i64*
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4629 = getelementptr inbounds %struct.GPR, %struct.GPR* %4628, i32 0, i32 5
  %4630 = getelementptr inbounds %struct.Reg, %struct.Reg* %4629, i32 0, i32 0
  %RCX.i2575 = bitcast %union.anon* %4630 to i64*
  %4631 = load i64, i64* %PC.i2574
  %4632 = add i64 %4631, 8
  store i64 %4632, i64* %PC.i2574
  %4633 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4633, i64* %RCX.i2575, align 8
  store %struct.Memory* %loadMem_40c171, %struct.Memory** %MEMORY
  %loadMem_40c179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 33
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %PC.i2572 = bitcast %union.anon* %4636 to i64*
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 5
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %RCX.i2573 = bitcast %union.anon* %4639 to i64*
  %4640 = load i64, i64* %RCX.i2573
  %4641 = load i64, i64* %PC.i2572
  %4642 = add i64 %4641, 7
  store i64 %4642, i64* %PC.i2572
  %4643 = add i64 13112, %4640
  store i64 %4643, i64* %RCX.i2573, align 8
  %4644 = icmp ult i64 %4643, %4640
  %4645 = icmp ult i64 %4643, 13112
  %4646 = or i1 %4644, %4645
  %4647 = zext i1 %4646 to i8
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4647, i8* %4648, align 1
  %4649 = trunc i64 %4643 to i32
  %4650 = and i32 %4649, 255
  %4651 = call i32 @llvm.ctpop.i32(i32 %4650)
  %4652 = trunc i32 %4651 to i8
  %4653 = and i8 %4652, 1
  %4654 = xor i8 %4653, 1
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4654, i8* %4655, align 1
  %4656 = xor i64 13112, %4640
  %4657 = xor i64 %4656, %4643
  %4658 = lshr i64 %4657, 4
  %4659 = trunc i64 %4658 to i8
  %4660 = and i8 %4659, 1
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4660, i8* %4661, align 1
  %4662 = icmp eq i64 %4643, 0
  %4663 = zext i1 %4662 to i8
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4663, i8* %4664, align 1
  %4665 = lshr i64 %4643, 63
  %4666 = trunc i64 %4665 to i8
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4666, i8* %4667, align 1
  %4668 = lshr i64 %4640, 63
  %4669 = xor i64 %4665, %4668
  %4670 = add i64 %4669, %4665
  %4671 = icmp eq i64 %4670, 2
  %4672 = zext i1 %4671 to i8
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4672, i8* %4673, align 1
  store %struct.Memory* %loadMem_40c179, %struct.Memory** %MEMORY
  %loadMem_40c180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4675 = getelementptr inbounds %struct.GPR, %struct.GPR* %4674, i32 0, i32 33
  %4676 = getelementptr inbounds %struct.Reg, %struct.Reg* %4675, i32 0, i32 0
  %PC.i2569 = bitcast %union.anon* %4676 to i64*
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4678 = getelementptr inbounds %struct.GPR, %struct.GPR* %4677, i32 0, i32 7
  %4679 = getelementptr inbounds %struct.Reg, %struct.Reg* %4678, i32 0, i32 0
  %RDX.i2570 = bitcast %union.anon* %4679 to i64*
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4681 = getelementptr inbounds %struct.GPR, %struct.GPR* %4680, i32 0, i32 15
  %4682 = getelementptr inbounds %struct.Reg, %struct.Reg* %4681, i32 0, i32 0
  %RBP.i2571 = bitcast %union.anon* %4682 to i64*
  %4683 = load i64, i64* %RBP.i2571
  %4684 = sub i64 %4683, 20
  %4685 = load i64, i64* %PC.i2569
  %4686 = add i64 %4685, 4
  store i64 %4686, i64* %PC.i2569
  %4687 = inttoptr i64 %4684 to i32*
  %4688 = load i32, i32* %4687
  %4689 = sext i32 %4688 to i64
  store i64 %4689, i64* %RDX.i2570, align 8
  store %struct.Memory* %loadMem_40c180, %struct.Memory** %MEMORY
  %loadMem_40c184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4691 = getelementptr inbounds %struct.GPR, %struct.GPR* %4690, i32 0, i32 33
  %4692 = getelementptr inbounds %struct.Reg, %struct.Reg* %4691, i32 0, i32 0
  %PC.i2567 = bitcast %union.anon* %4692 to i64*
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4694 = getelementptr inbounds %struct.GPR, %struct.GPR* %4693, i32 0, i32 7
  %4695 = getelementptr inbounds %struct.Reg, %struct.Reg* %4694, i32 0, i32 0
  %RDX.i2568 = bitcast %union.anon* %4695 to i64*
  %4696 = load i64, i64* %RDX.i2568
  %4697 = load i64, i64* %PC.i2567
  %4698 = add i64 %4697, 4
  store i64 %4698, i64* %PC.i2567
  %4699 = shl i64 %4696, 5
  %4700 = icmp slt i64 %4699, 0
  %4701 = shl i64 %4699, 1
  store i64 %4701, i64* %RDX.i2568, align 8
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4703 = zext i1 %4700 to i8
  store i8 %4703, i8* %4702, align 1
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4705 = trunc i64 %4701 to i32
  %4706 = and i32 %4705, 254
  %4707 = call i32 @llvm.ctpop.i32(i32 %4706)
  %4708 = trunc i32 %4707 to i8
  %4709 = and i8 %4708, 1
  %4710 = xor i8 %4709, 1
  store i8 %4710, i8* %4704, align 1
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4711, align 1
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4713 = icmp eq i64 %4701, 0
  %4714 = zext i1 %4713 to i8
  store i8 %4714, i8* %4712, align 1
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4716 = lshr i64 %4701, 63
  %4717 = trunc i64 %4716 to i8
  store i8 %4717, i8* %4715, align 1
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4718, align 1
  store %struct.Memory* %loadMem_40c184, %struct.Memory** %MEMORY
  %loadMem_40c188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 33
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %PC.i2564 = bitcast %union.anon* %4721 to i64*
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4723 = getelementptr inbounds %struct.GPR, %struct.GPR* %4722, i32 0, i32 5
  %4724 = getelementptr inbounds %struct.Reg, %struct.Reg* %4723, i32 0, i32 0
  %RCX.i2565 = bitcast %union.anon* %4724 to i64*
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 7
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %RDX.i2566 = bitcast %union.anon* %4727 to i64*
  %4728 = load i64, i64* %RCX.i2565
  %4729 = load i64, i64* %RDX.i2566
  %4730 = load i64, i64* %PC.i2564
  %4731 = add i64 %4730, 3
  store i64 %4731, i64* %PC.i2564
  %4732 = add i64 %4729, %4728
  store i64 %4732, i64* %RCX.i2565, align 8
  %4733 = icmp ult i64 %4732, %4728
  %4734 = icmp ult i64 %4732, %4729
  %4735 = or i1 %4733, %4734
  %4736 = zext i1 %4735 to i8
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4736, i8* %4737, align 1
  %4738 = trunc i64 %4732 to i32
  %4739 = and i32 %4738, 255
  %4740 = call i32 @llvm.ctpop.i32(i32 %4739)
  %4741 = trunc i32 %4740 to i8
  %4742 = and i8 %4741, 1
  %4743 = xor i8 %4742, 1
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4743, i8* %4744, align 1
  %4745 = xor i64 %4729, %4728
  %4746 = xor i64 %4745, %4732
  %4747 = lshr i64 %4746, 4
  %4748 = trunc i64 %4747 to i8
  %4749 = and i8 %4748, 1
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4749, i8* %4750, align 1
  %4751 = icmp eq i64 %4732, 0
  %4752 = zext i1 %4751 to i8
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4752, i8* %4753, align 1
  %4754 = lshr i64 %4732, 63
  %4755 = trunc i64 %4754 to i8
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4755, i8* %4756, align 1
  %4757 = lshr i64 %4728, 63
  %4758 = lshr i64 %4729, 63
  %4759 = xor i64 %4754, %4757
  %4760 = xor i64 %4754, %4758
  %4761 = add i64 %4759, %4760
  %4762 = icmp eq i64 %4761, 2
  %4763 = zext i1 %4762 to i8
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4763, i8* %4764, align 1
  store %struct.Memory* %loadMem_40c188, %struct.Memory** %MEMORY
  %loadMem_40c18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 33
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %PC.i2561 = bitcast %union.anon* %4767 to i64*
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4769 = getelementptr inbounds %struct.GPR, %struct.GPR* %4768, i32 0, i32 7
  %4770 = getelementptr inbounds %struct.Reg, %struct.Reg* %4769, i32 0, i32 0
  %RDX.i2562 = bitcast %union.anon* %4770 to i64*
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4772 = getelementptr inbounds %struct.GPR, %struct.GPR* %4771, i32 0, i32 15
  %4773 = getelementptr inbounds %struct.Reg, %struct.Reg* %4772, i32 0, i32 0
  %RBP.i2563 = bitcast %union.anon* %4773 to i64*
  %4774 = load i64, i64* %RBP.i2563
  %4775 = sub i64 %4774, 24
  %4776 = load i64, i64* %PC.i2561
  %4777 = add i64 %4776, 4
  store i64 %4777, i64* %PC.i2561
  %4778 = inttoptr i64 %4775 to i32*
  %4779 = load i32, i32* %4778
  %4780 = sext i32 %4779 to i64
  store i64 %4780, i64* %RDX.i2562, align 8
  store %struct.Memory* %loadMem_40c18b, %struct.Memory** %MEMORY
  %loadMem_40c18f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 33
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %PC.i2557 = bitcast %union.anon* %4783 to i64*
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4785 = getelementptr inbounds %struct.GPR, %struct.GPR* %4784, i32 0, i32 1
  %4786 = getelementptr inbounds %struct.Reg, %struct.Reg* %4785, i32 0, i32 0
  %RAX.i2558 = bitcast %union.anon* %4786 to i64*
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4788 = getelementptr inbounds %struct.GPR, %struct.GPR* %4787, i32 0, i32 5
  %4789 = getelementptr inbounds %struct.Reg, %struct.Reg* %4788, i32 0, i32 0
  %RCX.i2559 = bitcast %union.anon* %4789 to i64*
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 7
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %RDX.i2560 = bitcast %union.anon* %4792 to i64*
  %4793 = load i64, i64* %RCX.i2559
  %4794 = load i64, i64* %RDX.i2560
  %4795 = mul i64 %4794, 4
  %4796 = add i64 %4795, %4793
  %4797 = load i64, i64* %PC.i2557
  %4798 = add i64 %4797, 3
  store i64 %4798, i64* %PC.i2557
  %4799 = inttoptr i64 %4796 to i32*
  %4800 = load i32, i32* %4799
  %4801 = zext i32 %4800 to i64
  store i64 %4801, i64* %RAX.i2558, align 8
  store %struct.Memory* %loadMem_40c18f, %struct.Memory** %MEMORY
  %loadMem_40c192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4803 = getelementptr inbounds %struct.GPR, %struct.GPR* %4802, i32 0, i32 33
  %4804 = getelementptr inbounds %struct.Reg, %struct.Reg* %4803, i32 0, i32 0
  %PC.i2555 = bitcast %union.anon* %4804 to i64*
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4806 = getelementptr inbounds %struct.GPR, %struct.GPR* %4805, i32 0, i32 5
  %4807 = getelementptr inbounds %struct.Reg, %struct.Reg* %4806, i32 0, i32 0
  %RCX.i2556 = bitcast %union.anon* %4807 to i64*
  %4808 = load i64, i64* %PC.i2555
  %4809 = add i64 %4808, 8
  store i64 %4809, i64* %PC.i2555
  %4810 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4810, i64* %RCX.i2556, align 8
  store %struct.Memory* %loadMem_40c192, %struct.Memory** %MEMORY
  %loadMem_40c19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4812 = getelementptr inbounds %struct.GPR, %struct.GPR* %4811, i32 0, i32 33
  %4813 = getelementptr inbounds %struct.Reg, %struct.Reg* %4812, i32 0, i32 0
  %PC.i2553 = bitcast %union.anon* %4813 to i64*
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4815 = getelementptr inbounds %struct.GPR, %struct.GPR* %4814, i32 0, i32 5
  %4816 = getelementptr inbounds %struct.Reg, %struct.Reg* %4815, i32 0, i32 0
  %RCX.i2554 = bitcast %union.anon* %4816 to i64*
  %4817 = load i64, i64* %RCX.i2554
  %4818 = load i64, i64* %PC.i2553
  %4819 = add i64 %4818, 7
  store i64 %4819, i64* %PC.i2553
  %4820 = add i64 13112, %4817
  store i64 %4820, i64* %RCX.i2554, align 8
  %4821 = icmp ult i64 %4820, %4817
  %4822 = icmp ult i64 %4820, 13112
  %4823 = or i1 %4821, %4822
  %4824 = zext i1 %4823 to i8
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4824, i8* %4825, align 1
  %4826 = trunc i64 %4820 to i32
  %4827 = and i32 %4826, 255
  %4828 = call i32 @llvm.ctpop.i32(i32 %4827)
  %4829 = trunc i32 %4828 to i8
  %4830 = and i8 %4829, 1
  %4831 = xor i8 %4830, 1
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4831, i8* %4832, align 1
  %4833 = xor i64 13112, %4817
  %4834 = xor i64 %4833, %4820
  %4835 = lshr i64 %4834, 4
  %4836 = trunc i64 %4835 to i8
  %4837 = and i8 %4836, 1
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4837, i8* %4838, align 1
  %4839 = icmp eq i64 %4820, 0
  %4840 = zext i1 %4839 to i8
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4840, i8* %4841, align 1
  %4842 = lshr i64 %4820, 63
  %4843 = trunc i64 %4842 to i8
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4843, i8* %4844, align 1
  %4845 = lshr i64 %4817, 63
  %4846 = xor i64 %4842, %4845
  %4847 = add i64 %4846, %4842
  %4848 = icmp eq i64 %4847, 2
  %4849 = zext i1 %4848 to i8
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4849, i8* %4850, align 1
  store %struct.Memory* %loadMem_40c19a, %struct.Memory** %MEMORY
  %loadMem_40c1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4852 = getelementptr inbounds %struct.GPR, %struct.GPR* %4851, i32 0, i32 33
  %4853 = getelementptr inbounds %struct.Reg, %struct.Reg* %4852, i32 0, i32 0
  %PC.i2550 = bitcast %union.anon* %4853 to i64*
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4855 = getelementptr inbounds %struct.GPR, %struct.GPR* %4854, i32 0, i32 7
  %4856 = getelementptr inbounds %struct.Reg, %struct.Reg* %4855, i32 0, i32 0
  %RDX.i2551 = bitcast %union.anon* %4856 to i64*
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 15
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %RBP.i2552 = bitcast %union.anon* %4859 to i64*
  %4860 = load i64, i64* %RBP.i2552
  %4861 = sub i64 %4860, 28
  %4862 = load i64, i64* %PC.i2550
  %4863 = add i64 %4862, 4
  store i64 %4863, i64* %PC.i2550
  %4864 = inttoptr i64 %4861 to i32*
  %4865 = load i32, i32* %4864
  %4866 = sext i32 %4865 to i64
  store i64 %4866, i64* %RDX.i2551, align 8
  store %struct.Memory* %loadMem_40c1a1, %struct.Memory** %MEMORY
  %loadMem_40c1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4868 = getelementptr inbounds %struct.GPR, %struct.GPR* %4867, i32 0, i32 33
  %4869 = getelementptr inbounds %struct.Reg, %struct.Reg* %4868, i32 0, i32 0
  %PC.i2548 = bitcast %union.anon* %4869 to i64*
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 7
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %RDX.i2549 = bitcast %union.anon* %4872 to i64*
  %4873 = load i64, i64* %RDX.i2549
  %4874 = load i64, i64* %PC.i2548
  %4875 = add i64 %4874, 4
  store i64 %4875, i64* %PC.i2548
  %4876 = shl i64 %4873, 5
  %4877 = icmp slt i64 %4876, 0
  %4878 = shl i64 %4876, 1
  store i64 %4878, i64* %RDX.i2549, align 8
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4880 = zext i1 %4877 to i8
  store i8 %4880, i8* %4879, align 1
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4882 = trunc i64 %4878 to i32
  %4883 = and i32 %4882, 254
  %4884 = call i32 @llvm.ctpop.i32(i32 %4883)
  %4885 = trunc i32 %4884 to i8
  %4886 = and i8 %4885, 1
  %4887 = xor i8 %4886, 1
  store i8 %4887, i8* %4881, align 1
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4888, align 1
  %4889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4890 = icmp eq i64 %4878, 0
  %4891 = zext i1 %4890 to i8
  store i8 %4891, i8* %4889, align 1
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4893 = lshr i64 %4878, 63
  %4894 = trunc i64 %4893 to i8
  store i8 %4894, i8* %4892, align 1
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4895, align 1
  store %struct.Memory* %loadMem_40c1a5, %struct.Memory** %MEMORY
  %loadMem_40c1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 33
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %PC.i2545 = bitcast %union.anon* %4898 to i64*
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 5
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %RCX.i2546 = bitcast %union.anon* %4901 to i64*
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4903 = getelementptr inbounds %struct.GPR, %struct.GPR* %4902, i32 0, i32 7
  %4904 = getelementptr inbounds %struct.Reg, %struct.Reg* %4903, i32 0, i32 0
  %RDX.i2547 = bitcast %union.anon* %4904 to i64*
  %4905 = load i64, i64* %RCX.i2546
  %4906 = load i64, i64* %RDX.i2547
  %4907 = load i64, i64* %PC.i2545
  %4908 = add i64 %4907, 3
  store i64 %4908, i64* %PC.i2545
  %4909 = add i64 %4906, %4905
  store i64 %4909, i64* %RCX.i2546, align 8
  %4910 = icmp ult i64 %4909, %4905
  %4911 = icmp ult i64 %4909, %4906
  %4912 = or i1 %4910, %4911
  %4913 = zext i1 %4912 to i8
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4913, i8* %4914, align 1
  %4915 = trunc i64 %4909 to i32
  %4916 = and i32 %4915, 255
  %4917 = call i32 @llvm.ctpop.i32(i32 %4916)
  %4918 = trunc i32 %4917 to i8
  %4919 = and i8 %4918, 1
  %4920 = xor i8 %4919, 1
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4920, i8* %4921, align 1
  %4922 = xor i64 %4906, %4905
  %4923 = xor i64 %4922, %4909
  %4924 = lshr i64 %4923, 4
  %4925 = trunc i64 %4924 to i8
  %4926 = and i8 %4925, 1
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4926, i8* %4927, align 1
  %4928 = icmp eq i64 %4909, 0
  %4929 = zext i1 %4928 to i8
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4929, i8* %4930, align 1
  %4931 = lshr i64 %4909, 63
  %4932 = trunc i64 %4931 to i8
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4932, i8* %4933, align 1
  %4934 = lshr i64 %4905, 63
  %4935 = lshr i64 %4906, 63
  %4936 = xor i64 %4931, %4934
  %4937 = xor i64 %4931, %4935
  %4938 = add i64 %4936, %4937
  %4939 = icmp eq i64 %4938, 2
  %4940 = zext i1 %4939 to i8
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4940, i8* %4941, align 1
  store %struct.Memory* %loadMem_40c1a9, %struct.Memory** %MEMORY
  %loadMem_40c1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 33
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %PC.i2542 = bitcast %union.anon* %4944 to i64*
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4946 = getelementptr inbounds %struct.GPR, %struct.GPR* %4945, i32 0, i32 7
  %4947 = getelementptr inbounds %struct.Reg, %struct.Reg* %4946, i32 0, i32 0
  %RDX.i2543 = bitcast %union.anon* %4947 to i64*
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4949 = getelementptr inbounds %struct.GPR, %struct.GPR* %4948, i32 0, i32 15
  %4950 = getelementptr inbounds %struct.Reg, %struct.Reg* %4949, i32 0, i32 0
  %RBP.i2544 = bitcast %union.anon* %4950 to i64*
  %4951 = load i64, i64* %RBP.i2544
  %4952 = sub i64 %4951, 24
  %4953 = load i64, i64* %PC.i2542
  %4954 = add i64 %4953, 4
  store i64 %4954, i64* %PC.i2542
  %4955 = inttoptr i64 %4952 to i32*
  %4956 = load i32, i32* %4955
  %4957 = sext i32 %4956 to i64
  store i64 %4957, i64* %RDX.i2543, align 8
  store %struct.Memory* %loadMem_40c1ac, %struct.Memory** %MEMORY
  %loadMem_40c1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4959 = getelementptr inbounds %struct.GPR, %struct.GPR* %4958, i32 0, i32 33
  %4960 = getelementptr inbounds %struct.Reg, %struct.Reg* %4959, i32 0, i32 0
  %PC.i2538 = bitcast %union.anon* %4960 to i64*
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4962 = getelementptr inbounds %struct.GPR, %struct.GPR* %4961, i32 0, i32 1
  %4963 = getelementptr inbounds %struct.Reg, %struct.Reg* %4962, i32 0, i32 0
  %RAX.i2539 = bitcast %union.anon* %4963 to i64*
  %4964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4965 = getelementptr inbounds %struct.GPR, %struct.GPR* %4964, i32 0, i32 5
  %4966 = getelementptr inbounds %struct.Reg, %struct.Reg* %4965, i32 0, i32 0
  %RCX.i2540 = bitcast %union.anon* %4966 to i64*
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 7
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %RDX.i2541 = bitcast %union.anon* %4969 to i64*
  %4970 = load i64, i64* %RAX.i2539
  %4971 = load i64, i64* %RCX.i2540
  %4972 = load i64, i64* %RDX.i2541
  %4973 = mul i64 %4972, 4
  %4974 = add i64 %4973, %4971
  %4975 = load i64, i64* %PC.i2538
  %4976 = add i64 %4975, 3
  store i64 %4976, i64* %PC.i2538
  %4977 = trunc i64 %4970 to i32
  %4978 = inttoptr i64 %4974 to i32*
  %4979 = load i32, i32* %4978
  %4980 = sub i32 %4977, %4979
  %4981 = zext i32 %4980 to i64
  store i64 %4981, i64* %RAX.i2539, align 8
  %4982 = icmp ult i32 %4977, %4979
  %4983 = zext i1 %4982 to i8
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4983, i8* %4984, align 1
  %4985 = and i32 %4980, 255
  %4986 = call i32 @llvm.ctpop.i32(i32 %4985)
  %4987 = trunc i32 %4986 to i8
  %4988 = and i8 %4987, 1
  %4989 = xor i8 %4988, 1
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4989, i8* %4990, align 1
  %4991 = xor i32 %4979, %4977
  %4992 = xor i32 %4991, %4980
  %4993 = lshr i32 %4992, 4
  %4994 = trunc i32 %4993 to i8
  %4995 = and i8 %4994, 1
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4995, i8* %4996, align 1
  %4997 = icmp eq i32 %4980, 0
  %4998 = zext i1 %4997 to i8
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4998, i8* %4999, align 1
  %5000 = lshr i32 %4980, 31
  %5001 = trunc i32 %5000 to i8
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5001, i8* %5002, align 1
  %5003 = lshr i32 %4977, 31
  %5004 = lshr i32 %4979, 31
  %5005 = xor i32 %5004, %5003
  %5006 = xor i32 %5000, %5003
  %5007 = add i32 %5006, %5005
  %5008 = icmp eq i32 %5007, 2
  %5009 = zext i1 %5008 to i8
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5009, i8* %5010, align 1
  store %struct.Memory* %loadMem_40c1b0, %struct.Memory** %MEMORY
  %loadMem_40c1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 33
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %PC.i2535 = bitcast %union.anon* %5013 to i64*
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5015 = getelementptr inbounds %struct.GPR, %struct.GPR* %5014, i32 0, i32 5
  %5016 = getelementptr inbounds %struct.Reg, %struct.Reg* %5015, i32 0, i32 0
  %RCX.i2536 = bitcast %union.anon* %5016 to i64*
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 15
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %RBP.i2537 = bitcast %union.anon* %5019 to i64*
  %5020 = load i64, i64* %RBP.i2537
  %5021 = sub i64 %5020, 28
  %5022 = load i64, i64* %PC.i2535
  %5023 = add i64 %5022, 4
  store i64 %5023, i64* %PC.i2535
  %5024 = inttoptr i64 %5021 to i32*
  %5025 = load i32, i32* %5024
  %5026 = sext i32 %5025 to i64
  store i64 %5026, i64* %RCX.i2536, align 8
  store %struct.Memory* %loadMem_40c1b3, %struct.Memory** %MEMORY
  %loadMem_40c1b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 33
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %PC.i2531 = bitcast %union.anon* %5029 to i64*
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5031 = getelementptr inbounds %struct.GPR, %struct.GPR* %5030, i32 0, i32 1
  %5032 = getelementptr inbounds %struct.Reg, %struct.Reg* %5031, i32 0, i32 0
  %EAX.i2532 = bitcast %union.anon* %5032 to i32*
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5034 = getelementptr inbounds %struct.GPR, %struct.GPR* %5033, i32 0, i32 5
  %5035 = getelementptr inbounds %struct.Reg, %struct.Reg* %5034, i32 0, i32 0
  %RCX.i2533 = bitcast %union.anon* %5035 to i64*
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5037 = getelementptr inbounds %struct.GPR, %struct.GPR* %5036, i32 0, i32 15
  %5038 = getelementptr inbounds %struct.Reg, %struct.Reg* %5037, i32 0, i32 0
  %RBP.i2534 = bitcast %union.anon* %5038 to i64*
  %5039 = load i64, i64* %RBP.i2534
  %5040 = load i64, i64* %RCX.i2533
  %5041 = mul i64 %5040, 4
  %5042 = add i64 %5039, -64
  %5043 = add i64 %5042, %5041
  %5044 = load i32, i32* %EAX.i2532
  %5045 = zext i32 %5044 to i64
  %5046 = load i64, i64* %PC.i2531
  %5047 = add i64 %5046, 4
  store i64 %5047, i64* %PC.i2531
  %5048 = inttoptr i64 %5043 to i32*
  store i32 %5044, i32* %5048
  store %struct.Memory* %loadMem_40c1b7, %struct.Memory** %MEMORY
  %loadMem_40c1bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 33
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %PC.i2528 = bitcast %union.anon* %5051 to i64*
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 1
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %RAX.i2529 = bitcast %union.anon* %5054 to i64*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 15
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %RBP.i2530 = bitcast %union.anon* %5057 to i64*
  %5058 = load i64, i64* %RBP.i2530
  %5059 = sub i64 %5058, 20
  %5060 = load i64, i64* %PC.i2528
  %5061 = add i64 %5060, 3
  store i64 %5061, i64* %PC.i2528
  %5062 = inttoptr i64 %5059 to i32*
  %5063 = load i32, i32* %5062
  %5064 = zext i32 %5063 to i64
  store i64 %5064, i64* %RAX.i2529, align 8
  store %struct.Memory* %loadMem_40c1bb, %struct.Memory** %MEMORY
  %loadMem_40c1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5066 = getelementptr inbounds %struct.GPR, %struct.GPR* %5065, i32 0, i32 33
  %5067 = getelementptr inbounds %struct.Reg, %struct.Reg* %5066, i32 0, i32 0
  %PC.i2526 = bitcast %union.anon* %5067 to i64*
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5069 = getelementptr inbounds %struct.GPR, %struct.GPR* %5068, i32 0, i32 1
  %5070 = getelementptr inbounds %struct.Reg, %struct.Reg* %5069, i32 0, i32 0
  %RAX.i2527 = bitcast %union.anon* %5070 to i64*
  %5071 = load i64, i64* %RAX.i2527
  %5072 = load i64, i64* %PC.i2526
  %5073 = add i64 %5072, 3
  store i64 %5073, i64* %PC.i2526
  %5074 = trunc i64 %5071 to i32
  %5075 = add i32 1, %5074
  %5076 = zext i32 %5075 to i64
  store i64 %5076, i64* %RAX.i2527, align 8
  %5077 = icmp ult i32 %5075, %5074
  %5078 = icmp ult i32 %5075, 1
  %5079 = or i1 %5077, %5078
  %5080 = zext i1 %5079 to i8
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5080, i8* %5081, align 1
  %5082 = and i32 %5075, 255
  %5083 = call i32 @llvm.ctpop.i32(i32 %5082)
  %5084 = trunc i32 %5083 to i8
  %5085 = and i8 %5084, 1
  %5086 = xor i8 %5085, 1
  %5087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5086, i8* %5087, align 1
  %5088 = xor i64 1, %5071
  %5089 = trunc i64 %5088 to i32
  %5090 = xor i32 %5089, %5075
  %5091 = lshr i32 %5090, 4
  %5092 = trunc i32 %5091 to i8
  %5093 = and i8 %5092, 1
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5093, i8* %5094, align 1
  %5095 = icmp eq i32 %5075, 0
  %5096 = zext i1 %5095 to i8
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5096, i8* %5097, align 1
  %5098 = lshr i32 %5075, 31
  %5099 = trunc i32 %5098 to i8
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5099, i8* %5100, align 1
  %5101 = lshr i32 %5074, 31
  %5102 = xor i32 %5098, %5101
  %5103 = add i32 %5102, %5098
  %5104 = icmp eq i32 %5103, 2
  %5105 = zext i1 %5104 to i8
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5105, i8* %5106, align 1
  store %struct.Memory* %loadMem_40c1be, %struct.Memory** %MEMORY
  %loadMem_40c1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 33
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %PC.i2523 = bitcast %union.anon* %5109 to i64*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 1
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %EAX.i2524 = bitcast %union.anon* %5112 to i32*
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 15
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %RBP.i2525 = bitcast %union.anon* %5115 to i64*
  %5116 = load i64, i64* %RBP.i2525
  %5117 = sub i64 %5116, 20
  %5118 = load i32, i32* %EAX.i2524
  %5119 = zext i32 %5118 to i64
  %5120 = load i64, i64* %PC.i2523
  %5121 = add i64 %5120, 3
  store i64 %5121, i64* %PC.i2523
  %5122 = inttoptr i64 %5117 to i32*
  store i32 %5118, i32* %5122
  store %struct.Memory* %loadMem_40c1c1, %struct.Memory** %MEMORY
  %loadMem_40c1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 33
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %PC.i2522 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %PC.i2522
  %5127 = add i64 %5126, -178
  %5128 = load i64, i64* %PC.i2522
  %5129 = add i64 %5128, 5
  store i64 %5129, i64* %PC.i2522
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5127, i64* %5130, align 8
  store %struct.Memory* %loadMem_40c1c4, %struct.Memory** %MEMORY
  br label %block_.L_40c112

block_.L_40c1c9:                                  ; preds = %block_.L_40c112
  %loadMem_40c1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 33
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %PC.i2519 = bitcast %union.anon* %5133 to i64*
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 1
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %RAX.i2520 = bitcast %union.anon* %5136 to i64*
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5138 = getelementptr inbounds %struct.GPR, %struct.GPR* %5137, i32 0, i32 15
  %5139 = getelementptr inbounds %struct.Reg, %struct.Reg* %5138, i32 0, i32 0
  %RBP.i2521 = bitcast %union.anon* %5139 to i64*
  %5140 = load i64, i64* %RBP.i2521
  %5141 = sub i64 %5140, 64
  %5142 = load i64, i64* %PC.i2519
  %5143 = add i64 %5142, 3
  store i64 %5143, i64* %PC.i2519
  %5144 = inttoptr i64 %5141 to i32*
  %5145 = load i32, i32* %5144
  %5146 = zext i32 %5145 to i64
  store i64 %5146, i64* %RAX.i2520, align 8
  store %struct.Memory* %loadMem_40c1c9, %struct.Memory** %MEMORY
  %loadMem_40c1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 33
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %PC.i2516 = bitcast %union.anon* %5149 to i64*
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 1
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %RAX.i2517 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 15
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RBP.i2518 = bitcast %union.anon* %5155 to i64*
  %5156 = load i64, i64* %RAX.i2517
  %5157 = load i64, i64* %RBP.i2518
  %5158 = sub i64 %5157, 60
  %5159 = load i64, i64* %PC.i2516
  %5160 = add i64 %5159, 3
  store i64 %5160, i64* %PC.i2516
  %5161 = trunc i64 %5156 to i32
  %5162 = inttoptr i64 %5158 to i32*
  %5163 = load i32, i32* %5162
  %5164 = add i32 %5163, %5161
  %5165 = zext i32 %5164 to i64
  store i64 %5165, i64* %RAX.i2517, align 8
  %5166 = icmp ult i32 %5164, %5161
  %5167 = icmp ult i32 %5164, %5163
  %5168 = or i1 %5166, %5167
  %5169 = zext i1 %5168 to i8
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5169, i8* %5170, align 1
  %5171 = and i32 %5164, 255
  %5172 = call i32 @llvm.ctpop.i32(i32 %5171)
  %5173 = trunc i32 %5172 to i8
  %5174 = and i8 %5173, 1
  %5175 = xor i8 %5174, 1
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5175, i8* %5176, align 1
  %5177 = xor i32 %5163, %5161
  %5178 = xor i32 %5177, %5164
  %5179 = lshr i32 %5178, 4
  %5180 = trunc i32 %5179 to i8
  %5181 = and i8 %5180, 1
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5181, i8* %5182, align 1
  %5183 = icmp eq i32 %5164, 0
  %5184 = zext i1 %5183 to i8
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5184, i8* %5185, align 1
  %5186 = lshr i32 %5164, 31
  %5187 = trunc i32 %5186 to i8
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5187, i8* %5188, align 1
  %5189 = lshr i32 %5161, 31
  %5190 = lshr i32 %5163, 31
  %5191 = xor i32 %5186, %5189
  %5192 = xor i32 %5186, %5190
  %5193 = add i32 %5191, %5192
  %5194 = icmp eq i32 %5193, 2
  %5195 = zext i1 %5194 to i8
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5195, i8* %5196, align 1
  store %struct.Memory* %loadMem_40c1cc, %struct.Memory** %MEMORY
  %loadMem_40c1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5198 = getelementptr inbounds %struct.GPR, %struct.GPR* %5197, i32 0, i32 33
  %5199 = getelementptr inbounds %struct.Reg, %struct.Reg* %5198, i32 0, i32 0
  %PC.i2514 = bitcast %union.anon* %5199 to i64*
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5201 = getelementptr inbounds %struct.GPR, %struct.GPR* %5200, i32 0, i32 5
  %5202 = getelementptr inbounds %struct.Reg, %struct.Reg* %5201, i32 0, i32 0
  %RCX.i2515 = bitcast %union.anon* %5202 to i64*
  %5203 = load i64, i64* %PC.i2514
  %5204 = add i64 %5203, 8
  store i64 %5204, i64* %PC.i2514
  %5205 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5205, i64* %RCX.i2515, align 8
  store %struct.Memory* %loadMem_40c1cf, %struct.Memory** %MEMORY
  %loadMem_40c1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5207 = getelementptr inbounds %struct.GPR, %struct.GPR* %5206, i32 0, i32 33
  %5208 = getelementptr inbounds %struct.Reg, %struct.Reg* %5207, i32 0, i32 0
  %PC.i2511 = bitcast %union.anon* %5208 to i64*
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 7
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %RDX.i2512 = bitcast %union.anon* %5211 to i64*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 15
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %RBP.i2513 = bitcast %union.anon* %5214 to i64*
  %5215 = load i64, i64* %RBP.i2513
  %5216 = sub i64 %5215, 24
  %5217 = load i64, i64* %PC.i2511
  %5218 = add i64 %5217, 4
  store i64 %5218, i64* %PC.i2511
  %5219 = inttoptr i64 %5216 to i32*
  %5220 = load i32, i32* %5219
  %5221 = sext i32 %5220 to i64
  store i64 %5221, i64* %RDX.i2512, align 8
  store %struct.Memory* %loadMem_40c1d7, %struct.Memory** %MEMORY
  %loadMem_40c1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 33
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %PC.i2507 = bitcast %union.anon* %5224 to i64*
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5226 = getelementptr inbounds %struct.GPR, %struct.GPR* %5225, i32 0, i32 1
  %5227 = getelementptr inbounds %struct.Reg, %struct.Reg* %5226, i32 0, i32 0
  %EAX.i2508 = bitcast %union.anon* %5227 to i32*
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5229 = getelementptr inbounds %struct.GPR, %struct.GPR* %5228, i32 0, i32 5
  %5230 = getelementptr inbounds %struct.Reg, %struct.Reg* %5229, i32 0, i32 0
  %RCX.i2509 = bitcast %union.anon* %5230 to i64*
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 7
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %RDX.i2510 = bitcast %union.anon* %5233 to i64*
  %5234 = load i64, i64* %RCX.i2509
  %5235 = load i64, i64* %RDX.i2510
  %5236 = mul i64 %5235, 4
  %5237 = add i64 %5234, 13112
  %5238 = add i64 %5237, %5236
  %5239 = load i32, i32* %EAX.i2508
  %5240 = zext i32 %5239 to i64
  %5241 = load i64, i64* %PC.i2507
  %5242 = add i64 %5241, 7
  store i64 %5242, i64* %PC.i2507
  %5243 = inttoptr i64 %5238 to i32*
  store i32 %5239, i32* %5243
  store %struct.Memory* %loadMem_40c1db, %struct.Memory** %MEMORY
  %loadMem_40c1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5245 = getelementptr inbounds %struct.GPR, %struct.GPR* %5244, i32 0, i32 33
  %5246 = getelementptr inbounds %struct.Reg, %struct.Reg* %5245, i32 0, i32 0
  %PC.i2504 = bitcast %union.anon* %5246 to i64*
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 1
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %RAX.i2505 = bitcast %union.anon* %5249 to i64*
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5251 = getelementptr inbounds %struct.GPR, %struct.GPR* %5250, i32 0, i32 15
  %5252 = getelementptr inbounds %struct.Reg, %struct.Reg* %5251, i32 0, i32 0
  %RBP.i2506 = bitcast %union.anon* %5252 to i64*
  %5253 = load i64, i64* %RBP.i2506
  %5254 = sub i64 %5253, 64
  %5255 = load i64, i64* %PC.i2504
  %5256 = add i64 %5255, 3
  store i64 %5256, i64* %PC.i2504
  %5257 = inttoptr i64 %5254 to i32*
  %5258 = load i32, i32* %5257
  %5259 = zext i32 %5258 to i64
  store i64 %5259, i64* %RAX.i2505, align 8
  store %struct.Memory* %loadMem_40c1e2, %struct.Memory** %MEMORY
  %loadMem_40c1e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5261 = getelementptr inbounds %struct.GPR, %struct.GPR* %5260, i32 0, i32 33
  %5262 = getelementptr inbounds %struct.Reg, %struct.Reg* %5261, i32 0, i32 0
  %PC.i2501 = bitcast %union.anon* %5262 to i64*
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5264 = getelementptr inbounds %struct.GPR, %struct.GPR* %5263, i32 0, i32 1
  %5265 = getelementptr inbounds %struct.Reg, %struct.Reg* %5264, i32 0, i32 0
  %RAX.i2502 = bitcast %union.anon* %5265 to i64*
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 15
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %RBP.i2503 = bitcast %union.anon* %5268 to i64*
  %5269 = load i64, i64* %RAX.i2502
  %5270 = load i64, i64* %RBP.i2503
  %5271 = sub i64 %5270, 60
  %5272 = load i64, i64* %PC.i2501
  %5273 = add i64 %5272, 3
  store i64 %5273, i64* %PC.i2501
  %5274 = trunc i64 %5269 to i32
  %5275 = inttoptr i64 %5271 to i32*
  %5276 = load i32, i32* %5275
  %5277 = sub i32 %5274, %5276
  %5278 = zext i32 %5277 to i64
  store i64 %5278, i64* %RAX.i2502, align 8
  %5279 = icmp ult i32 %5274, %5276
  %5280 = zext i1 %5279 to i8
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5280, i8* %5281, align 1
  %5282 = and i32 %5277, 255
  %5283 = call i32 @llvm.ctpop.i32(i32 %5282)
  %5284 = trunc i32 %5283 to i8
  %5285 = and i8 %5284, 1
  %5286 = xor i8 %5285, 1
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5286, i8* %5287, align 1
  %5288 = xor i32 %5276, %5274
  %5289 = xor i32 %5288, %5277
  %5290 = lshr i32 %5289, 4
  %5291 = trunc i32 %5290 to i8
  %5292 = and i8 %5291, 1
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5292, i8* %5293, align 1
  %5294 = icmp eq i32 %5277, 0
  %5295 = zext i1 %5294 to i8
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5295, i8* %5296, align 1
  %5297 = lshr i32 %5277, 31
  %5298 = trunc i32 %5297 to i8
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5298, i8* %5299, align 1
  %5300 = lshr i32 %5274, 31
  %5301 = lshr i32 %5276, 31
  %5302 = xor i32 %5301, %5300
  %5303 = xor i32 %5297, %5300
  %5304 = add i32 %5303, %5302
  %5305 = icmp eq i32 %5304, 2
  %5306 = zext i1 %5305 to i8
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5306, i8* %5307, align 1
  store %struct.Memory* %loadMem_40c1e5, %struct.Memory** %MEMORY
  %loadMem_40c1e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5309 = getelementptr inbounds %struct.GPR, %struct.GPR* %5308, i32 0, i32 33
  %5310 = getelementptr inbounds %struct.Reg, %struct.Reg* %5309, i32 0, i32 0
  %PC.i2499 = bitcast %union.anon* %5310 to i64*
  %5311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5312 = getelementptr inbounds %struct.GPR, %struct.GPR* %5311, i32 0, i32 5
  %5313 = getelementptr inbounds %struct.Reg, %struct.Reg* %5312, i32 0, i32 0
  %RCX.i2500 = bitcast %union.anon* %5313 to i64*
  %5314 = load i64, i64* %PC.i2499
  %5315 = add i64 %5314, 8
  store i64 %5315, i64* %PC.i2499
  %5316 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5316, i64* %RCX.i2500, align 8
  store %struct.Memory* %loadMem_40c1e8, %struct.Memory** %MEMORY
  %loadMem_40c1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 33
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %PC.i2496 = bitcast %union.anon* %5319 to i64*
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5321 = getelementptr inbounds %struct.GPR, %struct.GPR* %5320, i32 0, i32 7
  %5322 = getelementptr inbounds %struct.Reg, %struct.Reg* %5321, i32 0, i32 0
  %RDX.i2497 = bitcast %union.anon* %5322 to i64*
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 15
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %RBP.i2498 = bitcast %union.anon* %5325 to i64*
  %5326 = load i64, i64* %RBP.i2498
  %5327 = sub i64 %5326, 24
  %5328 = load i64, i64* %PC.i2496
  %5329 = add i64 %5328, 4
  store i64 %5329, i64* %PC.i2496
  %5330 = inttoptr i64 %5327 to i32*
  %5331 = load i32, i32* %5330
  %5332 = sext i32 %5331 to i64
  store i64 %5332, i64* %RDX.i2497, align 8
  store %struct.Memory* %loadMem_40c1f0, %struct.Memory** %MEMORY
  %loadMem_40c1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 33
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %PC.i2492 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 1
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %EAX.i2493 = bitcast %union.anon* %5338 to i32*
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5340 = getelementptr inbounds %struct.GPR, %struct.GPR* %5339, i32 0, i32 5
  %5341 = getelementptr inbounds %struct.Reg, %struct.Reg* %5340, i32 0, i32 0
  %RCX.i2494 = bitcast %union.anon* %5341 to i64*
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5343 = getelementptr inbounds %struct.GPR, %struct.GPR* %5342, i32 0, i32 7
  %5344 = getelementptr inbounds %struct.Reg, %struct.Reg* %5343, i32 0, i32 0
  %RDX.i2495 = bitcast %union.anon* %5344 to i64*
  %5345 = load i64, i64* %RCX.i2494
  %5346 = load i64, i64* %RDX.i2495
  %5347 = mul i64 %5346, 4
  %5348 = add i64 %5345, 13240
  %5349 = add i64 %5348, %5347
  %5350 = load i32, i32* %EAX.i2493
  %5351 = zext i32 %5350 to i64
  %5352 = load i64, i64* %PC.i2492
  %5353 = add i64 %5352, 7
  store i64 %5353, i64* %PC.i2492
  %5354 = inttoptr i64 %5349 to i32*
  store i32 %5350, i32* %5354
  store %struct.Memory* %loadMem_40c1f4, %struct.Memory** %MEMORY
  %loadMem_40c1fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5356 = getelementptr inbounds %struct.GPR, %struct.GPR* %5355, i32 0, i32 33
  %5357 = getelementptr inbounds %struct.Reg, %struct.Reg* %5356, i32 0, i32 0
  %PC.i2489 = bitcast %union.anon* %5357 to i64*
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5359 = getelementptr inbounds %struct.GPR, %struct.GPR* %5358, i32 0, i32 1
  %5360 = getelementptr inbounds %struct.Reg, %struct.Reg* %5359, i32 0, i32 0
  %RAX.i2490 = bitcast %union.anon* %5360 to i64*
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5362 = getelementptr inbounds %struct.GPR, %struct.GPR* %5361, i32 0, i32 15
  %5363 = getelementptr inbounds %struct.Reg, %struct.Reg* %5362, i32 0, i32 0
  %RBP.i2491 = bitcast %union.anon* %5363 to i64*
  %5364 = load i64, i64* %RBP.i2491
  %5365 = sub i64 %5364, 52
  %5366 = load i64, i64* %PC.i2489
  %5367 = add i64 %5366, 3
  store i64 %5367, i64* %PC.i2489
  %5368 = inttoptr i64 %5365 to i32*
  %5369 = load i32, i32* %5368
  %5370 = zext i32 %5369 to i64
  store i64 %5370, i64* %RAX.i2490, align 8
  store %struct.Memory* %loadMem_40c1fb, %struct.Memory** %MEMORY
  %loadMem_40c1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5372 = getelementptr inbounds %struct.GPR, %struct.GPR* %5371, i32 0, i32 33
  %5373 = getelementptr inbounds %struct.Reg, %struct.Reg* %5372, i32 0, i32 0
  %PC.i2487 = bitcast %union.anon* %5373 to i64*
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5375 = getelementptr inbounds %struct.GPR, %struct.GPR* %5374, i32 0, i32 1
  %5376 = getelementptr inbounds %struct.Reg, %struct.Reg* %5375, i32 0, i32 0
  %RAX.i2488 = bitcast %union.anon* %5376 to i64*
  %5377 = load i64, i64* %RAX.i2488
  %5378 = load i64, i64* %PC.i2487
  %5379 = add i64 %5378, 2
  store i64 %5379, i64* %PC.i2487
  %5380 = trunc i64 %5377 to i32
  %5381 = shl i32 %5380, 1
  %5382 = icmp slt i32 %5380, 0
  %5383 = icmp slt i32 %5381, 0
  %5384 = xor i1 %5382, %5383
  %5385 = zext i32 %5381 to i64
  store i64 %5385, i64* %RAX.i2488, align 8
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5387 = zext i1 %5382 to i8
  store i8 %5387, i8* %5386, align 1
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5389 = and i32 %5381, 254
  %5390 = call i32 @llvm.ctpop.i32(i32 %5389)
  %5391 = trunc i32 %5390 to i8
  %5392 = and i8 %5391, 1
  %5393 = xor i8 %5392, 1
  store i8 %5393, i8* %5388, align 1
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5394, align 1
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5396 = icmp eq i32 %5381, 0
  %5397 = zext i1 %5396 to i8
  store i8 %5397, i8* %5395, align 1
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5399 = lshr i32 %5381, 31
  %5400 = trunc i32 %5399 to i8
  store i8 %5400, i8* %5398, align 1
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5402 = zext i1 %5384 to i8
  store i8 %5402, i8* %5401, align 1
  store %struct.Memory* %loadMem_40c1fe, %struct.Memory** %MEMORY
  %loadMem_40c201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 33
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %PC.i2484 = bitcast %union.anon* %5405 to i64*
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5407 = getelementptr inbounds %struct.GPR, %struct.GPR* %5406, i32 0, i32 1
  %5408 = getelementptr inbounds %struct.Reg, %struct.Reg* %5407, i32 0, i32 0
  %RAX.i2485 = bitcast %union.anon* %5408 to i64*
  %5409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5410 = getelementptr inbounds %struct.GPR, %struct.GPR* %5409, i32 0, i32 15
  %5411 = getelementptr inbounds %struct.Reg, %struct.Reg* %5410, i32 0, i32 0
  %RBP.i2486 = bitcast %union.anon* %5411 to i64*
  %5412 = load i64, i64* %RAX.i2485
  %5413 = load i64, i64* %RBP.i2486
  %5414 = sub i64 %5413, 56
  %5415 = load i64, i64* %PC.i2484
  %5416 = add i64 %5415, 3
  store i64 %5416, i64* %PC.i2484
  %5417 = trunc i64 %5412 to i32
  %5418 = inttoptr i64 %5414 to i32*
  %5419 = load i32, i32* %5418
  %5420 = add i32 %5419, %5417
  %5421 = zext i32 %5420 to i64
  store i64 %5421, i64* %RAX.i2485, align 8
  %5422 = icmp ult i32 %5420, %5417
  %5423 = icmp ult i32 %5420, %5419
  %5424 = or i1 %5422, %5423
  %5425 = zext i1 %5424 to i8
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5425, i8* %5426, align 1
  %5427 = and i32 %5420, 255
  %5428 = call i32 @llvm.ctpop.i32(i32 %5427)
  %5429 = trunc i32 %5428 to i8
  %5430 = and i8 %5429, 1
  %5431 = xor i8 %5430, 1
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5431, i8* %5432, align 1
  %5433 = xor i32 %5419, %5417
  %5434 = xor i32 %5433, %5420
  %5435 = lshr i32 %5434, 4
  %5436 = trunc i32 %5435 to i8
  %5437 = and i8 %5436, 1
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5437, i8* %5438, align 1
  %5439 = icmp eq i32 %5420, 0
  %5440 = zext i1 %5439 to i8
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5440, i8* %5441, align 1
  %5442 = lshr i32 %5420, 31
  %5443 = trunc i32 %5442 to i8
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5443, i8* %5444, align 1
  %5445 = lshr i32 %5417, 31
  %5446 = lshr i32 %5419, 31
  %5447 = xor i32 %5442, %5445
  %5448 = xor i32 %5442, %5446
  %5449 = add i32 %5447, %5448
  %5450 = icmp eq i32 %5449, 2
  %5451 = zext i1 %5450 to i8
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5451, i8* %5452, align 1
  store %struct.Memory* %loadMem_40c201, %struct.Memory** %MEMORY
  %loadMem_40c204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5454 = getelementptr inbounds %struct.GPR, %struct.GPR* %5453, i32 0, i32 33
  %5455 = getelementptr inbounds %struct.Reg, %struct.Reg* %5454, i32 0, i32 0
  %PC.i2482 = bitcast %union.anon* %5455 to i64*
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 5
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %RCX.i2483 = bitcast %union.anon* %5458 to i64*
  %5459 = load i64, i64* %PC.i2482
  %5460 = add i64 %5459, 8
  store i64 %5460, i64* %PC.i2482
  %5461 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5461, i64* %RCX.i2483, align 8
  store %struct.Memory* %loadMem_40c204, %struct.Memory** %MEMORY
  %loadMem_40c20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5463 = getelementptr inbounds %struct.GPR, %struct.GPR* %5462, i32 0, i32 33
  %5464 = getelementptr inbounds %struct.Reg, %struct.Reg* %5463, i32 0, i32 0
  %PC.i2479 = bitcast %union.anon* %5464 to i64*
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 7
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %RDX.i2480 = bitcast %union.anon* %5467 to i64*
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 15
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %RBP.i2481 = bitcast %union.anon* %5470 to i64*
  %5471 = load i64, i64* %RBP.i2481
  %5472 = sub i64 %5471, 24
  %5473 = load i64, i64* %PC.i2479
  %5474 = add i64 %5473, 4
  store i64 %5474, i64* %PC.i2479
  %5475 = inttoptr i64 %5472 to i32*
  %5476 = load i32, i32* %5475
  %5477 = sext i32 %5476 to i64
  store i64 %5477, i64* %RDX.i2480, align 8
  store %struct.Memory* %loadMem_40c20c, %struct.Memory** %MEMORY
  %loadMem_40c210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 33
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %PC.i2475 = bitcast %union.anon* %5480 to i64*
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5482 = getelementptr inbounds %struct.GPR, %struct.GPR* %5481, i32 0, i32 1
  %5483 = getelementptr inbounds %struct.Reg, %struct.Reg* %5482, i32 0, i32 0
  %EAX.i2476 = bitcast %union.anon* %5483 to i32*
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 5
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %RCX.i2477 = bitcast %union.anon* %5486 to i64*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 7
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RDX.i2478 = bitcast %union.anon* %5489 to i64*
  %5490 = load i64, i64* %RCX.i2477
  %5491 = load i64, i64* %RDX.i2478
  %5492 = mul i64 %5491, 4
  %5493 = add i64 %5490, 13176
  %5494 = add i64 %5493, %5492
  %5495 = load i32, i32* %EAX.i2476
  %5496 = zext i32 %5495 to i64
  %5497 = load i64, i64* %PC.i2475
  %5498 = add i64 %5497, 7
  store i64 %5498, i64* %PC.i2475
  %5499 = inttoptr i64 %5494 to i32*
  store i32 %5495, i32* %5499
  store %struct.Memory* %loadMem_40c210, %struct.Memory** %MEMORY
  %loadMem_40c217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 33
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %PC.i2472 = bitcast %union.anon* %5502 to i64*
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 1
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %RAX.i2473 = bitcast %union.anon* %5505 to i64*
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5507 = getelementptr inbounds %struct.GPR, %struct.GPR* %5506, i32 0, i32 15
  %5508 = getelementptr inbounds %struct.Reg, %struct.Reg* %5507, i32 0, i32 0
  %RBP.i2474 = bitcast %union.anon* %5508 to i64*
  %5509 = load i64, i64* %RBP.i2474
  %5510 = sub i64 %5509, 52
  %5511 = load i64, i64* %PC.i2472
  %5512 = add i64 %5511, 3
  store i64 %5512, i64* %PC.i2472
  %5513 = inttoptr i64 %5510 to i32*
  %5514 = load i32, i32* %5513
  %5515 = zext i32 %5514 to i64
  store i64 %5515, i64* %RAX.i2473, align 8
  store %struct.Memory* %loadMem_40c217, %struct.Memory** %MEMORY
  %loadMem_40c21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5517 = getelementptr inbounds %struct.GPR, %struct.GPR* %5516, i32 0, i32 33
  %5518 = getelementptr inbounds %struct.Reg, %struct.Reg* %5517, i32 0, i32 0
  %PC.i2469 = bitcast %union.anon* %5518 to i64*
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5520 = getelementptr inbounds %struct.GPR, %struct.GPR* %5519, i32 0, i32 9
  %5521 = getelementptr inbounds %struct.Reg, %struct.Reg* %5520, i32 0, i32 0
  %RSI.i2470 = bitcast %union.anon* %5521 to i64*
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 15
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %RBP.i2471 = bitcast %union.anon* %5524 to i64*
  %5525 = load i64, i64* %RBP.i2471
  %5526 = sub i64 %5525, 56
  %5527 = load i64, i64* %PC.i2469
  %5528 = add i64 %5527, 3
  store i64 %5528, i64* %PC.i2469
  %5529 = inttoptr i64 %5526 to i32*
  %5530 = load i32, i32* %5529
  %5531 = zext i32 %5530 to i64
  store i64 %5531, i64* %RSI.i2470, align 8
  store %struct.Memory* %loadMem_40c21a, %struct.Memory** %MEMORY
  %loadMem_40c21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 33
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %PC.i2467 = bitcast %union.anon* %5534 to i64*
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 9
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %RSI.i2468 = bitcast %union.anon* %5537 to i64*
  %5538 = load i64, i64* %RSI.i2468
  %5539 = load i64, i64* %PC.i2467
  %5540 = add i64 %5539, 2
  store i64 %5540, i64* %PC.i2467
  %5541 = trunc i64 %5538 to i32
  %5542 = shl i32 %5541, 1
  %5543 = icmp slt i32 %5541, 0
  %5544 = icmp slt i32 %5542, 0
  %5545 = xor i1 %5543, %5544
  %5546 = zext i32 %5542 to i64
  store i64 %5546, i64* %RSI.i2468, align 8
  %5547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5548 = zext i1 %5543 to i8
  store i8 %5548, i8* %5547, align 1
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5550 = and i32 %5542, 254
  %5551 = call i32 @llvm.ctpop.i32(i32 %5550)
  %5552 = trunc i32 %5551 to i8
  %5553 = and i8 %5552, 1
  %5554 = xor i8 %5553, 1
  store i8 %5554, i8* %5549, align 1
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5555, align 1
  %5556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5557 = icmp eq i32 %5542, 0
  %5558 = zext i1 %5557 to i8
  store i8 %5558, i8* %5556, align 1
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5560 = lshr i32 %5542, 31
  %5561 = trunc i32 %5560 to i8
  store i8 %5561, i8* %5559, align 1
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5563 = zext i1 %5545 to i8
  store i8 %5563, i8* %5562, align 1
  store %struct.Memory* %loadMem_40c21d, %struct.Memory** %MEMORY
  %loadMem_40c220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5565 = getelementptr inbounds %struct.GPR, %struct.GPR* %5564, i32 0, i32 33
  %5566 = getelementptr inbounds %struct.Reg, %struct.Reg* %5565, i32 0, i32 0
  %PC.i2464 = bitcast %union.anon* %5566 to i64*
  %5567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5568 = getelementptr inbounds %struct.GPR, %struct.GPR* %5567, i32 0, i32 9
  %5569 = getelementptr inbounds %struct.Reg, %struct.Reg* %5568, i32 0, i32 0
  %ESI.i2465 = bitcast %union.anon* %5569 to i32*
  %5570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5571 = getelementptr inbounds %struct.GPR, %struct.GPR* %5570, i32 0, i32 1
  %5572 = getelementptr inbounds %struct.Reg, %struct.Reg* %5571, i32 0, i32 0
  %RAX.i2466 = bitcast %union.anon* %5572 to i64*
  %5573 = load i64, i64* %RAX.i2466
  %5574 = load i32, i32* %ESI.i2465
  %5575 = zext i32 %5574 to i64
  %5576 = load i64, i64* %PC.i2464
  %5577 = add i64 %5576, 2
  store i64 %5577, i64* %PC.i2464
  %5578 = trunc i64 %5573 to i32
  %5579 = sub i32 %5578, %5574
  %5580 = zext i32 %5579 to i64
  store i64 %5580, i64* %RAX.i2466, align 8
  %5581 = icmp ult i32 %5578, %5574
  %5582 = zext i1 %5581 to i8
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5582, i8* %5583, align 1
  %5584 = and i32 %5579, 255
  %5585 = call i32 @llvm.ctpop.i32(i32 %5584)
  %5586 = trunc i32 %5585 to i8
  %5587 = and i8 %5586, 1
  %5588 = xor i8 %5587, 1
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5588, i8* %5589, align 1
  %5590 = xor i64 %5575, %5573
  %5591 = trunc i64 %5590 to i32
  %5592 = xor i32 %5591, %5579
  %5593 = lshr i32 %5592, 4
  %5594 = trunc i32 %5593 to i8
  %5595 = and i8 %5594, 1
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5595, i8* %5596, align 1
  %5597 = icmp eq i32 %5579, 0
  %5598 = zext i1 %5597 to i8
  %5599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5598, i8* %5599, align 1
  %5600 = lshr i32 %5579, 31
  %5601 = trunc i32 %5600 to i8
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5601, i8* %5602, align 1
  %5603 = lshr i32 %5578, 31
  %5604 = lshr i32 %5574, 31
  %5605 = xor i32 %5604, %5603
  %5606 = xor i32 %5600, %5603
  %5607 = add i32 %5606, %5605
  %5608 = icmp eq i32 %5607, 2
  %5609 = zext i1 %5608 to i8
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5609, i8* %5610, align 1
  store %struct.Memory* %loadMem_40c220, %struct.Memory** %MEMORY
  %loadMem_40c222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5612 = getelementptr inbounds %struct.GPR, %struct.GPR* %5611, i32 0, i32 33
  %5613 = getelementptr inbounds %struct.Reg, %struct.Reg* %5612, i32 0, i32 0
  %PC.i2462 = bitcast %union.anon* %5613 to i64*
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5615 = getelementptr inbounds %struct.GPR, %struct.GPR* %5614, i32 0, i32 5
  %5616 = getelementptr inbounds %struct.Reg, %struct.Reg* %5615, i32 0, i32 0
  %RCX.i2463 = bitcast %union.anon* %5616 to i64*
  %5617 = load i64, i64* %PC.i2462
  %5618 = add i64 %5617, 8
  store i64 %5618, i64* %PC.i2462
  %5619 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5619, i64* %RCX.i2463, align 8
  store %struct.Memory* %loadMem_40c222, %struct.Memory** %MEMORY
  %loadMem_40c22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 33
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %PC.i2459 = bitcast %union.anon* %5622 to i64*
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 7
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %RDX.i2460 = bitcast %union.anon* %5625 to i64*
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5627 = getelementptr inbounds %struct.GPR, %struct.GPR* %5626, i32 0, i32 15
  %5628 = getelementptr inbounds %struct.Reg, %struct.Reg* %5627, i32 0, i32 0
  %RBP.i2461 = bitcast %union.anon* %5628 to i64*
  %5629 = load i64, i64* %RBP.i2461
  %5630 = sub i64 %5629, 24
  %5631 = load i64, i64* %PC.i2459
  %5632 = add i64 %5631, 4
  store i64 %5632, i64* %PC.i2459
  %5633 = inttoptr i64 %5630 to i32*
  %5634 = load i32, i32* %5633
  %5635 = sext i32 %5634 to i64
  store i64 %5635, i64* %RDX.i2460, align 8
  store %struct.Memory* %loadMem_40c22a, %struct.Memory** %MEMORY
  %loadMem_40c22e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 33
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %PC.i2455 = bitcast %union.anon* %5638 to i64*
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 1
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %EAX.i2456 = bitcast %union.anon* %5641 to i32*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 5
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RCX.i2457 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 7
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RDX.i2458 = bitcast %union.anon* %5647 to i64*
  %5648 = load i64, i64* %RCX.i2457
  %5649 = load i64, i64* %RDX.i2458
  %5650 = mul i64 %5649, 4
  %5651 = add i64 %5648, 13304
  %5652 = add i64 %5651, %5650
  %5653 = load i32, i32* %EAX.i2456
  %5654 = zext i32 %5653 to i64
  %5655 = load i64, i64* %PC.i2455
  %5656 = add i64 %5655, 7
  store i64 %5656, i64* %PC.i2455
  %5657 = inttoptr i64 %5652 to i32*
  store i32 %5653, i32* %5657
  store %struct.Memory* %loadMem_40c22e, %struct.Memory** %MEMORY
  %loadMem_40c235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 33
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %PC.i2452 = bitcast %union.anon* %5660 to i64*
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5662 = getelementptr inbounds %struct.GPR, %struct.GPR* %5661, i32 0, i32 1
  %5663 = getelementptr inbounds %struct.Reg, %struct.Reg* %5662, i32 0, i32 0
  %RAX.i2453 = bitcast %union.anon* %5663 to i64*
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5665 = getelementptr inbounds %struct.GPR, %struct.GPR* %5664, i32 0, i32 15
  %5666 = getelementptr inbounds %struct.Reg, %struct.Reg* %5665, i32 0, i32 0
  %RBP.i2454 = bitcast %union.anon* %5666 to i64*
  %5667 = load i64, i64* %RBP.i2454
  %5668 = sub i64 %5667, 24
  %5669 = load i64, i64* %PC.i2452
  %5670 = add i64 %5669, 3
  store i64 %5670, i64* %PC.i2452
  %5671 = inttoptr i64 %5668 to i32*
  %5672 = load i32, i32* %5671
  %5673 = zext i32 %5672 to i64
  store i64 %5673, i64* %RAX.i2453, align 8
  store %struct.Memory* %loadMem_40c235, %struct.Memory** %MEMORY
  %loadMem_40c238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5675 = getelementptr inbounds %struct.GPR, %struct.GPR* %5674, i32 0, i32 33
  %5676 = getelementptr inbounds %struct.Reg, %struct.Reg* %5675, i32 0, i32 0
  %PC.i2450 = bitcast %union.anon* %5676 to i64*
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5678 = getelementptr inbounds %struct.GPR, %struct.GPR* %5677, i32 0, i32 1
  %5679 = getelementptr inbounds %struct.Reg, %struct.Reg* %5678, i32 0, i32 0
  %RAX.i2451 = bitcast %union.anon* %5679 to i64*
  %5680 = load i64, i64* %RAX.i2451
  %5681 = load i64, i64* %PC.i2450
  %5682 = add i64 %5681, 3
  store i64 %5682, i64* %PC.i2450
  %5683 = trunc i64 %5680 to i32
  %5684 = add i32 1, %5683
  %5685 = zext i32 %5684 to i64
  store i64 %5685, i64* %RAX.i2451, align 8
  %5686 = icmp ult i32 %5684, %5683
  %5687 = icmp ult i32 %5684, 1
  %5688 = or i1 %5686, %5687
  %5689 = zext i1 %5688 to i8
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5689, i8* %5690, align 1
  %5691 = and i32 %5684, 255
  %5692 = call i32 @llvm.ctpop.i32(i32 %5691)
  %5693 = trunc i32 %5692 to i8
  %5694 = and i8 %5693, 1
  %5695 = xor i8 %5694, 1
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5695, i8* %5696, align 1
  %5697 = xor i64 1, %5680
  %5698 = trunc i64 %5697 to i32
  %5699 = xor i32 %5698, %5684
  %5700 = lshr i32 %5699, 4
  %5701 = trunc i32 %5700 to i8
  %5702 = and i8 %5701, 1
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5702, i8* %5703, align 1
  %5704 = icmp eq i32 %5684, 0
  %5705 = zext i1 %5704 to i8
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5705, i8* %5706, align 1
  %5707 = lshr i32 %5684, 31
  %5708 = trunc i32 %5707 to i8
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5708, i8* %5709, align 1
  %5710 = lshr i32 %5683, 31
  %5711 = xor i32 %5707, %5710
  %5712 = add i32 %5711, %5707
  %5713 = icmp eq i32 %5712, 2
  %5714 = zext i1 %5713 to i8
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5714, i8* %5715, align 1
  store %struct.Memory* %loadMem_40c238, %struct.Memory** %MEMORY
  %loadMem_40c23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 33
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %PC.i2447 = bitcast %union.anon* %5718 to i64*
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5720 = getelementptr inbounds %struct.GPR, %struct.GPR* %5719, i32 0, i32 1
  %5721 = getelementptr inbounds %struct.Reg, %struct.Reg* %5720, i32 0, i32 0
  %EAX.i2448 = bitcast %union.anon* %5721 to i32*
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 15
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %RBP.i2449 = bitcast %union.anon* %5724 to i64*
  %5725 = load i64, i64* %RBP.i2449
  %5726 = sub i64 %5725, 24
  %5727 = load i32, i32* %EAX.i2448
  %5728 = zext i32 %5727 to i64
  %5729 = load i64, i64* %PC.i2447
  %5730 = add i64 %5729, 3
  store i64 %5730, i64* %PC.i2447
  %5731 = inttoptr i64 %5726 to i32*
  store i32 %5727, i32* %5731
  store %struct.Memory* %loadMem_40c23b, %struct.Memory** %MEMORY
  %loadMem_40c23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 33
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %PC.i2446 = bitcast %union.anon* %5734 to i64*
  %5735 = load i64, i64* %PC.i2446
  %5736 = add i64 %5735, -317
  %5737 = load i64, i64* %PC.i2446
  %5738 = add i64 %5737, 5
  store i64 %5738, i64* %PC.i2446
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5736, i64* %5739, align 8
  store %struct.Memory* %loadMem_40c23e, %struct.Memory** %MEMORY
  br label %block_.L_40c101

block_.L_40c243:                                  ; preds = %block_.L_40c101
  %loadMem_40c243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5741 = getelementptr inbounds %struct.GPR, %struct.GPR* %5740, i32 0, i32 33
  %5742 = getelementptr inbounds %struct.Reg, %struct.Reg* %5741, i32 0, i32 0
  %PC.i2444 = bitcast %union.anon* %5742 to i64*
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5744 = getelementptr inbounds %struct.GPR, %struct.GPR* %5743, i32 0, i32 15
  %5745 = getelementptr inbounds %struct.Reg, %struct.Reg* %5744, i32 0, i32 0
  %RBP.i2445 = bitcast %union.anon* %5745 to i64*
  %5746 = load i64, i64* %RBP.i2445
  %5747 = sub i64 %5746, 20
  %5748 = load i64, i64* %PC.i2444
  %5749 = add i64 %5748, 7
  store i64 %5749, i64* %PC.i2444
  %5750 = inttoptr i64 %5747 to i32*
  store i32 0, i32* %5750
  store %struct.Memory* %loadMem_40c243, %struct.Memory** %MEMORY
  br label %block_.L_40c24a

block_.L_40c24a:                                  ; preds = %block_.L_40c312, %block_.L_40c243
  %loadMem_40c24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5752 = getelementptr inbounds %struct.GPR, %struct.GPR* %5751, i32 0, i32 33
  %5753 = getelementptr inbounds %struct.Reg, %struct.Reg* %5752, i32 0, i32 0
  %PC.i2442 = bitcast %union.anon* %5753 to i64*
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 15
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %RBP.i2443 = bitcast %union.anon* %5756 to i64*
  %5757 = load i64, i64* %RBP.i2443
  %5758 = sub i64 %5757, 20
  %5759 = load i64, i64* %PC.i2442
  %5760 = add i64 %5759, 4
  store i64 %5760, i64* %PC.i2442
  %5761 = inttoptr i64 %5758 to i32*
  %5762 = load i32, i32* %5761
  %5763 = sub i32 %5762, 4
  %5764 = icmp ult i32 %5762, 4
  %5765 = zext i1 %5764 to i8
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5765, i8* %5766, align 1
  %5767 = and i32 %5763, 255
  %5768 = call i32 @llvm.ctpop.i32(i32 %5767)
  %5769 = trunc i32 %5768 to i8
  %5770 = and i8 %5769, 1
  %5771 = xor i8 %5770, 1
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5771, i8* %5772, align 1
  %5773 = xor i32 %5762, 4
  %5774 = xor i32 %5773, %5763
  %5775 = lshr i32 %5774, 4
  %5776 = trunc i32 %5775 to i8
  %5777 = and i8 %5776, 1
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5777, i8* %5778, align 1
  %5779 = icmp eq i32 %5763, 0
  %5780 = zext i1 %5779 to i8
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5780, i8* %5781, align 1
  %5782 = lshr i32 %5763, 31
  %5783 = trunc i32 %5782 to i8
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5783, i8* %5784, align 1
  %5785 = lshr i32 %5762, 31
  %5786 = xor i32 %5782, %5785
  %5787 = add i32 %5786, %5785
  %5788 = icmp eq i32 %5787, 2
  %5789 = zext i1 %5788 to i8
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5789, i8* %5790, align 1
  store %struct.Memory* %loadMem_40c24a, %struct.Memory** %MEMORY
  %loadMem_40c24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5792 = getelementptr inbounds %struct.GPR, %struct.GPR* %5791, i32 0, i32 33
  %5793 = getelementptr inbounds %struct.Reg, %struct.Reg* %5792, i32 0, i32 0
  %PC.i2441 = bitcast %union.anon* %5793 to i64*
  %5794 = load i64, i64* %PC.i2441
  %5795 = add i64 %5794, 357
  %5796 = load i64, i64* %PC.i2441
  %5797 = add i64 %5796, 6
  %5798 = load i64, i64* %PC.i2441
  %5799 = add i64 %5798, 6
  store i64 %5799, i64* %PC.i2441
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5801 = load i8, i8* %5800, align 1
  %5802 = icmp ne i8 %5801, 0
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5804 = load i8, i8* %5803, align 1
  %5805 = icmp ne i8 %5804, 0
  %5806 = xor i1 %5802, %5805
  %5807 = xor i1 %5806, true
  %5808 = zext i1 %5807 to i8
  store i8 %5808, i8* %BRANCH_TAKEN, align 1
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5810 = select i1 %5806, i64 %5797, i64 %5795
  store i64 %5810, i64* %5809, align 8
  store %struct.Memory* %loadMem_40c24e, %struct.Memory** %MEMORY
  %loadBr_40c24e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c24e = icmp eq i8 %loadBr_40c24e, 1
  br i1 %cmpBr_40c24e, label %block_.L_40c3b3, label %block_40c254

block_40c254:                                     ; preds = %block_.L_40c24a
  %loadMem_40c254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5812 = getelementptr inbounds %struct.GPR, %struct.GPR* %5811, i32 0, i32 33
  %5813 = getelementptr inbounds %struct.Reg, %struct.Reg* %5812, i32 0, i32 0
  %PC.i2439 = bitcast %union.anon* %5813 to i64*
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 15
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %RBP.i2440 = bitcast %union.anon* %5816 to i64*
  %5817 = load i64, i64* %RBP.i2440
  %5818 = sub i64 %5817, 24
  %5819 = load i64, i64* %PC.i2439
  %5820 = add i64 %5819, 7
  store i64 %5820, i64* %PC.i2439
  %5821 = inttoptr i64 %5818 to i32*
  store i32 0, i32* %5821
  store %struct.Memory* %loadMem_40c254, %struct.Memory** %MEMORY
  br label %block_.L_40c25b

block_.L_40c25b:                                  ; preds = %block_40c265, %block_40c254
  %loadMem_40c25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5823 = getelementptr inbounds %struct.GPR, %struct.GPR* %5822, i32 0, i32 33
  %5824 = getelementptr inbounds %struct.Reg, %struct.Reg* %5823, i32 0, i32 0
  %PC.i2437 = bitcast %union.anon* %5824 to i64*
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 15
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %RBP.i2438 = bitcast %union.anon* %5827 to i64*
  %5828 = load i64, i64* %RBP.i2438
  %5829 = sub i64 %5828, 24
  %5830 = load i64, i64* %PC.i2437
  %5831 = add i64 %5830, 4
  store i64 %5831, i64* %PC.i2437
  %5832 = inttoptr i64 %5829 to i32*
  %5833 = load i32, i32* %5832
  %5834 = sub i32 %5833, 2
  %5835 = icmp ult i32 %5833, 2
  %5836 = zext i1 %5835 to i8
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5836, i8* %5837, align 1
  %5838 = and i32 %5834, 255
  %5839 = call i32 @llvm.ctpop.i32(i32 %5838)
  %5840 = trunc i32 %5839 to i8
  %5841 = and i8 %5840, 1
  %5842 = xor i8 %5841, 1
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5842, i8* %5843, align 1
  %5844 = xor i32 %5833, 2
  %5845 = xor i32 %5844, %5834
  %5846 = lshr i32 %5845, 4
  %5847 = trunc i32 %5846 to i8
  %5848 = and i8 %5847, 1
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5848, i8* %5849, align 1
  %5850 = icmp eq i32 %5834, 0
  %5851 = zext i1 %5850 to i8
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5851, i8* %5852, align 1
  %5853 = lshr i32 %5834, 31
  %5854 = trunc i32 %5853 to i8
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5854, i8* %5855, align 1
  %5856 = lshr i32 %5833, 31
  %5857 = xor i32 %5853, %5856
  %5858 = add i32 %5857, %5856
  %5859 = icmp eq i32 %5858, 2
  %5860 = zext i1 %5859 to i8
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5860, i8* %5861, align 1
  store %struct.Memory* %loadMem_40c25b, %struct.Memory** %MEMORY
  %loadMem_40c25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5863 = getelementptr inbounds %struct.GPR, %struct.GPR* %5862, i32 0, i32 33
  %5864 = getelementptr inbounds %struct.Reg, %struct.Reg* %5863, i32 0, i32 0
  %PC.i2436 = bitcast %union.anon* %5864 to i64*
  %5865 = load i64, i64* %PC.i2436
  %5866 = add i64 %5865, 179
  %5867 = load i64, i64* %PC.i2436
  %5868 = add i64 %5867, 6
  %5869 = load i64, i64* %PC.i2436
  %5870 = add i64 %5869, 6
  store i64 %5870, i64* %PC.i2436
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5872 = load i8, i8* %5871, align 1
  %5873 = icmp ne i8 %5872, 0
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5875 = load i8, i8* %5874, align 1
  %5876 = icmp ne i8 %5875, 0
  %5877 = xor i1 %5873, %5876
  %5878 = xor i1 %5877, true
  %5879 = zext i1 %5878 to i8
  store i8 %5879, i8* %BRANCH_TAKEN, align 1
  %5880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5881 = select i1 %5877, i64 %5868, i64 %5866
  store i64 %5881, i64* %5880, align 8
  store %struct.Memory* %loadMem_40c25f, %struct.Memory** %MEMORY
  %loadBr_40c25f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c25f = icmp eq i8 %loadBr_40c25f, 1
  br i1 %cmpBr_40c25f, label %block_.L_40c312, label %block_40c265

block_40c265:                                     ; preds = %block_.L_40c25b
  %loadMem_40c265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5883 = getelementptr inbounds %struct.GPR, %struct.GPR* %5882, i32 0, i32 33
  %5884 = getelementptr inbounds %struct.Reg, %struct.Reg* %5883, i32 0, i32 0
  %PC.i2434 = bitcast %union.anon* %5884 to i64*
  %5885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5886 = getelementptr inbounds %struct.GPR, %struct.GPR* %5885, i32 0, i32 1
  %5887 = getelementptr inbounds %struct.Reg, %struct.Reg* %5886, i32 0, i32 0
  %RAX.i2435 = bitcast %union.anon* %5887 to i64*
  %5888 = load i64, i64* %PC.i2434
  %5889 = add i64 %5888, 5
  store i64 %5889, i64* %PC.i2434
  store i64 3, i64* %RAX.i2435, align 8
  store %struct.Memory* %loadMem_40c265, %struct.Memory** %MEMORY
  %loadMem_40c26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5891 = getelementptr inbounds %struct.GPR, %struct.GPR* %5890, i32 0, i32 33
  %5892 = getelementptr inbounds %struct.Reg, %struct.Reg* %5891, i32 0, i32 0
  %PC.i2431 = bitcast %union.anon* %5892 to i64*
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 1
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %RAX.i2432 = bitcast %union.anon* %5895 to i64*
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5897 = getelementptr inbounds %struct.GPR, %struct.GPR* %5896, i32 0, i32 15
  %5898 = getelementptr inbounds %struct.Reg, %struct.Reg* %5897, i32 0, i32 0
  %RBP.i2433 = bitcast %union.anon* %5898 to i64*
  %5899 = load i64, i64* %RAX.i2432
  %5900 = load i64, i64* %RBP.i2433
  %5901 = sub i64 %5900, 24
  %5902 = load i64, i64* %PC.i2431
  %5903 = add i64 %5902, 3
  store i64 %5903, i64* %PC.i2431
  %5904 = trunc i64 %5899 to i32
  %5905 = inttoptr i64 %5901 to i32*
  %5906 = load i32, i32* %5905
  %5907 = sub i32 %5904, %5906
  %5908 = zext i32 %5907 to i64
  store i64 %5908, i64* %RAX.i2432, align 8
  %5909 = icmp ult i32 %5904, %5906
  %5910 = zext i1 %5909 to i8
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5910, i8* %5911, align 1
  %5912 = and i32 %5907, 255
  %5913 = call i32 @llvm.ctpop.i32(i32 %5912)
  %5914 = trunc i32 %5913 to i8
  %5915 = and i8 %5914, 1
  %5916 = xor i8 %5915, 1
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5916, i8* %5917, align 1
  %5918 = xor i32 %5906, %5904
  %5919 = xor i32 %5918, %5907
  %5920 = lshr i32 %5919, 4
  %5921 = trunc i32 %5920 to i8
  %5922 = and i8 %5921, 1
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5922, i8* %5923, align 1
  %5924 = icmp eq i32 %5907, 0
  %5925 = zext i1 %5924 to i8
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5925, i8* %5926, align 1
  %5927 = lshr i32 %5907, 31
  %5928 = trunc i32 %5927 to i8
  %5929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5928, i8* %5929, align 1
  %5930 = lshr i32 %5904, 31
  %5931 = lshr i32 %5906, 31
  %5932 = xor i32 %5931, %5930
  %5933 = xor i32 %5927, %5930
  %5934 = add i32 %5933, %5932
  %5935 = icmp eq i32 %5934, 2
  %5936 = zext i1 %5935 to i8
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5936, i8* %5937, align 1
  store %struct.Memory* %loadMem_40c26a, %struct.Memory** %MEMORY
  %loadMem_40c26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 33
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %PC.i2428 = bitcast %union.anon* %5940 to i64*
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5942 = getelementptr inbounds %struct.GPR, %struct.GPR* %5941, i32 0, i32 1
  %5943 = getelementptr inbounds %struct.Reg, %struct.Reg* %5942, i32 0, i32 0
  %EAX.i2429 = bitcast %union.anon* %5943 to i32*
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5945 = getelementptr inbounds %struct.GPR, %struct.GPR* %5944, i32 0, i32 15
  %5946 = getelementptr inbounds %struct.Reg, %struct.Reg* %5945, i32 0, i32 0
  %RBP.i2430 = bitcast %union.anon* %5946 to i64*
  %5947 = load i64, i64* %RBP.i2430
  %5948 = sub i64 %5947, 32
  %5949 = load i32, i32* %EAX.i2429
  %5950 = zext i32 %5949 to i64
  %5951 = load i64, i64* %PC.i2428
  %5952 = add i64 %5951, 3
  store i64 %5952, i64* %PC.i2428
  %5953 = inttoptr i64 %5948 to i32*
  store i32 %5949, i32* %5953
  store %struct.Memory* %loadMem_40c26d, %struct.Memory** %MEMORY
  %loadMem_40c270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5955 = getelementptr inbounds %struct.GPR, %struct.GPR* %5954, i32 0, i32 33
  %5956 = getelementptr inbounds %struct.Reg, %struct.Reg* %5955, i32 0, i32 0
  %PC.i2426 = bitcast %union.anon* %5956 to i64*
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5958 = getelementptr inbounds %struct.GPR, %struct.GPR* %5957, i32 0, i32 5
  %5959 = getelementptr inbounds %struct.Reg, %struct.Reg* %5958, i32 0, i32 0
  %RCX.i2427 = bitcast %union.anon* %5959 to i64*
  %5960 = load i64, i64* %PC.i2426
  %5961 = add i64 %5960, 8
  store i64 %5961, i64* %PC.i2426
  %5962 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5962, i64* %RCX.i2427, align 8
  store %struct.Memory* %loadMem_40c270, %struct.Memory** %MEMORY
  %loadMem_40c278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5964 = getelementptr inbounds %struct.GPR, %struct.GPR* %5963, i32 0, i32 33
  %5965 = getelementptr inbounds %struct.Reg, %struct.Reg* %5964, i32 0, i32 0
  %PC.i2424 = bitcast %union.anon* %5965 to i64*
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5967 = getelementptr inbounds %struct.GPR, %struct.GPR* %5966, i32 0, i32 5
  %5968 = getelementptr inbounds %struct.Reg, %struct.Reg* %5967, i32 0, i32 0
  %RCX.i2425 = bitcast %union.anon* %5968 to i64*
  %5969 = load i64, i64* %RCX.i2425
  %5970 = load i64, i64* %PC.i2424
  %5971 = add i64 %5970, 7
  store i64 %5971, i64* %PC.i2424
  %5972 = add i64 13112, %5969
  store i64 %5972, i64* %RCX.i2425, align 8
  %5973 = icmp ult i64 %5972, %5969
  %5974 = icmp ult i64 %5972, 13112
  %5975 = or i1 %5973, %5974
  %5976 = zext i1 %5975 to i8
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5976, i8* %5977, align 1
  %5978 = trunc i64 %5972 to i32
  %5979 = and i32 %5978, 255
  %5980 = call i32 @llvm.ctpop.i32(i32 %5979)
  %5981 = trunc i32 %5980 to i8
  %5982 = and i8 %5981, 1
  %5983 = xor i8 %5982, 1
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5983, i8* %5984, align 1
  %5985 = xor i64 13112, %5969
  %5986 = xor i64 %5985, %5972
  %5987 = lshr i64 %5986, 4
  %5988 = trunc i64 %5987 to i8
  %5989 = and i8 %5988, 1
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5989, i8* %5990, align 1
  %5991 = icmp eq i64 %5972, 0
  %5992 = zext i1 %5991 to i8
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5992, i8* %5993, align 1
  %5994 = lshr i64 %5972, 63
  %5995 = trunc i64 %5994 to i8
  %5996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5995, i8* %5996, align 1
  %5997 = lshr i64 %5969, 63
  %5998 = xor i64 %5994, %5997
  %5999 = add i64 %5998, %5994
  %6000 = icmp eq i64 %5999, 2
  %6001 = zext i1 %6000 to i8
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6001, i8* %6002, align 1
  store %struct.Memory* %loadMem_40c278, %struct.Memory** %MEMORY
  %loadMem_40c27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6004 = getelementptr inbounds %struct.GPR, %struct.GPR* %6003, i32 0, i32 33
  %6005 = getelementptr inbounds %struct.Reg, %struct.Reg* %6004, i32 0, i32 0
  %PC.i2421 = bitcast %union.anon* %6005 to i64*
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6007 = getelementptr inbounds %struct.GPR, %struct.GPR* %6006, i32 0, i32 7
  %6008 = getelementptr inbounds %struct.Reg, %struct.Reg* %6007, i32 0, i32 0
  %RDX.i2422 = bitcast %union.anon* %6008 to i64*
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6010 = getelementptr inbounds %struct.GPR, %struct.GPR* %6009, i32 0, i32 15
  %6011 = getelementptr inbounds %struct.Reg, %struct.Reg* %6010, i32 0, i32 0
  %RBP.i2423 = bitcast %union.anon* %6011 to i64*
  %6012 = load i64, i64* %RBP.i2423
  %6013 = sub i64 %6012, 20
  %6014 = load i64, i64* %PC.i2421
  %6015 = add i64 %6014, 4
  store i64 %6015, i64* %PC.i2421
  %6016 = inttoptr i64 %6013 to i32*
  %6017 = load i32, i32* %6016
  %6018 = sext i32 %6017 to i64
  store i64 %6018, i64* %RDX.i2422, align 8
  store %struct.Memory* %loadMem_40c27f, %struct.Memory** %MEMORY
  %loadMem_40c283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6020 = getelementptr inbounds %struct.GPR, %struct.GPR* %6019, i32 0, i32 33
  %6021 = getelementptr inbounds %struct.Reg, %struct.Reg* %6020, i32 0, i32 0
  %PC.i2419 = bitcast %union.anon* %6021 to i64*
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6023 = getelementptr inbounds %struct.GPR, %struct.GPR* %6022, i32 0, i32 7
  %6024 = getelementptr inbounds %struct.Reg, %struct.Reg* %6023, i32 0, i32 0
  %RDX.i2420 = bitcast %union.anon* %6024 to i64*
  %6025 = load i64, i64* %RDX.i2420
  %6026 = load i64, i64* %PC.i2419
  %6027 = add i64 %6026, 4
  store i64 %6027, i64* %PC.i2419
  %6028 = shl i64 %6025, 5
  %6029 = icmp slt i64 %6028, 0
  %6030 = shl i64 %6028, 1
  store i64 %6030, i64* %RDX.i2420, align 8
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6032 = zext i1 %6029 to i8
  store i8 %6032, i8* %6031, align 1
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6034 = trunc i64 %6030 to i32
  %6035 = and i32 %6034, 254
  %6036 = call i32 @llvm.ctpop.i32(i32 %6035)
  %6037 = trunc i32 %6036 to i8
  %6038 = and i8 %6037, 1
  %6039 = xor i8 %6038, 1
  store i8 %6039, i8* %6033, align 1
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6040, align 1
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6042 = icmp eq i64 %6030, 0
  %6043 = zext i1 %6042 to i8
  store i8 %6043, i8* %6041, align 1
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6045 = lshr i64 %6030, 63
  %6046 = trunc i64 %6045 to i8
  store i8 %6046, i8* %6044, align 1
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6047, align 1
  store %struct.Memory* %loadMem_40c283, %struct.Memory** %MEMORY
  %loadMem_40c287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6049 = getelementptr inbounds %struct.GPR, %struct.GPR* %6048, i32 0, i32 33
  %6050 = getelementptr inbounds %struct.Reg, %struct.Reg* %6049, i32 0, i32 0
  %PC.i2416 = bitcast %union.anon* %6050 to i64*
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6052 = getelementptr inbounds %struct.GPR, %struct.GPR* %6051, i32 0, i32 5
  %6053 = getelementptr inbounds %struct.Reg, %struct.Reg* %6052, i32 0, i32 0
  %RCX.i2417 = bitcast %union.anon* %6053 to i64*
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 7
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %RDX.i2418 = bitcast %union.anon* %6056 to i64*
  %6057 = load i64, i64* %RCX.i2417
  %6058 = load i64, i64* %RDX.i2418
  %6059 = load i64, i64* %PC.i2416
  %6060 = add i64 %6059, 3
  store i64 %6060, i64* %PC.i2416
  %6061 = add i64 %6058, %6057
  store i64 %6061, i64* %RCX.i2417, align 8
  %6062 = icmp ult i64 %6061, %6057
  %6063 = icmp ult i64 %6061, %6058
  %6064 = or i1 %6062, %6063
  %6065 = zext i1 %6064 to i8
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6065, i8* %6066, align 1
  %6067 = trunc i64 %6061 to i32
  %6068 = and i32 %6067, 255
  %6069 = call i32 @llvm.ctpop.i32(i32 %6068)
  %6070 = trunc i32 %6069 to i8
  %6071 = and i8 %6070, 1
  %6072 = xor i8 %6071, 1
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6072, i8* %6073, align 1
  %6074 = xor i64 %6058, %6057
  %6075 = xor i64 %6074, %6061
  %6076 = lshr i64 %6075, 4
  %6077 = trunc i64 %6076 to i8
  %6078 = and i8 %6077, 1
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6078, i8* %6079, align 1
  %6080 = icmp eq i64 %6061, 0
  %6081 = zext i1 %6080 to i8
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6081, i8* %6082, align 1
  %6083 = lshr i64 %6061, 63
  %6084 = trunc i64 %6083 to i8
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6084, i8* %6085, align 1
  %6086 = lshr i64 %6057, 63
  %6087 = lshr i64 %6058, 63
  %6088 = xor i64 %6083, %6086
  %6089 = xor i64 %6083, %6087
  %6090 = add i64 %6088, %6089
  %6091 = icmp eq i64 %6090, 2
  %6092 = zext i1 %6091 to i8
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6092, i8* %6093, align 1
  store %struct.Memory* %loadMem_40c287, %struct.Memory** %MEMORY
  %loadMem_40c28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6095 = getelementptr inbounds %struct.GPR, %struct.GPR* %6094, i32 0, i32 33
  %6096 = getelementptr inbounds %struct.Reg, %struct.Reg* %6095, i32 0, i32 0
  %PC.i2413 = bitcast %union.anon* %6096 to i64*
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6098 = getelementptr inbounds %struct.GPR, %struct.GPR* %6097, i32 0, i32 7
  %6099 = getelementptr inbounds %struct.Reg, %struct.Reg* %6098, i32 0, i32 0
  %RDX.i2414 = bitcast %union.anon* %6099 to i64*
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6101 = getelementptr inbounds %struct.GPR, %struct.GPR* %6100, i32 0, i32 15
  %6102 = getelementptr inbounds %struct.Reg, %struct.Reg* %6101, i32 0, i32 0
  %RBP.i2415 = bitcast %union.anon* %6102 to i64*
  %6103 = load i64, i64* %RBP.i2415
  %6104 = sub i64 %6103, 24
  %6105 = load i64, i64* %PC.i2413
  %6106 = add i64 %6105, 4
  store i64 %6106, i64* %PC.i2413
  %6107 = inttoptr i64 %6104 to i32*
  %6108 = load i32, i32* %6107
  %6109 = sext i32 %6108 to i64
  store i64 %6109, i64* %RDX.i2414, align 8
  store %struct.Memory* %loadMem_40c28a, %struct.Memory** %MEMORY
  %loadMem_40c28e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6111 = getelementptr inbounds %struct.GPR, %struct.GPR* %6110, i32 0, i32 33
  %6112 = getelementptr inbounds %struct.Reg, %struct.Reg* %6111, i32 0, i32 0
  %PC.i2409 = bitcast %union.anon* %6112 to i64*
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6114 = getelementptr inbounds %struct.GPR, %struct.GPR* %6113, i32 0, i32 1
  %6115 = getelementptr inbounds %struct.Reg, %struct.Reg* %6114, i32 0, i32 0
  %RAX.i2410 = bitcast %union.anon* %6115 to i64*
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6117 = getelementptr inbounds %struct.GPR, %struct.GPR* %6116, i32 0, i32 5
  %6118 = getelementptr inbounds %struct.Reg, %struct.Reg* %6117, i32 0, i32 0
  %RCX.i2411 = bitcast %union.anon* %6118 to i64*
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 7
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %RDX.i2412 = bitcast %union.anon* %6121 to i64*
  %6122 = load i64, i64* %RCX.i2411
  %6123 = load i64, i64* %RDX.i2412
  %6124 = mul i64 %6123, 4
  %6125 = add i64 %6124, %6122
  %6126 = load i64, i64* %PC.i2409
  %6127 = add i64 %6126, 3
  store i64 %6127, i64* %PC.i2409
  %6128 = inttoptr i64 %6125 to i32*
  %6129 = load i32, i32* %6128
  %6130 = zext i32 %6129 to i64
  store i64 %6130, i64* %RAX.i2410, align 8
  store %struct.Memory* %loadMem_40c28e, %struct.Memory** %MEMORY
  %loadMem_40c291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6132 = getelementptr inbounds %struct.GPR, %struct.GPR* %6131, i32 0, i32 33
  %6133 = getelementptr inbounds %struct.Reg, %struct.Reg* %6132, i32 0, i32 0
  %PC.i2407 = bitcast %union.anon* %6133 to i64*
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 5
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %RCX.i2408 = bitcast %union.anon* %6136 to i64*
  %6137 = load i64, i64* %PC.i2407
  %6138 = add i64 %6137, 8
  store i64 %6138, i64* %PC.i2407
  %6139 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6139, i64* %RCX.i2408, align 8
  store %struct.Memory* %loadMem_40c291, %struct.Memory** %MEMORY
  %loadMem_40c299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6141 = getelementptr inbounds %struct.GPR, %struct.GPR* %6140, i32 0, i32 33
  %6142 = getelementptr inbounds %struct.Reg, %struct.Reg* %6141, i32 0, i32 0
  %PC.i2405 = bitcast %union.anon* %6142 to i64*
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6144 = getelementptr inbounds %struct.GPR, %struct.GPR* %6143, i32 0, i32 5
  %6145 = getelementptr inbounds %struct.Reg, %struct.Reg* %6144, i32 0, i32 0
  %RCX.i2406 = bitcast %union.anon* %6145 to i64*
  %6146 = load i64, i64* %RCX.i2406
  %6147 = load i64, i64* %PC.i2405
  %6148 = add i64 %6147, 7
  store i64 %6148, i64* %PC.i2405
  %6149 = add i64 13112, %6146
  store i64 %6149, i64* %RCX.i2406, align 8
  %6150 = icmp ult i64 %6149, %6146
  %6151 = icmp ult i64 %6149, 13112
  %6152 = or i1 %6150, %6151
  %6153 = zext i1 %6152 to i8
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6153, i8* %6154, align 1
  %6155 = trunc i64 %6149 to i32
  %6156 = and i32 %6155, 255
  %6157 = call i32 @llvm.ctpop.i32(i32 %6156)
  %6158 = trunc i32 %6157 to i8
  %6159 = and i8 %6158, 1
  %6160 = xor i8 %6159, 1
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6160, i8* %6161, align 1
  %6162 = xor i64 13112, %6146
  %6163 = xor i64 %6162, %6149
  %6164 = lshr i64 %6163, 4
  %6165 = trunc i64 %6164 to i8
  %6166 = and i8 %6165, 1
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6166, i8* %6167, align 1
  %6168 = icmp eq i64 %6149, 0
  %6169 = zext i1 %6168 to i8
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6169, i8* %6170, align 1
  %6171 = lshr i64 %6149, 63
  %6172 = trunc i64 %6171 to i8
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6172, i8* %6173, align 1
  %6174 = lshr i64 %6146, 63
  %6175 = xor i64 %6171, %6174
  %6176 = add i64 %6175, %6171
  %6177 = icmp eq i64 %6176, 2
  %6178 = zext i1 %6177 to i8
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6178, i8* %6179, align 1
  store %struct.Memory* %loadMem_40c299, %struct.Memory** %MEMORY
  %loadMem_40c2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 33
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %PC.i2402 = bitcast %union.anon* %6182 to i64*
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 7
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %RDX.i2403 = bitcast %union.anon* %6185 to i64*
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6187 = getelementptr inbounds %struct.GPR, %struct.GPR* %6186, i32 0, i32 15
  %6188 = getelementptr inbounds %struct.Reg, %struct.Reg* %6187, i32 0, i32 0
  %RBP.i2404 = bitcast %union.anon* %6188 to i64*
  %6189 = load i64, i64* %RBP.i2404
  %6190 = sub i64 %6189, 20
  %6191 = load i64, i64* %PC.i2402
  %6192 = add i64 %6191, 4
  store i64 %6192, i64* %PC.i2402
  %6193 = inttoptr i64 %6190 to i32*
  %6194 = load i32, i32* %6193
  %6195 = sext i32 %6194 to i64
  store i64 %6195, i64* %RDX.i2403, align 8
  store %struct.Memory* %loadMem_40c2a0, %struct.Memory** %MEMORY
  %loadMem_40c2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6197 = getelementptr inbounds %struct.GPR, %struct.GPR* %6196, i32 0, i32 33
  %6198 = getelementptr inbounds %struct.Reg, %struct.Reg* %6197, i32 0, i32 0
  %PC.i2400 = bitcast %union.anon* %6198 to i64*
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6200 = getelementptr inbounds %struct.GPR, %struct.GPR* %6199, i32 0, i32 7
  %6201 = getelementptr inbounds %struct.Reg, %struct.Reg* %6200, i32 0, i32 0
  %RDX.i2401 = bitcast %union.anon* %6201 to i64*
  %6202 = load i64, i64* %RDX.i2401
  %6203 = load i64, i64* %PC.i2400
  %6204 = add i64 %6203, 4
  store i64 %6204, i64* %PC.i2400
  %6205 = shl i64 %6202, 5
  %6206 = icmp slt i64 %6205, 0
  %6207 = shl i64 %6205, 1
  store i64 %6207, i64* %RDX.i2401, align 8
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6209 = zext i1 %6206 to i8
  store i8 %6209, i8* %6208, align 1
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6211 = trunc i64 %6207 to i32
  %6212 = and i32 %6211, 254
  %6213 = call i32 @llvm.ctpop.i32(i32 %6212)
  %6214 = trunc i32 %6213 to i8
  %6215 = and i8 %6214, 1
  %6216 = xor i8 %6215, 1
  store i8 %6216, i8* %6210, align 1
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6217, align 1
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6219 = icmp eq i64 %6207, 0
  %6220 = zext i1 %6219 to i8
  store i8 %6220, i8* %6218, align 1
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6222 = lshr i64 %6207, 63
  %6223 = trunc i64 %6222 to i8
  store i8 %6223, i8* %6221, align 1
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6224, align 1
  store %struct.Memory* %loadMem_40c2a4, %struct.Memory** %MEMORY
  %loadMem_40c2a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6226 = getelementptr inbounds %struct.GPR, %struct.GPR* %6225, i32 0, i32 33
  %6227 = getelementptr inbounds %struct.Reg, %struct.Reg* %6226, i32 0, i32 0
  %PC.i2397 = bitcast %union.anon* %6227 to i64*
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 5
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %RCX.i2398 = bitcast %union.anon* %6230 to i64*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 7
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %RDX.i2399 = bitcast %union.anon* %6233 to i64*
  %6234 = load i64, i64* %RCX.i2398
  %6235 = load i64, i64* %RDX.i2399
  %6236 = load i64, i64* %PC.i2397
  %6237 = add i64 %6236, 3
  store i64 %6237, i64* %PC.i2397
  %6238 = add i64 %6235, %6234
  store i64 %6238, i64* %RCX.i2398, align 8
  %6239 = icmp ult i64 %6238, %6234
  %6240 = icmp ult i64 %6238, %6235
  %6241 = or i1 %6239, %6240
  %6242 = zext i1 %6241 to i8
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6242, i8* %6243, align 1
  %6244 = trunc i64 %6238 to i32
  %6245 = and i32 %6244, 255
  %6246 = call i32 @llvm.ctpop.i32(i32 %6245)
  %6247 = trunc i32 %6246 to i8
  %6248 = and i8 %6247, 1
  %6249 = xor i8 %6248, 1
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6249, i8* %6250, align 1
  %6251 = xor i64 %6235, %6234
  %6252 = xor i64 %6251, %6238
  %6253 = lshr i64 %6252, 4
  %6254 = trunc i64 %6253 to i8
  %6255 = and i8 %6254, 1
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6255, i8* %6256, align 1
  %6257 = icmp eq i64 %6238, 0
  %6258 = zext i1 %6257 to i8
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6258, i8* %6259, align 1
  %6260 = lshr i64 %6238, 63
  %6261 = trunc i64 %6260 to i8
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6261, i8* %6262, align 1
  %6263 = lshr i64 %6234, 63
  %6264 = lshr i64 %6235, 63
  %6265 = xor i64 %6260, %6263
  %6266 = xor i64 %6260, %6264
  %6267 = add i64 %6265, %6266
  %6268 = icmp eq i64 %6267, 2
  %6269 = zext i1 %6268 to i8
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6269, i8* %6270, align 1
  store %struct.Memory* %loadMem_40c2a8, %struct.Memory** %MEMORY
  %loadMem_40c2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 33
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %PC.i2394 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 7
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RDX.i2395 = bitcast %union.anon* %6276 to i64*
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 15
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %RBP.i2396 = bitcast %union.anon* %6279 to i64*
  %6280 = load i64, i64* %RBP.i2396
  %6281 = sub i64 %6280, 32
  %6282 = load i64, i64* %PC.i2394
  %6283 = add i64 %6282, 4
  store i64 %6283, i64* %PC.i2394
  %6284 = inttoptr i64 %6281 to i32*
  %6285 = load i32, i32* %6284
  %6286 = sext i32 %6285 to i64
  store i64 %6286, i64* %RDX.i2395, align 8
  store %struct.Memory* %loadMem_40c2ab, %struct.Memory** %MEMORY
  %loadMem_40c2af = load %struct.Memory*, %struct.Memory** %MEMORY
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 33
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %PC.i2390 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 1
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %RAX.i2391 = bitcast %union.anon* %6292 to i64*
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6294 = getelementptr inbounds %struct.GPR, %struct.GPR* %6293, i32 0, i32 5
  %6295 = getelementptr inbounds %struct.Reg, %struct.Reg* %6294, i32 0, i32 0
  %RCX.i2392 = bitcast %union.anon* %6295 to i64*
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 7
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %RDX.i2393 = bitcast %union.anon* %6298 to i64*
  %6299 = load i64, i64* %RAX.i2391
  %6300 = load i64, i64* %RCX.i2392
  %6301 = load i64, i64* %RDX.i2393
  %6302 = mul i64 %6301, 4
  %6303 = add i64 %6302, %6300
  %6304 = load i64, i64* %PC.i2390
  %6305 = add i64 %6304, 3
  store i64 %6305, i64* %PC.i2390
  %6306 = trunc i64 %6299 to i32
  %6307 = inttoptr i64 %6303 to i32*
  %6308 = load i32, i32* %6307
  %6309 = add i32 %6308, %6306
  %6310 = zext i32 %6309 to i64
  store i64 %6310, i64* %RAX.i2391, align 8
  %6311 = icmp ult i32 %6309, %6306
  %6312 = icmp ult i32 %6309, %6308
  %6313 = or i1 %6311, %6312
  %6314 = zext i1 %6313 to i8
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6314, i8* %6315, align 1
  %6316 = and i32 %6309, 255
  %6317 = call i32 @llvm.ctpop.i32(i32 %6316)
  %6318 = trunc i32 %6317 to i8
  %6319 = and i8 %6318, 1
  %6320 = xor i8 %6319, 1
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6320, i8* %6321, align 1
  %6322 = xor i32 %6308, %6306
  %6323 = xor i32 %6322, %6309
  %6324 = lshr i32 %6323, 4
  %6325 = trunc i32 %6324 to i8
  %6326 = and i8 %6325, 1
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6326, i8* %6327, align 1
  %6328 = icmp eq i32 %6309, 0
  %6329 = zext i1 %6328 to i8
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6329, i8* %6330, align 1
  %6331 = lshr i32 %6309, 31
  %6332 = trunc i32 %6331 to i8
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6332, i8* %6333, align 1
  %6334 = lshr i32 %6306, 31
  %6335 = lshr i32 %6308, 31
  %6336 = xor i32 %6331, %6334
  %6337 = xor i32 %6331, %6335
  %6338 = add i32 %6336, %6337
  %6339 = icmp eq i32 %6338, 2
  %6340 = zext i1 %6339 to i8
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6340, i8* %6341, align 1
  store %struct.Memory* %loadMem_40c2af, %struct.Memory** %MEMORY
  %loadMem_40c2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6343 = getelementptr inbounds %struct.GPR, %struct.GPR* %6342, i32 0, i32 33
  %6344 = getelementptr inbounds %struct.Reg, %struct.Reg* %6343, i32 0, i32 0
  %PC.i2387 = bitcast %union.anon* %6344 to i64*
  %6345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6346 = getelementptr inbounds %struct.GPR, %struct.GPR* %6345, i32 0, i32 5
  %6347 = getelementptr inbounds %struct.Reg, %struct.Reg* %6346, i32 0, i32 0
  %RCX.i2388 = bitcast %union.anon* %6347 to i64*
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6349 = getelementptr inbounds %struct.GPR, %struct.GPR* %6348, i32 0, i32 15
  %6350 = getelementptr inbounds %struct.Reg, %struct.Reg* %6349, i32 0, i32 0
  %RBP.i2389 = bitcast %union.anon* %6350 to i64*
  %6351 = load i64, i64* %RBP.i2389
  %6352 = sub i64 %6351, 24
  %6353 = load i64, i64* %PC.i2387
  %6354 = add i64 %6353, 4
  store i64 %6354, i64* %PC.i2387
  %6355 = inttoptr i64 %6352 to i32*
  %6356 = load i32, i32* %6355
  %6357 = sext i32 %6356 to i64
  store i64 %6357, i64* %RCX.i2388, align 8
  store %struct.Memory* %loadMem_40c2b2, %struct.Memory** %MEMORY
  %loadMem_40c2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6359 = getelementptr inbounds %struct.GPR, %struct.GPR* %6358, i32 0, i32 33
  %6360 = getelementptr inbounds %struct.Reg, %struct.Reg* %6359, i32 0, i32 0
  %PC.i2383 = bitcast %union.anon* %6360 to i64*
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6362 = getelementptr inbounds %struct.GPR, %struct.GPR* %6361, i32 0, i32 1
  %6363 = getelementptr inbounds %struct.Reg, %struct.Reg* %6362, i32 0, i32 0
  %EAX.i2384 = bitcast %union.anon* %6363 to i32*
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6365 = getelementptr inbounds %struct.GPR, %struct.GPR* %6364, i32 0, i32 5
  %6366 = getelementptr inbounds %struct.Reg, %struct.Reg* %6365, i32 0, i32 0
  %RCX.i2385 = bitcast %union.anon* %6366 to i64*
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 15
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %RBP.i2386 = bitcast %union.anon* %6369 to i64*
  %6370 = load i64, i64* %RBP.i2386
  %6371 = load i64, i64* %RCX.i2385
  %6372 = mul i64 %6371, 4
  %6373 = add i64 %6370, -64
  %6374 = add i64 %6373, %6372
  %6375 = load i32, i32* %EAX.i2384
  %6376 = zext i32 %6375 to i64
  %6377 = load i64, i64* %PC.i2383
  %6378 = add i64 %6377, 4
  store i64 %6378, i64* %PC.i2383
  %6379 = inttoptr i64 %6374 to i32*
  store i32 %6375, i32* %6379
  store %struct.Memory* %loadMem_40c2b6, %struct.Memory** %MEMORY
  %loadMem_40c2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6381 = getelementptr inbounds %struct.GPR, %struct.GPR* %6380, i32 0, i32 33
  %6382 = getelementptr inbounds %struct.Reg, %struct.Reg* %6381, i32 0, i32 0
  %PC.i2381 = bitcast %union.anon* %6382 to i64*
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 5
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %RCX.i2382 = bitcast %union.anon* %6385 to i64*
  %6386 = load i64, i64* %PC.i2381
  %6387 = add i64 %6386, 8
  store i64 %6387, i64* %PC.i2381
  %6388 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6388, i64* %RCX.i2382, align 8
  store %struct.Memory* %loadMem_40c2ba, %struct.Memory** %MEMORY
  %loadMem_40c2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 33
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %PC.i2379 = bitcast %union.anon* %6391 to i64*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 5
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %RCX.i2380 = bitcast %union.anon* %6394 to i64*
  %6395 = load i64, i64* %RCX.i2380
  %6396 = load i64, i64* %PC.i2379
  %6397 = add i64 %6396, 7
  store i64 %6397, i64* %PC.i2379
  %6398 = add i64 13112, %6395
  store i64 %6398, i64* %RCX.i2380, align 8
  %6399 = icmp ult i64 %6398, %6395
  %6400 = icmp ult i64 %6398, 13112
  %6401 = or i1 %6399, %6400
  %6402 = zext i1 %6401 to i8
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6402, i8* %6403, align 1
  %6404 = trunc i64 %6398 to i32
  %6405 = and i32 %6404, 255
  %6406 = call i32 @llvm.ctpop.i32(i32 %6405)
  %6407 = trunc i32 %6406 to i8
  %6408 = and i8 %6407, 1
  %6409 = xor i8 %6408, 1
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6409, i8* %6410, align 1
  %6411 = xor i64 13112, %6395
  %6412 = xor i64 %6411, %6398
  %6413 = lshr i64 %6412, 4
  %6414 = trunc i64 %6413 to i8
  %6415 = and i8 %6414, 1
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6415, i8* %6416, align 1
  %6417 = icmp eq i64 %6398, 0
  %6418 = zext i1 %6417 to i8
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6418, i8* %6419, align 1
  %6420 = lshr i64 %6398, 63
  %6421 = trunc i64 %6420 to i8
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6421, i8* %6422, align 1
  %6423 = lshr i64 %6395, 63
  %6424 = xor i64 %6420, %6423
  %6425 = add i64 %6424, %6420
  %6426 = icmp eq i64 %6425, 2
  %6427 = zext i1 %6426 to i8
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6427, i8* %6428, align 1
  store %struct.Memory* %loadMem_40c2c2, %struct.Memory** %MEMORY
  %loadMem_40c2c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 33
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %PC.i2376 = bitcast %union.anon* %6431 to i64*
  %6432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6433 = getelementptr inbounds %struct.GPR, %struct.GPR* %6432, i32 0, i32 7
  %6434 = getelementptr inbounds %struct.Reg, %struct.Reg* %6433, i32 0, i32 0
  %RDX.i2377 = bitcast %union.anon* %6434 to i64*
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6436 = getelementptr inbounds %struct.GPR, %struct.GPR* %6435, i32 0, i32 15
  %6437 = getelementptr inbounds %struct.Reg, %struct.Reg* %6436, i32 0, i32 0
  %RBP.i2378 = bitcast %union.anon* %6437 to i64*
  %6438 = load i64, i64* %RBP.i2378
  %6439 = sub i64 %6438, 20
  %6440 = load i64, i64* %PC.i2376
  %6441 = add i64 %6440, 4
  store i64 %6441, i64* %PC.i2376
  %6442 = inttoptr i64 %6439 to i32*
  %6443 = load i32, i32* %6442
  %6444 = sext i32 %6443 to i64
  store i64 %6444, i64* %RDX.i2377, align 8
  store %struct.Memory* %loadMem_40c2c9, %struct.Memory** %MEMORY
  %loadMem_40c2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6446 = getelementptr inbounds %struct.GPR, %struct.GPR* %6445, i32 0, i32 33
  %6447 = getelementptr inbounds %struct.Reg, %struct.Reg* %6446, i32 0, i32 0
  %PC.i2374 = bitcast %union.anon* %6447 to i64*
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 7
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %RDX.i2375 = bitcast %union.anon* %6450 to i64*
  %6451 = load i64, i64* %RDX.i2375
  %6452 = load i64, i64* %PC.i2374
  %6453 = add i64 %6452, 4
  store i64 %6453, i64* %PC.i2374
  %6454 = shl i64 %6451, 5
  %6455 = icmp slt i64 %6454, 0
  %6456 = shl i64 %6454, 1
  store i64 %6456, i64* %RDX.i2375, align 8
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6458 = zext i1 %6455 to i8
  store i8 %6458, i8* %6457, align 1
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6460 = trunc i64 %6456 to i32
  %6461 = and i32 %6460, 254
  %6462 = call i32 @llvm.ctpop.i32(i32 %6461)
  %6463 = trunc i32 %6462 to i8
  %6464 = and i8 %6463, 1
  %6465 = xor i8 %6464, 1
  store i8 %6465, i8* %6459, align 1
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6466, align 1
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6468 = icmp eq i64 %6456, 0
  %6469 = zext i1 %6468 to i8
  store i8 %6469, i8* %6467, align 1
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6471 = lshr i64 %6456, 63
  %6472 = trunc i64 %6471 to i8
  store i8 %6472, i8* %6470, align 1
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6473, align 1
  store %struct.Memory* %loadMem_40c2cd, %struct.Memory** %MEMORY
  %loadMem_40c2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 33
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %PC.i2371 = bitcast %union.anon* %6476 to i64*
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6478 = getelementptr inbounds %struct.GPR, %struct.GPR* %6477, i32 0, i32 5
  %6479 = getelementptr inbounds %struct.Reg, %struct.Reg* %6478, i32 0, i32 0
  %RCX.i2372 = bitcast %union.anon* %6479 to i64*
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6481 = getelementptr inbounds %struct.GPR, %struct.GPR* %6480, i32 0, i32 7
  %6482 = getelementptr inbounds %struct.Reg, %struct.Reg* %6481, i32 0, i32 0
  %RDX.i2373 = bitcast %union.anon* %6482 to i64*
  %6483 = load i64, i64* %RCX.i2372
  %6484 = load i64, i64* %RDX.i2373
  %6485 = load i64, i64* %PC.i2371
  %6486 = add i64 %6485, 3
  store i64 %6486, i64* %PC.i2371
  %6487 = add i64 %6484, %6483
  store i64 %6487, i64* %RCX.i2372, align 8
  %6488 = icmp ult i64 %6487, %6483
  %6489 = icmp ult i64 %6487, %6484
  %6490 = or i1 %6488, %6489
  %6491 = zext i1 %6490 to i8
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6491, i8* %6492, align 1
  %6493 = trunc i64 %6487 to i32
  %6494 = and i32 %6493, 255
  %6495 = call i32 @llvm.ctpop.i32(i32 %6494)
  %6496 = trunc i32 %6495 to i8
  %6497 = and i8 %6496, 1
  %6498 = xor i8 %6497, 1
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6498, i8* %6499, align 1
  %6500 = xor i64 %6484, %6483
  %6501 = xor i64 %6500, %6487
  %6502 = lshr i64 %6501, 4
  %6503 = trunc i64 %6502 to i8
  %6504 = and i8 %6503, 1
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6504, i8* %6505, align 1
  %6506 = icmp eq i64 %6487, 0
  %6507 = zext i1 %6506 to i8
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6507, i8* %6508, align 1
  %6509 = lshr i64 %6487, 63
  %6510 = trunc i64 %6509 to i8
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6510, i8* %6511, align 1
  %6512 = lshr i64 %6483, 63
  %6513 = lshr i64 %6484, 63
  %6514 = xor i64 %6509, %6512
  %6515 = xor i64 %6509, %6513
  %6516 = add i64 %6514, %6515
  %6517 = icmp eq i64 %6516, 2
  %6518 = zext i1 %6517 to i8
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6518, i8* %6519, align 1
  store %struct.Memory* %loadMem_40c2d1, %struct.Memory** %MEMORY
  %loadMem_40c2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 33
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %PC.i2368 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 7
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %RDX.i2369 = bitcast %union.anon* %6525 to i64*
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 15
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %RBP.i2370 = bitcast %union.anon* %6528 to i64*
  %6529 = load i64, i64* %RBP.i2370
  %6530 = sub i64 %6529, 24
  %6531 = load i64, i64* %PC.i2368
  %6532 = add i64 %6531, 4
  store i64 %6532, i64* %PC.i2368
  %6533 = inttoptr i64 %6530 to i32*
  %6534 = load i32, i32* %6533
  %6535 = sext i32 %6534 to i64
  store i64 %6535, i64* %RDX.i2369, align 8
  store %struct.Memory* %loadMem_40c2d4, %struct.Memory** %MEMORY
  %loadMem_40c2d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 33
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %PC.i2364 = bitcast %union.anon* %6538 to i64*
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 1
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %RAX.i2365 = bitcast %union.anon* %6541 to i64*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 5
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %RCX.i2366 = bitcast %union.anon* %6544 to i64*
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6546 = getelementptr inbounds %struct.GPR, %struct.GPR* %6545, i32 0, i32 7
  %6547 = getelementptr inbounds %struct.Reg, %struct.Reg* %6546, i32 0, i32 0
  %RDX.i2367 = bitcast %union.anon* %6547 to i64*
  %6548 = load i64, i64* %RCX.i2366
  %6549 = load i64, i64* %RDX.i2367
  %6550 = mul i64 %6549, 4
  %6551 = add i64 %6550, %6548
  %6552 = load i64, i64* %PC.i2364
  %6553 = add i64 %6552, 3
  store i64 %6553, i64* %PC.i2364
  %6554 = inttoptr i64 %6551 to i32*
  %6555 = load i32, i32* %6554
  %6556 = zext i32 %6555 to i64
  store i64 %6556, i64* %RAX.i2365, align 8
  store %struct.Memory* %loadMem_40c2d8, %struct.Memory** %MEMORY
  %loadMem_40c2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6558 = getelementptr inbounds %struct.GPR, %struct.GPR* %6557, i32 0, i32 33
  %6559 = getelementptr inbounds %struct.Reg, %struct.Reg* %6558, i32 0, i32 0
  %PC.i2362 = bitcast %union.anon* %6559 to i64*
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6561 = getelementptr inbounds %struct.GPR, %struct.GPR* %6560, i32 0, i32 5
  %6562 = getelementptr inbounds %struct.Reg, %struct.Reg* %6561, i32 0, i32 0
  %RCX.i2363 = bitcast %union.anon* %6562 to i64*
  %6563 = load i64, i64* %PC.i2362
  %6564 = add i64 %6563, 8
  store i64 %6564, i64* %PC.i2362
  %6565 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6565, i64* %RCX.i2363, align 8
  store %struct.Memory* %loadMem_40c2db, %struct.Memory** %MEMORY
  %loadMem_40c2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 33
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %PC.i2360 = bitcast %union.anon* %6568 to i64*
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6570 = getelementptr inbounds %struct.GPR, %struct.GPR* %6569, i32 0, i32 5
  %6571 = getelementptr inbounds %struct.Reg, %struct.Reg* %6570, i32 0, i32 0
  %RCX.i2361 = bitcast %union.anon* %6571 to i64*
  %6572 = load i64, i64* %RCX.i2361
  %6573 = load i64, i64* %PC.i2360
  %6574 = add i64 %6573, 7
  store i64 %6574, i64* %PC.i2360
  %6575 = add i64 13112, %6572
  store i64 %6575, i64* %RCX.i2361, align 8
  %6576 = icmp ult i64 %6575, %6572
  %6577 = icmp ult i64 %6575, 13112
  %6578 = or i1 %6576, %6577
  %6579 = zext i1 %6578 to i8
  %6580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6579, i8* %6580, align 1
  %6581 = trunc i64 %6575 to i32
  %6582 = and i32 %6581, 255
  %6583 = call i32 @llvm.ctpop.i32(i32 %6582)
  %6584 = trunc i32 %6583 to i8
  %6585 = and i8 %6584, 1
  %6586 = xor i8 %6585, 1
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6586, i8* %6587, align 1
  %6588 = xor i64 13112, %6572
  %6589 = xor i64 %6588, %6575
  %6590 = lshr i64 %6589, 4
  %6591 = trunc i64 %6590 to i8
  %6592 = and i8 %6591, 1
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6592, i8* %6593, align 1
  %6594 = icmp eq i64 %6575, 0
  %6595 = zext i1 %6594 to i8
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6595, i8* %6596, align 1
  %6597 = lshr i64 %6575, 63
  %6598 = trunc i64 %6597 to i8
  %6599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6598, i8* %6599, align 1
  %6600 = lshr i64 %6572, 63
  %6601 = xor i64 %6597, %6600
  %6602 = add i64 %6601, %6597
  %6603 = icmp eq i64 %6602, 2
  %6604 = zext i1 %6603 to i8
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6604, i8* %6605, align 1
  store %struct.Memory* %loadMem_40c2e3, %struct.Memory** %MEMORY
  %loadMem_40c2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 33
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %PC.i2357 = bitcast %union.anon* %6608 to i64*
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 7
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %RDX.i2358 = bitcast %union.anon* %6611 to i64*
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6613 = getelementptr inbounds %struct.GPR, %struct.GPR* %6612, i32 0, i32 15
  %6614 = getelementptr inbounds %struct.Reg, %struct.Reg* %6613, i32 0, i32 0
  %RBP.i2359 = bitcast %union.anon* %6614 to i64*
  %6615 = load i64, i64* %RBP.i2359
  %6616 = sub i64 %6615, 20
  %6617 = load i64, i64* %PC.i2357
  %6618 = add i64 %6617, 4
  store i64 %6618, i64* %PC.i2357
  %6619 = inttoptr i64 %6616 to i32*
  %6620 = load i32, i32* %6619
  %6621 = sext i32 %6620 to i64
  store i64 %6621, i64* %RDX.i2358, align 8
  store %struct.Memory* %loadMem_40c2ea, %struct.Memory** %MEMORY
  %loadMem_40c2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 33
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %PC.i2355 = bitcast %union.anon* %6624 to i64*
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6626 = getelementptr inbounds %struct.GPR, %struct.GPR* %6625, i32 0, i32 7
  %6627 = getelementptr inbounds %struct.Reg, %struct.Reg* %6626, i32 0, i32 0
  %RDX.i2356 = bitcast %union.anon* %6627 to i64*
  %6628 = load i64, i64* %RDX.i2356
  %6629 = load i64, i64* %PC.i2355
  %6630 = add i64 %6629, 4
  store i64 %6630, i64* %PC.i2355
  %6631 = shl i64 %6628, 5
  %6632 = icmp slt i64 %6631, 0
  %6633 = shl i64 %6631, 1
  store i64 %6633, i64* %RDX.i2356, align 8
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6635 = zext i1 %6632 to i8
  store i8 %6635, i8* %6634, align 1
  %6636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6637 = trunc i64 %6633 to i32
  %6638 = and i32 %6637, 254
  %6639 = call i32 @llvm.ctpop.i32(i32 %6638)
  %6640 = trunc i32 %6639 to i8
  %6641 = and i8 %6640, 1
  %6642 = xor i8 %6641, 1
  store i8 %6642, i8* %6636, align 1
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6643, align 1
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6645 = icmp eq i64 %6633, 0
  %6646 = zext i1 %6645 to i8
  store i8 %6646, i8* %6644, align 1
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6648 = lshr i64 %6633, 63
  %6649 = trunc i64 %6648 to i8
  store i8 %6649, i8* %6647, align 1
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6650, align 1
  store %struct.Memory* %loadMem_40c2ee, %struct.Memory** %MEMORY
  %loadMem_40c2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6652 = getelementptr inbounds %struct.GPR, %struct.GPR* %6651, i32 0, i32 33
  %6653 = getelementptr inbounds %struct.Reg, %struct.Reg* %6652, i32 0, i32 0
  %PC.i2352 = bitcast %union.anon* %6653 to i64*
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6655 = getelementptr inbounds %struct.GPR, %struct.GPR* %6654, i32 0, i32 5
  %6656 = getelementptr inbounds %struct.Reg, %struct.Reg* %6655, i32 0, i32 0
  %RCX.i2353 = bitcast %union.anon* %6656 to i64*
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 7
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %RDX.i2354 = bitcast %union.anon* %6659 to i64*
  %6660 = load i64, i64* %RCX.i2353
  %6661 = load i64, i64* %RDX.i2354
  %6662 = load i64, i64* %PC.i2352
  %6663 = add i64 %6662, 3
  store i64 %6663, i64* %PC.i2352
  %6664 = add i64 %6661, %6660
  store i64 %6664, i64* %RCX.i2353, align 8
  %6665 = icmp ult i64 %6664, %6660
  %6666 = icmp ult i64 %6664, %6661
  %6667 = or i1 %6665, %6666
  %6668 = zext i1 %6667 to i8
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6668, i8* %6669, align 1
  %6670 = trunc i64 %6664 to i32
  %6671 = and i32 %6670, 255
  %6672 = call i32 @llvm.ctpop.i32(i32 %6671)
  %6673 = trunc i32 %6672 to i8
  %6674 = and i8 %6673, 1
  %6675 = xor i8 %6674, 1
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6675, i8* %6676, align 1
  %6677 = xor i64 %6661, %6660
  %6678 = xor i64 %6677, %6664
  %6679 = lshr i64 %6678, 4
  %6680 = trunc i64 %6679 to i8
  %6681 = and i8 %6680, 1
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6681, i8* %6682, align 1
  %6683 = icmp eq i64 %6664, 0
  %6684 = zext i1 %6683 to i8
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6684, i8* %6685, align 1
  %6686 = lshr i64 %6664, 63
  %6687 = trunc i64 %6686 to i8
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6687, i8* %6688, align 1
  %6689 = lshr i64 %6660, 63
  %6690 = lshr i64 %6661, 63
  %6691 = xor i64 %6686, %6689
  %6692 = xor i64 %6686, %6690
  %6693 = add i64 %6691, %6692
  %6694 = icmp eq i64 %6693, 2
  %6695 = zext i1 %6694 to i8
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6695, i8* %6696, align 1
  store %struct.Memory* %loadMem_40c2f2, %struct.Memory** %MEMORY
  %loadMem_40c2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 33
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %PC.i2349 = bitcast %union.anon* %6699 to i64*
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 7
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %RDX.i2350 = bitcast %union.anon* %6702 to i64*
  %6703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6704 = getelementptr inbounds %struct.GPR, %struct.GPR* %6703, i32 0, i32 15
  %6705 = getelementptr inbounds %struct.Reg, %struct.Reg* %6704, i32 0, i32 0
  %RBP.i2351 = bitcast %union.anon* %6705 to i64*
  %6706 = load i64, i64* %RBP.i2351
  %6707 = sub i64 %6706, 32
  %6708 = load i64, i64* %PC.i2349
  %6709 = add i64 %6708, 4
  store i64 %6709, i64* %PC.i2349
  %6710 = inttoptr i64 %6707 to i32*
  %6711 = load i32, i32* %6710
  %6712 = sext i32 %6711 to i64
  store i64 %6712, i64* %RDX.i2350, align 8
  store %struct.Memory* %loadMem_40c2f5, %struct.Memory** %MEMORY
  %loadMem_40c2f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 33
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %PC.i2345 = bitcast %union.anon* %6715 to i64*
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 1
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %RAX.i2346 = bitcast %union.anon* %6718 to i64*
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6720 = getelementptr inbounds %struct.GPR, %struct.GPR* %6719, i32 0, i32 5
  %6721 = getelementptr inbounds %struct.Reg, %struct.Reg* %6720, i32 0, i32 0
  %RCX.i2347 = bitcast %union.anon* %6721 to i64*
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6723 = getelementptr inbounds %struct.GPR, %struct.GPR* %6722, i32 0, i32 7
  %6724 = getelementptr inbounds %struct.Reg, %struct.Reg* %6723, i32 0, i32 0
  %RDX.i2348 = bitcast %union.anon* %6724 to i64*
  %6725 = load i64, i64* %RAX.i2346
  %6726 = load i64, i64* %RCX.i2347
  %6727 = load i64, i64* %RDX.i2348
  %6728 = mul i64 %6727, 4
  %6729 = add i64 %6728, %6726
  %6730 = load i64, i64* %PC.i2345
  %6731 = add i64 %6730, 3
  store i64 %6731, i64* %PC.i2345
  %6732 = trunc i64 %6725 to i32
  %6733 = inttoptr i64 %6729 to i32*
  %6734 = load i32, i32* %6733
  %6735 = sub i32 %6732, %6734
  %6736 = zext i32 %6735 to i64
  store i64 %6736, i64* %RAX.i2346, align 8
  %6737 = icmp ult i32 %6732, %6734
  %6738 = zext i1 %6737 to i8
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6738, i8* %6739, align 1
  %6740 = and i32 %6735, 255
  %6741 = call i32 @llvm.ctpop.i32(i32 %6740)
  %6742 = trunc i32 %6741 to i8
  %6743 = and i8 %6742, 1
  %6744 = xor i8 %6743, 1
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6744, i8* %6745, align 1
  %6746 = xor i32 %6734, %6732
  %6747 = xor i32 %6746, %6735
  %6748 = lshr i32 %6747, 4
  %6749 = trunc i32 %6748 to i8
  %6750 = and i8 %6749, 1
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6750, i8* %6751, align 1
  %6752 = icmp eq i32 %6735, 0
  %6753 = zext i1 %6752 to i8
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6753, i8* %6754, align 1
  %6755 = lshr i32 %6735, 31
  %6756 = trunc i32 %6755 to i8
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6756, i8* %6757, align 1
  %6758 = lshr i32 %6732, 31
  %6759 = lshr i32 %6734, 31
  %6760 = xor i32 %6759, %6758
  %6761 = xor i32 %6755, %6758
  %6762 = add i32 %6761, %6760
  %6763 = icmp eq i32 %6762, 2
  %6764 = zext i1 %6763 to i8
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6764, i8* %6765, align 1
  store %struct.Memory* %loadMem_40c2f9, %struct.Memory** %MEMORY
  %loadMem_40c2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 33
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %PC.i2342 = bitcast %union.anon* %6768 to i64*
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 5
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %RCX.i2343 = bitcast %union.anon* %6771 to i64*
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 15
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %RBP.i2344 = bitcast %union.anon* %6774 to i64*
  %6775 = load i64, i64* %RBP.i2344
  %6776 = sub i64 %6775, 32
  %6777 = load i64, i64* %PC.i2342
  %6778 = add i64 %6777, 4
  store i64 %6778, i64* %PC.i2342
  %6779 = inttoptr i64 %6776 to i32*
  %6780 = load i32, i32* %6779
  %6781 = sext i32 %6780 to i64
  store i64 %6781, i64* %RCX.i2343, align 8
  store %struct.Memory* %loadMem_40c2fc, %struct.Memory** %MEMORY
  %loadMem_40c300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 33
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %PC.i2338 = bitcast %union.anon* %6784 to i64*
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6786 = getelementptr inbounds %struct.GPR, %struct.GPR* %6785, i32 0, i32 1
  %6787 = getelementptr inbounds %struct.Reg, %struct.Reg* %6786, i32 0, i32 0
  %EAX.i2339 = bitcast %union.anon* %6787 to i32*
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6789 = getelementptr inbounds %struct.GPR, %struct.GPR* %6788, i32 0, i32 5
  %6790 = getelementptr inbounds %struct.Reg, %struct.Reg* %6789, i32 0, i32 0
  %RCX.i2340 = bitcast %union.anon* %6790 to i64*
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 15
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %RBP.i2341 = bitcast %union.anon* %6793 to i64*
  %6794 = load i64, i64* %RBP.i2341
  %6795 = load i64, i64* %RCX.i2340
  %6796 = mul i64 %6795, 4
  %6797 = add i64 %6794, -64
  %6798 = add i64 %6797, %6796
  %6799 = load i32, i32* %EAX.i2339
  %6800 = zext i32 %6799 to i64
  %6801 = load i64, i64* %PC.i2338
  %6802 = add i64 %6801, 4
  store i64 %6802, i64* %PC.i2338
  %6803 = inttoptr i64 %6798 to i32*
  store i32 %6799, i32* %6803
  store %struct.Memory* %loadMem_40c300, %struct.Memory** %MEMORY
  %loadMem_40c304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6805 = getelementptr inbounds %struct.GPR, %struct.GPR* %6804, i32 0, i32 33
  %6806 = getelementptr inbounds %struct.Reg, %struct.Reg* %6805, i32 0, i32 0
  %PC.i2335 = bitcast %union.anon* %6806 to i64*
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6808 = getelementptr inbounds %struct.GPR, %struct.GPR* %6807, i32 0, i32 1
  %6809 = getelementptr inbounds %struct.Reg, %struct.Reg* %6808, i32 0, i32 0
  %RAX.i2336 = bitcast %union.anon* %6809 to i64*
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6811 = getelementptr inbounds %struct.GPR, %struct.GPR* %6810, i32 0, i32 15
  %6812 = getelementptr inbounds %struct.Reg, %struct.Reg* %6811, i32 0, i32 0
  %RBP.i2337 = bitcast %union.anon* %6812 to i64*
  %6813 = load i64, i64* %RBP.i2337
  %6814 = sub i64 %6813, 24
  %6815 = load i64, i64* %PC.i2335
  %6816 = add i64 %6815, 3
  store i64 %6816, i64* %PC.i2335
  %6817 = inttoptr i64 %6814 to i32*
  %6818 = load i32, i32* %6817
  %6819 = zext i32 %6818 to i64
  store i64 %6819, i64* %RAX.i2336, align 8
  store %struct.Memory* %loadMem_40c304, %struct.Memory** %MEMORY
  %loadMem_40c307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 33
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %PC.i2333 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 1
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %RAX.i2334 = bitcast %union.anon* %6825 to i64*
  %6826 = load i64, i64* %RAX.i2334
  %6827 = load i64, i64* %PC.i2333
  %6828 = add i64 %6827, 3
  store i64 %6828, i64* %PC.i2333
  %6829 = trunc i64 %6826 to i32
  %6830 = add i32 1, %6829
  %6831 = zext i32 %6830 to i64
  store i64 %6831, i64* %RAX.i2334, align 8
  %6832 = icmp ult i32 %6830, %6829
  %6833 = icmp ult i32 %6830, 1
  %6834 = or i1 %6832, %6833
  %6835 = zext i1 %6834 to i8
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6835, i8* %6836, align 1
  %6837 = and i32 %6830, 255
  %6838 = call i32 @llvm.ctpop.i32(i32 %6837)
  %6839 = trunc i32 %6838 to i8
  %6840 = and i8 %6839, 1
  %6841 = xor i8 %6840, 1
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6841, i8* %6842, align 1
  %6843 = xor i64 1, %6826
  %6844 = trunc i64 %6843 to i32
  %6845 = xor i32 %6844, %6830
  %6846 = lshr i32 %6845, 4
  %6847 = trunc i32 %6846 to i8
  %6848 = and i8 %6847, 1
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6848, i8* %6849, align 1
  %6850 = icmp eq i32 %6830, 0
  %6851 = zext i1 %6850 to i8
  %6852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6851, i8* %6852, align 1
  %6853 = lshr i32 %6830, 31
  %6854 = trunc i32 %6853 to i8
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6854, i8* %6855, align 1
  %6856 = lshr i32 %6829, 31
  %6857 = xor i32 %6853, %6856
  %6858 = add i32 %6857, %6853
  %6859 = icmp eq i32 %6858, 2
  %6860 = zext i1 %6859 to i8
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6860, i8* %6861, align 1
  store %struct.Memory* %loadMem_40c307, %struct.Memory** %MEMORY
  %loadMem_40c30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6863 = getelementptr inbounds %struct.GPR, %struct.GPR* %6862, i32 0, i32 33
  %6864 = getelementptr inbounds %struct.Reg, %struct.Reg* %6863, i32 0, i32 0
  %PC.i2330 = bitcast %union.anon* %6864 to i64*
  %6865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6866 = getelementptr inbounds %struct.GPR, %struct.GPR* %6865, i32 0, i32 1
  %6867 = getelementptr inbounds %struct.Reg, %struct.Reg* %6866, i32 0, i32 0
  %EAX.i2331 = bitcast %union.anon* %6867 to i32*
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 15
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %RBP.i2332 = bitcast %union.anon* %6870 to i64*
  %6871 = load i64, i64* %RBP.i2332
  %6872 = sub i64 %6871, 24
  %6873 = load i32, i32* %EAX.i2331
  %6874 = zext i32 %6873 to i64
  %6875 = load i64, i64* %PC.i2330
  %6876 = add i64 %6875, 3
  store i64 %6876, i64* %PC.i2330
  %6877 = inttoptr i64 %6872 to i32*
  store i32 %6873, i32* %6877
  store %struct.Memory* %loadMem_40c30a, %struct.Memory** %MEMORY
  %loadMem_40c30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 33
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %PC.i2329 = bitcast %union.anon* %6880 to i64*
  %6881 = load i64, i64* %PC.i2329
  %6882 = add i64 %6881, -178
  %6883 = load i64, i64* %PC.i2329
  %6884 = add i64 %6883, 5
  store i64 %6884, i64* %PC.i2329
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6882, i64* %6885, align 8
  store %struct.Memory* %loadMem_40c30d, %struct.Memory** %MEMORY
  br label %block_.L_40c25b

block_.L_40c312:                                  ; preds = %block_.L_40c25b
  %loadMem_40c312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6887 = getelementptr inbounds %struct.GPR, %struct.GPR* %6886, i32 0, i32 33
  %6888 = getelementptr inbounds %struct.Reg, %struct.Reg* %6887, i32 0, i32 0
  %PC.i2326 = bitcast %union.anon* %6888 to i64*
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 1
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %RAX.i2327 = bitcast %union.anon* %6891 to i64*
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 15
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %RBP.i2328 = bitcast %union.anon* %6894 to i64*
  %6895 = load i64, i64* %RBP.i2328
  %6896 = sub i64 %6895, 64
  %6897 = load i64, i64* %PC.i2326
  %6898 = add i64 %6897, 3
  store i64 %6898, i64* %PC.i2326
  %6899 = inttoptr i64 %6896 to i32*
  %6900 = load i32, i32* %6899
  %6901 = zext i32 %6900 to i64
  store i64 %6901, i64* %RAX.i2327, align 8
  store %struct.Memory* %loadMem_40c312, %struct.Memory** %MEMORY
  %loadMem_40c315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 33
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %PC.i2323 = bitcast %union.anon* %6904 to i64*
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6906 = getelementptr inbounds %struct.GPR, %struct.GPR* %6905, i32 0, i32 1
  %6907 = getelementptr inbounds %struct.Reg, %struct.Reg* %6906, i32 0, i32 0
  %RAX.i2324 = bitcast %union.anon* %6907 to i64*
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 15
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %RBP.i2325 = bitcast %union.anon* %6910 to i64*
  %6911 = load i64, i64* %RAX.i2324
  %6912 = load i64, i64* %RBP.i2325
  %6913 = sub i64 %6912, 60
  %6914 = load i64, i64* %PC.i2323
  %6915 = add i64 %6914, 3
  store i64 %6915, i64* %PC.i2323
  %6916 = trunc i64 %6911 to i32
  %6917 = inttoptr i64 %6913 to i32*
  %6918 = load i32, i32* %6917
  %6919 = add i32 %6918, %6916
  %6920 = zext i32 %6919 to i64
  store i64 %6920, i64* %RAX.i2324, align 8
  %6921 = icmp ult i32 %6919, %6916
  %6922 = icmp ult i32 %6919, %6918
  %6923 = or i1 %6921, %6922
  %6924 = zext i1 %6923 to i8
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6924, i8* %6925, align 1
  %6926 = and i32 %6919, 255
  %6927 = call i32 @llvm.ctpop.i32(i32 %6926)
  %6928 = trunc i32 %6927 to i8
  %6929 = and i8 %6928, 1
  %6930 = xor i8 %6929, 1
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6930, i8* %6931, align 1
  %6932 = xor i32 %6918, %6916
  %6933 = xor i32 %6932, %6919
  %6934 = lshr i32 %6933, 4
  %6935 = trunc i32 %6934 to i8
  %6936 = and i8 %6935, 1
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6936, i8* %6937, align 1
  %6938 = icmp eq i32 %6919, 0
  %6939 = zext i1 %6938 to i8
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6939, i8* %6940, align 1
  %6941 = lshr i32 %6919, 31
  %6942 = trunc i32 %6941 to i8
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6942, i8* %6943, align 1
  %6944 = lshr i32 %6916, 31
  %6945 = lshr i32 %6918, 31
  %6946 = xor i32 %6941, %6944
  %6947 = xor i32 %6941, %6945
  %6948 = add i32 %6946, %6947
  %6949 = icmp eq i32 %6948, 2
  %6950 = zext i1 %6949 to i8
  %6951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6950, i8* %6951, align 1
  store %struct.Memory* %loadMem_40c315, %struct.Memory** %MEMORY
  %loadMem_40c318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 33
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %PC.i2321 = bitcast %union.anon* %6954 to i64*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6956 = getelementptr inbounds %struct.GPR, %struct.GPR* %6955, i32 0, i32 5
  %6957 = getelementptr inbounds %struct.Reg, %struct.Reg* %6956, i32 0, i32 0
  %RCX.i2322 = bitcast %union.anon* %6957 to i64*
  %6958 = load i64, i64* %PC.i2321
  %6959 = add i64 %6958, 8
  store i64 %6959, i64* %PC.i2321
  %6960 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6960, i64* %RCX.i2322, align 8
  store %struct.Memory* %loadMem_40c318, %struct.Memory** %MEMORY
  %loadMem_40c320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 33
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %PC.i2319 = bitcast %union.anon* %6963 to i64*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 5
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %RCX.i2320 = bitcast %union.anon* %6966 to i64*
  %6967 = load i64, i64* %RCX.i2320
  %6968 = load i64, i64* %PC.i2319
  %6969 = add i64 %6968, 7
  store i64 %6969, i64* %PC.i2319
  %6970 = add i64 13112, %6967
  store i64 %6970, i64* %RCX.i2320, align 8
  %6971 = icmp ult i64 %6970, %6967
  %6972 = icmp ult i64 %6970, 13112
  %6973 = or i1 %6971, %6972
  %6974 = zext i1 %6973 to i8
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6974, i8* %6975, align 1
  %6976 = trunc i64 %6970 to i32
  %6977 = and i32 %6976, 255
  %6978 = call i32 @llvm.ctpop.i32(i32 %6977)
  %6979 = trunc i32 %6978 to i8
  %6980 = and i8 %6979, 1
  %6981 = xor i8 %6980, 1
  %6982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6981, i8* %6982, align 1
  %6983 = xor i64 13112, %6967
  %6984 = xor i64 %6983, %6970
  %6985 = lshr i64 %6984, 4
  %6986 = trunc i64 %6985 to i8
  %6987 = and i8 %6986, 1
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6987, i8* %6988, align 1
  %6989 = icmp eq i64 %6970, 0
  %6990 = zext i1 %6989 to i8
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6990, i8* %6991, align 1
  %6992 = lshr i64 %6970, 63
  %6993 = trunc i64 %6992 to i8
  %6994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6993, i8* %6994, align 1
  %6995 = lshr i64 %6967, 63
  %6996 = xor i64 %6992, %6995
  %6997 = add i64 %6996, %6992
  %6998 = icmp eq i64 %6997, 2
  %6999 = zext i1 %6998 to i8
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6999, i8* %7000, align 1
  store %struct.Memory* %loadMem_40c320, %struct.Memory** %MEMORY
  %loadMem_40c327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7002 = getelementptr inbounds %struct.GPR, %struct.GPR* %7001, i32 0, i32 33
  %7003 = getelementptr inbounds %struct.Reg, %struct.Reg* %7002, i32 0, i32 0
  %PC.i2316 = bitcast %union.anon* %7003 to i64*
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7005 = getelementptr inbounds %struct.GPR, %struct.GPR* %7004, i32 0, i32 7
  %7006 = getelementptr inbounds %struct.Reg, %struct.Reg* %7005, i32 0, i32 0
  %RDX.i2317 = bitcast %union.anon* %7006 to i64*
  %7007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7008 = getelementptr inbounds %struct.GPR, %struct.GPR* %7007, i32 0, i32 15
  %7009 = getelementptr inbounds %struct.Reg, %struct.Reg* %7008, i32 0, i32 0
  %RBP.i2318 = bitcast %union.anon* %7009 to i64*
  %7010 = load i64, i64* %RBP.i2318
  %7011 = sub i64 %7010, 20
  %7012 = load i64, i64* %PC.i2316
  %7013 = add i64 %7012, 4
  store i64 %7013, i64* %PC.i2316
  %7014 = inttoptr i64 %7011 to i32*
  %7015 = load i32, i32* %7014
  %7016 = sext i32 %7015 to i64
  store i64 %7016, i64* %RDX.i2317, align 8
  store %struct.Memory* %loadMem_40c327, %struct.Memory** %MEMORY
  %loadMem_40c32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7018 = getelementptr inbounds %struct.GPR, %struct.GPR* %7017, i32 0, i32 33
  %7019 = getelementptr inbounds %struct.Reg, %struct.Reg* %7018, i32 0, i32 0
  %PC.i2314 = bitcast %union.anon* %7019 to i64*
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7021 = getelementptr inbounds %struct.GPR, %struct.GPR* %7020, i32 0, i32 7
  %7022 = getelementptr inbounds %struct.Reg, %struct.Reg* %7021, i32 0, i32 0
  %RDX.i2315 = bitcast %union.anon* %7022 to i64*
  %7023 = load i64, i64* %RDX.i2315
  %7024 = load i64, i64* %PC.i2314
  %7025 = add i64 %7024, 4
  store i64 %7025, i64* %PC.i2314
  %7026 = shl i64 %7023, 5
  %7027 = icmp slt i64 %7026, 0
  %7028 = shl i64 %7026, 1
  store i64 %7028, i64* %RDX.i2315, align 8
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7030 = zext i1 %7027 to i8
  store i8 %7030, i8* %7029, align 1
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7032 = trunc i64 %7028 to i32
  %7033 = and i32 %7032, 254
  %7034 = call i32 @llvm.ctpop.i32(i32 %7033)
  %7035 = trunc i32 %7034 to i8
  %7036 = and i8 %7035, 1
  %7037 = xor i8 %7036, 1
  store i8 %7037, i8* %7031, align 1
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7038, align 1
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7040 = icmp eq i64 %7028, 0
  %7041 = zext i1 %7040 to i8
  store i8 %7041, i8* %7039, align 1
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7043 = lshr i64 %7028, 63
  %7044 = trunc i64 %7043 to i8
  store i8 %7044, i8* %7042, align 1
  %7045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7045, align 1
  store %struct.Memory* %loadMem_40c32b, %struct.Memory** %MEMORY
  %loadMem_40c32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 33
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %PC.i2311 = bitcast %union.anon* %7048 to i64*
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 5
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %RCX.i2312 = bitcast %union.anon* %7051 to i64*
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 7
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %RDX.i2313 = bitcast %union.anon* %7054 to i64*
  %7055 = load i64, i64* %RCX.i2312
  %7056 = load i64, i64* %RDX.i2313
  %7057 = load i64, i64* %PC.i2311
  %7058 = add i64 %7057, 3
  store i64 %7058, i64* %PC.i2311
  %7059 = add i64 %7056, %7055
  store i64 %7059, i64* %RCX.i2312, align 8
  %7060 = icmp ult i64 %7059, %7055
  %7061 = icmp ult i64 %7059, %7056
  %7062 = or i1 %7060, %7061
  %7063 = zext i1 %7062 to i8
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7063, i8* %7064, align 1
  %7065 = trunc i64 %7059 to i32
  %7066 = and i32 %7065, 255
  %7067 = call i32 @llvm.ctpop.i32(i32 %7066)
  %7068 = trunc i32 %7067 to i8
  %7069 = and i8 %7068, 1
  %7070 = xor i8 %7069, 1
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7070, i8* %7071, align 1
  %7072 = xor i64 %7056, %7055
  %7073 = xor i64 %7072, %7059
  %7074 = lshr i64 %7073, 4
  %7075 = trunc i64 %7074 to i8
  %7076 = and i8 %7075, 1
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7076, i8* %7077, align 1
  %7078 = icmp eq i64 %7059, 0
  %7079 = zext i1 %7078 to i8
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7079, i8* %7080, align 1
  %7081 = lshr i64 %7059, 63
  %7082 = trunc i64 %7081 to i8
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7082, i8* %7083, align 1
  %7084 = lshr i64 %7055, 63
  %7085 = lshr i64 %7056, 63
  %7086 = xor i64 %7081, %7084
  %7087 = xor i64 %7081, %7085
  %7088 = add i64 %7086, %7087
  %7089 = icmp eq i64 %7088, 2
  %7090 = zext i1 %7089 to i8
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7090, i8* %7091, align 1
  store %struct.Memory* %loadMem_40c32f, %struct.Memory** %MEMORY
  %loadMem_40c332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 33
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %PC.i2308 = bitcast %union.anon* %7094 to i64*
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 1
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %EAX.i2309 = bitcast %union.anon* %7097 to i32*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 5
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RCX.i2310 = bitcast %union.anon* %7100 to i64*
  %7101 = load i64, i64* %RCX.i2310
  %7102 = load i32, i32* %EAX.i2309
  %7103 = zext i32 %7102 to i64
  %7104 = load i64, i64* %PC.i2308
  %7105 = add i64 %7104, 2
  store i64 %7105, i64* %PC.i2308
  %7106 = inttoptr i64 %7101 to i32*
  store i32 %7102, i32* %7106
  store %struct.Memory* %loadMem_40c332, %struct.Memory** %MEMORY
  %loadMem_40c334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 33
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %PC.i2305 = bitcast %union.anon* %7109 to i64*
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 1
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %RAX.i2306 = bitcast %union.anon* %7112 to i64*
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7114 = getelementptr inbounds %struct.GPR, %struct.GPR* %7113, i32 0, i32 15
  %7115 = getelementptr inbounds %struct.Reg, %struct.Reg* %7114, i32 0, i32 0
  %RBP.i2307 = bitcast %union.anon* %7115 to i64*
  %7116 = load i64, i64* %RBP.i2307
  %7117 = sub i64 %7116, 64
  %7118 = load i64, i64* %PC.i2305
  %7119 = add i64 %7118, 3
  store i64 %7119, i64* %PC.i2305
  %7120 = inttoptr i64 %7117 to i32*
  %7121 = load i32, i32* %7120
  %7122 = zext i32 %7121 to i64
  store i64 %7122, i64* %RAX.i2306, align 8
  store %struct.Memory* %loadMem_40c334, %struct.Memory** %MEMORY
  %loadMem_40c337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7124 = getelementptr inbounds %struct.GPR, %struct.GPR* %7123, i32 0, i32 33
  %7125 = getelementptr inbounds %struct.Reg, %struct.Reg* %7124, i32 0, i32 0
  %PC.i2302 = bitcast %union.anon* %7125 to i64*
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7127 = getelementptr inbounds %struct.GPR, %struct.GPR* %7126, i32 0, i32 1
  %7128 = getelementptr inbounds %struct.Reg, %struct.Reg* %7127, i32 0, i32 0
  %RAX.i2303 = bitcast %union.anon* %7128 to i64*
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7130 = getelementptr inbounds %struct.GPR, %struct.GPR* %7129, i32 0, i32 15
  %7131 = getelementptr inbounds %struct.Reg, %struct.Reg* %7130, i32 0, i32 0
  %RBP.i2304 = bitcast %union.anon* %7131 to i64*
  %7132 = load i64, i64* %RAX.i2303
  %7133 = load i64, i64* %RBP.i2304
  %7134 = sub i64 %7133, 60
  %7135 = load i64, i64* %PC.i2302
  %7136 = add i64 %7135, 3
  store i64 %7136, i64* %PC.i2302
  %7137 = trunc i64 %7132 to i32
  %7138 = inttoptr i64 %7134 to i32*
  %7139 = load i32, i32* %7138
  %7140 = sub i32 %7137, %7139
  %7141 = zext i32 %7140 to i64
  store i64 %7141, i64* %RAX.i2303, align 8
  %7142 = icmp ult i32 %7137, %7139
  %7143 = zext i1 %7142 to i8
  %7144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7143, i8* %7144, align 1
  %7145 = and i32 %7140, 255
  %7146 = call i32 @llvm.ctpop.i32(i32 %7145)
  %7147 = trunc i32 %7146 to i8
  %7148 = and i8 %7147, 1
  %7149 = xor i8 %7148, 1
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7149, i8* %7150, align 1
  %7151 = xor i32 %7139, %7137
  %7152 = xor i32 %7151, %7140
  %7153 = lshr i32 %7152, 4
  %7154 = trunc i32 %7153 to i8
  %7155 = and i8 %7154, 1
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7155, i8* %7156, align 1
  %7157 = icmp eq i32 %7140, 0
  %7158 = zext i1 %7157 to i8
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7158, i8* %7159, align 1
  %7160 = lshr i32 %7140, 31
  %7161 = trunc i32 %7160 to i8
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7161, i8* %7162, align 1
  %7163 = lshr i32 %7137, 31
  %7164 = lshr i32 %7139, 31
  %7165 = xor i32 %7164, %7163
  %7166 = xor i32 %7160, %7163
  %7167 = add i32 %7166, %7165
  %7168 = icmp eq i32 %7167, 2
  %7169 = zext i1 %7168 to i8
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7169, i8* %7170, align 1
  store %struct.Memory* %loadMem_40c337, %struct.Memory** %MEMORY
  %loadMem_40c33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7172 = getelementptr inbounds %struct.GPR, %struct.GPR* %7171, i32 0, i32 33
  %7173 = getelementptr inbounds %struct.Reg, %struct.Reg* %7172, i32 0, i32 0
  %PC.i2300 = bitcast %union.anon* %7173 to i64*
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7175 = getelementptr inbounds %struct.GPR, %struct.GPR* %7174, i32 0, i32 5
  %7176 = getelementptr inbounds %struct.Reg, %struct.Reg* %7175, i32 0, i32 0
  %RCX.i2301 = bitcast %union.anon* %7176 to i64*
  %7177 = load i64, i64* %PC.i2300
  %7178 = add i64 %7177, 8
  store i64 %7178, i64* %PC.i2300
  %7179 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7179, i64* %RCX.i2301, align 8
  store %struct.Memory* %loadMem_40c33a, %struct.Memory** %MEMORY
  %loadMem_40c342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i2298 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 5
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %RCX.i2299 = bitcast %union.anon* %7185 to i64*
  %7186 = load i64, i64* %RCX.i2299
  %7187 = load i64, i64* %PC.i2298
  %7188 = add i64 %7187, 7
  store i64 %7188, i64* %PC.i2298
  %7189 = add i64 13112, %7186
  store i64 %7189, i64* %RCX.i2299, align 8
  %7190 = icmp ult i64 %7189, %7186
  %7191 = icmp ult i64 %7189, 13112
  %7192 = or i1 %7190, %7191
  %7193 = zext i1 %7192 to i8
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7193, i8* %7194, align 1
  %7195 = trunc i64 %7189 to i32
  %7196 = and i32 %7195, 255
  %7197 = call i32 @llvm.ctpop.i32(i32 %7196)
  %7198 = trunc i32 %7197 to i8
  %7199 = and i8 %7198, 1
  %7200 = xor i8 %7199, 1
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7200, i8* %7201, align 1
  %7202 = xor i64 13112, %7186
  %7203 = xor i64 %7202, %7189
  %7204 = lshr i64 %7203, 4
  %7205 = trunc i64 %7204 to i8
  %7206 = and i8 %7205, 1
  %7207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7206, i8* %7207, align 1
  %7208 = icmp eq i64 %7189, 0
  %7209 = zext i1 %7208 to i8
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7209, i8* %7210, align 1
  %7211 = lshr i64 %7189, 63
  %7212 = trunc i64 %7211 to i8
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7212, i8* %7213, align 1
  %7214 = lshr i64 %7186, 63
  %7215 = xor i64 %7211, %7214
  %7216 = add i64 %7215, %7211
  %7217 = icmp eq i64 %7216, 2
  %7218 = zext i1 %7217 to i8
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7218, i8* %7219, align 1
  store %struct.Memory* %loadMem_40c342, %struct.Memory** %MEMORY
  %loadMem_40c349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 33
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %PC.i2295 = bitcast %union.anon* %7222 to i64*
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 7
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %RDX.i2296 = bitcast %union.anon* %7225 to i64*
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 15
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %RBP.i2297 = bitcast %union.anon* %7228 to i64*
  %7229 = load i64, i64* %RBP.i2297
  %7230 = sub i64 %7229, 20
  %7231 = load i64, i64* %PC.i2295
  %7232 = add i64 %7231, 4
  store i64 %7232, i64* %PC.i2295
  %7233 = inttoptr i64 %7230 to i32*
  %7234 = load i32, i32* %7233
  %7235 = sext i32 %7234 to i64
  store i64 %7235, i64* %RDX.i2296, align 8
  store %struct.Memory* %loadMem_40c349, %struct.Memory** %MEMORY
  %loadMem_40c34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7237 = getelementptr inbounds %struct.GPR, %struct.GPR* %7236, i32 0, i32 33
  %7238 = getelementptr inbounds %struct.Reg, %struct.Reg* %7237, i32 0, i32 0
  %PC.i2293 = bitcast %union.anon* %7238 to i64*
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 7
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %RDX.i2294 = bitcast %union.anon* %7241 to i64*
  %7242 = load i64, i64* %RDX.i2294
  %7243 = load i64, i64* %PC.i2293
  %7244 = add i64 %7243, 4
  store i64 %7244, i64* %PC.i2293
  %7245 = shl i64 %7242, 5
  %7246 = icmp slt i64 %7245, 0
  %7247 = shl i64 %7245, 1
  store i64 %7247, i64* %RDX.i2294, align 8
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7249 = zext i1 %7246 to i8
  store i8 %7249, i8* %7248, align 1
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7251 = trunc i64 %7247 to i32
  %7252 = and i32 %7251, 254
  %7253 = call i32 @llvm.ctpop.i32(i32 %7252)
  %7254 = trunc i32 %7253 to i8
  %7255 = and i8 %7254, 1
  %7256 = xor i8 %7255, 1
  store i8 %7256, i8* %7250, align 1
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7257, align 1
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7259 = icmp eq i64 %7247, 0
  %7260 = zext i1 %7259 to i8
  store i8 %7260, i8* %7258, align 1
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7262 = lshr i64 %7247, 63
  %7263 = trunc i64 %7262 to i8
  store i8 %7263, i8* %7261, align 1
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7264, align 1
  store %struct.Memory* %loadMem_40c34d, %struct.Memory** %MEMORY
  %loadMem_40c351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 33
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %PC.i2290 = bitcast %union.anon* %7267 to i64*
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 5
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %RCX.i2291 = bitcast %union.anon* %7270 to i64*
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 7
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %RDX.i2292 = bitcast %union.anon* %7273 to i64*
  %7274 = load i64, i64* %RCX.i2291
  %7275 = load i64, i64* %RDX.i2292
  %7276 = load i64, i64* %PC.i2290
  %7277 = add i64 %7276, 3
  store i64 %7277, i64* %PC.i2290
  %7278 = add i64 %7275, %7274
  store i64 %7278, i64* %RCX.i2291, align 8
  %7279 = icmp ult i64 %7278, %7274
  %7280 = icmp ult i64 %7278, %7275
  %7281 = or i1 %7279, %7280
  %7282 = zext i1 %7281 to i8
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7282, i8* %7283, align 1
  %7284 = trunc i64 %7278 to i32
  %7285 = and i32 %7284, 255
  %7286 = call i32 @llvm.ctpop.i32(i32 %7285)
  %7287 = trunc i32 %7286 to i8
  %7288 = and i8 %7287, 1
  %7289 = xor i8 %7288, 1
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7289, i8* %7290, align 1
  %7291 = xor i64 %7275, %7274
  %7292 = xor i64 %7291, %7278
  %7293 = lshr i64 %7292, 4
  %7294 = trunc i64 %7293 to i8
  %7295 = and i8 %7294, 1
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7295, i8* %7296, align 1
  %7297 = icmp eq i64 %7278, 0
  %7298 = zext i1 %7297 to i8
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7298, i8* %7299, align 1
  %7300 = lshr i64 %7278, 63
  %7301 = trunc i64 %7300 to i8
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7301, i8* %7302, align 1
  %7303 = lshr i64 %7274, 63
  %7304 = lshr i64 %7275, 63
  %7305 = xor i64 %7300, %7303
  %7306 = xor i64 %7300, %7304
  %7307 = add i64 %7305, %7306
  %7308 = icmp eq i64 %7307, 2
  %7309 = zext i1 %7308 to i8
  %7310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7309, i8* %7310, align 1
  store %struct.Memory* %loadMem_40c351, %struct.Memory** %MEMORY
  %loadMem_40c354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 33
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %PC.i2287 = bitcast %union.anon* %7313 to i64*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 1
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %EAX.i2288 = bitcast %union.anon* %7316 to i32*
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7318 = getelementptr inbounds %struct.GPR, %struct.GPR* %7317, i32 0, i32 5
  %7319 = getelementptr inbounds %struct.Reg, %struct.Reg* %7318, i32 0, i32 0
  %RCX.i2289 = bitcast %union.anon* %7319 to i64*
  %7320 = load i64, i64* %RCX.i2289
  %7321 = add i64 %7320, 8
  %7322 = load i32, i32* %EAX.i2288
  %7323 = zext i32 %7322 to i64
  %7324 = load i64, i64* %PC.i2287
  %7325 = add i64 %7324, 3
  store i64 %7325, i64* %PC.i2287
  %7326 = inttoptr i64 %7321 to i32*
  store i32 %7322, i32* %7326
  store %struct.Memory* %loadMem_40c354, %struct.Memory** %MEMORY
  %loadMem_40c357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7328 = getelementptr inbounds %struct.GPR, %struct.GPR* %7327, i32 0, i32 33
  %7329 = getelementptr inbounds %struct.Reg, %struct.Reg* %7328, i32 0, i32 0
  %PC.i2284 = bitcast %union.anon* %7329 to i64*
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7331 = getelementptr inbounds %struct.GPR, %struct.GPR* %7330, i32 0, i32 1
  %7332 = getelementptr inbounds %struct.Reg, %struct.Reg* %7331, i32 0, i32 0
  %RAX.i2285 = bitcast %union.anon* %7332 to i64*
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7334 = getelementptr inbounds %struct.GPR, %struct.GPR* %7333, i32 0, i32 15
  %7335 = getelementptr inbounds %struct.Reg, %struct.Reg* %7334, i32 0, i32 0
  %RBP.i2286 = bitcast %union.anon* %7335 to i64*
  %7336 = load i64, i64* %RBP.i2286
  %7337 = sub i64 %7336, 52
  %7338 = load i64, i64* %PC.i2284
  %7339 = add i64 %7338, 3
  store i64 %7339, i64* %PC.i2284
  %7340 = inttoptr i64 %7337 to i32*
  %7341 = load i32, i32* %7340
  %7342 = zext i32 %7341 to i64
  store i64 %7342, i64* %RAX.i2285, align 8
  store %struct.Memory* %loadMem_40c357, %struct.Memory** %MEMORY
  %loadMem_40c35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7344 = getelementptr inbounds %struct.GPR, %struct.GPR* %7343, i32 0, i32 33
  %7345 = getelementptr inbounds %struct.Reg, %struct.Reg* %7344, i32 0, i32 0
  %PC.i2282 = bitcast %union.anon* %7345 to i64*
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7347 = getelementptr inbounds %struct.GPR, %struct.GPR* %7346, i32 0, i32 1
  %7348 = getelementptr inbounds %struct.Reg, %struct.Reg* %7347, i32 0, i32 0
  %RAX.i2283 = bitcast %union.anon* %7348 to i64*
  %7349 = load i64, i64* %RAX.i2283
  %7350 = load i64, i64* %PC.i2282
  %7351 = add i64 %7350, 2
  store i64 %7351, i64* %PC.i2282
  %7352 = trunc i64 %7349 to i32
  %7353 = shl i32 %7352, 1
  %7354 = icmp slt i32 %7352, 0
  %7355 = icmp slt i32 %7353, 0
  %7356 = xor i1 %7354, %7355
  %7357 = zext i32 %7353 to i64
  store i64 %7357, i64* %RAX.i2283, align 8
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7359 = zext i1 %7354 to i8
  store i8 %7359, i8* %7358, align 1
  %7360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7361 = and i32 %7353, 254
  %7362 = call i32 @llvm.ctpop.i32(i32 %7361)
  %7363 = trunc i32 %7362 to i8
  %7364 = and i8 %7363, 1
  %7365 = xor i8 %7364, 1
  store i8 %7365, i8* %7360, align 1
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7366, align 1
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7368 = icmp eq i32 %7353, 0
  %7369 = zext i1 %7368 to i8
  store i8 %7369, i8* %7367, align 1
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7371 = lshr i32 %7353, 31
  %7372 = trunc i32 %7371 to i8
  store i8 %7372, i8* %7370, align 1
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7374 = zext i1 %7356 to i8
  store i8 %7374, i8* %7373, align 1
  store %struct.Memory* %loadMem_40c35a, %struct.Memory** %MEMORY
  %loadMem_40c35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 33
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %PC.i2279 = bitcast %union.anon* %7377 to i64*
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 1
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %RAX.i2280 = bitcast %union.anon* %7380 to i64*
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7382 = getelementptr inbounds %struct.GPR, %struct.GPR* %7381, i32 0, i32 15
  %7383 = getelementptr inbounds %struct.Reg, %struct.Reg* %7382, i32 0, i32 0
  %RBP.i2281 = bitcast %union.anon* %7383 to i64*
  %7384 = load i64, i64* %RAX.i2280
  %7385 = load i64, i64* %RBP.i2281
  %7386 = sub i64 %7385, 56
  %7387 = load i64, i64* %PC.i2279
  %7388 = add i64 %7387, 3
  store i64 %7388, i64* %PC.i2279
  %7389 = trunc i64 %7384 to i32
  %7390 = inttoptr i64 %7386 to i32*
  %7391 = load i32, i32* %7390
  %7392 = add i32 %7391, %7389
  %7393 = zext i32 %7392 to i64
  store i64 %7393, i64* %RAX.i2280, align 8
  %7394 = icmp ult i32 %7392, %7389
  %7395 = icmp ult i32 %7392, %7391
  %7396 = or i1 %7394, %7395
  %7397 = zext i1 %7396 to i8
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7397, i8* %7398, align 1
  %7399 = and i32 %7392, 255
  %7400 = call i32 @llvm.ctpop.i32(i32 %7399)
  %7401 = trunc i32 %7400 to i8
  %7402 = and i8 %7401, 1
  %7403 = xor i8 %7402, 1
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7403, i8* %7404, align 1
  %7405 = xor i32 %7391, %7389
  %7406 = xor i32 %7405, %7392
  %7407 = lshr i32 %7406, 4
  %7408 = trunc i32 %7407 to i8
  %7409 = and i8 %7408, 1
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7409, i8* %7410, align 1
  %7411 = icmp eq i32 %7392, 0
  %7412 = zext i1 %7411 to i8
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7412, i8* %7413, align 1
  %7414 = lshr i32 %7392, 31
  %7415 = trunc i32 %7414 to i8
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7415, i8* %7416, align 1
  %7417 = lshr i32 %7389, 31
  %7418 = lshr i32 %7391, 31
  %7419 = xor i32 %7414, %7417
  %7420 = xor i32 %7414, %7418
  %7421 = add i32 %7419, %7420
  %7422 = icmp eq i32 %7421, 2
  %7423 = zext i1 %7422 to i8
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7423, i8* %7424, align 1
  store %struct.Memory* %loadMem_40c35d, %struct.Memory** %MEMORY
  %loadMem_40c360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7426 = getelementptr inbounds %struct.GPR, %struct.GPR* %7425, i32 0, i32 33
  %7427 = getelementptr inbounds %struct.Reg, %struct.Reg* %7426, i32 0, i32 0
  %PC.i2277 = bitcast %union.anon* %7427 to i64*
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7429 = getelementptr inbounds %struct.GPR, %struct.GPR* %7428, i32 0, i32 5
  %7430 = getelementptr inbounds %struct.Reg, %struct.Reg* %7429, i32 0, i32 0
  %RCX.i2278 = bitcast %union.anon* %7430 to i64*
  %7431 = load i64, i64* %PC.i2277
  %7432 = add i64 %7431, 8
  store i64 %7432, i64* %PC.i2277
  %7433 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7433, i64* %RCX.i2278, align 8
  store %struct.Memory* %loadMem_40c360, %struct.Memory** %MEMORY
  %loadMem_40c368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7435 = getelementptr inbounds %struct.GPR, %struct.GPR* %7434, i32 0, i32 33
  %7436 = getelementptr inbounds %struct.Reg, %struct.Reg* %7435, i32 0, i32 0
  %PC.i2275 = bitcast %union.anon* %7436 to i64*
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7438 = getelementptr inbounds %struct.GPR, %struct.GPR* %7437, i32 0, i32 5
  %7439 = getelementptr inbounds %struct.Reg, %struct.Reg* %7438, i32 0, i32 0
  %RCX.i2276 = bitcast %union.anon* %7439 to i64*
  %7440 = load i64, i64* %RCX.i2276
  %7441 = load i64, i64* %PC.i2275
  %7442 = add i64 %7441, 7
  store i64 %7442, i64* %PC.i2275
  %7443 = add i64 13112, %7440
  store i64 %7443, i64* %RCX.i2276, align 8
  %7444 = icmp ult i64 %7443, %7440
  %7445 = icmp ult i64 %7443, 13112
  %7446 = or i1 %7444, %7445
  %7447 = zext i1 %7446 to i8
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7447, i8* %7448, align 1
  %7449 = trunc i64 %7443 to i32
  %7450 = and i32 %7449, 255
  %7451 = call i32 @llvm.ctpop.i32(i32 %7450)
  %7452 = trunc i32 %7451 to i8
  %7453 = and i8 %7452, 1
  %7454 = xor i8 %7453, 1
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7454, i8* %7455, align 1
  %7456 = xor i64 13112, %7440
  %7457 = xor i64 %7456, %7443
  %7458 = lshr i64 %7457, 4
  %7459 = trunc i64 %7458 to i8
  %7460 = and i8 %7459, 1
  %7461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7460, i8* %7461, align 1
  %7462 = icmp eq i64 %7443, 0
  %7463 = zext i1 %7462 to i8
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7463, i8* %7464, align 1
  %7465 = lshr i64 %7443, 63
  %7466 = trunc i64 %7465 to i8
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7466, i8* %7467, align 1
  %7468 = lshr i64 %7440, 63
  %7469 = xor i64 %7465, %7468
  %7470 = add i64 %7469, %7465
  %7471 = icmp eq i64 %7470, 2
  %7472 = zext i1 %7471 to i8
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7472, i8* %7473, align 1
  store %struct.Memory* %loadMem_40c368, %struct.Memory** %MEMORY
  %loadMem_40c36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 33
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %PC.i2272 = bitcast %union.anon* %7476 to i64*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 7
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %RDX.i2273 = bitcast %union.anon* %7479 to i64*
  %7480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7481 = getelementptr inbounds %struct.GPR, %struct.GPR* %7480, i32 0, i32 15
  %7482 = getelementptr inbounds %struct.Reg, %struct.Reg* %7481, i32 0, i32 0
  %RBP.i2274 = bitcast %union.anon* %7482 to i64*
  %7483 = load i64, i64* %RBP.i2274
  %7484 = sub i64 %7483, 20
  %7485 = load i64, i64* %PC.i2272
  %7486 = add i64 %7485, 4
  store i64 %7486, i64* %PC.i2272
  %7487 = inttoptr i64 %7484 to i32*
  %7488 = load i32, i32* %7487
  %7489 = sext i32 %7488 to i64
  store i64 %7489, i64* %RDX.i2273, align 8
  store %struct.Memory* %loadMem_40c36f, %struct.Memory** %MEMORY
  %loadMem_40c373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 33
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %PC.i2270 = bitcast %union.anon* %7492 to i64*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 7
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RDX.i2271 = bitcast %union.anon* %7495 to i64*
  %7496 = load i64, i64* %RDX.i2271
  %7497 = load i64, i64* %PC.i2270
  %7498 = add i64 %7497, 4
  store i64 %7498, i64* %PC.i2270
  %7499 = shl i64 %7496, 5
  %7500 = icmp slt i64 %7499, 0
  %7501 = shl i64 %7499, 1
  store i64 %7501, i64* %RDX.i2271, align 8
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7503 = zext i1 %7500 to i8
  store i8 %7503, i8* %7502, align 1
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7505 = trunc i64 %7501 to i32
  %7506 = and i32 %7505, 254
  %7507 = call i32 @llvm.ctpop.i32(i32 %7506)
  %7508 = trunc i32 %7507 to i8
  %7509 = and i8 %7508, 1
  %7510 = xor i8 %7509, 1
  store i8 %7510, i8* %7504, align 1
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7511, align 1
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7513 = icmp eq i64 %7501, 0
  %7514 = zext i1 %7513 to i8
  store i8 %7514, i8* %7512, align 1
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7516 = lshr i64 %7501, 63
  %7517 = trunc i64 %7516 to i8
  store i8 %7517, i8* %7515, align 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7518, align 1
  store %struct.Memory* %loadMem_40c373, %struct.Memory** %MEMORY
  %loadMem_40c377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7520 = getelementptr inbounds %struct.GPR, %struct.GPR* %7519, i32 0, i32 33
  %7521 = getelementptr inbounds %struct.Reg, %struct.Reg* %7520, i32 0, i32 0
  %PC.i2267 = bitcast %union.anon* %7521 to i64*
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7523 = getelementptr inbounds %struct.GPR, %struct.GPR* %7522, i32 0, i32 5
  %7524 = getelementptr inbounds %struct.Reg, %struct.Reg* %7523, i32 0, i32 0
  %RCX.i2268 = bitcast %union.anon* %7524 to i64*
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7526 = getelementptr inbounds %struct.GPR, %struct.GPR* %7525, i32 0, i32 7
  %7527 = getelementptr inbounds %struct.Reg, %struct.Reg* %7526, i32 0, i32 0
  %RDX.i2269 = bitcast %union.anon* %7527 to i64*
  %7528 = load i64, i64* %RCX.i2268
  %7529 = load i64, i64* %RDX.i2269
  %7530 = load i64, i64* %PC.i2267
  %7531 = add i64 %7530, 3
  store i64 %7531, i64* %PC.i2267
  %7532 = add i64 %7529, %7528
  store i64 %7532, i64* %RCX.i2268, align 8
  %7533 = icmp ult i64 %7532, %7528
  %7534 = icmp ult i64 %7532, %7529
  %7535 = or i1 %7533, %7534
  %7536 = zext i1 %7535 to i8
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7536, i8* %7537, align 1
  %7538 = trunc i64 %7532 to i32
  %7539 = and i32 %7538, 255
  %7540 = call i32 @llvm.ctpop.i32(i32 %7539)
  %7541 = trunc i32 %7540 to i8
  %7542 = and i8 %7541, 1
  %7543 = xor i8 %7542, 1
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7543, i8* %7544, align 1
  %7545 = xor i64 %7529, %7528
  %7546 = xor i64 %7545, %7532
  %7547 = lshr i64 %7546, 4
  %7548 = trunc i64 %7547 to i8
  %7549 = and i8 %7548, 1
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7549, i8* %7550, align 1
  %7551 = icmp eq i64 %7532, 0
  %7552 = zext i1 %7551 to i8
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7552, i8* %7553, align 1
  %7554 = lshr i64 %7532, 63
  %7555 = trunc i64 %7554 to i8
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7555, i8* %7556, align 1
  %7557 = lshr i64 %7528, 63
  %7558 = lshr i64 %7529, 63
  %7559 = xor i64 %7554, %7557
  %7560 = xor i64 %7554, %7558
  %7561 = add i64 %7559, %7560
  %7562 = icmp eq i64 %7561, 2
  %7563 = zext i1 %7562 to i8
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7563, i8* %7564, align 1
  store %struct.Memory* %loadMem_40c377, %struct.Memory** %MEMORY
  %loadMem_40c37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7566 = getelementptr inbounds %struct.GPR, %struct.GPR* %7565, i32 0, i32 33
  %7567 = getelementptr inbounds %struct.Reg, %struct.Reg* %7566, i32 0, i32 0
  %PC.i2264 = bitcast %union.anon* %7567 to i64*
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7569 = getelementptr inbounds %struct.GPR, %struct.GPR* %7568, i32 0, i32 1
  %7570 = getelementptr inbounds %struct.Reg, %struct.Reg* %7569, i32 0, i32 0
  %EAX.i2265 = bitcast %union.anon* %7570 to i32*
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 5
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %RCX.i2266 = bitcast %union.anon* %7573 to i64*
  %7574 = load i64, i64* %RCX.i2266
  %7575 = add i64 %7574, 4
  %7576 = load i32, i32* %EAX.i2265
  %7577 = zext i32 %7576 to i64
  %7578 = load i64, i64* %PC.i2264
  %7579 = add i64 %7578, 3
  store i64 %7579, i64* %PC.i2264
  %7580 = inttoptr i64 %7575 to i32*
  store i32 %7576, i32* %7580
  store %struct.Memory* %loadMem_40c37a, %struct.Memory** %MEMORY
  %loadMem_40c37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 33
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %PC.i2261 = bitcast %union.anon* %7583 to i64*
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7585 = getelementptr inbounds %struct.GPR, %struct.GPR* %7584, i32 0, i32 1
  %7586 = getelementptr inbounds %struct.Reg, %struct.Reg* %7585, i32 0, i32 0
  %RAX.i2262 = bitcast %union.anon* %7586 to i64*
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7588 = getelementptr inbounds %struct.GPR, %struct.GPR* %7587, i32 0, i32 15
  %7589 = getelementptr inbounds %struct.Reg, %struct.Reg* %7588, i32 0, i32 0
  %RBP.i2263 = bitcast %union.anon* %7589 to i64*
  %7590 = load i64, i64* %RBP.i2263
  %7591 = sub i64 %7590, 52
  %7592 = load i64, i64* %PC.i2261
  %7593 = add i64 %7592, 3
  store i64 %7593, i64* %PC.i2261
  %7594 = inttoptr i64 %7591 to i32*
  %7595 = load i32, i32* %7594
  %7596 = zext i32 %7595 to i64
  store i64 %7596, i64* %RAX.i2262, align 8
  store %struct.Memory* %loadMem_40c37d, %struct.Memory** %MEMORY
  %loadMem_40c380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7598 = getelementptr inbounds %struct.GPR, %struct.GPR* %7597, i32 0, i32 33
  %7599 = getelementptr inbounds %struct.Reg, %struct.Reg* %7598, i32 0, i32 0
  %PC.i2258 = bitcast %union.anon* %7599 to i64*
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7601 = getelementptr inbounds %struct.GPR, %struct.GPR* %7600, i32 0, i32 9
  %7602 = getelementptr inbounds %struct.Reg, %struct.Reg* %7601, i32 0, i32 0
  %RSI.i2259 = bitcast %union.anon* %7602 to i64*
  %7603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7604 = getelementptr inbounds %struct.GPR, %struct.GPR* %7603, i32 0, i32 15
  %7605 = getelementptr inbounds %struct.Reg, %struct.Reg* %7604, i32 0, i32 0
  %RBP.i2260 = bitcast %union.anon* %7605 to i64*
  %7606 = load i64, i64* %RBP.i2260
  %7607 = sub i64 %7606, 56
  %7608 = load i64, i64* %PC.i2258
  %7609 = add i64 %7608, 3
  store i64 %7609, i64* %PC.i2258
  %7610 = inttoptr i64 %7607 to i32*
  %7611 = load i32, i32* %7610
  %7612 = zext i32 %7611 to i64
  store i64 %7612, i64* %RSI.i2259, align 8
  store %struct.Memory* %loadMem_40c380, %struct.Memory** %MEMORY
  %loadMem_40c383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 33
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %PC.i2256 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7617 = getelementptr inbounds %struct.GPR, %struct.GPR* %7616, i32 0, i32 9
  %7618 = getelementptr inbounds %struct.Reg, %struct.Reg* %7617, i32 0, i32 0
  %RSI.i2257 = bitcast %union.anon* %7618 to i64*
  %7619 = load i64, i64* %RSI.i2257
  %7620 = load i64, i64* %PC.i2256
  %7621 = add i64 %7620, 2
  store i64 %7621, i64* %PC.i2256
  %7622 = trunc i64 %7619 to i32
  %7623 = shl i32 %7622, 1
  %7624 = icmp slt i32 %7622, 0
  %7625 = icmp slt i32 %7623, 0
  %7626 = xor i1 %7624, %7625
  %7627 = zext i32 %7623 to i64
  store i64 %7627, i64* %RSI.i2257, align 8
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7629 = zext i1 %7624 to i8
  store i8 %7629, i8* %7628, align 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7631 = and i32 %7623, 254
  %7632 = call i32 @llvm.ctpop.i32(i32 %7631)
  %7633 = trunc i32 %7632 to i8
  %7634 = and i8 %7633, 1
  %7635 = xor i8 %7634, 1
  store i8 %7635, i8* %7630, align 1
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7636, align 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7638 = icmp eq i32 %7623, 0
  %7639 = zext i1 %7638 to i8
  store i8 %7639, i8* %7637, align 1
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7641 = lshr i32 %7623, 31
  %7642 = trunc i32 %7641 to i8
  store i8 %7642, i8* %7640, align 1
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7644 = zext i1 %7626 to i8
  store i8 %7644, i8* %7643, align 1
  store %struct.Memory* %loadMem_40c383, %struct.Memory** %MEMORY
  %loadMem_40c386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7646 = getelementptr inbounds %struct.GPR, %struct.GPR* %7645, i32 0, i32 33
  %7647 = getelementptr inbounds %struct.Reg, %struct.Reg* %7646, i32 0, i32 0
  %PC.i2253 = bitcast %union.anon* %7647 to i64*
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7649 = getelementptr inbounds %struct.GPR, %struct.GPR* %7648, i32 0, i32 9
  %7650 = getelementptr inbounds %struct.Reg, %struct.Reg* %7649, i32 0, i32 0
  %ESI.i2254 = bitcast %union.anon* %7650 to i32*
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 1
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %RAX.i2255 = bitcast %union.anon* %7653 to i64*
  %7654 = load i64, i64* %RAX.i2255
  %7655 = load i32, i32* %ESI.i2254
  %7656 = zext i32 %7655 to i64
  %7657 = load i64, i64* %PC.i2253
  %7658 = add i64 %7657, 2
  store i64 %7658, i64* %PC.i2253
  %7659 = trunc i64 %7654 to i32
  %7660 = sub i32 %7659, %7655
  %7661 = zext i32 %7660 to i64
  store i64 %7661, i64* %RAX.i2255, align 8
  %7662 = icmp ult i32 %7659, %7655
  %7663 = zext i1 %7662 to i8
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7663, i8* %7664, align 1
  %7665 = and i32 %7660, 255
  %7666 = call i32 @llvm.ctpop.i32(i32 %7665)
  %7667 = trunc i32 %7666 to i8
  %7668 = and i8 %7667, 1
  %7669 = xor i8 %7668, 1
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7669, i8* %7670, align 1
  %7671 = xor i64 %7656, %7654
  %7672 = trunc i64 %7671 to i32
  %7673 = xor i32 %7672, %7660
  %7674 = lshr i32 %7673, 4
  %7675 = trunc i32 %7674 to i8
  %7676 = and i8 %7675, 1
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7676, i8* %7677, align 1
  %7678 = icmp eq i32 %7660, 0
  %7679 = zext i1 %7678 to i8
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7679, i8* %7680, align 1
  %7681 = lshr i32 %7660, 31
  %7682 = trunc i32 %7681 to i8
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7682, i8* %7683, align 1
  %7684 = lshr i32 %7659, 31
  %7685 = lshr i32 %7655, 31
  %7686 = xor i32 %7685, %7684
  %7687 = xor i32 %7681, %7684
  %7688 = add i32 %7687, %7686
  %7689 = icmp eq i32 %7688, 2
  %7690 = zext i1 %7689 to i8
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7690, i8* %7691, align 1
  store %struct.Memory* %loadMem_40c386, %struct.Memory** %MEMORY
  %loadMem_40c388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 33
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %PC.i2251 = bitcast %union.anon* %7694 to i64*
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 5
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %RCX.i2252 = bitcast %union.anon* %7697 to i64*
  %7698 = load i64, i64* %PC.i2251
  %7699 = add i64 %7698, 8
  store i64 %7699, i64* %PC.i2251
  %7700 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7700, i64* %RCX.i2252, align 8
  store %struct.Memory* %loadMem_40c388, %struct.Memory** %MEMORY
  %loadMem_40c390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 33
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %PC.i2249 = bitcast %union.anon* %7703 to i64*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 5
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %RCX.i2250 = bitcast %union.anon* %7706 to i64*
  %7707 = load i64, i64* %RCX.i2250
  %7708 = load i64, i64* %PC.i2249
  %7709 = add i64 %7708, 7
  store i64 %7709, i64* %PC.i2249
  %7710 = add i64 13112, %7707
  store i64 %7710, i64* %RCX.i2250, align 8
  %7711 = icmp ult i64 %7710, %7707
  %7712 = icmp ult i64 %7710, 13112
  %7713 = or i1 %7711, %7712
  %7714 = zext i1 %7713 to i8
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7714, i8* %7715, align 1
  %7716 = trunc i64 %7710 to i32
  %7717 = and i32 %7716, 255
  %7718 = call i32 @llvm.ctpop.i32(i32 %7717)
  %7719 = trunc i32 %7718 to i8
  %7720 = and i8 %7719, 1
  %7721 = xor i8 %7720, 1
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7721, i8* %7722, align 1
  %7723 = xor i64 13112, %7707
  %7724 = xor i64 %7723, %7710
  %7725 = lshr i64 %7724, 4
  %7726 = trunc i64 %7725 to i8
  %7727 = and i8 %7726, 1
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7727, i8* %7728, align 1
  %7729 = icmp eq i64 %7710, 0
  %7730 = zext i1 %7729 to i8
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7730, i8* %7731, align 1
  %7732 = lshr i64 %7710, 63
  %7733 = trunc i64 %7732 to i8
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7733, i8* %7734, align 1
  %7735 = lshr i64 %7707, 63
  %7736 = xor i64 %7732, %7735
  %7737 = add i64 %7736, %7732
  %7738 = icmp eq i64 %7737, 2
  %7739 = zext i1 %7738 to i8
  %7740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7739, i8* %7740, align 1
  store %struct.Memory* %loadMem_40c390, %struct.Memory** %MEMORY
  %loadMem_40c397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 33
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %PC.i2246 = bitcast %union.anon* %7743 to i64*
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 7
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %RDX.i2247 = bitcast %union.anon* %7746 to i64*
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 15
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %RBP.i2248 = bitcast %union.anon* %7749 to i64*
  %7750 = load i64, i64* %RBP.i2248
  %7751 = sub i64 %7750, 20
  %7752 = load i64, i64* %PC.i2246
  %7753 = add i64 %7752, 4
  store i64 %7753, i64* %PC.i2246
  %7754 = inttoptr i64 %7751 to i32*
  %7755 = load i32, i32* %7754
  %7756 = sext i32 %7755 to i64
  store i64 %7756, i64* %RDX.i2247, align 8
  store %struct.Memory* %loadMem_40c397, %struct.Memory** %MEMORY
  %loadMem_40c39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7758 = getelementptr inbounds %struct.GPR, %struct.GPR* %7757, i32 0, i32 33
  %7759 = getelementptr inbounds %struct.Reg, %struct.Reg* %7758, i32 0, i32 0
  %PC.i2244 = bitcast %union.anon* %7759 to i64*
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 7
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %RDX.i2245 = bitcast %union.anon* %7762 to i64*
  %7763 = load i64, i64* %RDX.i2245
  %7764 = load i64, i64* %PC.i2244
  %7765 = add i64 %7764, 4
  store i64 %7765, i64* %PC.i2244
  %7766 = shl i64 %7763, 5
  %7767 = icmp slt i64 %7766, 0
  %7768 = shl i64 %7766, 1
  store i64 %7768, i64* %RDX.i2245, align 8
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7770 = zext i1 %7767 to i8
  store i8 %7770, i8* %7769, align 1
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7772 = trunc i64 %7768 to i32
  %7773 = and i32 %7772, 254
  %7774 = call i32 @llvm.ctpop.i32(i32 %7773)
  %7775 = trunc i32 %7774 to i8
  %7776 = and i8 %7775, 1
  %7777 = xor i8 %7776, 1
  store i8 %7777, i8* %7771, align 1
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7778, align 1
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7780 = icmp eq i64 %7768, 0
  %7781 = zext i1 %7780 to i8
  store i8 %7781, i8* %7779, align 1
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7783 = lshr i64 %7768, 63
  %7784 = trunc i64 %7783 to i8
  store i8 %7784, i8* %7782, align 1
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7785, align 1
  store %struct.Memory* %loadMem_40c39b, %struct.Memory** %MEMORY
  %loadMem_40c39f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 33
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %PC.i2241 = bitcast %union.anon* %7788 to i64*
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 5
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %RCX.i2242 = bitcast %union.anon* %7791 to i64*
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 7
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %RDX.i2243 = bitcast %union.anon* %7794 to i64*
  %7795 = load i64, i64* %RCX.i2242
  %7796 = load i64, i64* %RDX.i2243
  %7797 = load i64, i64* %PC.i2241
  %7798 = add i64 %7797, 3
  store i64 %7798, i64* %PC.i2241
  %7799 = add i64 %7796, %7795
  store i64 %7799, i64* %RCX.i2242, align 8
  %7800 = icmp ult i64 %7799, %7795
  %7801 = icmp ult i64 %7799, %7796
  %7802 = or i1 %7800, %7801
  %7803 = zext i1 %7802 to i8
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7803, i8* %7804, align 1
  %7805 = trunc i64 %7799 to i32
  %7806 = and i32 %7805, 255
  %7807 = call i32 @llvm.ctpop.i32(i32 %7806)
  %7808 = trunc i32 %7807 to i8
  %7809 = and i8 %7808, 1
  %7810 = xor i8 %7809, 1
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7810, i8* %7811, align 1
  %7812 = xor i64 %7796, %7795
  %7813 = xor i64 %7812, %7799
  %7814 = lshr i64 %7813, 4
  %7815 = trunc i64 %7814 to i8
  %7816 = and i8 %7815, 1
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7816, i8* %7817, align 1
  %7818 = icmp eq i64 %7799, 0
  %7819 = zext i1 %7818 to i8
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7819, i8* %7820, align 1
  %7821 = lshr i64 %7799, 63
  %7822 = trunc i64 %7821 to i8
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7822, i8* %7823, align 1
  %7824 = lshr i64 %7795, 63
  %7825 = lshr i64 %7796, 63
  %7826 = xor i64 %7821, %7824
  %7827 = xor i64 %7821, %7825
  %7828 = add i64 %7826, %7827
  %7829 = icmp eq i64 %7828, 2
  %7830 = zext i1 %7829 to i8
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7830, i8* %7831, align 1
  store %struct.Memory* %loadMem_40c39f, %struct.Memory** %MEMORY
  %loadMem_40c3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 33
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %PC.i2238 = bitcast %union.anon* %7834 to i64*
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 1
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %EAX.i2239 = bitcast %union.anon* %7837 to i32*
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 5
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %RCX.i2240 = bitcast %union.anon* %7840 to i64*
  %7841 = load i64, i64* %RCX.i2240
  %7842 = add i64 %7841, 12
  %7843 = load i32, i32* %EAX.i2239
  %7844 = zext i32 %7843 to i64
  %7845 = load i64, i64* %PC.i2238
  %7846 = add i64 %7845, 3
  store i64 %7846, i64* %PC.i2238
  %7847 = inttoptr i64 %7842 to i32*
  store i32 %7843, i32* %7847
  store %struct.Memory* %loadMem_40c3a2, %struct.Memory** %MEMORY
  %loadMem_40c3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 33
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %PC.i2235 = bitcast %union.anon* %7850 to i64*
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 1
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %RAX.i2236 = bitcast %union.anon* %7853 to i64*
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 15
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %RBP.i2237 = bitcast %union.anon* %7856 to i64*
  %7857 = load i64, i64* %RBP.i2237
  %7858 = sub i64 %7857, 20
  %7859 = load i64, i64* %PC.i2235
  %7860 = add i64 %7859, 3
  store i64 %7860, i64* %PC.i2235
  %7861 = inttoptr i64 %7858 to i32*
  %7862 = load i32, i32* %7861
  %7863 = zext i32 %7862 to i64
  store i64 %7863, i64* %RAX.i2236, align 8
  store %struct.Memory* %loadMem_40c3a5, %struct.Memory** %MEMORY
  %loadMem_40c3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 33
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %PC.i2233 = bitcast %union.anon* %7866 to i64*
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 1
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %RAX.i2234 = bitcast %union.anon* %7869 to i64*
  %7870 = load i64, i64* %RAX.i2234
  %7871 = load i64, i64* %PC.i2233
  %7872 = add i64 %7871, 3
  store i64 %7872, i64* %PC.i2233
  %7873 = trunc i64 %7870 to i32
  %7874 = add i32 1, %7873
  %7875 = zext i32 %7874 to i64
  store i64 %7875, i64* %RAX.i2234, align 8
  %7876 = icmp ult i32 %7874, %7873
  %7877 = icmp ult i32 %7874, 1
  %7878 = or i1 %7876, %7877
  %7879 = zext i1 %7878 to i8
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7879, i8* %7880, align 1
  %7881 = and i32 %7874, 255
  %7882 = call i32 @llvm.ctpop.i32(i32 %7881)
  %7883 = trunc i32 %7882 to i8
  %7884 = and i8 %7883, 1
  %7885 = xor i8 %7884, 1
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7885, i8* %7886, align 1
  %7887 = xor i64 1, %7870
  %7888 = trunc i64 %7887 to i32
  %7889 = xor i32 %7888, %7874
  %7890 = lshr i32 %7889, 4
  %7891 = trunc i32 %7890 to i8
  %7892 = and i8 %7891, 1
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7892, i8* %7893, align 1
  %7894 = icmp eq i32 %7874, 0
  %7895 = zext i1 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7895, i8* %7896, align 1
  %7897 = lshr i32 %7874, 31
  %7898 = trunc i32 %7897 to i8
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7898, i8* %7899, align 1
  %7900 = lshr i32 %7873, 31
  %7901 = xor i32 %7897, %7900
  %7902 = add i32 %7901, %7897
  %7903 = icmp eq i32 %7902, 2
  %7904 = zext i1 %7903 to i8
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7904, i8* %7905, align 1
  store %struct.Memory* %loadMem_40c3a8, %struct.Memory** %MEMORY
  %loadMem_40c3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 33
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %PC.i2230 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 1
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %EAX.i2231 = bitcast %union.anon* %7911 to i32*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 15
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %RBP.i2232 = bitcast %union.anon* %7914 to i64*
  %7915 = load i64, i64* %RBP.i2232
  %7916 = sub i64 %7915, 20
  %7917 = load i32, i32* %EAX.i2231
  %7918 = zext i32 %7917 to i64
  %7919 = load i64, i64* %PC.i2230
  %7920 = add i64 %7919, 3
  store i64 %7920, i64* %PC.i2230
  %7921 = inttoptr i64 %7916 to i32*
  store i32 %7917, i32* %7921
  store %struct.Memory* %loadMem_40c3ab, %struct.Memory** %MEMORY
  %loadMem_40c3ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7923 = getelementptr inbounds %struct.GPR, %struct.GPR* %7922, i32 0, i32 33
  %7924 = getelementptr inbounds %struct.Reg, %struct.Reg* %7923, i32 0, i32 0
  %PC.i2229 = bitcast %union.anon* %7924 to i64*
  %7925 = load i64, i64* %PC.i2229
  %7926 = add i64 %7925, -356
  %7927 = load i64, i64* %PC.i2229
  %7928 = add i64 %7927, 5
  store i64 %7928, i64* %PC.i2229
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7926, i64* %7929, align 8
  store %struct.Memory* %loadMem_40c3ae, %struct.Memory** %MEMORY
  br label %block_.L_40c24a

block_.L_40c3b3:                                  ; preds = %block_.L_40c24a
  %loadMem_40c3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 33
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %PC.i2227 = bitcast %union.anon* %7932 to i64*
  %7933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7934 = getelementptr inbounds %struct.GPR, %struct.GPR* %7933, i32 0, i32 15
  %7935 = getelementptr inbounds %struct.Reg, %struct.Reg* %7934, i32 0, i32 0
  %RBP.i2228 = bitcast %union.anon* %7935 to i64*
  %7936 = load i64, i64* %RBP.i2228
  %7937 = sub i64 %7936, 24
  %7938 = load i64, i64* %PC.i2227
  %7939 = add i64 %7938, 7
  store i64 %7939, i64* %PC.i2227
  %7940 = inttoptr i64 %7937 to i32*
  store i32 0, i32* %7940
  store %struct.Memory* %loadMem_40c3b3, %struct.Memory** %MEMORY
  br label %block_.L_40c3ba

block_.L_40c3ba:                                  ; preds = %block_.L_40c456, %block_.L_40c3b3
  %loadMem_40c3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7942 = getelementptr inbounds %struct.GPR, %struct.GPR* %7941, i32 0, i32 33
  %7943 = getelementptr inbounds %struct.Reg, %struct.Reg* %7942, i32 0, i32 0
  %PC.i2225 = bitcast %union.anon* %7943 to i64*
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 15
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %RBP.i2226 = bitcast %union.anon* %7946 to i64*
  %7947 = load i64, i64* %RBP.i2226
  %7948 = sub i64 %7947, 24
  %7949 = load i64, i64* %PC.i2225
  %7950 = add i64 %7949, 4
  store i64 %7950, i64* %PC.i2225
  %7951 = inttoptr i64 %7948 to i32*
  %7952 = load i32, i32* %7951
  %7953 = sub i32 %7952, 4
  %7954 = icmp ult i32 %7952, 4
  %7955 = zext i1 %7954 to i8
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7955, i8* %7956, align 1
  %7957 = and i32 %7953, 255
  %7958 = call i32 @llvm.ctpop.i32(i32 %7957)
  %7959 = trunc i32 %7958 to i8
  %7960 = and i8 %7959, 1
  %7961 = xor i8 %7960, 1
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7961, i8* %7962, align 1
  %7963 = xor i32 %7952, 4
  %7964 = xor i32 %7963, %7953
  %7965 = lshr i32 %7964, 4
  %7966 = trunc i32 %7965 to i8
  %7967 = and i8 %7966, 1
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7967, i8* %7968, align 1
  %7969 = icmp eq i32 %7953, 0
  %7970 = zext i1 %7969 to i8
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7970, i8* %7971, align 1
  %7972 = lshr i32 %7953, 31
  %7973 = trunc i32 %7972 to i8
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7973, i8* %7974, align 1
  %7975 = lshr i32 %7952, 31
  %7976 = xor i32 %7972, %7975
  %7977 = add i32 %7976, %7975
  %7978 = icmp eq i32 %7977, 2
  %7979 = zext i1 %7978 to i8
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7979, i8* %7980, align 1
  store %struct.Memory* %loadMem_40c3ba, %struct.Memory** %MEMORY
  %loadMem_40c3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 33
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %PC.i2224 = bitcast %union.anon* %7983 to i64*
  %7984 = load i64, i64* %PC.i2224
  %7985 = add i64 %7984, 239
  %7986 = load i64, i64* %PC.i2224
  %7987 = add i64 %7986, 6
  %7988 = load i64, i64* %PC.i2224
  %7989 = add i64 %7988, 6
  store i64 %7989, i64* %PC.i2224
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7991 = load i8, i8* %7990, align 1
  %7992 = icmp ne i8 %7991, 0
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7994 = load i8, i8* %7993, align 1
  %7995 = icmp ne i8 %7994, 0
  %7996 = xor i1 %7992, %7995
  %7997 = xor i1 %7996, true
  %7998 = zext i1 %7997 to i8
  store i8 %7998, i8* %BRANCH_TAKEN, align 1
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8000 = select i1 %7996, i64 %7987, i64 %7985
  store i64 %8000, i64* %7999, align 8
  store %struct.Memory* %loadMem_40c3be, %struct.Memory** %MEMORY
  %loadBr_40c3be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c3be = icmp eq i8 %loadBr_40c3be, 1
  br i1 %cmpBr_40c3be, label %block_.L_40c4ad, label %block_40c3c4

block_40c3c4:                                     ; preds = %block_.L_40c3ba
  %loadMem_40c3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 33
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %PC.i2222 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 15
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RBP.i2223 = bitcast %union.anon* %8006 to i64*
  %8007 = load i64, i64* %RBP.i2223
  %8008 = sub i64 %8007, 20
  %8009 = load i64, i64* %PC.i2222
  %8010 = add i64 %8009, 7
  store i64 %8010, i64* %PC.i2222
  %8011 = inttoptr i64 %8008 to i32*
  store i32 0, i32* %8011
  store %struct.Memory* %loadMem_40c3c4, %struct.Memory** %MEMORY
  br label %block_.L_40c3cb

block_.L_40c3cb:                                  ; preds = %block_40c3d5, %block_40c3c4
  %loadMem_40c3cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8013 = getelementptr inbounds %struct.GPR, %struct.GPR* %8012, i32 0, i32 33
  %8014 = getelementptr inbounds %struct.Reg, %struct.Reg* %8013, i32 0, i32 0
  %PC.i2220 = bitcast %union.anon* %8014 to i64*
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 15
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %RBP.i2221 = bitcast %union.anon* %8017 to i64*
  %8018 = load i64, i64* %RBP.i2221
  %8019 = sub i64 %8018, 20
  %8020 = load i64, i64* %PC.i2220
  %8021 = add i64 %8020, 4
  store i64 %8021, i64* %PC.i2220
  %8022 = inttoptr i64 %8019 to i32*
  %8023 = load i32, i32* %8022
  %8024 = sub i32 %8023, 2
  %8025 = icmp ult i32 %8023, 2
  %8026 = zext i1 %8025 to i8
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8026, i8* %8027, align 1
  %8028 = and i32 %8024, 255
  %8029 = call i32 @llvm.ctpop.i32(i32 %8028)
  %8030 = trunc i32 %8029 to i8
  %8031 = and i8 %8030, 1
  %8032 = xor i8 %8031, 1
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8032, i8* %8033, align 1
  %8034 = xor i32 %8023, 2
  %8035 = xor i32 %8034, %8024
  %8036 = lshr i32 %8035, 4
  %8037 = trunc i32 %8036 to i8
  %8038 = and i8 %8037, 1
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8038, i8* %8039, align 1
  %8040 = icmp eq i32 %8024, 0
  %8041 = zext i1 %8040 to i8
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8041, i8* %8042, align 1
  %8043 = lshr i32 %8024, 31
  %8044 = trunc i32 %8043 to i8
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8044, i8* %8045, align 1
  %8046 = lshr i32 %8023, 31
  %8047 = xor i32 %8043, %8046
  %8048 = add i32 %8047, %8046
  %8049 = icmp eq i32 %8048, 2
  %8050 = zext i1 %8049 to i8
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8050, i8* %8051, align 1
  store %struct.Memory* %loadMem_40c3cb, %struct.Memory** %MEMORY
  %loadMem_40c3cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 33
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %PC.i2219 = bitcast %union.anon* %8054 to i64*
  %8055 = load i64, i64* %PC.i2219
  %8056 = add i64 %8055, 135
  %8057 = load i64, i64* %PC.i2219
  %8058 = add i64 %8057, 6
  %8059 = load i64, i64* %PC.i2219
  %8060 = add i64 %8059, 6
  store i64 %8060, i64* %PC.i2219
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8062 = load i8, i8* %8061, align 1
  %8063 = icmp ne i8 %8062, 0
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8065 = load i8, i8* %8064, align 1
  %8066 = icmp ne i8 %8065, 0
  %8067 = xor i1 %8063, %8066
  %8068 = xor i1 %8067, true
  %8069 = zext i1 %8068 to i8
  store i8 %8069, i8* %BRANCH_TAKEN, align 1
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8071 = select i1 %8067, i64 %8058, i64 %8056
  store i64 %8071, i64* %8070, align 8
  store %struct.Memory* %loadMem_40c3cf, %struct.Memory** %MEMORY
  %loadBr_40c3cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c3cf = icmp eq i8 %loadBr_40c3cf, 1
  br i1 %cmpBr_40c3cf, label %block_.L_40c456, label %block_40c3d5

block_40c3d5:                                     ; preds = %block_.L_40c3cb
  %loadMem_40c3d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8073 = getelementptr inbounds %struct.GPR, %struct.GPR* %8072, i32 0, i32 33
  %8074 = getelementptr inbounds %struct.Reg, %struct.Reg* %8073, i32 0, i32 0
  %PC.i2216 = bitcast %union.anon* %8074 to i64*
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 1
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %RAX.i2217 = bitcast %union.anon* %8077 to i64*
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 15
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %RBP.i2218 = bitcast %union.anon* %8080 to i64*
  %8081 = load i64, i64* %RBP.i2218
  %8082 = sub i64 %8081, 176
  %8083 = load i64, i64* %PC.i2216
  %8084 = add i64 %8083, 7
  store i64 %8084, i64* %PC.i2216
  store i64 %8082, i64* %RAX.i2217, align 8
  store %struct.Memory* %loadMem_40c3d5, %struct.Memory** %MEMORY
  %loadMem_40c3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 33
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %PC.i2214 = bitcast %union.anon* %8087 to i64*
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 5
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %RCX.i2215 = bitcast %union.anon* %8090 to i64*
  %8091 = load i64, i64* %PC.i2214
  %8092 = add i64 %8091, 5
  store i64 %8092, i64* %PC.i2214
  store i64 3, i64* %RCX.i2215, align 8
  store %struct.Memory* %loadMem_40c3dc, %struct.Memory** %MEMORY
  %loadMem_40c3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8094 = getelementptr inbounds %struct.GPR, %struct.GPR* %8093, i32 0, i32 33
  %8095 = getelementptr inbounds %struct.Reg, %struct.Reg* %8094, i32 0, i32 0
  %PC.i2211 = bitcast %union.anon* %8095 to i64*
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8097 = getelementptr inbounds %struct.GPR, %struct.GPR* %8096, i32 0, i32 5
  %8098 = getelementptr inbounds %struct.Reg, %struct.Reg* %8097, i32 0, i32 0
  %RCX.i2212 = bitcast %union.anon* %8098 to i64*
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8100 = getelementptr inbounds %struct.GPR, %struct.GPR* %8099, i32 0, i32 15
  %8101 = getelementptr inbounds %struct.Reg, %struct.Reg* %8100, i32 0, i32 0
  %RBP.i2213 = bitcast %union.anon* %8101 to i64*
  %8102 = load i64, i64* %RCX.i2212
  %8103 = load i64, i64* %RBP.i2213
  %8104 = sub i64 %8103, 20
  %8105 = load i64, i64* %PC.i2211
  %8106 = add i64 %8105, 3
  store i64 %8106, i64* %PC.i2211
  %8107 = trunc i64 %8102 to i32
  %8108 = inttoptr i64 %8104 to i32*
  %8109 = load i32, i32* %8108
  %8110 = sub i32 %8107, %8109
  %8111 = zext i32 %8110 to i64
  store i64 %8111, i64* %RCX.i2212, align 8
  %8112 = icmp ult i32 %8107, %8109
  %8113 = zext i1 %8112 to i8
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8113, i8* %8114, align 1
  %8115 = and i32 %8110, 255
  %8116 = call i32 @llvm.ctpop.i32(i32 %8115)
  %8117 = trunc i32 %8116 to i8
  %8118 = and i8 %8117, 1
  %8119 = xor i8 %8118, 1
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8119, i8* %8120, align 1
  %8121 = xor i32 %8109, %8107
  %8122 = xor i32 %8121, %8110
  %8123 = lshr i32 %8122, 4
  %8124 = trunc i32 %8123 to i8
  %8125 = and i8 %8124, 1
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8125, i8* %8126, align 1
  %8127 = icmp eq i32 %8110, 0
  %8128 = zext i1 %8127 to i8
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8128, i8* %8129, align 1
  %8130 = lshr i32 %8110, 31
  %8131 = trunc i32 %8130 to i8
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8131, i8* %8132, align 1
  %8133 = lshr i32 %8107, 31
  %8134 = lshr i32 %8109, 31
  %8135 = xor i32 %8134, %8133
  %8136 = xor i32 %8130, %8133
  %8137 = add i32 %8136, %8135
  %8138 = icmp eq i32 %8137, 2
  %8139 = zext i1 %8138 to i8
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8139, i8* %8140, align 1
  store %struct.Memory* %loadMem_40c3e1, %struct.Memory** %MEMORY
  %loadMem_40c3e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8142 = getelementptr inbounds %struct.GPR, %struct.GPR* %8141, i32 0, i32 33
  %8143 = getelementptr inbounds %struct.Reg, %struct.Reg* %8142, i32 0, i32 0
  %PC.i2208 = bitcast %union.anon* %8143 to i64*
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8145 = getelementptr inbounds %struct.GPR, %struct.GPR* %8144, i32 0, i32 5
  %8146 = getelementptr inbounds %struct.Reg, %struct.Reg* %8145, i32 0, i32 0
  %ECX.i2209 = bitcast %union.anon* %8146 to i32*
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8148 = getelementptr inbounds %struct.GPR, %struct.GPR* %8147, i32 0, i32 15
  %8149 = getelementptr inbounds %struct.Reg, %struct.Reg* %8148, i32 0, i32 0
  %RBP.i2210 = bitcast %union.anon* %8149 to i64*
  %8150 = load i64, i64* %RBP.i2210
  %8151 = sub i64 %8150, 28
  %8152 = load i32, i32* %ECX.i2209
  %8153 = zext i32 %8152 to i64
  %8154 = load i64, i64* %PC.i2208
  %8155 = add i64 %8154, 3
  store i64 %8155, i64* %PC.i2208
  %8156 = inttoptr i64 %8151 to i32*
  store i32 %8152, i32* %8156
  store %struct.Memory* %loadMem_40c3e4, %struct.Memory** %MEMORY
  %loadMem_40c3e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8158 = getelementptr inbounds %struct.GPR, %struct.GPR* %8157, i32 0, i32 33
  %8159 = getelementptr inbounds %struct.Reg, %struct.Reg* %8158, i32 0, i32 0
  %PC.i2205 = bitcast %union.anon* %8159 to i64*
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8161 = getelementptr inbounds %struct.GPR, %struct.GPR* %8160, i32 0, i32 7
  %8162 = getelementptr inbounds %struct.Reg, %struct.Reg* %8161, i32 0, i32 0
  %RDX.i2206 = bitcast %union.anon* %8162 to i64*
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 15
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %RBP.i2207 = bitcast %union.anon* %8165 to i64*
  %8166 = load i64, i64* %RBP.i2207
  %8167 = sub i64 %8166, 20
  %8168 = load i64, i64* %PC.i2205
  %8169 = add i64 %8168, 4
  store i64 %8169, i64* %PC.i2205
  %8170 = inttoptr i64 %8167 to i32*
  %8171 = load i32, i32* %8170
  %8172 = sext i32 %8171 to i64
  store i64 %8172, i64* %RDX.i2206, align 8
  store %struct.Memory* %loadMem_40c3e7, %struct.Memory** %MEMORY
  %loadMem_40c3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8174 = getelementptr inbounds %struct.GPR, %struct.GPR* %8173, i32 0, i32 33
  %8175 = getelementptr inbounds %struct.Reg, %struct.Reg* %8174, i32 0, i32 0
  %PC.i2203 = bitcast %union.anon* %8175 to i64*
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8177 = getelementptr inbounds %struct.GPR, %struct.GPR* %8176, i32 0, i32 7
  %8178 = getelementptr inbounds %struct.Reg, %struct.Reg* %8177, i32 0, i32 0
  %RDX.i2204 = bitcast %union.anon* %8178 to i64*
  %8179 = load i64, i64* %RDX.i2204
  %8180 = load i64, i64* %PC.i2203
  %8181 = add i64 %8180, 4
  store i64 %8181, i64* %PC.i2203
  %8182 = shl i64 %8179, 3
  %8183 = icmp slt i64 %8182, 0
  %8184 = shl i64 %8182, 1
  store i64 %8184, i64* %RDX.i2204, align 8
  %8185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8186 = zext i1 %8183 to i8
  store i8 %8186, i8* %8185, align 1
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8188 = trunc i64 %8184 to i32
  %8189 = and i32 %8188, 254
  %8190 = call i32 @llvm.ctpop.i32(i32 %8189)
  %8191 = trunc i32 %8190 to i8
  %8192 = and i8 %8191, 1
  %8193 = xor i8 %8192, 1
  store i8 %8193, i8* %8187, align 1
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8194, align 1
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8196 = icmp eq i64 %8184, 0
  %8197 = zext i1 %8196 to i8
  store i8 %8197, i8* %8195, align 1
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8199 = lshr i64 %8184, 63
  %8200 = trunc i64 %8199 to i8
  store i8 %8200, i8* %8198, align 1
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8201, align 1
  store %struct.Memory* %loadMem_40c3eb, %struct.Memory** %MEMORY
  %loadMem_40c3ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8203 = getelementptr inbounds %struct.GPR, %struct.GPR* %8202, i32 0, i32 33
  %8204 = getelementptr inbounds %struct.Reg, %struct.Reg* %8203, i32 0, i32 0
  %PC.i2200 = bitcast %union.anon* %8204 to i64*
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8206 = getelementptr inbounds %struct.GPR, %struct.GPR* %8205, i32 0, i32 1
  %8207 = getelementptr inbounds %struct.Reg, %struct.Reg* %8206, i32 0, i32 0
  %RAX.i2201 = bitcast %union.anon* %8207 to i64*
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8209 = getelementptr inbounds %struct.GPR, %struct.GPR* %8208, i32 0, i32 9
  %8210 = getelementptr inbounds %struct.Reg, %struct.Reg* %8209, i32 0, i32 0
  %RSI.i2202 = bitcast %union.anon* %8210 to i64*
  %8211 = load i64, i64* %RAX.i2201
  %8212 = load i64, i64* %PC.i2200
  %8213 = add i64 %8212, 3
  store i64 %8213, i64* %PC.i2200
  store i64 %8211, i64* %RSI.i2202, align 8
  store %struct.Memory* %loadMem_40c3ef, %struct.Memory** %MEMORY
  %loadMem_40c3f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8215 = getelementptr inbounds %struct.GPR, %struct.GPR* %8214, i32 0, i32 33
  %8216 = getelementptr inbounds %struct.Reg, %struct.Reg* %8215, i32 0, i32 0
  %PC.i2197 = bitcast %union.anon* %8216 to i64*
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8218 = getelementptr inbounds %struct.GPR, %struct.GPR* %8217, i32 0, i32 7
  %8219 = getelementptr inbounds %struct.Reg, %struct.Reg* %8218, i32 0, i32 0
  %RDX.i2198 = bitcast %union.anon* %8219 to i64*
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8221 = getelementptr inbounds %struct.GPR, %struct.GPR* %8220, i32 0, i32 9
  %8222 = getelementptr inbounds %struct.Reg, %struct.Reg* %8221, i32 0, i32 0
  %RSI.i2199 = bitcast %union.anon* %8222 to i64*
  %8223 = load i64, i64* %RSI.i2199
  %8224 = load i64, i64* %RDX.i2198
  %8225 = load i64, i64* %PC.i2197
  %8226 = add i64 %8225, 3
  store i64 %8226, i64* %PC.i2197
  %8227 = add i64 %8224, %8223
  store i64 %8227, i64* %RSI.i2199, align 8
  %8228 = icmp ult i64 %8227, %8223
  %8229 = icmp ult i64 %8227, %8224
  %8230 = or i1 %8228, %8229
  %8231 = zext i1 %8230 to i8
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8231, i8* %8232, align 1
  %8233 = trunc i64 %8227 to i32
  %8234 = and i32 %8233, 255
  %8235 = call i32 @llvm.ctpop.i32(i32 %8234)
  %8236 = trunc i32 %8235 to i8
  %8237 = and i8 %8236, 1
  %8238 = xor i8 %8237, 1
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8238, i8* %8239, align 1
  %8240 = xor i64 %8224, %8223
  %8241 = xor i64 %8240, %8227
  %8242 = lshr i64 %8241, 4
  %8243 = trunc i64 %8242 to i8
  %8244 = and i8 %8243, 1
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8244, i8* %8245, align 1
  %8246 = icmp eq i64 %8227, 0
  %8247 = zext i1 %8246 to i8
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8247, i8* %8248, align 1
  %8249 = lshr i64 %8227, 63
  %8250 = trunc i64 %8249 to i8
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8250, i8* %8251, align 1
  %8252 = lshr i64 %8223, 63
  %8253 = lshr i64 %8224, 63
  %8254 = xor i64 %8249, %8252
  %8255 = xor i64 %8249, %8253
  %8256 = add i64 %8254, %8255
  %8257 = icmp eq i64 %8256, 2
  %8258 = zext i1 %8257 to i8
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8258, i8* %8259, align 1
  store %struct.Memory* %loadMem_40c3f2, %struct.Memory** %MEMORY
  %loadMem_40c3f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8261 = getelementptr inbounds %struct.GPR, %struct.GPR* %8260, i32 0, i32 33
  %8262 = getelementptr inbounds %struct.Reg, %struct.Reg* %8261, i32 0, i32 0
  %PC.i2194 = bitcast %union.anon* %8262 to i64*
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 7
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %RDX.i2195 = bitcast %union.anon* %8265 to i64*
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8267 = getelementptr inbounds %struct.GPR, %struct.GPR* %8266, i32 0, i32 15
  %8268 = getelementptr inbounds %struct.Reg, %struct.Reg* %8267, i32 0, i32 0
  %RBP.i2196 = bitcast %union.anon* %8268 to i64*
  %8269 = load i64, i64* %RBP.i2196
  %8270 = sub i64 %8269, 24
  %8271 = load i64, i64* %PC.i2194
  %8272 = add i64 %8271, 4
  store i64 %8272, i64* %PC.i2194
  %8273 = inttoptr i64 %8270 to i32*
  %8274 = load i32, i32* %8273
  %8275 = sext i32 %8274 to i64
  store i64 %8275, i64* %RDX.i2195, align 8
  store %struct.Memory* %loadMem_40c3f5, %struct.Memory** %MEMORY
  %loadMem_40c3f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8277 = getelementptr inbounds %struct.GPR, %struct.GPR* %8276, i32 0, i32 33
  %8278 = getelementptr inbounds %struct.Reg, %struct.Reg* %8277, i32 0, i32 0
  %PC.i2190 = bitcast %union.anon* %8278 to i64*
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8280 = getelementptr inbounds %struct.GPR, %struct.GPR* %8279, i32 0, i32 5
  %8281 = getelementptr inbounds %struct.Reg, %struct.Reg* %8280, i32 0, i32 0
  %RCX.i2191 = bitcast %union.anon* %8281 to i64*
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 7
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %RDX.i2192 = bitcast %union.anon* %8284 to i64*
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8286 = getelementptr inbounds %struct.GPR, %struct.GPR* %8285, i32 0, i32 9
  %8287 = getelementptr inbounds %struct.Reg, %struct.Reg* %8286, i32 0, i32 0
  %RSI.i2193 = bitcast %union.anon* %8287 to i64*
  %8288 = load i64, i64* %RSI.i2193
  %8289 = load i64, i64* %RDX.i2192
  %8290 = mul i64 %8289, 4
  %8291 = add i64 %8290, %8288
  %8292 = load i64, i64* %PC.i2190
  %8293 = add i64 %8292, 3
  store i64 %8293, i64* %PC.i2190
  %8294 = inttoptr i64 %8291 to i32*
  %8295 = load i32, i32* %8294
  %8296 = zext i32 %8295 to i64
  store i64 %8296, i64* %RCX.i2191, align 8
  store %struct.Memory* %loadMem_40c3f9, %struct.Memory** %MEMORY
  %loadMem_40c3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 33
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %PC.i2187 = bitcast %union.anon* %8299 to i64*
  %8300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8301 = getelementptr inbounds %struct.GPR, %struct.GPR* %8300, i32 0, i32 7
  %8302 = getelementptr inbounds %struct.Reg, %struct.Reg* %8301, i32 0, i32 0
  %RDX.i2188 = bitcast %union.anon* %8302 to i64*
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8304 = getelementptr inbounds %struct.GPR, %struct.GPR* %8303, i32 0, i32 15
  %8305 = getelementptr inbounds %struct.Reg, %struct.Reg* %8304, i32 0, i32 0
  %RBP.i2189 = bitcast %union.anon* %8305 to i64*
  %8306 = load i64, i64* %RBP.i2189
  %8307 = sub i64 %8306, 28
  %8308 = load i64, i64* %PC.i2187
  %8309 = add i64 %8308, 4
  store i64 %8309, i64* %PC.i2187
  %8310 = inttoptr i64 %8307 to i32*
  %8311 = load i32, i32* %8310
  %8312 = sext i32 %8311 to i64
  store i64 %8312, i64* %RDX.i2188, align 8
  store %struct.Memory* %loadMem_40c3fc, %struct.Memory** %MEMORY
  %loadMem_40c400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 33
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %PC.i2185 = bitcast %union.anon* %8315 to i64*
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 7
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %RDX.i2186 = bitcast %union.anon* %8318 to i64*
  %8319 = load i64, i64* %RDX.i2186
  %8320 = load i64, i64* %PC.i2185
  %8321 = add i64 %8320, 4
  store i64 %8321, i64* %PC.i2185
  %8322 = shl i64 %8319, 3
  %8323 = icmp slt i64 %8322, 0
  %8324 = shl i64 %8322, 1
  store i64 %8324, i64* %RDX.i2186, align 8
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8326 = zext i1 %8323 to i8
  store i8 %8326, i8* %8325, align 1
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8328 = trunc i64 %8324 to i32
  %8329 = and i32 %8328, 254
  %8330 = call i32 @llvm.ctpop.i32(i32 %8329)
  %8331 = trunc i32 %8330 to i8
  %8332 = and i8 %8331, 1
  %8333 = xor i8 %8332, 1
  store i8 %8333, i8* %8327, align 1
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8334, align 1
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8336 = icmp eq i64 %8324, 0
  %8337 = zext i1 %8336 to i8
  store i8 %8337, i8* %8335, align 1
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8339 = lshr i64 %8324, 63
  %8340 = trunc i64 %8339 to i8
  store i8 %8340, i8* %8338, align 1
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8341, align 1
  store %struct.Memory* %loadMem_40c400, %struct.Memory** %MEMORY
  %loadMem_40c404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 33
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %PC.i2182 = bitcast %union.anon* %8344 to i64*
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 1
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %RAX.i2183 = bitcast %union.anon* %8347 to i64*
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8349 = getelementptr inbounds %struct.GPR, %struct.GPR* %8348, i32 0, i32 9
  %8350 = getelementptr inbounds %struct.Reg, %struct.Reg* %8349, i32 0, i32 0
  %RSI.i2184 = bitcast %union.anon* %8350 to i64*
  %8351 = load i64, i64* %RAX.i2183
  %8352 = load i64, i64* %PC.i2182
  %8353 = add i64 %8352, 3
  store i64 %8353, i64* %PC.i2182
  store i64 %8351, i64* %RSI.i2184, align 8
  store %struct.Memory* %loadMem_40c404, %struct.Memory** %MEMORY
  %loadMem_40c407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 33
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %PC.i2179 = bitcast %union.anon* %8356 to i64*
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8358 = getelementptr inbounds %struct.GPR, %struct.GPR* %8357, i32 0, i32 7
  %8359 = getelementptr inbounds %struct.Reg, %struct.Reg* %8358, i32 0, i32 0
  %RDX.i2180 = bitcast %union.anon* %8359 to i64*
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8361 = getelementptr inbounds %struct.GPR, %struct.GPR* %8360, i32 0, i32 9
  %8362 = getelementptr inbounds %struct.Reg, %struct.Reg* %8361, i32 0, i32 0
  %RSI.i2181 = bitcast %union.anon* %8362 to i64*
  %8363 = load i64, i64* %RSI.i2181
  %8364 = load i64, i64* %RDX.i2180
  %8365 = load i64, i64* %PC.i2179
  %8366 = add i64 %8365, 3
  store i64 %8366, i64* %PC.i2179
  %8367 = add i64 %8364, %8363
  store i64 %8367, i64* %RSI.i2181, align 8
  %8368 = icmp ult i64 %8367, %8363
  %8369 = icmp ult i64 %8367, %8364
  %8370 = or i1 %8368, %8369
  %8371 = zext i1 %8370 to i8
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8371, i8* %8372, align 1
  %8373 = trunc i64 %8367 to i32
  %8374 = and i32 %8373, 255
  %8375 = call i32 @llvm.ctpop.i32(i32 %8374)
  %8376 = trunc i32 %8375 to i8
  %8377 = and i8 %8376, 1
  %8378 = xor i8 %8377, 1
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8378, i8* %8379, align 1
  %8380 = xor i64 %8364, %8363
  %8381 = xor i64 %8380, %8367
  %8382 = lshr i64 %8381, 4
  %8383 = trunc i64 %8382 to i8
  %8384 = and i8 %8383, 1
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8384, i8* %8385, align 1
  %8386 = icmp eq i64 %8367, 0
  %8387 = zext i1 %8386 to i8
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8387, i8* %8388, align 1
  %8389 = lshr i64 %8367, 63
  %8390 = trunc i64 %8389 to i8
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8390, i8* %8391, align 1
  %8392 = lshr i64 %8363, 63
  %8393 = lshr i64 %8364, 63
  %8394 = xor i64 %8389, %8392
  %8395 = xor i64 %8389, %8393
  %8396 = add i64 %8394, %8395
  %8397 = icmp eq i64 %8396, 2
  %8398 = zext i1 %8397 to i8
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8398, i8* %8399, align 1
  store %struct.Memory* %loadMem_40c407, %struct.Memory** %MEMORY
  %loadMem_40c40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 33
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %PC.i2176 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 7
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %RDX.i2177 = bitcast %union.anon* %8405 to i64*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 15
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %RBP.i2178 = bitcast %union.anon* %8408 to i64*
  %8409 = load i64, i64* %RBP.i2178
  %8410 = sub i64 %8409, 24
  %8411 = load i64, i64* %PC.i2176
  %8412 = add i64 %8411, 4
  store i64 %8412, i64* %PC.i2176
  %8413 = inttoptr i64 %8410 to i32*
  %8414 = load i32, i32* %8413
  %8415 = sext i32 %8414 to i64
  store i64 %8415, i64* %RDX.i2177, align 8
  store %struct.Memory* %loadMem_40c40a, %struct.Memory** %MEMORY
  %loadMem_40c40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8417 = getelementptr inbounds %struct.GPR, %struct.GPR* %8416, i32 0, i32 33
  %8418 = getelementptr inbounds %struct.Reg, %struct.Reg* %8417, i32 0, i32 0
  %PC.i2172 = bitcast %union.anon* %8418 to i64*
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 5
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %RCX.i2173 = bitcast %union.anon* %8421 to i64*
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 7
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %RDX.i2174 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 9
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RSI.i2175 = bitcast %union.anon* %8427 to i64*
  %8428 = load i64, i64* %RCX.i2173
  %8429 = load i64, i64* %RSI.i2175
  %8430 = load i64, i64* %RDX.i2174
  %8431 = mul i64 %8430, 4
  %8432 = add i64 %8431, %8429
  %8433 = load i64, i64* %PC.i2172
  %8434 = add i64 %8433, 3
  store i64 %8434, i64* %PC.i2172
  %8435 = trunc i64 %8428 to i32
  %8436 = inttoptr i64 %8432 to i32*
  %8437 = load i32, i32* %8436
  %8438 = add i32 %8437, %8435
  %8439 = zext i32 %8438 to i64
  store i64 %8439, i64* %RCX.i2173, align 8
  %8440 = icmp ult i32 %8438, %8435
  %8441 = icmp ult i32 %8438, %8437
  %8442 = or i1 %8440, %8441
  %8443 = zext i1 %8442 to i8
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8443, i8* %8444, align 1
  %8445 = and i32 %8438, 255
  %8446 = call i32 @llvm.ctpop.i32(i32 %8445)
  %8447 = trunc i32 %8446 to i8
  %8448 = and i8 %8447, 1
  %8449 = xor i8 %8448, 1
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8449, i8* %8450, align 1
  %8451 = xor i32 %8437, %8435
  %8452 = xor i32 %8451, %8438
  %8453 = lshr i32 %8452, 4
  %8454 = trunc i32 %8453 to i8
  %8455 = and i8 %8454, 1
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8455, i8* %8456, align 1
  %8457 = icmp eq i32 %8438, 0
  %8458 = zext i1 %8457 to i8
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8458, i8* %8459, align 1
  %8460 = lshr i32 %8438, 31
  %8461 = trunc i32 %8460 to i8
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8461, i8* %8462, align 1
  %8463 = lshr i32 %8435, 31
  %8464 = lshr i32 %8437, 31
  %8465 = xor i32 %8460, %8463
  %8466 = xor i32 %8460, %8464
  %8467 = add i32 %8465, %8466
  %8468 = icmp eq i32 %8467, 2
  %8469 = zext i1 %8468 to i8
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8469, i8* %8470, align 1
  store %struct.Memory* %loadMem_40c40e, %struct.Memory** %MEMORY
  %loadMem_40c411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 33
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %PC.i2169 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 7
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %RDX.i2170 = bitcast %union.anon* %8476 to i64*
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 15
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %RBP.i2171 = bitcast %union.anon* %8479 to i64*
  %8480 = load i64, i64* %RBP.i2171
  %8481 = sub i64 %8480, 20
  %8482 = load i64, i64* %PC.i2169
  %8483 = add i64 %8482, 4
  store i64 %8483, i64* %PC.i2169
  %8484 = inttoptr i64 %8481 to i32*
  %8485 = load i32, i32* %8484
  %8486 = sext i32 %8485 to i64
  store i64 %8486, i64* %RDX.i2170, align 8
  store %struct.Memory* %loadMem_40c411, %struct.Memory** %MEMORY
  %loadMem_40c415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 33
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %PC.i2165 = bitcast %union.anon* %8489 to i64*
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8491 = getelementptr inbounds %struct.GPR, %struct.GPR* %8490, i32 0, i32 5
  %8492 = getelementptr inbounds %struct.Reg, %struct.Reg* %8491, i32 0, i32 0
  %ECX.i2166 = bitcast %union.anon* %8492 to i32*
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 7
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %RDX.i2167 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 15
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %RBP.i2168 = bitcast %union.anon* %8498 to i64*
  %8499 = load i64, i64* %RBP.i2168
  %8500 = load i64, i64* %RDX.i2167
  %8501 = mul i64 %8500, 4
  %8502 = add i64 %8499, -64
  %8503 = add i64 %8502, %8501
  %8504 = load i32, i32* %ECX.i2166
  %8505 = zext i32 %8504 to i64
  %8506 = load i64, i64* %PC.i2165
  %8507 = add i64 %8506, 4
  store i64 %8507, i64* %PC.i2165
  %8508 = inttoptr i64 %8503 to i32*
  store i32 %8504, i32* %8508
  store %struct.Memory* %loadMem_40c415, %struct.Memory** %MEMORY
  %loadMem_40c419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8510 = getelementptr inbounds %struct.GPR, %struct.GPR* %8509, i32 0, i32 33
  %8511 = getelementptr inbounds %struct.Reg, %struct.Reg* %8510, i32 0, i32 0
  %PC.i2162 = bitcast %union.anon* %8511 to i64*
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 7
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %RDX.i2163 = bitcast %union.anon* %8514 to i64*
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8516 = getelementptr inbounds %struct.GPR, %struct.GPR* %8515, i32 0, i32 15
  %8517 = getelementptr inbounds %struct.Reg, %struct.Reg* %8516, i32 0, i32 0
  %RBP.i2164 = bitcast %union.anon* %8517 to i64*
  %8518 = load i64, i64* %RBP.i2164
  %8519 = sub i64 %8518, 20
  %8520 = load i64, i64* %PC.i2162
  %8521 = add i64 %8520, 4
  store i64 %8521, i64* %PC.i2162
  %8522 = inttoptr i64 %8519 to i32*
  %8523 = load i32, i32* %8522
  %8524 = sext i32 %8523 to i64
  store i64 %8524, i64* %RDX.i2163, align 8
  store %struct.Memory* %loadMem_40c419, %struct.Memory** %MEMORY
  %loadMem_40c41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 33
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %PC.i2160 = bitcast %union.anon* %8527 to i64*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 7
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %RDX.i2161 = bitcast %union.anon* %8530 to i64*
  %8531 = load i64, i64* %RDX.i2161
  %8532 = load i64, i64* %PC.i2160
  %8533 = add i64 %8532, 4
  store i64 %8533, i64* %PC.i2160
  %8534 = shl i64 %8531, 3
  %8535 = icmp slt i64 %8534, 0
  %8536 = shl i64 %8534, 1
  store i64 %8536, i64* %RDX.i2161, align 8
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8538 = zext i1 %8535 to i8
  store i8 %8538, i8* %8537, align 1
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8540 = trunc i64 %8536 to i32
  %8541 = and i32 %8540, 254
  %8542 = call i32 @llvm.ctpop.i32(i32 %8541)
  %8543 = trunc i32 %8542 to i8
  %8544 = and i8 %8543, 1
  %8545 = xor i8 %8544, 1
  store i8 %8545, i8* %8539, align 1
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8546, align 1
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8548 = icmp eq i64 %8536, 0
  %8549 = zext i1 %8548 to i8
  store i8 %8549, i8* %8547, align 1
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8551 = lshr i64 %8536, 63
  %8552 = trunc i64 %8551 to i8
  store i8 %8552, i8* %8550, align 1
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8553, align 1
  store %struct.Memory* %loadMem_40c41d, %struct.Memory** %MEMORY
  %loadMem_40c421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8555 = getelementptr inbounds %struct.GPR, %struct.GPR* %8554, i32 0, i32 33
  %8556 = getelementptr inbounds %struct.Reg, %struct.Reg* %8555, i32 0, i32 0
  %PC.i2157 = bitcast %union.anon* %8556 to i64*
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 1
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %RAX.i2158 = bitcast %union.anon* %8559 to i64*
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 9
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %RSI.i2159 = bitcast %union.anon* %8562 to i64*
  %8563 = load i64, i64* %RAX.i2158
  %8564 = load i64, i64* %PC.i2157
  %8565 = add i64 %8564, 3
  store i64 %8565, i64* %PC.i2157
  store i64 %8563, i64* %RSI.i2159, align 8
  store %struct.Memory* %loadMem_40c421, %struct.Memory** %MEMORY
  %loadMem_40c424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 33
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %PC.i2154 = bitcast %union.anon* %8568 to i64*
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8570 = getelementptr inbounds %struct.GPR, %struct.GPR* %8569, i32 0, i32 7
  %8571 = getelementptr inbounds %struct.Reg, %struct.Reg* %8570, i32 0, i32 0
  %RDX.i2155 = bitcast %union.anon* %8571 to i64*
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 9
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %RSI.i2156 = bitcast %union.anon* %8574 to i64*
  %8575 = load i64, i64* %RSI.i2156
  %8576 = load i64, i64* %RDX.i2155
  %8577 = load i64, i64* %PC.i2154
  %8578 = add i64 %8577, 3
  store i64 %8578, i64* %PC.i2154
  %8579 = add i64 %8576, %8575
  store i64 %8579, i64* %RSI.i2156, align 8
  %8580 = icmp ult i64 %8579, %8575
  %8581 = icmp ult i64 %8579, %8576
  %8582 = or i1 %8580, %8581
  %8583 = zext i1 %8582 to i8
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8583, i8* %8584, align 1
  %8585 = trunc i64 %8579 to i32
  %8586 = and i32 %8585, 255
  %8587 = call i32 @llvm.ctpop.i32(i32 %8586)
  %8588 = trunc i32 %8587 to i8
  %8589 = and i8 %8588, 1
  %8590 = xor i8 %8589, 1
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8590, i8* %8591, align 1
  %8592 = xor i64 %8576, %8575
  %8593 = xor i64 %8592, %8579
  %8594 = lshr i64 %8593, 4
  %8595 = trunc i64 %8594 to i8
  %8596 = and i8 %8595, 1
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8596, i8* %8597, align 1
  %8598 = icmp eq i64 %8579, 0
  %8599 = zext i1 %8598 to i8
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8599, i8* %8600, align 1
  %8601 = lshr i64 %8579, 63
  %8602 = trunc i64 %8601 to i8
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8602, i8* %8603, align 1
  %8604 = lshr i64 %8575, 63
  %8605 = lshr i64 %8576, 63
  %8606 = xor i64 %8601, %8604
  %8607 = xor i64 %8601, %8605
  %8608 = add i64 %8606, %8607
  %8609 = icmp eq i64 %8608, 2
  %8610 = zext i1 %8609 to i8
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8610, i8* %8611, align 1
  store %struct.Memory* %loadMem_40c424, %struct.Memory** %MEMORY
  %loadMem_40c427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 33
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %PC.i2151 = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 7
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %RDX.i2152 = bitcast %union.anon* %8617 to i64*
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 15
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %RBP.i2153 = bitcast %union.anon* %8620 to i64*
  %8621 = load i64, i64* %RBP.i2153
  %8622 = sub i64 %8621, 24
  %8623 = load i64, i64* %PC.i2151
  %8624 = add i64 %8623, 4
  store i64 %8624, i64* %PC.i2151
  %8625 = inttoptr i64 %8622 to i32*
  %8626 = load i32, i32* %8625
  %8627 = sext i32 %8626 to i64
  store i64 %8627, i64* %RDX.i2152, align 8
  store %struct.Memory* %loadMem_40c427, %struct.Memory** %MEMORY
  %loadMem_40c42b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8629 = getelementptr inbounds %struct.GPR, %struct.GPR* %8628, i32 0, i32 33
  %8630 = getelementptr inbounds %struct.Reg, %struct.Reg* %8629, i32 0, i32 0
  %PC.i2147 = bitcast %union.anon* %8630 to i64*
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8632 = getelementptr inbounds %struct.GPR, %struct.GPR* %8631, i32 0, i32 5
  %8633 = getelementptr inbounds %struct.Reg, %struct.Reg* %8632, i32 0, i32 0
  %RCX.i2148 = bitcast %union.anon* %8633 to i64*
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8635 = getelementptr inbounds %struct.GPR, %struct.GPR* %8634, i32 0, i32 7
  %8636 = getelementptr inbounds %struct.Reg, %struct.Reg* %8635, i32 0, i32 0
  %RDX.i2149 = bitcast %union.anon* %8636 to i64*
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8638 = getelementptr inbounds %struct.GPR, %struct.GPR* %8637, i32 0, i32 9
  %8639 = getelementptr inbounds %struct.Reg, %struct.Reg* %8638, i32 0, i32 0
  %RSI.i2150 = bitcast %union.anon* %8639 to i64*
  %8640 = load i64, i64* %RSI.i2150
  %8641 = load i64, i64* %RDX.i2149
  %8642 = mul i64 %8641, 4
  %8643 = add i64 %8642, %8640
  %8644 = load i64, i64* %PC.i2147
  %8645 = add i64 %8644, 3
  store i64 %8645, i64* %PC.i2147
  %8646 = inttoptr i64 %8643 to i32*
  %8647 = load i32, i32* %8646
  %8648 = zext i32 %8647 to i64
  store i64 %8648, i64* %RCX.i2148, align 8
  store %struct.Memory* %loadMem_40c42b, %struct.Memory** %MEMORY
  %loadMem_40c42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 33
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %PC.i2144 = bitcast %union.anon* %8651 to i64*
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 7
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %RDX.i2145 = bitcast %union.anon* %8654 to i64*
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 15
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %RBP.i2146 = bitcast %union.anon* %8657 to i64*
  %8658 = load i64, i64* %RBP.i2146
  %8659 = sub i64 %8658, 28
  %8660 = load i64, i64* %PC.i2144
  %8661 = add i64 %8660, 4
  store i64 %8661, i64* %PC.i2144
  %8662 = inttoptr i64 %8659 to i32*
  %8663 = load i32, i32* %8662
  %8664 = sext i32 %8663 to i64
  store i64 %8664, i64* %RDX.i2145, align 8
  store %struct.Memory* %loadMem_40c42e, %struct.Memory** %MEMORY
  %loadMem_40c432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 33
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %PC.i2142 = bitcast %union.anon* %8667 to i64*
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8669 = getelementptr inbounds %struct.GPR, %struct.GPR* %8668, i32 0, i32 7
  %8670 = getelementptr inbounds %struct.Reg, %struct.Reg* %8669, i32 0, i32 0
  %RDX.i2143 = bitcast %union.anon* %8670 to i64*
  %8671 = load i64, i64* %RDX.i2143
  %8672 = load i64, i64* %PC.i2142
  %8673 = add i64 %8672, 4
  store i64 %8673, i64* %PC.i2142
  %8674 = shl i64 %8671, 3
  %8675 = icmp slt i64 %8674, 0
  %8676 = shl i64 %8674, 1
  store i64 %8676, i64* %RDX.i2143, align 8
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8678 = zext i1 %8675 to i8
  store i8 %8678, i8* %8677, align 1
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8680 = trunc i64 %8676 to i32
  %8681 = and i32 %8680, 254
  %8682 = call i32 @llvm.ctpop.i32(i32 %8681)
  %8683 = trunc i32 %8682 to i8
  %8684 = and i8 %8683, 1
  %8685 = xor i8 %8684, 1
  store i8 %8685, i8* %8679, align 1
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8686, align 1
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8688 = icmp eq i64 %8676, 0
  %8689 = zext i1 %8688 to i8
  store i8 %8689, i8* %8687, align 1
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8691 = lshr i64 %8676, 63
  %8692 = trunc i64 %8691 to i8
  store i8 %8692, i8* %8690, align 1
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8693, align 1
  store %struct.Memory* %loadMem_40c432, %struct.Memory** %MEMORY
  %loadMem_40c436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 33
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %PC.i2139 = bitcast %union.anon* %8696 to i64*
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8698 = getelementptr inbounds %struct.GPR, %struct.GPR* %8697, i32 0, i32 1
  %8699 = getelementptr inbounds %struct.Reg, %struct.Reg* %8698, i32 0, i32 0
  %RAX.i2140 = bitcast %union.anon* %8699 to i64*
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 7
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %RDX.i2141 = bitcast %union.anon* %8702 to i64*
  %8703 = load i64, i64* %RAX.i2140
  %8704 = load i64, i64* %RDX.i2141
  %8705 = load i64, i64* %PC.i2139
  %8706 = add i64 %8705, 3
  store i64 %8706, i64* %PC.i2139
  %8707 = add i64 %8704, %8703
  store i64 %8707, i64* %RAX.i2140, align 8
  %8708 = icmp ult i64 %8707, %8703
  %8709 = icmp ult i64 %8707, %8704
  %8710 = or i1 %8708, %8709
  %8711 = zext i1 %8710 to i8
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8711, i8* %8712, align 1
  %8713 = trunc i64 %8707 to i32
  %8714 = and i32 %8713, 255
  %8715 = call i32 @llvm.ctpop.i32(i32 %8714)
  %8716 = trunc i32 %8715 to i8
  %8717 = and i8 %8716, 1
  %8718 = xor i8 %8717, 1
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8718, i8* %8719, align 1
  %8720 = xor i64 %8704, %8703
  %8721 = xor i64 %8720, %8707
  %8722 = lshr i64 %8721, 4
  %8723 = trunc i64 %8722 to i8
  %8724 = and i8 %8723, 1
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8724, i8* %8725, align 1
  %8726 = icmp eq i64 %8707, 0
  %8727 = zext i1 %8726 to i8
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8727, i8* %8728, align 1
  %8729 = lshr i64 %8707, 63
  %8730 = trunc i64 %8729 to i8
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8730, i8* %8731, align 1
  %8732 = lshr i64 %8703, 63
  %8733 = lshr i64 %8704, 63
  %8734 = xor i64 %8729, %8732
  %8735 = xor i64 %8729, %8733
  %8736 = add i64 %8734, %8735
  %8737 = icmp eq i64 %8736, 2
  %8738 = zext i1 %8737 to i8
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8738, i8* %8739, align 1
  store %struct.Memory* %loadMem_40c436, %struct.Memory** %MEMORY
  %loadMem_40c439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8741 = getelementptr inbounds %struct.GPR, %struct.GPR* %8740, i32 0, i32 33
  %8742 = getelementptr inbounds %struct.Reg, %struct.Reg* %8741, i32 0, i32 0
  %PC.i2136 = bitcast %union.anon* %8742 to i64*
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8744 = getelementptr inbounds %struct.GPR, %struct.GPR* %8743, i32 0, i32 7
  %8745 = getelementptr inbounds %struct.Reg, %struct.Reg* %8744, i32 0, i32 0
  %RDX.i2137 = bitcast %union.anon* %8745 to i64*
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8747 = getelementptr inbounds %struct.GPR, %struct.GPR* %8746, i32 0, i32 15
  %8748 = getelementptr inbounds %struct.Reg, %struct.Reg* %8747, i32 0, i32 0
  %RBP.i2138 = bitcast %union.anon* %8748 to i64*
  %8749 = load i64, i64* %RBP.i2138
  %8750 = sub i64 %8749, 24
  %8751 = load i64, i64* %PC.i2136
  %8752 = add i64 %8751, 4
  store i64 %8752, i64* %PC.i2136
  %8753 = inttoptr i64 %8750 to i32*
  %8754 = load i32, i32* %8753
  %8755 = sext i32 %8754 to i64
  store i64 %8755, i64* %RDX.i2137, align 8
  store %struct.Memory* %loadMem_40c439, %struct.Memory** %MEMORY
  %loadMem_40c43d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8757 = getelementptr inbounds %struct.GPR, %struct.GPR* %8756, i32 0, i32 33
  %8758 = getelementptr inbounds %struct.Reg, %struct.Reg* %8757, i32 0, i32 0
  %PC.i2132 = bitcast %union.anon* %8758 to i64*
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8760 = getelementptr inbounds %struct.GPR, %struct.GPR* %8759, i32 0, i32 1
  %8761 = getelementptr inbounds %struct.Reg, %struct.Reg* %8760, i32 0, i32 0
  %RAX.i2133 = bitcast %union.anon* %8761 to i64*
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8763 = getelementptr inbounds %struct.GPR, %struct.GPR* %8762, i32 0, i32 5
  %8764 = getelementptr inbounds %struct.Reg, %struct.Reg* %8763, i32 0, i32 0
  %RCX.i2134 = bitcast %union.anon* %8764 to i64*
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 7
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %RDX.i2135 = bitcast %union.anon* %8767 to i64*
  %8768 = load i64, i64* %RCX.i2134
  %8769 = load i64, i64* %RAX.i2133
  %8770 = load i64, i64* %RDX.i2135
  %8771 = mul i64 %8770, 4
  %8772 = add i64 %8771, %8769
  %8773 = load i64, i64* %PC.i2132
  %8774 = add i64 %8773, 3
  store i64 %8774, i64* %PC.i2132
  %8775 = trunc i64 %8768 to i32
  %8776 = inttoptr i64 %8772 to i32*
  %8777 = load i32, i32* %8776
  %8778 = sub i32 %8775, %8777
  %8779 = zext i32 %8778 to i64
  store i64 %8779, i64* %RCX.i2134, align 8
  %8780 = icmp ult i32 %8775, %8777
  %8781 = zext i1 %8780 to i8
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8781, i8* %8782, align 1
  %8783 = and i32 %8778, 255
  %8784 = call i32 @llvm.ctpop.i32(i32 %8783)
  %8785 = trunc i32 %8784 to i8
  %8786 = and i8 %8785, 1
  %8787 = xor i8 %8786, 1
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8787, i8* %8788, align 1
  %8789 = xor i32 %8777, %8775
  %8790 = xor i32 %8789, %8778
  %8791 = lshr i32 %8790, 4
  %8792 = trunc i32 %8791 to i8
  %8793 = and i8 %8792, 1
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8793, i8* %8794, align 1
  %8795 = icmp eq i32 %8778, 0
  %8796 = zext i1 %8795 to i8
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8796, i8* %8797, align 1
  %8798 = lshr i32 %8778, 31
  %8799 = trunc i32 %8798 to i8
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8799, i8* %8800, align 1
  %8801 = lshr i32 %8775, 31
  %8802 = lshr i32 %8777, 31
  %8803 = xor i32 %8802, %8801
  %8804 = xor i32 %8798, %8801
  %8805 = add i32 %8804, %8803
  %8806 = icmp eq i32 %8805, 2
  %8807 = zext i1 %8806 to i8
  %8808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8807, i8* %8808, align 1
  store %struct.Memory* %loadMem_40c43d, %struct.Memory** %MEMORY
  %loadMem_40c440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8810 = getelementptr inbounds %struct.GPR, %struct.GPR* %8809, i32 0, i32 33
  %8811 = getelementptr inbounds %struct.Reg, %struct.Reg* %8810, i32 0, i32 0
  %PC.i2129 = bitcast %union.anon* %8811 to i64*
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8813 = getelementptr inbounds %struct.GPR, %struct.GPR* %8812, i32 0, i32 1
  %8814 = getelementptr inbounds %struct.Reg, %struct.Reg* %8813, i32 0, i32 0
  %RAX.i2130 = bitcast %union.anon* %8814 to i64*
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 15
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %RBP.i2131 = bitcast %union.anon* %8817 to i64*
  %8818 = load i64, i64* %RBP.i2131
  %8819 = sub i64 %8818, 28
  %8820 = load i64, i64* %PC.i2129
  %8821 = add i64 %8820, 4
  store i64 %8821, i64* %PC.i2129
  %8822 = inttoptr i64 %8819 to i32*
  %8823 = load i32, i32* %8822
  %8824 = sext i32 %8823 to i64
  store i64 %8824, i64* %RAX.i2130, align 8
  store %struct.Memory* %loadMem_40c440, %struct.Memory** %MEMORY
  %loadMem_40c444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8826 = getelementptr inbounds %struct.GPR, %struct.GPR* %8825, i32 0, i32 33
  %8827 = getelementptr inbounds %struct.Reg, %struct.Reg* %8826, i32 0, i32 0
  %PC.i2125 = bitcast %union.anon* %8827 to i64*
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8829 = getelementptr inbounds %struct.GPR, %struct.GPR* %8828, i32 0, i32 5
  %8830 = getelementptr inbounds %struct.Reg, %struct.Reg* %8829, i32 0, i32 0
  %ECX.i2126 = bitcast %union.anon* %8830 to i32*
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8832 = getelementptr inbounds %struct.GPR, %struct.GPR* %8831, i32 0, i32 1
  %8833 = getelementptr inbounds %struct.Reg, %struct.Reg* %8832, i32 0, i32 0
  %RAX.i2127 = bitcast %union.anon* %8833 to i64*
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 15
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %RBP.i2128 = bitcast %union.anon* %8836 to i64*
  %8837 = load i64, i64* %RBP.i2128
  %8838 = load i64, i64* %RAX.i2127
  %8839 = mul i64 %8838, 4
  %8840 = add i64 %8837, -64
  %8841 = add i64 %8840, %8839
  %8842 = load i32, i32* %ECX.i2126
  %8843 = zext i32 %8842 to i64
  %8844 = load i64, i64* %PC.i2125
  %8845 = add i64 %8844, 4
  store i64 %8845, i64* %PC.i2125
  %8846 = inttoptr i64 %8841 to i32*
  store i32 %8842, i32* %8846
  store %struct.Memory* %loadMem_40c444, %struct.Memory** %MEMORY
  %loadMem_40c448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8848 = getelementptr inbounds %struct.GPR, %struct.GPR* %8847, i32 0, i32 33
  %8849 = getelementptr inbounds %struct.Reg, %struct.Reg* %8848, i32 0, i32 0
  %PC.i2122 = bitcast %union.anon* %8849 to i64*
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8851 = getelementptr inbounds %struct.GPR, %struct.GPR* %8850, i32 0, i32 1
  %8852 = getelementptr inbounds %struct.Reg, %struct.Reg* %8851, i32 0, i32 0
  %RAX.i2123 = bitcast %union.anon* %8852 to i64*
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 15
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %RBP.i2124 = bitcast %union.anon* %8855 to i64*
  %8856 = load i64, i64* %RBP.i2124
  %8857 = sub i64 %8856, 20
  %8858 = load i64, i64* %PC.i2122
  %8859 = add i64 %8858, 3
  store i64 %8859, i64* %PC.i2122
  %8860 = inttoptr i64 %8857 to i32*
  %8861 = load i32, i32* %8860
  %8862 = zext i32 %8861 to i64
  store i64 %8862, i64* %RAX.i2123, align 8
  store %struct.Memory* %loadMem_40c448, %struct.Memory** %MEMORY
  %loadMem_40c44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8864 = getelementptr inbounds %struct.GPR, %struct.GPR* %8863, i32 0, i32 33
  %8865 = getelementptr inbounds %struct.Reg, %struct.Reg* %8864, i32 0, i32 0
  %PC.i2120 = bitcast %union.anon* %8865 to i64*
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8867 = getelementptr inbounds %struct.GPR, %struct.GPR* %8866, i32 0, i32 1
  %8868 = getelementptr inbounds %struct.Reg, %struct.Reg* %8867, i32 0, i32 0
  %RAX.i2121 = bitcast %union.anon* %8868 to i64*
  %8869 = load i64, i64* %RAX.i2121
  %8870 = load i64, i64* %PC.i2120
  %8871 = add i64 %8870, 3
  store i64 %8871, i64* %PC.i2120
  %8872 = trunc i64 %8869 to i32
  %8873 = add i32 1, %8872
  %8874 = zext i32 %8873 to i64
  store i64 %8874, i64* %RAX.i2121, align 8
  %8875 = icmp ult i32 %8873, %8872
  %8876 = icmp ult i32 %8873, 1
  %8877 = or i1 %8875, %8876
  %8878 = zext i1 %8877 to i8
  %8879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8878, i8* %8879, align 1
  %8880 = and i32 %8873, 255
  %8881 = call i32 @llvm.ctpop.i32(i32 %8880)
  %8882 = trunc i32 %8881 to i8
  %8883 = and i8 %8882, 1
  %8884 = xor i8 %8883, 1
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8884, i8* %8885, align 1
  %8886 = xor i64 1, %8869
  %8887 = trunc i64 %8886 to i32
  %8888 = xor i32 %8887, %8873
  %8889 = lshr i32 %8888, 4
  %8890 = trunc i32 %8889 to i8
  %8891 = and i8 %8890, 1
  %8892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8891, i8* %8892, align 1
  %8893 = icmp eq i32 %8873, 0
  %8894 = zext i1 %8893 to i8
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8894, i8* %8895, align 1
  %8896 = lshr i32 %8873, 31
  %8897 = trunc i32 %8896 to i8
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8897, i8* %8898, align 1
  %8899 = lshr i32 %8872, 31
  %8900 = xor i32 %8896, %8899
  %8901 = add i32 %8900, %8896
  %8902 = icmp eq i32 %8901, 2
  %8903 = zext i1 %8902 to i8
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8903, i8* %8904, align 1
  store %struct.Memory* %loadMem_40c44b, %struct.Memory** %MEMORY
  %loadMem_40c44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 33
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %PC.i2117 = bitcast %union.anon* %8907 to i64*
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8909 = getelementptr inbounds %struct.GPR, %struct.GPR* %8908, i32 0, i32 1
  %8910 = getelementptr inbounds %struct.Reg, %struct.Reg* %8909, i32 0, i32 0
  %EAX.i2118 = bitcast %union.anon* %8910 to i32*
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 15
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %RBP.i2119 = bitcast %union.anon* %8913 to i64*
  %8914 = load i64, i64* %RBP.i2119
  %8915 = sub i64 %8914, 20
  %8916 = load i32, i32* %EAX.i2118
  %8917 = zext i32 %8916 to i64
  %8918 = load i64, i64* %PC.i2117
  %8919 = add i64 %8918, 3
  store i64 %8919, i64* %PC.i2117
  %8920 = inttoptr i64 %8915 to i32*
  store i32 %8916, i32* %8920
  store %struct.Memory* %loadMem_40c44e, %struct.Memory** %MEMORY
  %loadMem_40c451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8922 = getelementptr inbounds %struct.GPR, %struct.GPR* %8921, i32 0, i32 33
  %8923 = getelementptr inbounds %struct.Reg, %struct.Reg* %8922, i32 0, i32 0
  %PC.i2116 = bitcast %union.anon* %8923 to i64*
  %8924 = load i64, i64* %PC.i2116
  %8925 = add i64 %8924, -134
  %8926 = load i64, i64* %PC.i2116
  %8927 = add i64 %8926, 5
  store i64 %8927, i64* %PC.i2116
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8925, i64* %8928, align 8
  store %struct.Memory* %loadMem_40c451, %struct.Memory** %MEMORY
  br label %block_.L_40c3cb

block_.L_40c456:                                  ; preds = %block_.L_40c3cb
  %loadMem_40c456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8930 = getelementptr inbounds %struct.GPR, %struct.GPR* %8929, i32 0, i32 33
  %8931 = getelementptr inbounds %struct.Reg, %struct.Reg* %8930, i32 0, i32 0
  %PC.i2113 = bitcast %union.anon* %8931 to i64*
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 1
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %RAX.i2114 = bitcast %union.anon* %8934 to i64*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 15
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %RBP.i2115 = bitcast %union.anon* %8937 to i64*
  %8938 = load i64, i64* %RBP.i2115
  %8939 = sub i64 %8938, 64
  %8940 = load i64, i64* %PC.i2113
  %8941 = add i64 %8940, 3
  store i64 %8941, i64* %PC.i2113
  %8942 = inttoptr i64 %8939 to i32*
  %8943 = load i32, i32* %8942
  %8944 = zext i32 %8943 to i64
  store i64 %8944, i64* %RAX.i2114, align 8
  store %struct.Memory* %loadMem_40c456, %struct.Memory** %MEMORY
  %loadMem_40c459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 33
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %PC.i2110 = bitcast %union.anon* %8947 to i64*
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8949 = getelementptr inbounds %struct.GPR, %struct.GPR* %8948, i32 0, i32 1
  %8950 = getelementptr inbounds %struct.Reg, %struct.Reg* %8949, i32 0, i32 0
  %RAX.i2111 = bitcast %union.anon* %8950 to i64*
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 15
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %RBP.i2112 = bitcast %union.anon* %8953 to i64*
  %8954 = load i64, i64* %RAX.i2111
  %8955 = load i64, i64* %RBP.i2112
  %8956 = sub i64 %8955, 60
  %8957 = load i64, i64* %PC.i2110
  %8958 = add i64 %8957, 3
  store i64 %8958, i64* %PC.i2110
  %8959 = trunc i64 %8954 to i32
  %8960 = inttoptr i64 %8956 to i32*
  %8961 = load i32, i32* %8960
  %8962 = add i32 %8961, %8959
  %8963 = zext i32 %8962 to i64
  store i64 %8963, i64* %RAX.i2111, align 8
  %8964 = icmp ult i32 %8962, %8959
  %8965 = icmp ult i32 %8962, %8961
  %8966 = or i1 %8964, %8965
  %8967 = zext i1 %8966 to i8
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8967, i8* %8968, align 1
  %8969 = and i32 %8962, 255
  %8970 = call i32 @llvm.ctpop.i32(i32 %8969)
  %8971 = trunc i32 %8970 to i8
  %8972 = and i8 %8971, 1
  %8973 = xor i8 %8972, 1
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8973, i8* %8974, align 1
  %8975 = xor i32 %8961, %8959
  %8976 = xor i32 %8975, %8962
  %8977 = lshr i32 %8976, 4
  %8978 = trunc i32 %8977 to i8
  %8979 = and i8 %8978, 1
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8979, i8* %8980, align 1
  %8981 = icmp eq i32 %8962, 0
  %8982 = zext i1 %8981 to i8
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8982, i8* %8983, align 1
  %8984 = lshr i32 %8962, 31
  %8985 = trunc i32 %8984 to i8
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8985, i8* %8986, align 1
  %8987 = lshr i32 %8959, 31
  %8988 = lshr i32 %8961, 31
  %8989 = xor i32 %8984, %8987
  %8990 = xor i32 %8984, %8988
  %8991 = add i32 %8989, %8990
  %8992 = icmp eq i32 %8991, 2
  %8993 = zext i1 %8992 to i8
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8993, i8* %8994, align 1
  store %struct.Memory* %loadMem_40c459, %struct.Memory** %MEMORY
  %loadMem_40c45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 33
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %PC.i2107 = bitcast %union.anon* %8997 to i64*
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 5
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %RCX.i2108 = bitcast %union.anon* %9000 to i64*
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9002 = getelementptr inbounds %struct.GPR, %struct.GPR* %9001, i32 0, i32 15
  %9003 = getelementptr inbounds %struct.Reg, %struct.Reg* %9002, i32 0, i32 0
  %RBP.i2109 = bitcast %union.anon* %9003 to i64*
  %9004 = load i64, i64* %RBP.i2109
  %9005 = sub i64 %9004, 24
  %9006 = load i64, i64* %PC.i2107
  %9007 = add i64 %9006, 4
  store i64 %9007, i64* %PC.i2107
  %9008 = inttoptr i64 %9005 to i32*
  %9009 = load i32, i32* %9008
  %9010 = sext i32 %9009 to i64
  store i64 %9010, i64* %RCX.i2108, align 8
  store %struct.Memory* %loadMem_40c45c, %struct.Memory** %MEMORY
  %loadMem_40c460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 33
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %PC.i2103 = bitcast %union.anon* %9013 to i64*
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 1
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %EAX.i2104 = bitcast %union.anon* %9016 to i32*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 5
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %RCX.i2105 = bitcast %union.anon* %9019 to i64*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9021 = getelementptr inbounds %struct.GPR, %struct.GPR* %9020, i32 0, i32 15
  %9022 = getelementptr inbounds %struct.Reg, %struct.Reg* %9021, i32 0, i32 0
  %RBP.i2106 = bitcast %union.anon* %9022 to i64*
  %9023 = load i64, i64* %RBP.i2106
  %9024 = load i64, i64* %RCX.i2105
  %9025 = mul i64 %9024, 4
  %9026 = add i64 %9023, -176
  %9027 = add i64 %9026, %9025
  %9028 = load i32, i32* %EAX.i2104
  %9029 = zext i32 %9028 to i64
  %9030 = load i64, i64* %PC.i2103
  %9031 = add i64 %9030, 7
  store i64 %9031, i64* %PC.i2103
  %9032 = inttoptr i64 %9027 to i32*
  store i32 %9028, i32* %9032
  store %struct.Memory* %loadMem_40c460, %struct.Memory** %MEMORY
  %loadMem_40c467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9034 = getelementptr inbounds %struct.GPR, %struct.GPR* %9033, i32 0, i32 33
  %9035 = getelementptr inbounds %struct.Reg, %struct.Reg* %9034, i32 0, i32 0
  %PC.i2100 = bitcast %union.anon* %9035 to i64*
  %9036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9037 = getelementptr inbounds %struct.GPR, %struct.GPR* %9036, i32 0, i32 1
  %9038 = getelementptr inbounds %struct.Reg, %struct.Reg* %9037, i32 0, i32 0
  %RAX.i2101 = bitcast %union.anon* %9038 to i64*
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9040 = getelementptr inbounds %struct.GPR, %struct.GPR* %9039, i32 0, i32 15
  %9041 = getelementptr inbounds %struct.Reg, %struct.Reg* %9040, i32 0, i32 0
  %RBP.i2102 = bitcast %union.anon* %9041 to i64*
  %9042 = load i64, i64* %RBP.i2102
  %9043 = sub i64 %9042, 64
  %9044 = load i64, i64* %PC.i2100
  %9045 = add i64 %9044, 3
  store i64 %9045, i64* %PC.i2100
  %9046 = inttoptr i64 %9043 to i32*
  %9047 = load i32, i32* %9046
  %9048 = zext i32 %9047 to i64
  store i64 %9048, i64* %RAX.i2101, align 8
  store %struct.Memory* %loadMem_40c467, %struct.Memory** %MEMORY
  %loadMem_40c46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 33
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %PC.i2097 = bitcast %union.anon* %9051 to i64*
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9053 = getelementptr inbounds %struct.GPR, %struct.GPR* %9052, i32 0, i32 1
  %9054 = getelementptr inbounds %struct.Reg, %struct.Reg* %9053, i32 0, i32 0
  %RAX.i2098 = bitcast %union.anon* %9054 to i64*
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 15
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %RBP.i2099 = bitcast %union.anon* %9057 to i64*
  %9058 = load i64, i64* %RAX.i2098
  %9059 = load i64, i64* %RBP.i2099
  %9060 = sub i64 %9059, 60
  %9061 = load i64, i64* %PC.i2097
  %9062 = add i64 %9061, 3
  store i64 %9062, i64* %PC.i2097
  %9063 = trunc i64 %9058 to i32
  %9064 = inttoptr i64 %9060 to i32*
  %9065 = load i32, i32* %9064
  %9066 = sub i32 %9063, %9065
  %9067 = zext i32 %9066 to i64
  store i64 %9067, i64* %RAX.i2098, align 8
  %9068 = icmp ult i32 %9063, %9065
  %9069 = zext i1 %9068 to i8
  %9070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9069, i8* %9070, align 1
  %9071 = and i32 %9066, 255
  %9072 = call i32 @llvm.ctpop.i32(i32 %9071)
  %9073 = trunc i32 %9072 to i8
  %9074 = and i8 %9073, 1
  %9075 = xor i8 %9074, 1
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9075, i8* %9076, align 1
  %9077 = xor i32 %9065, %9063
  %9078 = xor i32 %9077, %9066
  %9079 = lshr i32 %9078, 4
  %9080 = trunc i32 %9079 to i8
  %9081 = and i8 %9080, 1
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9081, i8* %9082, align 1
  %9083 = icmp eq i32 %9066, 0
  %9084 = zext i1 %9083 to i8
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9084, i8* %9085, align 1
  %9086 = lshr i32 %9066, 31
  %9087 = trunc i32 %9086 to i8
  %9088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9087, i8* %9088, align 1
  %9089 = lshr i32 %9063, 31
  %9090 = lshr i32 %9065, 31
  %9091 = xor i32 %9090, %9089
  %9092 = xor i32 %9086, %9089
  %9093 = add i32 %9092, %9091
  %9094 = icmp eq i32 %9093, 2
  %9095 = zext i1 %9094 to i8
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9095, i8* %9096, align 1
  store %struct.Memory* %loadMem_40c46a, %struct.Memory** %MEMORY
  %loadMem_40c46d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9098 = getelementptr inbounds %struct.GPR, %struct.GPR* %9097, i32 0, i32 33
  %9099 = getelementptr inbounds %struct.Reg, %struct.Reg* %9098, i32 0, i32 0
  %PC.i2094 = bitcast %union.anon* %9099 to i64*
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 5
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %RCX.i2095 = bitcast %union.anon* %9102 to i64*
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9104 = getelementptr inbounds %struct.GPR, %struct.GPR* %9103, i32 0, i32 15
  %9105 = getelementptr inbounds %struct.Reg, %struct.Reg* %9104, i32 0, i32 0
  %RBP.i2096 = bitcast %union.anon* %9105 to i64*
  %9106 = load i64, i64* %RBP.i2096
  %9107 = sub i64 %9106, 24
  %9108 = load i64, i64* %PC.i2094
  %9109 = add i64 %9108, 4
  store i64 %9109, i64* %PC.i2094
  %9110 = inttoptr i64 %9107 to i32*
  %9111 = load i32, i32* %9110
  %9112 = sext i32 %9111 to i64
  store i64 %9112, i64* %RCX.i2095, align 8
  store %struct.Memory* %loadMem_40c46d, %struct.Memory** %MEMORY
  %loadMem_40c471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9114 = getelementptr inbounds %struct.GPR, %struct.GPR* %9113, i32 0, i32 33
  %9115 = getelementptr inbounds %struct.Reg, %struct.Reg* %9114, i32 0, i32 0
  %PC.i2090 = bitcast %union.anon* %9115 to i64*
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9117 = getelementptr inbounds %struct.GPR, %struct.GPR* %9116, i32 0, i32 1
  %9118 = getelementptr inbounds %struct.Reg, %struct.Reg* %9117, i32 0, i32 0
  %EAX.i2091 = bitcast %union.anon* %9118 to i32*
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9120 = getelementptr inbounds %struct.GPR, %struct.GPR* %9119, i32 0, i32 5
  %9121 = getelementptr inbounds %struct.Reg, %struct.Reg* %9120, i32 0, i32 0
  %RCX.i2092 = bitcast %union.anon* %9121 to i64*
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 15
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %RBP.i2093 = bitcast %union.anon* %9124 to i64*
  %9125 = load i64, i64* %RBP.i2093
  %9126 = load i64, i64* %RCX.i2092
  %9127 = mul i64 %9126, 4
  %9128 = add i64 %9125, -144
  %9129 = add i64 %9128, %9127
  %9130 = load i32, i32* %EAX.i2091
  %9131 = zext i32 %9130 to i64
  %9132 = load i64, i64* %PC.i2090
  %9133 = add i64 %9132, 7
  store i64 %9133, i64* %PC.i2090
  %9134 = inttoptr i64 %9129 to i32*
  store i32 %9130, i32* %9134
  store %struct.Memory* %loadMem_40c471, %struct.Memory** %MEMORY
  %loadMem_40c478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9136 = getelementptr inbounds %struct.GPR, %struct.GPR* %9135, i32 0, i32 33
  %9137 = getelementptr inbounds %struct.Reg, %struct.Reg* %9136, i32 0, i32 0
  %PC.i2087 = bitcast %union.anon* %9137 to i64*
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9139 = getelementptr inbounds %struct.GPR, %struct.GPR* %9138, i32 0, i32 1
  %9140 = getelementptr inbounds %struct.Reg, %struct.Reg* %9139, i32 0, i32 0
  %RAX.i2088 = bitcast %union.anon* %9140 to i64*
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9142 = getelementptr inbounds %struct.GPR, %struct.GPR* %9141, i32 0, i32 15
  %9143 = getelementptr inbounds %struct.Reg, %struct.Reg* %9142, i32 0, i32 0
  %RBP.i2089 = bitcast %union.anon* %9143 to i64*
  %9144 = load i64, i64* %RBP.i2089
  %9145 = sub i64 %9144, 52
  %9146 = load i64, i64* %PC.i2087
  %9147 = add i64 %9146, 3
  store i64 %9147, i64* %PC.i2087
  %9148 = inttoptr i64 %9145 to i32*
  %9149 = load i32, i32* %9148
  %9150 = zext i32 %9149 to i64
  store i64 %9150, i64* %RAX.i2088, align 8
  store %struct.Memory* %loadMem_40c478, %struct.Memory** %MEMORY
  %loadMem_40c47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9152 = getelementptr inbounds %struct.GPR, %struct.GPR* %9151, i32 0, i32 33
  %9153 = getelementptr inbounds %struct.Reg, %struct.Reg* %9152, i32 0, i32 0
  %PC.i2085 = bitcast %union.anon* %9153 to i64*
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 1
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %RAX.i2086 = bitcast %union.anon* %9156 to i64*
  %9157 = load i64, i64* %RAX.i2086
  %9158 = load i64, i64* %PC.i2085
  %9159 = add i64 %9158, 2
  store i64 %9159, i64* %PC.i2085
  %9160 = trunc i64 %9157 to i32
  %9161 = shl i32 %9160, 1
  %9162 = icmp slt i32 %9160, 0
  %9163 = icmp slt i32 %9161, 0
  %9164 = xor i1 %9162, %9163
  %9165 = zext i32 %9161 to i64
  store i64 %9165, i64* %RAX.i2086, align 8
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9167 = zext i1 %9162 to i8
  store i8 %9167, i8* %9166, align 1
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9169 = and i32 %9161, 254
  %9170 = call i32 @llvm.ctpop.i32(i32 %9169)
  %9171 = trunc i32 %9170 to i8
  %9172 = and i8 %9171, 1
  %9173 = xor i8 %9172, 1
  store i8 %9173, i8* %9168, align 1
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9174, align 1
  %9175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9176 = icmp eq i32 %9161, 0
  %9177 = zext i1 %9176 to i8
  store i8 %9177, i8* %9175, align 1
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9179 = lshr i32 %9161, 31
  %9180 = trunc i32 %9179 to i8
  store i8 %9180, i8* %9178, align 1
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9182 = zext i1 %9164 to i8
  store i8 %9182, i8* %9181, align 1
  store %struct.Memory* %loadMem_40c47b, %struct.Memory** %MEMORY
  %loadMem_40c47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 33
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %PC.i2082 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 1
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RAX.i2083 = bitcast %union.anon* %9188 to i64*
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9190 = getelementptr inbounds %struct.GPR, %struct.GPR* %9189, i32 0, i32 15
  %9191 = getelementptr inbounds %struct.Reg, %struct.Reg* %9190, i32 0, i32 0
  %RBP.i2084 = bitcast %union.anon* %9191 to i64*
  %9192 = load i64, i64* %RAX.i2083
  %9193 = load i64, i64* %RBP.i2084
  %9194 = sub i64 %9193, 56
  %9195 = load i64, i64* %PC.i2082
  %9196 = add i64 %9195, 3
  store i64 %9196, i64* %PC.i2082
  %9197 = trunc i64 %9192 to i32
  %9198 = inttoptr i64 %9194 to i32*
  %9199 = load i32, i32* %9198
  %9200 = add i32 %9199, %9197
  %9201 = zext i32 %9200 to i64
  store i64 %9201, i64* %RAX.i2083, align 8
  %9202 = icmp ult i32 %9200, %9197
  %9203 = icmp ult i32 %9200, %9199
  %9204 = or i1 %9202, %9203
  %9205 = zext i1 %9204 to i8
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9205, i8* %9206, align 1
  %9207 = and i32 %9200, 255
  %9208 = call i32 @llvm.ctpop.i32(i32 %9207)
  %9209 = trunc i32 %9208 to i8
  %9210 = and i8 %9209, 1
  %9211 = xor i8 %9210, 1
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9211, i8* %9212, align 1
  %9213 = xor i32 %9199, %9197
  %9214 = xor i32 %9213, %9200
  %9215 = lshr i32 %9214, 4
  %9216 = trunc i32 %9215 to i8
  %9217 = and i8 %9216, 1
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9217, i8* %9218, align 1
  %9219 = icmp eq i32 %9200, 0
  %9220 = zext i1 %9219 to i8
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9220, i8* %9221, align 1
  %9222 = lshr i32 %9200, 31
  %9223 = trunc i32 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9223, i8* %9224, align 1
  %9225 = lshr i32 %9197, 31
  %9226 = lshr i32 %9199, 31
  %9227 = xor i32 %9222, %9225
  %9228 = xor i32 %9222, %9226
  %9229 = add i32 %9227, %9228
  %9230 = icmp eq i32 %9229, 2
  %9231 = zext i1 %9230 to i8
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9231, i8* %9232, align 1
  store %struct.Memory* %loadMem_40c47e, %struct.Memory** %MEMORY
  %loadMem_40c481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9234 = getelementptr inbounds %struct.GPR, %struct.GPR* %9233, i32 0, i32 33
  %9235 = getelementptr inbounds %struct.Reg, %struct.Reg* %9234, i32 0, i32 0
  %PC.i2079 = bitcast %union.anon* %9235 to i64*
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9237 = getelementptr inbounds %struct.GPR, %struct.GPR* %9236, i32 0, i32 5
  %9238 = getelementptr inbounds %struct.Reg, %struct.Reg* %9237, i32 0, i32 0
  %RCX.i2080 = bitcast %union.anon* %9238 to i64*
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9240 = getelementptr inbounds %struct.GPR, %struct.GPR* %9239, i32 0, i32 15
  %9241 = getelementptr inbounds %struct.Reg, %struct.Reg* %9240, i32 0, i32 0
  %RBP.i2081 = bitcast %union.anon* %9241 to i64*
  %9242 = load i64, i64* %RBP.i2081
  %9243 = sub i64 %9242, 24
  %9244 = load i64, i64* %PC.i2079
  %9245 = add i64 %9244, 4
  store i64 %9245, i64* %PC.i2079
  %9246 = inttoptr i64 %9243 to i32*
  %9247 = load i32, i32* %9246
  %9248 = sext i32 %9247 to i64
  store i64 %9248, i64* %RCX.i2080, align 8
  store %struct.Memory* %loadMem_40c481, %struct.Memory** %MEMORY
  %loadMem_40c485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9250 = getelementptr inbounds %struct.GPR, %struct.GPR* %9249, i32 0, i32 33
  %9251 = getelementptr inbounds %struct.Reg, %struct.Reg* %9250, i32 0, i32 0
  %PC.i2075 = bitcast %union.anon* %9251 to i64*
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 1
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %EAX.i2076 = bitcast %union.anon* %9254 to i32*
  %9255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9256 = getelementptr inbounds %struct.GPR, %struct.GPR* %9255, i32 0, i32 5
  %9257 = getelementptr inbounds %struct.Reg, %struct.Reg* %9256, i32 0, i32 0
  %RCX.i2077 = bitcast %union.anon* %9257 to i64*
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9259 = getelementptr inbounds %struct.GPR, %struct.GPR* %9258, i32 0, i32 15
  %9260 = getelementptr inbounds %struct.Reg, %struct.Reg* %9259, i32 0, i32 0
  %RBP.i2078 = bitcast %union.anon* %9260 to i64*
  %9261 = load i64, i64* %RBP.i2078
  %9262 = load i64, i64* %RCX.i2077
  %9263 = mul i64 %9262, 4
  %9264 = add i64 %9261, -160
  %9265 = add i64 %9264, %9263
  %9266 = load i32, i32* %EAX.i2076
  %9267 = zext i32 %9266 to i64
  %9268 = load i64, i64* %PC.i2075
  %9269 = add i64 %9268, 7
  store i64 %9269, i64* %PC.i2075
  %9270 = inttoptr i64 %9265 to i32*
  store i32 %9266, i32* %9270
  store %struct.Memory* %loadMem_40c485, %struct.Memory** %MEMORY
  %loadMem_40c48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 33
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %PC.i2072 = bitcast %union.anon* %9273 to i64*
  %9274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9275 = getelementptr inbounds %struct.GPR, %struct.GPR* %9274, i32 0, i32 1
  %9276 = getelementptr inbounds %struct.Reg, %struct.Reg* %9275, i32 0, i32 0
  %RAX.i2073 = bitcast %union.anon* %9276 to i64*
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9278 = getelementptr inbounds %struct.GPR, %struct.GPR* %9277, i32 0, i32 15
  %9279 = getelementptr inbounds %struct.Reg, %struct.Reg* %9278, i32 0, i32 0
  %RBP.i2074 = bitcast %union.anon* %9279 to i64*
  %9280 = load i64, i64* %RBP.i2074
  %9281 = sub i64 %9280, 52
  %9282 = load i64, i64* %PC.i2072
  %9283 = add i64 %9282, 3
  store i64 %9283, i64* %PC.i2072
  %9284 = inttoptr i64 %9281 to i32*
  %9285 = load i32, i32* %9284
  %9286 = zext i32 %9285 to i64
  store i64 %9286, i64* %RAX.i2073, align 8
  store %struct.Memory* %loadMem_40c48c, %struct.Memory** %MEMORY
  %loadMem_40c48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9288 = getelementptr inbounds %struct.GPR, %struct.GPR* %9287, i32 0, i32 33
  %9289 = getelementptr inbounds %struct.Reg, %struct.Reg* %9288, i32 0, i32 0
  %PC.i2069 = bitcast %union.anon* %9289 to i64*
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9291 = getelementptr inbounds %struct.GPR, %struct.GPR* %9290, i32 0, i32 7
  %9292 = getelementptr inbounds %struct.Reg, %struct.Reg* %9291, i32 0, i32 0
  %RDX.i2070 = bitcast %union.anon* %9292 to i64*
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 15
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %RBP.i2071 = bitcast %union.anon* %9295 to i64*
  %9296 = load i64, i64* %RBP.i2071
  %9297 = sub i64 %9296, 56
  %9298 = load i64, i64* %PC.i2069
  %9299 = add i64 %9298, 3
  store i64 %9299, i64* %PC.i2069
  %9300 = inttoptr i64 %9297 to i32*
  %9301 = load i32, i32* %9300
  %9302 = zext i32 %9301 to i64
  store i64 %9302, i64* %RDX.i2070, align 8
  store %struct.Memory* %loadMem_40c48f, %struct.Memory** %MEMORY
  %loadMem_40c492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9304 = getelementptr inbounds %struct.GPR, %struct.GPR* %9303, i32 0, i32 33
  %9305 = getelementptr inbounds %struct.Reg, %struct.Reg* %9304, i32 0, i32 0
  %PC.i2067 = bitcast %union.anon* %9305 to i64*
  %9306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9307 = getelementptr inbounds %struct.GPR, %struct.GPR* %9306, i32 0, i32 7
  %9308 = getelementptr inbounds %struct.Reg, %struct.Reg* %9307, i32 0, i32 0
  %RDX.i2068 = bitcast %union.anon* %9308 to i64*
  %9309 = load i64, i64* %RDX.i2068
  %9310 = load i64, i64* %PC.i2067
  %9311 = add i64 %9310, 2
  store i64 %9311, i64* %PC.i2067
  %9312 = trunc i64 %9309 to i32
  %9313 = shl i32 %9312, 1
  %9314 = icmp slt i32 %9312, 0
  %9315 = icmp slt i32 %9313, 0
  %9316 = xor i1 %9314, %9315
  %9317 = zext i32 %9313 to i64
  store i64 %9317, i64* %RDX.i2068, align 8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9319 = zext i1 %9314 to i8
  store i8 %9319, i8* %9318, align 1
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9321 = and i32 %9313, 254
  %9322 = call i32 @llvm.ctpop.i32(i32 %9321)
  %9323 = trunc i32 %9322 to i8
  %9324 = and i8 %9323, 1
  %9325 = xor i8 %9324, 1
  store i8 %9325, i8* %9320, align 1
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9326, align 1
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9328 = icmp eq i32 %9313, 0
  %9329 = zext i1 %9328 to i8
  store i8 %9329, i8* %9327, align 1
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9331 = lshr i32 %9313, 31
  %9332 = trunc i32 %9331 to i8
  store i8 %9332, i8* %9330, align 1
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9334 = zext i1 %9316 to i8
  store i8 %9334, i8* %9333, align 1
  store %struct.Memory* %loadMem_40c492, %struct.Memory** %MEMORY
  %loadMem_40c495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 33
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %PC.i2064 = bitcast %union.anon* %9337 to i64*
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 7
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %EDX.i2065 = bitcast %union.anon* %9340 to i32*
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 1
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %RAX.i2066 = bitcast %union.anon* %9343 to i64*
  %9344 = load i64, i64* %RAX.i2066
  %9345 = load i32, i32* %EDX.i2065
  %9346 = zext i32 %9345 to i64
  %9347 = load i64, i64* %PC.i2064
  %9348 = add i64 %9347, 2
  store i64 %9348, i64* %PC.i2064
  %9349 = trunc i64 %9344 to i32
  %9350 = sub i32 %9349, %9345
  %9351 = zext i32 %9350 to i64
  store i64 %9351, i64* %RAX.i2066, align 8
  %9352 = icmp ult i32 %9349, %9345
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9353, i8* %9354, align 1
  %9355 = and i32 %9350, 255
  %9356 = call i32 @llvm.ctpop.i32(i32 %9355)
  %9357 = trunc i32 %9356 to i8
  %9358 = and i8 %9357, 1
  %9359 = xor i8 %9358, 1
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9359, i8* %9360, align 1
  %9361 = xor i64 %9346, %9344
  %9362 = trunc i64 %9361 to i32
  %9363 = xor i32 %9362, %9350
  %9364 = lshr i32 %9363, 4
  %9365 = trunc i32 %9364 to i8
  %9366 = and i8 %9365, 1
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9366, i8* %9367, align 1
  %9368 = icmp eq i32 %9350, 0
  %9369 = zext i1 %9368 to i8
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9369, i8* %9370, align 1
  %9371 = lshr i32 %9350, 31
  %9372 = trunc i32 %9371 to i8
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9372, i8* %9373, align 1
  %9374 = lshr i32 %9349, 31
  %9375 = lshr i32 %9345, 31
  %9376 = xor i32 %9375, %9374
  %9377 = xor i32 %9371, %9374
  %9378 = add i32 %9377, %9376
  %9379 = icmp eq i32 %9378, 2
  %9380 = zext i1 %9379 to i8
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9380, i8* %9381, align 1
  store %struct.Memory* %loadMem_40c495, %struct.Memory** %MEMORY
  %loadMem_40c497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9383 = getelementptr inbounds %struct.GPR, %struct.GPR* %9382, i32 0, i32 33
  %9384 = getelementptr inbounds %struct.Reg, %struct.Reg* %9383, i32 0, i32 0
  %PC.i2061 = bitcast %union.anon* %9384 to i64*
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9386 = getelementptr inbounds %struct.GPR, %struct.GPR* %9385, i32 0, i32 5
  %9387 = getelementptr inbounds %struct.Reg, %struct.Reg* %9386, i32 0, i32 0
  %RCX.i2062 = bitcast %union.anon* %9387 to i64*
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9389 = getelementptr inbounds %struct.GPR, %struct.GPR* %9388, i32 0, i32 15
  %9390 = getelementptr inbounds %struct.Reg, %struct.Reg* %9389, i32 0, i32 0
  %RBP.i2063 = bitcast %union.anon* %9390 to i64*
  %9391 = load i64, i64* %RBP.i2063
  %9392 = sub i64 %9391, 24
  %9393 = load i64, i64* %PC.i2061
  %9394 = add i64 %9393, 4
  store i64 %9394, i64* %PC.i2061
  %9395 = inttoptr i64 %9392 to i32*
  %9396 = load i32, i32* %9395
  %9397 = sext i32 %9396 to i64
  store i64 %9397, i64* %RCX.i2062, align 8
  store %struct.Memory* %loadMem_40c497, %struct.Memory** %MEMORY
  %loadMem_40c49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9399 = getelementptr inbounds %struct.GPR, %struct.GPR* %9398, i32 0, i32 33
  %9400 = getelementptr inbounds %struct.Reg, %struct.Reg* %9399, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %9400 to i64*
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 1
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %EAX.i2058 = bitcast %union.anon* %9403 to i32*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 5
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RCX.i2059 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i2060 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RBP.i2060
  %9411 = load i64, i64* %RCX.i2059
  %9412 = mul i64 %9411, 4
  %9413 = add i64 %9410, -128
  %9414 = add i64 %9413, %9412
  %9415 = load i32, i32* %EAX.i2058
  %9416 = zext i32 %9415 to i64
  %9417 = load i64, i64* %PC.i2057
  %9418 = add i64 %9417, 4
  store i64 %9418, i64* %PC.i2057
  %9419 = inttoptr i64 %9414 to i32*
  store i32 %9415, i32* %9419
  store %struct.Memory* %loadMem_40c49b, %struct.Memory** %MEMORY
  %loadMem_40c49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 33
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %PC.i2054 = bitcast %union.anon* %9422 to i64*
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 1
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %RAX.i2055 = bitcast %union.anon* %9425 to i64*
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 15
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %RBP.i2056 = bitcast %union.anon* %9428 to i64*
  %9429 = load i64, i64* %RBP.i2056
  %9430 = sub i64 %9429, 24
  %9431 = load i64, i64* %PC.i2054
  %9432 = add i64 %9431, 3
  store i64 %9432, i64* %PC.i2054
  %9433 = inttoptr i64 %9430 to i32*
  %9434 = load i32, i32* %9433
  %9435 = zext i32 %9434 to i64
  store i64 %9435, i64* %RAX.i2055, align 8
  store %struct.Memory* %loadMem_40c49f, %struct.Memory** %MEMORY
  %loadMem_40c4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9437 = getelementptr inbounds %struct.GPR, %struct.GPR* %9436, i32 0, i32 33
  %9438 = getelementptr inbounds %struct.Reg, %struct.Reg* %9437, i32 0, i32 0
  %PC.i2052 = bitcast %union.anon* %9438 to i64*
  %9439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9440 = getelementptr inbounds %struct.GPR, %struct.GPR* %9439, i32 0, i32 1
  %9441 = getelementptr inbounds %struct.Reg, %struct.Reg* %9440, i32 0, i32 0
  %RAX.i2053 = bitcast %union.anon* %9441 to i64*
  %9442 = load i64, i64* %RAX.i2053
  %9443 = load i64, i64* %PC.i2052
  %9444 = add i64 %9443, 3
  store i64 %9444, i64* %PC.i2052
  %9445 = trunc i64 %9442 to i32
  %9446 = add i32 1, %9445
  %9447 = zext i32 %9446 to i64
  store i64 %9447, i64* %RAX.i2053, align 8
  %9448 = icmp ult i32 %9446, %9445
  %9449 = icmp ult i32 %9446, 1
  %9450 = or i1 %9448, %9449
  %9451 = zext i1 %9450 to i8
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9451, i8* %9452, align 1
  %9453 = and i32 %9446, 255
  %9454 = call i32 @llvm.ctpop.i32(i32 %9453)
  %9455 = trunc i32 %9454 to i8
  %9456 = and i8 %9455, 1
  %9457 = xor i8 %9456, 1
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9457, i8* %9458, align 1
  %9459 = xor i64 1, %9442
  %9460 = trunc i64 %9459 to i32
  %9461 = xor i32 %9460, %9446
  %9462 = lshr i32 %9461, 4
  %9463 = trunc i32 %9462 to i8
  %9464 = and i8 %9463, 1
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9464, i8* %9465, align 1
  %9466 = icmp eq i32 %9446, 0
  %9467 = zext i1 %9466 to i8
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9467, i8* %9468, align 1
  %9469 = lshr i32 %9446, 31
  %9470 = trunc i32 %9469 to i8
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9470, i8* %9471, align 1
  %9472 = lshr i32 %9445, 31
  %9473 = xor i32 %9469, %9472
  %9474 = add i32 %9473, %9469
  %9475 = icmp eq i32 %9474, 2
  %9476 = zext i1 %9475 to i8
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9476, i8* %9477, align 1
  store %struct.Memory* %loadMem_40c4a2, %struct.Memory** %MEMORY
  %loadMem_40c4a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9479 = getelementptr inbounds %struct.GPR, %struct.GPR* %9478, i32 0, i32 33
  %9480 = getelementptr inbounds %struct.Reg, %struct.Reg* %9479, i32 0, i32 0
  %PC.i2049 = bitcast %union.anon* %9480 to i64*
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9482 = getelementptr inbounds %struct.GPR, %struct.GPR* %9481, i32 0, i32 1
  %9483 = getelementptr inbounds %struct.Reg, %struct.Reg* %9482, i32 0, i32 0
  %EAX.i2050 = bitcast %union.anon* %9483 to i32*
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 15
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %RBP.i2051 = bitcast %union.anon* %9486 to i64*
  %9487 = load i64, i64* %RBP.i2051
  %9488 = sub i64 %9487, 24
  %9489 = load i32, i32* %EAX.i2050
  %9490 = zext i32 %9489 to i64
  %9491 = load i64, i64* %PC.i2049
  %9492 = add i64 %9491, 3
  store i64 %9492, i64* %PC.i2049
  %9493 = inttoptr i64 %9488 to i32*
  store i32 %9489, i32* %9493
  store %struct.Memory* %loadMem_40c4a5, %struct.Memory** %MEMORY
  %loadMem_40c4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9495 = getelementptr inbounds %struct.GPR, %struct.GPR* %9494, i32 0, i32 33
  %9496 = getelementptr inbounds %struct.Reg, %struct.Reg* %9495, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %9496 to i64*
  %9497 = load i64, i64* %PC.i2048
  %9498 = add i64 %9497, -238
  %9499 = load i64, i64* %PC.i2048
  %9500 = add i64 %9499, 5
  store i64 %9500, i64* %PC.i2048
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9498, i64* %9501, align 8
  store %struct.Memory* %loadMem_40c4a8, %struct.Memory** %MEMORY
  br label %block_.L_40c3ba

block_.L_40c4ad:                                  ; preds = %block_.L_40c3ba
  %loadMem_40c4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9503 = getelementptr inbounds %struct.GPR, %struct.GPR* %9502, i32 0, i32 33
  %9504 = getelementptr inbounds %struct.Reg, %struct.Reg* %9503, i32 0, i32 0
  %PC.i2046 = bitcast %union.anon* %9504 to i64*
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9506 = getelementptr inbounds %struct.GPR, %struct.GPR* %9505, i32 0, i32 15
  %9507 = getelementptr inbounds %struct.Reg, %struct.Reg* %9506, i32 0, i32 0
  %RBP.i2047 = bitcast %union.anon* %9507 to i64*
  %9508 = load i64, i64* %RBP.i2047
  %9509 = sub i64 %9508, 20
  %9510 = load i64, i64* %PC.i2046
  %9511 = add i64 %9510, 7
  store i64 %9511, i64* %PC.i2046
  %9512 = inttoptr i64 %9509 to i32*
  store i32 0, i32* %9512
  store %struct.Memory* %loadMem_40c4ad, %struct.Memory** %MEMORY
  br label %block_.L_40c4b4

block_.L_40c4b4:                                  ; preds = %block_.L_40c550, %block_.L_40c4ad
  %loadMem_40c4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9514 = getelementptr inbounds %struct.GPR, %struct.GPR* %9513, i32 0, i32 33
  %9515 = getelementptr inbounds %struct.Reg, %struct.Reg* %9514, i32 0, i32 0
  %PC.i2044 = bitcast %union.anon* %9515 to i64*
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9517 = getelementptr inbounds %struct.GPR, %struct.GPR* %9516, i32 0, i32 15
  %9518 = getelementptr inbounds %struct.Reg, %struct.Reg* %9517, i32 0, i32 0
  %RBP.i2045 = bitcast %union.anon* %9518 to i64*
  %9519 = load i64, i64* %RBP.i2045
  %9520 = sub i64 %9519, 20
  %9521 = load i64, i64* %PC.i2044
  %9522 = add i64 %9521, 4
  store i64 %9522, i64* %PC.i2044
  %9523 = inttoptr i64 %9520 to i32*
  %9524 = load i32, i32* %9523
  %9525 = sub i32 %9524, 4
  %9526 = icmp ult i32 %9524, 4
  %9527 = zext i1 %9526 to i8
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9527, i8* %9528, align 1
  %9529 = and i32 %9525, 255
  %9530 = call i32 @llvm.ctpop.i32(i32 %9529)
  %9531 = trunc i32 %9530 to i8
  %9532 = and i8 %9531, 1
  %9533 = xor i8 %9532, 1
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9533, i8* %9534, align 1
  %9535 = xor i32 %9524, 4
  %9536 = xor i32 %9535, %9525
  %9537 = lshr i32 %9536, 4
  %9538 = trunc i32 %9537 to i8
  %9539 = and i8 %9538, 1
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9539, i8* %9540, align 1
  %9541 = icmp eq i32 %9525, 0
  %9542 = zext i1 %9541 to i8
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9542, i8* %9543, align 1
  %9544 = lshr i32 %9525, 31
  %9545 = trunc i32 %9544 to i8
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9545, i8* %9546, align 1
  %9547 = lshr i32 %9524, 31
  %9548 = xor i32 %9544, %9547
  %9549 = add i32 %9548, %9547
  %9550 = icmp eq i32 %9549, 2
  %9551 = zext i1 %9550 to i8
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9551, i8* %9552, align 1
  store %struct.Memory* %loadMem_40c4b4, %struct.Memory** %MEMORY
  %loadMem_40c4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 33
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %PC.i2043 = bitcast %union.anon* %9555 to i64*
  %9556 = load i64, i64* %PC.i2043
  %9557 = add i64 %9556, 269
  %9558 = load i64, i64* %PC.i2043
  %9559 = add i64 %9558, 6
  %9560 = load i64, i64* %PC.i2043
  %9561 = add i64 %9560, 6
  store i64 %9561, i64* %PC.i2043
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9563 = load i8, i8* %9562, align 1
  %9564 = icmp ne i8 %9563, 0
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9566 = load i8, i8* %9565, align 1
  %9567 = icmp ne i8 %9566, 0
  %9568 = xor i1 %9564, %9567
  %9569 = xor i1 %9568, true
  %9570 = zext i1 %9569 to i8
  store i8 %9570, i8* %BRANCH_TAKEN, align 1
  %9571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9572 = select i1 %9568, i64 %9559, i64 %9557
  store i64 %9572, i64* %9571, align 8
  store %struct.Memory* %loadMem_40c4b8, %struct.Memory** %MEMORY
  %loadBr_40c4b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c4b8 = icmp eq i8 %loadBr_40c4b8, 1
  br i1 %cmpBr_40c4b8, label %block_.L_40c5c5, label %block_40c4be

block_40c4be:                                     ; preds = %block_.L_40c4b4
  %loadMem_40c4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 33
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %PC.i2041 = bitcast %union.anon* %9575 to i64*
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9577 = getelementptr inbounds %struct.GPR, %struct.GPR* %9576, i32 0, i32 15
  %9578 = getelementptr inbounds %struct.Reg, %struct.Reg* %9577, i32 0, i32 0
  %RBP.i2042 = bitcast %union.anon* %9578 to i64*
  %9579 = load i64, i64* %RBP.i2042
  %9580 = sub i64 %9579, 24
  %9581 = load i64, i64* %PC.i2041
  %9582 = add i64 %9581, 7
  store i64 %9582, i64* %PC.i2041
  %9583 = inttoptr i64 %9580 to i32*
  store i32 0, i32* %9583
  store %struct.Memory* %loadMem_40c4be, %struct.Memory** %MEMORY
  br label %block_.L_40c4c5

block_.L_40c4c5:                                  ; preds = %block_40c4cf, %block_40c4be
  %loadMem_40c4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9585 = getelementptr inbounds %struct.GPR, %struct.GPR* %9584, i32 0, i32 33
  %9586 = getelementptr inbounds %struct.Reg, %struct.Reg* %9585, i32 0, i32 0
  %PC.i2039 = bitcast %union.anon* %9586 to i64*
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9588 = getelementptr inbounds %struct.GPR, %struct.GPR* %9587, i32 0, i32 15
  %9589 = getelementptr inbounds %struct.Reg, %struct.Reg* %9588, i32 0, i32 0
  %RBP.i2040 = bitcast %union.anon* %9589 to i64*
  %9590 = load i64, i64* %RBP.i2040
  %9591 = sub i64 %9590, 24
  %9592 = load i64, i64* %PC.i2039
  %9593 = add i64 %9592, 4
  store i64 %9593, i64* %PC.i2039
  %9594 = inttoptr i64 %9591 to i32*
  %9595 = load i32, i32* %9594
  %9596 = sub i32 %9595, 2
  %9597 = icmp ult i32 %9595, 2
  %9598 = zext i1 %9597 to i8
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9598, i8* %9599, align 1
  %9600 = and i32 %9596, 255
  %9601 = call i32 @llvm.ctpop.i32(i32 %9600)
  %9602 = trunc i32 %9601 to i8
  %9603 = and i8 %9602, 1
  %9604 = xor i8 %9603, 1
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9604, i8* %9605, align 1
  %9606 = xor i32 %9595, 2
  %9607 = xor i32 %9606, %9596
  %9608 = lshr i32 %9607, 4
  %9609 = trunc i32 %9608 to i8
  %9610 = and i8 %9609, 1
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9610, i8* %9611, align 1
  %9612 = icmp eq i32 %9596, 0
  %9613 = zext i1 %9612 to i8
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9613, i8* %9614, align 1
  %9615 = lshr i32 %9596, 31
  %9616 = trunc i32 %9615 to i8
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9616, i8* %9617, align 1
  %9618 = lshr i32 %9595, 31
  %9619 = xor i32 %9615, %9618
  %9620 = add i32 %9619, %9618
  %9621 = icmp eq i32 %9620, 2
  %9622 = zext i1 %9621 to i8
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9622, i8* %9623, align 1
  store %struct.Memory* %loadMem_40c4c5, %struct.Memory** %MEMORY
  %loadMem_40c4c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9625 = getelementptr inbounds %struct.GPR, %struct.GPR* %9624, i32 0, i32 33
  %9626 = getelementptr inbounds %struct.Reg, %struct.Reg* %9625, i32 0, i32 0
  %PC.i2038 = bitcast %union.anon* %9626 to i64*
  %9627 = load i64, i64* %PC.i2038
  %9628 = add i64 %9627, 135
  %9629 = load i64, i64* %PC.i2038
  %9630 = add i64 %9629, 6
  %9631 = load i64, i64* %PC.i2038
  %9632 = add i64 %9631, 6
  store i64 %9632, i64* %PC.i2038
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9634 = load i8, i8* %9633, align 1
  %9635 = icmp ne i8 %9634, 0
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9637 = load i8, i8* %9636, align 1
  %9638 = icmp ne i8 %9637, 0
  %9639 = xor i1 %9635, %9638
  %9640 = xor i1 %9639, true
  %9641 = zext i1 %9640 to i8
  store i8 %9641, i8* %BRANCH_TAKEN, align 1
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9643 = select i1 %9639, i64 %9630, i64 %9628
  store i64 %9643, i64* %9642, align 8
  store %struct.Memory* %loadMem_40c4c9, %struct.Memory** %MEMORY
  %loadBr_40c4c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c4c9 = icmp eq i8 %loadBr_40c4c9, 1
  br i1 %cmpBr_40c4c9, label %block_.L_40c550, label %block_40c4cf

block_40c4cf:                                     ; preds = %block_.L_40c4c5
  %loadMem_40c4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9645 = getelementptr inbounds %struct.GPR, %struct.GPR* %9644, i32 0, i32 33
  %9646 = getelementptr inbounds %struct.Reg, %struct.Reg* %9645, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %9646 to i64*
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 1
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %RAX.i2036 = bitcast %union.anon* %9649 to i64*
  %9650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9651 = getelementptr inbounds %struct.GPR, %struct.GPR* %9650, i32 0, i32 15
  %9652 = getelementptr inbounds %struct.Reg, %struct.Reg* %9651, i32 0, i32 0
  %RBP.i2037 = bitcast %union.anon* %9652 to i64*
  %9653 = load i64, i64* %RBP.i2037
  %9654 = sub i64 %9653, 176
  %9655 = load i64, i64* %PC.i2035
  %9656 = add i64 %9655, 7
  store i64 %9656, i64* %PC.i2035
  store i64 %9654, i64* %RAX.i2036, align 8
  store %struct.Memory* %loadMem_40c4cf, %struct.Memory** %MEMORY
  %loadMem_40c4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9658 = getelementptr inbounds %struct.GPR, %struct.GPR* %9657, i32 0, i32 33
  %9659 = getelementptr inbounds %struct.Reg, %struct.Reg* %9658, i32 0, i32 0
  %PC.i2033 = bitcast %union.anon* %9659 to i64*
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9661 = getelementptr inbounds %struct.GPR, %struct.GPR* %9660, i32 0, i32 5
  %9662 = getelementptr inbounds %struct.Reg, %struct.Reg* %9661, i32 0, i32 0
  %RCX.i2034 = bitcast %union.anon* %9662 to i64*
  %9663 = load i64, i64* %PC.i2033
  %9664 = add i64 %9663, 5
  store i64 %9664, i64* %PC.i2033
  store i64 3, i64* %RCX.i2034, align 8
  store %struct.Memory* %loadMem_40c4d6, %struct.Memory** %MEMORY
  %loadMem_40c4db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9666 = getelementptr inbounds %struct.GPR, %struct.GPR* %9665, i32 0, i32 33
  %9667 = getelementptr inbounds %struct.Reg, %struct.Reg* %9666, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %9667 to i64*
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9669 = getelementptr inbounds %struct.GPR, %struct.GPR* %9668, i32 0, i32 5
  %9670 = getelementptr inbounds %struct.Reg, %struct.Reg* %9669, i32 0, i32 0
  %RCX.i2031 = bitcast %union.anon* %9670 to i64*
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9672 = getelementptr inbounds %struct.GPR, %struct.GPR* %9671, i32 0, i32 15
  %9673 = getelementptr inbounds %struct.Reg, %struct.Reg* %9672, i32 0, i32 0
  %RBP.i2032 = bitcast %union.anon* %9673 to i64*
  %9674 = load i64, i64* %RCX.i2031
  %9675 = load i64, i64* %RBP.i2032
  %9676 = sub i64 %9675, 24
  %9677 = load i64, i64* %PC.i2030
  %9678 = add i64 %9677, 3
  store i64 %9678, i64* %PC.i2030
  %9679 = trunc i64 %9674 to i32
  %9680 = inttoptr i64 %9676 to i32*
  %9681 = load i32, i32* %9680
  %9682 = sub i32 %9679, %9681
  %9683 = zext i32 %9682 to i64
  store i64 %9683, i64* %RCX.i2031, align 8
  %9684 = icmp ult i32 %9679, %9681
  %9685 = zext i1 %9684 to i8
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9685, i8* %9686, align 1
  %9687 = and i32 %9682, 255
  %9688 = call i32 @llvm.ctpop.i32(i32 %9687)
  %9689 = trunc i32 %9688 to i8
  %9690 = and i8 %9689, 1
  %9691 = xor i8 %9690, 1
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9691, i8* %9692, align 1
  %9693 = xor i32 %9681, %9679
  %9694 = xor i32 %9693, %9682
  %9695 = lshr i32 %9694, 4
  %9696 = trunc i32 %9695 to i8
  %9697 = and i8 %9696, 1
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9697, i8* %9698, align 1
  %9699 = icmp eq i32 %9682, 0
  %9700 = zext i1 %9699 to i8
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9700, i8* %9701, align 1
  %9702 = lshr i32 %9682, 31
  %9703 = trunc i32 %9702 to i8
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9703, i8* %9704, align 1
  %9705 = lshr i32 %9679, 31
  %9706 = lshr i32 %9681, 31
  %9707 = xor i32 %9706, %9705
  %9708 = xor i32 %9702, %9705
  %9709 = add i32 %9708, %9707
  %9710 = icmp eq i32 %9709, 2
  %9711 = zext i1 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9711, i8* %9712, align 1
  store %struct.Memory* %loadMem_40c4db, %struct.Memory** %MEMORY
  %loadMem_40c4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 33
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %PC.i2027 = bitcast %union.anon* %9715 to i64*
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9717 = getelementptr inbounds %struct.GPR, %struct.GPR* %9716, i32 0, i32 5
  %9718 = getelementptr inbounds %struct.Reg, %struct.Reg* %9717, i32 0, i32 0
  %ECX.i2028 = bitcast %union.anon* %9718 to i32*
  %9719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9720 = getelementptr inbounds %struct.GPR, %struct.GPR* %9719, i32 0, i32 15
  %9721 = getelementptr inbounds %struct.Reg, %struct.Reg* %9720, i32 0, i32 0
  %RBP.i2029 = bitcast %union.anon* %9721 to i64*
  %9722 = load i64, i64* %RBP.i2029
  %9723 = sub i64 %9722, 32
  %9724 = load i32, i32* %ECX.i2028
  %9725 = zext i32 %9724 to i64
  %9726 = load i64, i64* %PC.i2027
  %9727 = add i64 %9726, 3
  store i64 %9727, i64* %PC.i2027
  %9728 = inttoptr i64 %9723 to i32*
  store i32 %9724, i32* %9728
  store %struct.Memory* %loadMem_40c4de, %struct.Memory** %MEMORY
  %loadMem_40c4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9730 = getelementptr inbounds %struct.GPR, %struct.GPR* %9729, i32 0, i32 33
  %9731 = getelementptr inbounds %struct.Reg, %struct.Reg* %9730, i32 0, i32 0
  %PC.i2024 = bitcast %union.anon* %9731 to i64*
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9733 = getelementptr inbounds %struct.GPR, %struct.GPR* %9732, i32 0, i32 7
  %9734 = getelementptr inbounds %struct.Reg, %struct.Reg* %9733, i32 0, i32 0
  %RDX.i2025 = bitcast %union.anon* %9734 to i64*
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9736 = getelementptr inbounds %struct.GPR, %struct.GPR* %9735, i32 0, i32 15
  %9737 = getelementptr inbounds %struct.Reg, %struct.Reg* %9736, i32 0, i32 0
  %RBP.i2026 = bitcast %union.anon* %9737 to i64*
  %9738 = load i64, i64* %RBP.i2026
  %9739 = sub i64 %9738, 20
  %9740 = load i64, i64* %PC.i2024
  %9741 = add i64 %9740, 4
  store i64 %9741, i64* %PC.i2024
  %9742 = inttoptr i64 %9739 to i32*
  %9743 = load i32, i32* %9742
  %9744 = sext i32 %9743 to i64
  store i64 %9744, i64* %RDX.i2025, align 8
  store %struct.Memory* %loadMem_40c4e1, %struct.Memory** %MEMORY
  %loadMem_40c4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 33
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %PC.i2022 = bitcast %union.anon* %9747 to i64*
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 7
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %RDX.i2023 = bitcast %union.anon* %9750 to i64*
  %9751 = load i64, i64* %RDX.i2023
  %9752 = load i64, i64* %PC.i2022
  %9753 = add i64 %9752, 4
  store i64 %9753, i64* %PC.i2022
  %9754 = shl i64 %9751, 3
  %9755 = icmp slt i64 %9754, 0
  %9756 = shl i64 %9754, 1
  store i64 %9756, i64* %RDX.i2023, align 8
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9758 = zext i1 %9755 to i8
  store i8 %9758, i8* %9757, align 1
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9760 = trunc i64 %9756 to i32
  %9761 = and i32 %9760, 254
  %9762 = call i32 @llvm.ctpop.i32(i32 %9761)
  %9763 = trunc i32 %9762 to i8
  %9764 = and i8 %9763, 1
  %9765 = xor i8 %9764, 1
  store i8 %9765, i8* %9759, align 1
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9766, align 1
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9768 = icmp eq i64 %9756, 0
  %9769 = zext i1 %9768 to i8
  store i8 %9769, i8* %9767, align 1
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9771 = lshr i64 %9756, 63
  %9772 = trunc i64 %9771 to i8
  store i8 %9772, i8* %9770, align 1
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9773, align 1
  store %struct.Memory* %loadMem_40c4e5, %struct.Memory** %MEMORY
  %loadMem_40c4e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 33
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %PC.i2019 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 1
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %RAX.i2020 = bitcast %union.anon* %9779 to i64*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 9
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %RSI.i2021 = bitcast %union.anon* %9782 to i64*
  %9783 = load i64, i64* %RAX.i2020
  %9784 = load i64, i64* %PC.i2019
  %9785 = add i64 %9784, 3
  store i64 %9785, i64* %PC.i2019
  store i64 %9783, i64* %RSI.i2021, align 8
  store %struct.Memory* %loadMem_40c4e9, %struct.Memory** %MEMORY
  %loadMem_40c4ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9787 = getelementptr inbounds %struct.GPR, %struct.GPR* %9786, i32 0, i32 33
  %9788 = getelementptr inbounds %struct.Reg, %struct.Reg* %9787, i32 0, i32 0
  %PC.i2016 = bitcast %union.anon* %9788 to i64*
  %9789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9790 = getelementptr inbounds %struct.GPR, %struct.GPR* %9789, i32 0, i32 7
  %9791 = getelementptr inbounds %struct.Reg, %struct.Reg* %9790, i32 0, i32 0
  %RDX.i2017 = bitcast %union.anon* %9791 to i64*
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9793 = getelementptr inbounds %struct.GPR, %struct.GPR* %9792, i32 0, i32 9
  %9794 = getelementptr inbounds %struct.Reg, %struct.Reg* %9793, i32 0, i32 0
  %RSI.i2018 = bitcast %union.anon* %9794 to i64*
  %9795 = load i64, i64* %RSI.i2018
  %9796 = load i64, i64* %RDX.i2017
  %9797 = load i64, i64* %PC.i2016
  %9798 = add i64 %9797, 3
  store i64 %9798, i64* %PC.i2016
  %9799 = add i64 %9796, %9795
  store i64 %9799, i64* %RSI.i2018, align 8
  %9800 = icmp ult i64 %9799, %9795
  %9801 = icmp ult i64 %9799, %9796
  %9802 = or i1 %9800, %9801
  %9803 = zext i1 %9802 to i8
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9803, i8* %9804, align 1
  %9805 = trunc i64 %9799 to i32
  %9806 = and i32 %9805, 255
  %9807 = call i32 @llvm.ctpop.i32(i32 %9806)
  %9808 = trunc i32 %9807 to i8
  %9809 = and i8 %9808, 1
  %9810 = xor i8 %9809, 1
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9810, i8* %9811, align 1
  %9812 = xor i64 %9796, %9795
  %9813 = xor i64 %9812, %9799
  %9814 = lshr i64 %9813, 4
  %9815 = trunc i64 %9814 to i8
  %9816 = and i8 %9815, 1
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9816, i8* %9817, align 1
  %9818 = icmp eq i64 %9799, 0
  %9819 = zext i1 %9818 to i8
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9819, i8* %9820, align 1
  %9821 = lshr i64 %9799, 63
  %9822 = trunc i64 %9821 to i8
  %9823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9822, i8* %9823, align 1
  %9824 = lshr i64 %9795, 63
  %9825 = lshr i64 %9796, 63
  %9826 = xor i64 %9821, %9824
  %9827 = xor i64 %9821, %9825
  %9828 = add i64 %9826, %9827
  %9829 = icmp eq i64 %9828, 2
  %9830 = zext i1 %9829 to i8
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9830, i8* %9831, align 1
  store %struct.Memory* %loadMem_40c4ec, %struct.Memory** %MEMORY
  %loadMem_40c4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9833 = getelementptr inbounds %struct.GPR, %struct.GPR* %9832, i32 0, i32 33
  %9834 = getelementptr inbounds %struct.Reg, %struct.Reg* %9833, i32 0, i32 0
  %PC.i2013 = bitcast %union.anon* %9834 to i64*
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9836 = getelementptr inbounds %struct.GPR, %struct.GPR* %9835, i32 0, i32 7
  %9837 = getelementptr inbounds %struct.Reg, %struct.Reg* %9836, i32 0, i32 0
  %RDX.i2014 = bitcast %union.anon* %9837 to i64*
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 15
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %RBP.i2015 = bitcast %union.anon* %9840 to i64*
  %9841 = load i64, i64* %RBP.i2015
  %9842 = sub i64 %9841, 24
  %9843 = load i64, i64* %PC.i2013
  %9844 = add i64 %9843, 4
  store i64 %9844, i64* %PC.i2013
  %9845 = inttoptr i64 %9842 to i32*
  %9846 = load i32, i32* %9845
  %9847 = sext i32 %9846 to i64
  store i64 %9847, i64* %RDX.i2014, align 8
  store %struct.Memory* %loadMem_40c4ef, %struct.Memory** %MEMORY
  %loadMem_40c4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9849 = getelementptr inbounds %struct.GPR, %struct.GPR* %9848, i32 0, i32 33
  %9850 = getelementptr inbounds %struct.Reg, %struct.Reg* %9849, i32 0, i32 0
  %PC.i2009 = bitcast %union.anon* %9850 to i64*
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9852 = getelementptr inbounds %struct.GPR, %struct.GPR* %9851, i32 0, i32 5
  %9853 = getelementptr inbounds %struct.Reg, %struct.Reg* %9852, i32 0, i32 0
  %RCX.i2010 = bitcast %union.anon* %9853 to i64*
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9855 = getelementptr inbounds %struct.GPR, %struct.GPR* %9854, i32 0, i32 7
  %9856 = getelementptr inbounds %struct.Reg, %struct.Reg* %9855, i32 0, i32 0
  %RDX.i2011 = bitcast %union.anon* %9856 to i64*
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9858 = getelementptr inbounds %struct.GPR, %struct.GPR* %9857, i32 0, i32 9
  %9859 = getelementptr inbounds %struct.Reg, %struct.Reg* %9858, i32 0, i32 0
  %RSI.i2012 = bitcast %union.anon* %9859 to i64*
  %9860 = load i64, i64* %RSI.i2012
  %9861 = load i64, i64* %RDX.i2011
  %9862 = mul i64 %9861, 4
  %9863 = add i64 %9862, %9860
  %9864 = load i64, i64* %PC.i2009
  %9865 = add i64 %9864, 3
  store i64 %9865, i64* %PC.i2009
  %9866 = inttoptr i64 %9863 to i32*
  %9867 = load i32, i32* %9866
  %9868 = zext i32 %9867 to i64
  store i64 %9868, i64* %RCX.i2010, align 8
  store %struct.Memory* %loadMem_40c4f3, %struct.Memory** %MEMORY
  %loadMem_40c4f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9870 = getelementptr inbounds %struct.GPR, %struct.GPR* %9869, i32 0, i32 33
  %9871 = getelementptr inbounds %struct.Reg, %struct.Reg* %9870, i32 0, i32 0
  %PC.i2006 = bitcast %union.anon* %9871 to i64*
  %9872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9873 = getelementptr inbounds %struct.GPR, %struct.GPR* %9872, i32 0, i32 7
  %9874 = getelementptr inbounds %struct.Reg, %struct.Reg* %9873, i32 0, i32 0
  %RDX.i2007 = bitcast %union.anon* %9874 to i64*
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9876 = getelementptr inbounds %struct.GPR, %struct.GPR* %9875, i32 0, i32 15
  %9877 = getelementptr inbounds %struct.Reg, %struct.Reg* %9876, i32 0, i32 0
  %RBP.i2008 = bitcast %union.anon* %9877 to i64*
  %9878 = load i64, i64* %RBP.i2008
  %9879 = sub i64 %9878, 20
  %9880 = load i64, i64* %PC.i2006
  %9881 = add i64 %9880, 4
  store i64 %9881, i64* %PC.i2006
  %9882 = inttoptr i64 %9879 to i32*
  %9883 = load i32, i32* %9882
  %9884 = sext i32 %9883 to i64
  store i64 %9884, i64* %RDX.i2007, align 8
  store %struct.Memory* %loadMem_40c4f6, %struct.Memory** %MEMORY
  %loadMem_40c4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9886 = getelementptr inbounds %struct.GPR, %struct.GPR* %9885, i32 0, i32 33
  %9887 = getelementptr inbounds %struct.Reg, %struct.Reg* %9886, i32 0, i32 0
  %PC.i2004 = bitcast %union.anon* %9887 to i64*
  %9888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9889 = getelementptr inbounds %struct.GPR, %struct.GPR* %9888, i32 0, i32 7
  %9890 = getelementptr inbounds %struct.Reg, %struct.Reg* %9889, i32 0, i32 0
  %RDX.i2005 = bitcast %union.anon* %9890 to i64*
  %9891 = load i64, i64* %RDX.i2005
  %9892 = load i64, i64* %PC.i2004
  %9893 = add i64 %9892, 4
  store i64 %9893, i64* %PC.i2004
  %9894 = shl i64 %9891, 3
  %9895 = icmp slt i64 %9894, 0
  %9896 = shl i64 %9894, 1
  store i64 %9896, i64* %RDX.i2005, align 8
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9898 = zext i1 %9895 to i8
  store i8 %9898, i8* %9897, align 1
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9900 = trunc i64 %9896 to i32
  %9901 = and i32 %9900, 254
  %9902 = call i32 @llvm.ctpop.i32(i32 %9901)
  %9903 = trunc i32 %9902 to i8
  %9904 = and i8 %9903, 1
  %9905 = xor i8 %9904, 1
  store i8 %9905, i8* %9899, align 1
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9906, align 1
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9908 = icmp eq i64 %9896, 0
  %9909 = zext i1 %9908 to i8
  store i8 %9909, i8* %9907, align 1
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9911 = lshr i64 %9896, 63
  %9912 = trunc i64 %9911 to i8
  store i8 %9912, i8* %9910, align 1
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9913, align 1
  store %struct.Memory* %loadMem_40c4fa, %struct.Memory** %MEMORY
  %loadMem_40c4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 33
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %9916 to i64*
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9918 = getelementptr inbounds %struct.GPR, %struct.GPR* %9917, i32 0, i32 1
  %9919 = getelementptr inbounds %struct.Reg, %struct.Reg* %9918, i32 0, i32 0
  %RAX.i2002 = bitcast %union.anon* %9919 to i64*
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 9
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %RSI.i2003 = bitcast %union.anon* %9922 to i64*
  %9923 = load i64, i64* %RAX.i2002
  %9924 = load i64, i64* %PC.i2001
  %9925 = add i64 %9924, 3
  store i64 %9925, i64* %PC.i2001
  store i64 %9923, i64* %RSI.i2003, align 8
  store %struct.Memory* %loadMem_40c4fe, %struct.Memory** %MEMORY
  %loadMem_40c501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 33
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %PC.i1998 = bitcast %union.anon* %9928 to i64*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 7
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %RDX.i1999 = bitcast %union.anon* %9931 to i64*
  %9932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9933 = getelementptr inbounds %struct.GPR, %struct.GPR* %9932, i32 0, i32 9
  %9934 = getelementptr inbounds %struct.Reg, %struct.Reg* %9933, i32 0, i32 0
  %RSI.i2000 = bitcast %union.anon* %9934 to i64*
  %9935 = load i64, i64* %RSI.i2000
  %9936 = load i64, i64* %RDX.i1999
  %9937 = load i64, i64* %PC.i1998
  %9938 = add i64 %9937, 3
  store i64 %9938, i64* %PC.i1998
  %9939 = add i64 %9936, %9935
  store i64 %9939, i64* %RSI.i2000, align 8
  %9940 = icmp ult i64 %9939, %9935
  %9941 = icmp ult i64 %9939, %9936
  %9942 = or i1 %9940, %9941
  %9943 = zext i1 %9942 to i8
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9943, i8* %9944, align 1
  %9945 = trunc i64 %9939 to i32
  %9946 = and i32 %9945, 255
  %9947 = call i32 @llvm.ctpop.i32(i32 %9946)
  %9948 = trunc i32 %9947 to i8
  %9949 = and i8 %9948, 1
  %9950 = xor i8 %9949, 1
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9950, i8* %9951, align 1
  %9952 = xor i64 %9936, %9935
  %9953 = xor i64 %9952, %9939
  %9954 = lshr i64 %9953, 4
  %9955 = trunc i64 %9954 to i8
  %9956 = and i8 %9955, 1
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9956, i8* %9957, align 1
  %9958 = icmp eq i64 %9939, 0
  %9959 = zext i1 %9958 to i8
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9959, i8* %9960, align 1
  %9961 = lshr i64 %9939, 63
  %9962 = trunc i64 %9961 to i8
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9962, i8* %9963, align 1
  %9964 = lshr i64 %9935, 63
  %9965 = lshr i64 %9936, 63
  %9966 = xor i64 %9961, %9964
  %9967 = xor i64 %9961, %9965
  %9968 = add i64 %9966, %9967
  %9969 = icmp eq i64 %9968, 2
  %9970 = zext i1 %9969 to i8
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9970, i8* %9971, align 1
  store %struct.Memory* %loadMem_40c501, %struct.Memory** %MEMORY
  %loadMem_40c504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9973 = getelementptr inbounds %struct.GPR, %struct.GPR* %9972, i32 0, i32 33
  %9974 = getelementptr inbounds %struct.Reg, %struct.Reg* %9973, i32 0, i32 0
  %PC.i1995 = bitcast %union.anon* %9974 to i64*
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9976 = getelementptr inbounds %struct.GPR, %struct.GPR* %9975, i32 0, i32 7
  %9977 = getelementptr inbounds %struct.Reg, %struct.Reg* %9976, i32 0, i32 0
  %RDX.i1996 = bitcast %union.anon* %9977 to i64*
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9979 = getelementptr inbounds %struct.GPR, %struct.GPR* %9978, i32 0, i32 15
  %9980 = getelementptr inbounds %struct.Reg, %struct.Reg* %9979, i32 0, i32 0
  %RBP.i1997 = bitcast %union.anon* %9980 to i64*
  %9981 = load i64, i64* %RBP.i1997
  %9982 = sub i64 %9981, 32
  %9983 = load i64, i64* %PC.i1995
  %9984 = add i64 %9983, 4
  store i64 %9984, i64* %PC.i1995
  %9985 = inttoptr i64 %9982 to i32*
  %9986 = load i32, i32* %9985
  %9987 = sext i32 %9986 to i64
  store i64 %9987, i64* %RDX.i1996, align 8
  store %struct.Memory* %loadMem_40c504, %struct.Memory** %MEMORY
  %loadMem_40c508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 33
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %PC.i1991 = bitcast %union.anon* %9990 to i64*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 5
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %RCX.i1992 = bitcast %union.anon* %9993 to i64*
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9995 = getelementptr inbounds %struct.GPR, %struct.GPR* %9994, i32 0, i32 7
  %9996 = getelementptr inbounds %struct.Reg, %struct.Reg* %9995, i32 0, i32 0
  %RDX.i1993 = bitcast %union.anon* %9996 to i64*
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9998 = getelementptr inbounds %struct.GPR, %struct.GPR* %9997, i32 0, i32 9
  %9999 = getelementptr inbounds %struct.Reg, %struct.Reg* %9998, i32 0, i32 0
  %RSI.i1994 = bitcast %union.anon* %9999 to i64*
  %10000 = load i64, i64* %RCX.i1992
  %10001 = load i64, i64* %RSI.i1994
  %10002 = load i64, i64* %RDX.i1993
  %10003 = mul i64 %10002, 4
  %10004 = add i64 %10003, %10001
  %10005 = load i64, i64* %PC.i1991
  %10006 = add i64 %10005, 3
  store i64 %10006, i64* %PC.i1991
  %10007 = trunc i64 %10000 to i32
  %10008 = inttoptr i64 %10004 to i32*
  %10009 = load i32, i32* %10008
  %10010 = add i32 %10009, %10007
  %10011 = zext i32 %10010 to i64
  store i64 %10011, i64* %RCX.i1992, align 8
  %10012 = icmp ult i32 %10010, %10007
  %10013 = icmp ult i32 %10010, %10009
  %10014 = or i1 %10012, %10013
  %10015 = zext i1 %10014 to i8
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10015, i8* %10016, align 1
  %10017 = and i32 %10010, 255
  %10018 = call i32 @llvm.ctpop.i32(i32 %10017)
  %10019 = trunc i32 %10018 to i8
  %10020 = and i8 %10019, 1
  %10021 = xor i8 %10020, 1
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10021, i8* %10022, align 1
  %10023 = xor i32 %10009, %10007
  %10024 = xor i32 %10023, %10010
  %10025 = lshr i32 %10024, 4
  %10026 = trunc i32 %10025 to i8
  %10027 = and i8 %10026, 1
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10027, i8* %10028, align 1
  %10029 = icmp eq i32 %10010, 0
  %10030 = zext i1 %10029 to i8
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10030, i8* %10031, align 1
  %10032 = lshr i32 %10010, 31
  %10033 = trunc i32 %10032 to i8
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10033, i8* %10034, align 1
  %10035 = lshr i32 %10007, 31
  %10036 = lshr i32 %10009, 31
  %10037 = xor i32 %10032, %10035
  %10038 = xor i32 %10032, %10036
  %10039 = add i32 %10037, %10038
  %10040 = icmp eq i32 %10039, 2
  %10041 = zext i1 %10040 to i8
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10041, i8* %10042, align 1
  store %struct.Memory* %loadMem_40c508, %struct.Memory** %MEMORY
  %loadMem_40c50b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10044 = getelementptr inbounds %struct.GPR, %struct.GPR* %10043, i32 0, i32 33
  %10045 = getelementptr inbounds %struct.Reg, %struct.Reg* %10044, i32 0, i32 0
  %PC.i1988 = bitcast %union.anon* %10045 to i64*
  %10046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10047 = getelementptr inbounds %struct.GPR, %struct.GPR* %10046, i32 0, i32 7
  %10048 = getelementptr inbounds %struct.Reg, %struct.Reg* %10047, i32 0, i32 0
  %RDX.i1989 = bitcast %union.anon* %10048 to i64*
  %10049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10050 = getelementptr inbounds %struct.GPR, %struct.GPR* %10049, i32 0, i32 15
  %10051 = getelementptr inbounds %struct.Reg, %struct.Reg* %10050, i32 0, i32 0
  %RBP.i1990 = bitcast %union.anon* %10051 to i64*
  %10052 = load i64, i64* %RBP.i1990
  %10053 = sub i64 %10052, 24
  %10054 = load i64, i64* %PC.i1988
  %10055 = add i64 %10054, 4
  store i64 %10055, i64* %PC.i1988
  %10056 = inttoptr i64 %10053 to i32*
  %10057 = load i32, i32* %10056
  %10058 = sext i32 %10057 to i64
  store i64 %10058, i64* %RDX.i1989, align 8
  store %struct.Memory* %loadMem_40c50b, %struct.Memory** %MEMORY
  %loadMem_40c50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10060 = getelementptr inbounds %struct.GPR, %struct.GPR* %10059, i32 0, i32 33
  %10061 = getelementptr inbounds %struct.Reg, %struct.Reg* %10060, i32 0, i32 0
  %PC.i1984 = bitcast %union.anon* %10061 to i64*
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10063 = getelementptr inbounds %struct.GPR, %struct.GPR* %10062, i32 0, i32 5
  %10064 = getelementptr inbounds %struct.Reg, %struct.Reg* %10063, i32 0, i32 0
  %ECX.i1985 = bitcast %union.anon* %10064 to i32*
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10066 = getelementptr inbounds %struct.GPR, %struct.GPR* %10065, i32 0, i32 7
  %10067 = getelementptr inbounds %struct.Reg, %struct.Reg* %10066, i32 0, i32 0
  %RDX.i1986 = bitcast %union.anon* %10067 to i64*
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10069 = getelementptr inbounds %struct.GPR, %struct.GPR* %10068, i32 0, i32 15
  %10070 = getelementptr inbounds %struct.Reg, %struct.Reg* %10069, i32 0, i32 0
  %RBP.i1987 = bitcast %union.anon* %10070 to i64*
  %10071 = load i64, i64* %RBP.i1987
  %10072 = load i64, i64* %RDX.i1986
  %10073 = mul i64 %10072, 4
  %10074 = add i64 %10071, -64
  %10075 = add i64 %10074, %10073
  %10076 = load i32, i32* %ECX.i1985
  %10077 = zext i32 %10076 to i64
  %10078 = load i64, i64* %PC.i1984
  %10079 = add i64 %10078, 4
  store i64 %10079, i64* %PC.i1984
  %10080 = inttoptr i64 %10075 to i32*
  store i32 %10076, i32* %10080
  store %struct.Memory* %loadMem_40c50f, %struct.Memory** %MEMORY
  %loadMem_40c513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 33
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %PC.i1981 = bitcast %union.anon* %10083 to i64*
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10085 = getelementptr inbounds %struct.GPR, %struct.GPR* %10084, i32 0, i32 7
  %10086 = getelementptr inbounds %struct.Reg, %struct.Reg* %10085, i32 0, i32 0
  %RDX.i1982 = bitcast %union.anon* %10086 to i64*
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10088 = getelementptr inbounds %struct.GPR, %struct.GPR* %10087, i32 0, i32 15
  %10089 = getelementptr inbounds %struct.Reg, %struct.Reg* %10088, i32 0, i32 0
  %RBP.i1983 = bitcast %union.anon* %10089 to i64*
  %10090 = load i64, i64* %RBP.i1983
  %10091 = sub i64 %10090, 20
  %10092 = load i64, i64* %PC.i1981
  %10093 = add i64 %10092, 4
  store i64 %10093, i64* %PC.i1981
  %10094 = inttoptr i64 %10091 to i32*
  %10095 = load i32, i32* %10094
  %10096 = sext i32 %10095 to i64
  store i64 %10096, i64* %RDX.i1982, align 8
  store %struct.Memory* %loadMem_40c513, %struct.Memory** %MEMORY
  %loadMem_40c517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10098 = getelementptr inbounds %struct.GPR, %struct.GPR* %10097, i32 0, i32 33
  %10099 = getelementptr inbounds %struct.Reg, %struct.Reg* %10098, i32 0, i32 0
  %PC.i1979 = bitcast %union.anon* %10099 to i64*
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 7
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %RDX.i1980 = bitcast %union.anon* %10102 to i64*
  %10103 = load i64, i64* %RDX.i1980
  %10104 = load i64, i64* %PC.i1979
  %10105 = add i64 %10104, 4
  store i64 %10105, i64* %PC.i1979
  %10106 = shl i64 %10103, 3
  %10107 = icmp slt i64 %10106, 0
  %10108 = shl i64 %10106, 1
  store i64 %10108, i64* %RDX.i1980, align 8
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10110 = zext i1 %10107 to i8
  store i8 %10110, i8* %10109, align 1
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10112 = trunc i64 %10108 to i32
  %10113 = and i32 %10112, 254
  %10114 = call i32 @llvm.ctpop.i32(i32 %10113)
  %10115 = trunc i32 %10114 to i8
  %10116 = and i8 %10115, 1
  %10117 = xor i8 %10116, 1
  store i8 %10117, i8* %10111, align 1
  %10118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10118, align 1
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10120 = icmp eq i64 %10108, 0
  %10121 = zext i1 %10120 to i8
  store i8 %10121, i8* %10119, align 1
  %10122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10123 = lshr i64 %10108, 63
  %10124 = trunc i64 %10123 to i8
  store i8 %10124, i8* %10122, align 1
  %10125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10125, align 1
  store %struct.Memory* %loadMem_40c517, %struct.Memory** %MEMORY
  %loadMem_40c51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 33
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %PC.i1976 = bitcast %union.anon* %10128 to i64*
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10130 = getelementptr inbounds %struct.GPR, %struct.GPR* %10129, i32 0, i32 1
  %10131 = getelementptr inbounds %struct.Reg, %struct.Reg* %10130, i32 0, i32 0
  %RAX.i1977 = bitcast %union.anon* %10131 to i64*
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10133 = getelementptr inbounds %struct.GPR, %struct.GPR* %10132, i32 0, i32 9
  %10134 = getelementptr inbounds %struct.Reg, %struct.Reg* %10133, i32 0, i32 0
  %RSI.i1978 = bitcast %union.anon* %10134 to i64*
  %10135 = load i64, i64* %RAX.i1977
  %10136 = load i64, i64* %PC.i1976
  %10137 = add i64 %10136, 3
  store i64 %10137, i64* %PC.i1976
  store i64 %10135, i64* %RSI.i1978, align 8
  store %struct.Memory* %loadMem_40c51b, %struct.Memory** %MEMORY
  %loadMem_40c51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10139 = getelementptr inbounds %struct.GPR, %struct.GPR* %10138, i32 0, i32 33
  %10140 = getelementptr inbounds %struct.Reg, %struct.Reg* %10139, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %10140 to i64*
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10142 = getelementptr inbounds %struct.GPR, %struct.GPR* %10141, i32 0, i32 7
  %10143 = getelementptr inbounds %struct.Reg, %struct.Reg* %10142, i32 0, i32 0
  %RDX.i1974 = bitcast %union.anon* %10143 to i64*
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 9
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %RSI.i1975 = bitcast %union.anon* %10146 to i64*
  %10147 = load i64, i64* %RSI.i1975
  %10148 = load i64, i64* %RDX.i1974
  %10149 = load i64, i64* %PC.i1973
  %10150 = add i64 %10149, 3
  store i64 %10150, i64* %PC.i1973
  %10151 = add i64 %10148, %10147
  store i64 %10151, i64* %RSI.i1975, align 8
  %10152 = icmp ult i64 %10151, %10147
  %10153 = icmp ult i64 %10151, %10148
  %10154 = or i1 %10152, %10153
  %10155 = zext i1 %10154 to i8
  %10156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10155, i8* %10156, align 1
  %10157 = trunc i64 %10151 to i32
  %10158 = and i32 %10157, 255
  %10159 = call i32 @llvm.ctpop.i32(i32 %10158)
  %10160 = trunc i32 %10159 to i8
  %10161 = and i8 %10160, 1
  %10162 = xor i8 %10161, 1
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10162, i8* %10163, align 1
  %10164 = xor i64 %10148, %10147
  %10165 = xor i64 %10164, %10151
  %10166 = lshr i64 %10165, 4
  %10167 = trunc i64 %10166 to i8
  %10168 = and i8 %10167, 1
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10168, i8* %10169, align 1
  %10170 = icmp eq i64 %10151, 0
  %10171 = zext i1 %10170 to i8
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10171, i8* %10172, align 1
  %10173 = lshr i64 %10151, 63
  %10174 = trunc i64 %10173 to i8
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10174, i8* %10175, align 1
  %10176 = lshr i64 %10147, 63
  %10177 = lshr i64 %10148, 63
  %10178 = xor i64 %10173, %10176
  %10179 = xor i64 %10173, %10177
  %10180 = add i64 %10178, %10179
  %10181 = icmp eq i64 %10180, 2
  %10182 = zext i1 %10181 to i8
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10182, i8* %10183, align 1
  store %struct.Memory* %loadMem_40c51e, %struct.Memory** %MEMORY
  %loadMem_40c521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10185 = getelementptr inbounds %struct.GPR, %struct.GPR* %10184, i32 0, i32 33
  %10186 = getelementptr inbounds %struct.Reg, %struct.Reg* %10185, i32 0, i32 0
  %PC.i1970 = bitcast %union.anon* %10186 to i64*
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10188 = getelementptr inbounds %struct.GPR, %struct.GPR* %10187, i32 0, i32 7
  %10189 = getelementptr inbounds %struct.Reg, %struct.Reg* %10188, i32 0, i32 0
  %RDX.i1971 = bitcast %union.anon* %10189 to i64*
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10191 = getelementptr inbounds %struct.GPR, %struct.GPR* %10190, i32 0, i32 15
  %10192 = getelementptr inbounds %struct.Reg, %struct.Reg* %10191, i32 0, i32 0
  %RBP.i1972 = bitcast %union.anon* %10192 to i64*
  %10193 = load i64, i64* %RBP.i1972
  %10194 = sub i64 %10193, 24
  %10195 = load i64, i64* %PC.i1970
  %10196 = add i64 %10195, 4
  store i64 %10196, i64* %PC.i1970
  %10197 = inttoptr i64 %10194 to i32*
  %10198 = load i32, i32* %10197
  %10199 = sext i32 %10198 to i64
  store i64 %10199, i64* %RDX.i1971, align 8
  store %struct.Memory* %loadMem_40c521, %struct.Memory** %MEMORY
  %loadMem_40c525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10201 = getelementptr inbounds %struct.GPR, %struct.GPR* %10200, i32 0, i32 33
  %10202 = getelementptr inbounds %struct.Reg, %struct.Reg* %10201, i32 0, i32 0
  %PC.i1966 = bitcast %union.anon* %10202 to i64*
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 5
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %RCX.i1967 = bitcast %union.anon* %10205 to i64*
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 7
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %RDX.i1968 = bitcast %union.anon* %10208 to i64*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 9
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %RSI.i1969 = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %RSI.i1969
  %10213 = load i64, i64* %RDX.i1968
  %10214 = mul i64 %10213, 4
  %10215 = add i64 %10214, %10212
  %10216 = load i64, i64* %PC.i1966
  %10217 = add i64 %10216, 3
  store i64 %10217, i64* %PC.i1966
  %10218 = inttoptr i64 %10215 to i32*
  %10219 = load i32, i32* %10218
  %10220 = zext i32 %10219 to i64
  store i64 %10220, i64* %RCX.i1967, align 8
  store %struct.Memory* %loadMem_40c525, %struct.Memory** %MEMORY
  %loadMem_40c528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10222 = getelementptr inbounds %struct.GPR, %struct.GPR* %10221, i32 0, i32 33
  %10223 = getelementptr inbounds %struct.Reg, %struct.Reg* %10222, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %10223 to i64*
  %10224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10225 = getelementptr inbounds %struct.GPR, %struct.GPR* %10224, i32 0, i32 7
  %10226 = getelementptr inbounds %struct.Reg, %struct.Reg* %10225, i32 0, i32 0
  %RDX.i1964 = bitcast %union.anon* %10226 to i64*
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10228 = getelementptr inbounds %struct.GPR, %struct.GPR* %10227, i32 0, i32 15
  %10229 = getelementptr inbounds %struct.Reg, %struct.Reg* %10228, i32 0, i32 0
  %RBP.i1965 = bitcast %union.anon* %10229 to i64*
  %10230 = load i64, i64* %RBP.i1965
  %10231 = sub i64 %10230, 20
  %10232 = load i64, i64* %PC.i1963
  %10233 = add i64 %10232, 4
  store i64 %10233, i64* %PC.i1963
  %10234 = inttoptr i64 %10231 to i32*
  %10235 = load i32, i32* %10234
  %10236 = sext i32 %10235 to i64
  store i64 %10236, i64* %RDX.i1964, align 8
  store %struct.Memory* %loadMem_40c528, %struct.Memory** %MEMORY
  %loadMem_40c52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10238 = getelementptr inbounds %struct.GPR, %struct.GPR* %10237, i32 0, i32 33
  %10239 = getelementptr inbounds %struct.Reg, %struct.Reg* %10238, i32 0, i32 0
  %PC.i1961 = bitcast %union.anon* %10239 to i64*
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10241 = getelementptr inbounds %struct.GPR, %struct.GPR* %10240, i32 0, i32 7
  %10242 = getelementptr inbounds %struct.Reg, %struct.Reg* %10241, i32 0, i32 0
  %RDX.i1962 = bitcast %union.anon* %10242 to i64*
  %10243 = load i64, i64* %RDX.i1962
  %10244 = load i64, i64* %PC.i1961
  %10245 = add i64 %10244, 4
  store i64 %10245, i64* %PC.i1961
  %10246 = shl i64 %10243, 3
  %10247 = icmp slt i64 %10246, 0
  %10248 = shl i64 %10246, 1
  store i64 %10248, i64* %RDX.i1962, align 8
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10250 = zext i1 %10247 to i8
  store i8 %10250, i8* %10249, align 1
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10252 = trunc i64 %10248 to i32
  %10253 = and i32 %10252, 254
  %10254 = call i32 @llvm.ctpop.i32(i32 %10253)
  %10255 = trunc i32 %10254 to i8
  %10256 = and i8 %10255, 1
  %10257 = xor i8 %10256, 1
  store i8 %10257, i8* %10251, align 1
  %10258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10258, align 1
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10260 = icmp eq i64 %10248, 0
  %10261 = zext i1 %10260 to i8
  store i8 %10261, i8* %10259, align 1
  %10262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10263 = lshr i64 %10248, 63
  %10264 = trunc i64 %10263 to i8
  store i8 %10264, i8* %10262, align 1
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10265, align 1
  store %struct.Memory* %loadMem_40c52c, %struct.Memory** %MEMORY
  %loadMem_40c530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10267 = getelementptr inbounds %struct.GPR, %struct.GPR* %10266, i32 0, i32 33
  %10268 = getelementptr inbounds %struct.Reg, %struct.Reg* %10267, i32 0, i32 0
  %PC.i1958 = bitcast %union.anon* %10268 to i64*
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10270 = getelementptr inbounds %struct.GPR, %struct.GPR* %10269, i32 0, i32 1
  %10271 = getelementptr inbounds %struct.Reg, %struct.Reg* %10270, i32 0, i32 0
  %RAX.i1959 = bitcast %union.anon* %10271 to i64*
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10273 = getelementptr inbounds %struct.GPR, %struct.GPR* %10272, i32 0, i32 7
  %10274 = getelementptr inbounds %struct.Reg, %struct.Reg* %10273, i32 0, i32 0
  %RDX.i1960 = bitcast %union.anon* %10274 to i64*
  %10275 = load i64, i64* %RAX.i1959
  %10276 = load i64, i64* %RDX.i1960
  %10277 = load i64, i64* %PC.i1958
  %10278 = add i64 %10277, 3
  store i64 %10278, i64* %PC.i1958
  %10279 = add i64 %10276, %10275
  store i64 %10279, i64* %RAX.i1959, align 8
  %10280 = icmp ult i64 %10279, %10275
  %10281 = icmp ult i64 %10279, %10276
  %10282 = or i1 %10280, %10281
  %10283 = zext i1 %10282 to i8
  %10284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10283, i8* %10284, align 1
  %10285 = trunc i64 %10279 to i32
  %10286 = and i32 %10285, 255
  %10287 = call i32 @llvm.ctpop.i32(i32 %10286)
  %10288 = trunc i32 %10287 to i8
  %10289 = and i8 %10288, 1
  %10290 = xor i8 %10289, 1
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10290, i8* %10291, align 1
  %10292 = xor i64 %10276, %10275
  %10293 = xor i64 %10292, %10279
  %10294 = lshr i64 %10293, 4
  %10295 = trunc i64 %10294 to i8
  %10296 = and i8 %10295, 1
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10296, i8* %10297, align 1
  %10298 = icmp eq i64 %10279, 0
  %10299 = zext i1 %10298 to i8
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10299, i8* %10300, align 1
  %10301 = lshr i64 %10279, 63
  %10302 = trunc i64 %10301 to i8
  %10303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10302, i8* %10303, align 1
  %10304 = lshr i64 %10275, 63
  %10305 = lshr i64 %10276, 63
  %10306 = xor i64 %10301, %10304
  %10307 = xor i64 %10301, %10305
  %10308 = add i64 %10306, %10307
  %10309 = icmp eq i64 %10308, 2
  %10310 = zext i1 %10309 to i8
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10310, i8* %10311, align 1
  store %struct.Memory* %loadMem_40c530, %struct.Memory** %MEMORY
  %loadMem_40c533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10313 = getelementptr inbounds %struct.GPR, %struct.GPR* %10312, i32 0, i32 33
  %10314 = getelementptr inbounds %struct.Reg, %struct.Reg* %10313, i32 0, i32 0
  %PC.i1955 = bitcast %union.anon* %10314 to i64*
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 7
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %RDX.i1956 = bitcast %union.anon* %10317 to i64*
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 15
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %RBP.i1957 = bitcast %union.anon* %10320 to i64*
  %10321 = load i64, i64* %RBP.i1957
  %10322 = sub i64 %10321, 32
  %10323 = load i64, i64* %PC.i1955
  %10324 = add i64 %10323, 4
  store i64 %10324, i64* %PC.i1955
  %10325 = inttoptr i64 %10322 to i32*
  %10326 = load i32, i32* %10325
  %10327 = sext i32 %10326 to i64
  store i64 %10327, i64* %RDX.i1956, align 8
  store %struct.Memory* %loadMem_40c533, %struct.Memory** %MEMORY
  %loadMem_40c537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10329 = getelementptr inbounds %struct.GPR, %struct.GPR* %10328, i32 0, i32 33
  %10330 = getelementptr inbounds %struct.Reg, %struct.Reg* %10329, i32 0, i32 0
  %PC.i1951 = bitcast %union.anon* %10330 to i64*
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10332 = getelementptr inbounds %struct.GPR, %struct.GPR* %10331, i32 0, i32 1
  %10333 = getelementptr inbounds %struct.Reg, %struct.Reg* %10332, i32 0, i32 0
  %RAX.i1952 = bitcast %union.anon* %10333 to i64*
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10335 = getelementptr inbounds %struct.GPR, %struct.GPR* %10334, i32 0, i32 5
  %10336 = getelementptr inbounds %struct.Reg, %struct.Reg* %10335, i32 0, i32 0
  %RCX.i1953 = bitcast %union.anon* %10336 to i64*
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10338 = getelementptr inbounds %struct.GPR, %struct.GPR* %10337, i32 0, i32 7
  %10339 = getelementptr inbounds %struct.Reg, %struct.Reg* %10338, i32 0, i32 0
  %RDX.i1954 = bitcast %union.anon* %10339 to i64*
  %10340 = load i64, i64* %RCX.i1953
  %10341 = load i64, i64* %RAX.i1952
  %10342 = load i64, i64* %RDX.i1954
  %10343 = mul i64 %10342, 4
  %10344 = add i64 %10343, %10341
  %10345 = load i64, i64* %PC.i1951
  %10346 = add i64 %10345, 3
  store i64 %10346, i64* %PC.i1951
  %10347 = trunc i64 %10340 to i32
  %10348 = inttoptr i64 %10344 to i32*
  %10349 = load i32, i32* %10348
  %10350 = sub i32 %10347, %10349
  %10351 = zext i32 %10350 to i64
  store i64 %10351, i64* %RCX.i1953, align 8
  %10352 = icmp ult i32 %10347, %10349
  %10353 = zext i1 %10352 to i8
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10353, i8* %10354, align 1
  %10355 = and i32 %10350, 255
  %10356 = call i32 @llvm.ctpop.i32(i32 %10355)
  %10357 = trunc i32 %10356 to i8
  %10358 = and i8 %10357, 1
  %10359 = xor i8 %10358, 1
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10359, i8* %10360, align 1
  %10361 = xor i32 %10349, %10347
  %10362 = xor i32 %10361, %10350
  %10363 = lshr i32 %10362, 4
  %10364 = trunc i32 %10363 to i8
  %10365 = and i8 %10364, 1
  %10366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10365, i8* %10366, align 1
  %10367 = icmp eq i32 %10350, 0
  %10368 = zext i1 %10367 to i8
  %10369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10368, i8* %10369, align 1
  %10370 = lshr i32 %10350, 31
  %10371 = trunc i32 %10370 to i8
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10371, i8* %10372, align 1
  %10373 = lshr i32 %10347, 31
  %10374 = lshr i32 %10349, 31
  %10375 = xor i32 %10374, %10373
  %10376 = xor i32 %10370, %10373
  %10377 = add i32 %10376, %10375
  %10378 = icmp eq i32 %10377, 2
  %10379 = zext i1 %10378 to i8
  %10380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10379, i8* %10380, align 1
  store %struct.Memory* %loadMem_40c537, %struct.Memory** %MEMORY
  %loadMem_40c53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10382 = getelementptr inbounds %struct.GPR, %struct.GPR* %10381, i32 0, i32 33
  %10383 = getelementptr inbounds %struct.Reg, %struct.Reg* %10382, i32 0, i32 0
  %PC.i1948 = bitcast %union.anon* %10383 to i64*
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10385 = getelementptr inbounds %struct.GPR, %struct.GPR* %10384, i32 0, i32 1
  %10386 = getelementptr inbounds %struct.Reg, %struct.Reg* %10385, i32 0, i32 0
  %RAX.i1949 = bitcast %union.anon* %10386 to i64*
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10388 = getelementptr inbounds %struct.GPR, %struct.GPR* %10387, i32 0, i32 15
  %10389 = getelementptr inbounds %struct.Reg, %struct.Reg* %10388, i32 0, i32 0
  %RBP.i1950 = bitcast %union.anon* %10389 to i64*
  %10390 = load i64, i64* %RBP.i1950
  %10391 = sub i64 %10390, 32
  %10392 = load i64, i64* %PC.i1948
  %10393 = add i64 %10392, 4
  store i64 %10393, i64* %PC.i1948
  %10394 = inttoptr i64 %10391 to i32*
  %10395 = load i32, i32* %10394
  %10396 = sext i32 %10395 to i64
  store i64 %10396, i64* %RAX.i1949, align 8
  store %struct.Memory* %loadMem_40c53a, %struct.Memory** %MEMORY
  %loadMem_40c53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10398 = getelementptr inbounds %struct.GPR, %struct.GPR* %10397, i32 0, i32 33
  %10399 = getelementptr inbounds %struct.Reg, %struct.Reg* %10398, i32 0, i32 0
  %PC.i1944 = bitcast %union.anon* %10399 to i64*
  %10400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10401 = getelementptr inbounds %struct.GPR, %struct.GPR* %10400, i32 0, i32 5
  %10402 = getelementptr inbounds %struct.Reg, %struct.Reg* %10401, i32 0, i32 0
  %ECX.i1945 = bitcast %union.anon* %10402 to i32*
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10404 = getelementptr inbounds %struct.GPR, %struct.GPR* %10403, i32 0, i32 1
  %10405 = getelementptr inbounds %struct.Reg, %struct.Reg* %10404, i32 0, i32 0
  %RAX.i1946 = bitcast %union.anon* %10405 to i64*
  %10406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10407 = getelementptr inbounds %struct.GPR, %struct.GPR* %10406, i32 0, i32 15
  %10408 = getelementptr inbounds %struct.Reg, %struct.Reg* %10407, i32 0, i32 0
  %RBP.i1947 = bitcast %union.anon* %10408 to i64*
  %10409 = load i64, i64* %RBP.i1947
  %10410 = load i64, i64* %RAX.i1946
  %10411 = mul i64 %10410, 4
  %10412 = add i64 %10409, -64
  %10413 = add i64 %10412, %10411
  %10414 = load i32, i32* %ECX.i1945
  %10415 = zext i32 %10414 to i64
  %10416 = load i64, i64* %PC.i1944
  %10417 = add i64 %10416, 4
  store i64 %10417, i64* %PC.i1944
  %10418 = inttoptr i64 %10413 to i32*
  store i32 %10414, i32* %10418
  store %struct.Memory* %loadMem_40c53e, %struct.Memory** %MEMORY
  %loadMem_40c542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10420 = getelementptr inbounds %struct.GPR, %struct.GPR* %10419, i32 0, i32 33
  %10421 = getelementptr inbounds %struct.Reg, %struct.Reg* %10420, i32 0, i32 0
  %PC.i1941 = bitcast %union.anon* %10421 to i64*
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10423 = getelementptr inbounds %struct.GPR, %struct.GPR* %10422, i32 0, i32 1
  %10424 = getelementptr inbounds %struct.Reg, %struct.Reg* %10423, i32 0, i32 0
  %RAX.i1942 = bitcast %union.anon* %10424 to i64*
  %10425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10426 = getelementptr inbounds %struct.GPR, %struct.GPR* %10425, i32 0, i32 15
  %10427 = getelementptr inbounds %struct.Reg, %struct.Reg* %10426, i32 0, i32 0
  %RBP.i1943 = bitcast %union.anon* %10427 to i64*
  %10428 = load i64, i64* %RBP.i1943
  %10429 = sub i64 %10428, 24
  %10430 = load i64, i64* %PC.i1941
  %10431 = add i64 %10430, 3
  store i64 %10431, i64* %PC.i1941
  %10432 = inttoptr i64 %10429 to i32*
  %10433 = load i32, i32* %10432
  %10434 = zext i32 %10433 to i64
  store i64 %10434, i64* %RAX.i1942, align 8
  store %struct.Memory* %loadMem_40c542, %struct.Memory** %MEMORY
  %loadMem_40c545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10436 = getelementptr inbounds %struct.GPR, %struct.GPR* %10435, i32 0, i32 33
  %10437 = getelementptr inbounds %struct.Reg, %struct.Reg* %10436, i32 0, i32 0
  %PC.i1939 = bitcast %union.anon* %10437 to i64*
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10439 = getelementptr inbounds %struct.GPR, %struct.GPR* %10438, i32 0, i32 1
  %10440 = getelementptr inbounds %struct.Reg, %struct.Reg* %10439, i32 0, i32 0
  %RAX.i1940 = bitcast %union.anon* %10440 to i64*
  %10441 = load i64, i64* %RAX.i1940
  %10442 = load i64, i64* %PC.i1939
  %10443 = add i64 %10442, 3
  store i64 %10443, i64* %PC.i1939
  %10444 = trunc i64 %10441 to i32
  %10445 = add i32 1, %10444
  %10446 = zext i32 %10445 to i64
  store i64 %10446, i64* %RAX.i1940, align 8
  %10447 = icmp ult i32 %10445, %10444
  %10448 = icmp ult i32 %10445, 1
  %10449 = or i1 %10447, %10448
  %10450 = zext i1 %10449 to i8
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10450, i8* %10451, align 1
  %10452 = and i32 %10445, 255
  %10453 = call i32 @llvm.ctpop.i32(i32 %10452)
  %10454 = trunc i32 %10453 to i8
  %10455 = and i8 %10454, 1
  %10456 = xor i8 %10455, 1
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10456, i8* %10457, align 1
  %10458 = xor i64 1, %10441
  %10459 = trunc i64 %10458 to i32
  %10460 = xor i32 %10459, %10445
  %10461 = lshr i32 %10460, 4
  %10462 = trunc i32 %10461 to i8
  %10463 = and i8 %10462, 1
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10463, i8* %10464, align 1
  %10465 = icmp eq i32 %10445, 0
  %10466 = zext i1 %10465 to i8
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10466, i8* %10467, align 1
  %10468 = lshr i32 %10445, 31
  %10469 = trunc i32 %10468 to i8
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10469, i8* %10470, align 1
  %10471 = lshr i32 %10444, 31
  %10472 = xor i32 %10468, %10471
  %10473 = add i32 %10472, %10468
  %10474 = icmp eq i32 %10473, 2
  %10475 = zext i1 %10474 to i8
  %10476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10475, i8* %10476, align 1
  store %struct.Memory* %loadMem_40c545, %struct.Memory** %MEMORY
  %loadMem_40c548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10478 = getelementptr inbounds %struct.GPR, %struct.GPR* %10477, i32 0, i32 33
  %10479 = getelementptr inbounds %struct.Reg, %struct.Reg* %10478, i32 0, i32 0
  %PC.i1936 = bitcast %union.anon* %10479 to i64*
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10481 = getelementptr inbounds %struct.GPR, %struct.GPR* %10480, i32 0, i32 1
  %10482 = getelementptr inbounds %struct.Reg, %struct.Reg* %10481, i32 0, i32 0
  %EAX.i1937 = bitcast %union.anon* %10482 to i32*
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 15
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %RBP.i1938 = bitcast %union.anon* %10485 to i64*
  %10486 = load i64, i64* %RBP.i1938
  %10487 = sub i64 %10486, 24
  %10488 = load i32, i32* %EAX.i1937
  %10489 = zext i32 %10488 to i64
  %10490 = load i64, i64* %PC.i1936
  %10491 = add i64 %10490, 3
  store i64 %10491, i64* %PC.i1936
  %10492 = inttoptr i64 %10487 to i32*
  store i32 %10488, i32* %10492
  store %struct.Memory* %loadMem_40c548, %struct.Memory** %MEMORY
  %loadMem_40c54b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10494 = getelementptr inbounds %struct.GPR, %struct.GPR* %10493, i32 0, i32 33
  %10495 = getelementptr inbounds %struct.Reg, %struct.Reg* %10494, i32 0, i32 0
  %PC.i1935 = bitcast %union.anon* %10495 to i64*
  %10496 = load i64, i64* %PC.i1935
  %10497 = add i64 %10496, -134
  %10498 = load i64, i64* %PC.i1935
  %10499 = add i64 %10498, 5
  store i64 %10499, i64* %PC.i1935
  %10500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10497, i64* %10500, align 8
  store %struct.Memory* %loadMem_40c54b, %struct.Memory** %MEMORY
  br label %block_.L_40c4c5

block_.L_40c550:                                  ; preds = %block_.L_40c4c5
  %loadMem_40c550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10502 = getelementptr inbounds %struct.GPR, %struct.GPR* %10501, i32 0, i32 33
  %10503 = getelementptr inbounds %struct.Reg, %struct.Reg* %10502, i32 0, i32 0
  %PC.i1932 = bitcast %union.anon* %10503 to i64*
  %10504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10505 = getelementptr inbounds %struct.GPR, %struct.GPR* %10504, i32 0, i32 1
  %10506 = getelementptr inbounds %struct.Reg, %struct.Reg* %10505, i32 0, i32 0
  %RAX.i1933 = bitcast %union.anon* %10506 to i64*
  %10507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10508 = getelementptr inbounds %struct.GPR, %struct.GPR* %10507, i32 0, i32 15
  %10509 = getelementptr inbounds %struct.Reg, %struct.Reg* %10508, i32 0, i32 0
  %RBP.i1934 = bitcast %union.anon* %10509 to i64*
  %10510 = load i64, i64* %RBP.i1934
  %10511 = sub i64 %10510, 176
  %10512 = load i64, i64* %PC.i1932
  %10513 = add i64 %10512, 7
  store i64 %10513, i64* %PC.i1932
  store i64 %10511, i64* %RAX.i1933, align 8
  store %struct.Memory* %loadMem_40c550, %struct.Memory** %MEMORY
  %loadMem_40c557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10515 = getelementptr inbounds %struct.GPR, %struct.GPR* %10514, i32 0, i32 33
  %10516 = getelementptr inbounds %struct.Reg, %struct.Reg* %10515, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %10516 to i64*
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10518 = getelementptr inbounds %struct.GPR, %struct.GPR* %10517, i32 0, i32 5
  %10519 = getelementptr inbounds %struct.Reg, %struct.Reg* %10518, i32 0, i32 0
  %RCX.i1930 = bitcast %union.anon* %10519 to i64*
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10521 = getelementptr inbounds %struct.GPR, %struct.GPR* %10520, i32 0, i32 15
  %10522 = getelementptr inbounds %struct.Reg, %struct.Reg* %10521, i32 0, i32 0
  %RBP.i1931 = bitcast %union.anon* %10522 to i64*
  %10523 = load i64, i64* %RBP.i1931
  %10524 = sub i64 %10523, 64
  %10525 = load i64, i64* %PC.i1929
  %10526 = add i64 %10525, 3
  store i64 %10526, i64* %PC.i1929
  %10527 = inttoptr i64 %10524 to i32*
  %10528 = load i32, i32* %10527
  %10529 = zext i32 %10528 to i64
  store i64 %10529, i64* %RCX.i1930, align 8
  store %struct.Memory* %loadMem_40c557, %struct.Memory** %MEMORY
  %loadMem_40c55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 33
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %PC.i1926 = bitcast %union.anon* %10532 to i64*
  %10533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10534 = getelementptr inbounds %struct.GPR, %struct.GPR* %10533, i32 0, i32 5
  %10535 = getelementptr inbounds %struct.Reg, %struct.Reg* %10534, i32 0, i32 0
  %RCX.i1927 = bitcast %union.anon* %10535 to i64*
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 15
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %RBP.i1928 = bitcast %union.anon* %10538 to i64*
  %10539 = load i64, i64* %RCX.i1927
  %10540 = load i64, i64* %RBP.i1928
  %10541 = sub i64 %10540, 60
  %10542 = load i64, i64* %PC.i1926
  %10543 = add i64 %10542, 3
  store i64 %10543, i64* %PC.i1926
  %10544 = trunc i64 %10539 to i32
  %10545 = inttoptr i64 %10541 to i32*
  %10546 = load i32, i32* %10545
  %10547 = add i32 %10546, %10544
  %10548 = zext i32 %10547 to i64
  store i64 %10548, i64* %RCX.i1927, align 8
  %10549 = icmp ult i32 %10547, %10544
  %10550 = icmp ult i32 %10547, %10546
  %10551 = or i1 %10549, %10550
  %10552 = zext i1 %10551 to i8
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10552, i8* %10553, align 1
  %10554 = and i32 %10547, 255
  %10555 = call i32 @llvm.ctpop.i32(i32 %10554)
  %10556 = trunc i32 %10555 to i8
  %10557 = and i8 %10556, 1
  %10558 = xor i8 %10557, 1
  %10559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10558, i8* %10559, align 1
  %10560 = xor i32 %10546, %10544
  %10561 = xor i32 %10560, %10547
  %10562 = lshr i32 %10561, 4
  %10563 = trunc i32 %10562 to i8
  %10564 = and i8 %10563, 1
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10564, i8* %10565, align 1
  %10566 = icmp eq i32 %10547, 0
  %10567 = zext i1 %10566 to i8
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10567, i8* %10568, align 1
  %10569 = lshr i32 %10547, 31
  %10570 = trunc i32 %10569 to i8
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10570, i8* %10571, align 1
  %10572 = lshr i32 %10544, 31
  %10573 = lshr i32 %10546, 31
  %10574 = xor i32 %10569, %10572
  %10575 = xor i32 %10569, %10573
  %10576 = add i32 %10574, %10575
  %10577 = icmp eq i32 %10576, 2
  %10578 = zext i1 %10577 to i8
  %10579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10578, i8* %10579, align 1
  store %struct.Memory* %loadMem_40c55a, %struct.Memory** %MEMORY
  %loadMem_40c55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10581 = getelementptr inbounds %struct.GPR, %struct.GPR* %10580, i32 0, i32 33
  %10582 = getelementptr inbounds %struct.Reg, %struct.Reg* %10581, i32 0, i32 0
  %PC.i1923 = bitcast %union.anon* %10582 to i64*
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10584 = getelementptr inbounds %struct.GPR, %struct.GPR* %10583, i32 0, i32 7
  %10585 = getelementptr inbounds %struct.Reg, %struct.Reg* %10584, i32 0, i32 0
  %RDX.i1924 = bitcast %union.anon* %10585 to i64*
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 15
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %RBP.i1925 = bitcast %union.anon* %10588 to i64*
  %10589 = load i64, i64* %RBP.i1925
  %10590 = sub i64 %10589, 20
  %10591 = load i64, i64* %PC.i1923
  %10592 = add i64 %10591, 4
  store i64 %10592, i64* %PC.i1923
  %10593 = inttoptr i64 %10590 to i32*
  %10594 = load i32, i32* %10593
  %10595 = sext i32 %10594 to i64
  store i64 %10595, i64* %RDX.i1924, align 8
  store %struct.Memory* %loadMem_40c55d, %struct.Memory** %MEMORY
  %loadMem_40c561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10597 = getelementptr inbounds %struct.GPR, %struct.GPR* %10596, i32 0, i32 33
  %10598 = getelementptr inbounds %struct.Reg, %struct.Reg* %10597, i32 0, i32 0
  %PC.i1921 = bitcast %union.anon* %10598 to i64*
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10600 = getelementptr inbounds %struct.GPR, %struct.GPR* %10599, i32 0, i32 7
  %10601 = getelementptr inbounds %struct.Reg, %struct.Reg* %10600, i32 0, i32 0
  %RDX.i1922 = bitcast %union.anon* %10601 to i64*
  %10602 = load i64, i64* %RDX.i1922
  %10603 = load i64, i64* %PC.i1921
  %10604 = add i64 %10603, 4
  store i64 %10604, i64* %PC.i1921
  %10605 = shl i64 %10602, 3
  %10606 = icmp slt i64 %10605, 0
  %10607 = shl i64 %10605, 1
  store i64 %10607, i64* %RDX.i1922, align 8
  %10608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10609 = zext i1 %10606 to i8
  store i8 %10609, i8* %10608, align 1
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10611 = trunc i64 %10607 to i32
  %10612 = and i32 %10611, 254
  %10613 = call i32 @llvm.ctpop.i32(i32 %10612)
  %10614 = trunc i32 %10613 to i8
  %10615 = and i8 %10614, 1
  %10616 = xor i8 %10615, 1
  store i8 %10616, i8* %10610, align 1
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10617, align 1
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10619 = icmp eq i64 %10607, 0
  %10620 = zext i1 %10619 to i8
  store i8 %10620, i8* %10618, align 1
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10622 = lshr i64 %10607, 63
  %10623 = trunc i64 %10622 to i8
  store i8 %10623, i8* %10621, align 1
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10624, align 1
  store %struct.Memory* %loadMem_40c561, %struct.Memory** %MEMORY
  %loadMem_40c565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10626 = getelementptr inbounds %struct.GPR, %struct.GPR* %10625, i32 0, i32 33
  %10627 = getelementptr inbounds %struct.Reg, %struct.Reg* %10626, i32 0, i32 0
  %PC.i1918 = bitcast %union.anon* %10627 to i64*
  %10628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10629 = getelementptr inbounds %struct.GPR, %struct.GPR* %10628, i32 0, i32 1
  %10630 = getelementptr inbounds %struct.Reg, %struct.Reg* %10629, i32 0, i32 0
  %RAX.i1919 = bitcast %union.anon* %10630 to i64*
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10632 = getelementptr inbounds %struct.GPR, %struct.GPR* %10631, i32 0, i32 9
  %10633 = getelementptr inbounds %struct.Reg, %struct.Reg* %10632, i32 0, i32 0
  %RSI.i1920 = bitcast %union.anon* %10633 to i64*
  %10634 = load i64, i64* %RAX.i1919
  %10635 = load i64, i64* %PC.i1918
  %10636 = add i64 %10635, 3
  store i64 %10636, i64* %PC.i1918
  store i64 %10634, i64* %RSI.i1920, align 8
  store %struct.Memory* %loadMem_40c565, %struct.Memory** %MEMORY
  %loadMem_40c568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10638 = getelementptr inbounds %struct.GPR, %struct.GPR* %10637, i32 0, i32 33
  %10639 = getelementptr inbounds %struct.Reg, %struct.Reg* %10638, i32 0, i32 0
  %PC.i1915 = bitcast %union.anon* %10639 to i64*
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10641 = getelementptr inbounds %struct.GPR, %struct.GPR* %10640, i32 0, i32 7
  %10642 = getelementptr inbounds %struct.Reg, %struct.Reg* %10641, i32 0, i32 0
  %RDX.i1916 = bitcast %union.anon* %10642 to i64*
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10644 = getelementptr inbounds %struct.GPR, %struct.GPR* %10643, i32 0, i32 9
  %10645 = getelementptr inbounds %struct.Reg, %struct.Reg* %10644, i32 0, i32 0
  %RSI.i1917 = bitcast %union.anon* %10645 to i64*
  %10646 = load i64, i64* %RSI.i1917
  %10647 = load i64, i64* %RDX.i1916
  %10648 = load i64, i64* %PC.i1915
  %10649 = add i64 %10648, 3
  store i64 %10649, i64* %PC.i1915
  %10650 = add i64 %10647, %10646
  store i64 %10650, i64* %RSI.i1917, align 8
  %10651 = icmp ult i64 %10650, %10646
  %10652 = icmp ult i64 %10650, %10647
  %10653 = or i1 %10651, %10652
  %10654 = zext i1 %10653 to i8
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10654, i8* %10655, align 1
  %10656 = trunc i64 %10650 to i32
  %10657 = and i32 %10656, 255
  %10658 = call i32 @llvm.ctpop.i32(i32 %10657)
  %10659 = trunc i32 %10658 to i8
  %10660 = and i8 %10659, 1
  %10661 = xor i8 %10660, 1
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10661, i8* %10662, align 1
  %10663 = xor i64 %10647, %10646
  %10664 = xor i64 %10663, %10650
  %10665 = lshr i64 %10664, 4
  %10666 = trunc i64 %10665 to i8
  %10667 = and i8 %10666, 1
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10667, i8* %10668, align 1
  %10669 = icmp eq i64 %10650, 0
  %10670 = zext i1 %10669 to i8
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10670, i8* %10671, align 1
  %10672 = lshr i64 %10650, 63
  %10673 = trunc i64 %10672 to i8
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10673, i8* %10674, align 1
  %10675 = lshr i64 %10646, 63
  %10676 = lshr i64 %10647, 63
  %10677 = xor i64 %10672, %10675
  %10678 = xor i64 %10672, %10676
  %10679 = add i64 %10677, %10678
  %10680 = icmp eq i64 %10679, 2
  %10681 = zext i1 %10680 to i8
  %10682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10681, i8* %10682, align 1
  store %struct.Memory* %loadMem_40c568, %struct.Memory** %MEMORY
  %loadMem_40c56b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10684 = getelementptr inbounds %struct.GPR, %struct.GPR* %10683, i32 0, i32 33
  %10685 = getelementptr inbounds %struct.Reg, %struct.Reg* %10684, i32 0, i32 0
  %PC.i1912 = bitcast %union.anon* %10685 to i64*
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10687 = getelementptr inbounds %struct.GPR, %struct.GPR* %10686, i32 0, i32 5
  %10688 = getelementptr inbounds %struct.Reg, %struct.Reg* %10687, i32 0, i32 0
  %ECX.i1913 = bitcast %union.anon* %10688 to i32*
  %10689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10690 = getelementptr inbounds %struct.GPR, %struct.GPR* %10689, i32 0, i32 9
  %10691 = getelementptr inbounds %struct.Reg, %struct.Reg* %10690, i32 0, i32 0
  %RSI.i1914 = bitcast %union.anon* %10691 to i64*
  %10692 = load i64, i64* %RSI.i1914
  %10693 = load i32, i32* %ECX.i1913
  %10694 = zext i32 %10693 to i64
  %10695 = load i64, i64* %PC.i1912
  %10696 = add i64 %10695, 2
  store i64 %10696, i64* %PC.i1912
  %10697 = inttoptr i64 %10692 to i32*
  store i32 %10693, i32* %10697
  store %struct.Memory* %loadMem_40c56b, %struct.Memory** %MEMORY
  %loadMem_40c56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10699 = getelementptr inbounds %struct.GPR, %struct.GPR* %10698, i32 0, i32 33
  %10700 = getelementptr inbounds %struct.Reg, %struct.Reg* %10699, i32 0, i32 0
  %PC.i1909 = bitcast %union.anon* %10700 to i64*
  %10701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10702 = getelementptr inbounds %struct.GPR, %struct.GPR* %10701, i32 0, i32 5
  %10703 = getelementptr inbounds %struct.Reg, %struct.Reg* %10702, i32 0, i32 0
  %RCX.i1910 = bitcast %union.anon* %10703 to i64*
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10705 = getelementptr inbounds %struct.GPR, %struct.GPR* %10704, i32 0, i32 15
  %10706 = getelementptr inbounds %struct.Reg, %struct.Reg* %10705, i32 0, i32 0
  %RBP.i1911 = bitcast %union.anon* %10706 to i64*
  %10707 = load i64, i64* %RBP.i1911
  %10708 = sub i64 %10707, 64
  %10709 = load i64, i64* %PC.i1909
  %10710 = add i64 %10709, 3
  store i64 %10710, i64* %PC.i1909
  %10711 = inttoptr i64 %10708 to i32*
  %10712 = load i32, i32* %10711
  %10713 = zext i32 %10712 to i64
  store i64 %10713, i64* %RCX.i1910, align 8
  store %struct.Memory* %loadMem_40c56d, %struct.Memory** %MEMORY
  %loadMem_40c570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10715 = getelementptr inbounds %struct.GPR, %struct.GPR* %10714, i32 0, i32 33
  %10716 = getelementptr inbounds %struct.Reg, %struct.Reg* %10715, i32 0, i32 0
  %PC.i1906 = bitcast %union.anon* %10716 to i64*
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10718 = getelementptr inbounds %struct.GPR, %struct.GPR* %10717, i32 0, i32 5
  %10719 = getelementptr inbounds %struct.Reg, %struct.Reg* %10718, i32 0, i32 0
  %RCX.i1907 = bitcast %union.anon* %10719 to i64*
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10721 = getelementptr inbounds %struct.GPR, %struct.GPR* %10720, i32 0, i32 15
  %10722 = getelementptr inbounds %struct.Reg, %struct.Reg* %10721, i32 0, i32 0
  %RBP.i1908 = bitcast %union.anon* %10722 to i64*
  %10723 = load i64, i64* %RCX.i1907
  %10724 = load i64, i64* %RBP.i1908
  %10725 = sub i64 %10724, 60
  %10726 = load i64, i64* %PC.i1906
  %10727 = add i64 %10726, 3
  store i64 %10727, i64* %PC.i1906
  %10728 = trunc i64 %10723 to i32
  %10729 = inttoptr i64 %10725 to i32*
  %10730 = load i32, i32* %10729
  %10731 = sub i32 %10728, %10730
  %10732 = zext i32 %10731 to i64
  store i64 %10732, i64* %RCX.i1907, align 8
  %10733 = icmp ult i32 %10728, %10730
  %10734 = zext i1 %10733 to i8
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10734, i8* %10735, align 1
  %10736 = and i32 %10731, 255
  %10737 = call i32 @llvm.ctpop.i32(i32 %10736)
  %10738 = trunc i32 %10737 to i8
  %10739 = and i8 %10738, 1
  %10740 = xor i8 %10739, 1
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10740, i8* %10741, align 1
  %10742 = xor i32 %10730, %10728
  %10743 = xor i32 %10742, %10731
  %10744 = lshr i32 %10743, 4
  %10745 = trunc i32 %10744 to i8
  %10746 = and i8 %10745, 1
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10746, i8* %10747, align 1
  %10748 = icmp eq i32 %10731, 0
  %10749 = zext i1 %10748 to i8
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10749, i8* %10750, align 1
  %10751 = lshr i32 %10731, 31
  %10752 = trunc i32 %10751 to i8
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10752, i8* %10753, align 1
  %10754 = lshr i32 %10728, 31
  %10755 = lshr i32 %10730, 31
  %10756 = xor i32 %10755, %10754
  %10757 = xor i32 %10751, %10754
  %10758 = add i32 %10757, %10756
  %10759 = icmp eq i32 %10758, 2
  %10760 = zext i1 %10759 to i8
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10760, i8* %10761, align 1
  store %struct.Memory* %loadMem_40c570, %struct.Memory** %MEMORY
  %loadMem_40c573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10763 = getelementptr inbounds %struct.GPR, %struct.GPR* %10762, i32 0, i32 33
  %10764 = getelementptr inbounds %struct.Reg, %struct.Reg* %10763, i32 0, i32 0
  %PC.i1903 = bitcast %union.anon* %10764 to i64*
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10766 = getelementptr inbounds %struct.GPR, %struct.GPR* %10765, i32 0, i32 7
  %10767 = getelementptr inbounds %struct.Reg, %struct.Reg* %10766, i32 0, i32 0
  %RDX.i1904 = bitcast %union.anon* %10767 to i64*
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10769 = getelementptr inbounds %struct.GPR, %struct.GPR* %10768, i32 0, i32 15
  %10770 = getelementptr inbounds %struct.Reg, %struct.Reg* %10769, i32 0, i32 0
  %RBP.i1905 = bitcast %union.anon* %10770 to i64*
  %10771 = load i64, i64* %RBP.i1905
  %10772 = sub i64 %10771, 20
  %10773 = load i64, i64* %PC.i1903
  %10774 = add i64 %10773, 4
  store i64 %10774, i64* %PC.i1903
  %10775 = inttoptr i64 %10772 to i32*
  %10776 = load i32, i32* %10775
  %10777 = sext i32 %10776 to i64
  store i64 %10777, i64* %RDX.i1904, align 8
  store %struct.Memory* %loadMem_40c573, %struct.Memory** %MEMORY
  %loadMem_40c577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 33
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %PC.i1901 = bitcast %union.anon* %10780 to i64*
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10782 = getelementptr inbounds %struct.GPR, %struct.GPR* %10781, i32 0, i32 7
  %10783 = getelementptr inbounds %struct.Reg, %struct.Reg* %10782, i32 0, i32 0
  %RDX.i1902 = bitcast %union.anon* %10783 to i64*
  %10784 = load i64, i64* %RDX.i1902
  %10785 = load i64, i64* %PC.i1901
  %10786 = add i64 %10785, 4
  store i64 %10786, i64* %PC.i1901
  %10787 = shl i64 %10784, 3
  %10788 = icmp slt i64 %10787, 0
  %10789 = shl i64 %10787, 1
  store i64 %10789, i64* %RDX.i1902, align 8
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10791 = zext i1 %10788 to i8
  store i8 %10791, i8* %10790, align 1
  %10792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10793 = trunc i64 %10789 to i32
  %10794 = and i32 %10793, 254
  %10795 = call i32 @llvm.ctpop.i32(i32 %10794)
  %10796 = trunc i32 %10795 to i8
  %10797 = and i8 %10796, 1
  %10798 = xor i8 %10797, 1
  store i8 %10798, i8* %10792, align 1
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10799, align 1
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10801 = icmp eq i64 %10789, 0
  %10802 = zext i1 %10801 to i8
  store i8 %10802, i8* %10800, align 1
  %10803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10804 = lshr i64 %10789, 63
  %10805 = trunc i64 %10804 to i8
  store i8 %10805, i8* %10803, align 1
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10806, align 1
  store %struct.Memory* %loadMem_40c577, %struct.Memory** %MEMORY
  %loadMem_40c57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10808 = getelementptr inbounds %struct.GPR, %struct.GPR* %10807, i32 0, i32 33
  %10809 = getelementptr inbounds %struct.Reg, %struct.Reg* %10808, i32 0, i32 0
  %PC.i1898 = bitcast %union.anon* %10809 to i64*
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10811 = getelementptr inbounds %struct.GPR, %struct.GPR* %10810, i32 0, i32 1
  %10812 = getelementptr inbounds %struct.Reg, %struct.Reg* %10811, i32 0, i32 0
  %RAX.i1899 = bitcast %union.anon* %10812 to i64*
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10814 = getelementptr inbounds %struct.GPR, %struct.GPR* %10813, i32 0, i32 9
  %10815 = getelementptr inbounds %struct.Reg, %struct.Reg* %10814, i32 0, i32 0
  %RSI.i1900 = bitcast %union.anon* %10815 to i64*
  %10816 = load i64, i64* %RAX.i1899
  %10817 = load i64, i64* %PC.i1898
  %10818 = add i64 %10817, 3
  store i64 %10818, i64* %PC.i1898
  store i64 %10816, i64* %RSI.i1900, align 8
  store %struct.Memory* %loadMem_40c57b, %struct.Memory** %MEMORY
  %loadMem_40c57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10820 = getelementptr inbounds %struct.GPR, %struct.GPR* %10819, i32 0, i32 33
  %10821 = getelementptr inbounds %struct.Reg, %struct.Reg* %10820, i32 0, i32 0
  %PC.i1895 = bitcast %union.anon* %10821 to i64*
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10823 = getelementptr inbounds %struct.GPR, %struct.GPR* %10822, i32 0, i32 7
  %10824 = getelementptr inbounds %struct.Reg, %struct.Reg* %10823, i32 0, i32 0
  %RDX.i1896 = bitcast %union.anon* %10824 to i64*
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10826 = getelementptr inbounds %struct.GPR, %struct.GPR* %10825, i32 0, i32 9
  %10827 = getelementptr inbounds %struct.Reg, %struct.Reg* %10826, i32 0, i32 0
  %RSI.i1897 = bitcast %union.anon* %10827 to i64*
  %10828 = load i64, i64* %RSI.i1897
  %10829 = load i64, i64* %RDX.i1896
  %10830 = load i64, i64* %PC.i1895
  %10831 = add i64 %10830, 3
  store i64 %10831, i64* %PC.i1895
  %10832 = add i64 %10829, %10828
  store i64 %10832, i64* %RSI.i1897, align 8
  %10833 = icmp ult i64 %10832, %10828
  %10834 = icmp ult i64 %10832, %10829
  %10835 = or i1 %10833, %10834
  %10836 = zext i1 %10835 to i8
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10836, i8* %10837, align 1
  %10838 = trunc i64 %10832 to i32
  %10839 = and i32 %10838, 255
  %10840 = call i32 @llvm.ctpop.i32(i32 %10839)
  %10841 = trunc i32 %10840 to i8
  %10842 = and i8 %10841, 1
  %10843 = xor i8 %10842, 1
  %10844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10843, i8* %10844, align 1
  %10845 = xor i64 %10829, %10828
  %10846 = xor i64 %10845, %10832
  %10847 = lshr i64 %10846, 4
  %10848 = trunc i64 %10847 to i8
  %10849 = and i8 %10848, 1
  %10850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10849, i8* %10850, align 1
  %10851 = icmp eq i64 %10832, 0
  %10852 = zext i1 %10851 to i8
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10852, i8* %10853, align 1
  %10854 = lshr i64 %10832, 63
  %10855 = trunc i64 %10854 to i8
  %10856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10855, i8* %10856, align 1
  %10857 = lshr i64 %10828, 63
  %10858 = lshr i64 %10829, 63
  %10859 = xor i64 %10854, %10857
  %10860 = xor i64 %10854, %10858
  %10861 = add i64 %10859, %10860
  %10862 = icmp eq i64 %10861, 2
  %10863 = zext i1 %10862 to i8
  %10864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10863, i8* %10864, align 1
  store %struct.Memory* %loadMem_40c57e, %struct.Memory** %MEMORY
  %loadMem_40c581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 33
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %PC.i1892 = bitcast %union.anon* %10867 to i64*
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 5
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %ECX.i1893 = bitcast %union.anon* %10870 to i32*
  %10871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10872 = getelementptr inbounds %struct.GPR, %struct.GPR* %10871, i32 0, i32 9
  %10873 = getelementptr inbounds %struct.Reg, %struct.Reg* %10872, i32 0, i32 0
  %RSI.i1894 = bitcast %union.anon* %10873 to i64*
  %10874 = load i64, i64* %RSI.i1894
  %10875 = add i64 %10874, 8
  %10876 = load i32, i32* %ECX.i1893
  %10877 = zext i32 %10876 to i64
  %10878 = load i64, i64* %PC.i1892
  %10879 = add i64 %10878, 3
  store i64 %10879, i64* %PC.i1892
  %10880 = inttoptr i64 %10875 to i32*
  store i32 %10876, i32* %10880
  store %struct.Memory* %loadMem_40c581, %struct.Memory** %MEMORY
  %loadMem_40c584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10882 = getelementptr inbounds %struct.GPR, %struct.GPR* %10881, i32 0, i32 33
  %10883 = getelementptr inbounds %struct.Reg, %struct.Reg* %10882, i32 0, i32 0
  %PC.i1889 = bitcast %union.anon* %10883 to i64*
  %10884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10885 = getelementptr inbounds %struct.GPR, %struct.GPR* %10884, i32 0, i32 5
  %10886 = getelementptr inbounds %struct.Reg, %struct.Reg* %10885, i32 0, i32 0
  %RCX.i1890 = bitcast %union.anon* %10886 to i64*
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10888 = getelementptr inbounds %struct.GPR, %struct.GPR* %10887, i32 0, i32 15
  %10889 = getelementptr inbounds %struct.Reg, %struct.Reg* %10888, i32 0, i32 0
  %RBP.i1891 = bitcast %union.anon* %10889 to i64*
  %10890 = load i64, i64* %RBP.i1891
  %10891 = sub i64 %10890, 52
  %10892 = load i64, i64* %PC.i1889
  %10893 = add i64 %10892, 3
  store i64 %10893, i64* %PC.i1889
  %10894 = inttoptr i64 %10891 to i32*
  %10895 = load i32, i32* %10894
  %10896 = zext i32 %10895 to i64
  store i64 %10896, i64* %RCX.i1890, align 8
  store %struct.Memory* %loadMem_40c584, %struct.Memory** %MEMORY
  %loadMem_40c587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10898 = getelementptr inbounds %struct.GPR, %struct.GPR* %10897, i32 0, i32 33
  %10899 = getelementptr inbounds %struct.Reg, %struct.Reg* %10898, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %10899 to i64*
  %10900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10901 = getelementptr inbounds %struct.GPR, %struct.GPR* %10900, i32 0, i32 5
  %10902 = getelementptr inbounds %struct.Reg, %struct.Reg* %10901, i32 0, i32 0
  %RCX.i1888 = bitcast %union.anon* %10902 to i64*
  %10903 = load i64, i64* %RCX.i1888
  %10904 = load i64, i64* %PC.i1887
  %10905 = add i64 %10904, 2
  store i64 %10905, i64* %PC.i1887
  %10906 = trunc i64 %10903 to i32
  %10907 = shl i32 %10906, 1
  %10908 = icmp slt i32 %10906, 0
  %10909 = icmp slt i32 %10907, 0
  %10910 = xor i1 %10908, %10909
  %10911 = zext i32 %10907 to i64
  store i64 %10911, i64* %RCX.i1888, align 8
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10913 = zext i1 %10908 to i8
  store i8 %10913, i8* %10912, align 1
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10915 = and i32 %10907, 254
  %10916 = call i32 @llvm.ctpop.i32(i32 %10915)
  %10917 = trunc i32 %10916 to i8
  %10918 = and i8 %10917, 1
  %10919 = xor i8 %10918, 1
  store i8 %10919, i8* %10914, align 1
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10920, align 1
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10922 = icmp eq i32 %10907, 0
  %10923 = zext i1 %10922 to i8
  store i8 %10923, i8* %10921, align 1
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10925 = lshr i32 %10907, 31
  %10926 = trunc i32 %10925 to i8
  store i8 %10926, i8* %10924, align 1
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10928 = zext i1 %10910 to i8
  store i8 %10928, i8* %10927, align 1
  store %struct.Memory* %loadMem_40c587, %struct.Memory** %MEMORY
  %loadMem_40c58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10930 = getelementptr inbounds %struct.GPR, %struct.GPR* %10929, i32 0, i32 33
  %10931 = getelementptr inbounds %struct.Reg, %struct.Reg* %10930, i32 0, i32 0
  %PC.i1884 = bitcast %union.anon* %10931 to i64*
  %10932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10933 = getelementptr inbounds %struct.GPR, %struct.GPR* %10932, i32 0, i32 5
  %10934 = getelementptr inbounds %struct.Reg, %struct.Reg* %10933, i32 0, i32 0
  %RCX.i1885 = bitcast %union.anon* %10934 to i64*
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10936 = getelementptr inbounds %struct.GPR, %struct.GPR* %10935, i32 0, i32 15
  %10937 = getelementptr inbounds %struct.Reg, %struct.Reg* %10936, i32 0, i32 0
  %RBP.i1886 = bitcast %union.anon* %10937 to i64*
  %10938 = load i64, i64* %RCX.i1885
  %10939 = load i64, i64* %RBP.i1886
  %10940 = sub i64 %10939, 56
  %10941 = load i64, i64* %PC.i1884
  %10942 = add i64 %10941, 3
  store i64 %10942, i64* %PC.i1884
  %10943 = trunc i64 %10938 to i32
  %10944 = inttoptr i64 %10940 to i32*
  %10945 = load i32, i32* %10944
  %10946 = add i32 %10945, %10943
  %10947 = zext i32 %10946 to i64
  store i64 %10947, i64* %RCX.i1885, align 8
  %10948 = icmp ult i32 %10946, %10943
  %10949 = icmp ult i32 %10946, %10945
  %10950 = or i1 %10948, %10949
  %10951 = zext i1 %10950 to i8
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10951, i8* %10952, align 1
  %10953 = and i32 %10946, 255
  %10954 = call i32 @llvm.ctpop.i32(i32 %10953)
  %10955 = trunc i32 %10954 to i8
  %10956 = and i8 %10955, 1
  %10957 = xor i8 %10956, 1
  %10958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10957, i8* %10958, align 1
  %10959 = xor i32 %10945, %10943
  %10960 = xor i32 %10959, %10946
  %10961 = lshr i32 %10960, 4
  %10962 = trunc i32 %10961 to i8
  %10963 = and i8 %10962, 1
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10963, i8* %10964, align 1
  %10965 = icmp eq i32 %10946, 0
  %10966 = zext i1 %10965 to i8
  %10967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10966, i8* %10967, align 1
  %10968 = lshr i32 %10946, 31
  %10969 = trunc i32 %10968 to i8
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10969, i8* %10970, align 1
  %10971 = lshr i32 %10943, 31
  %10972 = lshr i32 %10945, 31
  %10973 = xor i32 %10968, %10971
  %10974 = xor i32 %10968, %10972
  %10975 = add i32 %10973, %10974
  %10976 = icmp eq i32 %10975, 2
  %10977 = zext i1 %10976 to i8
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10977, i8* %10978, align 1
  store %struct.Memory* %loadMem_40c58a, %struct.Memory** %MEMORY
  %loadMem_40c58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10980 = getelementptr inbounds %struct.GPR, %struct.GPR* %10979, i32 0, i32 33
  %10981 = getelementptr inbounds %struct.Reg, %struct.Reg* %10980, i32 0, i32 0
  %PC.i1881 = bitcast %union.anon* %10981 to i64*
  %10982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10983 = getelementptr inbounds %struct.GPR, %struct.GPR* %10982, i32 0, i32 7
  %10984 = getelementptr inbounds %struct.Reg, %struct.Reg* %10983, i32 0, i32 0
  %RDX.i1882 = bitcast %union.anon* %10984 to i64*
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10986 = getelementptr inbounds %struct.GPR, %struct.GPR* %10985, i32 0, i32 15
  %10987 = getelementptr inbounds %struct.Reg, %struct.Reg* %10986, i32 0, i32 0
  %RBP.i1883 = bitcast %union.anon* %10987 to i64*
  %10988 = load i64, i64* %RBP.i1883
  %10989 = sub i64 %10988, 20
  %10990 = load i64, i64* %PC.i1881
  %10991 = add i64 %10990, 4
  store i64 %10991, i64* %PC.i1881
  %10992 = inttoptr i64 %10989 to i32*
  %10993 = load i32, i32* %10992
  %10994 = sext i32 %10993 to i64
  store i64 %10994, i64* %RDX.i1882, align 8
  store %struct.Memory* %loadMem_40c58d, %struct.Memory** %MEMORY
  %loadMem_40c591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10996 = getelementptr inbounds %struct.GPR, %struct.GPR* %10995, i32 0, i32 33
  %10997 = getelementptr inbounds %struct.Reg, %struct.Reg* %10996, i32 0, i32 0
  %PC.i1879 = bitcast %union.anon* %10997 to i64*
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10999 = getelementptr inbounds %struct.GPR, %struct.GPR* %10998, i32 0, i32 7
  %11000 = getelementptr inbounds %struct.Reg, %struct.Reg* %10999, i32 0, i32 0
  %RDX.i1880 = bitcast %union.anon* %11000 to i64*
  %11001 = load i64, i64* %RDX.i1880
  %11002 = load i64, i64* %PC.i1879
  %11003 = add i64 %11002, 4
  store i64 %11003, i64* %PC.i1879
  %11004 = shl i64 %11001, 3
  %11005 = icmp slt i64 %11004, 0
  %11006 = shl i64 %11004, 1
  store i64 %11006, i64* %RDX.i1880, align 8
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11008 = zext i1 %11005 to i8
  store i8 %11008, i8* %11007, align 1
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11010 = trunc i64 %11006 to i32
  %11011 = and i32 %11010, 254
  %11012 = call i32 @llvm.ctpop.i32(i32 %11011)
  %11013 = trunc i32 %11012 to i8
  %11014 = and i8 %11013, 1
  %11015 = xor i8 %11014, 1
  store i8 %11015, i8* %11009, align 1
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11016, align 1
  %11017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11018 = icmp eq i64 %11006, 0
  %11019 = zext i1 %11018 to i8
  store i8 %11019, i8* %11017, align 1
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11021 = lshr i64 %11006, 63
  %11022 = trunc i64 %11021 to i8
  store i8 %11022, i8* %11020, align 1
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11023, align 1
  store %struct.Memory* %loadMem_40c591, %struct.Memory** %MEMORY
  %loadMem_40c595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11025 = getelementptr inbounds %struct.GPR, %struct.GPR* %11024, i32 0, i32 33
  %11026 = getelementptr inbounds %struct.Reg, %struct.Reg* %11025, i32 0, i32 0
  %PC.i1876 = bitcast %union.anon* %11026 to i64*
  %11027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11028 = getelementptr inbounds %struct.GPR, %struct.GPR* %11027, i32 0, i32 1
  %11029 = getelementptr inbounds %struct.Reg, %struct.Reg* %11028, i32 0, i32 0
  %RAX.i1877 = bitcast %union.anon* %11029 to i64*
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11031 = getelementptr inbounds %struct.GPR, %struct.GPR* %11030, i32 0, i32 9
  %11032 = getelementptr inbounds %struct.Reg, %struct.Reg* %11031, i32 0, i32 0
  %RSI.i1878 = bitcast %union.anon* %11032 to i64*
  %11033 = load i64, i64* %RAX.i1877
  %11034 = load i64, i64* %PC.i1876
  %11035 = add i64 %11034, 3
  store i64 %11035, i64* %PC.i1876
  store i64 %11033, i64* %RSI.i1878, align 8
  store %struct.Memory* %loadMem_40c595, %struct.Memory** %MEMORY
  %loadMem_40c598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11037 = getelementptr inbounds %struct.GPR, %struct.GPR* %11036, i32 0, i32 33
  %11038 = getelementptr inbounds %struct.Reg, %struct.Reg* %11037, i32 0, i32 0
  %PC.i1873 = bitcast %union.anon* %11038 to i64*
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11040 = getelementptr inbounds %struct.GPR, %struct.GPR* %11039, i32 0, i32 7
  %11041 = getelementptr inbounds %struct.Reg, %struct.Reg* %11040, i32 0, i32 0
  %RDX.i1874 = bitcast %union.anon* %11041 to i64*
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11043 = getelementptr inbounds %struct.GPR, %struct.GPR* %11042, i32 0, i32 9
  %11044 = getelementptr inbounds %struct.Reg, %struct.Reg* %11043, i32 0, i32 0
  %RSI.i1875 = bitcast %union.anon* %11044 to i64*
  %11045 = load i64, i64* %RSI.i1875
  %11046 = load i64, i64* %RDX.i1874
  %11047 = load i64, i64* %PC.i1873
  %11048 = add i64 %11047, 3
  store i64 %11048, i64* %PC.i1873
  %11049 = add i64 %11046, %11045
  store i64 %11049, i64* %RSI.i1875, align 8
  %11050 = icmp ult i64 %11049, %11045
  %11051 = icmp ult i64 %11049, %11046
  %11052 = or i1 %11050, %11051
  %11053 = zext i1 %11052 to i8
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11053, i8* %11054, align 1
  %11055 = trunc i64 %11049 to i32
  %11056 = and i32 %11055, 255
  %11057 = call i32 @llvm.ctpop.i32(i32 %11056)
  %11058 = trunc i32 %11057 to i8
  %11059 = and i8 %11058, 1
  %11060 = xor i8 %11059, 1
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11060, i8* %11061, align 1
  %11062 = xor i64 %11046, %11045
  %11063 = xor i64 %11062, %11049
  %11064 = lshr i64 %11063, 4
  %11065 = trunc i64 %11064 to i8
  %11066 = and i8 %11065, 1
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11066, i8* %11067, align 1
  %11068 = icmp eq i64 %11049, 0
  %11069 = zext i1 %11068 to i8
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11069, i8* %11070, align 1
  %11071 = lshr i64 %11049, 63
  %11072 = trunc i64 %11071 to i8
  %11073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11072, i8* %11073, align 1
  %11074 = lshr i64 %11045, 63
  %11075 = lshr i64 %11046, 63
  %11076 = xor i64 %11071, %11074
  %11077 = xor i64 %11071, %11075
  %11078 = add i64 %11076, %11077
  %11079 = icmp eq i64 %11078, 2
  %11080 = zext i1 %11079 to i8
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11080, i8* %11081, align 1
  store %struct.Memory* %loadMem_40c598, %struct.Memory** %MEMORY
  %loadMem_40c59b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11083 = getelementptr inbounds %struct.GPR, %struct.GPR* %11082, i32 0, i32 33
  %11084 = getelementptr inbounds %struct.Reg, %struct.Reg* %11083, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %11084 to i64*
  %11085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11086 = getelementptr inbounds %struct.GPR, %struct.GPR* %11085, i32 0, i32 5
  %11087 = getelementptr inbounds %struct.Reg, %struct.Reg* %11086, i32 0, i32 0
  %ECX.i1871 = bitcast %union.anon* %11087 to i32*
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11089 = getelementptr inbounds %struct.GPR, %struct.GPR* %11088, i32 0, i32 9
  %11090 = getelementptr inbounds %struct.Reg, %struct.Reg* %11089, i32 0, i32 0
  %RSI.i1872 = bitcast %union.anon* %11090 to i64*
  %11091 = load i64, i64* %RSI.i1872
  %11092 = add i64 %11091, 4
  %11093 = load i32, i32* %ECX.i1871
  %11094 = zext i32 %11093 to i64
  %11095 = load i64, i64* %PC.i1870
  %11096 = add i64 %11095, 3
  store i64 %11096, i64* %PC.i1870
  %11097 = inttoptr i64 %11092 to i32*
  store i32 %11093, i32* %11097
  store %struct.Memory* %loadMem_40c59b, %struct.Memory** %MEMORY
  %loadMem_40c59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11099 = getelementptr inbounds %struct.GPR, %struct.GPR* %11098, i32 0, i32 33
  %11100 = getelementptr inbounds %struct.Reg, %struct.Reg* %11099, i32 0, i32 0
  %PC.i1867 = bitcast %union.anon* %11100 to i64*
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11102 = getelementptr inbounds %struct.GPR, %struct.GPR* %11101, i32 0, i32 5
  %11103 = getelementptr inbounds %struct.Reg, %struct.Reg* %11102, i32 0, i32 0
  %RCX.i1868 = bitcast %union.anon* %11103 to i64*
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11105 = getelementptr inbounds %struct.GPR, %struct.GPR* %11104, i32 0, i32 15
  %11106 = getelementptr inbounds %struct.Reg, %struct.Reg* %11105, i32 0, i32 0
  %RBP.i1869 = bitcast %union.anon* %11106 to i64*
  %11107 = load i64, i64* %RBP.i1869
  %11108 = sub i64 %11107, 52
  %11109 = load i64, i64* %PC.i1867
  %11110 = add i64 %11109, 3
  store i64 %11110, i64* %PC.i1867
  %11111 = inttoptr i64 %11108 to i32*
  %11112 = load i32, i32* %11111
  %11113 = zext i32 %11112 to i64
  store i64 %11113, i64* %RCX.i1868, align 8
  store %struct.Memory* %loadMem_40c59e, %struct.Memory** %MEMORY
  %loadMem_40c5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11115 = getelementptr inbounds %struct.GPR, %struct.GPR* %11114, i32 0, i32 33
  %11116 = getelementptr inbounds %struct.Reg, %struct.Reg* %11115, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %11116 to i64*
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11118 = getelementptr inbounds %struct.GPR, %struct.GPR* %11117, i32 0, i32 11
  %11119 = getelementptr inbounds %struct.Reg, %struct.Reg* %11118, i32 0, i32 0
  %RDI.i1865 = bitcast %union.anon* %11119 to i64*
  %11120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11121 = getelementptr inbounds %struct.GPR, %struct.GPR* %11120, i32 0, i32 15
  %11122 = getelementptr inbounds %struct.Reg, %struct.Reg* %11121, i32 0, i32 0
  %RBP.i1866 = bitcast %union.anon* %11122 to i64*
  %11123 = load i64, i64* %RBP.i1866
  %11124 = sub i64 %11123, 56
  %11125 = load i64, i64* %PC.i1864
  %11126 = add i64 %11125, 3
  store i64 %11126, i64* %PC.i1864
  %11127 = inttoptr i64 %11124 to i32*
  %11128 = load i32, i32* %11127
  %11129 = zext i32 %11128 to i64
  store i64 %11129, i64* %RDI.i1865, align 8
  store %struct.Memory* %loadMem_40c5a1, %struct.Memory** %MEMORY
  %loadMem_40c5a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11131 = getelementptr inbounds %struct.GPR, %struct.GPR* %11130, i32 0, i32 33
  %11132 = getelementptr inbounds %struct.Reg, %struct.Reg* %11131, i32 0, i32 0
  %PC.i1862 = bitcast %union.anon* %11132 to i64*
  %11133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11134 = getelementptr inbounds %struct.GPR, %struct.GPR* %11133, i32 0, i32 11
  %11135 = getelementptr inbounds %struct.Reg, %struct.Reg* %11134, i32 0, i32 0
  %RDI.i1863 = bitcast %union.anon* %11135 to i64*
  %11136 = load i64, i64* %RDI.i1863
  %11137 = load i64, i64* %PC.i1862
  %11138 = add i64 %11137, 2
  store i64 %11138, i64* %PC.i1862
  %11139 = trunc i64 %11136 to i32
  %11140 = shl i32 %11139, 1
  %11141 = icmp slt i32 %11139, 0
  %11142 = icmp slt i32 %11140, 0
  %11143 = xor i1 %11141, %11142
  %11144 = zext i32 %11140 to i64
  store i64 %11144, i64* %RDI.i1863, align 8
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11146 = zext i1 %11141 to i8
  store i8 %11146, i8* %11145, align 1
  %11147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11148 = and i32 %11140, 254
  %11149 = call i32 @llvm.ctpop.i32(i32 %11148)
  %11150 = trunc i32 %11149 to i8
  %11151 = and i8 %11150, 1
  %11152 = xor i8 %11151, 1
  store i8 %11152, i8* %11147, align 1
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11153, align 1
  %11154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11155 = icmp eq i32 %11140, 0
  %11156 = zext i1 %11155 to i8
  store i8 %11156, i8* %11154, align 1
  %11157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11158 = lshr i32 %11140, 31
  %11159 = trunc i32 %11158 to i8
  store i8 %11159, i8* %11157, align 1
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11161 = zext i1 %11143 to i8
  store i8 %11161, i8* %11160, align 1
  store %struct.Memory* %loadMem_40c5a4, %struct.Memory** %MEMORY
  %loadMem_40c5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11163 = getelementptr inbounds %struct.GPR, %struct.GPR* %11162, i32 0, i32 33
  %11164 = getelementptr inbounds %struct.Reg, %struct.Reg* %11163, i32 0, i32 0
  %PC.i1859 = bitcast %union.anon* %11164 to i64*
  %11165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11166 = getelementptr inbounds %struct.GPR, %struct.GPR* %11165, i32 0, i32 11
  %11167 = getelementptr inbounds %struct.Reg, %struct.Reg* %11166, i32 0, i32 0
  %EDI.i1860 = bitcast %union.anon* %11167 to i32*
  %11168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11169 = getelementptr inbounds %struct.GPR, %struct.GPR* %11168, i32 0, i32 5
  %11170 = getelementptr inbounds %struct.Reg, %struct.Reg* %11169, i32 0, i32 0
  %RCX.i1861 = bitcast %union.anon* %11170 to i64*
  %11171 = load i64, i64* %RCX.i1861
  %11172 = load i32, i32* %EDI.i1860
  %11173 = zext i32 %11172 to i64
  %11174 = load i64, i64* %PC.i1859
  %11175 = add i64 %11174, 2
  store i64 %11175, i64* %PC.i1859
  %11176 = trunc i64 %11171 to i32
  %11177 = sub i32 %11176, %11172
  %11178 = zext i32 %11177 to i64
  store i64 %11178, i64* %RCX.i1861, align 8
  %11179 = icmp ult i32 %11176, %11172
  %11180 = zext i1 %11179 to i8
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11180, i8* %11181, align 1
  %11182 = and i32 %11177, 255
  %11183 = call i32 @llvm.ctpop.i32(i32 %11182)
  %11184 = trunc i32 %11183 to i8
  %11185 = and i8 %11184, 1
  %11186 = xor i8 %11185, 1
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11186, i8* %11187, align 1
  %11188 = xor i64 %11173, %11171
  %11189 = trunc i64 %11188 to i32
  %11190 = xor i32 %11189, %11177
  %11191 = lshr i32 %11190, 4
  %11192 = trunc i32 %11191 to i8
  %11193 = and i8 %11192, 1
  %11194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11193, i8* %11194, align 1
  %11195 = icmp eq i32 %11177, 0
  %11196 = zext i1 %11195 to i8
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11196, i8* %11197, align 1
  %11198 = lshr i32 %11177, 31
  %11199 = trunc i32 %11198 to i8
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11199, i8* %11200, align 1
  %11201 = lshr i32 %11176, 31
  %11202 = lshr i32 %11172, 31
  %11203 = xor i32 %11202, %11201
  %11204 = xor i32 %11198, %11201
  %11205 = add i32 %11204, %11203
  %11206 = icmp eq i32 %11205, 2
  %11207 = zext i1 %11206 to i8
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11207, i8* %11208, align 1
  store %struct.Memory* %loadMem_40c5a7, %struct.Memory** %MEMORY
  %loadMem_40c5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 33
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %11211 to i64*
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 7
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %RDX.i1857 = bitcast %union.anon* %11214 to i64*
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11216 = getelementptr inbounds %struct.GPR, %struct.GPR* %11215, i32 0, i32 15
  %11217 = getelementptr inbounds %struct.Reg, %struct.Reg* %11216, i32 0, i32 0
  %RBP.i1858 = bitcast %union.anon* %11217 to i64*
  %11218 = load i64, i64* %RBP.i1858
  %11219 = sub i64 %11218, 20
  %11220 = load i64, i64* %PC.i1856
  %11221 = add i64 %11220, 4
  store i64 %11221, i64* %PC.i1856
  %11222 = inttoptr i64 %11219 to i32*
  %11223 = load i32, i32* %11222
  %11224 = sext i32 %11223 to i64
  store i64 %11224, i64* %RDX.i1857, align 8
  store %struct.Memory* %loadMem_40c5a9, %struct.Memory** %MEMORY
  %loadMem_40c5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11226 = getelementptr inbounds %struct.GPR, %struct.GPR* %11225, i32 0, i32 33
  %11227 = getelementptr inbounds %struct.Reg, %struct.Reg* %11226, i32 0, i32 0
  %PC.i1854 = bitcast %union.anon* %11227 to i64*
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11229 = getelementptr inbounds %struct.GPR, %struct.GPR* %11228, i32 0, i32 7
  %11230 = getelementptr inbounds %struct.Reg, %struct.Reg* %11229, i32 0, i32 0
  %RDX.i1855 = bitcast %union.anon* %11230 to i64*
  %11231 = load i64, i64* %RDX.i1855
  %11232 = load i64, i64* %PC.i1854
  %11233 = add i64 %11232, 4
  store i64 %11233, i64* %PC.i1854
  %11234 = shl i64 %11231, 3
  %11235 = icmp slt i64 %11234, 0
  %11236 = shl i64 %11234, 1
  store i64 %11236, i64* %RDX.i1855, align 8
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11238 = zext i1 %11235 to i8
  store i8 %11238, i8* %11237, align 1
  %11239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11240 = trunc i64 %11236 to i32
  %11241 = and i32 %11240, 254
  %11242 = call i32 @llvm.ctpop.i32(i32 %11241)
  %11243 = trunc i32 %11242 to i8
  %11244 = and i8 %11243, 1
  %11245 = xor i8 %11244, 1
  store i8 %11245, i8* %11239, align 1
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11246, align 1
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11248 = icmp eq i64 %11236, 0
  %11249 = zext i1 %11248 to i8
  store i8 %11249, i8* %11247, align 1
  %11250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11251 = lshr i64 %11236, 63
  %11252 = trunc i64 %11251 to i8
  store i8 %11252, i8* %11250, align 1
  %11253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11253, align 1
  store %struct.Memory* %loadMem_40c5ad, %struct.Memory** %MEMORY
  %loadMem_40c5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11255 = getelementptr inbounds %struct.GPR, %struct.GPR* %11254, i32 0, i32 33
  %11256 = getelementptr inbounds %struct.Reg, %struct.Reg* %11255, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %11256 to i64*
  %11257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11258 = getelementptr inbounds %struct.GPR, %struct.GPR* %11257, i32 0, i32 1
  %11259 = getelementptr inbounds %struct.Reg, %struct.Reg* %11258, i32 0, i32 0
  %RAX.i1852 = bitcast %union.anon* %11259 to i64*
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11261 = getelementptr inbounds %struct.GPR, %struct.GPR* %11260, i32 0, i32 7
  %11262 = getelementptr inbounds %struct.Reg, %struct.Reg* %11261, i32 0, i32 0
  %RDX.i1853 = bitcast %union.anon* %11262 to i64*
  %11263 = load i64, i64* %RAX.i1852
  %11264 = load i64, i64* %RDX.i1853
  %11265 = load i64, i64* %PC.i1851
  %11266 = add i64 %11265, 3
  store i64 %11266, i64* %PC.i1851
  %11267 = add i64 %11264, %11263
  store i64 %11267, i64* %RAX.i1852, align 8
  %11268 = icmp ult i64 %11267, %11263
  %11269 = icmp ult i64 %11267, %11264
  %11270 = or i1 %11268, %11269
  %11271 = zext i1 %11270 to i8
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11271, i8* %11272, align 1
  %11273 = trunc i64 %11267 to i32
  %11274 = and i32 %11273, 255
  %11275 = call i32 @llvm.ctpop.i32(i32 %11274)
  %11276 = trunc i32 %11275 to i8
  %11277 = and i8 %11276, 1
  %11278 = xor i8 %11277, 1
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11278, i8* %11279, align 1
  %11280 = xor i64 %11264, %11263
  %11281 = xor i64 %11280, %11267
  %11282 = lshr i64 %11281, 4
  %11283 = trunc i64 %11282 to i8
  %11284 = and i8 %11283, 1
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11284, i8* %11285, align 1
  %11286 = icmp eq i64 %11267, 0
  %11287 = zext i1 %11286 to i8
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11287, i8* %11288, align 1
  %11289 = lshr i64 %11267, 63
  %11290 = trunc i64 %11289 to i8
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11290, i8* %11291, align 1
  %11292 = lshr i64 %11263, 63
  %11293 = lshr i64 %11264, 63
  %11294 = xor i64 %11289, %11292
  %11295 = xor i64 %11289, %11293
  %11296 = add i64 %11294, %11295
  %11297 = icmp eq i64 %11296, 2
  %11298 = zext i1 %11297 to i8
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11298, i8* %11299, align 1
  store %struct.Memory* %loadMem_40c5b1, %struct.Memory** %MEMORY
  %loadMem_40c5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11301 = getelementptr inbounds %struct.GPR, %struct.GPR* %11300, i32 0, i32 33
  %11302 = getelementptr inbounds %struct.Reg, %struct.Reg* %11301, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %11302 to i64*
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11304 = getelementptr inbounds %struct.GPR, %struct.GPR* %11303, i32 0, i32 5
  %11305 = getelementptr inbounds %struct.Reg, %struct.Reg* %11304, i32 0, i32 0
  %ECX.i1849 = bitcast %union.anon* %11305 to i32*
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11307 = getelementptr inbounds %struct.GPR, %struct.GPR* %11306, i32 0, i32 1
  %11308 = getelementptr inbounds %struct.Reg, %struct.Reg* %11307, i32 0, i32 0
  %RAX.i1850 = bitcast %union.anon* %11308 to i64*
  %11309 = load i64, i64* %RAX.i1850
  %11310 = add i64 %11309, 12
  %11311 = load i32, i32* %ECX.i1849
  %11312 = zext i32 %11311 to i64
  %11313 = load i64, i64* %PC.i1848
  %11314 = add i64 %11313, 3
  store i64 %11314, i64* %PC.i1848
  %11315 = inttoptr i64 %11310 to i32*
  store i32 %11311, i32* %11315
  store %struct.Memory* %loadMem_40c5b4, %struct.Memory** %MEMORY
  %loadMem_40c5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 33
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %11318 to i64*
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11320 = getelementptr inbounds %struct.GPR, %struct.GPR* %11319, i32 0, i32 1
  %11321 = getelementptr inbounds %struct.Reg, %struct.Reg* %11320, i32 0, i32 0
  %RAX.i1846 = bitcast %union.anon* %11321 to i64*
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 15
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %RBP.i1847 = bitcast %union.anon* %11324 to i64*
  %11325 = load i64, i64* %RBP.i1847
  %11326 = sub i64 %11325, 20
  %11327 = load i64, i64* %PC.i1845
  %11328 = add i64 %11327, 3
  store i64 %11328, i64* %PC.i1845
  %11329 = inttoptr i64 %11326 to i32*
  %11330 = load i32, i32* %11329
  %11331 = zext i32 %11330 to i64
  store i64 %11331, i64* %RAX.i1846, align 8
  store %struct.Memory* %loadMem_40c5b7, %struct.Memory** %MEMORY
  %loadMem_40c5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 33
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %PC.i1843 = bitcast %union.anon* %11334 to i64*
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11336 = getelementptr inbounds %struct.GPR, %struct.GPR* %11335, i32 0, i32 1
  %11337 = getelementptr inbounds %struct.Reg, %struct.Reg* %11336, i32 0, i32 0
  %RAX.i1844 = bitcast %union.anon* %11337 to i64*
  %11338 = load i64, i64* %RAX.i1844
  %11339 = load i64, i64* %PC.i1843
  %11340 = add i64 %11339, 3
  store i64 %11340, i64* %PC.i1843
  %11341 = trunc i64 %11338 to i32
  %11342 = add i32 1, %11341
  %11343 = zext i32 %11342 to i64
  store i64 %11343, i64* %RAX.i1844, align 8
  %11344 = icmp ult i32 %11342, %11341
  %11345 = icmp ult i32 %11342, 1
  %11346 = or i1 %11344, %11345
  %11347 = zext i1 %11346 to i8
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11347, i8* %11348, align 1
  %11349 = and i32 %11342, 255
  %11350 = call i32 @llvm.ctpop.i32(i32 %11349)
  %11351 = trunc i32 %11350 to i8
  %11352 = and i8 %11351, 1
  %11353 = xor i8 %11352, 1
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11353, i8* %11354, align 1
  %11355 = xor i64 1, %11338
  %11356 = trunc i64 %11355 to i32
  %11357 = xor i32 %11356, %11342
  %11358 = lshr i32 %11357, 4
  %11359 = trunc i32 %11358 to i8
  %11360 = and i8 %11359, 1
  %11361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11360, i8* %11361, align 1
  %11362 = icmp eq i32 %11342, 0
  %11363 = zext i1 %11362 to i8
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11363, i8* %11364, align 1
  %11365 = lshr i32 %11342, 31
  %11366 = trunc i32 %11365 to i8
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11366, i8* %11367, align 1
  %11368 = lshr i32 %11341, 31
  %11369 = xor i32 %11365, %11368
  %11370 = add i32 %11369, %11365
  %11371 = icmp eq i32 %11370, 2
  %11372 = zext i1 %11371 to i8
  %11373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11372, i8* %11373, align 1
  store %struct.Memory* %loadMem_40c5ba, %struct.Memory** %MEMORY
  %loadMem_40c5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11375 = getelementptr inbounds %struct.GPR, %struct.GPR* %11374, i32 0, i32 33
  %11376 = getelementptr inbounds %struct.Reg, %struct.Reg* %11375, i32 0, i32 0
  %PC.i1840 = bitcast %union.anon* %11376 to i64*
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11378 = getelementptr inbounds %struct.GPR, %struct.GPR* %11377, i32 0, i32 1
  %11379 = getelementptr inbounds %struct.Reg, %struct.Reg* %11378, i32 0, i32 0
  %EAX.i1841 = bitcast %union.anon* %11379 to i32*
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 15
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %RBP.i1842 = bitcast %union.anon* %11382 to i64*
  %11383 = load i64, i64* %RBP.i1842
  %11384 = sub i64 %11383, 20
  %11385 = load i32, i32* %EAX.i1841
  %11386 = zext i32 %11385 to i64
  %11387 = load i64, i64* %PC.i1840
  %11388 = add i64 %11387, 3
  store i64 %11388, i64* %PC.i1840
  %11389 = inttoptr i64 %11384 to i32*
  store i32 %11385, i32* %11389
  store %struct.Memory* %loadMem_40c5bd, %struct.Memory** %MEMORY
  %loadMem_40c5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11391 = getelementptr inbounds %struct.GPR, %struct.GPR* %11390, i32 0, i32 33
  %11392 = getelementptr inbounds %struct.Reg, %struct.Reg* %11391, i32 0, i32 0
  %PC.i1839 = bitcast %union.anon* %11392 to i64*
  %11393 = load i64, i64* %PC.i1839
  %11394 = add i64 %11393, -268
  %11395 = load i64, i64* %PC.i1839
  %11396 = add i64 %11395, 5
  store i64 %11396, i64* %PC.i1839
  %11397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11394, i64* %11397, align 8
  store %struct.Memory* %loadMem_40c5c0, %struct.Memory** %MEMORY
  br label %block_.L_40c4b4

block_.L_40c5c5:                                  ; preds = %block_.L_40c4b4
  %loadMem_40c5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11399 = getelementptr inbounds %struct.GPR, %struct.GPR* %11398, i32 0, i32 33
  %11400 = getelementptr inbounds %struct.Reg, %struct.Reg* %11399, i32 0, i32 0
  %PC.i1837 = bitcast %union.anon* %11400 to i64*
  %11401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11402 = getelementptr inbounds %struct.GPR, %struct.GPR* %11401, i32 0, i32 15
  %11403 = getelementptr inbounds %struct.Reg, %struct.Reg* %11402, i32 0, i32 0
  %RBP.i1838 = bitcast %union.anon* %11403 to i64*
  %11404 = load i64, i64* %RBP.i1838
  %11405 = sub i64 %11404, 104
  %11406 = load i64, i64* %PC.i1837
  %11407 = add i64 %11406, 7
  store i64 %11407, i64* %PC.i1837
  %11408 = inttoptr i64 %11405 to i32*
  store i32 0, i32* %11408
  store %struct.Memory* %loadMem_40c5c5, %struct.Memory** %MEMORY
  %loadMem_40c5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11410 = getelementptr inbounds %struct.GPR, %struct.GPR* %11409, i32 0, i32 33
  %11411 = getelementptr inbounds %struct.Reg, %struct.Reg* %11410, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %11411 to i64*
  %11412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11413 = getelementptr inbounds %struct.GPR, %struct.GPR* %11412, i32 0, i32 15
  %11414 = getelementptr inbounds %struct.Reg, %struct.Reg* %11413, i32 0, i32 0
  %RBP.i1836 = bitcast %union.anon* %11414 to i64*
  %11415 = load i64, i64* %RBP.i1836
  %11416 = sub i64 %11415, 100
  %11417 = load i64, i64* %PC.i1835
  %11418 = add i64 %11417, 7
  store i64 %11418, i64* %PC.i1835
  %11419 = inttoptr i64 %11416 to i32*
  store i32 -1, i32* %11419
  store %struct.Memory* %loadMem_40c5cc, %struct.Memory** %MEMORY
  %loadMem_40c5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 33
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %PC.i1833 = bitcast %union.anon* %11422 to i64*
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11424 = getelementptr inbounds %struct.GPR, %struct.GPR* %11423, i32 0, i32 15
  %11425 = getelementptr inbounds %struct.Reg, %struct.Reg* %11424, i32 0, i32 0
  %RBP.i1834 = bitcast %union.anon* %11425 to i64*
  %11426 = load i64, i64* %RBP.i1834
  %11427 = sub i64 %11426, 96
  %11428 = load i64, i64* %PC.i1833
  %11429 = add i64 %11428, 7
  store i64 %11429, i64* %PC.i1833
  %11430 = inttoptr i64 %11427 to i32*
  store i32 0, i32* %11430
  store %struct.Memory* %loadMem_40c5d3, %struct.Memory** %MEMORY
  %loadMem_40c5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11432 = getelementptr inbounds %struct.GPR, %struct.GPR* %11431, i32 0, i32 33
  %11433 = getelementptr inbounds %struct.Reg, %struct.Reg* %11432, i32 0, i32 0
  %PC.i1831 = bitcast %union.anon* %11433 to i64*
  %11434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11435 = getelementptr inbounds %struct.GPR, %struct.GPR* %11434, i32 0, i32 15
  %11436 = getelementptr inbounds %struct.Reg, %struct.Reg* %11435, i32 0, i32 0
  %RBP.i1832 = bitcast %union.anon* %11436 to i64*
  %11437 = load i64, i64* %RBP.i1832
  %11438 = sub i64 %11437, 84
  %11439 = load i64, i64* %PC.i1831
  %11440 = add i64 %11439, 7
  store i64 %11440, i64* %PC.i1831
  %11441 = inttoptr i64 %11438 to i32*
  store i32 0, i32* %11441
  store %struct.Memory* %loadMem_40c5da, %struct.Memory** %MEMORY
  br label %block_.L_40c5e1

block_.L_40c5e1:                                  ; preds = %routine_shll__cl___eax.exit, %block_.L_40c5c5
  %loadMem_40c5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11443 = getelementptr inbounds %struct.GPR, %struct.GPR* %11442, i32 0, i32 33
  %11444 = getelementptr inbounds %struct.Reg, %struct.Reg* %11443, i32 0, i32 0
  %PC.i1829 = bitcast %union.anon* %11444 to i64*
  %11445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11446 = getelementptr inbounds %struct.GPR, %struct.GPR* %11445, i32 0, i32 15
  %11447 = getelementptr inbounds %struct.Reg, %struct.Reg* %11446, i32 0, i32 0
  %RBP.i1830 = bitcast %union.anon* %11447 to i64*
  %11448 = load i64, i64* %RBP.i1830
  %11449 = sub i64 %11448, 84
  %11450 = load i64, i64* %PC.i1829
  %11451 = add i64 %11450, 4
  store i64 %11451, i64* %PC.i1829
  %11452 = inttoptr i64 %11449 to i32*
  %11453 = load i32, i32* %11452
  %11454 = sub i32 %11453, 16
  %11455 = icmp ult i32 %11453, 16
  %11456 = zext i1 %11455 to i8
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11456, i8* %11457, align 1
  %11458 = and i32 %11454, 255
  %11459 = call i32 @llvm.ctpop.i32(i32 %11458)
  %11460 = trunc i32 %11459 to i8
  %11461 = and i8 %11460, 1
  %11462 = xor i8 %11461, 1
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11462, i8* %11463, align 1
  %11464 = xor i32 %11453, 16
  %11465 = xor i32 %11464, %11454
  %11466 = lshr i32 %11465, 4
  %11467 = trunc i32 %11466 to i8
  %11468 = and i8 %11467, 1
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11468, i8* %11469, align 1
  %11470 = icmp eq i32 %11454, 0
  %11471 = zext i1 %11470 to i8
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11471, i8* %11472, align 1
  %11473 = lshr i32 %11454, 31
  %11474 = trunc i32 %11473 to i8
  %11475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11474, i8* %11475, align 1
  %11476 = lshr i32 %11453, 31
  %11477 = xor i32 %11473, %11476
  %11478 = add i32 %11477, %11476
  %11479 = icmp eq i32 %11478, 2
  %11480 = zext i1 %11479 to i8
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11480, i8* %11481, align 1
  store %struct.Memory* %loadMem_40c5e1, %struct.Memory** %MEMORY
  %loadMem_40c5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11483 = getelementptr inbounds %struct.GPR, %struct.GPR* %11482, i32 0, i32 33
  %11484 = getelementptr inbounds %struct.Reg, %struct.Reg* %11483, i32 0, i32 0
  %PC.i1828 = bitcast %union.anon* %11484 to i64*
  %11485 = load i64, i64* %PC.i1828
  %11486 = add i64 %11485, 2054
  %11487 = load i64, i64* %PC.i1828
  %11488 = add i64 %11487, 6
  %11489 = load i64, i64* %PC.i1828
  %11490 = add i64 %11489, 6
  store i64 %11490, i64* %PC.i1828
  %11491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11492 = load i8, i8* %11491, align 1
  %11493 = icmp ne i8 %11492, 0
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11495 = load i8, i8* %11494, align 1
  %11496 = icmp ne i8 %11495, 0
  %11497 = xor i1 %11493, %11496
  %11498 = xor i1 %11497, true
  %11499 = zext i1 %11498 to i8
  store i8 %11499, i8* %BRANCH_TAKEN, align 1
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11501 = select i1 %11497, i64 %11488, i64 %11486
  store i64 %11501, i64* %11500, align 8
  store %struct.Memory* %loadMem_40c5e5, %struct.Memory** %MEMORY
  %loadBr_40c5e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c5e5 = icmp eq i8 %loadBr_40c5e5, 1
  br i1 %cmpBr_40c5e5, label %block_.L_40cdeb, label %block_40c5eb

block_40c5eb:                                     ; preds = %block_.L_40c5e1
  %loadMem_40c5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11503 = getelementptr inbounds %struct.GPR, %struct.GPR* %11502, i32 0, i32 33
  %11504 = getelementptr inbounds %struct.Reg, %struct.Reg* %11503, i32 0, i32 0
  %PC.i1826 = bitcast %union.anon* %11504 to i64*
  %11505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11506 = getelementptr inbounds %struct.GPR, %struct.GPR* %11505, i32 0, i32 1
  %11507 = getelementptr inbounds %struct.Reg, %struct.Reg* %11506, i32 0, i32 0
  %RAX.i1827 = bitcast %union.anon* %11507 to i64*
  %11508 = load i64, i64* %PC.i1826
  %11509 = add i64 %11508, 8
  store i64 %11509, i64* %PC.i1826
  %11510 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11510, i64* %RAX.i1827, align 8
  store %struct.Memory* %loadMem_40c5eb, %struct.Memory** %MEMORY
  %loadMem_40c5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11512 = getelementptr inbounds %struct.GPR, %struct.GPR* %11511, i32 0, i32 33
  %11513 = getelementptr inbounds %struct.Reg, %struct.Reg* %11512, i32 0, i32 0
  %PC.i1824 = bitcast %union.anon* %11513 to i64*
  %11514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11515 = getelementptr inbounds %struct.GPR, %struct.GPR* %11514, i32 0, i32 1
  %11516 = getelementptr inbounds %struct.Reg, %struct.Reg* %11515, i32 0, i32 0
  %RAX.i1825 = bitcast %union.anon* %11516 to i64*
  %11517 = load i64, i64* %RAX.i1825
  %11518 = add i64 %11517, 72444
  %11519 = load i64, i64* %PC.i1824
  %11520 = add i64 %11519, 7
  store i64 %11520, i64* %PC.i1824
  %11521 = inttoptr i64 %11518 to i32*
  %11522 = load i32, i32* %11521
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11523, align 1
  %11524 = and i32 %11522, 255
  %11525 = call i32 @llvm.ctpop.i32(i32 %11524)
  %11526 = trunc i32 %11525 to i8
  %11527 = and i8 %11526, 1
  %11528 = xor i8 %11527, 1
  %11529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11528, i8* %11529, align 1
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11530, align 1
  %11531 = icmp eq i32 %11522, 0
  %11532 = zext i1 %11531 to i8
  %11533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11532, i8* %11533, align 1
  %11534 = lshr i32 %11522, 31
  %11535 = trunc i32 %11534 to i8
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11535, i8* %11536, align 1
  %11537 = lshr i32 %11522, 31
  %11538 = xor i32 %11534, %11537
  %11539 = add i32 %11538, %11537
  %11540 = icmp eq i32 %11539, 2
  %11541 = zext i1 %11540 to i8
  %11542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11541, i8* %11542, align 1
  store %struct.Memory* %loadMem_40c5f3, %struct.Memory** %MEMORY
  %loadMem_40c5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11544 = getelementptr inbounds %struct.GPR, %struct.GPR* %11543, i32 0, i32 33
  %11545 = getelementptr inbounds %struct.Reg, %struct.Reg* %11544, i32 0, i32 0
  %PC.i1823 = bitcast %union.anon* %11545 to i64*
  %11546 = load i64, i64* %PC.i1823
  %11547 = add i64 %11546, 41
  %11548 = load i64, i64* %PC.i1823
  %11549 = add i64 %11548, 6
  %11550 = load i64, i64* %PC.i1823
  %11551 = add i64 %11550, 6
  store i64 %11551, i64* %PC.i1823
  %11552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11553 = load i8, i8* %11552, align 1
  %11554 = icmp eq i8 %11553, 0
  %11555 = zext i1 %11554 to i8
  store i8 %11555, i8* %BRANCH_TAKEN, align 1
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11557 = select i1 %11554, i64 %11547, i64 %11549
  store i64 %11557, i64* %11556, align 8
  store %struct.Memory* %loadMem_40c5fa, %struct.Memory** %MEMORY
  %loadBr_40c5fa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c5fa = icmp eq i8 %loadBr_40c5fa, 1
  br i1 %cmpBr_40c5fa, label %block_.L_40c623, label %block_40c600

block_40c600:                                     ; preds = %block_40c5eb
  %loadMem_40c600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11559 = getelementptr inbounds %struct.GPR, %struct.GPR* %11558, i32 0, i32 33
  %11560 = getelementptr inbounds %struct.Reg, %struct.Reg* %11559, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %11560 to i64*
  %11561 = load i64, i64* %PC.i1822
  %11562 = add i64 %11561, 8
  store i64 %11562, i64* %PC.i1822
  %11563 = load i32, i32* bitcast (%G_0x6d4750_type* @G_0x6d4750 to i32*)
  %11564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11564, align 1
  %11565 = and i32 %11563, 255
  %11566 = call i32 @llvm.ctpop.i32(i32 %11565)
  %11567 = trunc i32 %11566 to i8
  %11568 = and i8 %11567, 1
  %11569 = xor i8 %11568, 1
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11569, i8* %11570, align 1
  %11571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11571, align 1
  %11572 = icmp eq i32 %11563, 0
  %11573 = zext i1 %11572 to i8
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11573, i8* %11574, align 1
  %11575 = lshr i32 %11563, 31
  %11576 = trunc i32 %11575 to i8
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11576, i8* %11577, align 1
  %11578 = lshr i32 %11563, 31
  %11579 = xor i32 %11575, %11578
  %11580 = add i32 %11579, %11578
  %11581 = icmp eq i32 %11580, 2
  %11582 = zext i1 %11581 to i8
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11582, i8* %11583, align 1
  store %struct.Memory* %loadMem_40c600, %struct.Memory** %MEMORY
  %loadMem_40c608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11585 = getelementptr inbounds %struct.GPR, %struct.GPR* %11584, i32 0, i32 33
  %11586 = getelementptr inbounds %struct.Reg, %struct.Reg* %11585, i32 0, i32 0
  %PC.i1821 = bitcast %union.anon* %11586 to i64*
  %11587 = load i64, i64* %PC.i1821
  %11588 = add i64 %11587, 62
  %11589 = load i64, i64* %PC.i1821
  %11590 = add i64 %11589, 6
  %11591 = load i64, i64* %PC.i1821
  %11592 = add i64 %11591, 6
  store i64 %11592, i64* %PC.i1821
  %11593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11594 = load i8, i8* %11593, align 1
  store i8 %11594, i8* %BRANCH_TAKEN, align 1
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11596 = icmp ne i8 %11594, 0
  %11597 = select i1 %11596, i64 %11588, i64 %11590
  store i64 %11597, i64* %11595, align 8
  store %struct.Memory* %loadMem_40c608, %struct.Memory** %MEMORY
  %loadBr_40c608 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c608 = icmp eq i8 %loadBr_40c608, 1
  br i1 %cmpBr_40c608, label %block_.L_40c646, label %block_40c60e

block_40c60e:                                     ; preds = %block_40c600
  %loadMem_40c60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11599 = getelementptr inbounds %struct.GPR, %struct.GPR* %11598, i32 0, i32 33
  %11600 = getelementptr inbounds %struct.Reg, %struct.Reg* %11599, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %11600 to i64*
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11602 = getelementptr inbounds %struct.GPR, %struct.GPR* %11601, i32 0, i32 1
  %11603 = getelementptr inbounds %struct.Reg, %struct.Reg* %11602, i32 0, i32 0
  %RAX.i1820 = bitcast %union.anon* %11603 to i64*
  %11604 = load i64, i64* %PC.i1819
  %11605 = add i64 %11604, 8
  store i64 %11605, i64* %PC.i1819
  %11606 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11606, i64* %RAX.i1820, align 8
  store %struct.Memory* %loadMem_40c60e, %struct.Memory** %MEMORY
  %loadMem_40c616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11608 = getelementptr inbounds %struct.GPR, %struct.GPR* %11607, i32 0, i32 33
  %11609 = getelementptr inbounds %struct.Reg, %struct.Reg* %11608, i32 0, i32 0
  %PC.i1817 = bitcast %union.anon* %11609 to i64*
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11611 = getelementptr inbounds %struct.GPR, %struct.GPR* %11610, i32 0, i32 1
  %11612 = getelementptr inbounds %struct.Reg, %struct.Reg* %11611, i32 0, i32 0
  %RAX.i1818 = bitcast %union.anon* %11612 to i64*
  %11613 = load i64, i64* %RAX.i1818
  %11614 = add i64 %11613, 72008
  %11615 = load i64, i64* %PC.i1817
  %11616 = add i64 %11615, 7
  store i64 %11616, i64* %PC.i1817
  %11617 = inttoptr i64 %11614 to i32*
  %11618 = load i32, i32* %11617
  %11619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11619, align 1
  %11620 = and i32 %11618, 255
  %11621 = call i32 @llvm.ctpop.i32(i32 %11620)
  %11622 = trunc i32 %11621 to i8
  %11623 = and i8 %11622, 1
  %11624 = xor i8 %11623, 1
  %11625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11624, i8* %11625, align 1
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11626, align 1
  %11627 = icmp eq i32 %11618, 0
  %11628 = zext i1 %11627 to i8
  %11629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11628, i8* %11629, align 1
  %11630 = lshr i32 %11618, 31
  %11631 = trunc i32 %11630 to i8
  %11632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11631, i8* %11632, align 1
  %11633 = lshr i32 %11618, 31
  %11634 = xor i32 %11630, %11633
  %11635 = add i32 %11634, %11633
  %11636 = icmp eq i32 %11635, 2
  %11637 = zext i1 %11636 to i8
  %11638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11637, i8* %11638, align 1
  store %struct.Memory* %loadMem_40c616, %struct.Memory** %MEMORY
  %loadMem_40c61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11640 = getelementptr inbounds %struct.GPR, %struct.GPR* %11639, i32 0, i32 33
  %11641 = getelementptr inbounds %struct.Reg, %struct.Reg* %11640, i32 0, i32 0
  %PC.i1816 = bitcast %union.anon* %11641 to i64*
  %11642 = load i64, i64* %PC.i1816
  %11643 = add i64 %11642, 41
  %11644 = load i64, i64* %PC.i1816
  %11645 = add i64 %11644, 6
  %11646 = load i64, i64* %PC.i1816
  %11647 = add i64 %11646, 6
  store i64 %11647, i64* %PC.i1816
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11649 = load i8, i8* %11648, align 1
  store i8 %11649, i8* %BRANCH_TAKEN, align 1
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11651 = icmp ne i8 %11649, 0
  %11652 = select i1 %11651, i64 %11643, i64 %11645
  store i64 %11652, i64* %11650, align 8
  store %struct.Memory* %loadMem_40c61d, %struct.Memory** %MEMORY
  %loadBr_40c61d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c61d = icmp eq i8 %loadBr_40c61d, 1
  br i1 %cmpBr_40c61d, label %block_.L_40c646, label %block_.L_40c623

block_.L_40c623:                                  ; preds = %block_40c60e, %block_40c5eb
  %loadMem_40c623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 33
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %PC.i1813 = bitcast %union.anon* %11655 to i64*
  %11656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11657 = getelementptr inbounds %struct.GPR, %struct.GPR* %11656, i32 0, i32 1
  %11658 = getelementptr inbounds %struct.Reg, %struct.Reg* %11657, i32 0, i32 0
  %RAX.i1814 = bitcast %union.anon* %11658 to i64*
  %11659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11660 = getelementptr inbounds %struct.GPR, %struct.GPR* %11659, i32 0, i32 15
  %11661 = getelementptr inbounds %struct.Reg, %struct.Reg* %11660, i32 0, i32 0
  %RBP.i1815 = bitcast %union.anon* %11661 to i64*
  %11662 = load i64, i64* %RBP.i1815
  %11663 = sub i64 %11662, 84
  %11664 = load i64, i64* %PC.i1813
  %11665 = add i64 %11664, 4
  store i64 %11665, i64* %PC.i1813
  %11666 = inttoptr i64 %11663 to i32*
  %11667 = load i32, i32* %11666
  %11668 = sext i32 %11667 to i64
  store i64 %11668, i64* %RAX.i1814, align 8
  store %struct.Memory* %loadMem_40c623, %struct.Memory** %MEMORY
  %loadMem_40c627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11670 = getelementptr inbounds %struct.GPR, %struct.GPR* %11669, i32 0, i32 33
  %11671 = getelementptr inbounds %struct.Reg, %struct.Reg* %11670, i32 0, i32 0
  %PC.i1810 = bitcast %union.anon* %11671 to i64*
  %11672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11673 = getelementptr inbounds %struct.GPR, %struct.GPR* %11672, i32 0, i32 1
  %11674 = getelementptr inbounds %struct.Reg, %struct.Reg* %11673, i32 0, i32 0
  %RAX.i1811 = bitcast %union.anon* %11674 to i64*
  %11675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11676 = getelementptr inbounds %struct.GPR, %struct.GPR* %11675, i32 0, i32 5
  %11677 = getelementptr inbounds %struct.Reg, %struct.Reg* %11676, i32 0, i32 0
  %RCX.i1812 = bitcast %union.anon* %11677 to i64*
  %11678 = load i64, i64* %RAX.i1811
  %11679 = mul i64 %11678, 2
  %11680 = add i64 %11679, 4924288
  %11681 = load i64, i64* %PC.i1810
  %11682 = add i64 %11681, 8
  store i64 %11682, i64* %PC.i1810
  %11683 = inttoptr i64 %11680 to i8*
  %11684 = load i8, i8* %11683
  %11685 = zext i8 %11684 to i64
  store i64 %11685, i64* %RCX.i1812, align 8
  store %struct.Memory* %loadMem_40c627, %struct.Memory** %MEMORY
  %loadMem_40c62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11687 = getelementptr inbounds %struct.GPR, %struct.GPR* %11686, i32 0, i32 33
  %11688 = getelementptr inbounds %struct.Reg, %struct.Reg* %11687, i32 0, i32 0
  %PC.i1807 = bitcast %union.anon* %11688 to i64*
  %11689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11690 = getelementptr inbounds %struct.GPR, %struct.GPR* %11689, i32 0, i32 5
  %11691 = getelementptr inbounds %struct.Reg, %struct.Reg* %11690, i32 0, i32 0
  %ECX.i1808 = bitcast %union.anon* %11691 to i32*
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11693 = getelementptr inbounds %struct.GPR, %struct.GPR* %11692, i32 0, i32 15
  %11694 = getelementptr inbounds %struct.Reg, %struct.Reg* %11693, i32 0, i32 0
  %RBP.i1809 = bitcast %union.anon* %11694 to i64*
  %11695 = load i64, i64* %RBP.i1809
  %11696 = sub i64 %11695, 20
  %11697 = load i32, i32* %ECX.i1808
  %11698 = zext i32 %11697 to i64
  %11699 = load i64, i64* %PC.i1807
  %11700 = add i64 %11699, 3
  store i64 %11700, i64* %PC.i1807
  %11701 = inttoptr i64 %11696 to i32*
  store i32 %11697, i32* %11701
  store %struct.Memory* %loadMem_40c62f, %struct.Memory** %MEMORY
  %loadMem_40c632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11703 = getelementptr inbounds %struct.GPR, %struct.GPR* %11702, i32 0, i32 33
  %11704 = getelementptr inbounds %struct.Reg, %struct.Reg* %11703, i32 0, i32 0
  %PC.i1804 = bitcast %union.anon* %11704 to i64*
  %11705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11706 = getelementptr inbounds %struct.GPR, %struct.GPR* %11705, i32 0, i32 1
  %11707 = getelementptr inbounds %struct.Reg, %struct.Reg* %11706, i32 0, i32 0
  %RAX.i1805 = bitcast %union.anon* %11707 to i64*
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11709 = getelementptr inbounds %struct.GPR, %struct.GPR* %11708, i32 0, i32 15
  %11710 = getelementptr inbounds %struct.Reg, %struct.Reg* %11709, i32 0, i32 0
  %RBP.i1806 = bitcast %union.anon* %11710 to i64*
  %11711 = load i64, i64* %RBP.i1806
  %11712 = sub i64 %11711, 84
  %11713 = load i64, i64* %PC.i1804
  %11714 = add i64 %11713, 4
  store i64 %11714, i64* %PC.i1804
  %11715 = inttoptr i64 %11712 to i32*
  %11716 = load i32, i32* %11715
  %11717 = sext i32 %11716 to i64
  store i64 %11717, i64* %RAX.i1805, align 8
  store %struct.Memory* %loadMem_40c632, %struct.Memory** %MEMORY
  %loadMem_40c636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11719 = getelementptr inbounds %struct.GPR, %struct.GPR* %11718, i32 0, i32 33
  %11720 = getelementptr inbounds %struct.Reg, %struct.Reg* %11719, i32 0, i32 0
  %PC.i1801 = bitcast %union.anon* %11720 to i64*
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11722 = getelementptr inbounds %struct.GPR, %struct.GPR* %11721, i32 0, i32 1
  %11723 = getelementptr inbounds %struct.Reg, %struct.Reg* %11722, i32 0, i32 0
  %RAX.i1802 = bitcast %union.anon* %11723 to i64*
  %11724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11725 = getelementptr inbounds %struct.GPR, %struct.GPR* %11724, i32 0, i32 5
  %11726 = getelementptr inbounds %struct.Reg, %struct.Reg* %11725, i32 0, i32 0
  %RCX.i1803 = bitcast %union.anon* %11726 to i64*
  %11727 = load i64, i64* %RAX.i1802
  %11728 = mul i64 %11727, 2
  %11729 = add i64 %11728, 4924289
  %11730 = load i64, i64* %PC.i1801
  %11731 = add i64 %11730, 8
  store i64 %11731, i64* %PC.i1801
  %11732 = inttoptr i64 %11729 to i8*
  %11733 = load i8, i8* %11732
  %11734 = zext i8 %11733 to i64
  store i64 %11734, i64* %RCX.i1803, align 8
  store %struct.Memory* %loadMem_40c636, %struct.Memory** %MEMORY
  %loadMem_40c63e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11736 = getelementptr inbounds %struct.GPR, %struct.GPR* %11735, i32 0, i32 33
  %11737 = getelementptr inbounds %struct.Reg, %struct.Reg* %11736, i32 0, i32 0
  %PC.i1798 = bitcast %union.anon* %11737 to i64*
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 5
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %ECX.i1799 = bitcast %union.anon* %11740 to i32*
  %11741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11742 = getelementptr inbounds %struct.GPR, %struct.GPR* %11741, i32 0, i32 15
  %11743 = getelementptr inbounds %struct.Reg, %struct.Reg* %11742, i32 0, i32 0
  %RBP.i1800 = bitcast %union.anon* %11743 to i64*
  %11744 = load i64, i64* %RBP.i1800
  %11745 = sub i64 %11744, 24
  %11746 = load i32, i32* %ECX.i1799
  %11747 = zext i32 %11746 to i64
  %11748 = load i64, i64* %PC.i1798
  %11749 = add i64 %11748, 3
  store i64 %11749, i64* %PC.i1798
  %11750 = inttoptr i64 %11745 to i32*
  store i32 %11746, i32* %11750
  store %struct.Memory* %loadMem_40c63e, %struct.Memory** %MEMORY
  %loadMem_40c641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11752 = getelementptr inbounds %struct.GPR, %struct.GPR* %11751, i32 0, i32 33
  %11753 = getelementptr inbounds %struct.Reg, %struct.Reg* %11752, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %11753 to i64*
  %11754 = load i64, i64* %PC.i1797
  %11755 = add i64 %11754, 35
  %11756 = load i64, i64* %PC.i1797
  %11757 = add i64 %11756, 5
  store i64 %11757, i64* %PC.i1797
  %11758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11755, i64* %11758, align 8
  store %struct.Memory* %loadMem_40c641, %struct.Memory** %MEMORY
  br label %block_.L_40c664

block_.L_40c646:                                  ; preds = %block_40c60e, %block_40c600
  %loadMem_40c646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11760 = getelementptr inbounds %struct.GPR, %struct.GPR* %11759, i32 0, i32 33
  %11761 = getelementptr inbounds %struct.Reg, %struct.Reg* %11760, i32 0, i32 0
  %PC.i1794 = bitcast %union.anon* %11761 to i64*
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11763 = getelementptr inbounds %struct.GPR, %struct.GPR* %11762, i32 0, i32 1
  %11764 = getelementptr inbounds %struct.Reg, %struct.Reg* %11763, i32 0, i32 0
  %RAX.i1795 = bitcast %union.anon* %11764 to i64*
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11766 = getelementptr inbounds %struct.GPR, %struct.GPR* %11765, i32 0, i32 15
  %11767 = getelementptr inbounds %struct.Reg, %struct.Reg* %11766, i32 0, i32 0
  %RBP.i1796 = bitcast %union.anon* %11767 to i64*
  %11768 = load i64, i64* %RBP.i1796
  %11769 = sub i64 %11768, 84
  %11770 = load i64, i64* %PC.i1794
  %11771 = add i64 %11770, 4
  store i64 %11771, i64* %PC.i1794
  %11772 = inttoptr i64 %11769 to i32*
  %11773 = load i32, i32* %11772
  %11774 = sext i32 %11773 to i64
  store i64 %11774, i64* %RAX.i1795, align 8
  store %struct.Memory* %loadMem_40c646, %struct.Memory** %MEMORY
  %loadMem_40c64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11776 = getelementptr inbounds %struct.GPR, %struct.GPR* %11775, i32 0, i32 33
  %11777 = getelementptr inbounds %struct.Reg, %struct.Reg* %11776, i32 0, i32 0
  %PC.i1791 = bitcast %union.anon* %11777 to i64*
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11779 = getelementptr inbounds %struct.GPR, %struct.GPR* %11778, i32 0, i32 1
  %11780 = getelementptr inbounds %struct.Reg, %struct.Reg* %11779, i32 0, i32 0
  %RAX.i1792 = bitcast %union.anon* %11780 to i64*
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11782 = getelementptr inbounds %struct.GPR, %struct.GPR* %11781, i32 0, i32 5
  %11783 = getelementptr inbounds %struct.Reg, %struct.Reg* %11782, i32 0, i32 0
  %RCX.i1793 = bitcast %union.anon* %11783 to i64*
  %11784 = load i64, i64* %RAX.i1792
  %11785 = mul i64 %11784, 2
  %11786 = add i64 %11785, 4924256
  %11787 = load i64, i64* %PC.i1791
  %11788 = add i64 %11787, 8
  store i64 %11788, i64* %PC.i1791
  %11789 = inttoptr i64 %11786 to i8*
  %11790 = load i8, i8* %11789
  %11791 = zext i8 %11790 to i64
  store i64 %11791, i64* %RCX.i1793, align 8
  store %struct.Memory* %loadMem_40c64a, %struct.Memory** %MEMORY
  %loadMem_40c652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 33
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %PC.i1788 = bitcast %union.anon* %11794 to i64*
  %11795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11796 = getelementptr inbounds %struct.GPR, %struct.GPR* %11795, i32 0, i32 5
  %11797 = getelementptr inbounds %struct.Reg, %struct.Reg* %11796, i32 0, i32 0
  %ECX.i1789 = bitcast %union.anon* %11797 to i32*
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 15
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %RBP.i1790 = bitcast %union.anon* %11800 to i64*
  %11801 = load i64, i64* %RBP.i1790
  %11802 = sub i64 %11801, 20
  %11803 = load i32, i32* %ECX.i1789
  %11804 = zext i32 %11803 to i64
  %11805 = load i64, i64* %PC.i1788
  %11806 = add i64 %11805, 3
  store i64 %11806, i64* %PC.i1788
  %11807 = inttoptr i64 %11802 to i32*
  store i32 %11803, i32* %11807
  store %struct.Memory* %loadMem_40c652, %struct.Memory** %MEMORY
  %loadMem_40c655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11809 = getelementptr inbounds %struct.GPR, %struct.GPR* %11808, i32 0, i32 33
  %11810 = getelementptr inbounds %struct.Reg, %struct.Reg* %11809, i32 0, i32 0
  %PC.i1785 = bitcast %union.anon* %11810 to i64*
  %11811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11812 = getelementptr inbounds %struct.GPR, %struct.GPR* %11811, i32 0, i32 1
  %11813 = getelementptr inbounds %struct.Reg, %struct.Reg* %11812, i32 0, i32 0
  %RAX.i1786 = bitcast %union.anon* %11813 to i64*
  %11814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11815 = getelementptr inbounds %struct.GPR, %struct.GPR* %11814, i32 0, i32 15
  %11816 = getelementptr inbounds %struct.Reg, %struct.Reg* %11815, i32 0, i32 0
  %RBP.i1787 = bitcast %union.anon* %11816 to i64*
  %11817 = load i64, i64* %RBP.i1787
  %11818 = sub i64 %11817, 84
  %11819 = load i64, i64* %PC.i1785
  %11820 = add i64 %11819, 4
  store i64 %11820, i64* %PC.i1785
  %11821 = inttoptr i64 %11818 to i32*
  %11822 = load i32, i32* %11821
  %11823 = sext i32 %11822 to i64
  store i64 %11823, i64* %RAX.i1786, align 8
  store %struct.Memory* %loadMem_40c655, %struct.Memory** %MEMORY
  %loadMem_40c659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11825 = getelementptr inbounds %struct.GPR, %struct.GPR* %11824, i32 0, i32 33
  %11826 = getelementptr inbounds %struct.Reg, %struct.Reg* %11825, i32 0, i32 0
  %PC.i1782 = bitcast %union.anon* %11826 to i64*
  %11827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11828 = getelementptr inbounds %struct.GPR, %struct.GPR* %11827, i32 0, i32 1
  %11829 = getelementptr inbounds %struct.Reg, %struct.Reg* %11828, i32 0, i32 0
  %RAX.i1783 = bitcast %union.anon* %11829 to i64*
  %11830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11831 = getelementptr inbounds %struct.GPR, %struct.GPR* %11830, i32 0, i32 5
  %11832 = getelementptr inbounds %struct.Reg, %struct.Reg* %11831, i32 0, i32 0
  %RCX.i1784 = bitcast %union.anon* %11832 to i64*
  %11833 = load i64, i64* %RAX.i1783
  %11834 = mul i64 %11833, 2
  %11835 = add i64 %11834, 4924257
  %11836 = load i64, i64* %PC.i1782
  %11837 = add i64 %11836, 8
  store i64 %11837, i64* %PC.i1782
  %11838 = inttoptr i64 %11835 to i8*
  %11839 = load i8, i8* %11838
  %11840 = zext i8 %11839 to i64
  store i64 %11840, i64* %RCX.i1784, align 8
  store %struct.Memory* %loadMem_40c659, %struct.Memory** %MEMORY
  %loadMem_40c661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11842 = getelementptr inbounds %struct.GPR, %struct.GPR* %11841, i32 0, i32 33
  %11843 = getelementptr inbounds %struct.Reg, %struct.Reg* %11842, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %11843 to i64*
  %11844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11845 = getelementptr inbounds %struct.GPR, %struct.GPR* %11844, i32 0, i32 5
  %11846 = getelementptr inbounds %struct.Reg, %struct.Reg* %11845, i32 0, i32 0
  %ECX.i1780 = bitcast %union.anon* %11846 to i32*
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11848 = getelementptr inbounds %struct.GPR, %struct.GPR* %11847, i32 0, i32 15
  %11849 = getelementptr inbounds %struct.Reg, %struct.Reg* %11848, i32 0, i32 0
  %RBP.i1781 = bitcast %union.anon* %11849 to i64*
  %11850 = load i64, i64* %RBP.i1781
  %11851 = sub i64 %11850, 24
  %11852 = load i32, i32* %ECX.i1780
  %11853 = zext i32 %11852 to i64
  %11854 = load i64, i64* %PC.i1779
  %11855 = add i64 %11854, 3
  store i64 %11855, i64* %PC.i1779
  %11856 = inttoptr i64 %11851 to i32*
  store i32 %11852, i32* %11856
  store %struct.Memory* %loadMem_40c661, %struct.Memory** %MEMORY
  br label %block_.L_40c664

block_.L_40c664:                                  ; preds = %block_.L_40c646, %block_.L_40c623
  %loadMem_40c664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11858 = getelementptr inbounds %struct.GPR, %struct.GPR* %11857, i32 0, i32 33
  %11859 = getelementptr inbounds %struct.Reg, %struct.Reg* %11858, i32 0, i32 0
  %PC.i1776 = bitcast %union.anon* %11859 to i64*
  %11860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11861 = getelementptr inbounds %struct.GPR, %struct.GPR* %11860, i32 0, i32 1
  %11862 = getelementptr inbounds %struct.Reg, %struct.Reg* %11861, i32 0, i32 0
  %RAX.i1777 = bitcast %union.anon* %11862 to i64*
  %11863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11864 = getelementptr inbounds %struct.GPR, %struct.GPR* %11863, i32 0, i32 15
  %11865 = getelementptr inbounds %struct.Reg, %struct.Reg* %11864, i32 0, i32 0
  %RBP.i1778 = bitcast %union.anon* %11865 to i64*
  %11866 = load i64, i64* %RBP.i1778
  %11867 = sub i64 %11866, 176
  %11868 = load i64, i64* %PC.i1776
  %11869 = add i64 %11868, 7
  store i64 %11869, i64* %PC.i1776
  store i64 %11867, i64* %RAX.i1777, align 8
  store %struct.Memory* %loadMem_40c664, %struct.Memory** %MEMORY
  %loadMem_40c66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11871 = getelementptr inbounds %struct.GPR, %struct.GPR* %11870, i32 0, i32 33
  %11872 = getelementptr inbounds %struct.Reg, %struct.Reg* %11871, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %11872 to i64*
  %11873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11874 = getelementptr inbounds %struct.GPR, %struct.GPR* %11873, i32 0, i32 5
  %11875 = getelementptr inbounds %struct.Reg, %struct.Reg* %11874, i32 0, i32 0
  %RCX.i1774 = bitcast %union.anon* %11875 to i64*
  %11876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11877 = getelementptr inbounds %struct.GPR, %struct.GPR* %11876, i32 0, i32 15
  %11878 = getelementptr inbounds %struct.Reg, %struct.Reg* %11877, i32 0, i32 0
  %RBP.i1775 = bitcast %union.anon* %11878 to i64*
  %11879 = load i64, i64* %RBP.i1775
  %11880 = sub i64 %11879, 100
  %11881 = load i64, i64* %PC.i1773
  %11882 = add i64 %11881, 3
  store i64 %11882, i64* %PC.i1773
  %11883 = inttoptr i64 %11880 to i32*
  %11884 = load i32, i32* %11883
  %11885 = zext i32 %11884 to i64
  store i64 %11885, i64* %RCX.i1774, align 8
  store %struct.Memory* %loadMem_40c66b, %struct.Memory** %MEMORY
  %loadMem_40c66e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11887 = getelementptr inbounds %struct.GPR, %struct.GPR* %11886, i32 0, i32 33
  %11888 = getelementptr inbounds %struct.Reg, %struct.Reg* %11887, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %11888 to i64*
  %11889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11890 = getelementptr inbounds %struct.GPR, %struct.GPR* %11889, i32 0, i32 5
  %11891 = getelementptr inbounds %struct.Reg, %struct.Reg* %11890, i32 0, i32 0
  %RCX.i1772 = bitcast %union.anon* %11891 to i64*
  %11892 = load i64, i64* %RCX.i1772
  %11893 = load i64, i64* %PC.i1771
  %11894 = add i64 %11893, 3
  store i64 %11894, i64* %PC.i1771
  %11895 = trunc i64 %11892 to i32
  %11896 = add i32 1, %11895
  %11897 = zext i32 %11896 to i64
  store i64 %11897, i64* %RCX.i1772, align 8
  %11898 = icmp ult i32 %11896, %11895
  %11899 = icmp ult i32 %11896, 1
  %11900 = or i1 %11898, %11899
  %11901 = zext i1 %11900 to i8
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11901, i8* %11902, align 1
  %11903 = and i32 %11896, 255
  %11904 = call i32 @llvm.ctpop.i32(i32 %11903)
  %11905 = trunc i32 %11904 to i8
  %11906 = and i8 %11905, 1
  %11907 = xor i8 %11906, 1
  %11908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11907, i8* %11908, align 1
  %11909 = xor i64 1, %11892
  %11910 = trunc i64 %11909 to i32
  %11911 = xor i32 %11910, %11896
  %11912 = lshr i32 %11911, 4
  %11913 = trunc i32 %11912 to i8
  %11914 = and i8 %11913, 1
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11914, i8* %11915, align 1
  %11916 = icmp eq i32 %11896, 0
  %11917 = zext i1 %11916 to i8
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11917, i8* %11918, align 1
  %11919 = lshr i32 %11896, 31
  %11920 = trunc i32 %11919 to i8
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11920, i8* %11921, align 1
  %11922 = lshr i32 %11895, 31
  %11923 = xor i32 %11919, %11922
  %11924 = add i32 %11923, %11919
  %11925 = icmp eq i32 %11924, 2
  %11926 = zext i1 %11925 to i8
  %11927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11926, i8* %11927, align 1
  store %struct.Memory* %loadMem_40c66e, %struct.Memory** %MEMORY
  %loadMem_40c671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11929 = getelementptr inbounds %struct.GPR, %struct.GPR* %11928, i32 0, i32 33
  %11930 = getelementptr inbounds %struct.Reg, %struct.Reg* %11929, i32 0, i32 0
  %PC.i1768 = bitcast %union.anon* %11930 to i64*
  %11931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11932 = getelementptr inbounds %struct.GPR, %struct.GPR* %11931, i32 0, i32 5
  %11933 = getelementptr inbounds %struct.Reg, %struct.Reg* %11932, i32 0, i32 0
  %ECX.i1769 = bitcast %union.anon* %11933 to i32*
  %11934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11935 = getelementptr inbounds %struct.GPR, %struct.GPR* %11934, i32 0, i32 15
  %11936 = getelementptr inbounds %struct.Reg, %struct.Reg* %11935, i32 0, i32 0
  %RBP.i1770 = bitcast %union.anon* %11936 to i64*
  %11937 = load i64, i64* %RBP.i1770
  %11938 = sub i64 %11937, 100
  %11939 = load i32, i32* %ECX.i1769
  %11940 = zext i32 %11939 to i64
  %11941 = load i64, i64* %PC.i1768
  %11942 = add i64 %11941, 3
  store i64 %11942, i64* %PC.i1768
  %11943 = inttoptr i64 %11938 to i32*
  store i32 %11939, i32* %11943
  store %struct.Memory* %loadMem_40c671, %struct.Memory** %MEMORY
  %loadMem_40c674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11945 = getelementptr inbounds %struct.GPR, %struct.GPR* %11944, i32 0, i32 33
  %11946 = getelementptr inbounds %struct.Reg, %struct.Reg* %11945, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %11946 to i64*
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11948 = getelementptr inbounds %struct.GPR, %struct.GPR* %11947, i32 0, i32 15
  %11949 = getelementptr inbounds %struct.Reg, %struct.Reg* %11948, i32 0, i32 0
  %RBP.i1767 = bitcast %union.anon* %11949 to i64*
  %11950 = load i64, i64* %RBP.i1767
  %11951 = sub i64 %11950, 36
  %11952 = load i64, i64* %PC.i1766
  %11953 = add i64 %11952, 7
  store i64 %11953, i64* %PC.i1766
  %11954 = inttoptr i64 %11951 to i32*
  store i32 0, i32* %11954
  store %struct.Memory* %loadMem_40c674, %struct.Memory** %MEMORY
  %loadMem_40c67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11956 = getelementptr inbounds %struct.GPR, %struct.GPR* %11955, i32 0, i32 33
  %11957 = getelementptr inbounds %struct.Reg, %struct.Reg* %11956, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %11957 to i64*
  %11958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11959 = getelementptr inbounds %struct.GPR, %struct.GPR* %11958, i32 0, i32 7
  %11960 = getelementptr inbounds %struct.Reg, %struct.Reg* %11959, i32 0, i32 0
  %RDX.i1764 = bitcast %union.anon* %11960 to i64*
  %11961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11962 = getelementptr inbounds %struct.GPR, %struct.GPR* %11961, i32 0, i32 15
  %11963 = getelementptr inbounds %struct.Reg, %struct.Reg* %11962, i32 0, i32 0
  %RBP.i1765 = bitcast %union.anon* %11963 to i64*
  %11964 = load i64, i64* %RBP.i1765
  %11965 = sub i64 %11964, 20
  %11966 = load i64, i64* %PC.i1763
  %11967 = add i64 %11966, 4
  store i64 %11967, i64* %PC.i1763
  %11968 = inttoptr i64 %11965 to i32*
  %11969 = load i32, i32* %11968
  %11970 = sext i32 %11969 to i64
  store i64 %11970, i64* %RDX.i1764, align 8
  store %struct.Memory* %loadMem_40c67b, %struct.Memory** %MEMORY
  %loadMem_40c67f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11972 = getelementptr inbounds %struct.GPR, %struct.GPR* %11971, i32 0, i32 33
  %11973 = getelementptr inbounds %struct.Reg, %struct.Reg* %11972, i32 0, i32 0
  %PC.i1761 = bitcast %union.anon* %11973 to i64*
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11975 = getelementptr inbounds %struct.GPR, %struct.GPR* %11974, i32 0, i32 7
  %11976 = getelementptr inbounds %struct.Reg, %struct.Reg* %11975, i32 0, i32 0
  %RDX.i1762 = bitcast %union.anon* %11976 to i64*
  %11977 = load i64, i64* %RDX.i1762
  %11978 = load i64, i64* %PC.i1761
  %11979 = add i64 %11978, 4
  store i64 %11979, i64* %PC.i1761
  %11980 = shl i64 %11977, 3
  %11981 = icmp slt i64 %11980, 0
  %11982 = shl i64 %11980, 1
  store i64 %11982, i64* %RDX.i1762, align 8
  %11983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11984 = zext i1 %11981 to i8
  store i8 %11984, i8* %11983, align 1
  %11985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11986 = trunc i64 %11982 to i32
  %11987 = and i32 %11986, 254
  %11988 = call i32 @llvm.ctpop.i32(i32 %11987)
  %11989 = trunc i32 %11988 to i8
  %11990 = and i8 %11989, 1
  %11991 = xor i8 %11990, 1
  store i8 %11991, i8* %11985, align 1
  %11992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11992, align 1
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11994 = icmp eq i64 %11982, 0
  %11995 = zext i1 %11994 to i8
  store i8 %11995, i8* %11993, align 1
  %11996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11997 = lshr i64 %11982, 63
  %11998 = trunc i64 %11997 to i8
  store i8 %11998, i8* %11996, align 1
  %11999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11999, align 1
  store %struct.Memory* %loadMem_40c67f, %struct.Memory** %MEMORY
  %loadMem_40c683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12001 = getelementptr inbounds %struct.GPR, %struct.GPR* %12000, i32 0, i32 33
  %12002 = getelementptr inbounds %struct.Reg, %struct.Reg* %12001, i32 0, i32 0
  %PC.i1758 = bitcast %union.anon* %12002 to i64*
  %12003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12004 = getelementptr inbounds %struct.GPR, %struct.GPR* %12003, i32 0, i32 1
  %12005 = getelementptr inbounds %struct.Reg, %struct.Reg* %12004, i32 0, i32 0
  %RAX.i1759 = bitcast %union.anon* %12005 to i64*
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12007 = getelementptr inbounds %struct.GPR, %struct.GPR* %12006, i32 0, i32 7
  %12008 = getelementptr inbounds %struct.Reg, %struct.Reg* %12007, i32 0, i32 0
  %RDX.i1760 = bitcast %union.anon* %12008 to i64*
  %12009 = load i64, i64* %RAX.i1759
  %12010 = load i64, i64* %RDX.i1760
  %12011 = load i64, i64* %PC.i1758
  %12012 = add i64 %12011, 3
  store i64 %12012, i64* %PC.i1758
  %12013 = add i64 %12010, %12009
  store i64 %12013, i64* %RAX.i1759, align 8
  %12014 = icmp ult i64 %12013, %12009
  %12015 = icmp ult i64 %12013, %12010
  %12016 = or i1 %12014, %12015
  %12017 = zext i1 %12016 to i8
  %12018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12017, i8* %12018, align 1
  %12019 = trunc i64 %12013 to i32
  %12020 = and i32 %12019, 255
  %12021 = call i32 @llvm.ctpop.i32(i32 %12020)
  %12022 = trunc i32 %12021 to i8
  %12023 = and i8 %12022, 1
  %12024 = xor i8 %12023, 1
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12024, i8* %12025, align 1
  %12026 = xor i64 %12010, %12009
  %12027 = xor i64 %12026, %12013
  %12028 = lshr i64 %12027, 4
  %12029 = trunc i64 %12028 to i8
  %12030 = and i8 %12029, 1
  %12031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12030, i8* %12031, align 1
  %12032 = icmp eq i64 %12013, 0
  %12033 = zext i1 %12032 to i8
  %12034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12033, i8* %12034, align 1
  %12035 = lshr i64 %12013, 63
  %12036 = trunc i64 %12035 to i8
  %12037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12036, i8* %12037, align 1
  %12038 = lshr i64 %12009, 63
  %12039 = lshr i64 %12010, 63
  %12040 = xor i64 %12035, %12038
  %12041 = xor i64 %12035, %12039
  %12042 = add i64 %12040, %12041
  %12043 = icmp eq i64 %12042, 2
  %12044 = zext i1 %12043 to i8
  %12045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12044, i8* %12045, align 1
  store %struct.Memory* %loadMem_40c683, %struct.Memory** %MEMORY
  %loadMem_40c686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12047 = getelementptr inbounds %struct.GPR, %struct.GPR* %12046, i32 0, i32 33
  %12048 = getelementptr inbounds %struct.Reg, %struct.Reg* %12047, i32 0, i32 0
  %PC.i1755 = bitcast %union.anon* %12048 to i64*
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12050 = getelementptr inbounds %struct.GPR, %struct.GPR* %12049, i32 0, i32 7
  %12051 = getelementptr inbounds %struct.Reg, %struct.Reg* %12050, i32 0, i32 0
  %RDX.i1756 = bitcast %union.anon* %12051 to i64*
  %12052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12053 = getelementptr inbounds %struct.GPR, %struct.GPR* %12052, i32 0, i32 15
  %12054 = getelementptr inbounds %struct.Reg, %struct.Reg* %12053, i32 0, i32 0
  %RBP.i1757 = bitcast %union.anon* %12054 to i64*
  %12055 = load i64, i64* %RBP.i1757
  %12056 = sub i64 %12055, 24
  %12057 = load i64, i64* %PC.i1755
  %12058 = add i64 %12057, 4
  store i64 %12058, i64* %PC.i1755
  %12059 = inttoptr i64 %12056 to i32*
  %12060 = load i32, i32* %12059
  %12061 = sext i32 %12060 to i64
  store i64 %12061, i64* %RDX.i1756, align 8
  store %struct.Memory* %loadMem_40c686, %struct.Memory** %MEMORY
  %loadMem_40c68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12063 = getelementptr inbounds %struct.GPR, %struct.GPR* %12062, i32 0, i32 33
  %12064 = getelementptr inbounds %struct.Reg, %struct.Reg* %12063, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %12064 to i64*
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 1
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %RAX.i1752 = bitcast %union.anon* %12067 to i64*
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12069 = getelementptr inbounds %struct.GPR, %struct.GPR* %12068, i32 0, i32 7
  %12070 = getelementptr inbounds %struct.Reg, %struct.Reg* %12069, i32 0, i32 0
  %RDX.i1753 = bitcast %union.anon* %12070 to i64*
  %12071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12072 = getelementptr inbounds %struct.GPR, %struct.GPR* %12071, i32 0, i32 11
  %12073 = getelementptr inbounds %struct.Reg, %struct.Reg* %12072, i32 0, i32 0
  %RDI.i1754 = bitcast %union.anon* %12073 to i64*
  %12074 = load i64, i64* %RAX.i1752
  %12075 = load i64, i64* %RDX.i1753
  %12076 = mul i64 %12075, 4
  %12077 = add i64 %12076, %12074
  %12078 = load i64, i64* %PC.i1751
  %12079 = add i64 %12078, 3
  store i64 %12079, i64* %PC.i1751
  %12080 = inttoptr i64 %12077 to i32*
  %12081 = load i32, i32* %12080
  %12082 = zext i32 %12081 to i64
  store i64 %12082, i64* %RDI.i1754, align 8
  store %struct.Memory* %loadMem_40c68a, %struct.Memory** %MEMORY
  %loadMem1_40c68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12084 = getelementptr inbounds %struct.GPR, %struct.GPR* %12083, i32 0, i32 33
  %12085 = getelementptr inbounds %struct.Reg, %struct.Reg* %12084, i32 0, i32 0
  %PC.i1750 = bitcast %union.anon* %12085 to i64*
  %12086 = load i64, i64* %PC.i1750
  %12087 = add i64 %12086, -46733
  %12088 = load i64, i64* %PC.i1750
  %12089 = add i64 %12088, 5
  %12090 = load i64, i64* %PC.i1750
  %12091 = add i64 %12090, 5
  store i64 %12091, i64* %PC.i1750
  %12092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12093 = load i64, i64* %12092, align 8
  %12094 = add i64 %12093, -8
  %12095 = inttoptr i64 %12094 to i64*
  store i64 %12089, i64* %12095
  store i64 %12094, i64* %12092, align 8
  %12096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12087, i64* %12096, align 8
  store %struct.Memory* %loadMem1_40c68d, %struct.Memory** %MEMORY
  %loadMem2_40c68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c68d = load i64, i64* %3
  %12097 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40c68d)
  store %struct.Memory* %12097, %struct.Memory** %MEMORY
  %loadMem_40c692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12099 = getelementptr inbounds %struct.GPR, %struct.GPR* %12098, i32 0, i32 33
  %12100 = getelementptr inbounds %struct.Reg, %struct.Reg* %12099, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %12100 to i64*
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12102 = getelementptr inbounds %struct.GPR, %struct.GPR* %12101, i32 0, i32 7
  %12103 = getelementptr inbounds %struct.Reg, %struct.Reg* %12102, i32 0, i32 0
  %RDX.i1745 = bitcast %union.anon* %12103 to i64*
  %12104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12105 = getelementptr inbounds %struct.GPR, %struct.GPR* %12104, i32 0, i32 15
  %12106 = getelementptr inbounds %struct.Reg, %struct.Reg* %12105, i32 0, i32 0
  %RBP.i1746 = bitcast %union.anon* %12106 to i64*
  %12107 = load i64, i64* %RBP.i1746
  %12108 = sub i64 %12107, 176
  %12109 = load i64, i64* %PC.i1744
  %12110 = add i64 %12109, 7
  store i64 %12110, i64* %PC.i1744
  store i64 %12108, i64* %RDX.i1745, align 8
  store %struct.Memory* %loadMem_40c692, %struct.Memory** %MEMORY
  %loadMem_40c699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12112 = getelementptr inbounds %struct.GPR, %struct.GPR* %12111, i32 0, i32 33
  %12113 = getelementptr inbounds %struct.Reg, %struct.Reg* %12112, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %12113 to i64*
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12115 = getelementptr inbounds %struct.GPR, %struct.GPR* %12114, i32 0, i32 9
  %12116 = getelementptr inbounds %struct.Reg, %struct.Reg* %12115, i32 0, i32 0
  %RSI.i1743 = bitcast %union.anon* %12116 to i64*
  %12117 = load i64, i64* %PC.i1742
  %12118 = add i64 %12117, 10
  store i64 %12118, i64* %PC.i1742
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %RSI.i1743, align 8
  store %struct.Memory* %loadMem_40c699, %struct.Memory** %MEMORY
  %loadMem_40c6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12120 = getelementptr inbounds %struct.GPR, %struct.GPR* %12119, i32 0, i32 33
  %12121 = getelementptr inbounds %struct.Reg, %struct.Reg* %12120, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %12121 to i64*
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 15
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %RBP.i1740 = bitcast %union.anon* %12124 to i64*
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12126 = getelementptr inbounds %struct.GPR, %struct.GPR* %12125, i32 0, i32 17
  %12127 = getelementptr inbounds %struct.Reg, %struct.Reg* %12126, i32 0, i32 0
  %R8.i1741 = bitcast %union.anon* %12127 to i64*
  %12128 = load i64, i64* %RBP.i1740
  %12129 = sub i64 %12128, 204
  %12130 = load i64, i64* %PC.i1739
  %12131 = add i64 %12130, 7
  store i64 %12131, i64* %PC.i1739
  %12132 = inttoptr i64 %12129 to i32*
  %12133 = load i32, i32* %12132
  %12134 = sext i32 %12133 to i64
  store i64 %12134, i64* %R8.i1741, align 8
  store %struct.Memory* %loadMem_40c6a3, %struct.Memory** %MEMORY
  %loadMem_40c6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12136 = getelementptr inbounds %struct.GPR, %struct.GPR* %12135, i32 0, i32 33
  %12137 = getelementptr inbounds %struct.Reg, %struct.Reg* %12136, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %12137 to i64*
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12139 = getelementptr inbounds %struct.GPR, %struct.GPR* %12138, i32 0, i32 17
  %12140 = getelementptr inbounds %struct.Reg, %struct.Reg* %12139, i32 0, i32 0
  %R8.i1738 = bitcast %union.anon* %12140 to i64*
  %12141 = load i64, i64* %R8.i1738
  %12142 = load i64, i64* %PC.i1737
  %12143 = add i64 %12142, 4
  store i64 %12143, i64* %PC.i1737
  %12144 = shl i64 %12141, 5
  %12145 = icmp slt i64 %12144, 0
  %12146 = shl i64 %12144, 1
  store i64 %12146, i64* %R8.i1738, align 8
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12148 = zext i1 %12145 to i8
  store i8 %12148, i8* %12147, align 1
  %12149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12150 = trunc i64 %12146 to i32
  %12151 = and i32 %12150, 254
  %12152 = call i32 @llvm.ctpop.i32(i32 %12151)
  %12153 = trunc i32 %12152 to i8
  %12154 = and i8 %12153, 1
  %12155 = xor i8 %12154, 1
  store i8 %12155, i8* %12149, align 1
  %12156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12156, align 1
  %12157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12158 = icmp eq i64 %12146, 0
  %12159 = zext i1 %12158 to i8
  store i8 %12159, i8* %12157, align 1
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12161 = lshr i64 %12146, 63
  %12162 = trunc i64 %12161 to i8
  store i8 %12162, i8* %12160, align 1
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12163, align 1
  store %struct.Memory* %loadMem_40c6aa, %struct.Memory** %MEMORY
  %loadMem_40c6ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %12164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12165 = getelementptr inbounds %struct.GPR, %struct.GPR* %12164, i32 0, i32 33
  %12166 = getelementptr inbounds %struct.Reg, %struct.Reg* %12165, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %12166 to i64*
  %12167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12168 = getelementptr inbounds %struct.GPR, %struct.GPR* %12167, i32 0, i32 9
  %12169 = getelementptr inbounds %struct.Reg, %struct.Reg* %12168, i32 0, i32 0
  %RSI.i1735 = bitcast %union.anon* %12169 to i64*
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12171 = getelementptr inbounds %struct.GPR, %struct.GPR* %12170, i32 0, i32 19
  %12172 = getelementptr inbounds %struct.Reg, %struct.Reg* %12171, i32 0, i32 0
  %R9.i1736 = bitcast %union.anon* %12172 to i64*
  %12173 = load i64, i64* %RSI.i1735
  %12174 = load i64, i64* %PC.i1734
  %12175 = add i64 %12174, 3
  store i64 %12175, i64* %PC.i1734
  store i64 %12173, i64* %R9.i1736, align 8
  store %struct.Memory* %loadMem_40c6ae, %struct.Memory** %MEMORY
  %loadMem_40c6b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12177 = getelementptr inbounds %struct.GPR, %struct.GPR* %12176, i32 0, i32 33
  %12178 = getelementptr inbounds %struct.Reg, %struct.Reg* %12177, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %12178 to i64*
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12180 = getelementptr inbounds %struct.GPR, %struct.GPR* %12179, i32 0, i32 17
  %12181 = getelementptr inbounds %struct.Reg, %struct.Reg* %12180, i32 0, i32 0
  %R8.i1732 = bitcast %union.anon* %12181 to i64*
  %12182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12183 = getelementptr inbounds %struct.GPR, %struct.GPR* %12182, i32 0, i32 19
  %12184 = getelementptr inbounds %struct.Reg, %struct.Reg* %12183, i32 0, i32 0
  %R9.i1733 = bitcast %union.anon* %12184 to i64*
  %12185 = load i64, i64* %R9.i1733
  %12186 = load i64, i64* %R8.i1732
  %12187 = load i64, i64* %PC.i1731
  %12188 = add i64 %12187, 3
  store i64 %12188, i64* %PC.i1731
  %12189 = add i64 %12186, %12185
  store i64 %12189, i64* %R9.i1733, align 8
  %12190 = icmp ult i64 %12189, %12185
  %12191 = icmp ult i64 %12189, %12186
  %12192 = or i1 %12190, %12191
  %12193 = zext i1 %12192 to i8
  %12194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12193, i8* %12194, align 1
  %12195 = trunc i64 %12189 to i32
  %12196 = and i32 %12195, 255
  %12197 = call i32 @llvm.ctpop.i32(i32 %12196)
  %12198 = trunc i32 %12197 to i8
  %12199 = and i8 %12198, 1
  %12200 = xor i8 %12199, 1
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12200, i8* %12201, align 1
  %12202 = xor i64 %12186, %12185
  %12203 = xor i64 %12202, %12189
  %12204 = lshr i64 %12203, 4
  %12205 = trunc i64 %12204 to i8
  %12206 = and i8 %12205, 1
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12206, i8* %12207, align 1
  %12208 = icmp eq i64 %12189, 0
  %12209 = zext i1 %12208 to i8
  %12210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12209, i8* %12210, align 1
  %12211 = lshr i64 %12189, 63
  %12212 = trunc i64 %12211 to i8
  %12213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12212, i8* %12213, align 1
  %12214 = lshr i64 %12185, 63
  %12215 = lshr i64 %12186, 63
  %12216 = xor i64 %12211, %12214
  %12217 = xor i64 %12211, %12215
  %12218 = add i64 %12216, %12217
  %12219 = icmp eq i64 %12218, 2
  %12220 = zext i1 %12219 to i8
  %12221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12220, i8* %12221, align 1
  store %struct.Memory* %loadMem_40c6b1, %struct.Memory** %MEMORY
  %loadMem_40c6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12223 = getelementptr inbounds %struct.GPR, %struct.GPR* %12222, i32 0, i32 33
  %12224 = getelementptr inbounds %struct.Reg, %struct.Reg* %12223, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %12224 to i64*
  %12225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12226 = getelementptr inbounds %struct.GPR, %struct.GPR* %12225, i32 0, i32 15
  %12227 = getelementptr inbounds %struct.Reg, %struct.Reg* %12226, i32 0, i32 0
  %RBP.i1729 = bitcast %union.anon* %12227 to i64*
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12229 = getelementptr inbounds %struct.GPR, %struct.GPR* %12228, i32 0, i32 17
  %12230 = getelementptr inbounds %struct.Reg, %struct.Reg* %12229, i32 0, i32 0
  %R8.i1730 = bitcast %union.anon* %12230 to i64*
  %12231 = load i64, i64* %RBP.i1729
  %12232 = sub i64 %12231, 20
  %12233 = load i64, i64* %PC.i1728
  %12234 = add i64 %12233, 4
  store i64 %12234, i64* %PC.i1728
  %12235 = inttoptr i64 %12232 to i32*
  %12236 = load i32, i32* %12235
  %12237 = sext i32 %12236 to i64
  store i64 %12237, i64* %R8.i1730, align 8
  store %struct.Memory* %loadMem_40c6b4, %struct.Memory** %MEMORY
  %loadMem_40c6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12239 = getelementptr inbounds %struct.GPR, %struct.GPR* %12238, i32 0, i32 33
  %12240 = getelementptr inbounds %struct.Reg, %struct.Reg* %12239, i32 0, i32 0
  %PC.i1726 = bitcast %union.anon* %12240 to i64*
  %12241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12242 = getelementptr inbounds %struct.GPR, %struct.GPR* %12241, i32 0, i32 17
  %12243 = getelementptr inbounds %struct.Reg, %struct.Reg* %12242, i32 0, i32 0
  %R8.i1727 = bitcast %union.anon* %12243 to i64*
  %12244 = load i64, i64* %R8.i1727
  %12245 = load i64, i64* %PC.i1726
  %12246 = add i64 %12245, 4
  store i64 %12246, i64* %PC.i1726
  %12247 = shl i64 %12244, 3
  %12248 = icmp slt i64 %12247, 0
  %12249 = shl i64 %12247, 1
  store i64 %12249, i64* %R8.i1727, align 8
  %12250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12251 = zext i1 %12248 to i8
  store i8 %12251, i8* %12250, align 1
  %12252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12253 = trunc i64 %12249 to i32
  %12254 = and i32 %12253, 254
  %12255 = call i32 @llvm.ctpop.i32(i32 %12254)
  %12256 = trunc i32 %12255 to i8
  %12257 = and i8 %12256, 1
  %12258 = xor i8 %12257, 1
  store i8 %12258, i8* %12252, align 1
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12259, align 1
  %12260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12261 = icmp eq i64 %12249, 0
  %12262 = zext i1 %12261 to i8
  store i8 %12262, i8* %12260, align 1
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12264 = lshr i64 %12249, 63
  %12265 = trunc i64 %12264 to i8
  store i8 %12265, i8* %12263, align 1
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12266, align 1
  store %struct.Memory* %loadMem_40c6b8, %struct.Memory** %MEMORY
  %loadMem_40c6bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12268 = getelementptr inbounds %struct.GPR, %struct.GPR* %12267, i32 0, i32 33
  %12269 = getelementptr inbounds %struct.Reg, %struct.Reg* %12268, i32 0, i32 0
  %PC.i1723 = bitcast %union.anon* %12269 to i64*
  %12270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12271 = getelementptr inbounds %struct.GPR, %struct.GPR* %12270, i32 0, i32 17
  %12272 = getelementptr inbounds %struct.Reg, %struct.Reg* %12271, i32 0, i32 0
  %R8.i1724 = bitcast %union.anon* %12272 to i64*
  %12273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12274 = getelementptr inbounds %struct.GPR, %struct.GPR* %12273, i32 0, i32 19
  %12275 = getelementptr inbounds %struct.Reg, %struct.Reg* %12274, i32 0, i32 0
  %R9.i1725 = bitcast %union.anon* %12275 to i64*
  %12276 = load i64, i64* %R9.i1725
  %12277 = load i64, i64* %R8.i1724
  %12278 = load i64, i64* %PC.i1723
  %12279 = add i64 %12278, 3
  store i64 %12279, i64* %PC.i1723
  %12280 = add i64 %12277, %12276
  store i64 %12280, i64* %R9.i1725, align 8
  %12281 = icmp ult i64 %12280, %12276
  %12282 = icmp ult i64 %12280, %12277
  %12283 = or i1 %12281, %12282
  %12284 = zext i1 %12283 to i8
  %12285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12284, i8* %12285, align 1
  %12286 = trunc i64 %12280 to i32
  %12287 = and i32 %12286, 255
  %12288 = call i32 @llvm.ctpop.i32(i32 %12287)
  %12289 = trunc i32 %12288 to i8
  %12290 = and i8 %12289, 1
  %12291 = xor i8 %12290, 1
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12291, i8* %12292, align 1
  %12293 = xor i64 %12277, %12276
  %12294 = xor i64 %12293, %12280
  %12295 = lshr i64 %12294, 4
  %12296 = trunc i64 %12295 to i8
  %12297 = and i8 %12296, 1
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12297, i8* %12298, align 1
  %12299 = icmp eq i64 %12280, 0
  %12300 = zext i1 %12299 to i8
  %12301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12300, i8* %12301, align 1
  %12302 = lshr i64 %12280, 63
  %12303 = trunc i64 %12302 to i8
  %12304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12303, i8* %12304, align 1
  %12305 = lshr i64 %12276, 63
  %12306 = lshr i64 %12277, 63
  %12307 = xor i64 %12302, %12305
  %12308 = xor i64 %12302, %12306
  %12309 = add i64 %12307, %12308
  %12310 = icmp eq i64 %12309, 2
  %12311 = zext i1 %12310 to i8
  %12312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12311, i8* %12312, align 1
  store %struct.Memory* %loadMem_40c6bc, %struct.Memory** %MEMORY
  %loadMem_40c6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12314 = getelementptr inbounds %struct.GPR, %struct.GPR* %12313, i32 0, i32 33
  %12315 = getelementptr inbounds %struct.Reg, %struct.Reg* %12314, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %12315 to i64*
  %12316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12317 = getelementptr inbounds %struct.GPR, %struct.GPR* %12316, i32 0, i32 15
  %12318 = getelementptr inbounds %struct.Reg, %struct.Reg* %12317, i32 0, i32 0
  %RBP.i1721 = bitcast %union.anon* %12318 to i64*
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12320 = getelementptr inbounds %struct.GPR, %struct.GPR* %12319, i32 0, i32 17
  %12321 = getelementptr inbounds %struct.Reg, %struct.Reg* %12320, i32 0, i32 0
  %R8.i1722 = bitcast %union.anon* %12321 to i64*
  %12322 = load i64, i64* %RBP.i1721
  %12323 = sub i64 %12322, 24
  %12324 = load i64, i64* %PC.i1720
  %12325 = add i64 %12324, 4
  store i64 %12325, i64* %PC.i1720
  %12326 = inttoptr i64 %12323 to i32*
  %12327 = load i32, i32* %12326
  %12328 = sext i32 %12327 to i64
  store i64 %12328, i64* %R8.i1722, align 8
  store %struct.Memory* %loadMem_40c6bf, %struct.Memory** %MEMORY
  %loadMem_40c6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12330 = getelementptr inbounds %struct.GPR, %struct.GPR* %12329, i32 0, i32 33
  %12331 = getelementptr inbounds %struct.Reg, %struct.Reg* %12330, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %12331 to i64*
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12333 = getelementptr inbounds %struct.GPR, %struct.GPR* %12332, i32 0, i32 1
  %12334 = getelementptr inbounds %struct.Reg, %struct.Reg* %12333, i32 0, i32 0
  %RAX.i1717 = bitcast %union.anon* %12334 to i64*
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12336 = getelementptr inbounds %struct.GPR, %struct.GPR* %12335, i32 0, i32 17
  %12337 = getelementptr inbounds %struct.Reg, %struct.Reg* %12336, i32 0, i32 0
  %R8.i1718 = bitcast %union.anon* %12337 to i64*
  %12338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12339 = getelementptr inbounds %struct.GPR, %struct.GPR* %12338, i32 0, i32 19
  %12340 = getelementptr inbounds %struct.Reg, %struct.Reg* %12339, i32 0, i32 0
  %R9.i1719 = bitcast %union.anon* %12340 to i64*
  %12341 = load i64, i64* %RAX.i1717
  %12342 = load i64, i64* %R9.i1719
  %12343 = load i64, i64* %R8.i1718
  %12344 = mul i64 %12343, 4
  %12345 = add i64 %12344, %12342
  %12346 = load i64, i64* %PC.i1716
  %12347 = add i64 %12346, 5
  store i64 %12347, i64* %PC.i1716
  %12348 = inttoptr i64 %12345 to i32*
  %12349 = load i32, i32* %12348
  %12350 = shl i64 %12341, 32
  %12351 = ashr exact i64 %12350, 32
  %12352 = sext i32 %12349 to i64
  %12353 = mul i64 %12352, %12351
  %12354 = trunc i64 %12353 to i32
  %12355 = and i64 %12353, 4294967295
  store i64 %12355, i64* %RAX.i1717, align 8
  %12356 = shl i64 %12353, 32
  %12357 = ashr exact i64 %12356, 32
  %12358 = icmp ne i64 %12357, %12353
  %12359 = zext i1 %12358 to i8
  %12360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12359, i8* %12360, align 1
  %12361 = and i32 %12354, 255
  %12362 = call i32 @llvm.ctpop.i32(i32 %12361)
  %12363 = trunc i32 %12362 to i8
  %12364 = and i8 %12363, 1
  %12365 = xor i8 %12364, 1
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12365, i8* %12366, align 1
  %12367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12367, align 1
  %12368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12368, align 1
  %12369 = lshr i32 %12354, 31
  %12370 = trunc i32 %12369 to i8
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12370, i8* %12371, align 1
  %12372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12359, i8* %12372, align 1
  store %struct.Memory* %loadMem_40c6c3, %struct.Memory** %MEMORY
  %loadMem_40c6c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12374 = getelementptr inbounds %struct.GPR, %struct.GPR* %12373, i32 0, i32 33
  %12375 = getelementptr inbounds %struct.Reg, %struct.Reg* %12374, i32 0, i32 0
  %PC.i1713 = bitcast %union.anon* %12375 to i64*
  %12376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12377 = getelementptr inbounds %struct.GPR, %struct.GPR* %12376, i32 0, i32 1
  %12378 = getelementptr inbounds %struct.Reg, %struct.Reg* %12377, i32 0, i32 0
  %RAX.i1714 = bitcast %union.anon* %12378 to i64*
  %12379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12380 = getelementptr inbounds %struct.GPR, %struct.GPR* %12379, i32 0, i32 15
  %12381 = getelementptr inbounds %struct.Reg, %struct.Reg* %12380, i32 0, i32 0
  %RBP.i1715 = bitcast %union.anon* %12381 to i64*
  %12382 = load i64, i64* %RAX.i1714
  %12383 = load i64, i64* %RBP.i1715
  %12384 = sub i64 %12383, 184
  %12385 = load i64, i64* %PC.i1713
  %12386 = add i64 %12385, 6
  store i64 %12386, i64* %PC.i1713
  %12387 = trunc i64 %12382 to i32
  %12388 = inttoptr i64 %12384 to i32*
  %12389 = load i32, i32* %12388
  %12390 = add i32 %12389, %12387
  %12391 = zext i32 %12390 to i64
  store i64 %12391, i64* %RAX.i1714, align 8
  %12392 = icmp ult i32 %12390, %12387
  %12393 = icmp ult i32 %12390, %12389
  %12394 = or i1 %12392, %12393
  %12395 = zext i1 %12394 to i8
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12395, i8* %12396, align 1
  %12397 = and i32 %12390, 255
  %12398 = call i32 @llvm.ctpop.i32(i32 %12397)
  %12399 = trunc i32 %12398 to i8
  %12400 = and i8 %12399, 1
  %12401 = xor i8 %12400, 1
  %12402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12401, i8* %12402, align 1
  %12403 = xor i32 %12389, %12387
  %12404 = xor i32 %12403, %12390
  %12405 = lshr i32 %12404, 4
  %12406 = trunc i32 %12405 to i8
  %12407 = and i8 %12406, 1
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12407, i8* %12408, align 1
  %12409 = icmp eq i32 %12390, 0
  %12410 = zext i1 %12409 to i8
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12410, i8* %12411, align 1
  %12412 = lshr i32 %12390, 31
  %12413 = trunc i32 %12412 to i8
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12413, i8* %12414, align 1
  %12415 = lshr i32 %12387, 31
  %12416 = lshr i32 %12389, 31
  %12417 = xor i32 %12412, %12415
  %12418 = xor i32 %12412, %12416
  %12419 = add i32 %12417, %12418
  %12420 = icmp eq i32 %12419, 2
  %12421 = zext i1 %12420 to i8
  %12422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12421, i8* %12422, align 1
  store %struct.Memory* %loadMem_40c6c8, %struct.Memory** %MEMORY
  %loadMem_40c6ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 33
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %PC.i1710 = bitcast %union.anon* %12425 to i64*
  %12426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12427 = getelementptr inbounds %struct.GPR, %struct.GPR* %12426, i32 0, i32 5
  %12428 = getelementptr inbounds %struct.Reg, %struct.Reg* %12427, i32 0, i32 0
  %RCX.i1711 = bitcast %union.anon* %12428 to i64*
  %12429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12430 = getelementptr inbounds %struct.GPR, %struct.GPR* %12429, i32 0, i32 15
  %12431 = getelementptr inbounds %struct.Reg, %struct.Reg* %12430, i32 0, i32 0
  %RBP.i1712 = bitcast %union.anon* %12431 to i64*
  %12432 = load i64, i64* %RBP.i1712
  %12433 = sub i64 %12432, 208
  %12434 = load i64, i64* %PC.i1710
  %12435 = add i64 %12434, 6
  store i64 %12435, i64* %PC.i1710
  %12436 = inttoptr i64 %12433 to i32*
  %12437 = load i32, i32* %12436
  %12438 = zext i32 %12437 to i64
  store i64 %12438, i64* %RCX.i1711, align 8
  store %struct.Memory* %loadMem_40c6ce, %struct.Memory** %MEMORY
  %loadMem_40c6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12440 = getelementptr inbounds %struct.GPR, %struct.GPR* %12439, i32 0, i32 33
  %12441 = getelementptr inbounds %struct.Reg, %struct.Reg* %12440, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %12441 to i64*
  %12442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12443 = getelementptr inbounds %struct.GPR, %struct.GPR* %12442, i32 0, i32 5
  %12444 = getelementptr inbounds %struct.Reg, %struct.Reg* %12443, i32 0, i32 0
  %12445 = bitcast %union.anon* %12444 to %struct.anon.2*
  %CL.i1707 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12445, i32 0, i32 0
  %12446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12447 = getelementptr inbounds %struct.GPR, %struct.GPR* %12446, i32 0, i32 1
  %12448 = getelementptr inbounds %struct.Reg, %struct.Reg* %12447, i32 0, i32 0
  %RAX.i1708 = bitcast %union.anon* %12448 to i64*
  %12449 = load i64, i64* %RAX.i1708
  %12450 = load i8, i8* %CL.i1707
  %12451 = zext i8 %12450 to i64
  %12452 = load i64, i64* %PC.i1706
  %12453 = add i64 %12452, 2
  store i64 %12453, i64* %PC.i1706
  %12454 = trunc i64 %12451 to i5
  switch i5 %12454, label %12458 [
    i5 0, label %routine_sarl__cl___eax.exit1709
    i5 1, label %12455
  ]

; <label>:12455:                                  ; preds = %block_.L_40c664
  %12456 = shl i64 %12449, 32
  %12457 = ashr i64 %12456, 33
  br label %12465

; <label>:12458:                                  ; preds = %block_.L_40c664
  %12459 = and i64 %12451, 31
  %12460 = add i64 %12459, -1
  %12461 = shl i64 %12449, 32
  %12462 = ashr exact i64 %12461, 32
  %12463 = ashr i64 %12462, %12460
  %12464 = lshr i64 %12463, 1
  br label %12465

; <label>:12465:                                  ; preds = %12458, %12455
  %12466 = phi i64 [ %12464, %12458 ], [ %12457, %12455 ]
  %12467 = phi i64 [ %12463, %12458 ], [ %12449, %12455 ]
  %12468 = trunc i64 %12467 to i8
  %12469 = and i8 %12468, 1
  %12470 = trunc i64 %12466 to i32
  %12471 = and i64 %12466, 4294967295
  store i64 %12471, i64* %RAX.i1708, align 8
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12469, i8* %12472, align 1
  %12473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12474 = and i32 %12470, 255
  %12475 = call i32 @llvm.ctpop.i32(i32 %12474)
  %12476 = trunc i32 %12475 to i8
  %12477 = and i8 %12476, 1
  %12478 = xor i8 %12477, 1
  store i8 %12478, i8* %12473, align 1
  %12479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12479, align 1
  %12480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12481 = icmp eq i32 %12470, 0
  %12482 = zext i1 %12481 to i8
  store i8 %12482, i8* %12480, align 1
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12484 = lshr i32 %12470, 31
  %12485 = trunc i32 %12484 to i8
  store i8 %12485, i8* %12483, align 1
  %12486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12486, align 1
  br label %routine_sarl__cl___eax.exit1709

routine_sarl__cl___eax.exit1709:                  ; preds = %block_.L_40c664, %12465
  store %struct.Memory* %loadMem_40c6d4, %struct.Memory** %MEMORY
  %loadMem_40c6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12488 = getelementptr inbounds %struct.GPR, %struct.GPR* %12487, i32 0, i32 33
  %12489 = getelementptr inbounds %struct.Reg, %struct.Reg* %12488, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %12489 to i64*
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12491 = getelementptr inbounds %struct.GPR, %struct.GPR* %12490, i32 0, i32 1
  %12492 = getelementptr inbounds %struct.Reg, %struct.Reg* %12491, i32 0, i32 0
  %EAX.i1704 = bitcast %union.anon* %12492 to i32*
  %12493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12494 = getelementptr inbounds %struct.GPR, %struct.GPR* %12493, i32 0, i32 15
  %12495 = getelementptr inbounds %struct.Reg, %struct.Reg* %12494, i32 0, i32 0
  %RBP.i1705 = bitcast %union.anon* %12495 to i64*
  %12496 = load i64, i64* %RBP.i1705
  %12497 = sub i64 %12496, 260
  %12498 = load i32, i32* %EAX.i1704
  %12499 = zext i32 %12498 to i64
  %12500 = load i64, i64* %PC.i1703
  %12501 = add i64 %12500, 6
  store i64 %12501, i64* %PC.i1703
  %12502 = inttoptr i64 %12497 to i32*
  store i32 %12498, i32* %12502
  store %struct.Memory* %loadMem_40c6d6, %struct.Memory** %MEMORY
  %loadMem_40c6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12504 = getelementptr inbounds %struct.GPR, %struct.GPR* %12503, i32 0, i32 33
  %12505 = getelementptr inbounds %struct.Reg, %struct.Reg* %12504, i32 0, i32 0
  %PC.i1700 = bitcast %union.anon* %12505 to i64*
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12507 = getelementptr inbounds %struct.GPR, %struct.GPR* %12506, i32 0, i32 1
  %12508 = getelementptr inbounds %struct.Reg, %struct.Reg* %12507, i32 0, i32 0
  %RAX.i1701 = bitcast %union.anon* %12508 to i64*
  %12509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12510 = getelementptr inbounds %struct.GPR, %struct.GPR* %12509, i32 0, i32 15
  %12511 = getelementptr inbounds %struct.Reg, %struct.Reg* %12510, i32 0, i32 0
  %RBP.i1702 = bitcast %union.anon* %12511 to i64*
  %12512 = load i64, i64* %RBP.i1702
  %12513 = sub i64 %12512, 260
  %12514 = load i64, i64* %PC.i1700
  %12515 = add i64 %12514, 6
  store i64 %12515, i64* %PC.i1700
  %12516 = inttoptr i64 %12513 to i32*
  %12517 = load i32, i32* %12516
  %12518 = zext i32 %12517 to i64
  store i64 %12518, i64* %RAX.i1701, align 8
  store %struct.Memory* %loadMem_40c6dc, %struct.Memory** %MEMORY
  %loadMem_40c6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12520 = getelementptr inbounds %struct.GPR, %struct.GPR* %12519, i32 0, i32 33
  %12521 = getelementptr inbounds %struct.Reg, %struct.Reg* %12520, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %12521 to i64*
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12523 = getelementptr inbounds %struct.GPR, %struct.GPR* %12522, i32 0, i32 5
  %12524 = getelementptr inbounds %struct.Reg, %struct.Reg* %12523, i32 0, i32 0
  %RCX.i1698 = bitcast %union.anon* %12524 to i64*
  %12525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12526 = getelementptr inbounds %struct.GPR, %struct.GPR* %12525, i32 0, i32 15
  %12527 = getelementptr inbounds %struct.Reg, %struct.Reg* %12526, i32 0, i32 0
  %RBP.i1699 = bitcast %union.anon* %12527 to i64*
  %12528 = load i64, i64* %RBP.i1699
  %12529 = sub i64 %12528, 208
  %12530 = load i64, i64* %PC.i1697
  %12531 = add i64 %12530, 6
  store i64 %12531, i64* %PC.i1697
  %12532 = inttoptr i64 %12529 to i32*
  %12533 = load i32, i32* %12532
  %12534 = zext i32 %12533 to i64
  store i64 %12534, i64* %RCX.i1698, align 8
  store %struct.Memory* %loadMem_40c6e2, %struct.Memory** %MEMORY
  %loadMem_40c6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12536 = getelementptr inbounds %struct.GPR, %struct.GPR* %12535, i32 0, i32 33
  %12537 = getelementptr inbounds %struct.Reg, %struct.Reg* %12536, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %12537 to i64*
  %12538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12539 = getelementptr inbounds %struct.GPR, %struct.GPR* %12538, i32 0, i32 5
  %12540 = getelementptr inbounds %struct.Reg, %struct.Reg* %12539, i32 0, i32 0
  %12541 = bitcast %union.anon* %12540 to %struct.anon.2*
  %CL.i1694 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12541, i32 0, i32 0
  %12542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12543 = getelementptr inbounds %struct.GPR, %struct.GPR* %12542, i32 0, i32 1
  %12544 = getelementptr inbounds %struct.Reg, %struct.Reg* %12543, i32 0, i32 0
  %RAX.i1695 = bitcast %union.anon* %12544 to i64*
  %12545 = load i64, i64* %RAX.i1695
  %12546 = load i8, i8* %CL.i1694
  %12547 = zext i8 %12546 to i64
  %12548 = load i64, i64* %PC.i1693
  %12549 = add i64 %12548, 2
  store i64 %12549, i64* %PC.i1693
  %12550 = trunc i64 %12547 to i5
  switch i5 %12550, label %12557 [
    i5 0, label %routine_shll__cl___eax.exit1696
    i5 1, label %12551
  ]

; <label>:12551:                                  ; preds = %routine_sarl__cl___eax.exit1709
  %12552 = trunc i64 %12545 to i32
  %12553 = shl i32 %12552, 1
  %12554 = icmp slt i32 %12552, 0
  %12555 = icmp slt i32 %12553, 0
  %12556 = xor i1 %12554, %12555
  br label %12566

; <label>:12557:                                  ; preds = %routine_sarl__cl___eax.exit1709
  %12558 = and i64 %12547, 31
  %12559 = add i64 %12558, 4294967295
  %12560 = and i64 %12545, 4294967295
  %12561 = and i64 %12559, 4294967295
  %12562 = shl i64 %12560, %12561
  %12563 = trunc i64 %12562 to i32
  %12564 = icmp slt i32 %12563, 0
  %12565 = shl i32 %12563, 1
  br label %12566

; <label>:12566:                                  ; preds = %12557, %12551
  %12567 = phi i1 [ %12554, %12551 ], [ %12564, %12557 ]
  %12568 = phi i1 [ %12556, %12551 ], [ false, %12557 ]
  %12569 = phi i32 [ %12553, %12551 ], [ %12565, %12557 ]
  %12570 = zext i32 %12569 to i64
  store i64 %12570, i64* %RAX.i1695, align 8
  %12571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12572 = zext i1 %12567 to i8
  store i8 %12572, i8* %12571, align 1
  %12573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12574 = and i32 %12569, 254
  %12575 = call i32 @llvm.ctpop.i32(i32 %12574)
  %12576 = trunc i32 %12575 to i8
  %12577 = and i8 %12576, 1
  %12578 = xor i8 %12577, 1
  store i8 %12578, i8* %12573, align 1
  %12579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12579, align 1
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12581 = icmp eq i32 %12569, 0
  %12582 = zext i1 %12581 to i8
  store i8 %12582, i8* %12580, align 1
  %12583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12584 = lshr i32 %12569, 31
  %12585 = trunc i32 %12584 to i8
  store i8 %12585, i8* %12583, align 1
  %12586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12587 = zext i1 %12568 to i8
  store i8 %12587, i8* %12586, align 1
  br label %routine_shll__cl___eax.exit1696

routine_shll__cl___eax.exit1696:                  ; preds = %routine_sarl__cl___eax.exit1709, %12566
  store %struct.Memory* %loadMem_40c6e8, %struct.Memory** %MEMORY
  %loadMem_40c6ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %12588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12589 = getelementptr inbounds %struct.GPR, %struct.GPR* %12588, i32 0, i32 33
  %12590 = getelementptr inbounds %struct.Reg, %struct.Reg* %12589, i32 0, i32 0
  %PC.i1690 = bitcast %union.anon* %12590 to i64*
  %12591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12592 = getelementptr inbounds %struct.GPR, %struct.GPR* %12591, i32 0, i32 15
  %12593 = getelementptr inbounds %struct.Reg, %struct.Reg* %12592, i32 0, i32 0
  %RBP.i1691 = bitcast %union.anon* %12593 to i64*
  %12594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12595 = getelementptr inbounds %struct.GPR, %struct.GPR* %12594, i32 0, i32 17
  %12596 = getelementptr inbounds %struct.Reg, %struct.Reg* %12595, i32 0, i32 0
  %R8.i1692 = bitcast %union.anon* %12596 to i64*
  %12597 = load i64, i64* %RBP.i1691
  %12598 = sub i64 %12597, 204
  %12599 = load i64, i64* %PC.i1690
  %12600 = add i64 %12599, 7
  store i64 %12600, i64* %PC.i1690
  %12601 = inttoptr i64 %12598 to i32*
  %12602 = load i32, i32* %12601
  %12603 = sext i32 %12602 to i64
  store i64 %12603, i64* %R8.i1692, align 8
  store %struct.Memory* %loadMem_40c6ea, %struct.Memory** %MEMORY
  %loadMem_40c6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12605 = getelementptr inbounds %struct.GPR, %struct.GPR* %12604, i32 0, i32 33
  %12606 = getelementptr inbounds %struct.Reg, %struct.Reg* %12605, i32 0, i32 0
  %PC.i1688 = bitcast %union.anon* %12606 to i64*
  %12607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12608 = getelementptr inbounds %struct.GPR, %struct.GPR* %12607, i32 0, i32 17
  %12609 = getelementptr inbounds %struct.Reg, %struct.Reg* %12608, i32 0, i32 0
  %R8.i1689 = bitcast %union.anon* %12609 to i64*
  %12610 = load i64, i64* %R8.i1689
  %12611 = load i64, i64* %PC.i1688
  %12612 = add i64 %12611, 4
  store i64 %12612, i64* %PC.i1688
  %12613 = shl i64 %12610, 5
  %12614 = icmp slt i64 %12613, 0
  %12615 = shl i64 %12613, 1
  store i64 %12615, i64* %R8.i1689, align 8
  %12616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12617 = zext i1 %12614 to i8
  store i8 %12617, i8* %12616, align 1
  %12618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12619 = trunc i64 %12615 to i32
  %12620 = and i32 %12619, 254
  %12621 = call i32 @llvm.ctpop.i32(i32 %12620)
  %12622 = trunc i32 %12621 to i8
  %12623 = and i8 %12622, 1
  %12624 = xor i8 %12623, 1
  store i8 %12624, i8* %12618, align 1
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12625, align 1
  %12626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12627 = icmp eq i64 %12615, 0
  %12628 = zext i1 %12627 to i8
  store i8 %12628, i8* %12626, align 1
  %12629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12630 = lshr i64 %12615, 63
  %12631 = trunc i64 %12630 to i8
  store i8 %12631, i8* %12629, align 1
  %12632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12632, align 1
  store %struct.Memory* %loadMem_40c6f1, %struct.Memory** %MEMORY
  %loadMem_40c6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12634 = getelementptr inbounds %struct.GPR, %struct.GPR* %12633, i32 0, i32 33
  %12635 = getelementptr inbounds %struct.Reg, %struct.Reg* %12634, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %12635 to i64*
  %12636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12637 = getelementptr inbounds %struct.GPR, %struct.GPR* %12636, i32 0, i32 9
  %12638 = getelementptr inbounds %struct.Reg, %struct.Reg* %12637, i32 0, i32 0
  %RSI.i1686 = bitcast %union.anon* %12638 to i64*
  %12639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12640 = getelementptr inbounds %struct.GPR, %struct.GPR* %12639, i32 0, i32 17
  %12641 = getelementptr inbounds %struct.Reg, %struct.Reg* %12640, i32 0, i32 0
  %R8.i1687 = bitcast %union.anon* %12641 to i64*
  %12642 = load i64, i64* %RSI.i1686
  %12643 = load i64, i64* %R8.i1687
  %12644 = load i64, i64* %PC.i1685
  %12645 = add i64 %12644, 3
  store i64 %12645, i64* %PC.i1685
  %12646 = add i64 %12643, %12642
  store i64 %12646, i64* %RSI.i1686, align 8
  %12647 = icmp ult i64 %12646, %12642
  %12648 = icmp ult i64 %12646, %12643
  %12649 = or i1 %12647, %12648
  %12650 = zext i1 %12649 to i8
  %12651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12650, i8* %12651, align 1
  %12652 = trunc i64 %12646 to i32
  %12653 = and i32 %12652, 255
  %12654 = call i32 @llvm.ctpop.i32(i32 %12653)
  %12655 = trunc i32 %12654 to i8
  %12656 = and i8 %12655, 1
  %12657 = xor i8 %12656, 1
  %12658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12657, i8* %12658, align 1
  %12659 = xor i64 %12643, %12642
  %12660 = xor i64 %12659, %12646
  %12661 = lshr i64 %12660, 4
  %12662 = trunc i64 %12661 to i8
  %12663 = and i8 %12662, 1
  %12664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12663, i8* %12664, align 1
  %12665 = icmp eq i64 %12646, 0
  %12666 = zext i1 %12665 to i8
  %12667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12666, i8* %12667, align 1
  %12668 = lshr i64 %12646, 63
  %12669 = trunc i64 %12668 to i8
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12669, i8* %12670, align 1
  %12671 = lshr i64 %12642, 63
  %12672 = lshr i64 %12643, 63
  %12673 = xor i64 %12668, %12671
  %12674 = xor i64 %12668, %12672
  %12675 = add i64 %12673, %12674
  %12676 = icmp eq i64 %12675, 2
  %12677 = zext i1 %12676 to i8
  %12678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12677, i8* %12678, align 1
  store %struct.Memory* %loadMem_40c6f5, %struct.Memory** %MEMORY
  %loadMem_40c6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12680 = getelementptr inbounds %struct.GPR, %struct.GPR* %12679, i32 0, i32 33
  %12681 = getelementptr inbounds %struct.Reg, %struct.Reg* %12680, i32 0, i32 0
  %PC.i1682 = bitcast %union.anon* %12681 to i64*
  %12682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12683 = getelementptr inbounds %struct.GPR, %struct.GPR* %12682, i32 0, i32 15
  %12684 = getelementptr inbounds %struct.Reg, %struct.Reg* %12683, i32 0, i32 0
  %RBP.i1683 = bitcast %union.anon* %12684 to i64*
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12686 = getelementptr inbounds %struct.GPR, %struct.GPR* %12685, i32 0, i32 17
  %12687 = getelementptr inbounds %struct.Reg, %struct.Reg* %12686, i32 0, i32 0
  %R8.i1684 = bitcast %union.anon* %12687 to i64*
  %12688 = load i64, i64* %RBP.i1683
  %12689 = sub i64 %12688, 20
  %12690 = load i64, i64* %PC.i1682
  %12691 = add i64 %12690, 4
  store i64 %12691, i64* %PC.i1682
  %12692 = inttoptr i64 %12689 to i32*
  %12693 = load i32, i32* %12692
  %12694 = sext i32 %12693 to i64
  store i64 %12694, i64* %R8.i1684, align 8
  store %struct.Memory* %loadMem_40c6f8, %struct.Memory** %MEMORY
  %loadMem_40c6fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12696 = getelementptr inbounds %struct.GPR, %struct.GPR* %12695, i32 0, i32 33
  %12697 = getelementptr inbounds %struct.Reg, %struct.Reg* %12696, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %12697 to i64*
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 17
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %R8.i1681 = bitcast %union.anon* %12700 to i64*
  %12701 = load i64, i64* %R8.i1681
  %12702 = load i64, i64* %PC.i1680
  %12703 = add i64 %12702, 4
  store i64 %12703, i64* %PC.i1680
  %12704 = shl i64 %12701, 3
  %12705 = icmp slt i64 %12704, 0
  %12706 = shl i64 %12704, 1
  store i64 %12706, i64* %R8.i1681, align 8
  %12707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12708 = zext i1 %12705 to i8
  store i8 %12708, i8* %12707, align 1
  %12709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12710 = trunc i64 %12706 to i32
  %12711 = and i32 %12710, 254
  %12712 = call i32 @llvm.ctpop.i32(i32 %12711)
  %12713 = trunc i32 %12712 to i8
  %12714 = and i8 %12713, 1
  %12715 = xor i8 %12714, 1
  store i8 %12715, i8* %12709, align 1
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12716, align 1
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12718 = icmp eq i64 %12706, 0
  %12719 = zext i1 %12718 to i8
  store i8 %12719, i8* %12717, align 1
  %12720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12721 = lshr i64 %12706, 63
  %12722 = trunc i64 %12721 to i8
  store i8 %12722, i8* %12720, align 1
  %12723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12723, align 1
  store %struct.Memory* %loadMem_40c6fc, %struct.Memory** %MEMORY
  %loadMem_40c700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12725 = getelementptr inbounds %struct.GPR, %struct.GPR* %12724, i32 0, i32 33
  %12726 = getelementptr inbounds %struct.Reg, %struct.Reg* %12725, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %12726 to i64*
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12728 = getelementptr inbounds %struct.GPR, %struct.GPR* %12727, i32 0, i32 9
  %12729 = getelementptr inbounds %struct.Reg, %struct.Reg* %12728, i32 0, i32 0
  %RSI.i1678 = bitcast %union.anon* %12729 to i64*
  %12730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12731 = getelementptr inbounds %struct.GPR, %struct.GPR* %12730, i32 0, i32 17
  %12732 = getelementptr inbounds %struct.Reg, %struct.Reg* %12731, i32 0, i32 0
  %R8.i1679 = bitcast %union.anon* %12732 to i64*
  %12733 = load i64, i64* %RSI.i1678
  %12734 = load i64, i64* %R8.i1679
  %12735 = load i64, i64* %PC.i1677
  %12736 = add i64 %12735, 3
  store i64 %12736, i64* %PC.i1677
  %12737 = add i64 %12734, %12733
  store i64 %12737, i64* %RSI.i1678, align 8
  %12738 = icmp ult i64 %12737, %12733
  %12739 = icmp ult i64 %12737, %12734
  %12740 = or i1 %12738, %12739
  %12741 = zext i1 %12740 to i8
  %12742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12741, i8* %12742, align 1
  %12743 = trunc i64 %12737 to i32
  %12744 = and i32 %12743, 255
  %12745 = call i32 @llvm.ctpop.i32(i32 %12744)
  %12746 = trunc i32 %12745 to i8
  %12747 = and i8 %12746, 1
  %12748 = xor i8 %12747, 1
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12748, i8* %12749, align 1
  %12750 = xor i64 %12734, %12733
  %12751 = xor i64 %12750, %12737
  %12752 = lshr i64 %12751, 4
  %12753 = trunc i64 %12752 to i8
  %12754 = and i8 %12753, 1
  %12755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12754, i8* %12755, align 1
  %12756 = icmp eq i64 %12737, 0
  %12757 = zext i1 %12756 to i8
  %12758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12757, i8* %12758, align 1
  %12759 = lshr i64 %12737, 63
  %12760 = trunc i64 %12759 to i8
  %12761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12760, i8* %12761, align 1
  %12762 = lshr i64 %12733, 63
  %12763 = lshr i64 %12734, 63
  %12764 = xor i64 %12759, %12762
  %12765 = xor i64 %12759, %12763
  %12766 = add i64 %12764, %12765
  %12767 = icmp eq i64 %12766, 2
  %12768 = zext i1 %12767 to i8
  %12769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12768, i8* %12769, align 1
  store %struct.Memory* %loadMem_40c700, %struct.Memory** %MEMORY
  %loadMem_40c703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12771 = getelementptr inbounds %struct.GPR, %struct.GPR* %12770, i32 0, i32 33
  %12772 = getelementptr inbounds %struct.Reg, %struct.Reg* %12771, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %12772 to i64*
  %12773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12774 = getelementptr inbounds %struct.GPR, %struct.GPR* %12773, i32 0, i32 15
  %12775 = getelementptr inbounds %struct.Reg, %struct.Reg* %12774, i32 0, i32 0
  %RBP.i1675 = bitcast %union.anon* %12775 to i64*
  %12776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12777 = getelementptr inbounds %struct.GPR, %struct.GPR* %12776, i32 0, i32 17
  %12778 = getelementptr inbounds %struct.Reg, %struct.Reg* %12777, i32 0, i32 0
  %R8.i1676 = bitcast %union.anon* %12778 to i64*
  %12779 = load i64, i64* %RBP.i1675
  %12780 = sub i64 %12779, 24
  %12781 = load i64, i64* %PC.i1674
  %12782 = add i64 %12781, 4
  store i64 %12782, i64* %PC.i1674
  %12783 = inttoptr i64 %12780 to i32*
  %12784 = load i32, i32* %12783
  %12785 = sext i32 %12784 to i64
  store i64 %12785, i64* %R8.i1676, align 8
  store %struct.Memory* %loadMem_40c703, %struct.Memory** %MEMORY
  %loadMem_40c707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12787 = getelementptr inbounds %struct.GPR, %struct.GPR* %12786, i32 0, i32 33
  %12788 = getelementptr inbounds %struct.Reg, %struct.Reg* %12787, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %12788 to i64*
  %12789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12790 = getelementptr inbounds %struct.GPR, %struct.GPR* %12789, i32 0, i32 7
  %12791 = getelementptr inbounds %struct.Reg, %struct.Reg* %12790, i32 0, i32 0
  %RDX.i1672 = bitcast %union.anon* %12791 to i64*
  %12792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12793 = getelementptr inbounds %struct.GPR, %struct.GPR* %12792, i32 0, i32 15
  %12794 = getelementptr inbounds %struct.Reg, %struct.Reg* %12793, i32 0, i32 0
  %RBP.i1673 = bitcast %union.anon* %12794 to i64*
  %12795 = load i64, i64* %RBP.i1673
  %12796 = sub i64 %12795, 328
  %12797 = load i64, i64* %RDX.i1672
  %12798 = load i64, i64* %PC.i1671
  %12799 = add i64 %12798, 7
  store i64 %12799, i64* %PC.i1671
  %12800 = inttoptr i64 %12796 to i64*
  store i64 %12797, i64* %12800
  store %struct.Memory* %loadMem_40c707, %struct.Memory** %MEMORY
  %loadMem_40c70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12802 = getelementptr inbounds %struct.GPR, %struct.GPR* %12801, i32 0, i32 33
  %12803 = getelementptr inbounds %struct.Reg, %struct.Reg* %12802, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %12803 to i64*
  %12804 = load i64, i64* %PC.i1670
  %12805 = add i64 %12804, 1
  store i64 %12805, i64* %PC.i1670
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %12807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12808 = bitcast %union.anon* %12807 to i32*
  %12809 = load i32, i32* %12808, align 8
  %12810 = sext i32 %12809 to i64
  %12811 = lshr i64 %12810, 32
  store i64 %12811, i64* %12806, align 8
  store %struct.Memory* %loadMem_40c70e, %struct.Memory** %MEMORY
  %loadMem_40c70f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 33
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %12814 to i64*
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12816 = getelementptr inbounds %struct.GPR, %struct.GPR* %12815, i32 0, i32 9
  %12817 = getelementptr inbounds %struct.Reg, %struct.Reg* %12816, i32 0, i32 0
  %RSI.i1665 = bitcast %union.anon* %12817 to i64*
  %12818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12819 = getelementptr inbounds %struct.GPR, %struct.GPR* %12818, i32 0, i32 17
  %12820 = getelementptr inbounds %struct.Reg, %struct.Reg* %12819, i32 0, i32 0
  %R8.i1666 = bitcast %union.anon* %12820 to i64*
  %12821 = load i64, i64* %RSI.i1665
  %12822 = load i64, i64* %R8.i1666
  %12823 = mul i64 %12822, 4
  %12824 = add i64 %12823, %12821
  %12825 = load i64, i64* %PC.i1664
  %12826 = add i64 %12825, 4
  store i64 %12826, i64* %PC.i1664
  %12827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %12828 = bitcast %union.anon* %12827 to i32*
  %12829 = load i32, i32* %12828, align 8
  %12830 = zext i32 %12829 to i64
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12832 = bitcast %union.anon* %12831 to i32*
  %12833 = load i32, i32* %12832, align 8
  %12834 = zext i32 %12833 to i64
  %12835 = inttoptr i64 %12824 to i32*
  %12836 = load i32, i32* %12835
  %12837 = sext i32 %12836 to i64
  %12838 = shl i64 %12834, 32
  %12839 = or i64 %12838, %12830
  %12840 = sdiv i64 %12839, %12837
  %12841 = shl i64 %12840, 32
  %12842 = ashr exact i64 %12841, 32
  %12843 = icmp eq i64 %12840, %12842
  br i1 %12843, label %12848, label %12844

; <label>:12844:                                  ; preds = %routine_shll__cl___eax.exit1696
  %12845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12846 = load i64, i64* %12845, align 8
  %12847 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %12846, %struct.Memory* %loadMem_40c70f)
  br label %routine_idivl___rsi__r8_4_.exit

; <label>:12848:                                  ; preds = %routine_shll__cl___eax.exit1696
  %12849 = srem i64 %12839, %12837
  %12850 = getelementptr inbounds %union.anon, %union.anon* %12827, i64 0, i32 0
  %12851 = and i64 %12840, 4294967295
  store i64 %12851, i64* %12850, align 8
  %12852 = getelementptr inbounds %union.anon, %union.anon* %12831, i64 0, i32 0
  %12853 = and i64 %12849, 4294967295
  store i64 %12853, i64* %12852, align 8
  %12854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12854, align 1
  %12855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %12855, align 1
  %12856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12856, align 1
  %12857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12857, align 1
  %12858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12858, align 1
  %12859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12859, align 1
  br label %routine_idivl___rsi__r8_4_.exit

routine_idivl___rsi__r8_4_.exit:                  ; preds = %12844, %12848
  %12860 = phi %struct.Memory* [ %12847, %12844 ], [ %loadMem_40c70f, %12848 ]
  store %struct.Memory* %12860, %struct.Memory** %MEMORY
  %loadMem_40c713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12862 = getelementptr inbounds %struct.GPR, %struct.GPR* %12861, i32 0, i32 33
  %12863 = getelementptr inbounds %struct.Reg, %struct.Reg* %12862, i32 0, i32 0
  %PC.i1661 = bitcast %union.anon* %12863 to i64*
  %12864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12865 = getelementptr inbounds %struct.GPR, %struct.GPR* %12864, i32 0, i32 1
  %12866 = getelementptr inbounds %struct.Reg, %struct.Reg* %12865, i32 0, i32 0
  %EAX.i1662 = bitcast %union.anon* %12866 to i32*
  %12867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12868 = getelementptr inbounds %struct.GPR, %struct.GPR* %12867, i32 0, i32 15
  %12869 = getelementptr inbounds %struct.Reg, %struct.Reg* %12868, i32 0, i32 0
  %RBP.i1663 = bitcast %union.anon* %12869 to i64*
  %12870 = load i64, i64* %RBP.i1663
  %12871 = sub i64 %12870, 260
  %12872 = load i32, i32* %EAX.i1662
  %12873 = zext i32 %12872 to i64
  %12874 = load i64, i64* %PC.i1661
  %12875 = add i64 %12874, 6
  store i64 %12875, i64* %PC.i1661
  %12876 = inttoptr i64 %12871 to i32*
  store i32 %12872, i32* %12876
  store %struct.Memory* %loadMem_40c713, %struct.Memory** %MEMORY
  %loadMem_40c719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12878 = getelementptr inbounds %struct.GPR, %struct.GPR* %12877, i32 0, i32 33
  %12879 = getelementptr inbounds %struct.Reg, %struct.Reg* %12878, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %12879 to i64*
  %12880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12881 = getelementptr inbounds %struct.GPR, %struct.GPR* %12880, i32 0, i32 9
  %12882 = getelementptr inbounds %struct.Reg, %struct.Reg* %12881, i32 0, i32 0
  %RSI.i1660 = bitcast %union.anon* %12882 to i64*
  %12883 = load i64, i64* %PC.i1659
  %12884 = add i64 %12883, 8
  store i64 %12884, i64* %PC.i1659
  %12885 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12885, i64* %RSI.i1660, align 8
  store %struct.Memory* %loadMem_40c719, %struct.Memory** %MEMORY
  %loadMem_40c721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12887 = getelementptr inbounds %struct.GPR, %struct.GPR* %12886, i32 0, i32 33
  %12888 = getelementptr inbounds %struct.Reg, %struct.Reg* %12887, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %12888 to i64*
  %12889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12890 = getelementptr inbounds %struct.GPR, %struct.GPR* %12889, i32 0, i32 9
  %12891 = getelementptr inbounds %struct.Reg, %struct.Reg* %12890, i32 0, i32 0
  %RSI.i1658 = bitcast %union.anon* %12891 to i64*
  %12892 = load i64, i64* %RSI.i1658
  %12893 = load i64, i64* %PC.i1657
  %12894 = add i64 %12893, 7
  store i64 %12894, i64* %PC.i1657
  %12895 = add i64 13112, %12892
  store i64 %12895, i64* %RSI.i1658, align 8
  %12896 = icmp ult i64 %12895, %12892
  %12897 = icmp ult i64 %12895, 13112
  %12898 = or i1 %12896, %12897
  %12899 = zext i1 %12898 to i8
  %12900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12899, i8* %12900, align 1
  %12901 = trunc i64 %12895 to i32
  %12902 = and i32 %12901, 255
  %12903 = call i32 @llvm.ctpop.i32(i32 %12902)
  %12904 = trunc i32 %12903 to i8
  %12905 = and i8 %12904, 1
  %12906 = xor i8 %12905, 1
  %12907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12906, i8* %12907, align 1
  %12908 = xor i64 13112, %12892
  %12909 = xor i64 %12908, %12895
  %12910 = lshr i64 %12909, 4
  %12911 = trunc i64 %12910 to i8
  %12912 = and i8 %12911, 1
  %12913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12912, i8* %12913, align 1
  %12914 = icmp eq i64 %12895, 0
  %12915 = zext i1 %12914 to i8
  %12916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12915, i8* %12916, align 1
  %12917 = lshr i64 %12895, 63
  %12918 = trunc i64 %12917 to i8
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12918, i8* %12919, align 1
  %12920 = lshr i64 %12892, 63
  %12921 = xor i64 %12917, %12920
  %12922 = add i64 %12921, %12917
  %12923 = icmp eq i64 %12922, 2
  %12924 = zext i1 %12923 to i8
  %12925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12924, i8* %12925, align 1
  store %struct.Memory* %loadMem_40c721, %struct.Memory** %MEMORY
  %loadMem_40c728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12927 = getelementptr inbounds %struct.GPR, %struct.GPR* %12926, i32 0, i32 33
  %12928 = getelementptr inbounds %struct.Reg, %struct.Reg* %12927, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %12928 to i64*
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12930 = getelementptr inbounds %struct.GPR, %struct.GPR* %12929, i32 0, i32 15
  %12931 = getelementptr inbounds %struct.Reg, %struct.Reg* %12930, i32 0, i32 0
  %RBP.i1655 = bitcast %union.anon* %12931 to i64*
  %12932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12933 = getelementptr inbounds %struct.GPR, %struct.GPR* %12932, i32 0, i32 17
  %12934 = getelementptr inbounds %struct.Reg, %struct.Reg* %12933, i32 0, i32 0
  %R8.i1656 = bitcast %union.anon* %12934 to i64*
  %12935 = load i64, i64* %RBP.i1655
  %12936 = sub i64 %12935, 20
  %12937 = load i64, i64* %PC.i1654
  %12938 = add i64 %12937, 4
  store i64 %12938, i64* %PC.i1654
  %12939 = inttoptr i64 %12936 to i32*
  %12940 = load i32, i32* %12939
  %12941 = sext i32 %12940 to i64
  store i64 %12941, i64* %R8.i1656, align 8
  store %struct.Memory* %loadMem_40c728, %struct.Memory** %MEMORY
  %loadMem_40c72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 33
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %12944 to i64*
  %12945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12946 = getelementptr inbounds %struct.GPR, %struct.GPR* %12945, i32 0, i32 17
  %12947 = getelementptr inbounds %struct.Reg, %struct.Reg* %12946, i32 0, i32 0
  %R8.i1653 = bitcast %union.anon* %12947 to i64*
  %12948 = load i64, i64* %R8.i1653
  %12949 = load i64, i64* %PC.i1652
  %12950 = add i64 %12949, 4
  store i64 %12950, i64* %PC.i1652
  %12951 = shl i64 %12948, 5
  %12952 = icmp slt i64 %12951, 0
  %12953 = shl i64 %12951, 1
  store i64 %12953, i64* %R8.i1653, align 8
  %12954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12955 = zext i1 %12952 to i8
  store i8 %12955, i8* %12954, align 1
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12957 = trunc i64 %12953 to i32
  %12958 = and i32 %12957, 254
  %12959 = call i32 @llvm.ctpop.i32(i32 %12958)
  %12960 = trunc i32 %12959 to i8
  %12961 = and i8 %12960, 1
  %12962 = xor i8 %12961, 1
  store i8 %12962, i8* %12956, align 1
  %12963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12963, align 1
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12965 = icmp eq i64 %12953, 0
  %12966 = zext i1 %12965 to i8
  store i8 %12966, i8* %12964, align 1
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12968 = lshr i64 %12953, 63
  %12969 = trunc i64 %12968 to i8
  store i8 %12969, i8* %12967, align 1
  %12970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12970, align 1
  store %struct.Memory* %loadMem_40c72c, %struct.Memory** %MEMORY
  %loadMem_40c730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 33
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %12973 to i64*
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12975 = getelementptr inbounds %struct.GPR, %struct.GPR* %12974, i32 0, i32 9
  %12976 = getelementptr inbounds %struct.Reg, %struct.Reg* %12975, i32 0, i32 0
  %RSI.i1650 = bitcast %union.anon* %12976 to i64*
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12978 = getelementptr inbounds %struct.GPR, %struct.GPR* %12977, i32 0, i32 17
  %12979 = getelementptr inbounds %struct.Reg, %struct.Reg* %12978, i32 0, i32 0
  %R8.i1651 = bitcast %union.anon* %12979 to i64*
  %12980 = load i64, i64* %RSI.i1650
  %12981 = load i64, i64* %R8.i1651
  %12982 = load i64, i64* %PC.i1649
  %12983 = add i64 %12982, 3
  store i64 %12983, i64* %PC.i1649
  %12984 = add i64 %12981, %12980
  store i64 %12984, i64* %RSI.i1650, align 8
  %12985 = icmp ult i64 %12984, %12980
  %12986 = icmp ult i64 %12984, %12981
  %12987 = or i1 %12985, %12986
  %12988 = zext i1 %12987 to i8
  %12989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12988, i8* %12989, align 1
  %12990 = trunc i64 %12984 to i32
  %12991 = and i32 %12990, 255
  %12992 = call i32 @llvm.ctpop.i32(i32 %12991)
  %12993 = trunc i32 %12992 to i8
  %12994 = and i8 %12993, 1
  %12995 = xor i8 %12994, 1
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12995, i8* %12996, align 1
  %12997 = xor i64 %12981, %12980
  %12998 = xor i64 %12997, %12984
  %12999 = lshr i64 %12998, 4
  %13000 = trunc i64 %12999 to i8
  %13001 = and i8 %13000, 1
  %13002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13001, i8* %13002, align 1
  %13003 = icmp eq i64 %12984, 0
  %13004 = zext i1 %13003 to i8
  %13005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13004, i8* %13005, align 1
  %13006 = lshr i64 %12984, 63
  %13007 = trunc i64 %13006 to i8
  %13008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13007, i8* %13008, align 1
  %13009 = lshr i64 %12980, 63
  %13010 = lshr i64 %12981, 63
  %13011 = xor i64 %13006, %13009
  %13012 = xor i64 %13006, %13010
  %13013 = add i64 %13011, %13012
  %13014 = icmp eq i64 %13013, 2
  %13015 = zext i1 %13014 to i8
  %13016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13015, i8* %13016, align 1
  store %struct.Memory* %loadMem_40c730, %struct.Memory** %MEMORY
  %loadMem_40c733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13018 = getelementptr inbounds %struct.GPR, %struct.GPR* %13017, i32 0, i32 33
  %13019 = getelementptr inbounds %struct.Reg, %struct.Reg* %13018, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %13019 to i64*
  %13020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13021 = getelementptr inbounds %struct.GPR, %struct.GPR* %13020, i32 0, i32 15
  %13022 = getelementptr inbounds %struct.Reg, %struct.Reg* %13021, i32 0, i32 0
  %RBP.i1647 = bitcast %union.anon* %13022 to i64*
  %13023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13024 = getelementptr inbounds %struct.GPR, %struct.GPR* %13023, i32 0, i32 17
  %13025 = getelementptr inbounds %struct.Reg, %struct.Reg* %13024, i32 0, i32 0
  %R8.i1648 = bitcast %union.anon* %13025 to i64*
  %13026 = load i64, i64* %RBP.i1647
  %13027 = sub i64 %13026, 24
  %13028 = load i64, i64* %PC.i1646
  %13029 = add i64 %13028, 4
  store i64 %13029, i64* %PC.i1646
  %13030 = inttoptr i64 %13027 to i32*
  %13031 = load i32, i32* %13030
  %13032 = sext i32 %13031 to i64
  store i64 %13032, i64* %R8.i1648, align 8
  store %struct.Memory* %loadMem_40c733, %struct.Memory** %MEMORY
  %loadMem_40c737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13034 = getelementptr inbounds %struct.GPR, %struct.GPR* %13033, i32 0, i32 33
  %13035 = getelementptr inbounds %struct.Reg, %struct.Reg* %13034, i32 0, i32 0
  %PC.i1642 = bitcast %union.anon* %13035 to i64*
  %13036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13037 = getelementptr inbounds %struct.GPR, %struct.GPR* %13036, i32 0, i32 1
  %13038 = getelementptr inbounds %struct.Reg, %struct.Reg* %13037, i32 0, i32 0
  %RAX.i1643 = bitcast %union.anon* %13038 to i64*
  %13039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13040 = getelementptr inbounds %struct.GPR, %struct.GPR* %13039, i32 0, i32 9
  %13041 = getelementptr inbounds %struct.Reg, %struct.Reg* %13040, i32 0, i32 0
  %RSI.i1644 = bitcast %union.anon* %13041 to i64*
  %13042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13043 = getelementptr inbounds %struct.GPR, %struct.GPR* %13042, i32 0, i32 17
  %13044 = getelementptr inbounds %struct.Reg, %struct.Reg* %13043, i32 0, i32 0
  %R8.i1645 = bitcast %union.anon* %13044 to i64*
  %13045 = load i64, i64* %RSI.i1644
  %13046 = load i64, i64* %R8.i1645
  %13047 = mul i64 %13046, 4
  %13048 = add i64 %13047, %13045
  %13049 = load i64, i64* %PC.i1642
  %13050 = add i64 %13049, 4
  store i64 %13050, i64* %PC.i1642
  %13051 = inttoptr i64 %13048 to i32*
  %13052 = load i32, i32* %13051
  %13053 = zext i32 %13052 to i64
  store i64 %13053, i64* %RAX.i1643, align 8
  store %struct.Memory* %loadMem_40c737, %struct.Memory** %MEMORY
  %loadMem_40c73b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13055 = getelementptr inbounds %struct.GPR, %struct.GPR* %13054, i32 0, i32 33
  %13056 = getelementptr inbounds %struct.Reg, %struct.Reg* %13055, i32 0, i32 0
  %PC.i1639 = bitcast %union.anon* %13056 to i64*
  %13057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13058 = getelementptr inbounds %struct.GPR, %struct.GPR* %13057, i32 0, i32 11
  %13059 = getelementptr inbounds %struct.Reg, %struct.Reg* %13058, i32 0, i32 0
  %RDI.i1640 = bitcast %union.anon* %13059 to i64*
  %13060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13061 = getelementptr inbounds %struct.GPR, %struct.GPR* %13060, i32 0, i32 15
  %13062 = getelementptr inbounds %struct.Reg, %struct.Reg* %13061, i32 0, i32 0
  %RBP.i1641 = bitcast %union.anon* %13062 to i64*
  %13063 = load i64, i64* %RBP.i1641
  %13064 = sub i64 %13063, 260
  %13065 = load i64, i64* %PC.i1639
  %13066 = add i64 %13065, 6
  store i64 %13066, i64* %PC.i1639
  %13067 = inttoptr i64 %13064 to i32*
  %13068 = load i32, i32* %13067
  %13069 = zext i32 %13068 to i64
  store i64 %13069, i64* %RDI.i1640, align 8
  store %struct.Memory* %loadMem_40c73b, %struct.Memory** %MEMORY
  %loadMem_40c741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13071 = getelementptr inbounds %struct.GPR, %struct.GPR* %13070, i32 0, i32 33
  %13072 = getelementptr inbounds %struct.Reg, %struct.Reg* %13071, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %13072 to i64*
  %13073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13074 = getelementptr inbounds %struct.GPR, %struct.GPR* %13073, i32 0, i32 9
  %13075 = getelementptr inbounds %struct.Reg, %struct.Reg* %13074, i32 0, i32 0
  %RSI.i1637 = bitcast %union.anon* %13075 to i64*
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13077 = getelementptr inbounds %struct.GPR, %struct.GPR* %13076, i32 0, i32 15
  %13078 = getelementptr inbounds %struct.Reg, %struct.Reg* %13077, i32 0, i32 0
  %RBP.i1638 = bitcast %union.anon* %13078 to i64*
  %13079 = load i64, i64* %RBP.i1638
  %13080 = sub i64 %13079, 20
  %13081 = load i64, i64* %PC.i1636
  %13082 = add i64 %13081, 4
  store i64 %13082, i64* %PC.i1636
  %13083 = inttoptr i64 %13080 to i32*
  %13084 = load i32, i32* %13083
  %13085 = sext i32 %13084 to i64
  store i64 %13085, i64* %RSI.i1637, align 8
  store %struct.Memory* %loadMem_40c741, %struct.Memory** %MEMORY
  %loadMem_40c745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 33
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %13088 to i64*
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13090 = getelementptr inbounds %struct.GPR, %struct.GPR* %13089, i32 0, i32 9
  %13091 = getelementptr inbounds %struct.Reg, %struct.Reg* %13090, i32 0, i32 0
  %RSI.i1635 = bitcast %union.anon* %13091 to i64*
  %13092 = load i64, i64* %RSI.i1635
  %13093 = load i64, i64* %PC.i1634
  %13094 = add i64 %13093, 4
  store i64 %13094, i64* %PC.i1634
  %13095 = shl i64 %13092, 3
  %13096 = icmp slt i64 %13095, 0
  %13097 = shl i64 %13095, 1
  store i64 %13097, i64* %RSI.i1635, align 8
  %13098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13099 = zext i1 %13096 to i8
  store i8 %13099, i8* %13098, align 1
  %13100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13101 = trunc i64 %13097 to i32
  %13102 = and i32 %13101, 254
  %13103 = call i32 @llvm.ctpop.i32(i32 %13102)
  %13104 = trunc i32 %13103 to i8
  %13105 = and i8 %13104, 1
  %13106 = xor i8 %13105, 1
  store i8 %13106, i8* %13100, align 1
  %13107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13107, align 1
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13109 = icmp eq i64 %13097, 0
  %13110 = zext i1 %13109 to i8
  store i8 %13110, i8* %13108, align 1
  %13111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13112 = lshr i64 %13097, 63
  %13113 = trunc i64 %13112 to i8
  store i8 %13113, i8* %13111, align 1
  %13114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13114, align 1
  store %struct.Memory* %loadMem_40c745, %struct.Memory** %MEMORY
  %loadMem_40c749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13116 = getelementptr inbounds %struct.GPR, %struct.GPR* %13115, i32 0, i32 33
  %13117 = getelementptr inbounds %struct.Reg, %struct.Reg* %13116, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %13117 to i64*
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13119 = getelementptr inbounds %struct.GPR, %struct.GPR* %13118, i32 0, i32 15
  %13120 = getelementptr inbounds %struct.Reg, %struct.Reg* %13119, i32 0, i32 0
  %RBP.i1632 = bitcast %union.anon* %13120 to i64*
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 17
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %R8.i1633 = bitcast %union.anon* %13123 to i64*
  %13124 = load i64, i64* %RBP.i1632
  %13125 = sub i64 %13124, 328
  %13126 = load i64, i64* %PC.i1631
  %13127 = add i64 %13126, 7
  store i64 %13127, i64* %PC.i1631
  %13128 = inttoptr i64 %13125 to i64*
  %13129 = load i64, i64* %13128
  store i64 %13129, i64* %R8.i1633, align 8
  store %struct.Memory* %loadMem_40c749, %struct.Memory** %MEMORY
  %loadMem_40c750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13131 = getelementptr inbounds %struct.GPR, %struct.GPR* %13130, i32 0, i32 33
  %13132 = getelementptr inbounds %struct.Reg, %struct.Reg* %13131, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %13132 to i64*
  %13133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13134 = getelementptr inbounds %struct.GPR, %struct.GPR* %13133, i32 0, i32 9
  %13135 = getelementptr inbounds %struct.Reg, %struct.Reg* %13134, i32 0, i32 0
  %RSI.i1629 = bitcast %union.anon* %13135 to i64*
  %13136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13137 = getelementptr inbounds %struct.GPR, %struct.GPR* %13136, i32 0, i32 17
  %13138 = getelementptr inbounds %struct.Reg, %struct.Reg* %13137, i32 0, i32 0
  %R8.i1630 = bitcast %union.anon* %13138 to i64*
  %13139 = load i64, i64* %R8.i1630
  %13140 = load i64, i64* %RSI.i1629
  %13141 = load i64, i64* %PC.i1628
  %13142 = add i64 %13141, 3
  store i64 %13142, i64* %PC.i1628
  %13143 = add i64 %13140, %13139
  store i64 %13143, i64* %R8.i1630, align 8
  %13144 = icmp ult i64 %13143, %13139
  %13145 = icmp ult i64 %13143, %13140
  %13146 = or i1 %13144, %13145
  %13147 = zext i1 %13146 to i8
  %13148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13147, i8* %13148, align 1
  %13149 = trunc i64 %13143 to i32
  %13150 = and i32 %13149, 255
  %13151 = call i32 @llvm.ctpop.i32(i32 %13150)
  %13152 = trunc i32 %13151 to i8
  %13153 = and i8 %13152, 1
  %13154 = xor i8 %13153, 1
  %13155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13154, i8* %13155, align 1
  %13156 = xor i64 %13140, %13139
  %13157 = xor i64 %13156, %13143
  %13158 = lshr i64 %13157, 4
  %13159 = trunc i64 %13158 to i8
  %13160 = and i8 %13159, 1
  %13161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13160, i8* %13161, align 1
  %13162 = icmp eq i64 %13143, 0
  %13163 = zext i1 %13162 to i8
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13163, i8* %13164, align 1
  %13165 = lshr i64 %13143, 63
  %13166 = trunc i64 %13165 to i8
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13166, i8* %13167, align 1
  %13168 = lshr i64 %13139, 63
  %13169 = lshr i64 %13140, 63
  %13170 = xor i64 %13165, %13168
  %13171 = xor i64 %13165, %13169
  %13172 = add i64 %13170, %13171
  %13173 = icmp eq i64 %13172, 2
  %13174 = zext i1 %13173 to i8
  %13175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13174, i8* %13175, align 1
  store %struct.Memory* %loadMem_40c750, %struct.Memory** %MEMORY
  %loadMem_40c753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13177 = getelementptr inbounds %struct.GPR, %struct.GPR* %13176, i32 0, i32 33
  %13178 = getelementptr inbounds %struct.Reg, %struct.Reg* %13177, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %13178 to i64*
  %13179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13180 = getelementptr inbounds %struct.GPR, %struct.GPR* %13179, i32 0, i32 9
  %13181 = getelementptr inbounds %struct.Reg, %struct.Reg* %13180, i32 0, i32 0
  %RSI.i1626 = bitcast %union.anon* %13181 to i64*
  %13182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13183 = getelementptr inbounds %struct.GPR, %struct.GPR* %13182, i32 0, i32 15
  %13184 = getelementptr inbounds %struct.Reg, %struct.Reg* %13183, i32 0, i32 0
  %RBP.i1627 = bitcast %union.anon* %13184 to i64*
  %13185 = load i64, i64* %RBP.i1627
  %13186 = sub i64 %13185, 24
  %13187 = load i64, i64* %PC.i1625
  %13188 = add i64 %13187, 4
  store i64 %13188, i64* %PC.i1625
  %13189 = inttoptr i64 %13186 to i32*
  %13190 = load i32, i32* %13189
  %13191 = sext i32 %13190 to i64
  store i64 %13191, i64* %RSI.i1626, align 8
  store %struct.Memory* %loadMem_40c753, %struct.Memory** %MEMORY
  %loadMem_40c757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13193 = getelementptr inbounds %struct.GPR, %struct.GPR* %13192, i32 0, i32 33
  %13194 = getelementptr inbounds %struct.Reg, %struct.Reg* %13193, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %13194 to i64*
  %13195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13196 = getelementptr inbounds %struct.GPR, %struct.GPR* %13195, i32 0, i32 9
  %13197 = getelementptr inbounds %struct.Reg, %struct.Reg* %13196, i32 0, i32 0
  %RSI.i1623 = bitcast %union.anon* %13197 to i64*
  %13198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13199 = getelementptr inbounds %struct.GPR, %struct.GPR* %13198, i32 0, i32 17
  %13200 = getelementptr inbounds %struct.Reg, %struct.Reg* %13199, i32 0, i32 0
  %R8.i1624 = bitcast %union.anon* %13200 to i64*
  %13201 = load i64, i64* %R8.i1624
  %13202 = load i64, i64* %RSI.i1623
  %13203 = mul i64 %13202, 4
  %13204 = add i64 %13203, %13201
  %13205 = load i64, i64* %PC.i1622
  %13206 = add i64 %13205, 4
  store i64 %13206, i64* %PC.i1622
  %13207 = inttoptr i64 %13204 to i32*
  %13208 = load i32, i32* %13207
  %13209 = zext i32 %13208 to i64
  store i64 %13209, i64* %RSI.i1623, align 8
  store %struct.Memory* %loadMem_40c757, %struct.Memory** %MEMORY
  %loadMem_40c75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13211 = getelementptr inbounds %struct.GPR, %struct.GPR* %13210, i32 0, i32 33
  %13212 = getelementptr inbounds %struct.Reg, %struct.Reg* %13211, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %13212 to i64*
  %13213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13214 = getelementptr inbounds %struct.GPR, %struct.GPR* %13213, i32 0, i32 1
  %13215 = getelementptr inbounds %struct.Reg, %struct.Reg* %13214, i32 0, i32 0
  %EAX.i1620 = bitcast %union.anon* %13215 to i32*
  %13216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13217 = getelementptr inbounds %struct.GPR, %struct.GPR* %13216, i32 0, i32 15
  %13218 = getelementptr inbounds %struct.Reg, %struct.Reg* %13217, i32 0, i32 0
  %RBP.i1621 = bitcast %union.anon* %13218 to i64*
  %13219 = load i64, i64* %RBP.i1621
  %13220 = sub i64 %13219, 332
  %13221 = load i32, i32* %EAX.i1620
  %13222 = zext i32 %13221 to i64
  %13223 = load i64, i64* %PC.i1619
  %13224 = add i64 %13223, 6
  store i64 %13224, i64* %PC.i1619
  %13225 = inttoptr i64 %13220 to i32*
  store i32 %13221, i32* %13225
  store %struct.Memory* %loadMem_40c75b, %struct.Memory** %MEMORY
  %loadMem1_40c761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13227 = getelementptr inbounds %struct.GPR, %struct.GPR* %13226, i32 0, i32 33
  %13228 = getelementptr inbounds %struct.Reg, %struct.Reg* %13227, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %13228 to i64*
  %13229 = load i64, i64* %PC.i1618
  %13230 = add i64 %13229, 428527
  %13231 = load i64, i64* %PC.i1618
  %13232 = add i64 %13231, 5
  %13233 = load i64, i64* %PC.i1618
  %13234 = add i64 %13233, 5
  store i64 %13234, i64* %PC.i1618
  %13235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13236 = load i64, i64* %13235, align 8
  %13237 = add i64 %13236, -8
  %13238 = inttoptr i64 %13237 to i64*
  store i64 %13232, i64* %13238
  store i64 %13237, i64* %13235, align 8
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13230, i64* %13239, align 8
  store %struct.Memory* %loadMem1_40c761, %struct.Memory** %MEMORY
  %loadMem2_40c761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c761 = load i64, i64* %3
  %call2_40c761 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40c761, %struct.Memory* %loadMem2_40c761)
  store %struct.Memory* %call2_40c761, %struct.Memory** %MEMORY
  %loadMem_40c766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13241 = getelementptr inbounds %struct.GPR, %struct.GPR* %13240, i32 0, i32 33
  %13242 = getelementptr inbounds %struct.Reg, %struct.Reg* %13241, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %13242 to i64*
  %13243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13244 = getelementptr inbounds %struct.GPR, %struct.GPR* %13243, i32 0, i32 9
  %13245 = getelementptr inbounds %struct.Reg, %struct.Reg* %13244, i32 0, i32 0
  %RSI.i1616 = bitcast %union.anon* %13245 to i64*
  %13246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13247 = getelementptr inbounds %struct.GPR, %struct.GPR* %13246, i32 0, i32 15
  %13248 = getelementptr inbounds %struct.Reg, %struct.Reg* %13247, i32 0, i32 0
  %RBP.i1617 = bitcast %union.anon* %13248 to i64*
  %13249 = load i64, i64* %RBP.i1617
  %13250 = sub i64 %13249, 332
  %13251 = load i64, i64* %PC.i1615
  %13252 = add i64 %13251, 6
  store i64 %13252, i64* %PC.i1615
  %13253 = inttoptr i64 %13250 to i32*
  %13254 = load i32, i32* %13253
  %13255 = zext i32 %13254 to i64
  store i64 %13255, i64* %RSI.i1616, align 8
  store %struct.Memory* %loadMem_40c766, %struct.Memory** %MEMORY
  %loadMem_40c76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13257 = getelementptr inbounds %struct.GPR, %struct.GPR* %13256, i32 0, i32 33
  %13258 = getelementptr inbounds %struct.Reg, %struct.Reg* %13257, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %13258 to i64*
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13260 = getelementptr inbounds %struct.GPR, %struct.GPR* %13259, i32 0, i32 1
  %13261 = getelementptr inbounds %struct.Reg, %struct.Reg* %13260, i32 0, i32 0
  %EAX.i1613 = bitcast %union.anon* %13261 to i32*
  %13262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13263 = getelementptr inbounds %struct.GPR, %struct.GPR* %13262, i32 0, i32 9
  %13264 = getelementptr inbounds %struct.Reg, %struct.Reg* %13263, i32 0, i32 0
  %RSI.i1614 = bitcast %union.anon* %13264 to i64*
  %13265 = load i64, i64* %RSI.i1614
  %13266 = load i32, i32* %EAX.i1613
  %13267 = zext i32 %13266 to i64
  %13268 = load i64, i64* %PC.i1612
  %13269 = add i64 %13268, 2
  store i64 %13269, i64* %PC.i1612
  %13270 = trunc i64 %13265 to i32
  %13271 = sub i32 %13270, %13266
  %13272 = zext i32 %13271 to i64
  store i64 %13272, i64* %RSI.i1614, align 8
  %13273 = icmp ult i32 %13270, %13266
  %13274 = zext i1 %13273 to i8
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13274, i8* %13275, align 1
  %13276 = and i32 %13271, 255
  %13277 = call i32 @llvm.ctpop.i32(i32 %13276)
  %13278 = trunc i32 %13277 to i8
  %13279 = and i8 %13278, 1
  %13280 = xor i8 %13279, 1
  %13281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13280, i8* %13281, align 1
  %13282 = xor i64 %13267, %13265
  %13283 = trunc i64 %13282 to i32
  %13284 = xor i32 %13283, %13271
  %13285 = lshr i32 %13284, 4
  %13286 = trunc i32 %13285 to i8
  %13287 = and i8 %13286, 1
  %13288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13287, i8* %13288, align 1
  %13289 = icmp eq i32 %13271, 0
  %13290 = zext i1 %13289 to i8
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13290, i8* %13291, align 1
  %13292 = lshr i32 %13271, 31
  %13293 = trunc i32 %13292 to i8
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13293, i8* %13294, align 1
  %13295 = lshr i32 %13270, 31
  %13296 = lshr i32 %13266, 31
  %13297 = xor i32 %13296, %13295
  %13298 = xor i32 %13292, %13295
  %13299 = add i32 %13298, %13297
  %13300 = icmp eq i32 %13299, 2
  %13301 = zext i1 %13300 to i8
  %13302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13301, i8* %13302, align 1
  store %struct.Memory* %loadMem_40c76c, %struct.Memory** %MEMORY
  %loadMem_40c76e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13304 = getelementptr inbounds %struct.GPR, %struct.GPR* %13303, i32 0, i32 33
  %13305 = getelementptr inbounds %struct.Reg, %struct.Reg* %13304, i32 0, i32 0
  %PC.i1609 = bitcast %union.anon* %13305 to i64*
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13307 = getelementptr inbounds %struct.GPR, %struct.GPR* %13306, i32 0, i32 9
  %13308 = getelementptr inbounds %struct.Reg, %struct.Reg* %13307, i32 0, i32 0
  %ESI.i1610 = bitcast %union.anon* %13308 to i32*
  %13309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13310 = getelementptr inbounds %struct.GPR, %struct.GPR* %13309, i32 0, i32 15
  %13311 = getelementptr inbounds %struct.Reg, %struct.Reg* %13310, i32 0, i32 0
  %RBP.i1611 = bitcast %union.anon* %13311 to i64*
  %13312 = load i64, i64* %RBP.i1611
  %13313 = sub i64 %13312, 252
  %13314 = load i32, i32* %ESI.i1610
  %13315 = zext i32 %13314 to i64
  %13316 = load i64, i64* %PC.i1609
  %13317 = add i64 %13316, 6
  store i64 %13317, i64* %PC.i1609
  %13318 = inttoptr i64 %13313 to i32*
  store i32 %13314, i32* %13318
  store %struct.Memory* %loadMem_40c76e, %struct.Memory** %MEMORY
  %loadMem_40c774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13320 = getelementptr inbounds %struct.GPR, %struct.GPR* %13319, i32 0, i32 33
  %13321 = getelementptr inbounds %struct.Reg, %struct.Reg* %13320, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %13321 to i64*
  %13322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13323 = getelementptr inbounds %struct.GPR, %struct.GPR* %13322, i32 0, i32 11
  %13324 = getelementptr inbounds %struct.Reg, %struct.Reg* %13323, i32 0, i32 0
  %RDI.i1607 = bitcast %union.anon* %13324 to i64*
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13326 = getelementptr inbounds %struct.GPR, %struct.GPR* %13325, i32 0, i32 15
  %13327 = getelementptr inbounds %struct.Reg, %struct.Reg* %13326, i32 0, i32 0
  %RBP.i1608 = bitcast %union.anon* %13327 to i64*
  %13328 = load i64, i64* %RBP.i1608
  %13329 = sub i64 %13328, 252
  %13330 = load i64, i64* %PC.i1606
  %13331 = add i64 %13330, 6
  store i64 %13331, i64* %PC.i1606
  %13332 = inttoptr i64 %13329 to i32*
  %13333 = load i32, i32* %13332
  %13334 = zext i32 %13333 to i64
  store i64 %13334, i64* %RDI.i1607, align 8
  store %struct.Memory* %loadMem_40c774, %struct.Memory** %MEMORY
  %loadMem1_40c77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13336 = getelementptr inbounds %struct.GPR, %struct.GPR* %13335, i32 0, i32 33
  %13337 = getelementptr inbounds %struct.Reg, %struct.Reg* %13336, i32 0, i32 0
  %PC.i1605 = bitcast %union.anon* %13337 to i64*
  %13338 = load i64, i64* %PC.i1605
  %13339 = add i64 %13338, -46970
  %13340 = load i64, i64* %PC.i1605
  %13341 = add i64 %13340, 5
  %13342 = load i64, i64* %PC.i1605
  %13343 = add i64 %13342, 5
  store i64 %13343, i64* %PC.i1605
  %13344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13345 = load i64, i64* %13344, align 8
  %13346 = add i64 %13345, -8
  %13347 = inttoptr i64 %13346 to i64*
  store i64 %13341, i64* %13347
  store i64 %13346, i64* %13344, align 8
  %13348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13339, i64* %13348, align 8
  store %struct.Memory* %loadMem1_40c77a, %struct.Memory** %MEMORY
  %loadMem2_40c77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c77a = load i64, i64* %3
  %13349 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40c77a)
  store %struct.Memory* %13349, %struct.Memory** %MEMORY
  %loadMem_40c77f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13351 = getelementptr inbounds %struct.GPR, %struct.GPR* %13350, i32 0, i32 33
  %13352 = getelementptr inbounds %struct.Reg, %struct.Reg* %13351, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %13352 to i64*
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13354 = getelementptr inbounds %struct.GPR, %struct.GPR* %13353, i32 0, i32 15
  %13355 = getelementptr inbounds %struct.Reg, %struct.Reg* %13354, i32 0, i32 0
  %RBP.i1600 = bitcast %union.anon* %13355 to i64*
  %13356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13357 = getelementptr inbounds %struct.GPR, %struct.GPR* %13356, i32 0, i32 17
  %13358 = getelementptr inbounds %struct.Reg, %struct.Reg* %13357, i32 0, i32 0
  %R8.i1601 = bitcast %union.anon* %13358 to i64*
  %13359 = load i64, i64* %RBP.i1600
  %13360 = sub i64 %13359, 176
  %13361 = load i64, i64* %PC.i1599
  %13362 = add i64 %13361, 7
  store i64 %13362, i64* %PC.i1599
  store i64 %13360, i64* %R8.i1601, align 8
  store %struct.Memory* %loadMem_40c77f, %struct.Memory** %MEMORY
  %loadMem_40c786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13364 = getelementptr inbounds %struct.GPR, %struct.GPR* %13363, i32 0, i32 33
  %13365 = getelementptr inbounds %struct.Reg, %struct.Reg* %13364, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %13365 to i64*
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13367 = getelementptr inbounds %struct.GPR, %struct.GPR* %13366, i32 0, i32 19
  %13368 = getelementptr inbounds %struct.Reg, %struct.Reg* %13367, i32 0, i32 0
  %R9.i1598 = bitcast %union.anon* %13368 to i64*
  %13369 = load i64, i64* %PC.i1597
  %13370 = add i64 %13369, 10
  store i64 %13370, i64* %PC.i1597
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %R9.i1598, align 8
  store %struct.Memory* %loadMem_40c786, %struct.Memory** %MEMORY
  %loadMem_40c790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13372 = getelementptr inbounds %struct.GPR, %struct.GPR* %13371, i32 0, i32 33
  %13373 = getelementptr inbounds %struct.Reg, %struct.Reg* %13372, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %13373 to i64*
  %13374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13375 = getelementptr inbounds %struct.GPR, %struct.GPR* %13374, i32 0, i32 15
  %13376 = getelementptr inbounds %struct.Reg, %struct.Reg* %13375, i32 0, i32 0
  %RBP.i1595 = bitcast %union.anon* %13376 to i64*
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13378 = getelementptr inbounds %struct.GPR, %struct.GPR* %13377, i32 0, i32 21
  %13379 = getelementptr inbounds %struct.Reg, %struct.Reg* %13378, i32 0, i32 0
  %R10.i1596 = bitcast %union.anon* %13379 to i64*
  %13380 = load i64, i64* %RBP.i1595
  %13381 = sub i64 %13380, 192
  %13382 = load i64, i64* %PC.i1594
  %13383 = add i64 %13382, 7
  store i64 %13383, i64* %PC.i1594
  %13384 = inttoptr i64 %13381 to i32*
  %13385 = load i32, i32* %13384
  %13386 = sext i32 %13385 to i64
  store i64 %13386, i64* %R10.i1596, align 8
  store %struct.Memory* %loadMem_40c790, %struct.Memory** %MEMORY
  %loadMem_40c797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13388 = getelementptr inbounds %struct.GPR, %struct.GPR* %13387, i32 0, i32 33
  %13389 = getelementptr inbounds %struct.Reg, %struct.Reg* %13388, i32 0, i32 0
  %PC.i1592 = bitcast %union.anon* %13389 to i64*
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13391 = getelementptr inbounds %struct.GPR, %struct.GPR* %13390, i32 0, i32 21
  %13392 = getelementptr inbounds %struct.Reg, %struct.Reg* %13391, i32 0, i32 0
  %R10.i1593 = bitcast %union.anon* %13392 to i64*
  %13393 = load i64, i64* %R10.i1593
  %13394 = load i64, i64* %PC.i1592
  %13395 = add i64 %13394, 4
  store i64 %13395, i64* %PC.i1592
  %13396 = shl i64 %13393, 5
  %13397 = icmp slt i64 %13396, 0
  %13398 = shl i64 %13396, 1
  store i64 %13398, i64* %R10.i1593, align 8
  %13399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13400 = zext i1 %13397 to i8
  store i8 %13400, i8* %13399, align 1
  %13401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13402 = trunc i64 %13398 to i32
  %13403 = and i32 %13402, 254
  %13404 = call i32 @llvm.ctpop.i32(i32 %13403)
  %13405 = trunc i32 %13404 to i8
  %13406 = and i8 %13405, 1
  %13407 = xor i8 %13406, 1
  store i8 %13407, i8* %13401, align 1
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13408, align 1
  %13409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13410 = icmp eq i64 %13398, 0
  %13411 = zext i1 %13410 to i8
  store i8 %13411, i8* %13409, align 1
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13413 = lshr i64 %13398, 63
  %13414 = trunc i64 %13413 to i8
  store i8 %13414, i8* %13412, align 1
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13415, align 1
  store %struct.Memory* %loadMem_40c797, %struct.Memory** %MEMORY
  %loadMem_40c79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13417 = getelementptr inbounds %struct.GPR, %struct.GPR* %13416, i32 0, i32 33
  %13418 = getelementptr inbounds %struct.Reg, %struct.Reg* %13417, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %13418 to i64*
  %13419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13420 = getelementptr inbounds %struct.GPR, %struct.GPR* %13419, i32 0, i32 19
  %13421 = getelementptr inbounds %struct.Reg, %struct.Reg* %13420, i32 0, i32 0
  %R9.i1590 = bitcast %union.anon* %13421 to i64*
  %13422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13423 = getelementptr inbounds %struct.GPR, %struct.GPR* %13422, i32 0, i32 21
  %13424 = getelementptr inbounds %struct.Reg, %struct.Reg* %13423, i32 0, i32 0
  %R10.i1591 = bitcast %union.anon* %13424 to i64*
  %13425 = load i64, i64* %R9.i1590
  %13426 = load i64, i64* %R10.i1591
  %13427 = load i64, i64* %PC.i1589
  %13428 = add i64 %13427, 3
  store i64 %13428, i64* %PC.i1589
  %13429 = add i64 %13426, %13425
  store i64 %13429, i64* %R9.i1590, align 8
  %13430 = icmp ult i64 %13429, %13425
  %13431 = icmp ult i64 %13429, %13426
  %13432 = or i1 %13430, %13431
  %13433 = zext i1 %13432 to i8
  %13434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13433, i8* %13434, align 1
  %13435 = trunc i64 %13429 to i32
  %13436 = and i32 %13435, 255
  %13437 = call i32 @llvm.ctpop.i32(i32 %13436)
  %13438 = trunc i32 %13437 to i8
  %13439 = and i8 %13438, 1
  %13440 = xor i8 %13439, 1
  %13441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13440, i8* %13441, align 1
  %13442 = xor i64 %13426, %13425
  %13443 = xor i64 %13442, %13429
  %13444 = lshr i64 %13443, 4
  %13445 = trunc i64 %13444 to i8
  %13446 = and i8 %13445, 1
  %13447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13446, i8* %13447, align 1
  %13448 = icmp eq i64 %13429, 0
  %13449 = zext i1 %13448 to i8
  %13450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13449, i8* %13450, align 1
  %13451 = lshr i64 %13429, 63
  %13452 = trunc i64 %13451 to i8
  %13453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13452, i8* %13453, align 1
  %13454 = lshr i64 %13425, 63
  %13455 = lshr i64 %13426, 63
  %13456 = xor i64 %13451, %13454
  %13457 = xor i64 %13451, %13455
  %13458 = add i64 %13456, %13457
  %13459 = icmp eq i64 %13458, 2
  %13460 = zext i1 %13459 to i8
  %13461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13460, i8* %13461, align 1
  store %struct.Memory* %loadMem_40c79b, %struct.Memory** %MEMORY
  %loadMem_40c79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13463 = getelementptr inbounds %struct.GPR, %struct.GPR* %13462, i32 0, i32 33
  %13464 = getelementptr inbounds %struct.Reg, %struct.Reg* %13463, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %13464 to i64*
  %13465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13466 = getelementptr inbounds %struct.GPR, %struct.GPR* %13465, i32 0, i32 15
  %13467 = getelementptr inbounds %struct.Reg, %struct.Reg* %13466, i32 0, i32 0
  %RBP.i1587 = bitcast %union.anon* %13467 to i64*
  %13468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13469 = getelementptr inbounds %struct.GPR, %struct.GPR* %13468, i32 0, i32 21
  %13470 = getelementptr inbounds %struct.Reg, %struct.Reg* %13469, i32 0, i32 0
  %R10.i1588 = bitcast %union.anon* %13470 to i64*
  %13471 = load i64, i64* %RBP.i1587
  %13472 = sub i64 %13471, 20
  %13473 = load i64, i64* %PC.i1586
  %13474 = add i64 %13473, 4
  store i64 %13474, i64* %PC.i1586
  %13475 = inttoptr i64 %13472 to i32*
  %13476 = load i32, i32* %13475
  %13477 = sext i32 %13476 to i64
  store i64 %13477, i64* %R10.i1588, align 8
  store %struct.Memory* %loadMem_40c79e, %struct.Memory** %MEMORY
  %loadMem_40c7a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13479 = getelementptr inbounds %struct.GPR, %struct.GPR* %13478, i32 0, i32 33
  %13480 = getelementptr inbounds %struct.Reg, %struct.Reg* %13479, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %13480 to i64*
  %13481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13482 = getelementptr inbounds %struct.GPR, %struct.GPR* %13481, i32 0, i32 21
  %13483 = getelementptr inbounds %struct.Reg, %struct.Reg* %13482, i32 0, i32 0
  %R10.i1585 = bitcast %union.anon* %13483 to i64*
  %13484 = load i64, i64* %R10.i1585
  %13485 = load i64, i64* %PC.i1584
  %13486 = add i64 %13485, 4
  store i64 %13486, i64* %PC.i1584
  %13487 = shl i64 %13484, 3
  %13488 = icmp slt i64 %13487, 0
  %13489 = shl i64 %13487, 1
  store i64 %13489, i64* %R10.i1585, align 8
  %13490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13491 = zext i1 %13488 to i8
  store i8 %13491, i8* %13490, align 1
  %13492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13493 = trunc i64 %13489 to i32
  %13494 = and i32 %13493, 254
  %13495 = call i32 @llvm.ctpop.i32(i32 %13494)
  %13496 = trunc i32 %13495 to i8
  %13497 = and i8 %13496, 1
  %13498 = xor i8 %13497, 1
  store i8 %13498, i8* %13492, align 1
  %13499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13499, align 1
  %13500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13501 = icmp eq i64 %13489, 0
  %13502 = zext i1 %13501 to i8
  store i8 %13502, i8* %13500, align 1
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13504 = lshr i64 %13489, 63
  %13505 = trunc i64 %13504 to i8
  store i8 %13505, i8* %13503, align 1
  %13506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13506, align 1
  store %struct.Memory* %loadMem_40c7a2, %struct.Memory** %MEMORY
  %loadMem_40c7a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13508 = getelementptr inbounds %struct.GPR, %struct.GPR* %13507, i32 0, i32 33
  %13509 = getelementptr inbounds %struct.Reg, %struct.Reg* %13508, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %13509 to i64*
  %13510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13511 = getelementptr inbounds %struct.GPR, %struct.GPR* %13510, i32 0, i32 19
  %13512 = getelementptr inbounds %struct.Reg, %struct.Reg* %13511, i32 0, i32 0
  %R9.i1582 = bitcast %union.anon* %13512 to i64*
  %13513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13514 = getelementptr inbounds %struct.GPR, %struct.GPR* %13513, i32 0, i32 21
  %13515 = getelementptr inbounds %struct.Reg, %struct.Reg* %13514, i32 0, i32 0
  %R10.i1583 = bitcast %union.anon* %13515 to i64*
  %13516 = load i64, i64* %R9.i1582
  %13517 = load i64, i64* %R10.i1583
  %13518 = load i64, i64* %PC.i1581
  %13519 = add i64 %13518, 3
  store i64 %13519, i64* %PC.i1581
  %13520 = add i64 %13517, %13516
  store i64 %13520, i64* %R9.i1582, align 8
  %13521 = icmp ult i64 %13520, %13516
  %13522 = icmp ult i64 %13520, %13517
  %13523 = or i1 %13521, %13522
  %13524 = zext i1 %13523 to i8
  %13525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13524, i8* %13525, align 1
  %13526 = trunc i64 %13520 to i32
  %13527 = and i32 %13526, 255
  %13528 = call i32 @llvm.ctpop.i32(i32 %13527)
  %13529 = trunc i32 %13528 to i8
  %13530 = and i8 %13529, 1
  %13531 = xor i8 %13530, 1
  %13532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13531, i8* %13532, align 1
  %13533 = xor i64 %13517, %13516
  %13534 = xor i64 %13533, %13520
  %13535 = lshr i64 %13534, 4
  %13536 = trunc i64 %13535 to i8
  %13537 = and i8 %13536, 1
  %13538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13537, i8* %13538, align 1
  %13539 = icmp eq i64 %13520, 0
  %13540 = zext i1 %13539 to i8
  %13541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13540, i8* %13541, align 1
  %13542 = lshr i64 %13520, 63
  %13543 = trunc i64 %13542 to i8
  %13544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13543, i8* %13544, align 1
  %13545 = lshr i64 %13516, 63
  %13546 = lshr i64 %13517, 63
  %13547 = xor i64 %13542, %13545
  %13548 = xor i64 %13542, %13546
  %13549 = add i64 %13547, %13548
  %13550 = icmp eq i64 %13549, 2
  %13551 = zext i1 %13550 to i8
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13551, i8* %13552, align 1
  store %struct.Memory* %loadMem_40c7a6, %struct.Memory** %MEMORY
  %loadMem_40c7a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13554 = getelementptr inbounds %struct.GPR, %struct.GPR* %13553, i32 0, i32 33
  %13555 = getelementptr inbounds %struct.Reg, %struct.Reg* %13554, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %13555 to i64*
  %13556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13557 = getelementptr inbounds %struct.GPR, %struct.GPR* %13556, i32 0, i32 15
  %13558 = getelementptr inbounds %struct.Reg, %struct.Reg* %13557, i32 0, i32 0
  %RBP.i1579 = bitcast %union.anon* %13558 to i64*
  %13559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13560 = getelementptr inbounds %struct.GPR, %struct.GPR* %13559, i32 0, i32 21
  %13561 = getelementptr inbounds %struct.Reg, %struct.Reg* %13560, i32 0, i32 0
  %R10.i1580 = bitcast %union.anon* %13561 to i64*
  %13562 = load i64, i64* %RBP.i1579
  %13563 = sub i64 %13562, 24
  %13564 = load i64, i64* %PC.i1578
  %13565 = add i64 %13564, 4
  store i64 %13565, i64* %PC.i1578
  %13566 = inttoptr i64 %13563 to i32*
  %13567 = load i32, i32* %13566
  %13568 = sext i32 %13567 to i64
  store i64 %13568, i64* %R10.i1580, align 8
  store %struct.Memory* %loadMem_40c7a9, %struct.Memory** %MEMORY
  %loadMem_40c7ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13570 = getelementptr inbounds %struct.GPR, %struct.GPR* %13569, i32 0, i32 33
  %13571 = getelementptr inbounds %struct.Reg, %struct.Reg* %13570, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %13571 to i64*
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13573 = getelementptr inbounds %struct.GPR, %struct.GPR* %13572, i32 0, i32 1
  %13574 = getelementptr inbounds %struct.Reg, %struct.Reg* %13573, i32 0, i32 0
  %RAX.i1575 = bitcast %union.anon* %13574 to i64*
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13576 = getelementptr inbounds %struct.GPR, %struct.GPR* %13575, i32 0, i32 19
  %13577 = getelementptr inbounds %struct.Reg, %struct.Reg* %13576, i32 0, i32 0
  %R9.i1576 = bitcast %union.anon* %13577 to i64*
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13579 = getelementptr inbounds %struct.GPR, %struct.GPR* %13578, i32 0, i32 21
  %13580 = getelementptr inbounds %struct.Reg, %struct.Reg* %13579, i32 0, i32 0
  %R10.i1577 = bitcast %union.anon* %13580 to i64*
  %13581 = load i64, i64* %RAX.i1575
  %13582 = load i64, i64* %R9.i1576
  %13583 = load i64, i64* %R10.i1577
  %13584 = mul i64 %13583, 4
  %13585 = add i64 %13584, %13582
  %13586 = load i64, i64* %PC.i1574
  %13587 = add i64 %13586, 5
  store i64 %13587, i64* %PC.i1574
  %13588 = inttoptr i64 %13585 to i32*
  %13589 = load i32, i32* %13588
  %13590 = shl i64 %13581, 32
  %13591 = ashr exact i64 %13590, 32
  %13592 = sext i32 %13589 to i64
  %13593 = mul i64 %13592, %13591
  %13594 = trunc i64 %13593 to i32
  %13595 = and i64 %13593, 4294967295
  store i64 %13595, i64* %RAX.i1575, align 8
  %13596 = shl i64 %13593, 32
  %13597 = ashr exact i64 %13596, 32
  %13598 = icmp ne i64 %13597, %13593
  %13599 = zext i1 %13598 to i8
  %13600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13599, i8* %13600, align 1
  %13601 = and i32 %13594, 255
  %13602 = call i32 @llvm.ctpop.i32(i32 %13601)
  %13603 = trunc i32 %13602 to i8
  %13604 = and i8 %13603, 1
  %13605 = xor i8 %13604, 1
  %13606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13605, i8* %13606, align 1
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13607, align 1
  %13608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13608, align 1
  %13609 = lshr i32 %13594, 31
  %13610 = trunc i32 %13609 to i8
  %13611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13610, i8* %13611, align 1
  %13612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13599, i8* %13612, align 1
  store %struct.Memory* %loadMem_40c7ad, %struct.Memory** %MEMORY
  %loadMem_40c7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13614 = getelementptr inbounds %struct.GPR, %struct.GPR* %13613, i32 0, i32 33
  %13615 = getelementptr inbounds %struct.Reg, %struct.Reg* %13614, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %13615 to i64*
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13617 = getelementptr inbounds %struct.GPR, %struct.GPR* %13616, i32 0, i32 1
  %13618 = getelementptr inbounds %struct.Reg, %struct.Reg* %13617, i32 0, i32 0
  %RAX.i1572 = bitcast %union.anon* %13618 to i64*
  %13619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13620 = getelementptr inbounds %struct.GPR, %struct.GPR* %13619, i32 0, i32 15
  %13621 = getelementptr inbounds %struct.Reg, %struct.Reg* %13620, i32 0, i32 0
  %RBP.i1573 = bitcast %union.anon* %13621 to i64*
  %13622 = load i64, i64* %RAX.i1572
  %13623 = load i64, i64* %RBP.i1573
  %13624 = sub i64 %13623, 88
  %13625 = load i64, i64* %PC.i1571
  %13626 = add i64 %13625, 3
  store i64 %13626, i64* %PC.i1571
  %13627 = trunc i64 %13622 to i32
  %13628 = inttoptr i64 %13624 to i32*
  %13629 = load i32, i32* %13628
  %13630 = add i32 %13629, %13627
  %13631 = zext i32 %13630 to i64
  store i64 %13631, i64* %RAX.i1572, align 8
  %13632 = icmp ult i32 %13630, %13627
  %13633 = icmp ult i32 %13630, %13629
  %13634 = or i1 %13632, %13633
  %13635 = zext i1 %13634 to i8
  %13636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13635, i8* %13636, align 1
  %13637 = and i32 %13630, 255
  %13638 = call i32 @llvm.ctpop.i32(i32 %13637)
  %13639 = trunc i32 %13638 to i8
  %13640 = and i8 %13639, 1
  %13641 = xor i8 %13640, 1
  %13642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13641, i8* %13642, align 1
  %13643 = xor i32 %13629, %13627
  %13644 = xor i32 %13643, %13630
  %13645 = lshr i32 %13644, 4
  %13646 = trunc i32 %13645 to i8
  %13647 = and i8 %13646, 1
  %13648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13647, i8* %13648, align 1
  %13649 = icmp eq i32 %13630, 0
  %13650 = zext i1 %13649 to i8
  %13651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13650, i8* %13651, align 1
  %13652 = lshr i32 %13630, 31
  %13653 = trunc i32 %13652 to i8
  %13654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13653, i8* %13654, align 1
  %13655 = lshr i32 %13627, 31
  %13656 = lshr i32 %13629, 31
  %13657 = xor i32 %13652, %13655
  %13658 = xor i32 %13652, %13656
  %13659 = add i32 %13657, %13658
  %13660 = icmp eq i32 %13659, 2
  %13661 = zext i1 %13660 to i8
  %13662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13661, i8* %13662, align 1
  store %struct.Memory* %loadMem_40c7b2, %struct.Memory** %MEMORY
  %loadMem_40c7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13664 = getelementptr inbounds %struct.GPR, %struct.GPR* %13663, i32 0, i32 33
  %13665 = getelementptr inbounds %struct.Reg, %struct.Reg* %13664, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %13665 to i64*
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13667 = getelementptr inbounds %struct.GPR, %struct.GPR* %13666, i32 0, i32 5
  %13668 = getelementptr inbounds %struct.Reg, %struct.Reg* %13667, i32 0, i32 0
  %RCX.i1569 = bitcast %union.anon* %13668 to i64*
  %13669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13670 = getelementptr inbounds %struct.GPR, %struct.GPR* %13669, i32 0, i32 15
  %13671 = getelementptr inbounds %struct.Reg, %struct.Reg* %13670, i32 0, i32 0
  %RBP.i1570 = bitcast %union.anon* %13671 to i64*
  %13672 = load i64, i64* %RBP.i1570
  %13673 = sub i64 %13672, 196
  %13674 = load i64, i64* %PC.i1568
  %13675 = add i64 %13674, 6
  store i64 %13675, i64* %PC.i1568
  %13676 = inttoptr i64 %13673 to i32*
  %13677 = load i32, i32* %13676
  %13678 = zext i32 %13677 to i64
  store i64 %13678, i64* %RCX.i1569, align 8
  store %struct.Memory* %loadMem_40c7b5, %struct.Memory** %MEMORY
  %loadMem_40c7bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13680 = getelementptr inbounds %struct.GPR, %struct.GPR* %13679, i32 0, i32 33
  %13681 = getelementptr inbounds %struct.Reg, %struct.Reg* %13680, i32 0, i32 0
  %PC.i1564 = bitcast %union.anon* %13681 to i64*
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13683 = getelementptr inbounds %struct.GPR, %struct.GPR* %13682, i32 0, i32 5
  %13684 = getelementptr inbounds %struct.Reg, %struct.Reg* %13683, i32 0, i32 0
  %13685 = bitcast %union.anon* %13684 to %struct.anon.2*
  %CL.i1565 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13685, i32 0, i32 0
  %13686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13687 = getelementptr inbounds %struct.GPR, %struct.GPR* %13686, i32 0, i32 1
  %13688 = getelementptr inbounds %struct.Reg, %struct.Reg* %13687, i32 0, i32 0
  %RAX.i1566 = bitcast %union.anon* %13688 to i64*
  %13689 = load i64, i64* %RAX.i1566
  %13690 = load i8, i8* %CL.i1565
  %13691 = zext i8 %13690 to i64
  %13692 = load i64, i64* %PC.i1564
  %13693 = add i64 %13692, 2
  store i64 %13693, i64* %PC.i1564
  %13694 = trunc i64 %13691 to i5
  switch i5 %13694, label %13698 [
    i5 0, label %routine_sarl__cl___eax.exit1567
    i5 1, label %13695
  ]

; <label>:13695:                                  ; preds = %routine_idivl___rsi__r8_4_.exit
  %13696 = shl i64 %13689, 32
  %13697 = ashr i64 %13696, 33
  br label %13705

; <label>:13698:                                  ; preds = %routine_idivl___rsi__r8_4_.exit
  %13699 = and i64 %13691, 31
  %13700 = add i64 %13699, -1
  %13701 = shl i64 %13689, 32
  %13702 = ashr exact i64 %13701, 32
  %13703 = ashr i64 %13702, %13700
  %13704 = lshr i64 %13703, 1
  br label %13705

; <label>:13705:                                  ; preds = %13698, %13695
  %13706 = phi i64 [ %13704, %13698 ], [ %13697, %13695 ]
  %13707 = phi i64 [ %13703, %13698 ], [ %13689, %13695 ]
  %13708 = trunc i64 %13707 to i8
  %13709 = and i8 %13708, 1
  %13710 = trunc i64 %13706 to i32
  %13711 = and i64 %13706, 4294967295
  store i64 %13711, i64* %RAX.i1566, align 8
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13709, i8* %13712, align 1
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13714 = and i32 %13710, 255
  %13715 = call i32 @llvm.ctpop.i32(i32 %13714)
  %13716 = trunc i32 %13715 to i8
  %13717 = and i8 %13716, 1
  %13718 = xor i8 %13717, 1
  store i8 %13718, i8* %13713, align 1
  %13719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13719, align 1
  %13720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13721 = icmp eq i32 %13710, 0
  %13722 = zext i1 %13721 to i8
  store i8 %13722, i8* %13720, align 1
  %13723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13724 = lshr i32 %13710, 31
  %13725 = trunc i32 %13724 to i8
  store i8 %13725, i8* %13723, align 1
  %13726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13726, align 1
  br label %routine_sarl__cl___eax.exit1567

routine_sarl__cl___eax.exit1567:                  ; preds = %routine_idivl___rsi__r8_4_.exit, %13705
  store %struct.Memory* %loadMem_40c7bb, %struct.Memory** %MEMORY
  %loadMem_40c7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13728 = getelementptr inbounds %struct.GPR, %struct.GPR* %13727, i32 0, i32 33
  %13729 = getelementptr inbounds %struct.Reg, %struct.Reg* %13728, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %13729 to i64*
  %13730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13731 = getelementptr inbounds %struct.GPR, %struct.GPR* %13730, i32 0, i32 1
  %13732 = getelementptr inbounds %struct.Reg, %struct.Reg* %13731, i32 0, i32 0
  %EAX.i1562 = bitcast %union.anon* %13732 to i32*
  %13733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13734 = getelementptr inbounds %struct.GPR, %struct.GPR* %13733, i32 0, i32 15
  %13735 = getelementptr inbounds %struct.Reg, %struct.Reg* %13734, i32 0, i32 0
  %RBP.i1563 = bitcast %union.anon* %13735 to i64*
  %13736 = load i64, i64* %RBP.i1563
  %13737 = sub i64 %13736, 260
  %13738 = load i32, i32* %EAX.i1562
  %13739 = zext i32 %13738 to i64
  %13740 = load i64, i64* %PC.i1561
  %13741 = add i64 %13740, 6
  store i64 %13741, i64* %PC.i1561
  %13742 = inttoptr i64 %13737 to i32*
  store i32 %13738, i32* %13742
  store %struct.Memory* %loadMem_40c7bd, %struct.Memory** %MEMORY
  %loadMem_40c7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13744 = getelementptr inbounds %struct.GPR, %struct.GPR* %13743, i32 0, i32 33
  %13745 = getelementptr inbounds %struct.Reg, %struct.Reg* %13744, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %13745 to i64*
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13747 = getelementptr inbounds %struct.GPR, %struct.GPR* %13746, i32 0, i32 19
  %13748 = getelementptr inbounds %struct.Reg, %struct.Reg* %13747, i32 0, i32 0
  %R9.i1560 = bitcast %union.anon* %13748 to i64*
  %13749 = load i64, i64* %PC.i1559
  %13750 = add i64 %13749, 8
  store i64 %13750, i64* %PC.i1559
  %13751 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13751, i64* %R9.i1560, align 8
  store %struct.Memory* %loadMem_40c7c3, %struct.Memory** %MEMORY
  %loadMem_40c7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13753 = getelementptr inbounds %struct.GPR, %struct.GPR* %13752, i32 0, i32 33
  %13754 = getelementptr inbounds %struct.Reg, %struct.Reg* %13753, i32 0, i32 0
  %PC.i1557 = bitcast %union.anon* %13754 to i64*
  %13755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13756 = getelementptr inbounds %struct.GPR, %struct.GPR* %13755, i32 0, i32 19
  %13757 = getelementptr inbounds %struct.Reg, %struct.Reg* %13756, i32 0, i32 0
  %R9.i1558 = bitcast %union.anon* %13757 to i64*
  %13758 = load i64, i64* %R9.i1558
  %13759 = load i64, i64* %PC.i1557
  %13760 = add i64 %13759, 7
  store i64 %13760, i64* %PC.i1557
  %13761 = add i64 13112, %13758
  store i64 %13761, i64* %R9.i1558, align 8
  %13762 = icmp ult i64 %13761, %13758
  %13763 = icmp ult i64 %13761, 13112
  %13764 = or i1 %13762, %13763
  %13765 = zext i1 %13764 to i8
  %13766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13765, i8* %13766, align 1
  %13767 = trunc i64 %13761 to i32
  %13768 = and i32 %13767, 255
  %13769 = call i32 @llvm.ctpop.i32(i32 %13768)
  %13770 = trunc i32 %13769 to i8
  %13771 = and i8 %13770, 1
  %13772 = xor i8 %13771, 1
  %13773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13772, i8* %13773, align 1
  %13774 = xor i64 13112, %13758
  %13775 = xor i64 %13774, %13761
  %13776 = lshr i64 %13775, 4
  %13777 = trunc i64 %13776 to i8
  %13778 = and i8 %13777, 1
  %13779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13778, i8* %13779, align 1
  %13780 = icmp eq i64 %13761, 0
  %13781 = zext i1 %13780 to i8
  %13782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13781, i8* %13782, align 1
  %13783 = lshr i64 %13761, 63
  %13784 = trunc i64 %13783 to i8
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13784, i8* %13785, align 1
  %13786 = lshr i64 %13758, 63
  %13787 = xor i64 %13783, %13786
  %13788 = add i64 %13787, %13783
  %13789 = icmp eq i64 %13788, 2
  %13790 = zext i1 %13789 to i8
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13790, i8* %13791, align 1
  store %struct.Memory* %loadMem_40c7cb, %struct.Memory** %MEMORY
  %loadMem_40c7d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13793 = getelementptr inbounds %struct.GPR, %struct.GPR* %13792, i32 0, i32 33
  %13794 = getelementptr inbounds %struct.Reg, %struct.Reg* %13793, i32 0, i32 0
  %PC.i1554 = bitcast %union.anon* %13794 to i64*
  %13795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13796 = getelementptr inbounds %struct.GPR, %struct.GPR* %13795, i32 0, i32 15
  %13797 = getelementptr inbounds %struct.Reg, %struct.Reg* %13796, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %13797 to i64*
  %13798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13799 = getelementptr inbounds %struct.GPR, %struct.GPR* %13798, i32 0, i32 21
  %13800 = getelementptr inbounds %struct.Reg, %struct.Reg* %13799, i32 0, i32 0
  %R10.i1556 = bitcast %union.anon* %13800 to i64*
  %13801 = load i64, i64* %RBP.i1555
  %13802 = sub i64 %13801, 20
  %13803 = load i64, i64* %PC.i1554
  %13804 = add i64 %13803, 4
  store i64 %13804, i64* %PC.i1554
  %13805 = inttoptr i64 %13802 to i32*
  %13806 = load i32, i32* %13805
  %13807 = sext i32 %13806 to i64
  store i64 %13807, i64* %R10.i1556, align 8
  store %struct.Memory* %loadMem_40c7d2, %struct.Memory** %MEMORY
  %loadMem_40c7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13809 = getelementptr inbounds %struct.GPR, %struct.GPR* %13808, i32 0, i32 33
  %13810 = getelementptr inbounds %struct.Reg, %struct.Reg* %13809, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %13810 to i64*
  %13811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13812 = getelementptr inbounds %struct.GPR, %struct.GPR* %13811, i32 0, i32 21
  %13813 = getelementptr inbounds %struct.Reg, %struct.Reg* %13812, i32 0, i32 0
  %R10.i1553 = bitcast %union.anon* %13813 to i64*
  %13814 = load i64, i64* %R10.i1553
  %13815 = load i64, i64* %PC.i1552
  %13816 = add i64 %13815, 4
  store i64 %13816, i64* %PC.i1552
  %13817 = shl i64 %13814, 5
  %13818 = icmp slt i64 %13817, 0
  %13819 = shl i64 %13817, 1
  store i64 %13819, i64* %R10.i1553, align 8
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13821 = zext i1 %13818 to i8
  store i8 %13821, i8* %13820, align 1
  %13822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13823 = trunc i64 %13819 to i32
  %13824 = and i32 %13823, 254
  %13825 = call i32 @llvm.ctpop.i32(i32 %13824)
  %13826 = trunc i32 %13825 to i8
  %13827 = and i8 %13826, 1
  %13828 = xor i8 %13827, 1
  store i8 %13828, i8* %13822, align 1
  %13829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13829, align 1
  %13830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13831 = icmp eq i64 %13819, 0
  %13832 = zext i1 %13831 to i8
  store i8 %13832, i8* %13830, align 1
  %13833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13834 = lshr i64 %13819, 63
  %13835 = trunc i64 %13834 to i8
  store i8 %13835, i8* %13833, align 1
  %13836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13836, align 1
  store %struct.Memory* %loadMem_40c7d6, %struct.Memory** %MEMORY
  %loadMem_40c7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %13837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13838 = getelementptr inbounds %struct.GPR, %struct.GPR* %13837, i32 0, i32 33
  %13839 = getelementptr inbounds %struct.Reg, %struct.Reg* %13838, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %13839 to i64*
  %13840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13841 = getelementptr inbounds %struct.GPR, %struct.GPR* %13840, i32 0, i32 19
  %13842 = getelementptr inbounds %struct.Reg, %struct.Reg* %13841, i32 0, i32 0
  %R9.i1550 = bitcast %union.anon* %13842 to i64*
  %13843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13844 = getelementptr inbounds %struct.GPR, %struct.GPR* %13843, i32 0, i32 21
  %13845 = getelementptr inbounds %struct.Reg, %struct.Reg* %13844, i32 0, i32 0
  %R10.i1551 = bitcast %union.anon* %13845 to i64*
  %13846 = load i64, i64* %R9.i1550
  %13847 = load i64, i64* %R10.i1551
  %13848 = load i64, i64* %PC.i1549
  %13849 = add i64 %13848, 3
  store i64 %13849, i64* %PC.i1549
  %13850 = add i64 %13847, %13846
  store i64 %13850, i64* %R9.i1550, align 8
  %13851 = icmp ult i64 %13850, %13846
  %13852 = icmp ult i64 %13850, %13847
  %13853 = or i1 %13851, %13852
  %13854 = zext i1 %13853 to i8
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13854, i8* %13855, align 1
  %13856 = trunc i64 %13850 to i32
  %13857 = and i32 %13856, 255
  %13858 = call i32 @llvm.ctpop.i32(i32 %13857)
  %13859 = trunc i32 %13858 to i8
  %13860 = and i8 %13859, 1
  %13861 = xor i8 %13860, 1
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13861, i8* %13862, align 1
  %13863 = xor i64 %13847, %13846
  %13864 = xor i64 %13863, %13850
  %13865 = lshr i64 %13864, 4
  %13866 = trunc i64 %13865 to i8
  %13867 = and i8 %13866, 1
  %13868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13867, i8* %13868, align 1
  %13869 = icmp eq i64 %13850, 0
  %13870 = zext i1 %13869 to i8
  %13871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13870, i8* %13871, align 1
  %13872 = lshr i64 %13850, 63
  %13873 = trunc i64 %13872 to i8
  %13874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13873, i8* %13874, align 1
  %13875 = lshr i64 %13846, 63
  %13876 = lshr i64 %13847, 63
  %13877 = xor i64 %13872, %13875
  %13878 = xor i64 %13872, %13876
  %13879 = add i64 %13877, %13878
  %13880 = icmp eq i64 %13879, 2
  %13881 = zext i1 %13880 to i8
  %13882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13881, i8* %13882, align 1
  store %struct.Memory* %loadMem_40c7da, %struct.Memory** %MEMORY
  %loadMem_40c7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13884 = getelementptr inbounds %struct.GPR, %struct.GPR* %13883, i32 0, i32 33
  %13885 = getelementptr inbounds %struct.Reg, %struct.Reg* %13884, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %13885 to i64*
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13887 = getelementptr inbounds %struct.GPR, %struct.GPR* %13886, i32 0, i32 15
  %13888 = getelementptr inbounds %struct.Reg, %struct.Reg* %13887, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %13888 to i64*
  %13889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13890 = getelementptr inbounds %struct.GPR, %struct.GPR* %13889, i32 0, i32 21
  %13891 = getelementptr inbounds %struct.Reg, %struct.Reg* %13890, i32 0, i32 0
  %R10.i1548 = bitcast %union.anon* %13891 to i64*
  %13892 = load i64, i64* %RBP.i1547
  %13893 = sub i64 %13892, 24
  %13894 = load i64, i64* %PC.i1546
  %13895 = add i64 %13894, 4
  store i64 %13895, i64* %PC.i1546
  %13896 = inttoptr i64 %13893 to i32*
  %13897 = load i32, i32* %13896
  %13898 = sext i32 %13897 to i64
  store i64 %13898, i64* %R10.i1548, align 8
  store %struct.Memory* %loadMem_40c7dd, %struct.Memory** %MEMORY
  %loadMem_40c7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13900 = getelementptr inbounds %struct.GPR, %struct.GPR* %13899, i32 0, i32 33
  %13901 = getelementptr inbounds %struct.Reg, %struct.Reg* %13900, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %13901 to i64*
  %13902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13903 = getelementptr inbounds %struct.GPR, %struct.GPR* %13902, i32 0, i32 1
  %13904 = getelementptr inbounds %struct.Reg, %struct.Reg* %13903, i32 0, i32 0
  %RAX.i1543 = bitcast %union.anon* %13904 to i64*
  %13905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13906 = getelementptr inbounds %struct.GPR, %struct.GPR* %13905, i32 0, i32 19
  %13907 = getelementptr inbounds %struct.Reg, %struct.Reg* %13906, i32 0, i32 0
  %R9.i1544 = bitcast %union.anon* %13907 to i64*
  %13908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13909 = getelementptr inbounds %struct.GPR, %struct.GPR* %13908, i32 0, i32 21
  %13910 = getelementptr inbounds %struct.Reg, %struct.Reg* %13909, i32 0, i32 0
  %R10.i1545 = bitcast %union.anon* %13910 to i64*
  %13911 = load i64, i64* %R9.i1544
  %13912 = load i64, i64* %R10.i1545
  %13913 = mul i64 %13912, 4
  %13914 = add i64 %13913, %13911
  %13915 = load i64, i64* %PC.i1542
  %13916 = add i64 %13915, 4
  store i64 %13916, i64* %PC.i1542
  %13917 = inttoptr i64 %13914 to i32*
  %13918 = load i32, i32* %13917
  %13919 = zext i32 %13918 to i64
  store i64 %13919, i64* %RAX.i1543, align 8
  store %struct.Memory* %loadMem_40c7e1, %struct.Memory** %MEMORY
  %loadMem_40c7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13921 = getelementptr inbounds %struct.GPR, %struct.GPR* %13920, i32 0, i32 33
  %13922 = getelementptr inbounds %struct.Reg, %struct.Reg* %13921, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %13922 to i64*
  %13923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13924 = getelementptr inbounds %struct.GPR, %struct.GPR* %13923, i32 0, i32 15
  %13925 = getelementptr inbounds %struct.Reg, %struct.Reg* %13924, i32 0, i32 0
  %RBP.i1540 = bitcast %union.anon* %13925 to i64*
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13927 = getelementptr inbounds %struct.GPR, %struct.GPR* %13926, i32 0, i32 19
  %13928 = getelementptr inbounds %struct.Reg, %struct.Reg* %13927, i32 0, i32 0
  %R9.i1541 = bitcast %union.anon* %13928 to i64*
  %13929 = load i64, i64* %RBP.i1540
  %13930 = sub i64 %13929, 20
  %13931 = load i64, i64* %PC.i1539
  %13932 = add i64 %13931, 4
  store i64 %13932, i64* %PC.i1539
  %13933 = inttoptr i64 %13930 to i32*
  %13934 = load i32, i32* %13933
  %13935 = sext i32 %13934 to i64
  store i64 %13935, i64* %R9.i1541, align 8
  store %struct.Memory* %loadMem_40c7e5, %struct.Memory** %MEMORY
  %loadMem_40c7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13937 = getelementptr inbounds %struct.GPR, %struct.GPR* %13936, i32 0, i32 33
  %13938 = getelementptr inbounds %struct.Reg, %struct.Reg* %13937, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %13938 to i64*
  %13939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13940 = getelementptr inbounds %struct.GPR, %struct.GPR* %13939, i32 0, i32 19
  %13941 = getelementptr inbounds %struct.Reg, %struct.Reg* %13940, i32 0, i32 0
  %R9.i1538 = bitcast %union.anon* %13941 to i64*
  %13942 = load i64, i64* %R9.i1538
  %13943 = load i64, i64* %PC.i1537
  %13944 = add i64 %13943, 4
  store i64 %13944, i64* %PC.i1537
  %13945 = shl i64 %13942, 3
  %13946 = icmp slt i64 %13945, 0
  %13947 = shl i64 %13945, 1
  store i64 %13947, i64* %R9.i1538, align 8
  %13948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13949 = zext i1 %13946 to i8
  store i8 %13949, i8* %13948, align 1
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13951 = trunc i64 %13947 to i32
  %13952 = and i32 %13951, 254
  %13953 = call i32 @llvm.ctpop.i32(i32 %13952)
  %13954 = trunc i32 %13953 to i8
  %13955 = and i8 %13954, 1
  %13956 = xor i8 %13955, 1
  store i8 %13956, i8* %13950, align 1
  %13957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13957, align 1
  %13958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13959 = icmp eq i64 %13947, 0
  %13960 = zext i1 %13959 to i8
  store i8 %13960, i8* %13958, align 1
  %13961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13962 = lshr i64 %13947, 63
  %13963 = trunc i64 %13962 to i8
  store i8 %13963, i8* %13961, align 1
  %13964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13964, align 1
  store %struct.Memory* %loadMem_40c7e9, %struct.Memory** %MEMORY
  %loadMem_40c7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %13965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13966 = getelementptr inbounds %struct.GPR, %struct.GPR* %13965, i32 0, i32 33
  %13967 = getelementptr inbounds %struct.Reg, %struct.Reg* %13966, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %13967 to i64*
  %13968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13969 = getelementptr inbounds %struct.GPR, %struct.GPR* %13968, i32 0, i32 17
  %13970 = getelementptr inbounds %struct.Reg, %struct.Reg* %13969, i32 0, i32 0
  %R8.i1535 = bitcast %union.anon* %13970 to i64*
  %13971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13972 = getelementptr inbounds %struct.GPR, %struct.GPR* %13971, i32 0, i32 19
  %13973 = getelementptr inbounds %struct.Reg, %struct.Reg* %13972, i32 0, i32 0
  %R9.i1536 = bitcast %union.anon* %13973 to i64*
  %13974 = load i64, i64* %R8.i1535
  %13975 = load i64, i64* %R9.i1536
  %13976 = load i64, i64* %PC.i1534
  %13977 = add i64 %13976, 3
  store i64 %13977, i64* %PC.i1534
  %13978 = add i64 %13975, %13974
  store i64 %13978, i64* %R8.i1535, align 8
  %13979 = icmp ult i64 %13978, %13974
  %13980 = icmp ult i64 %13978, %13975
  %13981 = or i1 %13979, %13980
  %13982 = zext i1 %13981 to i8
  %13983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13982, i8* %13983, align 1
  %13984 = trunc i64 %13978 to i32
  %13985 = and i32 %13984, 255
  %13986 = call i32 @llvm.ctpop.i32(i32 %13985)
  %13987 = trunc i32 %13986 to i8
  %13988 = and i8 %13987, 1
  %13989 = xor i8 %13988, 1
  %13990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13989, i8* %13990, align 1
  %13991 = xor i64 %13975, %13974
  %13992 = xor i64 %13991, %13978
  %13993 = lshr i64 %13992, 4
  %13994 = trunc i64 %13993 to i8
  %13995 = and i8 %13994, 1
  %13996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13995, i8* %13996, align 1
  %13997 = icmp eq i64 %13978, 0
  %13998 = zext i1 %13997 to i8
  %13999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13998, i8* %13999, align 1
  %14000 = lshr i64 %13978, 63
  %14001 = trunc i64 %14000 to i8
  %14002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14001, i8* %14002, align 1
  %14003 = lshr i64 %13974, 63
  %14004 = lshr i64 %13975, 63
  %14005 = xor i64 %14000, %14003
  %14006 = xor i64 %14000, %14004
  %14007 = add i64 %14005, %14006
  %14008 = icmp eq i64 %14007, 2
  %14009 = zext i1 %14008 to i8
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14009, i8* %14010, align 1
  store %struct.Memory* %loadMem_40c7ed, %struct.Memory** %MEMORY
  %loadMem_40c7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14012 = getelementptr inbounds %struct.GPR, %struct.GPR* %14011, i32 0, i32 33
  %14013 = getelementptr inbounds %struct.Reg, %struct.Reg* %14012, i32 0, i32 0
  %PC.i1531 = bitcast %union.anon* %14013 to i64*
  %14014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14015 = getelementptr inbounds %struct.GPR, %struct.GPR* %14014, i32 0, i32 15
  %14016 = getelementptr inbounds %struct.Reg, %struct.Reg* %14015, i32 0, i32 0
  %RBP.i1532 = bitcast %union.anon* %14016 to i64*
  %14017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14018 = getelementptr inbounds %struct.GPR, %struct.GPR* %14017, i32 0, i32 19
  %14019 = getelementptr inbounds %struct.Reg, %struct.Reg* %14018, i32 0, i32 0
  %R9.i1533 = bitcast %union.anon* %14019 to i64*
  %14020 = load i64, i64* %RBP.i1532
  %14021 = sub i64 %14020, 24
  %14022 = load i64, i64* %PC.i1531
  %14023 = add i64 %14022, 4
  store i64 %14023, i64* %PC.i1531
  %14024 = inttoptr i64 %14021 to i32*
  %14025 = load i32, i32* %14024
  %14026 = sext i32 %14025 to i64
  store i64 %14026, i64* %R9.i1533, align 8
  store %struct.Memory* %loadMem_40c7f0, %struct.Memory** %MEMORY
  %loadMem_40c7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14028 = getelementptr inbounds %struct.GPR, %struct.GPR* %14027, i32 0, i32 33
  %14029 = getelementptr inbounds %struct.Reg, %struct.Reg* %14028, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %14029 to i64*
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14031 = getelementptr inbounds %struct.GPR, %struct.GPR* %14030, i32 0, i32 1
  %14032 = getelementptr inbounds %struct.Reg, %struct.Reg* %14031, i32 0, i32 0
  %RAX.i1528 = bitcast %union.anon* %14032 to i64*
  %14033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14034 = getelementptr inbounds %struct.GPR, %struct.GPR* %14033, i32 0, i32 17
  %14035 = getelementptr inbounds %struct.Reg, %struct.Reg* %14034, i32 0, i32 0
  %R8.i1529 = bitcast %union.anon* %14035 to i64*
  %14036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14037 = getelementptr inbounds %struct.GPR, %struct.GPR* %14036, i32 0, i32 19
  %14038 = getelementptr inbounds %struct.Reg, %struct.Reg* %14037, i32 0, i32 0
  %R9.i1530 = bitcast %union.anon* %14038 to i64*
  %14039 = load i64, i64* %RAX.i1528
  %14040 = load i64, i64* %R8.i1529
  %14041 = load i64, i64* %R9.i1530
  %14042 = mul i64 %14041, 4
  %14043 = add i64 %14042, %14040
  %14044 = load i64, i64* %PC.i1527
  %14045 = add i64 %14044, 4
  store i64 %14045, i64* %PC.i1527
  %14046 = trunc i64 %14039 to i32
  %14047 = inttoptr i64 %14043 to i32*
  %14048 = load i32, i32* %14047
  %14049 = sub i32 %14046, %14048
  %14050 = zext i32 %14049 to i64
  store i64 %14050, i64* %RAX.i1528, align 8
  %14051 = icmp ult i32 %14046, %14048
  %14052 = zext i1 %14051 to i8
  %14053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14052, i8* %14053, align 1
  %14054 = and i32 %14049, 255
  %14055 = call i32 @llvm.ctpop.i32(i32 %14054)
  %14056 = trunc i32 %14055 to i8
  %14057 = and i8 %14056, 1
  %14058 = xor i8 %14057, 1
  %14059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14058, i8* %14059, align 1
  %14060 = xor i32 %14048, %14046
  %14061 = xor i32 %14060, %14049
  %14062 = lshr i32 %14061, 4
  %14063 = trunc i32 %14062 to i8
  %14064 = and i8 %14063, 1
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14064, i8* %14065, align 1
  %14066 = icmp eq i32 %14049, 0
  %14067 = zext i1 %14066 to i8
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14067, i8* %14068, align 1
  %14069 = lshr i32 %14049, 31
  %14070 = trunc i32 %14069 to i8
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14070, i8* %14071, align 1
  %14072 = lshr i32 %14046, 31
  %14073 = lshr i32 %14048, 31
  %14074 = xor i32 %14073, %14072
  %14075 = xor i32 %14069, %14072
  %14076 = add i32 %14075, %14074
  %14077 = icmp eq i32 %14076, 2
  %14078 = zext i1 %14077 to i8
  %14079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14078, i8* %14079, align 1
  store %struct.Memory* %loadMem_40c7f4, %struct.Memory** %MEMORY
  %loadMem_40c7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14081 = getelementptr inbounds %struct.GPR, %struct.GPR* %14080, i32 0, i32 33
  %14082 = getelementptr inbounds %struct.Reg, %struct.Reg* %14081, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %14082 to i64*
  %14083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14084 = getelementptr inbounds %struct.GPR, %struct.GPR* %14083, i32 0, i32 1
  %14085 = getelementptr inbounds %struct.Reg, %struct.Reg* %14084, i32 0, i32 0
  %EAX.i1525 = bitcast %union.anon* %14085 to i32*
  %14086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14087 = getelementptr inbounds %struct.GPR, %struct.GPR* %14086, i32 0, i32 15
  %14088 = getelementptr inbounds %struct.Reg, %struct.Reg* %14087, i32 0, i32 0
  %RBP.i1526 = bitcast %union.anon* %14088 to i64*
  %14089 = load i64, i64* %RBP.i1526
  %14090 = sub i64 %14089, 256
  %14091 = load i32, i32* %EAX.i1525
  %14092 = zext i32 %14091 to i64
  %14093 = load i64, i64* %PC.i1524
  %14094 = add i64 %14093, 6
  store i64 %14094, i64* %PC.i1524
  %14095 = inttoptr i64 %14090 to i32*
  store i32 %14091, i32* %14095
  store %struct.Memory* %loadMem_40c7f8, %struct.Memory** %MEMORY
  %loadMem_40c7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %14096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14097 = getelementptr inbounds %struct.GPR, %struct.GPR* %14096, i32 0, i32 33
  %14098 = getelementptr inbounds %struct.Reg, %struct.Reg* %14097, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %14098 to i64*
  %14099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14100 = getelementptr inbounds %struct.GPR, %struct.GPR* %14099, i32 0, i32 11
  %14101 = getelementptr inbounds %struct.Reg, %struct.Reg* %14100, i32 0, i32 0
  %RDI.i1522 = bitcast %union.anon* %14101 to i64*
  %14102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14103 = getelementptr inbounds %struct.GPR, %struct.GPR* %14102, i32 0, i32 15
  %14104 = getelementptr inbounds %struct.Reg, %struct.Reg* %14103, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %14104 to i64*
  %14105 = load i64, i64* %RBP.i1523
  %14106 = sub i64 %14105, 256
  %14107 = load i64, i64* %PC.i1521
  %14108 = add i64 %14107, 6
  store i64 %14108, i64* %PC.i1521
  %14109 = inttoptr i64 %14106 to i32*
  %14110 = load i32, i32* %14109
  %14111 = zext i32 %14110 to i64
  store i64 %14111, i64* %RDI.i1522, align 8
  store %struct.Memory* %loadMem_40c7fe, %struct.Memory** %MEMORY
  %loadMem1_40c804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14113 = getelementptr inbounds %struct.GPR, %struct.GPR* %14112, i32 0, i32 33
  %14114 = getelementptr inbounds %struct.Reg, %struct.Reg* %14113, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %14114 to i64*
  %14115 = load i64, i64* %PC.i1520
  %14116 = add i64 %14115, -47108
  %14117 = load i64, i64* %PC.i1520
  %14118 = add i64 %14117, 5
  %14119 = load i64, i64* %PC.i1520
  %14120 = add i64 %14119, 5
  store i64 %14120, i64* %PC.i1520
  %14121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14122 = load i64, i64* %14121, align 8
  %14123 = add i64 %14122, -8
  %14124 = inttoptr i64 %14123 to i64*
  store i64 %14118, i64* %14124
  store i64 %14123, i64* %14121, align 8
  %14125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14116, i64* %14125, align 8
  store %struct.Memory* %loadMem1_40c804, %struct.Memory** %MEMORY
  %loadMem2_40c804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c804 = load i64, i64* %3
  %14126 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40c804)
  store %struct.Memory* %14126, %struct.Memory** %MEMORY
  %loadMem_40c809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14128 = getelementptr inbounds %struct.GPR, %struct.GPR* %14127, i32 0, i32 33
  %14129 = getelementptr inbounds %struct.Reg, %struct.Reg* %14128, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %14129 to i64*
  %14130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14131 = getelementptr inbounds %struct.GPR, %struct.GPR* %14130, i32 0, i32 17
  %14132 = getelementptr inbounds %struct.Reg, %struct.Reg* %14131, i32 0, i32 0
  %R8.i1517 = bitcast %union.anon* %14132 to i64*
  %14133 = load i64, i64* %PC.i1516
  %14134 = add i64 %14133, 10
  store i64 %14134, i64* %PC.i1516
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %R8.i1517, align 8
  store %struct.Memory* %loadMem_40c809, %struct.Memory** %MEMORY
  %loadMem_40c813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14136 = getelementptr inbounds %struct.GPR, %struct.GPR* %14135, i32 0, i32 33
  %14137 = getelementptr inbounds %struct.Reg, %struct.Reg* %14136, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %14137 to i64*
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14139 = getelementptr inbounds %struct.GPR, %struct.GPR* %14138, i32 0, i32 15
  %14140 = getelementptr inbounds %struct.Reg, %struct.Reg* %14139, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %14140 to i64*
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14142 = getelementptr inbounds %struct.GPR, %struct.GPR* %14141, i32 0, i32 19
  %14143 = getelementptr inbounds %struct.Reg, %struct.Reg* %14142, i32 0, i32 0
  %R9.i1515 = bitcast %union.anon* %14143 to i64*
  %14144 = load i64, i64* %RBP.i1514
  %14145 = sub i64 %14144, 192
  %14146 = load i64, i64* %PC.i1513
  %14147 = add i64 %14146, 7
  store i64 %14147, i64* %PC.i1513
  %14148 = inttoptr i64 %14145 to i32*
  %14149 = load i32, i32* %14148
  %14150 = sext i32 %14149 to i64
  store i64 %14150, i64* %R9.i1515, align 8
  store %struct.Memory* %loadMem_40c813, %struct.Memory** %MEMORY
  %loadMem_40c81a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14152 = getelementptr inbounds %struct.GPR, %struct.GPR* %14151, i32 0, i32 33
  %14153 = getelementptr inbounds %struct.Reg, %struct.Reg* %14152, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %14153 to i64*
  %14154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14155 = getelementptr inbounds %struct.GPR, %struct.GPR* %14154, i32 0, i32 19
  %14156 = getelementptr inbounds %struct.Reg, %struct.Reg* %14155, i32 0, i32 0
  %R9.i1512 = bitcast %union.anon* %14156 to i64*
  %14157 = load i64, i64* %R9.i1512
  %14158 = load i64, i64* %PC.i1511
  %14159 = add i64 %14158, 4
  store i64 %14159, i64* %PC.i1511
  %14160 = shl i64 %14157, 5
  %14161 = icmp slt i64 %14160, 0
  %14162 = shl i64 %14160, 1
  store i64 %14162, i64* %R9.i1512, align 8
  %14163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14164 = zext i1 %14161 to i8
  store i8 %14164, i8* %14163, align 1
  %14165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14166 = trunc i64 %14162 to i32
  %14167 = and i32 %14166, 254
  %14168 = call i32 @llvm.ctpop.i32(i32 %14167)
  %14169 = trunc i32 %14168 to i8
  %14170 = and i8 %14169, 1
  %14171 = xor i8 %14170, 1
  store i8 %14171, i8* %14165, align 1
  %14172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14172, align 1
  %14173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14174 = icmp eq i64 %14162, 0
  %14175 = zext i1 %14174 to i8
  store i8 %14175, i8* %14173, align 1
  %14176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14177 = lshr i64 %14162, 63
  %14178 = trunc i64 %14177 to i8
  store i8 %14178, i8* %14176, align 1
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14179, align 1
  store %struct.Memory* %loadMem_40c81a, %struct.Memory** %MEMORY
  %loadMem_40c81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14181 = getelementptr inbounds %struct.GPR, %struct.GPR* %14180, i32 0, i32 33
  %14182 = getelementptr inbounds %struct.Reg, %struct.Reg* %14181, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %14182 to i64*
  %14183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14184 = getelementptr inbounds %struct.GPR, %struct.GPR* %14183, i32 0, i32 17
  %14185 = getelementptr inbounds %struct.Reg, %struct.Reg* %14184, i32 0, i32 0
  %R8.i1509 = bitcast %union.anon* %14185 to i64*
  %14186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14187 = getelementptr inbounds %struct.GPR, %struct.GPR* %14186, i32 0, i32 19
  %14188 = getelementptr inbounds %struct.Reg, %struct.Reg* %14187, i32 0, i32 0
  %R9.i1510 = bitcast %union.anon* %14188 to i64*
  %14189 = load i64, i64* %R8.i1509
  %14190 = load i64, i64* %R9.i1510
  %14191 = load i64, i64* %PC.i1508
  %14192 = add i64 %14191, 3
  store i64 %14192, i64* %PC.i1508
  %14193 = add i64 %14190, %14189
  store i64 %14193, i64* %R8.i1509, align 8
  %14194 = icmp ult i64 %14193, %14189
  %14195 = icmp ult i64 %14193, %14190
  %14196 = or i1 %14194, %14195
  %14197 = zext i1 %14196 to i8
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14197, i8* %14198, align 1
  %14199 = trunc i64 %14193 to i32
  %14200 = and i32 %14199, 255
  %14201 = call i32 @llvm.ctpop.i32(i32 %14200)
  %14202 = trunc i32 %14201 to i8
  %14203 = and i8 %14202, 1
  %14204 = xor i8 %14203, 1
  %14205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14204, i8* %14205, align 1
  %14206 = xor i64 %14190, %14189
  %14207 = xor i64 %14206, %14193
  %14208 = lshr i64 %14207, 4
  %14209 = trunc i64 %14208 to i8
  %14210 = and i8 %14209, 1
  %14211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14210, i8* %14211, align 1
  %14212 = icmp eq i64 %14193, 0
  %14213 = zext i1 %14212 to i8
  %14214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14213, i8* %14214, align 1
  %14215 = lshr i64 %14193, 63
  %14216 = trunc i64 %14215 to i8
  %14217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14216, i8* %14217, align 1
  %14218 = lshr i64 %14189, 63
  %14219 = lshr i64 %14190, 63
  %14220 = xor i64 %14215, %14218
  %14221 = xor i64 %14215, %14219
  %14222 = add i64 %14220, %14221
  %14223 = icmp eq i64 %14222, 2
  %14224 = zext i1 %14223 to i8
  %14225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14224, i8* %14225, align 1
  store %struct.Memory* %loadMem_40c81e, %struct.Memory** %MEMORY
  %loadMem_40c821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14227 = getelementptr inbounds %struct.GPR, %struct.GPR* %14226, i32 0, i32 33
  %14228 = getelementptr inbounds %struct.Reg, %struct.Reg* %14227, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %14228 to i64*
  %14229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14230 = getelementptr inbounds %struct.GPR, %struct.GPR* %14229, i32 0, i32 15
  %14231 = getelementptr inbounds %struct.Reg, %struct.Reg* %14230, i32 0, i32 0
  %RBP.i1506 = bitcast %union.anon* %14231 to i64*
  %14232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14233 = getelementptr inbounds %struct.GPR, %struct.GPR* %14232, i32 0, i32 19
  %14234 = getelementptr inbounds %struct.Reg, %struct.Reg* %14233, i32 0, i32 0
  %R9.i1507 = bitcast %union.anon* %14234 to i64*
  %14235 = load i64, i64* %RBP.i1506
  %14236 = sub i64 %14235, 20
  %14237 = load i64, i64* %PC.i1505
  %14238 = add i64 %14237, 4
  store i64 %14238, i64* %PC.i1505
  %14239 = inttoptr i64 %14236 to i32*
  %14240 = load i32, i32* %14239
  %14241 = sext i32 %14240 to i64
  store i64 %14241, i64* %R9.i1507, align 8
  store %struct.Memory* %loadMem_40c821, %struct.Memory** %MEMORY
  %loadMem_40c825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14243 = getelementptr inbounds %struct.GPR, %struct.GPR* %14242, i32 0, i32 33
  %14244 = getelementptr inbounds %struct.Reg, %struct.Reg* %14243, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %14244 to i64*
  %14245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14246 = getelementptr inbounds %struct.GPR, %struct.GPR* %14245, i32 0, i32 19
  %14247 = getelementptr inbounds %struct.Reg, %struct.Reg* %14246, i32 0, i32 0
  %R9.i1504 = bitcast %union.anon* %14247 to i64*
  %14248 = load i64, i64* %R9.i1504
  %14249 = load i64, i64* %PC.i1503
  %14250 = add i64 %14249, 4
  store i64 %14250, i64* %PC.i1503
  %14251 = shl i64 %14248, 3
  %14252 = icmp slt i64 %14251, 0
  %14253 = shl i64 %14251, 1
  store i64 %14253, i64* %R9.i1504, align 8
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14255 = zext i1 %14252 to i8
  store i8 %14255, i8* %14254, align 1
  %14256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14257 = trunc i64 %14253 to i32
  %14258 = and i32 %14257, 254
  %14259 = call i32 @llvm.ctpop.i32(i32 %14258)
  %14260 = trunc i32 %14259 to i8
  %14261 = and i8 %14260, 1
  %14262 = xor i8 %14261, 1
  store i8 %14262, i8* %14256, align 1
  %14263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14263, align 1
  %14264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14265 = icmp eq i64 %14253, 0
  %14266 = zext i1 %14265 to i8
  store i8 %14266, i8* %14264, align 1
  %14267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14268 = lshr i64 %14253, 63
  %14269 = trunc i64 %14268 to i8
  store i8 %14269, i8* %14267, align 1
  %14270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14270, align 1
  store %struct.Memory* %loadMem_40c825, %struct.Memory** %MEMORY
  %loadMem_40c829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14272 = getelementptr inbounds %struct.GPR, %struct.GPR* %14271, i32 0, i32 33
  %14273 = getelementptr inbounds %struct.Reg, %struct.Reg* %14272, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %14273 to i64*
  %14274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14275 = getelementptr inbounds %struct.GPR, %struct.GPR* %14274, i32 0, i32 17
  %14276 = getelementptr inbounds %struct.Reg, %struct.Reg* %14275, i32 0, i32 0
  %R8.i1501 = bitcast %union.anon* %14276 to i64*
  %14277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14278 = getelementptr inbounds %struct.GPR, %struct.GPR* %14277, i32 0, i32 19
  %14279 = getelementptr inbounds %struct.Reg, %struct.Reg* %14278, i32 0, i32 0
  %R9.i1502 = bitcast %union.anon* %14279 to i64*
  %14280 = load i64, i64* %R8.i1501
  %14281 = load i64, i64* %R9.i1502
  %14282 = load i64, i64* %PC.i1500
  %14283 = add i64 %14282, 3
  store i64 %14283, i64* %PC.i1500
  %14284 = add i64 %14281, %14280
  store i64 %14284, i64* %R8.i1501, align 8
  %14285 = icmp ult i64 %14284, %14280
  %14286 = icmp ult i64 %14284, %14281
  %14287 = or i1 %14285, %14286
  %14288 = zext i1 %14287 to i8
  %14289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14288, i8* %14289, align 1
  %14290 = trunc i64 %14284 to i32
  %14291 = and i32 %14290, 255
  %14292 = call i32 @llvm.ctpop.i32(i32 %14291)
  %14293 = trunc i32 %14292 to i8
  %14294 = and i8 %14293, 1
  %14295 = xor i8 %14294, 1
  %14296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14295, i8* %14296, align 1
  %14297 = xor i64 %14281, %14280
  %14298 = xor i64 %14297, %14284
  %14299 = lshr i64 %14298, 4
  %14300 = trunc i64 %14299 to i8
  %14301 = and i8 %14300, 1
  %14302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14301, i8* %14302, align 1
  %14303 = icmp eq i64 %14284, 0
  %14304 = zext i1 %14303 to i8
  %14305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14304, i8* %14305, align 1
  %14306 = lshr i64 %14284, 63
  %14307 = trunc i64 %14306 to i8
  %14308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14307, i8* %14308, align 1
  %14309 = lshr i64 %14280, 63
  %14310 = lshr i64 %14281, 63
  %14311 = xor i64 %14306, %14309
  %14312 = xor i64 %14306, %14310
  %14313 = add i64 %14311, %14312
  %14314 = icmp eq i64 %14313, 2
  %14315 = zext i1 %14314 to i8
  %14316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14315, i8* %14316, align 1
  store %struct.Memory* %loadMem_40c829, %struct.Memory** %MEMORY
  %loadMem_40c82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14318 = getelementptr inbounds %struct.GPR, %struct.GPR* %14317, i32 0, i32 33
  %14319 = getelementptr inbounds %struct.Reg, %struct.Reg* %14318, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %14319 to i64*
  %14320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14321 = getelementptr inbounds %struct.GPR, %struct.GPR* %14320, i32 0, i32 15
  %14322 = getelementptr inbounds %struct.Reg, %struct.Reg* %14321, i32 0, i32 0
  %RBP.i1498 = bitcast %union.anon* %14322 to i64*
  %14323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14324 = getelementptr inbounds %struct.GPR, %struct.GPR* %14323, i32 0, i32 19
  %14325 = getelementptr inbounds %struct.Reg, %struct.Reg* %14324, i32 0, i32 0
  %R9.i1499 = bitcast %union.anon* %14325 to i64*
  %14326 = load i64, i64* %RBP.i1498
  %14327 = sub i64 %14326, 24
  %14328 = load i64, i64* %PC.i1497
  %14329 = add i64 %14328, 4
  store i64 %14329, i64* %PC.i1497
  %14330 = inttoptr i64 %14327 to i32*
  %14331 = load i32, i32* %14330
  %14332 = sext i32 %14331 to i64
  store i64 %14332, i64* %R9.i1499, align 8
  store %struct.Memory* %loadMem_40c82c, %struct.Memory** %MEMORY
  %loadMem_40c830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14334 = getelementptr inbounds %struct.GPR, %struct.GPR* %14333, i32 0, i32 33
  %14335 = getelementptr inbounds %struct.Reg, %struct.Reg* %14334, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %14335 to i64*
  %14336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14337 = getelementptr inbounds %struct.GPR, %struct.GPR* %14336, i32 0, i32 1
  %14338 = getelementptr inbounds %struct.Reg, %struct.Reg* %14337, i32 0, i32 0
  %RAX.i1494 = bitcast %union.anon* %14338 to i64*
  %14339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14340 = getelementptr inbounds %struct.GPR, %struct.GPR* %14339, i32 0, i32 17
  %14341 = getelementptr inbounds %struct.Reg, %struct.Reg* %14340, i32 0, i32 0
  %R8.i1495 = bitcast %union.anon* %14341 to i64*
  %14342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14343 = getelementptr inbounds %struct.GPR, %struct.GPR* %14342, i32 0, i32 19
  %14344 = getelementptr inbounds %struct.Reg, %struct.Reg* %14343, i32 0, i32 0
  %R9.i1496 = bitcast %union.anon* %14344 to i64*
  %14345 = load i64, i64* %RAX.i1494
  %14346 = load i64, i64* %R8.i1495
  %14347 = load i64, i64* %R9.i1496
  %14348 = mul i64 %14347, 4
  %14349 = add i64 %14348, %14346
  %14350 = load i64, i64* %PC.i1493
  %14351 = add i64 %14350, 5
  store i64 %14351, i64* %PC.i1493
  %14352 = inttoptr i64 %14349 to i32*
  %14353 = load i32, i32* %14352
  %14354 = shl i64 %14345, 32
  %14355 = ashr exact i64 %14354, 32
  %14356 = sext i32 %14353 to i64
  %14357 = mul i64 %14356, %14355
  %14358 = trunc i64 %14357 to i32
  %14359 = and i64 %14357, 4294967295
  store i64 %14359, i64* %RAX.i1494, align 8
  %14360 = shl i64 %14357, 32
  %14361 = ashr exact i64 %14360, 32
  %14362 = icmp ne i64 %14361, %14357
  %14363 = zext i1 %14362 to i8
  %14364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14363, i8* %14364, align 1
  %14365 = and i32 %14358, 255
  %14366 = call i32 @llvm.ctpop.i32(i32 %14365)
  %14367 = trunc i32 %14366 to i8
  %14368 = and i8 %14367, 1
  %14369 = xor i8 %14368, 1
  %14370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14369, i8* %14370, align 1
  %14371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14371, align 1
  %14372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14372, align 1
  %14373 = lshr i32 %14358, 31
  %14374 = trunc i32 %14373 to i8
  %14375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14374, i8* %14375, align 1
  %14376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14363, i8* %14376, align 1
  store %struct.Memory* %loadMem_40c830, %struct.Memory** %MEMORY
  %loadMem_40c835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14378 = getelementptr inbounds %struct.GPR, %struct.GPR* %14377, i32 0, i32 33
  %14379 = getelementptr inbounds %struct.Reg, %struct.Reg* %14378, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %14379 to i64*
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14381 = getelementptr inbounds %struct.GPR, %struct.GPR* %14380, i32 0, i32 1
  %14382 = getelementptr inbounds %struct.Reg, %struct.Reg* %14381, i32 0, i32 0
  %RAX.i1491 = bitcast %union.anon* %14382 to i64*
  %14383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14384 = getelementptr inbounds %struct.GPR, %struct.GPR* %14383, i32 0, i32 15
  %14385 = getelementptr inbounds %struct.Reg, %struct.Reg* %14384, i32 0, i32 0
  %RBP.i1492 = bitcast %union.anon* %14385 to i64*
  %14386 = load i64, i64* %RAX.i1491
  %14387 = load i64, i64* %RBP.i1492
  %14388 = sub i64 %14387, 88
  %14389 = load i64, i64* %PC.i1490
  %14390 = add i64 %14389, 3
  store i64 %14390, i64* %PC.i1490
  %14391 = trunc i64 %14386 to i32
  %14392 = inttoptr i64 %14388 to i32*
  %14393 = load i32, i32* %14392
  %14394 = add i32 %14393, %14391
  %14395 = zext i32 %14394 to i64
  store i64 %14395, i64* %RAX.i1491, align 8
  %14396 = icmp ult i32 %14394, %14391
  %14397 = icmp ult i32 %14394, %14393
  %14398 = or i1 %14396, %14397
  %14399 = zext i1 %14398 to i8
  %14400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14399, i8* %14400, align 1
  %14401 = and i32 %14394, 255
  %14402 = call i32 @llvm.ctpop.i32(i32 %14401)
  %14403 = trunc i32 %14402 to i8
  %14404 = and i8 %14403, 1
  %14405 = xor i8 %14404, 1
  %14406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14405, i8* %14406, align 1
  %14407 = xor i32 %14393, %14391
  %14408 = xor i32 %14407, %14394
  %14409 = lshr i32 %14408, 4
  %14410 = trunc i32 %14409 to i8
  %14411 = and i8 %14410, 1
  %14412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14411, i8* %14412, align 1
  %14413 = icmp eq i32 %14394, 0
  %14414 = zext i1 %14413 to i8
  %14415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14414, i8* %14415, align 1
  %14416 = lshr i32 %14394, 31
  %14417 = trunc i32 %14416 to i8
  %14418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14417, i8* %14418, align 1
  %14419 = lshr i32 %14391, 31
  %14420 = lshr i32 %14393, 31
  %14421 = xor i32 %14416, %14419
  %14422 = xor i32 %14416, %14420
  %14423 = add i32 %14421, %14422
  %14424 = icmp eq i32 %14423, 2
  %14425 = zext i1 %14424 to i8
  %14426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14425, i8* %14426, align 1
  store %struct.Memory* %loadMem_40c835, %struct.Memory** %MEMORY
  %loadMem_40c838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14428 = getelementptr inbounds %struct.GPR, %struct.GPR* %14427, i32 0, i32 33
  %14429 = getelementptr inbounds %struct.Reg, %struct.Reg* %14428, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %14429 to i64*
  %14430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14431 = getelementptr inbounds %struct.GPR, %struct.GPR* %14430, i32 0, i32 5
  %14432 = getelementptr inbounds %struct.Reg, %struct.Reg* %14431, i32 0, i32 0
  %RCX.i1488 = bitcast %union.anon* %14432 to i64*
  %14433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14434 = getelementptr inbounds %struct.GPR, %struct.GPR* %14433, i32 0, i32 15
  %14435 = getelementptr inbounds %struct.Reg, %struct.Reg* %14434, i32 0, i32 0
  %RBP.i1489 = bitcast %union.anon* %14435 to i64*
  %14436 = load i64, i64* %RBP.i1489
  %14437 = sub i64 %14436, 196
  %14438 = load i64, i64* %PC.i1487
  %14439 = add i64 %14438, 6
  store i64 %14439, i64* %PC.i1487
  %14440 = inttoptr i64 %14437 to i32*
  %14441 = load i32, i32* %14440
  %14442 = zext i32 %14441 to i64
  store i64 %14442, i64* %RCX.i1488, align 8
  store %struct.Memory* %loadMem_40c838, %struct.Memory** %MEMORY
  %loadMem_40c83e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14444 = getelementptr inbounds %struct.GPR, %struct.GPR* %14443, i32 0, i32 33
  %14445 = getelementptr inbounds %struct.Reg, %struct.Reg* %14444, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %14445 to i64*
  %14446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14447 = getelementptr inbounds %struct.GPR, %struct.GPR* %14446, i32 0, i32 5
  %14448 = getelementptr inbounds %struct.Reg, %struct.Reg* %14447, i32 0, i32 0
  %14449 = bitcast %union.anon* %14448 to %struct.anon.2*
  %CL.i1484 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14449, i32 0, i32 0
  %14450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14451 = getelementptr inbounds %struct.GPR, %struct.GPR* %14450, i32 0, i32 1
  %14452 = getelementptr inbounds %struct.Reg, %struct.Reg* %14451, i32 0, i32 0
  %RAX.i1485 = bitcast %union.anon* %14452 to i64*
  %14453 = load i64, i64* %RAX.i1485
  %14454 = load i8, i8* %CL.i1484
  %14455 = zext i8 %14454 to i64
  %14456 = load i64, i64* %PC.i1483
  %14457 = add i64 %14456, 2
  store i64 %14457, i64* %PC.i1483
  %14458 = trunc i64 %14455 to i5
  switch i5 %14458, label %14462 [
    i5 0, label %routine_sarl__cl___eax.exit1486
    i5 1, label %14459
  ]

; <label>:14459:                                  ; preds = %routine_sarl__cl___eax.exit1567
  %14460 = shl i64 %14453, 32
  %14461 = ashr i64 %14460, 33
  br label %14469

; <label>:14462:                                  ; preds = %routine_sarl__cl___eax.exit1567
  %14463 = and i64 %14455, 31
  %14464 = add i64 %14463, -1
  %14465 = shl i64 %14453, 32
  %14466 = ashr exact i64 %14465, 32
  %14467 = ashr i64 %14466, %14464
  %14468 = lshr i64 %14467, 1
  br label %14469

; <label>:14469:                                  ; preds = %14462, %14459
  %14470 = phi i64 [ %14468, %14462 ], [ %14461, %14459 ]
  %14471 = phi i64 [ %14467, %14462 ], [ %14453, %14459 ]
  %14472 = trunc i64 %14471 to i8
  %14473 = and i8 %14472, 1
  %14474 = trunc i64 %14470 to i32
  %14475 = and i64 %14470, 4294967295
  store i64 %14475, i64* %RAX.i1485, align 8
  %14476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14473, i8* %14476, align 1
  %14477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14478 = and i32 %14474, 255
  %14479 = call i32 @llvm.ctpop.i32(i32 %14478)
  %14480 = trunc i32 %14479 to i8
  %14481 = and i8 %14480, 1
  %14482 = xor i8 %14481, 1
  store i8 %14482, i8* %14477, align 1
  %14483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14483, align 1
  %14484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14485 = icmp eq i32 %14474, 0
  %14486 = zext i1 %14485 to i8
  store i8 %14486, i8* %14484, align 1
  %14487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14488 = lshr i32 %14474, 31
  %14489 = trunc i32 %14488 to i8
  store i8 %14489, i8* %14487, align 1
  %14490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14490, align 1
  br label %routine_sarl__cl___eax.exit1486

routine_sarl__cl___eax.exit1486:                  ; preds = %routine_sarl__cl___eax.exit1567, %14469
  store %struct.Memory* %loadMem_40c83e, %struct.Memory** %MEMORY
  %loadMem_40c840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14492 = getelementptr inbounds %struct.GPR, %struct.GPR* %14491, i32 0, i32 33
  %14493 = getelementptr inbounds %struct.Reg, %struct.Reg* %14492, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %14493 to i64*
  %14494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14495 = getelementptr inbounds %struct.GPR, %struct.GPR* %14494, i32 0, i32 1
  %14496 = getelementptr inbounds %struct.Reg, %struct.Reg* %14495, i32 0, i32 0
  %EAX.i1481 = bitcast %union.anon* %14496 to i32*
  %14497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14498 = getelementptr inbounds %struct.GPR, %struct.GPR* %14497, i32 0, i32 15
  %14499 = getelementptr inbounds %struct.Reg, %struct.Reg* %14498, i32 0, i32 0
  %RBP.i1482 = bitcast %union.anon* %14499 to i64*
  %14500 = load i64, i64* %RBP.i1482
  %14501 = sub i64 %14500, 264
  %14502 = load i32, i32* %EAX.i1481
  %14503 = zext i32 %14502 to i64
  %14504 = load i64, i64* %PC.i1480
  %14505 = add i64 %14504, 6
  store i64 %14505, i64* %PC.i1480
  %14506 = inttoptr i64 %14501 to i32*
  store i32 %14502, i32* %14506
  store %struct.Memory* %loadMem_40c840, %struct.Memory** %MEMORY
  %loadMem_40c846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14508 = getelementptr inbounds %struct.GPR, %struct.GPR* %14507, i32 0, i32 33
  %14509 = getelementptr inbounds %struct.Reg, %struct.Reg* %14508, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %14509 to i64*
  %14510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14511 = getelementptr inbounds %struct.GPR, %struct.GPR* %14510, i32 0, i32 1
  %14512 = getelementptr inbounds %struct.Reg, %struct.Reg* %14511, i32 0, i32 0
  %RAX.i1478 = bitcast %union.anon* %14512 to i64*
  %14513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14514 = getelementptr inbounds %struct.GPR, %struct.GPR* %14513, i32 0, i32 15
  %14515 = getelementptr inbounds %struct.Reg, %struct.Reg* %14514, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %14515 to i64*
  %14516 = load i64, i64* %RBP.i1479
  %14517 = sub i64 %14516, 260
  %14518 = load i64, i64* %PC.i1477
  %14519 = add i64 %14518, 6
  store i64 %14519, i64* %PC.i1477
  %14520 = inttoptr i64 %14517 to i32*
  %14521 = load i32, i32* %14520
  %14522 = zext i32 %14521 to i64
  store i64 %14522, i64* %RAX.i1478, align 8
  store %struct.Memory* %loadMem_40c846, %struct.Memory** %MEMORY
  %loadMem_40c84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14524 = getelementptr inbounds %struct.GPR, %struct.GPR* %14523, i32 0, i32 33
  %14525 = getelementptr inbounds %struct.Reg, %struct.Reg* %14524, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %14525 to i64*
  %14526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14527 = getelementptr inbounds %struct.GPR, %struct.GPR* %14526, i32 0, i32 1
  %14528 = getelementptr inbounds %struct.Reg, %struct.Reg* %14527, i32 0, i32 0
  %EAX.i1475 = bitcast %union.anon* %14528 to i32*
  %14529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14530 = getelementptr inbounds %struct.GPR, %struct.GPR* %14529, i32 0, i32 15
  %14531 = getelementptr inbounds %struct.Reg, %struct.Reg* %14530, i32 0, i32 0
  %RBP.i1476 = bitcast %union.anon* %14531 to i64*
  %14532 = load i32, i32* %EAX.i1475
  %14533 = zext i32 %14532 to i64
  %14534 = load i64, i64* %RBP.i1476
  %14535 = sub i64 %14534, 264
  %14536 = load i64, i64* %PC.i1474
  %14537 = add i64 %14536, 6
  store i64 %14537, i64* %PC.i1474
  %14538 = inttoptr i64 %14535 to i32*
  %14539 = load i32, i32* %14538
  %14540 = sub i32 %14532, %14539
  %14541 = icmp ult i32 %14532, %14539
  %14542 = zext i1 %14541 to i8
  %14543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14542, i8* %14543, align 1
  %14544 = and i32 %14540, 255
  %14545 = call i32 @llvm.ctpop.i32(i32 %14544)
  %14546 = trunc i32 %14545 to i8
  %14547 = and i8 %14546, 1
  %14548 = xor i8 %14547, 1
  %14549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14548, i8* %14549, align 1
  %14550 = xor i32 %14539, %14532
  %14551 = xor i32 %14550, %14540
  %14552 = lshr i32 %14551, 4
  %14553 = trunc i32 %14552 to i8
  %14554 = and i8 %14553, 1
  %14555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14554, i8* %14555, align 1
  %14556 = icmp eq i32 %14540, 0
  %14557 = zext i1 %14556 to i8
  %14558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14557, i8* %14558, align 1
  %14559 = lshr i32 %14540, 31
  %14560 = trunc i32 %14559 to i8
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14560, i8* %14561, align 1
  %14562 = lshr i32 %14532, 31
  %14563 = lshr i32 %14539, 31
  %14564 = xor i32 %14563, %14562
  %14565 = xor i32 %14559, %14562
  %14566 = add i32 %14565, %14564
  %14567 = icmp eq i32 %14566, 2
  %14568 = zext i1 %14567 to i8
  %14569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14568, i8* %14569, align 1
  store %struct.Memory* %loadMem_40c84c, %struct.Memory** %MEMORY
  %loadMem_40c852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14571 = getelementptr inbounds %struct.GPR, %struct.GPR* %14570, i32 0, i32 33
  %14572 = getelementptr inbounds %struct.Reg, %struct.Reg* %14571, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %14572 to i64*
  %14573 = load i64, i64* %PC.i1473
  %14574 = add i64 %14573, 817
  %14575 = load i64, i64* %PC.i1473
  %14576 = add i64 %14575, 6
  %14577 = load i64, i64* %PC.i1473
  %14578 = add i64 %14577, 6
  store i64 %14578, i64* %PC.i1473
  %14579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14580 = load i8, i8* %14579, align 1
  store i8 %14580, i8* %BRANCH_TAKEN, align 1
  %14581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14582 = icmp ne i8 %14580, 0
  %14583 = select i1 %14582, i64 %14574, i64 %14576
  store i64 %14583, i64* %14581, align 8
  store %struct.Memory* %loadMem_40c852, %struct.Memory** %MEMORY
  %loadBr_40c852 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c852 = icmp eq i8 %loadBr_40c852, 1
  br i1 %cmpBr_40c852, label %block_.L_40cb83, label %block_40c858

block_40c858:                                     ; preds = %routine_sarl__cl___eax.exit1486
  %loadMem_40c858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14585 = getelementptr inbounds %struct.GPR, %struct.GPR* %14584, i32 0, i32 33
  %14586 = getelementptr inbounds %struct.Reg, %struct.Reg* %14585, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %14586 to i64*
  %14587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14588 = getelementptr inbounds %struct.GPR, %struct.GPR* %14587, i32 0, i32 15
  %14589 = getelementptr inbounds %struct.Reg, %struct.Reg* %14588, i32 0, i32 0
  %RBP.i1472 = bitcast %union.anon* %14589 to i64*
  %14590 = load i64, i64* %RBP.i1472
  %14591 = sub i64 %14590, 260
  %14592 = load i64, i64* %PC.i1471
  %14593 = add i64 %14592, 7
  store i64 %14593, i64* %PC.i1471
  %14594 = inttoptr i64 %14591 to i32*
  %14595 = load i32, i32* %14594
  %14596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14596, align 1
  %14597 = and i32 %14595, 255
  %14598 = call i32 @llvm.ctpop.i32(i32 %14597)
  %14599 = trunc i32 %14598 to i8
  %14600 = and i8 %14599, 1
  %14601 = xor i8 %14600, 1
  %14602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14601, i8* %14602, align 1
  %14603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14603, align 1
  %14604 = icmp eq i32 %14595, 0
  %14605 = zext i1 %14604 to i8
  %14606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14605, i8* %14606, align 1
  %14607 = lshr i32 %14595, 31
  %14608 = trunc i32 %14607 to i8
  %14609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14608, i8* %14609, align 1
  %14610 = lshr i32 %14595, 31
  %14611 = xor i32 %14607, %14610
  %14612 = add i32 %14611, %14610
  %14613 = icmp eq i32 %14612, 2
  %14614 = zext i1 %14613 to i8
  %14615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14614, i8* %14615, align 1
  store %struct.Memory* %loadMem_40c858, %struct.Memory** %MEMORY
  %loadMem_40c85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14617 = getelementptr inbounds %struct.GPR, %struct.GPR* %14616, i32 0, i32 33
  %14618 = getelementptr inbounds %struct.Reg, %struct.Reg* %14617, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %14618 to i64*
  %14619 = load i64, i64* %PC.i1470
  %14620 = add i64 %14619, 804
  %14621 = load i64, i64* %PC.i1470
  %14622 = add i64 %14621, 6
  %14623 = load i64, i64* %PC.i1470
  %14624 = add i64 %14623, 6
  store i64 %14624, i64* %PC.i1470
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14626 = load i8, i8* %14625, align 1
  store i8 %14626, i8* %BRANCH_TAKEN, align 1
  %14627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14628 = icmp ne i8 %14626, 0
  %14629 = select i1 %14628, i64 %14620, i64 %14622
  store i64 %14629, i64* %14627, align 8
  store %struct.Memory* %loadMem_40c85f, %struct.Memory** %MEMORY
  %loadBr_40c85f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c85f = icmp eq i8 %loadBr_40c85f, 1
  br i1 %cmpBr_40c85f, label %block_.L_40cb83, label %block_40c865

block_40c865:                                     ; preds = %block_40c858
  %loadMem_40c865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14631 = getelementptr inbounds %struct.GPR, %struct.GPR* %14630, i32 0, i32 33
  %14632 = getelementptr inbounds %struct.Reg, %struct.Reg* %14631, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %14632 to i64*
  %14633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14634 = getelementptr inbounds %struct.GPR, %struct.GPR* %14633, i32 0, i32 15
  %14635 = getelementptr inbounds %struct.Reg, %struct.Reg* %14634, i32 0, i32 0
  %RBP.i1469 = bitcast %union.anon* %14635 to i64*
  %14636 = load i64, i64* %RBP.i1469
  %14637 = sub i64 %14636, 264
  %14638 = load i64, i64* %PC.i1468
  %14639 = add i64 %14638, 7
  store i64 %14639, i64* %PC.i1468
  %14640 = inttoptr i64 %14637 to i32*
  %14641 = load i32, i32* %14640
  %14642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14642, align 1
  %14643 = and i32 %14641, 255
  %14644 = call i32 @llvm.ctpop.i32(i32 %14643)
  %14645 = trunc i32 %14644 to i8
  %14646 = and i8 %14645, 1
  %14647 = xor i8 %14646, 1
  %14648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14647, i8* %14648, align 1
  %14649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14649, align 1
  %14650 = icmp eq i32 %14641, 0
  %14651 = zext i1 %14650 to i8
  %14652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14651, i8* %14652, align 1
  %14653 = lshr i32 %14641, 31
  %14654 = trunc i32 %14653 to i8
  %14655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14654, i8* %14655, align 1
  %14656 = lshr i32 %14641, 31
  %14657 = xor i32 %14653, %14656
  %14658 = add i32 %14657, %14656
  %14659 = icmp eq i32 %14658, 2
  %14660 = zext i1 %14659 to i8
  %14661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14660, i8* %14661, align 1
  store %struct.Memory* %loadMem_40c865, %struct.Memory** %MEMORY
  %loadMem_40c86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14663 = getelementptr inbounds %struct.GPR, %struct.GPR* %14662, i32 0, i32 33
  %14664 = getelementptr inbounds %struct.Reg, %struct.Reg* %14663, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %14664 to i64*
  %14665 = load i64, i64* %PC.i1467
  %14666 = add i64 %14665, 791
  %14667 = load i64, i64* %PC.i1467
  %14668 = add i64 %14667, 6
  %14669 = load i64, i64* %PC.i1467
  %14670 = add i64 %14669, 6
  store i64 %14670, i64* %PC.i1467
  %14671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14672 = load i8, i8* %14671, align 1
  store i8 %14672, i8* %BRANCH_TAKEN, align 1
  %14673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14674 = icmp ne i8 %14672, 0
  %14675 = select i1 %14674, i64 %14666, i64 %14668
  store i64 %14675, i64* %14673, align 8
  store %struct.Memory* %loadMem_40c86c, %struct.Memory** %MEMORY
  %loadBr_40c86c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c86c = icmp eq i8 %loadBr_40c86c, 1
  br i1 %cmpBr_40c86c, label %block_.L_40cb83, label %block_40c872

block_40c872:                                     ; preds = %block_40c865
  %loadMem_40c872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14677 = getelementptr inbounds %struct.GPR, %struct.GPR* %14676, i32 0, i32 33
  %14678 = getelementptr inbounds %struct.Reg, %struct.Reg* %14677, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %14678 to i64*
  %14679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14680 = getelementptr inbounds %struct.GPR, %struct.GPR* %14679, i32 0, i32 1
  %14681 = getelementptr inbounds %struct.Reg, %struct.Reg* %14680, i32 0, i32 0
  %RAX.i1466 = bitcast %union.anon* %14681 to i64*
  %14682 = load i64, i64* %PC.i1465
  %14683 = add i64 %14682, 8
  store i64 %14683, i64* %PC.i1465
  %14684 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14684, i64* %RAX.i1466, align 8
  store %struct.Memory* %loadMem_40c872, %struct.Memory** %MEMORY
  %loadMem_40c87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14686 = getelementptr inbounds %struct.GPR, %struct.GPR* %14685, i32 0, i32 33
  %14687 = getelementptr inbounds %struct.Reg, %struct.Reg* %14686, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %14687 to i64*
  %14688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14689 = getelementptr inbounds %struct.GPR, %struct.GPR* %14688, i32 0, i32 1
  %14690 = getelementptr inbounds %struct.Reg, %struct.Reg* %14689, i32 0, i32 0
  %RAX.i1464 = bitcast %union.anon* %14690 to i64*
  %14691 = load i64, i64* %RAX.i1464
  %14692 = load i64, i64* %PC.i1463
  %14693 = add i64 %14692, 6
  store i64 %14693, i64* %PC.i1463
  %14694 = add i64 13112, %14691
  store i64 %14694, i64* %RAX.i1464, align 8
  %14695 = icmp ult i64 %14694, %14691
  %14696 = icmp ult i64 %14694, 13112
  %14697 = or i1 %14695, %14696
  %14698 = zext i1 %14697 to i8
  %14699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14698, i8* %14699, align 1
  %14700 = trunc i64 %14694 to i32
  %14701 = and i32 %14700, 255
  %14702 = call i32 @llvm.ctpop.i32(i32 %14701)
  %14703 = trunc i32 %14702 to i8
  %14704 = and i8 %14703, 1
  %14705 = xor i8 %14704, 1
  %14706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14705, i8* %14706, align 1
  %14707 = xor i64 13112, %14691
  %14708 = xor i64 %14707, %14694
  %14709 = lshr i64 %14708, 4
  %14710 = trunc i64 %14709 to i8
  %14711 = and i8 %14710, 1
  %14712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14711, i8* %14712, align 1
  %14713 = icmp eq i64 %14694, 0
  %14714 = zext i1 %14713 to i8
  %14715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14714, i8* %14715, align 1
  %14716 = lshr i64 %14694, 63
  %14717 = trunc i64 %14716 to i8
  %14718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14717, i8* %14718, align 1
  %14719 = lshr i64 %14691, 63
  %14720 = xor i64 %14716, %14719
  %14721 = add i64 %14720, %14716
  %14722 = icmp eq i64 %14721, 2
  %14723 = zext i1 %14722 to i8
  %14724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14723, i8* %14724, align 1
  store %struct.Memory* %loadMem_40c87a, %struct.Memory** %MEMORY
  %loadMem_40c880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14726 = getelementptr inbounds %struct.GPR, %struct.GPR* %14725, i32 0, i32 33
  %14727 = getelementptr inbounds %struct.Reg, %struct.Reg* %14726, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %14727 to i64*
  %14728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14729 = getelementptr inbounds %struct.GPR, %struct.GPR* %14728, i32 0, i32 5
  %14730 = getelementptr inbounds %struct.Reg, %struct.Reg* %14729, i32 0, i32 0
  %RCX.i1461 = bitcast %union.anon* %14730 to i64*
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14732 = getelementptr inbounds %struct.GPR, %struct.GPR* %14731, i32 0, i32 15
  %14733 = getelementptr inbounds %struct.Reg, %struct.Reg* %14732, i32 0, i32 0
  %RBP.i1462 = bitcast %union.anon* %14733 to i64*
  %14734 = load i64, i64* %RBP.i1462
  %14735 = sub i64 %14734, 20
  %14736 = load i64, i64* %PC.i1460
  %14737 = add i64 %14736, 4
  store i64 %14737, i64* %PC.i1460
  %14738 = inttoptr i64 %14735 to i32*
  %14739 = load i32, i32* %14738
  %14740 = sext i32 %14739 to i64
  store i64 %14740, i64* %RCX.i1461, align 8
  store %struct.Memory* %loadMem_40c880, %struct.Memory** %MEMORY
  %loadMem_40c884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14742 = getelementptr inbounds %struct.GPR, %struct.GPR* %14741, i32 0, i32 33
  %14743 = getelementptr inbounds %struct.Reg, %struct.Reg* %14742, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %14743 to i64*
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14745 = getelementptr inbounds %struct.GPR, %struct.GPR* %14744, i32 0, i32 5
  %14746 = getelementptr inbounds %struct.Reg, %struct.Reg* %14745, i32 0, i32 0
  %RCX.i1459 = bitcast %union.anon* %14746 to i64*
  %14747 = load i64, i64* %RCX.i1459
  %14748 = load i64, i64* %PC.i1458
  %14749 = add i64 %14748, 4
  store i64 %14749, i64* %PC.i1458
  %14750 = shl i64 %14747, 5
  %14751 = icmp slt i64 %14750, 0
  %14752 = shl i64 %14750, 1
  store i64 %14752, i64* %RCX.i1459, align 8
  %14753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14754 = zext i1 %14751 to i8
  store i8 %14754, i8* %14753, align 1
  %14755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14756 = trunc i64 %14752 to i32
  %14757 = and i32 %14756, 254
  %14758 = call i32 @llvm.ctpop.i32(i32 %14757)
  %14759 = trunc i32 %14758 to i8
  %14760 = and i8 %14759, 1
  %14761 = xor i8 %14760, 1
  store i8 %14761, i8* %14755, align 1
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14762, align 1
  %14763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14764 = icmp eq i64 %14752, 0
  %14765 = zext i1 %14764 to i8
  store i8 %14765, i8* %14763, align 1
  %14766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14767 = lshr i64 %14752, 63
  %14768 = trunc i64 %14767 to i8
  store i8 %14768, i8* %14766, align 1
  %14769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14769, align 1
  store %struct.Memory* %loadMem_40c884, %struct.Memory** %MEMORY
  %loadMem_40c888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14771 = getelementptr inbounds %struct.GPR, %struct.GPR* %14770, i32 0, i32 33
  %14772 = getelementptr inbounds %struct.Reg, %struct.Reg* %14771, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %14772 to i64*
  %14773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14774 = getelementptr inbounds %struct.GPR, %struct.GPR* %14773, i32 0, i32 1
  %14775 = getelementptr inbounds %struct.Reg, %struct.Reg* %14774, i32 0, i32 0
  %RAX.i1456 = bitcast %union.anon* %14775 to i64*
  %14776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14777 = getelementptr inbounds %struct.GPR, %struct.GPR* %14776, i32 0, i32 5
  %14778 = getelementptr inbounds %struct.Reg, %struct.Reg* %14777, i32 0, i32 0
  %RCX.i1457 = bitcast %union.anon* %14778 to i64*
  %14779 = load i64, i64* %RAX.i1456
  %14780 = load i64, i64* %RCX.i1457
  %14781 = load i64, i64* %PC.i1455
  %14782 = add i64 %14781, 3
  store i64 %14782, i64* %PC.i1455
  %14783 = add i64 %14780, %14779
  store i64 %14783, i64* %RAX.i1456, align 8
  %14784 = icmp ult i64 %14783, %14779
  %14785 = icmp ult i64 %14783, %14780
  %14786 = or i1 %14784, %14785
  %14787 = zext i1 %14786 to i8
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14787, i8* %14788, align 1
  %14789 = trunc i64 %14783 to i32
  %14790 = and i32 %14789, 255
  %14791 = call i32 @llvm.ctpop.i32(i32 %14790)
  %14792 = trunc i32 %14791 to i8
  %14793 = and i8 %14792, 1
  %14794 = xor i8 %14793, 1
  %14795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14794, i8* %14795, align 1
  %14796 = xor i64 %14780, %14779
  %14797 = xor i64 %14796, %14783
  %14798 = lshr i64 %14797, 4
  %14799 = trunc i64 %14798 to i8
  %14800 = and i8 %14799, 1
  %14801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14800, i8* %14801, align 1
  %14802 = icmp eq i64 %14783, 0
  %14803 = zext i1 %14802 to i8
  %14804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14803, i8* %14804, align 1
  %14805 = lshr i64 %14783, 63
  %14806 = trunc i64 %14805 to i8
  %14807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14806, i8* %14807, align 1
  %14808 = lshr i64 %14779, 63
  %14809 = lshr i64 %14780, 63
  %14810 = xor i64 %14805, %14808
  %14811 = xor i64 %14805, %14809
  %14812 = add i64 %14810, %14811
  %14813 = icmp eq i64 %14812, 2
  %14814 = zext i1 %14813 to i8
  %14815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14814, i8* %14815, align 1
  store %struct.Memory* %loadMem_40c888, %struct.Memory** %MEMORY
  %loadMem_40c88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14817 = getelementptr inbounds %struct.GPR, %struct.GPR* %14816, i32 0, i32 33
  %14818 = getelementptr inbounds %struct.Reg, %struct.Reg* %14817, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %14818 to i64*
  %14819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14820 = getelementptr inbounds %struct.GPR, %struct.GPR* %14819, i32 0, i32 5
  %14821 = getelementptr inbounds %struct.Reg, %struct.Reg* %14820, i32 0, i32 0
  %RCX.i1453 = bitcast %union.anon* %14821 to i64*
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14823 = getelementptr inbounds %struct.GPR, %struct.GPR* %14822, i32 0, i32 15
  %14824 = getelementptr inbounds %struct.Reg, %struct.Reg* %14823, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %14824 to i64*
  %14825 = load i64, i64* %RBP.i1454
  %14826 = sub i64 %14825, 24
  %14827 = load i64, i64* %PC.i1452
  %14828 = add i64 %14827, 4
  store i64 %14828, i64* %PC.i1452
  %14829 = inttoptr i64 %14826 to i32*
  %14830 = load i32, i32* %14829
  %14831 = sext i32 %14830 to i64
  store i64 %14831, i64* %RCX.i1453, align 8
  store %struct.Memory* %loadMem_40c88b, %struct.Memory** %MEMORY
  %loadMem_40c88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14833 = getelementptr inbounds %struct.GPR, %struct.GPR* %14832, i32 0, i32 33
  %14834 = getelementptr inbounds %struct.Reg, %struct.Reg* %14833, i32 0, i32 0
  %PC.i1448 = bitcast %union.anon* %14834 to i64*
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14836 = getelementptr inbounds %struct.GPR, %struct.GPR* %14835, i32 0, i32 1
  %14837 = getelementptr inbounds %struct.Reg, %struct.Reg* %14836, i32 0, i32 0
  %RAX.i1449 = bitcast %union.anon* %14837 to i64*
  %14838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14839 = getelementptr inbounds %struct.GPR, %struct.GPR* %14838, i32 0, i32 5
  %14840 = getelementptr inbounds %struct.Reg, %struct.Reg* %14839, i32 0, i32 0
  %RCX.i1450 = bitcast %union.anon* %14840 to i64*
  %14841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14842 = getelementptr inbounds %struct.GPR, %struct.GPR* %14841, i32 0, i32 7
  %14843 = getelementptr inbounds %struct.Reg, %struct.Reg* %14842, i32 0, i32 0
  %RDX.i1451 = bitcast %union.anon* %14843 to i64*
  %14844 = load i64, i64* %RAX.i1449
  %14845 = load i64, i64* %RCX.i1450
  %14846 = mul i64 %14845, 4
  %14847 = add i64 %14846, %14844
  %14848 = load i64, i64* %PC.i1448
  %14849 = add i64 %14848, 3
  store i64 %14849, i64* %PC.i1448
  %14850 = inttoptr i64 %14847 to i32*
  %14851 = load i32, i32* %14850
  %14852 = zext i32 %14851 to i64
  store i64 %14852, i64* %RDX.i1451, align 8
  store %struct.Memory* %loadMem_40c88f, %struct.Memory** %MEMORY
  %loadMem_40c892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14854 = getelementptr inbounds %struct.GPR, %struct.GPR* %14853, i32 0, i32 33
  %14855 = getelementptr inbounds %struct.Reg, %struct.Reg* %14854, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %14855 to i64*
  %14856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14857 = getelementptr inbounds %struct.GPR, %struct.GPR* %14856, i32 0, i32 11
  %14858 = getelementptr inbounds %struct.Reg, %struct.Reg* %14857, i32 0, i32 0
  %RDI.i1446 = bitcast %union.anon* %14858 to i64*
  %14859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14860 = getelementptr inbounds %struct.GPR, %struct.GPR* %14859, i32 0, i32 15
  %14861 = getelementptr inbounds %struct.Reg, %struct.Reg* %14860, i32 0, i32 0
  %RBP.i1447 = bitcast %union.anon* %14861 to i64*
  %14862 = load i64, i64* %RBP.i1447
  %14863 = sub i64 %14862, 260
  %14864 = load i64, i64* %PC.i1445
  %14865 = add i64 %14864, 6
  store i64 %14865, i64* %PC.i1445
  %14866 = inttoptr i64 %14863 to i32*
  %14867 = load i32, i32* %14866
  %14868 = zext i32 %14867 to i64
  store i64 %14868, i64* %RDI.i1446, align 8
  store %struct.Memory* %loadMem_40c892, %struct.Memory** %MEMORY
  %loadMem_40c898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14870 = getelementptr inbounds %struct.GPR, %struct.GPR* %14869, i32 0, i32 33
  %14871 = getelementptr inbounds %struct.Reg, %struct.Reg* %14870, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %14871 to i64*
  %14872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14873 = getelementptr inbounds %struct.GPR, %struct.GPR* %14872, i32 0, i32 9
  %14874 = getelementptr inbounds %struct.Reg, %struct.Reg* %14873, i32 0, i32 0
  %RSI.i1443 = bitcast %union.anon* %14874 to i64*
  %14875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14876 = getelementptr inbounds %struct.GPR, %struct.GPR* %14875, i32 0, i32 15
  %14877 = getelementptr inbounds %struct.Reg, %struct.Reg* %14876, i32 0, i32 0
  %RBP.i1444 = bitcast %union.anon* %14877 to i64*
  %14878 = load i64, i64* %RBP.i1444
  %14879 = sub i64 %14878, 252
  %14880 = load i64, i64* %PC.i1442
  %14881 = add i64 %14880, 6
  store i64 %14881, i64* %PC.i1442
  %14882 = inttoptr i64 %14879 to i32*
  %14883 = load i32, i32* %14882
  %14884 = zext i32 %14883 to i64
  store i64 %14884, i64* %RSI.i1443, align 8
  store %struct.Memory* %loadMem_40c898, %struct.Memory** %MEMORY
  %loadMem_40c89e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14886 = getelementptr inbounds %struct.GPR, %struct.GPR* %14885, i32 0, i32 33
  %14887 = getelementptr inbounds %struct.Reg, %struct.Reg* %14886, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %14887 to i64*
  %14888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14889 = getelementptr inbounds %struct.GPR, %struct.GPR* %14888, i32 0, i32 7
  %14890 = getelementptr inbounds %struct.Reg, %struct.Reg* %14889, i32 0, i32 0
  %EDX.i1440 = bitcast %union.anon* %14890 to i32*
  %14891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14892 = getelementptr inbounds %struct.GPR, %struct.GPR* %14891, i32 0, i32 15
  %14893 = getelementptr inbounds %struct.Reg, %struct.Reg* %14892, i32 0, i32 0
  %RBP.i1441 = bitcast %union.anon* %14893 to i64*
  %14894 = load i64, i64* %RBP.i1441
  %14895 = sub i64 %14894, 336
  %14896 = load i32, i32* %EDX.i1440
  %14897 = zext i32 %14896 to i64
  %14898 = load i64, i64* %PC.i1439
  %14899 = add i64 %14898, 6
  store i64 %14899, i64* %PC.i1439
  %14900 = inttoptr i64 %14895 to i32*
  store i32 %14896, i32* %14900
  store %struct.Memory* %loadMem_40c89e, %struct.Memory** %MEMORY
  %loadMem1_40c8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14902 = getelementptr inbounds %struct.GPR, %struct.GPR* %14901, i32 0, i32 33
  %14903 = getelementptr inbounds %struct.Reg, %struct.Reg* %14902, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %14903 to i64*
  %14904 = load i64, i64* %PC.i1438
  %14905 = add i64 %14904, 428204
  %14906 = load i64, i64* %PC.i1438
  %14907 = add i64 %14906, 5
  %14908 = load i64, i64* %PC.i1438
  %14909 = add i64 %14908, 5
  store i64 %14909, i64* %PC.i1438
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14911 = load i64, i64* %14910, align 8
  %14912 = add i64 %14911, -8
  %14913 = inttoptr i64 %14912 to i64*
  store i64 %14907, i64* %14913
  store i64 %14912, i64* %14910, align 8
  %14914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14905, i64* %14914, align 8
  store %struct.Memory* %loadMem1_40c8a4, %struct.Memory** %MEMORY
  %loadMem2_40c8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c8a4 = load i64, i64* %3
  %call2_40c8a4 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40c8a4, %struct.Memory* %loadMem2_40c8a4)
  store %struct.Memory* %call2_40c8a4, %struct.Memory** %MEMORY
  %loadMem_40c8a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14916 = getelementptr inbounds %struct.GPR, %struct.GPR* %14915, i32 0, i32 33
  %14917 = getelementptr inbounds %struct.Reg, %struct.Reg* %14916, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %14917 to i64*
  %14918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14919 = getelementptr inbounds %struct.GPR, %struct.GPR* %14918, i32 0, i32 7
  %14920 = getelementptr inbounds %struct.Reg, %struct.Reg* %14919, i32 0, i32 0
  %RDX.i1436 = bitcast %union.anon* %14920 to i64*
  %14921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14922 = getelementptr inbounds %struct.GPR, %struct.GPR* %14921, i32 0, i32 15
  %14923 = getelementptr inbounds %struct.Reg, %struct.Reg* %14922, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %14923 to i64*
  %14924 = load i64, i64* %RBP.i1437
  %14925 = sub i64 %14924, 284
  %14926 = load i64, i64* %PC.i1435
  %14927 = add i64 %14926, 7
  store i64 %14927, i64* %PC.i1435
  store i64 %14925, i64* %RDX.i1436, align 8
  store %struct.Memory* %loadMem_40c8a9, %struct.Memory** %MEMORY
  %loadMem_40c8b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14929 = getelementptr inbounds %struct.GPR, %struct.GPR* %14928, i32 0, i32 33
  %14930 = getelementptr inbounds %struct.Reg, %struct.Reg* %14929, i32 0, i32 0
  %PC.i1432 = bitcast %union.anon* %14930 to i64*
  %14931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14932 = getelementptr inbounds %struct.GPR, %struct.GPR* %14931, i32 0, i32 5
  %14933 = getelementptr inbounds %struct.Reg, %struct.Reg* %14932, i32 0, i32 0
  %RCX.i1433 = bitcast %union.anon* %14933 to i64*
  %14934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14935 = getelementptr inbounds %struct.GPR, %struct.GPR* %14934, i32 0, i32 15
  %14936 = getelementptr inbounds %struct.Reg, %struct.Reg* %14935, i32 0, i32 0
  %RBP.i1434 = bitcast %union.anon* %14936 to i64*
  %14937 = load i64, i64* %RBP.i1434
  %14938 = sub i64 %14937, 288
  %14939 = load i64, i64* %PC.i1432
  %14940 = add i64 %14939, 7
  store i64 %14940, i64* %PC.i1432
  store i64 %14938, i64* %RCX.i1433, align 8
  store %struct.Memory* %loadMem_40c8b0, %struct.Memory** %MEMORY
  %loadMem_40c8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14942 = getelementptr inbounds %struct.GPR, %struct.GPR* %14941, i32 0, i32 33
  %14943 = getelementptr inbounds %struct.Reg, %struct.Reg* %14942, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %14943 to i64*
  %14944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14945 = getelementptr inbounds %struct.GPR, %struct.GPR* %14944, i32 0, i32 15
  %14946 = getelementptr inbounds %struct.Reg, %struct.Reg* %14945, i32 0, i32 0
  %RBP.i1430 = bitcast %union.anon* %14946 to i64*
  %14947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14948 = getelementptr inbounds %struct.GPR, %struct.GPR* %14947, i32 0, i32 17
  %14949 = getelementptr inbounds %struct.Reg, %struct.Reg* %14948, i32 0, i32 0
  %R8.i1431 = bitcast %union.anon* %14949 to i64*
  %14950 = load i64, i64* %RBP.i1430
  %14951 = sub i64 %14950, 176
  %14952 = load i64, i64* %PC.i1429
  %14953 = add i64 %14952, 7
  store i64 %14953, i64* %PC.i1429
  store i64 %14951, i64* %R8.i1431, align 8
  store %struct.Memory* %loadMem_40c8b7, %struct.Memory** %MEMORY
  %loadMem_40c8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %14954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14955 = getelementptr inbounds %struct.GPR, %struct.GPR* %14954, i32 0, i32 33
  %14956 = getelementptr inbounds %struct.Reg, %struct.Reg* %14955, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %14956 to i64*
  %14957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14958 = getelementptr inbounds %struct.GPR, %struct.GPR* %14957, i32 0, i32 19
  %14959 = getelementptr inbounds %struct.Reg, %struct.Reg* %14958, i32 0, i32 0
  %R9.i1428 = bitcast %union.anon* %14959 to i64*
  %14960 = load i64, i64* %PC.i1427
  %14961 = add i64 %14960, 10
  store i64 %14961, i64* %PC.i1427
  store i64 ptrtoint (%G__0x4b2a50_type* @G__0x4b2a50 to i64), i64* %R9.i1428, align 8
  store %struct.Memory* %loadMem_40c8be, %struct.Memory** %MEMORY
  %loadMem_40c8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14963 = getelementptr inbounds %struct.GPR, %struct.GPR* %14962, i32 0, i32 33
  %14964 = getelementptr inbounds %struct.Reg, %struct.Reg* %14963, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %14964 to i64*
  %14965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14966 = getelementptr inbounds %struct.GPR, %struct.GPR* %14965, i32 0, i32 21
  %14967 = getelementptr inbounds %struct.Reg, %struct.Reg* %14966, i32 0, i32 0
  %R10.i1426 = bitcast %union.anon* %14967 to i64*
  %14968 = load i64, i64* %PC.i1425
  %14969 = add i64 %14968, 10
  store i64 %14969, i64* %PC.i1425
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %R10.i1426, align 8
  store %struct.Memory* %loadMem_40c8c8, %struct.Memory** %MEMORY
  %loadMem_40c8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14971 = getelementptr inbounds %struct.GPR, %struct.GPR* %14970, i32 0, i32 33
  %14972 = getelementptr inbounds %struct.Reg, %struct.Reg* %14971, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %14972 to i64*
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14974 = getelementptr inbounds %struct.GPR, %struct.GPR* %14973, i32 0, i32 15
  %14975 = getelementptr inbounds %struct.Reg, %struct.Reg* %14974, i32 0, i32 0
  %RBP.i1423 = bitcast %union.anon* %14975 to i64*
  %14976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14977 = getelementptr inbounds %struct.GPR, %struct.GPR* %14976, i32 0, i32 23
  %14978 = getelementptr inbounds %struct.Reg, %struct.Reg* %14977, i32 0, i32 0
  %R11.i1424 = bitcast %union.anon* %14978 to i64*
  %14979 = load i64, i64* %RBP.i1423
  %14980 = sub i64 %14979, 192
  %14981 = load i64, i64* %PC.i1422
  %14982 = add i64 %14981, 7
  store i64 %14982, i64* %PC.i1422
  %14983 = inttoptr i64 %14980 to i32*
  %14984 = load i32, i32* %14983
  %14985 = sext i32 %14984 to i64
  store i64 %14985, i64* %R11.i1424, align 8
  store %struct.Memory* %loadMem_40c8d2, %struct.Memory** %MEMORY
  %loadMem_40c8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14987 = getelementptr inbounds %struct.GPR, %struct.GPR* %14986, i32 0, i32 33
  %14988 = getelementptr inbounds %struct.Reg, %struct.Reg* %14987, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %14988 to i64*
  %14989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14990 = getelementptr inbounds %struct.GPR, %struct.GPR* %14989, i32 0, i32 23
  %14991 = getelementptr inbounds %struct.Reg, %struct.Reg* %14990, i32 0, i32 0
  %R11.i1421 = bitcast %union.anon* %14991 to i64*
  %14992 = load i64, i64* %R11.i1421
  %14993 = load i64, i64* %PC.i1420
  %14994 = add i64 %14993, 4
  store i64 %14994, i64* %PC.i1420
  %14995 = shl i64 %14992, 5
  %14996 = icmp slt i64 %14995, 0
  %14997 = shl i64 %14995, 1
  store i64 %14997, i64* %R11.i1421, align 8
  %14998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14999 = zext i1 %14996 to i8
  store i8 %14999, i8* %14998, align 1
  %15000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15001 = trunc i64 %14997 to i32
  %15002 = and i32 %15001, 254
  %15003 = call i32 @llvm.ctpop.i32(i32 %15002)
  %15004 = trunc i32 %15003 to i8
  %15005 = and i8 %15004, 1
  %15006 = xor i8 %15005, 1
  store i8 %15006, i8* %15000, align 1
  %15007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15007, align 1
  %15008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15009 = icmp eq i64 %14997, 0
  %15010 = zext i1 %15009 to i8
  store i8 %15010, i8* %15008, align 1
  %15011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15012 = lshr i64 %14997, 63
  %15013 = trunc i64 %15012 to i8
  store i8 %15013, i8* %15011, align 1
  %15014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15014, align 1
  store %struct.Memory* %loadMem_40c8d9, %struct.Memory** %MEMORY
  %loadMem_40c8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15016 = getelementptr inbounds %struct.GPR, %struct.GPR* %15015, i32 0, i32 33
  %15017 = getelementptr inbounds %struct.Reg, %struct.Reg* %15016, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %15017 to i64*
  %15018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15019 = getelementptr inbounds %struct.GPR, %struct.GPR* %15018, i32 0, i32 21
  %15020 = getelementptr inbounds %struct.Reg, %struct.Reg* %15019, i32 0, i32 0
  %R10.i1418 = bitcast %union.anon* %15020 to i64*
  %15021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15022 = getelementptr inbounds %struct.GPR, %struct.GPR* %15021, i32 0, i32 23
  %15023 = getelementptr inbounds %struct.Reg, %struct.Reg* %15022, i32 0, i32 0
  %R11.i1419 = bitcast %union.anon* %15023 to i64*
  %15024 = load i64, i64* %R10.i1418
  %15025 = load i64, i64* %R11.i1419
  %15026 = load i64, i64* %PC.i1417
  %15027 = add i64 %15026, 3
  store i64 %15027, i64* %PC.i1417
  %15028 = add i64 %15025, %15024
  store i64 %15028, i64* %R10.i1418, align 8
  %15029 = icmp ult i64 %15028, %15024
  %15030 = icmp ult i64 %15028, %15025
  %15031 = or i1 %15029, %15030
  %15032 = zext i1 %15031 to i8
  %15033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15032, i8* %15033, align 1
  %15034 = trunc i64 %15028 to i32
  %15035 = and i32 %15034, 255
  %15036 = call i32 @llvm.ctpop.i32(i32 %15035)
  %15037 = trunc i32 %15036 to i8
  %15038 = and i8 %15037, 1
  %15039 = xor i8 %15038, 1
  %15040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15039, i8* %15040, align 1
  %15041 = xor i64 %15025, %15024
  %15042 = xor i64 %15041, %15028
  %15043 = lshr i64 %15042, 4
  %15044 = trunc i64 %15043 to i8
  %15045 = and i8 %15044, 1
  %15046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15045, i8* %15046, align 1
  %15047 = icmp eq i64 %15028, 0
  %15048 = zext i1 %15047 to i8
  %15049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15048, i8* %15049, align 1
  %15050 = lshr i64 %15028, 63
  %15051 = trunc i64 %15050 to i8
  %15052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15051, i8* %15052, align 1
  %15053 = lshr i64 %15024, 63
  %15054 = lshr i64 %15025, 63
  %15055 = xor i64 %15050, %15053
  %15056 = xor i64 %15050, %15054
  %15057 = add i64 %15055, %15056
  %15058 = icmp eq i64 %15057, 2
  %15059 = zext i1 %15058 to i8
  %15060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15059, i8* %15060, align 1
  store %struct.Memory* %loadMem_40c8dd, %struct.Memory** %MEMORY
  %loadMem_40c8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15062 = getelementptr inbounds %struct.GPR, %struct.GPR* %15061, i32 0, i32 33
  %15063 = getelementptr inbounds %struct.Reg, %struct.Reg* %15062, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %15063 to i64*
  %15064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15065 = getelementptr inbounds %struct.GPR, %struct.GPR* %15064, i32 0, i32 15
  %15066 = getelementptr inbounds %struct.Reg, %struct.Reg* %15065, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %15066 to i64*
  %15067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15068 = getelementptr inbounds %struct.GPR, %struct.GPR* %15067, i32 0, i32 23
  %15069 = getelementptr inbounds %struct.Reg, %struct.Reg* %15068, i32 0, i32 0
  %R11.i1416 = bitcast %union.anon* %15069 to i64*
  %15070 = load i64, i64* %RBP.i1415
  %15071 = sub i64 %15070, 20
  %15072 = load i64, i64* %PC.i1414
  %15073 = add i64 %15072, 4
  store i64 %15073, i64* %PC.i1414
  %15074 = inttoptr i64 %15071 to i32*
  %15075 = load i32, i32* %15074
  %15076 = sext i32 %15075 to i64
  store i64 %15076, i64* %R11.i1416, align 8
  store %struct.Memory* %loadMem_40c8e0, %struct.Memory** %MEMORY
  %loadMem_40c8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15078 = getelementptr inbounds %struct.GPR, %struct.GPR* %15077, i32 0, i32 33
  %15079 = getelementptr inbounds %struct.Reg, %struct.Reg* %15078, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %15079 to i64*
  %15080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15081 = getelementptr inbounds %struct.GPR, %struct.GPR* %15080, i32 0, i32 23
  %15082 = getelementptr inbounds %struct.Reg, %struct.Reg* %15081, i32 0, i32 0
  %R11.i1413 = bitcast %union.anon* %15082 to i64*
  %15083 = load i64, i64* %R11.i1413
  %15084 = load i64, i64* %PC.i1412
  %15085 = add i64 %15084, 4
  store i64 %15085, i64* %PC.i1412
  %15086 = shl i64 %15083, 3
  %15087 = icmp slt i64 %15086, 0
  %15088 = shl i64 %15086, 1
  store i64 %15088, i64* %R11.i1413, align 8
  %15089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15090 = zext i1 %15087 to i8
  store i8 %15090, i8* %15089, align 1
  %15091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15092 = trunc i64 %15088 to i32
  %15093 = and i32 %15092, 254
  %15094 = call i32 @llvm.ctpop.i32(i32 %15093)
  %15095 = trunc i32 %15094 to i8
  %15096 = and i8 %15095, 1
  %15097 = xor i8 %15096, 1
  store i8 %15097, i8* %15091, align 1
  %15098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15098, align 1
  %15099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15100 = icmp eq i64 %15088, 0
  %15101 = zext i1 %15100 to i8
  store i8 %15101, i8* %15099, align 1
  %15102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15103 = lshr i64 %15088, 63
  %15104 = trunc i64 %15103 to i8
  store i8 %15104, i8* %15102, align 1
  %15105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15105, align 1
  store %struct.Memory* %loadMem_40c8e4, %struct.Memory** %MEMORY
  %loadMem_40c8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15107 = getelementptr inbounds %struct.GPR, %struct.GPR* %15106, i32 0, i32 33
  %15108 = getelementptr inbounds %struct.Reg, %struct.Reg* %15107, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %15108 to i64*
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15110 = getelementptr inbounds %struct.GPR, %struct.GPR* %15109, i32 0, i32 21
  %15111 = getelementptr inbounds %struct.Reg, %struct.Reg* %15110, i32 0, i32 0
  %R10.i1410 = bitcast %union.anon* %15111 to i64*
  %15112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15113 = getelementptr inbounds %struct.GPR, %struct.GPR* %15112, i32 0, i32 23
  %15114 = getelementptr inbounds %struct.Reg, %struct.Reg* %15113, i32 0, i32 0
  %R11.i1411 = bitcast %union.anon* %15114 to i64*
  %15115 = load i64, i64* %R10.i1410
  %15116 = load i64, i64* %R11.i1411
  %15117 = load i64, i64* %PC.i1409
  %15118 = add i64 %15117, 3
  store i64 %15118, i64* %PC.i1409
  %15119 = add i64 %15116, %15115
  store i64 %15119, i64* %R10.i1410, align 8
  %15120 = icmp ult i64 %15119, %15115
  %15121 = icmp ult i64 %15119, %15116
  %15122 = or i1 %15120, %15121
  %15123 = zext i1 %15122 to i8
  %15124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15123, i8* %15124, align 1
  %15125 = trunc i64 %15119 to i32
  %15126 = and i32 %15125, 255
  %15127 = call i32 @llvm.ctpop.i32(i32 %15126)
  %15128 = trunc i32 %15127 to i8
  %15129 = and i8 %15128, 1
  %15130 = xor i8 %15129, 1
  %15131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15130, i8* %15131, align 1
  %15132 = xor i64 %15116, %15115
  %15133 = xor i64 %15132, %15119
  %15134 = lshr i64 %15133, 4
  %15135 = trunc i64 %15134 to i8
  %15136 = and i8 %15135, 1
  %15137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15136, i8* %15137, align 1
  %15138 = icmp eq i64 %15119, 0
  %15139 = zext i1 %15138 to i8
  %15140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15139, i8* %15140, align 1
  %15141 = lshr i64 %15119, 63
  %15142 = trunc i64 %15141 to i8
  %15143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15142, i8* %15143, align 1
  %15144 = lshr i64 %15115, 63
  %15145 = lshr i64 %15116, 63
  %15146 = xor i64 %15141, %15144
  %15147 = xor i64 %15141, %15145
  %15148 = add i64 %15146, %15147
  %15149 = icmp eq i64 %15148, 2
  %15150 = zext i1 %15149 to i8
  %15151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15150, i8* %15151, align 1
  store %struct.Memory* %loadMem_40c8e8, %struct.Memory** %MEMORY
  %loadMem_40c8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15153 = getelementptr inbounds %struct.GPR, %struct.GPR* %15152, i32 0, i32 33
  %15154 = getelementptr inbounds %struct.Reg, %struct.Reg* %15153, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %15154 to i64*
  %15155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15156 = getelementptr inbounds %struct.GPR, %struct.GPR* %15155, i32 0, i32 15
  %15157 = getelementptr inbounds %struct.Reg, %struct.Reg* %15156, i32 0, i32 0
  %RBP.i1407 = bitcast %union.anon* %15157 to i64*
  %15158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15159 = getelementptr inbounds %struct.GPR, %struct.GPR* %15158, i32 0, i32 23
  %15160 = getelementptr inbounds %struct.Reg, %struct.Reg* %15159, i32 0, i32 0
  %R11.i1408 = bitcast %union.anon* %15160 to i64*
  %15161 = load i64, i64* %RBP.i1407
  %15162 = sub i64 %15161, 24
  %15163 = load i64, i64* %PC.i1406
  %15164 = add i64 %15163, 4
  store i64 %15164, i64* %PC.i1406
  %15165 = inttoptr i64 %15162 to i32*
  %15166 = load i32, i32* %15165
  %15167 = sext i32 %15166 to i64
  store i64 %15167, i64* %R11.i1408, align 8
  store %struct.Memory* %loadMem_40c8eb, %struct.Memory** %MEMORY
  %loadMem_40c8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %15168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15169 = getelementptr inbounds %struct.GPR, %struct.GPR* %15168, i32 0, i32 33
  %15170 = getelementptr inbounds %struct.Reg, %struct.Reg* %15169, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %15170 to i64*
  %15171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15172 = getelementptr inbounds %struct.GPR, %struct.GPR* %15171, i32 0, i32 1
  %15173 = getelementptr inbounds %struct.Reg, %struct.Reg* %15172, i32 0, i32 0
  %RAX.i1403 = bitcast %union.anon* %15173 to i64*
  %15174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15175 = getelementptr inbounds %struct.GPR, %struct.GPR* %15174, i32 0, i32 21
  %15176 = getelementptr inbounds %struct.Reg, %struct.Reg* %15175, i32 0, i32 0
  %R10.i1404 = bitcast %union.anon* %15176 to i64*
  %15177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15178 = getelementptr inbounds %struct.GPR, %struct.GPR* %15177, i32 0, i32 23
  %15179 = getelementptr inbounds %struct.Reg, %struct.Reg* %15178, i32 0, i32 0
  %R11.i1405 = bitcast %union.anon* %15179 to i64*
  %15180 = load i64, i64* %RAX.i1403
  %15181 = load i64, i64* %R10.i1404
  %15182 = load i64, i64* %R11.i1405
  %15183 = mul i64 %15182, 4
  %15184 = add i64 %15183, %15181
  %15185 = load i64, i64* %PC.i1402
  %15186 = add i64 %15185, 5
  store i64 %15186, i64* %PC.i1402
  %15187 = inttoptr i64 %15184 to i32*
  %15188 = load i32, i32* %15187
  %15189 = shl i64 %15180, 32
  %15190 = ashr exact i64 %15189, 32
  %15191 = sext i32 %15188 to i64
  %15192 = mul i64 %15191, %15190
  %15193 = trunc i64 %15192 to i32
  %15194 = and i64 %15192, 4294967295
  store i64 %15194, i64* %RAX.i1403, align 8
  %15195 = shl i64 %15192, 32
  %15196 = ashr exact i64 %15195, 32
  %15197 = icmp ne i64 %15196, %15192
  %15198 = zext i1 %15197 to i8
  %15199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15198, i8* %15199, align 1
  %15200 = and i32 %15193, 255
  %15201 = call i32 @llvm.ctpop.i32(i32 %15200)
  %15202 = trunc i32 %15201 to i8
  %15203 = and i8 %15202, 1
  %15204 = xor i8 %15203, 1
  %15205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15204, i8* %15205, align 1
  %15206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15206, align 1
  %15207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15207, align 1
  %15208 = lshr i32 %15193, 31
  %15209 = trunc i32 %15208 to i8
  %15210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15209, i8* %15210, align 1
  %15211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15198, i8* %15211, align 1
  store %struct.Memory* %loadMem_40c8ef, %struct.Memory** %MEMORY
  %loadMem_40c8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15213 = getelementptr inbounds %struct.GPR, %struct.GPR* %15212, i32 0, i32 33
  %15214 = getelementptr inbounds %struct.Reg, %struct.Reg* %15213, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %15214 to i64*
  %15215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15216 = getelementptr inbounds %struct.GPR, %struct.GPR* %15215, i32 0, i32 15
  %15217 = getelementptr inbounds %struct.Reg, %struct.Reg* %15216, i32 0, i32 0
  %RBP.i1400 = bitcast %union.anon* %15217 to i64*
  %15218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15219 = getelementptr inbounds %struct.GPR, %struct.GPR* %15218, i32 0, i32 21
  %15220 = getelementptr inbounds %struct.Reg, %struct.Reg* %15219, i32 0, i32 0
  %R10.i1401 = bitcast %union.anon* %15220 to i64*
  %15221 = load i64, i64* %RBP.i1400
  %15222 = sub i64 %15221, 20
  %15223 = load i64, i64* %PC.i1399
  %15224 = add i64 %15223, 4
  store i64 %15224, i64* %PC.i1399
  %15225 = inttoptr i64 %15222 to i32*
  %15226 = load i32, i32* %15225
  %15227 = sext i32 %15226 to i64
  store i64 %15227, i64* %R10.i1401, align 8
  store %struct.Memory* %loadMem_40c8f4, %struct.Memory** %MEMORY
  %loadMem_40c8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15229 = getelementptr inbounds %struct.GPR, %struct.GPR* %15228, i32 0, i32 33
  %15230 = getelementptr inbounds %struct.Reg, %struct.Reg* %15229, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %15230 to i64*
  %15231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15232 = getelementptr inbounds %struct.GPR, %struct.GPR* %15231, i32 0, i32 21
  %15233 = getelementptr inbounds %struct.Reg, %struct.Reg* %15232, i32 0, i32 0
  %R10.i1398 = bitcast %union.anon* %15233 to i64*
  %15234 = load i64, i64* %R10.i1398
  %15235 = load i64, i64* %PC.i1397
  %15236 = add i64 %15235, 4
  store i64 %15236, i64* %PC.i1397
  %15237 = shl i64 %15234, 3
  %15238 = icmp slt i64 %15237, 0
  %15239 = shl i64 %15237, 1
  store i64 %15239, i64* %R10.i1398, align 8
  %15240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15241 = zext i1 %15238 to i8
  store i8 %15241, i8* %15240, align 1
  %15242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15243 = trunc i64 %15239 to i32
  %15244 = and i32 %15243, 254
  %15245 = call i32 @llvm.ctpop.i32(i32 %15244)
  %15246 = trunc i32 %15245 to i8
  %15247 = and i8 %15246, 1
  %15248 = xor i8 %15247, 1
  store i8 %15248, i8* %15242, align 1
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15249, align 1
  %15250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15251 = icmp eq i64 %15239, 0
  %15252 = zext i1 %15251 to i8
  store i8 %15252, i8* %15250, align 1
  %15253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15254 = lshr i64 %15239, 63
  %15255 = trunc i64 %15254 to i8
  store i8 %15255, i8* %15253, align 1
  %15256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15256, align 1
  store %struct.Memory* %loadMem_40c8f8, %struct.Memory** %MEMORY
  %loadMem_40c8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15258 = getelementptr inbounds %struct.GPR, %struct.GPR* %15257, i32 0, i32 33
  %15259 = getelementptr inbounds %struct.Reg, %struct.Reg* %15258, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %15259 to i64*
  %15260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15261 = getelementptr inbounds %struct.GPR, %struct.GPR* %15260, i32 0, i32 19
  %15262 = getelementptr inbounds %struct.Reg, %struct.Reg* %15261, i32 0, i32 0
  %R9.i1395 = bitcast %union.anon* %15262 to i64*
  %15263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15264 = getelementptr inbounds %struct.GPR, %struct.GPR* %15263, i32 0, i32 21
  %15265 = getelementptr inbounds %struct.Reg, %struct.Reg* %15264, i32 0, i32 0
  %R10.i1396 = bitcast %union.anon* %15265 to i64*
  %15266 = load i64, i64* %R9.i1395
  %15267 = load i64, i64* %R10.i1396
  %15268 = load i64, i64* %PC.i1394
  %15269 = add i64 %15268, 3
  store i64 %15269, i64* %PC.i1394
  %15270 = add i64 %15267, %15266
  store i64 %15270, i64* %R9.i1395, align 8
  %15271 = icmp ult i64 %15270, %15266
  %15272 = icmp ult i64 %15270, %15267
  %15273 = or i1 %15271, %15272
  %15274 = zext i1 %15273 to i8
  %15275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15274, i8* %15275, align 1
  %15276 = trunc i64 %15270 to i32
  %15277 = and i32 %15276, 255
  %15278 = call i32 @llvm.ctpop.i32(i32 %15277)
  %15279 = trunc i32 %15278 to i8
  %15280 = and i8 %15279, 1
  %15281 = xor i8 %15280, 1
  %15282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15281, i8* %15282, align 1
  %15283 = xor i64 %15267, %15266
  %15284 = xor i64 %15283, %15270
  %15285 = lshr i64 %15284, 4
  %15286 = trunc i64 %15285 to i8
  %15287 = and i8 %15286, 1
  %15288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15287, i8* %15288, align 1
  %15289 = icmp eq i64 %15270, 0
  %15290 = zext i1 %15289 to i8
  %15291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15290, i8* %15291, align 1
  %15292 = lshr i64 %15270, 63
  %15293 = trunc i64 %15292 to i8
  %15294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15293, i8* %15294, align 1
  %15295 = lshr i64 %15266, 63
  %15296 = lshr i64 %15267, 63
  %15297 = xor i64 %15292, %15295
  %15298 = xor i64 %15292, %15296
  %15299 = add i64 %15297, %15298
  %15300 = icmp eq i64 %15299, 2
  %15301 = zext i1 %15300 to i8
  %15302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15301, i8* %15302, align 1
  store %struct.Memory* %loadMem_40c8fc, %struct.Memory** %MEMORY
  %loadMem_40c8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %15303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15304 = getelementptr inbounds %struct.GPR, %struct.GPR* %15303, i32 0, i32 33
  %15305 = getelementptr inbounds %struct.Reg, %struct.Reg* %15304, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %15305 to i64*
  %15306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15307 = getelementptr inbounds %struct.GPR, %struct.GPR* %15306, i32 0, i32 15
  %15308 = getelementptr inbounds %struct.Reg, %struct.Reg* %15307, i32 0, i32 0
  %RBP.i1392 = bitcast %union.anon* %15308 to i64*
  %15309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15310 = getelementptr inbounds %struct.GPR, %struct.GPR* %15309, i32 0, i32 21
  %15311 = getelementptr inbounds %struct.Reg, %struct.Reg* %15310, i32 0, i32 0
  %R10.i1393 = bitcast %union.anon* %15311 to i64*
  %15312 = load i64, i64* %RBP.i1392
  %15313 = sub i64 %15312, 24
  %15314 = load i64, i64* %PC.i1391
  %15315 = add i64 %15314, 4
  store i64 %15315, i64* %PC.i1391
  %15316 = inttoptr i64 %15313 to i32*
  %15317 = load i32, i32* %15316
  %15318 = sext i32 %15317 to i64
  store i64 %15318, i64* %R10.i1393, align 8
  store %struct.Memory* %loadMem_40c8ff, %struct.Memory** %MEMORY
  %loadMem_40c903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15320 = getelementptr inbounds %struct.GPR, %struct.GPR* %15319, i32 0, i32 33
  %15321 = getelementptr inbounds %struct.Reg, %struct.Reg* %15320, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %15321 to i64*
  %15322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15323 = getelementptr inbounds %struct.GPR, %struct.GPR* %15322, i32 0, i32 1
  %15324 = getelementptr inbounds %struct.Reg, %struct.Reg* %15323, i32 0, i32 0
  %RAX.i1388 = bitcast %union.anon* %15324 to i64*
  %15325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15326 = getelementptr inbounds %struct.GPR, %struct.GPR* %15325, i32 0, i32 19
  %15327 = getelementptr inbounds %struct.Reg, %struct.Reg* %15326, i32 0, i32 0
  %R9.i1389 = bitcast %union.anon* %15327 to i64*
  %15328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15329 = getelementptr inbounds %struct.GPR, %struct.GPR* %15328, i32 0, i32 21
  %15330 = getelementptr inbounds %struct.Reg, %struct.Reg* %15329, i32 0, i32 0
  %R10.i1390 = bitcast %union.anon* %15330 to i64*
  %15331 = load i64, i64* %RAX.i1388
  %15332 = load i64, i64* %R9.i1389
  %15333 = load i64, i64* %R10.i1390
  %15334 = mul i64 %15333, 4
  %15335 = add i64 %15334, %15332
  %15336 = load i64, i64* %PC.i1387
  %15337 = add i64 %15336, 5
  store i64 %15337, i64* %PC.i1387
  %15338 = inttoptr i64 %15335 to i32*
  %15339 = load i32, i32* %15338
  %15340 = shl i64 %15331, 32
  %15341 = ashr exact i64 %15340, 32
  %15342 = sext i32 %15339 to i64
  %15343 = mul i64 %15342, %15341
  %15344 = trunc i64 %15343 to i32
  %15345 = and i64 %15343, 4294967295
  store i64 %15345, i64* %RAX.i1388, align 8
  %15346 = shl i64 %15343, 32
  %15347 = ashr exact i64 %15346, 32
  %15348 = icmp ne i64 %15347, %15343
  %15349 = zext i1 %15348 to i8
  %15350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15349, i8* %15350, align 1
  %15351 = and i32 %15344, 255
  %15352 = call i32 @llvm.ctpop.i32(i32 %15351)
  %15353 = trunc i32 %15352 to i8
  %15354 = and i8 %15353, 1
  %15355 = xor i8 %15354, 1
  %15356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15355, i8* %15356, align 1
  %15357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15357, align 1
  %15358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15358, align 1
  %15359 = lshr i32 %15344, 31
  %15360 = trunc i32 %15359 to i8
  %15361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15360, i8* %15361, align 1
  %15362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15349, i8* %15362, align 1
  store %struct.Memory* %loadMem_40c903, %struct.Memory** %MEMORY
  %loadMem_40c908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15364 = getelementptr inbounds %struct.GPR, %struct.GPR* %15363, i32 0, i32 33
  %15365 = getelementptr inbounds %struct.Reg, %struct.Reg* %15364, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %15365 to i64*
  %15366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15367 = getelementptr inbounds %struct.GPR, %struct.GPR* %15366, i32 0, i32 9
  %15368 = getelementptr inbounds %struct.Reg, %struct.Reg* %15367, i32 0, i32 0
  %RSI.i1385 = bitcast %union.anon* %15368 to i64*
  %15369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15370 = getelementptr inbounds %struct.GPR, %struct.GPR* %15369, i32 0, i32 15
  %15371 = getelementptr inbounds %struct.Reg, %struct.Reg* %15370, i32 0, i32 0
  %RBP.i1386 = bitcast %union.anon* %15371 to i64*
  %15372 = load i64, i64* %RBP.i1386
  %15373 = sub i64 %15372, 188
  %15374 = load i64, i64* %PC.i1384
  %15375 = add i64 %15374, 6
  store i64 %15375, i64* %PC.i1384
  %15376 = inttoptr i64 %15373 to i32*
  %15377 = load i32, i32* %15376
  %15378 = zext i32 %15377 to i64
  store i64 %15378, i64* %RSI.i1385, align 8
  store %struct.Memory* %loadMem_40c908, %struct.Memory** %MEMORY
  %loadMem_40c90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15380 = getelementptr inbounds %struct.GPR, %struct.GPR* %15379, i32 0, i32 33
  %15381 = getelementptr inbounds %struct.Reg, %struct.Reg* %15380, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %15381 to i64*
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15383 = getelementptr inbounds %struct.GPR, %struct.GPR* %15382, i32 0, i32 5
  %15384 = getelementptr inbounds %struct.Reg, %struct.Reg* %15383, i32 0, i32 0
  %RCX.i1382 = bitcast %union.anon* %15384 to i64*
  %15385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15386 = getelementptr inbounds %struct.GPR, %struct.GPR* %15385, i32 0, i32 15
  %15387 = getelementptr inbounds %struct.Reg, %struct.Reg* %15386, i32 0, i32 0
  %RBP.i1383 = bitcast %union.anon* %15387 to i64*
  %15388 = load i64, i64* %RBP.i1383
  %15389 = sub i64 %15388, 344
  %15390 = load i64, i64* %RCX.i1382
  %15391 = load i64, i64* %PC.i1381
  %15392 = add i64 %15391, 7
  store i64 %15392, i64* %PC.i1381
  %15393 = inttoptr i64 %15389 to i64*
  store i64 %15390, i64* %15393
  store %struct.Memory* %loadMem_40c90e, %struct.Memory** %MEMORY
  %loadMem_40c915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15395 = getelementptr inbounds %struct.GPR, %struct.GPR* %15394, i32 0, i32 33
  %15396 = getelementptr inbounds %struct.Reg, %struct.Reg* %15395, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %15396 to i64*
  %15397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15398 = getelementptr inbounds %struct.GPR, %struct.GPR* %15397, i32 0, i32 9
  %15399 = getelementptr inbounds %struct.Reg, %struct.Reg* %15398, i32 0, i32 0
  %ESI.i1379 = bitcast %union.anon* %15399 to i32*
  %15400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15401 = getelementptr inbounds %struct.GPR, %struct.GPR* %15400, i32 0, i32 5
  %15402 = getelementptr inbounds %struct.Reg, %struct.Reg* %15401, i32 0, i32 0
  %RCX.i1380 = bitcast %union.anon* %15402 to i64*
  %15403 = load i32, i32* %ESI.i1379
  %15404 = zext i32 %15403 to i64
  %15405 = load i64, i64* %PC.i1378
  %15406 = add i64 %15405, 2
  store i64 %15406, i64* %PC.i1378
  %15407 = and i64 %15404, 4294967295
  store i64 %15407, i64* %RCX.i1380, align 8
  store %struct.Memory* %loadMem_40c915, %struct.Memory** %MEMORY
  %loadMem_40c917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15409 = getelementptr inbounds %struct.GPR, %struct.GPR* %15408, i32 0, i32 33
  %15410 = getelementptr inbounds %struct.Reg, %struct.Reg* %15409, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %15410 to i64*
  %15411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15412 = getelementptr inbounds %struct.GPR, %struct.GPR* %15411, i32 0, i32 5
  %15413 = getelementptr inbounds %struct.Reg, %struct.Reg* %15412, i32 0, i32 0
  %15414 = bitcast %union.anon* %15413 to %struct.anon.2*
  %CL.i1375 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15414, i32 0, i32 0
  %15415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15416 = getelementptr inbounds %struct.GPR, %struct.GPR* %15415, i32 0, i32 1
  %15417 = getelementptr inbounds %struct.Reg, %struct.Reg* %15416, i32 0, i32 0
  %RAX.i1376 = bitcast %union.anon* %15417 to i64*
  %15418 = load i64, i64* %RAX.i1376
  %15419 = load i8, i8* %CL.i1375
  %15420 = zext i8 %15419 to i64
  %15421 = load i64, i64* %PC.i1374
  %15422 = add i64 %15421, 2
  store i64 %15422, i64* %PC.i1374
  %15423 = trunc i64 %15420 to i5
  switch i5 %15423, label %15430 [
    i5 0, label %routine_shll__cl___eax.exit1377
    i5 1, label %15424
  ]

; <label>:15424:                                  ; preds = %block_40c872
  %15425 = trunc i64 %15418 to i32
  %15426 = shl i32 %15425, 1
  %15427 = icmp slt i32 %15425, 0
  %15428 = icmp slt i32 %15426, 0
  %15429 = xor i1 %15427, %15428
  br label %15439

; <label>:15430:                                  ; preds = %block_40c872
  %15431 = and i64 %15420, 31
  %15432 = add i64 %15431, 4294967295
  %15433 = and i64 %15418, 4294967295
  %15434 = and i64 %15432, 4294967295
  %15435 = shl i64 %15433, %15434
  %15436 = trunc i64 %15435 to i32
  %15437 = icmp slt i32 %15436, 0
  %15438 = shl i32 %15436, 1
  br label %15439

; <label>:15439:                                  ; preds = %15430, %15424
  %15440 = phi i1 [ %15427, %15424 ], [ %15437, %15430 ]
  %15441 = phi i1 [ %15429, %15424 ], [ false, %15430 ]
  %15442 = phi i32 [ %15426, %15424 ], [ %15438, %15430 ]
  %15443 = zext i32 %15442 to i64
  store i64 %15443, i64* %RAX.i1376, align 8
  %15444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15445 = zext i1 %15440 to i8
  store i8 %15445, i8* %15444, align 1
  %15446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15447 = and i32 %15442, 254
  %15448 = call i32 @llvm.ctpop.i32(i32 %15447)
  %15449 = trunc i32 %15448 to i8
  %15450 = and i8 %15449, 1
  %15451 = xor i8 %15450, 1
  store i8 %15451, i8* %15446, align 1
  %15452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15452, align 1
  %15453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15454 = icmp eq i32 %15442, 0
  %15455 = zext i1 %15454 to i8
  store i8 %15455, i8* %15453, align 1
  %15456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15457 = lshr i32 %15442, 31
  %15458 = trunc i32 %15457 to i8
  store i8 %15458, i8* %15456, align 1
  %15459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15460 = zext i1 %15441 to i8
  store i8 %15460, i8* %15459, align 1
  br label %routine_shll__cl___eax.exit1377

routine_shll__cl___eax.exit1377:                  ; preds = %block_40c872, %15439
  store %struct.Memory* %loadMem_40c917, %struct.Memory** %MEMORY
  %loadMem_40c919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15462 = getelementptr inbounds %struct.GPR, %struct.GPR* %15461, i32 0, i32 33
  %15463 = getelementptr inbounds %struct.Reg, %struct.Reg* %15462, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %15463 to i64*
  %15464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15465 = getelementptr inbounds %struct.GPR, %struct.GPR* %15464, i32 0, i32 1
  %15466 = getelementptr inbounds %struct.Reg, %struct.Reg* %15465, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %15466 to i64*
  %15467 = load i64, i64* %RAX.i1373
  %15468 = load i64, i64* %PC.i1372
  %15469 = add i64 %15468, 3
  store i64 %15469, i64* %PC.i1372
  %15470 = shl i64 %15467, 32
  %15471 = ashr exact i64 %15470, 32
  %15472 = ashr i64 %15471, 5
  %15473 = lshr i64 %15472, 1
  %15474 = trunc i64 %15472 to i8
  %15475 = and i8 %15474, 1
  %15476 = trunc i64 %15473 to i32
  %15477 = and i64 %15473, 4294967295
  store i64 %15477, i64* %RAX.i1373, align 8
  %15478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15475, i8* %15478, align 1
  %15479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15480 = and i32 %15476, 255
  %15481 = call i32 @llvm.ctpop.i32(i32 %15480)
  %15482 = trunc i32 %15481 to i8
  %15483 = and i8 %15482, 1
  %15484 = xor i8 %15483, 1
  store i8 %15484, i8* %15479, align 1
  %15485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15485, align 1
  %15486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15487 = icmp eq i32 %15476, 0
  %15488 = zext i1 %15487 to i8
  store i8 %15488, i8* %15486, align 1
  %15489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15490 = lshr i32 %15476, 31
  %15491 = trunc i32 %15490 to i8
  store i8 %15491, i8* %15489, align 1
  %15492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15492, align 1
  store %struct.Memory* %loadMem_40c919, %struct.Memory** %MEMORY
  %loadMem_40c91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15494 = getelementptr inbounds %struct.GPR, %struct.GPR* %15493, i32 0, i32 33
  %15495 = getelementptr inbounds %struct.Reg, %struct.Reg* %15494, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %15495 to i64*
  %15496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15497 = getelementptr inbounds %struct.GPR, %struct.GPR* %15496, i32 0, i32 9
  %15498 = getelementptr inbounds %struct.Reg, %struct.Reg* %15497, i32 0, i32 0
  %RSI.i1370 = bitcast %union.anon* %15498 to i64*
  %15499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15500 = getelementptr inbounds %struct.GPR, %struct.GPR* %15499, i32 0, i32 15
  %15501 = getelementptr inbounds %struct.Reg, %struct.Reg* %15500, i32 0, i32 0
  %RBP.i1371 = bitcast %union.anon* %15501 to i64*
  %15502 = load i64, i64* %RBP.i1371
  %15503 = sub i64 %15502, 336
  %15504 = load i64, i64* %PC.i1369
  %15505 = add i64 %15504, 6
  store i64 %15505, i64* %PC.i1369
  %15506 = inttoptr i64 %15503 to i32*
  %15507 = load i32, i32* %15506
  %15508 = zext i32 %15507 to i64
  store i64 %15508, i64* %RSI.i1370, align 8
  store %struct.Memory* %loadMem_40c91c, %struct.Memory** %MEMORY
  %loadMem_40c922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15510 = getelementptr inbounds %struct.GPR, %struct.GPR* %15509, i32 0, i32 33
  %15511 = getelementptr inbounds %struct.Reg, %struct.Reg* %15510, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %15511 to i64*
  %15512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15513 = getelementptr inbounds %struct.GPR, %struct.GPR* %15512, i32 0, i32 1
  %15514 = getelementptr inbounds %struct.Reg, %struct.Reg* %15513, i32 0, i32 0
  %EAX.i1367 = bitcast %union.anon* %15514 to i32*
  %15515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15516 = getelementptr inbounds %struct.GPR, %struct.GPR* %15515, i32 0, i32 9
  %15517 = getelementptr inbounds %struct.Reg, %struct.Reg* %15516, i32 0, i32 0
  %RSI.i1368 = bitcast %union.anon* %15517 to i64*
  %15518 = load i64, i64* %RSI.i1368
  %15519 = load i32, i32* %EAX.i1367
  %15520 = zext i32 %15519 to i64
  %15521 = load i64, i64* %PC.i1366
  %15522 = add i64 %15521, 2
  store i64 %15522, i64* %PC.i1366
  %15523 = trunc i64 %15518 to i32
  %15524 = sub i32 %15523, %15519
  %15525 = zext i32 %15524 to i64
  store i64 %15525, i64* %RSI.i1368, align 8
  %15526 = icmp ult i32 %15523, %15519
  %15527 = zext i1 %15526 to i8
  %15528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15527, i8* %15528, align 1
  %15529 = and i32 %15524, 255
  %15530 = call i32 @llvm.ctpop.i32(i32 %15529)
  %15531 = trunc i32 %15530 to i8
  %15532 = and i8 %15531, 1
  %15533 = xor i8 %15532, 1
  %15534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15533, i8* %15534, align 1
  %15535 = xor i64 %15520, %15518
  %15536 = trunc i64 %15535 to i32
  %15537 = xor i32 %15536, %15524
  %15538 = lshr i32 %15537, 4
  %15539 = trunc i32 %15538 to i8
  %15540 = and i8 %15539, 1
  %15541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15540, i8* %15541, align 1
  %15542 = icmp eq i32 %15524, 0
  %15543 = zext i1 %15542 to i8
  %15544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15543, i8* %15544, align 1
  %15545 = lshr i32 %15524, 31
  %15546 = trunc i32 %15545 to i8
  %15547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15546, i8* %15547, align 1
  %15548 = lshr i32 %15523, 31
  %15549 = lshr i32 %15519, 31
  %15550 = xor i32 %15549, %15548
  %15551 = xor i32 %15545, %15548
  %15552 = add i32 %15551, %15550
  %15553 = icmp eq i32 %15552, 2
  %15554 = zext i1 %15553 to i8
  %15555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15554, i8* %15555, align 1
  store %struct.Memory* %loadMem_40c922, %struct.Memory** %MEMORY
  %loadMem_40c924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15557 = getelementptr inbounds %struct.GPR, %struct.GPR* %15556, i32 0, i32 33
  %15558 = getelementptr inbounds %struct.Reg, %struct.Reg* %15557, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %15558 to i64*
  %15559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15560 = getelementptr inbounds %struct.GPR, %struct.GPR* %15559, i32 0, i32 15
  %15561 = getelementptr inbounds %struct.Reg, %struct.Reg* %15560, i32 0, i32 0
  %RBP.i1364 = bitcast %union.anon* %15561 to i64*
  %15562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15563 = getelementptr inbounds %struct.GPR, %struct.GPR* %15562, i32 0, i32 19
  %15564 = getelementptr inbounds %struct.Reg, %struct.Reg* %15563, i32 0, i32 0
  %R9.i1365 = bitcast %union.anon* %15564 to i64*
  %15565 = load i64, i64* %RBP.i1364
  %15566 = sub i64 %15565, 20
  %15567 = load i64, i64* %PC.i1363
  %15568 = add i64 %15567, 4
  store i64 %15568, i64* %PC.i1363
  %15569 = inttoptr i64 %15566 to i32*
  %15570 = load i32, i32* %15569
  %15571 = sext i32 %15570 to i64
  store i64 %15571, i64* %R9.i1365, align 8
  store %struct.Memory* %loadMem_40c924, %struct.Memory** %MEMORY
  %loadMem_40c928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15573 = getelementptr inbounds %struct.GPR, %struct.GPR* %15572, i32 0, i32 33
  %15574 = getelementptr inbounds %struct.Reg, %struct.Reg* %15573, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %15574 to i64*
  %15575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15576 = getelementptr inbounds %struct.GPR, %struct.GPR* %15575, i32 0, i32 19
  %15577 = getelementptr inbounds %struct.Reg, %struct.Reg* %15576, i32 0, i32 0
  %R9.i1362 = bitcast %union.anon* %15577 to i64*
  %15578 = load i64, i64* %R9.i1362
  %15579 = load i64, i64* %PC.i1361
  %15580 = add i64 %15579, 4
  store i64 %15580, i64* %PC.i1361
  %15581 = shl i64 %15578, 3
  %15582 = icmp slt i64 %15581, 0
  %15583 = shl i64 %15581, 1
  store i64 %15583, i64* %R9.i1362, align 8
  %15584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15585 = zext i1 %15582 to i8
  store i8 %15585, i8* %15584, align 1
  %15586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15587 = trunc i64 %15583 to i32
  %15588 = and i32 %15587, 254
  %15589 = call i32 @llvm.ctpop.i32(i32 %15588)
  %15590 = trunc i32 %15589 to i8
  %15591 = and i8 %15590, 1
  %15592 = xor i8 %15591, 1
  store i8 %15592, i8* %15586, align 1
  %15593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15593, align 1
  %15594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15595 = icmp eq i64 %15583, 0
  %15596 = zext i1 %15595 to i8
  store i8 %15596, i8* %15594, align 1
  %15597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15598 = lshr i64 %15583, 63
  %15599 = trunc i64 %15598 to i8
  store i8 %15599, i8* %15597, align 1
  %15600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15600, align 1
  store %struct.Memory* %loadMem_40c928, %struct.Memory** %MEMORY
  %loadMem_40c92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15602 = getelementptr inbounds %struct.GPR, %struct.GPR* %15601, i32 0, i32 33
  %15603 = getelementptr inbounds %struct.Reg, %struct.Reg* %15602, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %15603 to i64*
  %15604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15605 = getelementptr inbounds %struct.GPR, %struct.GPR* %15604, i32 0, i32 17
  %15606 = getelementptr inbounds %struct.Reg, %struct.Reg* %15605, i32 0, i32 0
  %R8.i1359 = bitcast %union.anon* %15606 to i64*
  %15607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15608 = getelementptr inbounds %struct.GPR, %struct.GPR* %15607, i32 0, i32 19
  %15609 = getelementptr inbounds %struct.Reg, %struct.Reg* %15608, i32 0, i32 0
  %R9.i1360 = bitcast %union.anon* %15609 to i64*
  %15610 = load i64, i64* %R8.i1359
  %15611 = load i64, i64* %R9.i1360
  %15612 = load i64, i64* %PC.i1358
  %15613 = add i64 %15612, 3
  store i64 %15613, i64* %PC.i1358
  %15614 = add i64 %15611, %15610
  store i64 %15614, i64* %R8.i1359, align 8
  %15615 = icmp ult i64 %15614, %15610
  %15616 = icmp ult i64 %15614, %15611
  %15617 = or i1 %15615, %15616
  %15618 = zext i1 %15617 to i8
  %15619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15618, i8* %15619, align 1
  %15620 = trunc i64 %15614 to i32
  %15621 = and i32 %15620, 255
  %15622 = call i32 @llvm.ctpop.i32(i32 %15621)
  %15623 = trunc i32 %15622 to i8
  %15624 = and i8 %15623, 1
  %15625 = xor i8 %15624, 1
  %15626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15625, i8* %15626, align 1
  %15627 = xor i64 %15611, %15610
  %15628 = xor i64 %15627, %15614
  %15629 = lshr i64 %15628, 4
  %15630 = trunc i64 %15629 to i8
  %15631 = and i8 %15630, 1
  %15632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15631, i8* %15632, align 1
  %15633 = icmp eq i64 %15614, 0
  %15634 = zext i1 %15633 to i8
  %15635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15634, i8* %15635, align 1
  %15636 = lshr i64 %15614, 63
  %15637 = trunc i64 %15636 to i8
  %15638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15637, i8* %15638, align 1
  %15639 = lshr i64 %15610, 63
  %15640 = lshr i64 %15611, 63
  %15641 = xor i64 %15636, %15639
  %15642 = xor i64 %15636, %15640
  %15643 = add i64 %15641, %15642
  %15644 = icmp eq i64 %15643, 2
  %15645 = zext i1 %15644 to i8
  %15646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15645, i8* %15646, align 1
  store %struct.Memory* %loadMem_40c92c, %struct.Memory** %MEMORY
  %loadMem_40c92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15648 = getelementptr inbounds %struct.GPR, %struct.GPR* %15647, i32 0, i32 33
  %15649 = getelementptr inbounds %struct.Reg, %struct.Reg* %15648, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %15649 to i64*
  %15650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15651 = getelementptr inbounds %struct.GPR, %struct.GPR* %15650, i32 0, i32 15
  %15652 = getelementptr inbounds %struct.Reg, %struct.Reg* %15651, i32 0, i32 0
  %RBP.i1356 = bitcast %union.anon* %15652 to i64*
  %15653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15654 = getelementptr inbounds %struct.GPR, %struct.GPR* %15653, i32 0, i32 19
  %15655 = getelementptr inbounds %struct.Reg, %struct.Reg* %15654, i32 0, i32 0
  %R9.i1357 = bitcast %union.anon* %15655 to i64*
  %15656 = load i64, i64* %RBP.i1356
  %15657 = sub i64 %15656, 24
  %15658 = load i64, i64* %PC.i1355
  %15659 = add i64 %15658, 4
  store i64 %15659, i64* %PC.i1355
  %15660 = inttoptr i64 %15657 to i32*
  %15661 = load i32, i32* %15660
  %15662 = sext i32 %15661 to i64
  store i64 %15662, i64* %R9.i1357, align 8
  store %struct.Memory* %loadMem_40c92f, %struct.Memory** %MEMORY
  %loadMem_40c933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15664 = getelementptr inbounds %struct.GPR, %struct.GPR* %15663, i32 0, i32 33
  %15665 = getelementptr inbounds %struct.Reg, %struct.Reg* %15664, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %15665 to i64*
  %15666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15667 = getelementptr inbounds %struct.GPR, %struct.GPR* %15666, i32 0, i32 9
  %15668 = getelementptr inbounds %struct.Reg, %struct.Reg* %15667, i32 0, i32 0
  %RSI.i1352 = bitcast %union.anon* %15668 to i64*
  %15669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15670 = getelementptr inbounds %struct.GPR, %struct.GPR* %15669, i32 0, i32 17
  %15671 = getelementptr inbounds %struct.Reg, %struct.Reg* %15670, i32 0, i32 0
  %R8.i1353 = bitcast %union.anon* %15671 to i64*
  %15672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15673 = getelementptr inbounds %struct.GPR, %struct.GPR* %15672, i32 0, i32 19
  %15674 = getelementptr inbounds %struct.Reg, %struct.Reg* %15673, i32 0, i32 0
  %R9.i1354 = bitcast %union.anon* %15674 to i64*
  %15675 = load i64, i64* %RSI.i1352
  %15676 = load i64, i64* %R8.i1353
  %15677 = load i64, i64* %R9.i1354
  %15678 = mul i64 %15677, 4
  %15679 = add i64 %15678, %15676
  %15680 = load i64, i64* %PC.i1351
  %15681 = add i64 %15680, 4
  store i64 %15681, i64* %PC.i1351
  %15682 = trunc i64 %15675 to i32
  %15683 = inttoptr i64 %15679 to i32*
  %15684 = load i32, i32* %15683
  %15685 = sub i32 %15682, %15684
  %15686 = zext i32 %15685 to i64
  store i64 %15686, i64* %RSI.i1352, align 8
  %15687 = icmp ult i32 %15682, %15684
  %15688 = zext i1 %15687 to i8
  %15689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15688, i8* %15689, align 1
  %15690 = and i32 %15685, 255
  %15691 = call i32 @llvm.ctpop.i32(i32 %15690)
  %15692 = trunc i32 %15691 to i8
  %15693 = and i8 %15692, 1
  %15694 = xor i8 %15693, 1
  %15695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15694, i8* %15695, align 1
  %15696 = xor i32 %15684, %15682
  %15697 = xor i32 %15696, %15685
  %15698 = lshr i32 %15697, 4
  %15699 = trunc i32 %15698 to i8
  %15700 = and i8 %15699, 1
  %15701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15700, i8* %15701, align 1
  %15702 = icmp eq i32 %15685, 0
  %15703 = zext i1 %15702 to i8
  %15704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15703, i8* %15704, align 1
  %15705 = lshr i32 %15685, 31
  %15706 = trunc i32 %15705 to i8
  %15707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15706, i8* %15707, align 1
  %15708 = lshr i32 %15682, 31
  %15709 = lshr i32 %15684, 31
  %15710 = xor i32 %15709, %15708
  %15711 = xor i32 %15705, %15708
  %15712 = add i32 %15711, %15710
  %15713 = icmp eq i32 %15712, 2
  %15714 = zext i1 %15713 to i8
  %15715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15714, i8* %15715, align 1
  store %struct.Memory* %loadMem_40c933, %struct.Memory** %MEMORY
  %loadMem_40c937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15717 = getelementptr inbounds %struct.GPR, %struct.GPR* %15716, i32 0, i32 33
  %15718 = getelementptr inbounds %struct.Reg, %struct.Reg* %15717, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %15718 to i64*
  %15719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15720 = getelementptr inbounds %struct.GPR, %struct.GPR* %15719, i32 0, i32 9
  %15721 = getelementptr inbounds %struct.Reg, %struct.Reg* %15720, i32 0, i32 0
  %ESI.i1349 = bitcast %union.anon* %15721 to i32*
  %15722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15723 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15722, i64 0, i64 0
  %YMM0.i1350 = bitcast %union.VectorReg* %15723 to %"class.std::bitset"*
  %15724 = bitcast %"class.std::bitset"* %YMM0.i1350 to i8*
  %15725 = load i32, i32* %ESI.i1349
  %15726 = zext i32 %15725 to i64
  %15727 = load i64, i64* %PC.i1348
  %15728 = add i64 %15727, 4
  store i64 %15728, i64* %PC.i1348
  %15729 = sitofp i32 %15725 to double
  %15730 = bitcast i8* %15724 to double*
  store double %15729, double* %15730, align 1
  store %struct.Memory* %loadMem_40c937, %struct.Memory** %MEMORY
  %loadMem_40c93b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15732 = getelementptr inbounds %struct.GPR, %struct.GPR* %15731, i32 0, i32 33
  %15733 = getelementptr inbounds %struct.Reg, %struct.Reg* %15732, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %15733 to i64*
  %15734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15735 = getelementptr inbounds %struct.GPR, %struct.GPR* %15734, i32 0, i32 15
  %15736 = getelementptr inbounds %struct.Reg, %struct.Reg* %15735, i32 0, i32 0
  %RBP.i1346 = bitcast %union.anon* %15736 to i64*
  %15737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15738 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15737, i64 0, i64 0
  %XMM0.i1347 = bitcast %union.VectorReg* %15738 to %union.vec128_t*
  %15739 = load i64, i64* %RBP.i1346
  %15740 = sub i64 %15739, 272
  %15741 = bitcast %union.vec128_t* %XMM0.i1347 to i8*
  %15742 = load i64, i64* %PC.i1345
  %15743 = add i64 %15742, 8
  store i64 %15743, i64* %PC.i1345
  %15744 = bitcast i8* %15741 to double*
  %15745 = load double, double* %15744, align 1
  %15746 = inttoptr i64 %15740 to double*
  store double %15745, double* %15746
  store %struct.Memory* %loadMem_40c93b, %struct.Memory** %MEMORY
  %loadMem_40c943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15748 = getelementptr inbounds %struct.GPR, %struct.GPR* %15747, i32 0, i32 33
  %15749 = getelementptr inbounds %struct.Reg, %struct.Reg* %15748, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %15749 to i64*
  %15750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15751 = getelementptr inbounds %struct.GPR, %struct.GPR* %15750, i32 0, i32 11
  %15752 = getelementptr inbounds %struct.Reg, %struct.Reg* %15751, i32 0, i32 0
  %RDI.i1343 = bitcast %union.anon* %15752 to i64*
  %15753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15754 = getelementptr inbounds %struct.GPR, %struct.GPR* %15753, i32 0, i32 15
  %15755 = getelementptr inbounds %struct.Reg, %struct.Reg* %15754, i32 0, i32 0
  %RBP.i1344 = bitcast %union.anon* %15755 to i64*
  %15756 = load i64, i64* %RBP.i1344
  %15757 = sub i64 %15756, 260
  %15758 = load i64, i64* %PC.i1342
  %15759 = add i64 %15758, 6
  store i64 %15759, i64* %PC.i1342
  %15760 = inttoptr i64 %15757 to i32*
  %15761 = load i32, i32* %15760
  %15762 = zext i32 %15761 to i64
  store i64 %15762, i64* %RDI.i1343, align 8
  store %struct.Memory* %loadMem_40c943, %struct.Memory** %MEMORY
  %loadMem_40c949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15764 = getelementptr inbounds %struct.GPR, %struct.GPR* %15763, i32 0, i32 33
  %15765 = getelementptr inbounds %struct.Reg, %struct.Reg* %15764, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %15765 to i64*
  %15766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15767 = getelementptr inbounds %struct.GPR, %struct.GPR* %15766, i32 0, i32 9
  %15768 = getelementptr inbounds %struct.Reg, %struct.Reg* %15767, i32 0, i32 0
  %RSI.i1340 = bitcast %union.anon* %15768 to i64*
  %15769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15770 = getelementptr inbounds %struct.GPR, %struct.GPR* %15769, i32 0, i32 15
  %15771 = getelementptr inbounds %struct.Reg, %struct.Reg* %15770, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %15771 to i64*
  %15772 = load i64, i64* %RBP.i1341
  %15773 = sub i64 %15772, 100
  %15774 = load i64, i64* %PC.i1339
  %15775 = add i64 %15774, 3
  store i64 %15775, i64* %PC.i1339
  %15776 = inttoptr i64 %15773 to i32*
  %15777 = load i32, i32* %15776
  %15778 = zext i32 %15777 to i64
  store i64 %15778, i64* %RSI.i1340, align 8
  store %struct.Memory* %loadMem_40c949, %struct.Memory** %MEMORY
  %loadMem_40c94c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15780 = getelementptr inbounds %struct.GPR, %struct.GPR* %15779, i32 0, i32 33
  %15781 = getelementptr inbounds %struct.Reg, %struct.Reg* %15780, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %15781 to i64*
  %15782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15783 = getelementptr inbounds %struct.GPR, %struct.GPR* %15782, i32 0, i32 5
  %15784 = getelementptr inbounds %struct.Reg, %struct.Reg* %15783, i32 0, i32 0
  %RCX.i1337 = bitcast %union.anon* %15784 to i64*
  %15785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15786 = getelementptr inbounds %struct.GPR, %struct.GPR* %15785, i32 0, i32 15
  %15787 = getelementptr inbounds %struct.Reg, %struct.Reg* %15786, i32 0, i32 0
  %RBP.i1338 = bitcast %union.anon* %15787 to i64*
  %15788 = load i64, i64* %RBP.i1338
  %15789 = sub i64 %15788, 344
  %15790 = load i64, i64* %PC.i1336
  %15791 = add i64 %15790, 7
  store i64 %15791, i64* %PC.i1336
  %15792 = inttoptr i64 %15789 to i64*
  %15793 = load i64, i64* %15792
  store i64 %15793, i64* %RCX.i1337, align 8
  store %struct.Memory* %loadMem_40c94c, %struct.Memory** %MEMORY
  %loadMem1_40c953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15795 = getelementptr inbounds %struct.GPR, %struct.GPR* %15794, i32 0, i32 33
  %15796 = getelementptr inbounds %struct.Reg, %struct.Reg* %15795, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %15796 to i64*
  %15797 = load i64, i64* %PC.i1335
  %15798 = add i64 %15797, 656669
  %15799 = load i64, i64* %PC.i1335
  %15800 = add i64 %15799, 5
  %15801 = load i64, i64* %PC.i1335
  %15802 = add i64 %15801, 5
  store i64 %15802, i64* %PC.i1335
  %15803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15804 = load i64, i64* %15803, align 8
  %15805 = add i64 %15804, -8
  %15806 = inttoptr i64 %15805 to i64*
  store i64 %15800, i64* %15806
  store i64 %15805, i64* %15803, align 8
  %15807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15798, i64* %15807, align 8
  store %struct.Memory* %loadMem1_40c953, %struct.Memory** %MEMORY
  %loadMem2_40c953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c953 = load i64, i64* %3
  %call2_40c953 = call %struct.Memory* @sub_4ace70.levrun_linfo_inter(%struct.State* %0, i64 %loadPC_40c953, %struct.Memory* %loadMem2_40c953)
  store %struct.Memory* %call2_40c953, %struct.Memory** %MEMORY
  %loadMem_40c958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15809 = getelementptr inbounds %struct.GPR, %struct.GPR* %15808, i32 0, i32 33
  %15810 = getelementptr inbounds %struct.Reg, %struct.Reg* %15809, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %15810 to i64*
  %15811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15812 = getelementptr inbounds %struct.GPR, %struct.GPR* %15811, i32 0, i32 15
  %15813 = getelementptr inbounds %struct.Reg, %struct.Reg* %15812, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %15813 to i64*
  %15814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15815 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15814, i64 0, i64 0
  %YMM0.i1334 = bitcast %union.VectorReg* %15815 to %"class.std::bitset"*
  %15816 = bitcast %"class.std::bitset"* %YMM0.i1334 to i8*
  %15817 = load i64, i64* %RBP.i1333
  %15818 = sub i64 %15817, 272
  %15819 = load i64, i64* %PC.i1332
  %15820 = add i64 %15819, 8
  store i64 %15820, i64* %PC.i1332
  %15821 = inttoptr i64 %15818 to double*
  %15822 = load double, double* %15821
  %15823 = bitcast i8* %15816 to double*
  store double %15822, double* %15823, align 1
  %15824 = getelementptr inbounds i8, i8* %15816, i64 8
  %15825 = bitcast i8* %15824 to double*
  store double 0.000000e+00, double* %15825, align 1
  store %struct.Memory* %loadMem_40c958, %struct.Memory** %MEMORY
  %loadMem_40c960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15827 = getelementptr inbounds %struct.GPR, %struct.GPR* %15826, i32 0, i32 33
  %15828 = getelementptr inbounds %struct.Reg, %struct.Reg* %15827, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %15828 to i64*
  %15829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15830 = getelementptr inbounds %struct.GPR, %struct.GPR* %15829, i32 0, i32 15
  %15831 = getelementptr inbounds %struct.Reg, %struct.Reg* %15830, i32 0, i32 0
  %RBP.i1330 = bitcast %union.anon* %15831 to i64*
  %15832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15833 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15832, i64 0, i64 0
  %YMM0.i1331 = bitcast %union.VectorReg* %15833 to %"class.std::bitset"*
  %15834 = bitcast %"class.std::bitset"* %YMM0.i1331 to i8*
  %15835 = bitcast %"class.std::bitset"* %YMM0.i1331 to i8*
  %15836 = load i64, i64* %RBP.i1330
  %15837 = sub i64 %15836, 272
  %15838 = load i64, i64* %PC.i1329
  %15839 = add i64 %15838, 8
  store i64 %15839, i64* %PC.i1329
  %15840 = bitcast i8* %15835 to double*
  %15841 = load double, double* %15840, align 1
  %15842 = getelementptr inbounds i8, i8* %15835, i64 8
  %15843 = bitcast i8* %15842 to i64*
  %15844 = load i64, i64* %15843, align 1
  %15845 = inttoptr i64 %15837 to double*
  %15846 = load double, double* %15845
  %15847 = fmul double %15841, %15846
  %15848 = bitcast i8* %15834 to double*
  store double %15847, double* %15848, align 1
  %15849 = getelementptr inbounds i8, i8* %15834, i64 8
  %15850 = bitcast i8* %15849 to i64*
  store i64 %15844, i64* %15850, align 1
  store %struct.Memory* %loadMem_40c960, %struct.Memory** %MEMORY
  %loadMem_40c968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15852 = getelementptr inbounds %struct.GPR, %struct.GPR* %15851, i32 0, i32 33
  %15853 = getelementptr inbounds %struct.Reg, %struct.Reg* %15852, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %15853 to i64*
  %15854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15855 = getelementptr inbounds %struct.GPR, %struct.GPR* %15854, i32 0, i32 15
  %15856 = getelementptr inbounds %struct.Reg, %struct.Reg* %15855, i32 0, i32 0
  %RBP.i1327 = bitcast %union.anon* %15856 to i64*
  %15857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15858 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15857, i64 0, i64 1
  %YMM1.i1328 = bitcast %union.VectorReg* %15858 to %"class.std::bitset"*
  %15859 = bitcast %"class.std::bitset"* %YMM1.i1328 to i8*
  %15860 = load i64, i64* %RBP.i1327
  %15861 = sub i64 %15860, 296
  %15862 = load i64, i64* %PC.i1326
  %15863 = add i64 %15862, 8
  store i64 %15863, i64* %PC.i1326
  %15864 = inttoptr i64 %15861 to double*
  %15865 = load double, double* %15864
  %15866 = bitcast i8* %15859 to double*
  store double %15865, double* %15866, align 1
  %15867 = getelementptr inbounds i8, i8* %15859, i64 8
  %15868 = bitcast i8* %15867 to double*
  store double 0.000000e+00, double* %15868, align 1
  store %struct.Memory* %loadMem_40c968, %struct.Memory** %MEMORY
  %loadMem_40c970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15870 = getelementptr inbounds %struct.GPR, %struct.GPR* %15869, i32 0, i32 33
  %15871 = getelementptr inbounds %struct.Reg, %struct.Reg* %15870, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %15871 to i64*
  %15872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15873 = getelementptr inbounds %struct.GPR, %struct.GPR* %15872, i32 0, i32 15
  %15874 = getelementptr inbounds %struct.Reg, %struct.Reg* %15873, i32 0, i32 0
  %RBP.i1324 = bitcast %union.anon* %15874 to i64*
  %15875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15876 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15875, i64 0, i64 2
  %YMM2.i1325 = bitcast %union.VectorReg* %15876 to %"class.std::bitset"*
  %15877 = bitcast %"class.std::bitset"* %YMM2.i1325 to i8*
  %15878 = load i64, i64* %RBP.i1324
  %15879 = sub i64 %15878, 284
  %15880 = load i64, i64* %PC.i1323
  %15881 = add i64 %15880, 8
  store i64 %15881, i64* %PC.i1323
  %15882 = inttoptr i64 %15879 to i32*
  %15883 = load i32, i32* %15882
  %15884 = sitofp i32 %15883 to double
  %15885 = bitcast i8* %15877 to double*
  store double %15884, double* %15885, align 1
  store %struct.Memory* %loadMem_40c970, %struct.Memory** %MEMORY
  %loadMem_40c978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15887 = getelementptr inbounds %struct.GPR, %struct.GPR* %15886, i32 0, i32 33
  %15888 = getelementptr inbounds %struct.Reg, %struct.Reg* %15887, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %15888 to i64*
  %15889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15890 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15889, i64 0, i64 1
  %YMM1.i1321 = bitcast %union.VectorReg* %15890 to %"class.std::bitset"*
  %15891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15892 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15891, i64 0, i64 2
  %XMM2.i1322 = bitcast %union.VectorReg* %15892 to %union.vec128_t*
  %15893 = bitcast %"class.std::bitset"* %YMM1.i1321 to i8*
  %15894 = bitcast %"class.std::bitset"* %YMM1.i1321 to i8*
  %15895 = bitcast %union.vec128_t* %XMM2.i1322 to i8*
  %15896 = load i64, i64* %PC.i1320
  %15897 = add i64 %15896, 4
  store i64 %15897, i64* %PC.i1320
  %15898 = bitcast i8* %15894 to double*
  %15899 = load double, double* %15898, align 1
  %15900 = getelementptr inbounds i8, i8* %15894, i64 8
  %15901 = bitcast i8* %15900 to i64*
  %15902 = load i64, i64* %15901, align 1
  %15903 = bitcast i8* %15895 to double*
  %15904 = load double, double* %15903, align 1
  %15905 = fmul double %15899, %15904
  %15906 = bitcast i8* %15893 to double*
  store double %15905, double* %15906, align 1
  %15907 = getelementptr inbounds i8, i8* %15893, i64 8
  %15908 = bitcast i8* %15907 to i64*
  store i64 %15902, i64* %15908, align 1
  store %struct.Memory* %loadMem_40c978, %struct.Memory** %MEMORY
  %loadMem_40c97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15910 = getelementptr inbounds %struct.GPR, %struct.GPR* %15909, i32 0, i32 33
  %15911 = getelementptr inbounds %struct.Reg, %struct.Reg* %15910, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %15911 to i64*
  %15912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15912, i64 0, i64 0
  %YMM0.i1318 = bitcast %union.VectorReg* %15913 to %"class.std::bitset"*
  %15914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15914, i64 0, i64 1
  %XMM1.i1319 = bitcast %union.VectorReg* %15915 to %union.vec128_t*
  %15916 = bitcast %"class.std::bitset"* %YMM0.i1318 to i8*
  %15917 = bitcast %"class.std::bitset"* %YMM0.i1318 to i8*
  %15918 = bitcast %union.vec128_t* %XMM1.i1319 to i8*
  %15919 = load i64, i64* %PC.i1317
  %15920 = add i64 %15919, 4
  store i64 %15920, i64* %PC.i1317
  %15921 = bitcast i8* %15917 to double*
  %15922 = load double, double* %15921, align 1
  %15923 = getelementptr inbounds i8, i8* %15917, i64 8
  %15924 = bitcast i8* %15923 to i64*
  %15925 = load i64, i64* %15924, align 1
  %15926 = bitcast i8* %15918 to double*
  %15927 = load double, double* %15926, align 1
  %15928 = fadd double %15922, %15927
  %15929 = bitcast i8* %15916 to double*
  store double %15928, double* %15929, align 1
  %15930 = getelementptr inbounds i8, i8* %15916, i64 8
  %15931 = bitcast i8* %15930 to i64*
  store i64 %15925, i64* %15931, align 1
  store %struct.Memory* %loadMem_40c97c, %struct.Memory** %MEMORY
  %loadMem_40c980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15933 = getelementptr inbounds %struct.GPR, %struct.GPR* %15932, i32 0, i32 33
  %15934 = getelementptr inbounds %struct.Reg, %struct.Reg* %15933, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %15934 to i64*
  %15935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15936 = getelementptr inbounds %struct.GPR, %struct.GPR* %15935, i32 0, i32 15
  %15937 = getelementptr inbounds %struct.Reg, %struct.Reg* %15936, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %15937 to i64*
  %15938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %15939 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15938, i64 0, i64 0
  %XMM0.i1316 = bitcast %union.VectorReg* %15939 to %union.vec128_t*
  %15940 = load i64, i64* %RBP.i1315
  %15941 = sub i64 %15940, 272
  %15942 = bitcast %union.vec128_t* %XMM0.i1316 to i8*
  %15943 = load i64, i64* %PC.i1314
  %15944 = add i64 %15943, 8
  store i64 %15944, i64* %PC.i1314
  %15945 = bitcast i8* %15942 to double*
  %15946 = load double, double* %15945, align 1
  %15947 = inttoptr i64 %15941 to double*
  store double %15946, double* %15947
  store %struct.Memory* %loadMem_40c980, %struct.Memory** %MEMORY
  %loadMem_40c988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15949 = getelementptr inbounds %struct.GPR, %struct.GPR* %15948, i32 0, i32 33
  %15950 = getelementptr inbounds %struct.Reg, %struct.Reg* %15949, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %15950 to i64*
  %15951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15952 = getelementptr inbounds %struct.GPR, %struct.GPR* %15951, i32 0, i32 5
  %15953 = getelementptr inbounds %struct.Reg, %struct.Reg* %15952, i32 0, i32 0
  %RCX.i1313 = bitcast %union.anon* %15953 to i64*
  %15954 = load i64, i64* %PC.i1312
  %15955 = add i64 %15954, 8
  store i64 %15955, i64* %PC.i1312
  %15956 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %15956, i64* %RCX.i1313, align 8
  store %struct.Memory* %loadMem_40c988, %struct.Memory** %MEMORY
  %loadMem_40c990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15958 = getelementptr inbounds %struct.GPR, %struct.GPR* %15957, i32 0, i32 33
  %15959 = getelementptr inbounds %struct.Reg, %struct.Reg* %15958, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %15959 to i64*
  %15960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15961 = getelementptr inbounds %struct.GPR, %struct.GPR* %15960, i32 0, i32 5
  %15962 = getelementptr inbounds %struct.Reg, %struct.Reg* %15961, i32 0, i32 0
  %RCX.i1311 = bitcast %union.anon* %15962 to i64*
  %15963 = load i64, i64* %RCX.i1311
  %15964 = load i64, i64* %PC.i1310
  %15965 = add i64 %15964, 7
  store i64 %15965, i64* %PC.i1310
  %15966 = add i64 13112, %15963
  store i64 %15966, i64* %RCX.i1311, align 8
  %15967 = icmp ult i64 %15966, %15963
  %15968 = icmp ult i64 %15966, 13112
  %15969 = or i1 %15967, %15968
  %15970 = zext i1 %15969 to i8
  %15971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15970, i8* %15971, align 1
  %15972 = trunc i64 %15966 to i32
  %15973 = and i32 %15972, 255
  %15974 = call i32 @llvm.ctpop.i32(i32 %15973)
  %15975 = trunc i32 %15974 to i8
  %15976 = and i8 %15975, 1
  %15977 = xor i8 %15976, 1
  %15978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15977, i8* %15978, align 1
  %15979 = xor i64 13112, %15963
  %15980 = xor i64 %15979, %15966
  %15981 = lshr i64 %15980, 4
  %15982 = trunc i64 %15981 to i8
  %15983 = and i8 %15982, 1
  %15984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15983, i8* %15984, align 1
  %15985 = icmp eq i64 %15966, 0
  %15986 = zext i1 %15985 to i8
  %15987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15986, i8* %15987, align 1
  %15988 = lshr i64 %15966, 63
  %15989 = trunc i64 %15988 to i8
  %15990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15989, i8* %15990, align 1
  %15991 = lshr i64 %15963, 63
  %15992 = xor i64 %15988, %15991
  %15993 = add i64 %15992, %15988
  %15994 = icmp eq i64 %15993, 2
  %15995 = zext i1 %15994 to i8
  %15996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15995, i8* %15996, align 1
  store %struct.Memory* %loadMem_40c990, %struct.Memory** %MEMORY
  %loadMem_40c997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15998 = getelementptr inbounds %struct.GPR, %struct.GPR* %15997, i32 0, i32 33
  %15999 = getelementptr inbounds %struct.Reg, %struct.Reg* %15998, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %15999 to i64*
  %16000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16001 = getelementptr inbounds %struct.GPR, %struct.GPR* %16000, i32 0, i32 7
  %16002 = getelementptr inbounds %struct.Reg, %struct.Reg* %16001, i32 0, i32 0
  %RDX.i1308 = bitcast %union.anon* %16002 to i64*
  %16003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16004 = getelementptr inbounds %struct.GPR, %struct.GPR* %16003, i32 0, i32 15
  %16005 = getelementptr inbounds %struct.Reg, %struct.Reg* %16004, i32 0, i32 0
  %RBP.i1309 = bitcast %union.anon* %16005 to i64*
  %16006 = load i64, i64* %RBP.i1309
  %16007 = sub i64 %16006, 20
  %16008 = load i64, i64* %PC.i1307
  %16009 = add i64 %16008, 4
  store i64 %16009, i64* %PC.i1307
  %16010 = inttoptr i64 %16007 to i32*
  %16011 = load i32, i32* %16010
  %16012 = sext i32 %16011 to i64
  store i64 %16012, i64* %RDX.i1308, align 8
  store %struct.Memory* %loadMem_40c997, %struct.Memory** %MEMORY
  %loadMem_40c99b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16014 = getelementptr inbounds %struct.GPR, %struct.GPR* %16013, i32 0, i32 33
  %16015 = getelementptr inbounds %struct.Reg, %struct.Reg* %16014, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %16015 to i64*
  %16016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16017 = getelementptr inbounds %struct.GPR, %struct.GPR* %16016, i32 0, i32 7
  %16018 = getelementptr inbounds %struct.Reg, %struct.Reg* %16017, i32 0, i32 0
  %RDX.i1306 = bitcast %union.anon* %16018 to i64*
  %16019 = load i64, i64* %RDX.i1306
  %16020 = load i64, i64* %PC.i1305
  %16021 = add i64 %16020, 4
  store i64 %16021, i64* %PC.i1305
  %16022 = shl i64 %16019, 5
  %16023 = icmp slt i64 %16022, 0
  %16024 = shl i64 %16022, 1
  store i64 %16024, i64* %RDX.i1306, align 8
  %16025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16026 = zext i1 %16023 to i8
  store i8 %16026, i8* %16025, align 1
  %16027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16028 = trunc i64 %16024 to i32
  %16029 = and i32 %16028, 254
  %16030 = call i32 @llvm.ctpop.i32(i32 %16029)
  %16031 = trunc i32 %16030 to i8
  %16032 = and i8 %16031, 1
  %16033 = xor i8 %16032, 1
  store i8 %16033, i8* %16027, align 1
  %16034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16034, align 1
  %16035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16036 = icmp eq i64 %16024, 0
  %16037 = zext i1 %16036 to i8
  store i8 %16037, i8* %16035, align 1
  %16038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16039 = lshr i64 %16024, 63
  %16040 = trunc i64 %16039 to i8
  store i8 %16040, i8* %16038, align 1
  %16041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16041, align 1
  store %struct.Memory* %loadMem_40c99b, %struct.Memory** %MEMORY
  %loadMem_40c99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16043 = getelementptr inbounds %struct.GPR, %struct.GPR* %16042, i32 0, i32 33
  %16044 = getelementptr inbounds %struct.Reg, %struct.Reg* %16043, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %16044 to i64*
  %16045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16046 = getelementptr inbounds %struct.GPR, %struct.GPR* %16045, i32 0, i32 5
  %16047 = getelementptr inbounds %struct.Reg, %struct.Reg* %16046, i32 0, i32 0
  %RCX.i1303 = bitcast %union.anon* %16047 to i64*
  %16048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16049 = getelementptr inbounds %struct.GPR, %struct.GPR* %16048, i32 0, i32 7
  %16050 = getelementptr inbounds %struct.Reg, %struct.Reg* %16049, i32 0, i32 0
  %RDX.i1304 = bitcast %union.anon* %16050 to i64*
  %16051 = load i64, i64* %RCX.i1303
  %16052 = load i64, i64* %RDX.i1304
  %16053 = load i64, i64* %PC.i1302
  %16054 = add i64 %16053, 3
  store i64 %16054, i64* %PC.i1302
  %16055 = add i64 %16052, %16051
  store i64 %16055, i64* %RCX.i1303, align 8
  %16056 = icmp ult i64 %16055, %16051
  %16057 = icmp ult i64 %16055, %16052
  %16058 = or i1 %16056, %16057
  %16059 = zext i1 %16058 to i8
  %16060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16059, i8* %16060, align 1
  %16061 = trunc i64 %16055 to i32
  %16062 = and i32 %16061, 255
  %16063 = call i32 @llvm.ctpop.i32(i32 %16062)
  %16064 = trunc i32 %16063 to i8
  %16065 = and i8 %16064, 1
  %16066 = xor i8 %16065, 1
  %16067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16066, i8* %16067, align 1
  %16068 = xor i64 %16052, %16051
  %16069 = xor i64 %16068, %16055
  %16070 = lshr i64 %16069, 4
  %16071 = trunc i64 %16070 to i8
  %16072 = and i8 %16071, 1
  %16073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16072, i8* %16073, align 1
  %16074 = icmp eq i64 %16055, 0
  %16075 = zext i1 %16074 to i8
  %16076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16075, i8* %16076, align 1
  %16077 = lshr i64 %16055, 63
  %16078 = trunc i64 %16077 to i8
  %16079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16078, i8* %16079, align 1
  %16080 = lshr i64 %16051, 63
  %16081 = lshr i64 %16052, 63
  %16082 = xor i64 %16077, %16080
  %16083 = xor i64 %16077, %16081
  %16084 = add i64 %16082, %16083
  %16085 = icmp eq i64 %16084, 2
  %16086 = zext i1 %16085 to i8
  %16087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16086, i8* %16087, align 1
  store %struct.Memory* %loadMem_40c99f, %struct.Memory** %MEMORY
  %loadMem_40c9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16089 = getelementptr inbounds %struct.GPR, %struct.GPR* %16088, i32 0, i32 33
  %16090 = getelementptr inbounds %struct.Reg, %struct.Reg* %16089, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %16090 to i64*
  %16091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16092 = getelementptr inbounds %struct.GPR, %struct.GPR* %16091, i32 0, i32 7
  %16093 = getelementptr inbounds %struct.Reg, %struct.Reg* %16092, i32 0, i32 0
  %RDX.i1300 = bitcast %union.anon* %16093 to i64*
  %16094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16095 = getelementptr inbounds %struct.GPR, %struct.GPR* %16094, i32 0, i32 15
  %16096 = getelementptr inbounds %struct.Reg, %struct.Reg* %16095, i32 0, i32 0
  %RBP.i1301 = bitcast %union.anon* %16096 to i64*
  %16097 = load i64, i64* %RBP.i1301
  %16098 = sub i64 %16097, 24
  %16099 = load i64, i64* %PC.i1299
  %16100 = add i64 %16099, 4
  store i64 %16100, i64* %PC.i1299
  %16101 = inttoptr i64 %16098 to i32*
  %16102 = load i32, i32* %16101
  %16103 = sext i32 %16102 to i64
  store i64 %16103, i64* %RDX.i1300, align 8
  store %struct.Memory* %loadMem_40c9a2, %struct.Memory** %MEMORY
  %loadMem_40c9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16105 = getelementptr inbounds %struct.GPR, %struct.GPR* %16104, i32 0, i32 33
  %16106 = getelementptr inbounds %struct.Reg, %struct.Reg* %16105, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %16106 to i64*
  %16107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16108 = getelementptr inbounds %struct.GPR, %struct.GPR* %16107, i32 0, i32 1
  %16109 = getelementptr inbounds %struct.Reg, %struct.Reg* %16108, i32 0, i32 0
  %RAX.i1296 = bitcast %union.anon* %16109 to i64*
  %16110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16111 = getelementptr inbounds %struct.GPR, %struct.GPR* %16110, i32 0, i32 5
  %16112 = getelementptr inbounds %struct.Reg, %struct.Reg* %16111, i32 0, i32 0
  %RCX.i1297 = bitcast %union.anon* %16112 to i64*
  %16113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16114 = getelementptr inbounds %struct.GPR, %struct.GPR* %16113, i32 0, i32 7
  %16115 = getelementptr inbounds %struct.Reg, %struct.Reg* %16114, i32 0, i32 0
  %RDX.i1298 = bitcast %union.anon* %16115 to i64*
  %16116 = load i64, i64* %RCX.i1297
  %16117 = load i64, i64* %RDX.i1298
  %16118 = mul i64 %16117, 4
  %16119 = add i64 %16118, %16116
  %16120 = load i64, i64* %PC.i1295
  %16121 = add i64 %16120, 3
  store i64 %16121, i64* %PC.i1295
  %16122 = inttoptr i64 %16119 to i32*
  %16123 = load i32, i32* %16122
  %16124 = zext i32 %16123 to i64
  store i64 %16124, i64* %RAX.i1296, align 8
  store %struct.Memory* %loadMem_40c9a6, %struct.Memory** %MEMORY
  %loadMem_40c9a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16126 = getelementptr inbounds %struct.GPR, %struct.GPR* %16125, i32 0, i32 33
  %16127 = getelementptr inbounds %struct.Reg, %struct.Reg* %16126, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %16127 to i64*
  %16128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16129 = getelementptr inbounds %struct.GPR, %struct.GPR* %16128, i32 0, i32 11
  %16130 = getelementptr inbounds %struct.Reg, %struct.Reg* %16129, i32 0, i32 0
  %RDI.i1293 = bitcast %union.anon* %16130 to i64*
  %16131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16132 = getelementptr inbounds %struct.GPR, %struct.GPR* %16131, i32 0, i32 15
  %16133 = getelementptr inbounds %struct.Reg, %struct.Reg* %16132, i32 0, i32 0
  %RBP.i1294 = bitcast %union.anon* %16133 to i64*
  %16134 = load i64, i64* %RBP.i1294
  %16135 = sub i64 %16134, 264
  %16136 = load i64, i64* %PC.i1292
  %16137 = add i64 %16136, 6
  store i64 %16137, i64* %PC.i1292
  %16138 = inttoptr i64 %16135 to i32*
  %16139 = load i32, i32* %16138
  %16140 = zext i32 %16139 to i64
  store i64 %16140, i64* %RDI.i1293, align 8
  store %struct.Memory* %loadMem_40c9a9, %struct.Memory** %MEMORY
  %loadMem_40c9af = load %struct.Memory*, %struct.Memory** %MEMORY
  %16141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16142 = getelementptr inbounds %struct.GPR, %struct.GPR* %16141, i32 0, i32 33
  %16143 = getelementptr inbounds %struct.Reg, %struct.Reg* %16142, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %16143 to i64*
  %16144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16145 = getelementptr inbounds %struct.GPR, %struct.GPR* %16144, i32 0, i32 9
  %16146 = getelementptr inbounds %struct.Reg, %struct.Reg* %16145, i32 0, i32 0
  %RSI.i1290 = bitcast %union.anon* %16146 to i64*
  %16147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16148 = getelementptr inbounds %struct.GPR, %struct.GPR* %16147, i32 0, i32 15
  %16149 = getelementptr inbounds %struct.Reg, %struct.Reg* %16148, i32 0, i32 0
  %RBP.i1291 = bitcast %union.anon* %16149 to i64*
  %16150 = load i64, i64* %RBP.i1291
  %16151 = sub i64 %16150, 256
  %16152 = load i64, i64* %PC.i1289
  %16153 = add i64 %16152, 6
  store i64 %16153, i64* %PC.i1289
  %16154 = inttoptr i64 %16151 to i32*
  %16155 = load i32, i32* %16154
  %16156 = zext i32 %16155 to i64
  store i64 %16156, i64* %RSI.i1290, align 8
  store %struct.Memory* %loadMem_40c9af, %struct.Memory** %MEMORY
  %loadMem_40c9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16158 = getelementptr inbounds %struct.GPR, %struct.GPR* %16157, i32 0, i32 33
  %16159 = getelementptr inbounds %struct.Reg, %struct.Reg* %16158, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %16159 to i64*
  %16160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16161 = getelementptr inbounds %struct.GPR, %struct.GPR* %16160, i32 0, i32 1
  %16162 = getelementptr inbounds %struct.Reg, %struct.Reg* %16161, i32 0, i32 0
  %EAX.i1287 = bitcast %union.anon* %16162 to i32*
  %16163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16164 = getelementptr inbounds %struct.GPR, %struct.GPR* %16163, i32 0, i32 15
  %16165 = getelementptr inbounds %struct.Reg, %struct.Reg* %16164, i32 0, i32 0
  %RBP.i1288 = bitcast %union.anon* %16165 to i64*
  %16166 = load i64, i64* %RBP.i1288
  %16167 = sub i64 %16166, 348
  %16168 = load i32, i32* %EAX.i1287
  %16169 = zext i32 %16168 to i64
  %16170 = load i64, i64* %PC.i1286
  %16171 = add i64 %16170, 6
  store i64 %16171, i64* %PC.i1286
  %16172 = inttoptr i64 %16167 to i32*
  store i32 %16168, i32* %16172
  store %struct.Memory* %loadMem_40c9b5, %struct.Memory** %MEMORY
  %loadMem1_40c9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16174 = getelementptr inbounds %struct.GPR, %struct.GPR* %16173, i32 0, i32 33
  %16175 = getelementptr inbounds %struct.Reg, %struct.Reg* %16174, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %16175 to i64*
  %16176 = load i64, i64* %PC.i1285
  %16177 = add i64 %16176, 427925
  %16178 = load i64, i64* %PC.i1285
  %16179 = add i64 %16178, 5
  %16180 = load i64, i64* %PC.i1285
  %16181 = add i64 %16180, 5
  store i64 %16181, i64* %PC.i1285
  %16182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16183 = load i64, i64* %16182, align 8
  %16184 = add i64 %16183, -8
  %16185 = inttoptr i64 %16184 to i64*
  store i64 %16179, i64* %16185
  store i64 %16184, i64* %16182, align 8
  %16186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16177, i64* %16186, align 8
  store %struct.Memory* %loadMem1_40c9bb, %struct.Memory** %MEMORY
  %loadMem2_40c9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c9bb = load i64, i64* %3
  %call2_40c9bb = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40c9bb, %struct.Memory* %loadMem2_40c9bb)
  store %struct.Memory* %call2_40c9bb, %struct.Memory** %MEMORY
  %loadMem_40c9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16188 = getelementptr inbounds %struct.GPR, %struct.GPR* %16187, i32 0, i32 33
  %16189 = getelementptr inbounds %struct.Reg, %struct.Reg* %16188, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %16189 to i64*
  %16190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16191 = getelementptr inbounds %struct.GPR, %struct.GPR* %16190, i32 0, i32 7
  %16192 = getelementptr inbounds %struct.Reg, %struct.Reg* %16191, i32 0, i32 0
  %RDX.i1283 = bitcast %union.anon* %16192 to i64*
  %16193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16194 = getelementptr inbounds %struct.GPR, %struct.GPR* %16193, i32 0, i32 15
  %16195 = getelementptr inbounds %struct.Reg, %struct.Reg* %16194, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %16195 to i64*
  %16196 = load i64, i64* %RBP.i1284
  %16197 = sub i64 %16196, 284
  %16198 = load i64, i64* %PC.i1282
  %16199 = add i64 %16198, 7
  store i64 %16199, i64* %PC.i1282
  store i64 %16197, i64* %RDX.i1283, align 8
  store %struct.Memory* %loadMem_40c9c0, %struct.Memory** %MEMORY
  %loadMem_40c9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16201 = getelementptr inbounds %struct.GPR, %struct.GPR* %16200, i32 0, i32 33
  %16202 = getelementptr inbounds %struct.Reg, %struct.Reg* %16201, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %16202 to i64*
  %16203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16204 = getelementptr inbounds %struct.GPR, %struct.GPR* %16203, i32 0, i32 5
  %16205 = getelementptr inbounds %struct.Reg, %struct.Reg* %16204, i32 0, i32 0
  %RCX.i1280 = bitcast %union.anon* %16205 to i64*
  %16206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16207 = getelementptr inbounds %struct.GPR, %struct.GPR* %16206, i32 0, i32 15
  %16208 = getelementptr inbounds %struct.Reg, %struct.Reg* %16207, i32 0, i32 0
  %RBP.i1281 = bitcast %union.anon* %16208 to i64*
  %16209 = load i64, i64* %RBP.i1281
  %16210 = sub i64 %16209, 288
  %16211 = load i64, i64* %PC.i1279
  %16212 = add i64 %16211, 7
  store i64 %16212, i64* %PC.i1279
  store i64 %16210, i64* %RCX.i1280, align 8
  store %struct.Memory* %loadMem_40c9c7, %struct.Memory** %MEMORY
  %loadMem_40c9ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %16213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16214 = getelementptr inbounds %struct.GPR, %struct.GPR* %16213, i32 0, i32 33
  %16215 = getelementptr inbounds %struct.Reg, %struct.Reg* %16214, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %16215 to i64*
  %16216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16217 = getelementptr inbounds %struct.GPR, %struct.GPR* %16216, i32 0, i32 15
  %16218 = getelementptr inbounds %struct.Reg, %struct.Reg* %16217, i32 0, i32 0
  %RBP.i1277 = bitcast %union.anon* %16218 to i64*
  %16219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16220 = getelementptr inbounds %struct.GPR, %struct.GPR* %16219, i32 0, i32 17
  %16221 = getelementptr inbounds %struct.Reg, %struct.Reg* %16220, i32 0, i32 0
  %R8.i1278 = bitcast %union.anon* %16221 to i64*
  %16222 = load i64, i64* %RBP.i1277
  %16223 = sub i64 %16222, 176
  %16224 = load i64, i64* %PC.i1276
  %16225 = add i64 %16224, 7
  store i64 %16225, i64* %PC.i1276
  store i64 %16223, i64* %R8.i1278, align 8
  store %struct.Memory* %loadMem_40c9ce, %struct.Memory** %MEMORY
  %loadMem_40c9d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16227 = getelementptr inbounds %struct.GPR, %struct.GPR* %16226, i32 0, i32 33
  %16228 = getelementptr inbounds %struct.Reg, %struct.Reg* %16227, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %16228 to i64*
  %16229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16230 = getelementptr inbounds %struct.GPR, %struct.GPR* %16229, i32 0, i32 19
  %16231 = getelementptr inbounds %struct.Reg, %struct.Reg* %16230, i32 0, i32 0
  %R9.i1275 = bitcast %union.anon* %16231 to i64*
  %16232 = load i64, i64* %PC.i1274
  %16233 = add i64 %16232, 10
  store i64 %16233, i64* %PC.i1274
  store i64 ptrtoint (%G__0x4b2a50_type* @G__0x4b2a50 to i64), i64* %R9.i1275, align 8
  store %struct.Memory* %loadMem_40c9d5, %struct.Memory** %MEMORY
  %loadMem_40c9df = load %struct.Memory*, %struct.Memory** %MEMORY
  %16234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16235 = getelementptr inbounds %struct.GPR, %struct.GPR* %16234, i32 0, i32 33
  %16236 = getelementptr inbounds %struct.Reg, %struct.Reg* %16235, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %16236 to i64*
  %16237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16238 = getelementptr inbounds %struct.GPR, %struct.GPR* %16237, i32 0, i32 21
  %16239 = getelementptr inbounds %struct.Reg, %struct.Reg* %16238, i32 0, i32 0
  %R10.i1273 = bitcast %union.anon* %16239 to i64*
  %16240 = load i64, i64* %PC.i1272
  %16241 = add i64 %16240, 10
  store i64 %16241, i64* %PC.i1272
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %R10.i1273, align 8
  store %struct.Memory* %loadMem_40c9df, %struct.Memory** %MEMORY
  %loadMem_40c9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16243 = getelementptr inbounds %struct.GPR, %struct.GPR* %16242, i32 0, i32 33
  %16244 = getelementptr inbounds %struct.Reg, %struct.Reg* %16243, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %16244 to i64*
  %16245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16246 = getelementptr inbounds %struct.GPR, %struct.GPR* %16245, i32 0, i32 15
  %16247 = getelementptr inbounds %struct.Reg, %struct.Reg* %16246, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %16247 to i64*
  %16248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16249 = getelementptr inbounds %struct.GPR, %struct.GPR* %16248, i32 0, i32 23
  %16250 = getelementptr inbounds %struct.Reg, %struct.Reg* %16249, i32 0, i32 0
  %R11.i1271 = bitcast %union.anon* %16250 to i64*
  %16251 = load i64, i64* %RBP.i1270
  %16252 = sub i64 %16251, 192
  %16253 = load i64, i64* %PC.i1269
  %16254 = add i64 %16253, 7
  store i64 %16254, i64* %PC.i1269
  %16255 = inttoptr i64 %16252 to i32*
  %16256 = load i32, i32* %16255
  %16257 = sext i32 %16256 to i64
  store i64 %16257, i64* %R11.i1271, align 8
  store %struct.Memory* %loadMem_40c9e9, %struct.Memory** %MEMORY
  %loadMem_40c9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16259 = getelementptr inbounds %struct.GPR, %struct.GPR* %16258, i32 0, i32 33
  %16260 = getelementptr inbounds %struct.Reg, %struct.Reg* %16259, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %16260 to i64*
  %16261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16262 = getelementptr inbounds %struct.GPR, %struct.GPR* %16261, i32 0, i32 23
  %16263 = getelementptr inbounds %struct.Reg, %struct.Reg* %16262, i32 0, i32 0
  %R11.i1268 = bitcast %union.anon* %16263 to i64*
  %16264 = load i64, i64* %R11.i1268
  %16265 = load i64, i64* %PC.i1267
  %16266 = add i64 %16265, 4
  store i64 %16266, i64* %PC.i1267
  %16267 = shl i64 %16264, 5
  %16268 = icmp slt i64 %16267, 0
  %16269 = shl i64 %16267, 1
  store i64 %16269, i64* %R11.i1268, align 8
  %16270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16271 = zext i1 %16268 to i8
  store i8 %16271, i8* %16270, align 1
  %16272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16273 = trunc i64 %16269 to i32
  %16274 = and i32 %16273, 254
  %16275 = call i32 @llvm.ctpop.i32(i32 %16274)
  %16276 = trunc i32 %16275 to i8
  %16277 = and i8 %16276, 1
  %16278 = xor i8 %16277, 1
  store i8 %16278, i8* %16272, align 1
  %16279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16279, align 1
  %16280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16281 = icmp eq i64 %16269, 0
  %16282 = zext i1 %16281 to i8
  store i8 %16282, i8* %16280, align 1
  %16283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16284 = lshr i64 %16269, 63
  %16285 = trunc i64 %16284 to i8
  store i8 %16285, i8* %16283, align 1
  %16286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16286, align 1
  store %struct.Memory* %loadMem_40c9f0, %struct.Memory** %MEMORY
  %loadMem_40c9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16288 = getelementptr inbounds %struct.GPR, %struct.GPR* %16287, i32 0, i32 33
  %16289 = getelementptr inbounds %struct.Reg, %struct.Reg* %16288, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %16289 to i64*
  %16290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16291 = getelementptr inbounds %struct.GPR, %struct.GPR* %16290, i32 0, i32 21
  %16292 = getelementptr inbounds %struct.Reg, %struct.Reg* %16291, i32 0, i32 0
  %R10.i1265 = bitcast %union.anon* %16292 to i64*
  %16293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16294 = getelementptr inbounds %struct.GPR, %struct.GPR* %16293, i32 0, i32 23
  %16295 = getelementptr inbounds %struct.Reg, %struct.Reg* %16294, i32 0, i32 0
  %R11.i1266 = bitcast %union.anon* %16295 to i64*
  %16296 = load i64, i64* %R10.i1265
  %16297 = load i64, i64* %R11.i1266
  %16298 = load i64, i64* %PC.i1264
  %16299 = add i64 %16298, 3
  store i64 %16299, i64* %PC.i1264
  %16300 = add i64 %16297, %16296
  store i64 %16300, i64* %R10.i1265, align 8
  %16301 = icmp ult i64 %16300, %16296
  %16302 = icmp ult i64 %16300, %16297
  %16303 = or i1 %16301, %16302
  %16304 = zext i1 %16303 to i8
  %16305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16304, i8* %16305, align 1
  %16306 = trunc i64 %16300 to i32
  %16307 = and i32 %16306, 255
  %16308 = call i32 @llvm.ctpop.i32(i32 %16307)
  %16309 = trunc i32 %16308 to i8
  %16310 = and i8 %16309, 1
  %16311 = xor i8 %16310, 1
  %16312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16311, i8* %16312, align 1
  %16313 = xor i64 %16297, %16296
  %16314 = xor i64 %16313, %16300
  %16315 = lshr i64 %16314, 4
  %16316 = trunc i64 %16315 to i8
  %16317 = and i8 %16316, 1
  %16318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16317, i8* %16318, align 1
  %16319 = icmp eq i64 %16300, 0
  %16320 = zext i1 %16319 to i8
  %16321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16320, i8* %16321, align 1
  %16322 = lshr i64 %16300, 63
  %16323 = trunc i64 %16322 to i8
  %16324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16323, i8* %16324, align 1
  %16325 = lshr i64 %16296, 63
  %16326 = lshr i64 %16297, 63
  %16327 = xor i64 %16322, %16325
  %16328 = xor i64 %16322, %16326
  %16329 = add i64 %16327, %16328
  %16330 = icmp eq i64 %16329, 2
  %16331 = zext i1 %16330 to i8
  %16332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16331, i8* %16332, align 1
  store %struct.Memory* %loadMem_40c9f4, %struct.Memory** %MEMORY
  %loadMem_40c9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16334 = getelementptr inbounds %struct.GPR, %struct.GPR* %16333, i32 0, i32 33
  %16335 = getelementptr inbounds %struct.Reg, %struct.Reg* %16334, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %16335 to i64*
  %16336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16337 = getelementptr inbounds %struct.GPR, %struct.GPR* %16336, i32 0, i32 15
  %16338 = getelementptr inbounds %struct.Reg, %struct.Reg* %16337, i32 0, i32 0
  %RBP.i1262 = bitcast %union.anon* %16338 to i64*
  %16339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16340 = getelementptr inbounds %struct.GPR, %struct.GPR* %16339, i32 0, i32 23
  %16341 = getelementptr inbounds %struct.Reg, %struct.Reg* %16340, i32 0, i32 0
  %R11.i1263 = bitcast %union.anon* %16341 to i64*
  %16342 = load i64, i64* %RBP.i1262
  %16343 = sub i64 %16342, 20
  %16344 = load i64, i64* %PC.i1261
  %16345 = add i64 %16344, 4
  store i64 %16345, i64* %PC.i1261
  %16346 = inttoptr i64 %16343 to i32*
  %16347 = load i32, i32* %16346
  %16348 = sext i32 %16347 to i64
  store i64 %16348, i64* %R11.i1263, align 8
  store %struct.Memory* %loadMem_40c9f7, %struct.Memory** %MEMORY
  %loadMem_40c9fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16350 = getelementptr inbounds %struct.GPR, %struct.GPR* %16349, i32 0, i32 33
  %16351 = getelementptr inbounds %struct.Reg, %struct.Reg* %16350, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %16351 to i64*
  %16352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16353 = getelementptr inbounds %struct.GPR, %struct.GPR* %16352, i32 0, i32 23
  %16354 = getelementptr inbounds %struct.Reg, %struct.Reg* %16353, i32 0, i32 0
  %R11.i1260 = bitcast %union.anon* %16354 to i64*
  %16355 = load i64, i64* %R11.i1260
  %16356 = load i64, i64* %PC.i1259
  %16357 = add i64 %16356, 4
  store i64 %16357, i64* %PC.i1259
  %16358 = shl i64 %16355, 3
  %16359 = icmp slt i64 %16358, 0
  %16360 = shl i64 %16358, 1
  store i64 %16360, i64* %R11.i1260, align 8
  %16361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16362 = zext i1 %16359 to i8
  store i8 %16362, i8* %16361, align 1
  %16363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16364 = trunc i64 %16360 to i32
  %16365 = and i32 %16364, 254
  %16366 = call i32 @llvm.ctpop.i32(i32 %16365)
  %16367 = trunc i32 %16366 to i8
  %16368 = and i8 %16367, 1
  %16369 = xor i8 %16368, 1
  store i8 %16369, i8* %16363, align 1
  %16370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16370, align 1
  %16371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16372 = icmp eq i64 %16360, 0
  %16373 = zext i1 %16372 to i8
  store i8 %16373, i8* %16371, align 1
  %16374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16375 = lshr i64 %16360, 63
  %16376 = trunc i64 %16375 to i8
  store i8 %16376, i8* %16374, align 1
  %16377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16377, align 1
  store %struct.Memory* %loadMem_40c9fb, %struct.Memory** %MEMORY
  %loadMem_40c9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %16378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16379 = getelementptr inbounds %struct.GPR, %struct.GPR* %16378, i32 0, i32 33
  %16380 = getelementptr inbounds %struct.Reg, %struct.Reg* %16379, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %16380 to i64*
  %16381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16382 = getelementptr inbounds %struct.GPR, %struct.GPR* %16381, i32 0, i32 21
  %16383 = getelementptr inbounds %struct.Reg, %struct.Reg* %16382, i32 0, i32 0
  %R10.i1257 = bitcast %union.anon* %16383 to i64*
  %16384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16385 = getelementptr inbounds %struct.GPR, %struct.GPR* %16384, i32 0, i32 23
  %16386 = getelementptr inbounds %struct.Reg, %struct.Reg* %16385, i32 0, i32 0
  %R11.i1258 = bitcast %union.anon* %16386 to i64*
  %16387 = load i64, i64* %R10.i1257
  %16388 = load i64, i64* %R11.i1258
  %16389 = load i64, i64* %PC.i1256
  %16390 = add i64 %16389, 3
  store i64 %16390, i64* %PC.i1256
  %16391 = add i64 %16388, %16387
  store i64 %16391, i64* %R10.i1257, align 8
  %16392 = icmp ult i64 %16391, %16387
  %16393 = icmp ult i64 %16391, %16388
  %16394 = or i1 %16392, %16393
  %16395 = zext i1 %16394 to i8
  %16396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16395, i8* %16396, align 1
  %16397 = trunc i64 %16391 to i32
  %16398 = and i32 %16397, 255
  %16399 = call i32 @llvm.ctpop.i32(i32 %16398)
  %16400 = trunc i32 %16399 to i8
  %16401 = and i8 %16400, 1
  %16402 = xor i8 %16401, 1
  %16403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16402, i8* %16403, align 1
  %16404 = xor i64 %16388, %16387
  %16405 = xor i64 %16404, %16391
  %16406 = lshr i64 %16405, 4
  %16407 = trunc i64 %16406 to i8
  %16408 = and i8 %16407, 1
  %16409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16408, i8* %16409, align 1
  %16410 = icmp eq i64 %16391, 0
  %16411 = zext i1 %16410 to i8
  %16412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16411, i8* %16412, align 1
  %16413 = lshr i64 %16391, 63
  %16414 = trunc i64 %16413 to i8
  %16415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16414, i8* %16415, align 1
  %16416 = lshr i64 %16387, 63
  %16417 = lshr i64 %16388, 63
  %16418 = xor i64 %16413, %16416
  %16419 = xor i64 %16413, %16417
  %16420 = add i64 %16418, %16419
  %16421 = icmp eq i64 %16420, 2
  %16422 = zext i1 %16421 to i8
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16422, i8* %16423, align 1
  store %struct.Memory* %loadMem_40c9ff, %struct.Memory** %MEMORY
  %loadMem_40ca02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16425 = getelementptr inbounds %struct.GPR, %struct.GPR* %16424, i32 0, i32 33
  %16426 = getelementptr inbounds %struct.Reg, %struct.Reg* %16425, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %16426 to i64*
  %16427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16428 = getelementptr inbounds %struct.GPR, %struct.GPR* %16427, i32 0, i32 15
  %16429 = getelementptr inbounds %struct.Reg, %struct.Reg* %16428, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %16429 to i64*
  %16430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16431 = getelementptr inbounds %struct.GPR, %struct.GPR* %16430, i32 0, i32 23
  %16432 = getelementptr inbounds %struct.Reg, %struct.Reg* %16431, i32 0, i32 0
  %R11.i1255 = bitcast %union.anon* %16432 to i64*
  %16433 = load i64, i64* %RBP.i1254
  %16434 = sub i64 %16433, 24
  %16435 = load i64, i64* %PC.i1253
  %16436 = add i64 %16435, 4
  store i64 %16436, i64* %PC.i1253
  %16437 = inttoptr i64 %16434 to i32*
  %16438 = load i32, i32* %16437
  %16439 = sext i32 %16438 to i64
  store i64 %16439, i64* %R11.i1255, align 8
  store %struct.Memory* %loadMem_40ca02, %struct.Memory** %MEMORY
  %loadMem_40ca06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16441 = getelementptr inbounds %struct.GPR, %struct.GPR* %16440, i32 0, i32 33
  %16442 = getelementptr inbounds %struct.Reg, %struct.Reg* %16441, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %16442 to i64*
  %16443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16444 = getelementptr inbounds %struct.GPR, %struct.GPR* %16443, i32 0, i32 1
  %16445 = getelementptr inbounds %struct.Reg, %struct.Reg* %16444, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %16445 to i64*
  %16446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16447 = getelementptr inbounds %struct.GPR, %struct.GPR* %16446, i32 0, i32 21
  %16448 = getelementptr inbounds %struct.Reg, %struct.Reg* %16447, i32 0, i32 0
  %R10.i1252 = bitcast %union.anon* %16448 to i64*
  %16449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16450 = getelementptr inbounds %struct.GPR, %struct.GPR* %16449, i32 0, i32 23
  %16451 = getelementptr inbounds %struct.Reg, %struct.Reg* %16450, i32 0, i32 0
  %R11.i = bitcast %union.anon* %16451 to i64*
  %16452 = load i64, i64* %RAX.i1251
  %16453 = load i64, i64* %R10.i1252
  %16454 = load i64, i64* %R11.i
  %16455 = mul i64 %16454, 4
  %16456 = add i64 %16455, %16453
  %16457 = load i64, i64* %PC.i1250
  %16458 = add i64 %16457, 5
  store i64 %16458, i64* %PC.i1250
  %16459 = inttoptr i64 %16456 to i32*
  %16460 = load i32, i32* %16459
  %16461 = shl i64 %16452, 32
  %16462 = ashr exact i64 %16461, 32
  %16463 = sext i32 %16460 to i64
  %16464 = mul i64 %16463, %16462
  %16465 = trunc i64 %16464 to i32
  %16466 = and i64 %16464, 4294967295
  store i64 %16466, i64* %RAX.i1251, align 8
  %16467 = shl i64 %16464, 32
  %16468 = ashr exact i64 %16467, 32
  %16469 = icmp ne i64 %16468, %16464
  %16470 = zext i1 %16469 to i8
  %16471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16470, i8* %16471, align 1
  %16472 = and i32 %16465, 255
  %16473 = call i32 @llvm.ctpop.i32(i32 %16472)
  %16474 = trunc i32 %16473 to i8
  %16475 = and i8 %16474, 1
  %16476 = xor i8 %16475, 1
  %16477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16476, i8* %16477, align 1
  %16478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16478, align 1
  %16479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16479, align 1
  %16480 = lshr i32 %16465, 31
  %16481 = trunc i32 %16480 to i8
  %16482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16481, i8* %16482, align 1
  %16483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16470, i8* %16483, align 1
  store %struct.Memory* %loadMem_40ca06, %struct.Memory** %MEMORY
  %loadMem_40ca0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16485 = getelementptr inbounds %struct.GPR, %struct.GPR* %16484, i32 0, i32 33
  %16486 = getelementptr inbounds %struct.Reg, %struct.Reg* %16485, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %16486 to i64*
  %16487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16488 = getelementptr inbounds %struct.GPR, %struct.GPR* %16487, i32 0, i32 15
  %16489 = getelementptr inbounds %struct.Reg, %struct.Reg* %16488, i32 0, i32 0
  %RBP.i1248 = bitcast %union.anon* %16489 to i64*
  %16490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16491 = getelementptr inbounds %struct.GPR, %struct.GPR* %16490, i32 0, i32 21
  %16492 = getelementptr inbounds %struct.Reg, %struct.Reg* %16491, i32 0, i32 0
  %R10.i1249 = bitcast %union.anon* %16492 to i64*
  %16493 = load i64, i64* %RBP.i1248
  %16494 = sub i64 %16493, 20
  %16495 = load i64, i64* %PC.i1247
  %16496 = add i64 %16495, 4
  store i64 %16496, i64* %PC.i1247
  %16497 = inttoptr i64 %16494 to i32*
  %16498 = load i32, i32* %16497
  %16499 = sext i32 %16498 to i64
  store i64 %16499, i64* %R10.i1249, align 8
  store %struct.Memory* %loadMem_40ca0b, %struct.Memory** %MEMORY
  %loadMem_40ca0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16501 = getelementptr inbounds %struct.GPR, %struct.GPR* %16500, i32 0, i32 33
  %16502 = getelementptr inbounds %struct.Reg, %struct.Reg* %16501, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %16502 to i64*
  %16503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16504 = getelementptr inbounds %struct.GPR, %struct.GPR* %16503, i32 0, i32 21
  %16505 = getelementptr inbounds %struct.Reg, %struct.Reg* %16504, i32 0, i32 0
  %R10.i1246 = bitcast %union.anon* %16505 to i64*
  %16506 = load i64, i64* %R10.i1246
  %16507 = load i64, i64* %PC.i1245
  %16508 = add i64 %16507, 4
  store i64 %16508, i64* %PC.i1245
  %16509 = shl i64 %16506, 3
  %16510 = icmp slt i64 %16509, 0
  %16511 = shl i64 %16509, 1
  store i64 %16511, i64* %R10.i1246, align 8
  %16512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16513 = zext i1 %16510 to i8
  store i8 %16513, i8* %16512, align 1
  %16514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16515 = trunc i64 %16511 to i32
  %16516 = and i32 %16515, 254
  %16517 = call i32 @llvm.ctpop.i32(i32 %16516)
  %16518 = trunc i32 %16517 to i8
  %16519 = and i8 %16518, 1
  %16520 = xor i8 %16519, 1
  store i8 %16520, i8* %16514, align 1
  %16521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16521, align 1
  %16522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16523 = icmp eq i64 %16511, 0
  %16524 = zext i1 %16523 to i8
  store i8 %16524, i8* %16522, align 1
  %16525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16526 = lshr i64 %16511, 63
  %16527 = trunc i64 %16526 to i8
  store i8 %16527, i8* %16525, align 1
  %16528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16528, align 1
  store %struct.Memory* %loadMem_40ca0f, %struct.Memory** %MEMORY
  %loadMem_40ca13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16530 = getelementptr inbounds %struct.GPR, %struct.GPR* %16529, i32 0, i32 33
  %16531 = getelementptr inbounds %struct.Reg, %struct.Reg* %16530, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %16531 to i64*
  %16532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16533 = getelementptr inbounds %struct.GPR, %struct.GPR* %16532, i32 0, i32 19
  %16534 = getelementptr inbounds %struct.Reg, %struct.Reg* %16533, i32 0, i32 0
  %R9.i1243 = bitcast %union.anon* %16534 to i64*
  %16535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16536 = getelementptr inbounds %struct.GPR, %struct.GPR* %16535, i32 0, i32 21
  %16537 = getelementptr inbounds %struct.Reg, %struct.Reg* %16536, i32 0, i32 0
  %R10.i1244 = bitcast %union.anon* %16537 to i64*
  %16538 = load i64, i64* %R9.i1243
  %16539 = load i64, i64* %R10.i1244
  %16540 = load i64, i64* %PC.i1242
  %16541 = add i64 %16540, 3
  store i64 %16541, i64* %PC.i1242
  %16542 = add i64 %16539, %16538
  store i64 %16542, i64* %R9.i1243, align 8
  %16543 = icmp ult i64 %16542, %16538
  %16544 = icmp ult i64 %16542, %16539
  %16545 = or i1 %16543, %16544
  %16546 = zext i1 %16545 to i8
  %16547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16546, i8* %16547, align 1
  %16548 = trunc i64 %16542 to i32
  %16549 = and i32 %16548, 255
  %16550 = call i32 @llvm.ctpop.i32(i32 %16549)
  %16551 = trunc i32 %16550 to i8
  %16552 = and i8 %16551, 1
  %16553 = xor i8 %16552, 1
  %16554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16553, i8* %16554, align 1
  %16555 = xor i64 %16539, %16538
  %16556 = xor i64 %16555, %16542
  %16557 = lshr i64 %16556, 4
  %16558 = trunc i64 %16557 to i8
  %16559 = and i8 %16558, 1
  %16560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16559, i8* %16560, align 1
  %16561 = icmp eq i64 %16542, 0
  %16562 = zext i1 %16561 to i8
  %16563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16562, i8* %16563, align 1
  %16564 = lshr i64 %16542, 63
  %16565 = trunc i64 %16564 to i8
  %16566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16565, i8* %16566, align 1
  %16567 = lshr i64 %16538, 63
  %16568 = lshr i64 %16539, 63
  %16569 = xor i64 %16564, %16567
  %16570 = xor i64 %16564, %16568
  %16571 = add i64 %16569, %16570
  %16572 = icmp eq i64 %16571, 2
  %16573 = zext i1 %16572 to i8
  %16574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16573, i8* %16574, align 1
  store %struct.Memory* %loadMem_40ca13, %struct.Memory** %MEMORY
  %loadMem_40ca16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16576 = getelementptr inbounds %struct.GPR, %struct.GPR* %16575, i32 0, i32 33
  %16577 = getelementptr inbounds %struct.Reg, %struct.Reg* %16576, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %16577 to i64*
  %16578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16579 = getelementptr inbounds %struct.GPR, %struct.GPR* %16578, i32 0, i32 15
  %16580 = getelementptr inbounds %struct.Reg, %struct.Reg* %16579, i32 0, i32 0
  %RBP.i1240 = bitcast %union.anon* %16580 to i64*
  %16581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16582 = getelementptr inbounds %struct.GPR, %struct.GPR* %16581, i32 0, i32 21
  %16583 = getelementptr inbounds %struct.Reg, %struct.Reg* %16582, i32 0, i32 0
  %R10.i1241 = bitcast %union.anon* %16583 to i64*
  %16584 = load i64, i64* %RBP.i1240
  %16585 = sub i64 %16584, 24
  %16586 = load i64, i64* %PC.i1239
  %16587 = add i64 %16586, 4
  store i64 %16587, i64* %PC.i1239
  %16588 = inttoptr i64 %16585 to i32*
  %16589 = load i32, i32* %16588
  %16590 = sext i32 %16589 to i64
  store i64 %16590, i64* %R10.i1241, align 8
  store %struct.Memory* %loadMem_40ca16, %struct.Memory** %MEMORY
  %loadMem_40ca1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16592 = getelementptr inbounds %struct.GPR, %struct.GPR* %16591, i32 0, i32 33
  %16593 = getelementptr inbounds %struct.Reg, %struct.Reg* %16592, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %16593 to i64*
  %16594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16595 = getelementptr inbounds %struct.GPR, %struct.GPR* %16594, i32 0, i32 1
  %16596 = getelementptr inbounds %struct.Reg, %struct.Reg* %16595, i32 0, i32 0
  %RAX.i1237 = bitcast %union.anon* %16596 to i64*
  %16597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16598 = getelementptr inbounds %struct.GPR, %struct.GPR* %16597, i32 0, i32 19
  %16599 = getelementptr inbounds %struct.Reg, %struct.Reg* %16598, i32 0, i32 0
  %R9.i1238 = bitcast %union.anon* %16599 to i64*
  %16600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16601 = getelementptr inbounds %struct.GPR, %struct.GPR* %16600, i32 0, i32 21
  %16602 = getelementptr inbounds %struct.Reg, %struct.Reg* %16601, i32 0, i32 0
  %R10.i = bitcast %union.anon* %16602 to i64*
  %16603 = load i64, i64* %RAX.i1237
  %16604 = load i64, i64* %R9.i1238
  %16605 = load i64, i64* %R10.i
  %16606 = mul i64 %16605, 4
  %16607 = add i64 %16606, %16604
  %16608 = load i64, i64* %PC.i1236
  %16609 = add i64 %16608, 5
  store i64 %16609, i64* %PC.i1236
  %16610 = inttoptr i64 %16607 to i32*
  %16611 = load i32, i32* %16610
  %16612 = shl i64 %16603, 32
  %16613 = ashr exact i64 %16612, 32
  %16614 = sext i32 %16611 to i64
  %16615 = mul i64 %16614, %16613
  %16616 = trunc i64 %16615 to i32
  %16617 = and i64 %16615, 4294967295
  store i64 %16617, i64* %RAX.i1237, align 8
  %16618 = shl i64 %16615, 32
  %16619 = ashr exact i64 %16618, 32
  %16620 = icmp ne i64 %16619, %16615
  %16621 = zext i1 %16620 to i8
  %16622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16621, i8* %16622, align 1
  %16623 = and i32 %16616, 255
  %16624 = call i32 @llvm.ctpop.i32(i32 %16623)
  %16625 = trunc i32 %16624 to i8
  %16626 = and i8 %16625, 1
  %16627 = xor i8 %16626, 1
  %16628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16627, i8* %16628, align 1
  %16629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16629, align 1
  %16630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16630, align 1
  %16631 = lshr i32 %16616, 31
  %16632 = trunc i32 %16631 to i8
  %16633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16632, i8* %16633, align 1
  %16634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16621, i8* %16634, align 1
  store %struct.Memory* %loadMem_40ca1a, %struct.Memory** %MEMORY
  %loadMem_40ca1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16636 = getelementptr inbounds %struct.GPR, %struct.GPR* %16635, i32 0, i32 33
  %16637 = getelementptr inbounds %struct.Reg, %struct.Reg* %16636, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %16637 to i64*
  %16638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16639 = getelementptr inbounds %struct.GPR, %struct.GPR* %16638, i32 0, i32 9
  %16640 = getelementptr inbounds %struct.Reg, %struct.Reg* %16639, i32 0, i32 0
  %RSI.i1234 = bitcast %union.anon* %16640 to i64*
  %16641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16642 = getelementptr inbounds %struct.GPR, %struct.GPR* %16641, i32 0, i32 15
  %16643 = getelementptr inbounds %struct.Reg, %struct.Reg* %16642, i32 0, i32 0
  %RBP.i1235 = bitcast %union.anon* %16643 to i64*
  %16644 = load i64, i64* %RBP.i1235
  %16645 = sub i64 %16644, 188
  %16646 = load i64, i64* %PC.i1233
  %16647 = add i64 %16646, 6
  store i64 %16647, i64* %PC.i1233
  %16648 = inttoptr i64 %16645 to i32*
  %16649 = load i32, i32* %16648
  %16650 = zext i32 %16649 to i64
  store i64 %16650, i64* %RSI.i1234, align 8
  store %struct.Memory* %loadMem_40ca1f, %struct.Memory** %MEMORY
  %loadMem_40ca25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16652 = getelementptr inbounds %struct.GPR, %struct.GPR* %16651, i32 0, i32 33
  %16653 = getelementptr inbounds %struct.Reg, %struct.Reg* %16652, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %16653 to i64*
  %16654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16655 = getelementptr inbounds %struct.GPR, %struct.GPR* %16654, i32 0, i32 5
  %16656 = getelementptr inbounds %struct.Reg, %struct.Reg* %16655, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %16656 to i64*
  %16657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16658 = getelementptr inbounds %struct.GPR, %struct.GPR* %16657, i32 0, i32 15
  %16659 = getelementptr inbounds %struct.Reg, %struct.Reg* %16658, i32 0, i32 0
  %RBP.i1232 = bitcast %union.anon* %16659 to i64*
  %16660 = load i64, i64* %RBP.i1232
  %16661 = sub i64 %16660, 360
  %16662 = load i64, i64* %RCX.i1231
  %16663 = load i64, i64* %PC.i1230
  %16664 = add i64 %16663, 7
  store i64 %16664, i64* %PC.i1230
  %16665 = inttoptr i64 %16661 to i64*
  store i64 %16662, i64* %16665
  store %struct.Memory* %loadMem_40ca25, %struct.Memory** %MEMORY
  %loadMem_40ca2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16667 = getelementptr inbounds %struct.GPR, %struct.GPR* %16666, i32 0, i32 33
  %16668 = getelementptr inbounds %struct.Reg, %struct.Reg* %16667, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %16668 to i64*
  %16669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16670 = getelementptr inbounds %struct.GPR, %struct.GPR* %16669, i32 0, i32 9
  %16671 = getelementptr inbounds %struct.Reg, %struct.Reg* %16670, i32 0, i32 0
  %ESI.i1228 = bitcast %union.anon* %16671 to i32*
  %16672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16673 = getelementptr inbounds %struct.GPR, %struct.GPR* %16672, i32 0, i32 5
  %16674 = getelementptr inbounds %struct.Reg, %struct.Reg* %16673, i32 0, i32 0
  %RCX.i1229 = bitcast %union.anon* %16674 to i64*
  %16675 = load i32, i32* %ESI.i1228
  %16676 = zext i32 %16675 to i64
  %16677 = load i64, i64* %PC.i1227
  %16678 = add i64 %16677, 2
  store i64 %16678, i64* %PC.i1227
  %16679 = and i64 %16676, 4294967295
  store i64 %16679, i64* %RCX.i1229, align 8
  store %struct.Memory* %loadMem_40ca2c, %struct.Memory** %MEMORY
  %loadMem_40ca2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16681 = getelementptr inbounds %struct.GPR, %struct.GPR* %16680, i32 0, i32 33
  %16682 = getelementptr inbounds %struct.Reg, %struct.Reg* %16681, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %16682 to i64*
  %16683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16684 = getelementptr inbounds %struct.GPR, %struct.GPR* %16683, i32 0, i32 5
  %16685 = getelementptr inbounds %struct.Reg, %struct.Reg* %16684, i32 0, i32 0
  %16686 = bitcast %union.anon* %16685 to %struct.anon.2*
  %CL.i1224 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %16686, i32 0, i32 0
  %16687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16688 = getelementptr inbounds %struct.GPR, %struct.GPR* %16687, i32 0, i32 1
  %16689 = getelementptr inbounds %struct.Reg, %struct.Reg* %16688, i32 0, i32 0
  %RAX.i1225 = bitcast %union.anon* %16689 to i64*
  %16690 = load i64, i64* %RAX.i1225
  %16691 = load i8, i8* %CL.i1224
  %16692 = zext i8 %16691 to i64
  %16693 = load i64, i64* %PC.i1223
  %16694 = add i64 %16693, 2
  store i64 %16694, i64* %PC.i1223
  %16695 = trunc i64 %16692 to i5
  switch i5 %16695, label %16702 [
    i5 0, label %routine_shll__cl___eax.exit1226
    i5 1, label %16696
  ]

; <label>:16696:                                  ; preds = %routine_shll__cl___eax.exit1377
  %16697 = trunc i64 %16690 to i32
  %16698 = shl i32 %16697, 1
  %16699 = icmp slt i32 %16697, 0
  %16700 = icmp slt i32 %16698, 0
  %16701 = xor i1 %16699, %16700
  br label %16711

; <label>:16702:                                  ; preds = %routine_shll__cl___eax.exit1377
  %16703 = and i64 %16692, 31
  %16704 = add i64 %16703, 4294967295
  %16705 = and i64 %16690, 4294967295
  %16706 = and i64 %16704, 4294967295
  %16707 = shl i64 %16705, %16706
  %16708 = trunc i64 %16707 to i32
  %16709 = icmp slt i32 %16708, 0
  %16710 = shl i32 %16708, 1
  br label %16711

; <label>:16711:                                  ; preds = %16702, %16696
  %16712 = phi i1 [ %16699, %16696 ], [ %16709, %16702 ]
  %16713 = phi i1 [ %16701, %16696 ], [ false, %16702 ]
  %16714 = phi i32 [ %16698, %16696 ], [ %16710, %16702 ]
  %16715 = zext i32 %16714 to i64
  store i64 %16715, i64* %RAX.i1225, align 8
  %16716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16717 = zext i1 %16712 to i8
  store i8 %16717, i8* %16716, align 1
  %16718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16719 = and i32 %16714, 254
  %16720 = call i32 @llvm.ctpop.i32(i32 %16719)
  %16721 = trunc i32 %16720 to i8
  %16722 = and i8 %16721, 1
  %16723 = xor i8 %16722, 1
  store i8 %16723, i8* %16718, align 1
  %16724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16724, align 1
  %16725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16726 = icmp eq i32 %16714, 0
  %16727 = zext i1 %16726 to i8
  store i8 %16727, i8* %16725, align 1
  %16728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16729 = lshr i32 %16714, 31
  %16730 = trunc i32 %16729 to i8
  store i8 %16730, i8* %16728, align 1
  %16731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16732 = zext i1 %16713 to i8
  store i8 %16732, i8* %16731, align 1
  br label %routine_shll__cl___eax.exit1226

routine_shll__cl___eax.exit1226:                  ; preds = %routine_shll__cl___eax.exit1377, %16711
  store %struct.Memory* %loadMem_40ca2e, %struct.Memory** %MEMORY
  %loadMem_40ca30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16734 = getelementptr inbounds %struct.GPR, %struct.GPR* %16733, i32 0, i32 33
  %16735 = getelementptr inbounds %struct.Reg, %struct.Reg* %16734, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %16735 to i64*
  %16736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16737 = getelementptr inbounds %struct.GPR, %struct.GPR* %16736, i32 0, i32 1
  %16738 = getelementptr inbounds %struct.Reg, %struct.Reg* %16737, i32 0, i32 0
  %RAX.i1222 = bitcast %union.anon* %16738 to i64*
  %16739 = load i64, i64* %RAX.i1222
  %16740 = load i64, i64* %PC.i1221
  %16741 = add i64 %16740, 3
  store i64 %16741, i64* %PC.i1221
  %16742 = shl i64 %16739, 32
  %16743 = ashr exact i64 %16742, 32
  %16744 = ashr i64 %16743, 5
  %16745 = lshr i64 %16744, 1
  %16746 = trunc i64 %16744 to i8
  %16747 = and i8 %16746, 1
  %16748 = trunc i64 %16745 to i32
  %16749 = and i64 %16745, 4294967295
  store i64 %16749, i64* %RAX.i1222, align 8
  %16750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16747, i8* %16750, align 1
  %16751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16752 = and i32 %16748, 255
  %16753 = call i32 @llvm.ctpop.i32(i32 %16752)
  %16754 = trunc i32 %16753 to i8
  %16755 = and i8 %16754, 1
  %16756 = xor i8 %16755, 1
  store i8 %16756, i8* %16751, align 1
  %16757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16757, align 1
  %16758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16759 = icmp eq i32 %16748, 0
  %16760 = zext i1 %16759 to i8
  store i8 %16760, i8* %16758, align 1
  %16761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16762 = lshr i32 %16748, 31
  %16763 = trunc i32 %16762 to i8
  store i8 %16763, i8* %16761, align 1
  %16764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16764, align 1
  store %struct.Memory* %loadMem_40ca30, %struct.Memory** %MEMORY
  %loadMem_40ca33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16766 = getelementptr inbounds %struct.GPR, %struct.GPR* %16765, i32 0, i32 33
  %16767 = getelementptr inbounds %struct.Reg, %struct.Reg* %16766, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %16767 to i64*
  %16768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16769 = getelementptr inbounds %struct.GPR, %struct.GPR* %16768, i32 0, i32 9
  %16770 = getelementptr inbounds %struct.Reg, %struct.Reg* %16769, i32 0, i32 0
  %RSI.i1219 = bitcast %union.anon* %16770 to i64*
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16772 = getelementptr inbounds %struct.GPR, %struct.GPR* %16771, i32 0, i32 15
  %16773 = getelementptr inbounds %struct.Reg, %struct.Reg* %16772, i32 0, i32 0
  %RBP.i1220 = bitcast %union.anon* %16773 to i64*
  %16774 = load i64, i64* %RBP.i1220
  %16775 = sub i64 %16774, 348
  %16776 = load i64, i64* %PC.i1218
  %16777 = add i64 %16776, 6
  store i64 %16777, i64* %PC.i1218
  %16778 = inttoptr i64 %16775 to i32*
  %16779 = load i32, i32* %16778
  %16780 = zext i32 %16779 to i64
  store i64 %16780, i64* %RSI.i1219, align 8
  store %struct.Memory* %loadMem_40ca33, %struct.Memory** %MEMORY
  %loadMem_40ca39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16782 = getelementptr inbounds %struct.GPR, %struct.GPR* %16781, i32 0, i32 33
  %16783 = getelementptr inbounds %struct.Reg, %struct.Reg* %16782, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %16783 to i64*
  %16784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16785 = getelementptr inbounds %struct.GPR, %struct.GPR* %16784, i32 0, i32 1
  %16786 = getelementptr inbounds %struct.Reg, %struct.Reg* %16785, i32 0, i32 0
  %EAX.i1216 = bitcast %union.anon* %16786 to i32*
  %16787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16788 = getelementptr inbounds %struct.GPR, %struct.GPR* %16787, i32 0, i32 9
  %16789 = getelementptr inbounds %struct.Reg, %struct.Reg* %16788, i32 0, i32 0
  %RSI.i1217 = bitcast %union.anon* %16789 to i64*
  %16790 = load i64, i64* %RSI.i1217
  %16791 = load i32, i32* %EAX.i1216
  %16792 = zext i32 %16791 to i64
  %16793 = load i64, i64* %PC.i1215
  %16794 = add i64 %16793, 2
  store i64 %16794, i64* %PC.i1215
  %16795 = trunc i64 %16790 to i32
  %16796 = sub i32 %16795, %16791
  %16797 = zext i32 %16796 to i64
  store i64 %16797, i64* %RSI.i1217, align 8
  %16798 = icmp ult i32 %16795, %16791
  %16799 = zext i1 %16798 to i8
  %16800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16799, i8* %16800, align 1
  %16801 = and i32 %16796, 255
  %16802 = call i32 @llvm.ctpop.i32(i32 %16801)
  %16803 = trunc i32 %16802 to i8
  %16804 = and i8 %16803, 1
  %16805 = xor i8 %16804, 1
  %16806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16805, i8* %16806, align 1
  %16807 = xor i64 %16792, %16790
  %16808 = trunc i64 %16807 to i32
  %16809 = xor i32 %16808, %16796
  %16810 = lshr i32 %16809, 4
  %16811 = trunc i32 %16810 to i8
  %16812 = and i8 %16811, 1
  %16813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16812, i8* %16813, align 1
  %16814 = icmp eq i32 %16796, 0
  %16815 = zext i1 %16814 to i8
  %16816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16815, i8* %16816, align 1
  %16817 = lshr i32 %16796, 31
  %16818 = trunc i32 %16817 to i8
  %16819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16818, i8* %16819, align 1
  %16820 = lshr i32 %16795, 31
  %16821 = lshr i32 %16791, 31
  %16822 = xor i32 %16821, %16820
  %16823 = xor i32 %16817, %16820
  %16824 = add i32 %16823, %16822
  %16825 = icmp eq i32 %16824, 2
  %16826 = zext i1 %16825 to i8
  %16827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16826, i8* %16827, align 1
  store %struct.Memory* %loadMem_40ca39, %struct.Memory** %MEMORY
  %loadMem_40ca3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16829 = getelementptr inbounds %struct.GPR, %struct.GPR* %16828, i32 0, i32 33
  %16830 = getelementptr inbounds %struct.Reg, %struct.Reg* %16829, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %16830 to i64*
  %16831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16832 = getelementptr inbounds %struct.GPR, %struct.GPR* %16831, i32 0, i32 15
  %16833 = getelementptr inbounds %struct.Reg, %struct.Reg* %16832, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %16833 to i64*
  %16834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16835 = getelementptr inbounds %struct.GPR, %struct.GPR* %16834, i32 0, i32 19
  %16836 = getelementptr inbounds %struct.Reg, %struct.Reg* %16835, i32 0, i32 0
  %R9.i1214 = bitcast %union.anon* %16836 to i64*
  %16837 = load i64, i64* %RBP.i1213
  %16838 = sub i64 %16837, 20
  %16839 = load i64, i64* %PC.i1212
  %16840 = add i64 %16839, 4
  store i64 %16840, i64* %PC.i1212
  %16841 = inttoptr i64 %16838 to i32*
  %16842 = load i32, i32* %16841
  %16843 = sext i32 %16842 to i64
  store i64 %16843, i64* %R9.i1214, align 8
  store %struct.Memory* %loadMem_40ca3b, %struct.Memory** %MEMORY
  %loadMem_40ca3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16845 = getelementptr inbounds %struct.GPR, %struct.GPR* %16844, i32 0, i32 33
  %16846 = getelementptr inbounds %struct.Reg, %struct.Reg* %16845, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %16846 to i64*
  %16847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16848 = getelementptr inbounds %struct.GPR, %struct.GPR* %16847, i32 0, i32 19
  %16849 = getelementptr inbounds %struct.Reg, %struct.Reg* %16848, i32 0, i32 0
  %R9.i1211 = bitcast %union.anon* %16849 to i64*
  %16850 = load i64, i64* %R9.i1211
  %16851 = load i64, i64* %PC.i1210
  %16852 = add i64 %16851, 4
  store i64 %16852, i64* %PC.i1210
  %16853 = shl i64 %16850, 3
  %16854 = icmp slt i64 %16853, 0
  %16855 = shl i64 %16853, 1
  store i64 %16855, i64* %R9.i1211, align 8
  %16856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16857 = zext i1 %16854 to i8
  store i8 %16857, i8* %16856, align 1
  %16858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16859 = trunc i64 %16855 to i32
  %16860 = and i32 %16859, 254
  %16861 = call i32 @llvm.ctpop.i32(i32 %16860)
  %16862 = trunc i32 %16861 to i8
  %16863 = and i8 %16862, 1
  %16864 = xor i8 %16863, 1
  store i8 %16864, i8* %16858, align 1
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16865, align 1
  %16866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16867 = icmp eq i64 %16855, 0
  %16868 = zext i1 %16867 to i8
  store i8 %16868, i8* %16866, align 1
  %16869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16870 = lshr i64 %16855, 63
  %16871 = trunc i64 %16870 to i8
  store i8 %16871, i8* %16869, align 1
  %16872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16872, align 1
  store %struct.Memory* %loadMem_40ca3f, %struct.Memory** %MEMORY
  %loadMem_40ca43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16874 = getelementptr inbounds %struct.GPR, %struct.GPR* %16873, i32 0, i32 33
  %16875 = getelementptr inbounds %struct.Reg, %struct.Reg* %16874, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %16875 to i64*
  %16876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16877 = getelementptr inbounds %struct.GPR, %struct.GPR* %16876, i32 0, i32 17
  %16878 = getelementptr inbounds %struct.Reg, %struct.Reg* %16877, i32 0, i32 0
  %R8.i1208 = bitcast %union.anon* %16878 to i64*
  %16879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16880 = getelementptr inbounds %struct.GPR, %struct.GPR* %16879, i32 0, i32 19
  %16881 = getelementptr inbounds %struct.Reg, %struct.Reg* %16880, i32 0, i32 0
  %R9.i1209 = bitcast %union.anon* %16881 to i64*
  %16882 = load i64, i64* %R8.i1208
  %16883 = load i64, i64* %R9.i1209
  %16884 = load i64, i64* %PC.i1207
  %16885 = add i64 %16884, 3
  store i64 %16885, i64* %PC.i1207
  %16886 = add i64 %16883, %16882
  store i64 %16886, i64* %R8.i1208, align 8
  %16887 = icmp ult i64 %16886, %16882
  %16888 = icmp ult i64 %16886, %16883
  %16889 = or i1 %16887, %16888
  %16890 = zext i1 %16889 to i8
  %16891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16890, i8* %16891, align 1
  %16892 = trunc i64 %16886 to i32
  %16893 = and i32 %16892, 255
  %16894 = call i32 @llvm.ctpop.i32(i32 %16893)
  %16895 = trunc i32 %16894 to i8
  %16896 = and i8 %16895, 1
  %16897 = xor i8 %16896, 1
  %16898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16897, i8* %16898, align 1
  %16899 = xor i64 %16883, %16882
  %16900 = xor i64 %16899, %16886
  %16901 = lshr i64 %16900, 4
  %16902 = trunc i64 %16901 to i8
  %16903 = and i8 %16902, 1
  %16904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16903, i8* %16904, align 1
  %16905 = icmp eq i64 %16886, 0
  %16906 = zext i1 %16905 to i8
  %16907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16906, i8* %16907, align 1
  %16908 = lshr i64 %16886, 63
  %16909 = trunc i64 %16908 to i8
  %16910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16909, i8* %16910, align 1
  %16911 = lshr i64 %16882, 63
  %16912 = lshr i64 %16883, 63
  %16913 = xor i64 %16908, %16911
  %16914 = xor i64 %16908, %16912
  %16915 = add i64 %16913, %16914
  %16916 = icmp eq i64 %16915, 2
  %16917 = zext i1 %16916 to i8
  %16918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16917, i8* %16918, align 1
  store %struct.Memory* %loadMem_40ca43, %struct.Memory** %MEMORY
  %loadMem_40ca46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16920 = getelementptr inbounds %struct.GPR, %struct.GPR* %16919, i32 0, i32 33
  %16921 = getelementptr inbounds %struct.Reg, %struct.Reg* %16920, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %16921 to i64*
  %16922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16923 = getelementptr inbounds %struct.GPR, %struct.GPR* %16922, i32 0, i32 15
  %16924 = getelementptr inbounds %struct.Reg, %struct.Reg* %16923, i32 0, i32 0
  %RBP.i1205 = bitcast %union.anon* %16924 to i64*
  %16925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16926 = getelementptr inbounds %struct.GPR, %struct.GPR* %16925, i32 0, i32 19
  %16927 = getelementptr inbounds %struct.Reg, %struct.Reg* %16926, i32 0, i32 0
  %R9.i1206 = bitcast %union.anon* %16927 to i64*
  %16928 = load i64, i64* %RBP.i1205
  %16929 = sub i64 %16928, 24
  %16930 = load i64, i64* %PC.i1204
  %16931 = add i64 %16930, 4
  store i64 %16931, i64* %PC.i1204
  %16932 = inttoptr i64 %16929 to i32*
  %16933 = load i32, i32* %16932
  %16934 = sext i32 %16933 to i64
  store i64 %16934, i64* %R9.i1206, align 8
  store %struct.Memory* %loadMem_40ca46, %struct.Memory** %MEMORY
  %loadMem_40ca4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16936 = getelementptr inbounds %struct.GPR, %struct.GPR* %16935, i32 0, i32 33
  %16937 = getelementptr inbounds %struct.Reg, %struct.Reg* %16936, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %16937 to i64*
  %16938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16939 = getelementptr inbounds %struct.GPR, %struct.GPR* %16938, i32 0, i32 9
  %16940 = getelementptr inbounds %struct.Reg, %struct.Reg* %16939, i32 0, i32 0
  %RSI.i1201 = bitcast %union.anon* %16940 to i64*
  %16941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16942 = getelementptr inbounds %struct.GPR, %struct.GPR* %16941, i32 0, i32 17
  %16943 = getelementptr inbounds %struct.Reg, %struct.Reg* %16942, i32 0, i32 0
  %R8.i1202 = bitcast %union.anon* %16943 to i64*
  %16944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16945 = getelementptr inbounds %struct.GPR, %struct.GPR* %16944, i32 0, i32 19
  %16946 = getelementptr inbounds %struct.Reg, %struct.Reg* %16945, i32 0, i32 0
  %R9.i1203 = bitcast %union.anon* %16946 to i64*
  %16947 = load i64, i64* %RSI.i1201
  %16948 = load i64, i64* %R8.i1202
  %16949 = load i64, i64* %R9.i1203
  %16950 = mul i64 %16949, 4
  %16951 = add i64 %16950, %16948
  %16952 = load i64, i64* %PC.i1200
  %16953 = add i64 %16952, 4
  store i64 %16953, i64* %PC.i1200
  %16954 = trunc i64 %16947 to i32
  %16955 = inttoptr i64 %16951 to i32*
  %16956 = load i32, i32* %16955
  %16957 = sub i32 %16954, %16956
  %16958 = zext i32 %16957 to i64
  store i64 %16958, i64* %RSI.i1201, align 8
  %16959 = icmp ult i32 %16954, %16956
  %16960 = zext i1 %16959 to i8
  %16961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16960, i8* %16961, align 1
  %16962 = and i32 %16957, 255
  %16963 = call i32 @llvm.ctpop.i32(i32 %16962)
  %16964 = trunc i32 %16963 to i8
  %16965 = and i8 %16964, 1
  %16966 = xor i8 %16965, 1
  %16967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16966, i8* %16967, align 1
  %16968 = xor i32 %16956, %16954
  %16969 = xor i32 %16968, %16957
  %16970 = lshr i32 %16969, 4
  %16971 = trunc i32 %16970 to i8
  %16972 = and i8 %16971, 1
  %16973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16972, i8* %16973, align 1
  %16974 = icmp eq i32 %16957, 0
  %16975 = zext i1 %16974 to i8
  %16976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16975, i8* %16976, align 1
  %16977 = lshr i32 %16957, 31
  %16978 = trunc i32 %16977 to i8
  %16979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16978, i8* %16979, align 1
  %16980 = lshr i32 %16954, 31
  %16981 = lshr i32 %16956, 31
  %16982 = xor i32 %16981, %16980
  %16983 = xor i32 %16977, %16980
  %16984 = add i32 %16983, %16982
  %16985 = icmp eq i32 %16984, 2
  %16986 = zext i1 %16985 to i8
  %16987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16986, i8* %16987, align 1
  store %struct.Memory* %loadMem_40ca4a, %struct.Memory** %MEMORY
  %loadMem_40ca4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16989 = getelementptr inbounds %struct.GPR, %struct.GPR* %16988, i32 0, i32 33
  %16990 = getelementptr inbounds %struct.Reg, %struct.Reg* %16989, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %16990 to i64*
  %16991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16992 = getelementptr inbounds %struct.GPR, %struct.GPR* %16991, i32 0, i32 9
  %16993 = getelementptr inbounds %struct.Reg, %struct.Reg* %16992, i32 0, i32 0
  %ESI.i1198 = bitcast %union.anon* %16993 to i32*
  %16994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16995 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %16994, i64 0, i64 0
  %YMM0.i1199 = bitcast %union.VectorReg* %16995 to %"class.std::bitset"*
  %16996 = bitcast %"class.std::bitset"* %YMM0.i1199 to i8*
  %16997 = load i32, i32* %ESI.i1198
  %16998 = zext i32 %16997 to i64
  %16999 = load i64, i64* %PC.i1197
  %17000 = add i64 %16999, 4
  store i64 %17000, i64* %PC.i1197
  %17001 = sitofp i32 %16997 to double
  %17002 = bitcast i8* %16996 to double*
  store double %17001, double* %17002, align 1
  store %struct.Memory* %loadMem_40ca4e, %struct.Memory** %MEMORY
  %loadMem_40ca52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17004 = getelementptr inbounds %struct.GPR, %struct.GPR* %17003, i32 0, i32 33
  %17005 = getelementptr inbounds %struct.Reg, %struct.Reg* %17004, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %17005 to i64*
  %17006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17007 = getelementptr inbounds %struct.GPR, %struct.GPR* %17006, i32 0, i32 15
  %17008 = getelementptr inbounds %struct.Reg, %struct.Reg* %17007, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %17008 to i64*
  %17009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17009, i64 0, i64 0
  %XMM0.i1196 = bitcast %union.VectorReg* %17010 to %union.vec128_t*
  %17011 = load i64, i64* %RBP.i1195
  %17012 = sub i64 %17011, 280
  %17013 = bitcast %union.vec128_t* %XMM0.i1196 to i8*
  %17014 = load i64, i64* %PC.i1194
  %17015 = add i64 %17014, 8
  store i64 %17015, i64* %PC.i1194
  %17016 = bitcast i8* %17013 to double*
  %17017 = load double, double* %17016, align 1
  %17018 = inttoptr i64 %17012 to double*
  store double %17017, double* %17018
  store %struct.Memory* %loadMem_40ca52, %struct.Memory** %MEMORY
  %loadMem_40ca5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17020 = getelementptr inbounds %struct.GPR, %struct.GPR* %17019, i32 0, i32 33
  %17021 = getelementptr inbounds %struct.Reg, %struct.Reg* %17020, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %17021 to i64*
  %17022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17023 = getelementptr inbounds %struct.GPR, %struct.GPR* %17022, i32 0, i32 11
  %17024 = getelementptr inbounds %struct.Reg, %struct.Reg* %17023, i32 0, i32 0
  %RDI.i1192 = bitcast %union.anon* %17024 to i64*
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17026 = getelementptr inbounds %struct.GPR, %struct.GPR* %17025, i32 0, i32 15
  %17027 = getelementptr inbounds %struct.Reg, %struct.Reg* %17026, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %17027 to i64*
  %17028 = load i64, i64* %RBP.i1193
  %17029 = sub i64 %17028, 264
  %17030 = load i64, i64* %PC.i1191
  %17031 = add i64 %17030, 6
  store i64 %17031, i64* %PC.i1191
  %17032 = inttoptr i64 %17029 to i32*
  %17033 = load i32, i32* %17032
  %17034 = zext i32 %17033 to i64
  store i64 %17034, i64* %RDI.i1192, align 8
  store %struct.Memory* %loadMem_40ca5a, %struct.Memory** %MEMORY
  %loadMem_40ca60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17036 = getelementptr inbounds %struct.GPR, %struct.GPR* %17035, i32 0, i32 33
  %17037 = getelementptr inbounds %struct.Reg, %struct.Reg* %17036, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %17037 to i64*
  %17038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17039 = getelementptr inbounds %struct.GPR, %struct.GPR* %17038, i32 0, i32 9
  %17040 = getelementptr inbounds %struct.Reg, %struct.Reg* %17039, i32 0, i32 0
  %RSI.i1189 = bitcast %union.anon* %17040 to i64*
  %17041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17042 = getelementptr inbounds %struct.GPR, %struct.GPR* %17041, i32 0, i32 15
  %17043 = getelementptr inbounds %struct.Reg, %struct.Reg* %17042, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %17043 to i64*
  %17044 = load i64, i64* %RBP.i1190
  %17045 = sub i64 %17044, 100
  %17046 = load i64, i64* %PC.i1188
  %17047 = add i64 %17046, 3
  store i64 %17047, i64* %PC.i1188
  %17048 = inttoptr i64 %17045 to i32*
  %17049 = load i32, i32* %17048
  %17050 = zext i32 %17049 to i64
  store i64 %17050, i64* %RSI.i1189, align 8
  store %struct.Memory* %loadMem_40ca60, %struct.Memory** %MEMORY
  %loadMem_40ca63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17052 = getelementptr inbounds %struct.GPR, %struct.GPR* %17051, i32 0, i32 33
  %17053 = getelementptr inbounds %struct.Reg, %struct.Reg* %17052, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %17053 to i64*
  %17054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17055 = getelementptr inbounds %struct.GPR, %struct.GPR* %17054, i32 0, i32 5
  %17056 = getelementptr inbounds %struct.Reg, %struct.Reg* %17055, i32 0, i32 0
  %RCX.i1186 = bitcast %union.anon* %17056 to i64*
  %17057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17058 = getelementptr inbounds %struct.GPR, %struct.GPR* %17057, i32 0, i32 15
  %17059 = getelementptr inbounds %struct.Reg, %struct.Reg* %17058, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %17059 to i64*
  %17060 = load i64, i64* %RBP.i1187
  %17061 = sub i64 %17060, 360
  %17062 = load i64, i64* %PC.i1185
  %17063 = add i64 %17062, 7
  store i64 %17063, i64* %PC.i1185
  %17064 = inttoptr i64 %17061 to i64*
  %17065 = load i64, i64* %17064
  store i64 %17065, i64* %RCX.i1186, align 8
  store %struct.Memory* %loadMem_40ca63, %struct.Memory** %MEMORY
  %loadMem1_40ca6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17067 = getelementptr inbounds %struct.GPR, %struct.GPR* %17066, i32 0, i32 33
  %17068 = getelementptr inbounds %struct.Reg, %struct.Reg* %17067, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %17068 to i64*
  %17069 = load i64, i64* %PC.i1184
  %17070 = add i64 %17069, 656390
  %17071 = load i64, i64* %PC.i1184
  %17072 = add i64 %17071, 5
  %17073 = load i64, i64* %PC.i1184
  %17074 = add i64 %17073, 5
  store i64 %17074, i64* %PC.i1184
  %17075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17076 = load i64, i64* %17075, align 8
  %17077 = add i64 %17076, -8
  %17078 = inttoptr i64 %17077 to i64*
  store i64 %17072, i64* %17078
  store i64 %17077, i64* %17075, align 8
  %17079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17070, i64* %17079, align 8
  store %struct.Memory* %loadMem1_40ca6a, %struct.Memory** %MEMORY
  %loadMem2_40ca6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ca6a = load i64, i64* %3
  %call2_40ca6a = call %struct.Memory* @sub_4ace70.levrun_linfo_inter(%struct.State* %0, i64 %loadPC_40ca6a, %struct.Memory* %loadMem2_40ca6a)
  store %struct.Memory* %call2_40ca6a, %struct.Memory** %MEMORY
  %loadMem_40ca6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17081 = getelementptr inbounds %struct.GPR, %struct.GPR* %17080, i32 0, i32 33
  %17082 = getelementptr inbounds %struct.Reg, %struct.Reg* %17081, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %17082 to i64*
  %17083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17084 = getelementptr inbounds %struct.GPR, %struct.GPR* %17083, i32 0, i32 15
  %17085 = getelementptr inbounds %struct.Reg, %struct.Reg* %17084, i32 0, i32 0
  %RBP.i1182 = bitcast %union.anon* %17085 to i64*
  %17086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17087 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17086, i64 0, i64 0
  %YMM0.i1183 = bitcast %union.VectorReg* %17087 to %"class.std::bitset"*
  %17088 = bitcast %"class.std::bitset"* %YMM0.i1183 to i8*
  %17089 = load i64, i64* %RBP.i1182
  %17090 = sub i64 %17089, 280
  %17091 = load i64, i64* %PC.i1181
  %17092 = add i64 %17091, 8
  store i64 %17092, i64* %PC.i1181
  %17093 = inttoptr i64 %17090 to double*
  %17094 = load double, double* %17093
  %17095 = bitcast i8* %17088 to double*
  store double %17094, double* %17095, align 1
  %17096 = getelementptr inbounds i8, i8* %17088, i64 8
  %17097 = bitcast i8* %17096 to double*
  store double 0.000000e+00, double* %17097, align 1
  store %struct.Memory* %loadMem_40ca6f, %struct.Memory** %MEMORY
  %loadMem_40ca77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17099 = getelementptr inbounds %struct.GPR, %struct.GPR* %17098, i32 0, i32 33
  %17100 = getelementptr inbounds %struct.Reg, %struct.Reg* %17099, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %17100 to i64*
  %17101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17102 = getelementptr inbounds %struct.GPR, %struct.GPR* %17101, i32 0, i32 15
  %17103 = getelementptr inbounds %struct.Reg, %struct.Reg* %17102, i32 0, i32 0
  %RBP.i1179 = bitcast %union.anon* %17103 to i64*
  %17104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17105 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17104, i64 0, i64 0
  %YMM0.i1180 = bitcast %union.VectorReg* %17105 to %"class.std::bitset"*
  %17106 = bitcast %"class.std::bitset"* %YMM0.i1180 to i8*
  %17107 = bitcast %"class.std::bitset"* %YMM0.i1180 to i8*
  %17108 = load i64, i64* %RBP.i1179
  %17109 = sub i64 %17108, 280
  %17110 = load i64, i64* %PC.i1178
  %17111 = add i64 %17110, 8
  store i64 %17111, i64* %PC.i1178
  %17112 = bitcast i8* %17107 to double*
  %17113 = load double, double* %17112, align 1
  %17114 = getelementptr inbounds i8, i8* %17107, i64 8
  %17115 = bitcast i8* %17114 to i64*
  %17116 = load i64, i64* %17115, align 1
  %17117 = inttoptr i64 %17109 to double*
  %17118 = load double, double* %17117
  %17119 = fmul double %17113, %17118
  %17120 = bitcast i8* %17106 to double*
  store double %17119, double* %17120, align 1
  %17121 = getelementptr inbounds i8, i8* %17106, i64 8
  %17122 = bitcast i8* %17121 to i64*
  store i64 %17116, i64* %17122, align 1
  store %struct.Memory* %loadMem_40ca77, %struct.Memory** %MEMORY
  %loadMem_40ca7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17124 = getelementptr inbounds %struct.GPR, %struct.GPR* %17123, i32 0, i32 33
  %17125 = getelementptr inbounds %struct.Reg, %struct.Reg* %17124, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %17125 to i64*
  %17126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17127 = getelementptr inbounds %struct.GPR, %struct.GPR* %17126, i32 0, i32 15
  %17128 = getelementptr inbounds %struct.Reg, %struct.Reg* %17127, i32 0, i32 0
  %RBP.i1176 = bitcast %union.anon* %17128 to i64*
  %17129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17130 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17129, i64 0, i64 1
  %YMM1.i1177 = bitcast %union.VectorReg* %17130 to %"class.std::bitset"*
  %17131 = bitcast %"class.std::bitset"* %YMM1.i1177 to i8*
  %17132 = load i64, i64* %RBP.i1176
  %17133 = sub i64 %17132, 296
  %17134 = load i64, i64* %PC.i1175
  %17135 = add i64 %17134, 8
  store i64 %17135, i64* %PC.i1175
  %17136 = inttoptr i64 %17133 to double*
  %17137 = load double, double* %17136
  %17138 = bitcast i8* %17131 to double*
  store double %17137, double* %17138, align 1
  %17139 = getelementptr inbounds i8, i8* %17131, i64 8
  %17140 = bitcast i8* %17139 to double*
  store double 0.000000e+00, double* %17140, align 1
  store %struct.Memory* %loadMem_40ca7f, %struct.Memory** %MEMORY
  %loadMem_40ca87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17142 = getelementptr inbounds %struct.GPR, %struct.GPR* %17141, i32 0, i32 33
  %17143 = getelementptr inbounds %struct.Reg, %struct.Reg* %17142, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %17143 to i64*
  %17144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17145 = getelementptr inbounds %struct.GPR, %struct.GPR* %17144, i32 0, i32 15
  %17146 = getelementptr inbounds %struct.Reg, %struct.Reg* %17145, i32 0, i32 0
  %RBP.i1174 = bitcast %union.anon* %17146 to i64*
  %17147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17148 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17147, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %17148 to %"class.std::bitset"*
  %17149 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %17150 = load i64, i64* %RBP.i1174
  %17151 = sub i64 %17150, 284
  %17152 = load i64, i64* %PC.i1173
  %17153 = add i64 %17152, 8
  store i64 %17153, i64* %PC.i1173
  %17154 = inttoptr i64 %17151 to i32*
  %17155 = load i32, i32* %17154
  %17156 = sitofp i32 %17155 to double
  %17157 = bitcast i8* %17149 to double*
  store double %17156, double* %17157, align 1
  store %struct.Memory* %loadMem_40ca87, %struct.Memory** %MEMORY
  %loadMem_40ca8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17159 = getelementptr inbounds %struct.GPR, %struct.GPR* %17158, i32 0, i32 33
  %17160 = getelementptr inbounds %struct.Reg, %struct.Reg* %17159, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %17160 to i64*
  %17161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17162 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17161, i64 0, i64 1
  %YMM1.i1172 = bitcast %union.VectorReg* %17162 to %"class.std::bitset"*
  %17163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17164 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17163, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %17164 to %union.vec128_t*
  %17165 = bitcast %"class.std::bitset"* %YMM1.i1172 to i8*
  %17166 = bitcast %"class.std::bitset"* %YMM1.i1172 to i8*
  %17167 = bitcast %union.vec128_t* %XMM2.i to i8*
  %17168 = load i64, i64* %PC.i1171
  %17169 = add i64 %17168, 4
  store i64 %17169, i64* %PC.i1171
  %17170 = bitcast i8* %17166 to double*
  %17171 = load double, double* %17170, align 1
  %17172 = getelementptr inbounds i8, i8* %17166, i64 8
  %17173 = bitcast i8* %17172 to i64*
  %17174 = load i64, i64* %17173, align 1
  %17175 = bitcast i8* %17167 to double*
  %17176 = load double, double* %17175, align 1
  %17177 = fmul double %17171, %17176
  %17178 = bitcast i8* %17165 to double*
  store double %17177, double* %17178, align 1
  %17179 = getelementptr inbounds i8, i8* %17165, i64 8
  %17180 = bitcast i8* %17179 to i64*
  store i64 %17174, i64* %17180, align 1
  store %struct.Memory* %loadMem_40ca8f, %struct.Memory** %MEMORY
  %loadMem_40ca93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17182 = getelementptr inbounds %struct.GPR, %struct.GPR* %17181, i32 0, i32 33
  %17183 = getelementptr inbounds %struct.Reg, %struct.Reg* %17182, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %17183 to i64*
  %17184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17184, i64 0, i64 0
  %YMM0.i1169 = bitcast %union.VectorReg* %17185 to %"class.std::bitset"*
  %17186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17186, i64 0, i64 1
  %XMM1.i1170 = bitcast %union.VectorReg* %17187 to %union.vec128_t*
  %17188 = bitcast %"class.std::bitset"* %YMM0.i1169 to i8*
  %17189 = bitcast %"class.std::bitset"* %YMM0.i1169 to i8*
  %17190 = bitcast %union.vec128_t* %XMM1.i1170 to i8*
  %17191 = load i64, i64* %PC.i1168
  %17192 = add i64 %17191, 4
  store i64 %17192, i64* %PC.i1168
  %17193 = bitcast i8* %17189 to double*
  %17194 = load double, double* %17193, align 1
  %17195 = getelementptr inbounds i8, i8* %17189, i64 8
  %17196 = bitcast i8* %17195 to i64*
  %17197 = load i64, i64* %17196, align 1
  %17198 = bitcast i8* %17190 to double*
  %17199 = load double, double* %17198, align 1
  %17200 = fadd double %17194, %17199
  %17201 = bitcast i8* %17188 to double*
  store double %17200, double* %17201, align 1
  %17202 = getelementptr inbounds i8, i8* %17188, i64 8
  %17203 = bitcast i8* %17202 to i64*
  store i64 %17197, i64* %17203, align 1
  store %struct.Memory* %loadMem_40ca93, %struct.Memory** %MEMORY
  %loadMem_40ca97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17205 = getelementptr inbounds %struct.GPR, %struct.GPR* %17204, i32 0, i32 33
  %17206 = getelementptr inbounds %struct.Reg, %struct.Reg* %17205, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %17206 to i64*
  %17207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17208 = getelementptr inbounds %struct.GPR, %struct.GPR* %17207, i32 0, i32 15
  %17209 = getelementptr inbounds %struct.Reg, %struct.Reg* %17208, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %17209 to i64*
  %17210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17210, i64 0, i64 0
  %XMM0.i1167 = bitcast %union.VectorReg* %17211 to %union.vec128_t*
  %17212 = load i64, i64* %RBP.i1166
  %17213 = sub i64 %17212, 280
  %17214 = bitcast %union.vec128_t* %XMM0.i1167 to i8*
  %17215 = load i64, i64* %PC.i1165
  %17216 = add i64 %17215, 8
  store i64 %17216, i64* %PC.i1165
  %17217 = bitcast i8* %17214 to double*
  %17218 = load double, double* %17217, align 1
  %17219 = inttoptr i64 %17213 to double*
  store double %17218, double* %17219
  store %struct.Memory* %loadMem_40ca97, %struct.Memory** %MEMORY
  %loadMem_40ca9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17221 = getelementptr inbounds %struct.GPR, %struct.GPR* %17220, i32 0, i32 33
  %17222 = getelementptr inbounds %struct.Reg, %struct.Reg* %17221, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %17222 to i64*
  %17223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17224 = getelementptr inbounds %struct.GPR, %struct.GPR* %17223, i32 0, i32 15
  %17225 = getelementptr inbounds %struct.Reg, %struct.Reg* %17224, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %17225 to i64*
  %17226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17227 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17226, i64 0, i64 0
  %YMM0.i1164 = bitcast %union.VectorReg* %17227 to %"class.std::bitset"*
  %17228 = bitcast %"class.std::bitset"* %YMM0.i1164 to i8*
  %17229 = load i64, i64* %RBP.i1163
  %17230 = sub i64 %17229, 272
  %17231 = load i64, i64* %PC.i1162
  %17232 = add i64 %17231, 8
  store i64 %17232, i64* %PC.i1162
  %17233 = inttoptr i64 %17230 to double*
  %17234 = load double, double* %17233
  %17235 = bitcast i8* %17228 to double*
  store double %17234, double* %17235, align 1
  %17236 = getelementptr inbounds i8, i8* %17228, i64 8
  %17237 = bitcast i8* %17236 to double*
  store double 0.000000e+00, double* %17237, align 1
  store %struct.Memory* %loadMem_40ca9f, %struct.Memory** %MEMORY
  %loadMem_40caa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17239 = getelementptr inbounds %struct.GPR, %struct.GPR* %17238, i32 0, i32 33
  %17240 = getelementptr inbounds %struct.Reg, %struct.Reg* %17239, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %17240 to i64*
  %17241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17242 = getelementptr inbounds %struct.GPR, %struct.GPR* %17241, i32 0, i32 15
  %17243 = getelementptr inbounds %struct.Reg, %struct.Reg* %17242, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %17243 to i64*
  %17244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17245 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17244, i64 0, i64 0
  %XMM0.i1159 = bitcast %union.VectorReg* %17245 to %union.vec128_t*
  %17246 = bitcast %union.vec128_t* %XMM0.i1159 to i8*
  %17247 = load i64, i64* %RBP.i1158
  %17248 = sub i64 %17247, 280
  %17249 = load i64, i64* %PC.i1157
  %17250 = add i64 %17249, 8
  store i64 %17250, i64* %PC.i1157
  %17251 = bitcast i8* %17246 to double*
  %17252 = load double, double* %17251, align 1
  %17253 = inttoptr i64 %17248 to double*
  %17254 = load double, double* %17253
  %17255 = fcmp uno double %17252, %17254
  br i1 %17255, label %17256, label %17268

; <label>:17256:                                  ; preds = %routine_shll__cl___eax.exit1226
  %17257 = fadd double %17252, %17254
  %17258 = bitcast double %17257 to i64
  %17259 = and i64 %17258, 9221120237041090560
  %17260 = icmp eq i64 %17259, 9218868437227405312
  %17261 = and i64 %17258, 2251799813685247
  %17262 = icmp ne i64 %17261, 0
  %17263 = and i1 %17260, %17262
  br i1 %17263, label %17264, label %17274

; <label>:17264:                                  ; preds = %17256
  %17265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17266 = load i64, i64* %17265, align 8
  %17267 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %17266, %struct.Memory* %loadMem_40caa7)
  br label %routine_ucomisd_MINUS0x118__rbp____xmm0.exit

; <label>:17268:                                  ; preds = %routine_shll__cl___eax.exit1226
  %17269 = fcmp ogt double %17252, %17254
  br i1 %17269, label %17274, label %17270

; <label>:17270:                                  ; preds = %17268
  %17271 = fcmp olt double %17252, %17254
  br i1 %17271, label %17274, label %17272

; <label>:17272:                                  ; preds = %17270
  %17273 = fcmp oeq double %17252, %17254
  br i1 %17273, label %17274, label %17281

; <label>:17274:                                  ; preds = %17272, %17270, %17268, %17256
  %17275 = phi i8 [ 0, %17268 ], [ 0, %17270 ], [ 1, %17272 ], [ 1, %17256 ]
  %17276 = phi i8 [ 0, %17268 ], [ 0, %17270 ], [ 0, %17272 ], [ 1, %17256 ]
  %17277 = phi i8 [ 0, %17268 ], [ 1, %17270 ], [ 0, %17272 ], [ 1, %17256 ]
  %17278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17275, i8* %17278, align 1
  %17279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17276, i8* %17279, align 1
  %17280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17277, i8* %17280, align 1
  br label %17281

; <label>:17281:                                  ; preds = %17274, %17272
  %17282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17282, align 1
  %17283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %17283, align 1
  %17284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17284, align 1
  br label %routine_ucomisd_MINUS0x118__rbp____xmm0.exit

routine_ucomisd_MINUS0x118__rbp____xmm0.exit:     ; preds = %17264, %17281
  %17285 = phi %struct.Memory* [ %17267, %17264 ], [ %loadMem_40caa7, %17281 ]
  store %struct.Memory* %17285, %struct.Memory** %MEMORY
  %loadMem_40caaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %17286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17287 = getelementptr inbounds %struct.GPR, %struct.GPR* %17286, i32 0, i32 33
  %17288 = getelementptr inbounds %struct.Reg, %struct.Reg* %17287, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %17288 to i64*
  %17289 = load i64, i64* %PC.i1156
  %17290 = add i64 %17289, 97
  %17291 = load i64, i64* %PC.i1156
  %17292 = add i64 %17291, 6
  %17293 = load i64, i64* %PC.i1156
  %17294 = add i64 %17293, 6
  store i64 %17294, i64* %PC.i1156
  %17295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17296 = load i8, i8* %17295, align 1
  %17297 = icmp eq i8 %17296, 0
  %17298 = zext i1 %17297 to i8
  store i8 %17298, i8* %BRANCH_TAKEN, align 1
  %17299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17300 = select i1 %17297, i64 %17290, i64 %17292
  store i64 %17300, i64* %17299, align 8
  store %struct.Memory* %loadMem_40caaf, %struct.Memory** %MEMORY
  %loadBr_40caaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40caaf = icmp eq i8 %loadBr_40caaf, 1
  br i1 %cmpBr_40caaf, label %block_.L_40cb10, label %block_40cab5

block_40cab5:                                     ; preds = %routine_ucomisd_MINUS0x118__rbp____xmm0.exit
  %loadMem_40cab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17302 = getelementptr inbounds %struct.GPR, %struct.GPR* %17301, i32 0, i32 33
  %17303 = getelementptr inbounds %struct.Reg, %struct.Reg* %17302, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %17303 to i64*
  %17304 = load i64, i64* %PC.i1155
  %17305 = add i64 %17304, 91
  %17306 = load i64, i64* %PC.i1155
  %17307 = add i64 %17306, 6
  %17308 = load i64, i64* %PC.i1155
  %17309 = add i64 %17308, 6
  store i64 %17309, i64* %PC.i1155
  %17310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17311 = load i8, i8* %17310, align 1
  store i8 %17311, i8* %BRANCH_TAKEN, align 1
  %17312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17313 = icmp ne i8 %17311, 0
  %17314 = select i1 %17313, i64 %17305, i64 %17307
  store i64 %17314, i64* %17312, align 8
  store %struct.Memory* %loadMem_40cab5, %struct.Memory** %MEMORY
  %loadBr_40cab5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cab5 = icmp eq i8 %loadBr_40cab5, 1
  br i1 %cmpBr_40cab5, label %block_.L_40cb10, label %block_40cabb

block_40cabb:                                     ; preds = %block_40cab5
  %loadMem_40cabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17316 = getelementptr inbounds %struct.GPR, %struct.GPR* %17315, i32 0, i32 33
  %17317 = getelementptr inbounds %struct.Reg, %struct.Reg* %17316, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %17317 to i64*
  %17318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17319 = getelementptr inbounds %struct.GPR, %struct.GPR* %17318, i32 0, i32 11
  %17320 = getelementptr inbounds %struct.Reg, %struct.Reg* %17319, i32 0, i32 0
  %RDI.i1153 = bitcast %union.anon* %17320 to i64*
  %17321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17322 = getelementptr inbounds %struct.GPR, %struct.GPR* %17321, i32 0, i32 15
  %17323 = getelementptr inbounds %struct.Reg, %struct.Reg* %17322, i32 0, i32 0
  %RBP.i1154 = bitcast %union.anon* %17323 to i64*
  %17324 = load i64, i64* %RBP.i1154
  %17325 = sub i64 %17324, 260
  %17326 = load i64, i64* %PC.i1152
  %17327 = add i64 %17326, 6
  store i64 %17327, i64* %PC.i1152
  %17328 = inttoptr i64 %17325 to i32*
  %17329 = load i32, i32* %17328
  %17330 = zext i32 %17329 to i64
  store i64 %17330, i64* %RDI.i1153, align 8
  store %struct.Memory* %loadMem_40cabb, %struct.Memory** %MEMORY
  %loadMem1_40cac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17332 = getelementptr inbounds %struct.GPR, %struct.GPR* %17331, i32 0, i32 33
  %17333 = getelementptr inbounds %struct.Reg, %struct.Reg* %17332, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %17333 to i64*
  %17334 = load i64, i64* %PC.i1151
  %17335 = add i64 %17334, -47809
  %17336 = load i64, i64* %PC.i1151
  %17337 = add i64 %17336, 5
  %17338 = load i64, i64* %PC.i1151
  %17339 = add i64 %17338, 5
  store i64 %17339, i64* %PC.i1151
  %17340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17341 = load i64, i64* %17340, align 8
  %17342 = add i64 %17341, -8
  %17343 = inttoptr i64 %17342 to i64*
  store i64 %17337, i64* %17343
  store i64 %17342, i64* %17340, align 8
  %17344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17335, i64* %17344, align 8
  store %struct.Memory* %loadMem1_40cac1, %struct.Memory** %MEMORY
  %loadMem2_40cac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cac1 = load i64, i64* %3
  %17345 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40cac1)
  store %struct.Memory* %17345, %struct.Memory** %MEMORY
  %loadMem_40cac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17347 = getelementptr inbounds %struct.GPR, %struct.GPR* %17346, i32 0, i32 33
  %17348 = getelementptr inbounds %struct.Reg, %struct.Reg* %17347, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %17348 to i64*
  %17349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17350 = getelementptr inbounds %struct.GPR, %struct.GPR* %17349, i32 0, i32 11
  %17351 = getelementptr inbounds %struct.Reg, %struct.Reg* %17350, i32 0, i32 0
  %RDI.i1147 = bitcast %union.anon* %17351 to i64*
  %17352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17353 = getelementptr inbounds %struct.GPR, %struct.GPR* %17352, i32 0, i32 15
  %17354 = getelementptr inbounds %struct.Reg, %struct.Reg* %17353, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %17354 to i64*
  %17355 = load i64, i64* %RBP.i1148
  %17356 = sub i64 %17355, 264
  %17357 = load i64, i64* %PC.i1146
  %17358 = add i64 %17357, 6
  store i64 %17358, i64* %PC.i1146
  %17359 = inttoptr i64 %17356 to i32*
  %17360 = load i32, i32* %17359
  %17361 = zext i32 %17360 to i64
  store i64 %17361, i64* %RDI.i1147, align 8
  store %struct.Memory* %loadMem_40cac6, %struct.Memory** %MEMORY
  %loadMem_40cacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17363 = getelementptr inbounds %struct.GPR, %struct.GPR* %17362, i32 0, i32 33
  %17364 = getelementptr inbounds %struct.Reg, %struct.Reg* %17363, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %17364 to i64*
  %17365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17366 = getelementptr inbounds %struct.GPR, %struct.GPR* %17365, i32 0, i32 1
  %17367 = getelementptr inbounds %struct.Reg, %struct.Reg* %17366, i32 0, i32 0
  %EAX.i1144 = bitcast %union.anon* %17367 to i32*
  %17368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17369 = getelementptr inbounds %struct.GPR, %struct.GPR* %17368, i32 0, i32 15
  %17370 = getelementptr inbounds %struct.Reg, %struct.Reg* %17369, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %17370 to i64*
  %17371 = load i64, i64* %RBP.i1145
  %17372 = sub i64 %17371, 364
  %17373 = load i32, i32* %EAX.i1144
  %17374 = zext i32 %17373 to i64
  %17375 = load i64, i64* %PC.i1143
  %17376 = add i64 %17375, 6
  store i64 %17376, i64* %PC.i1143
  %17377 = inttoptr i64 %17372 to i32*
  store i32 %17373, i32* %17377
  store %struct.Memory* %loadMem_40cacc, %struct.Memory** %MEMORY
  %loadMem1_40cad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17379 = getelementptr inbounds %struct.GPR, %struct.GPR* %17378, i32 0, i32 33
  %17380 = getelementptr inbounds %struct.Reg, %struct.Reg* %17379, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %17380 to i64*
  %17381 = load i64, i64* %PC.i1142
  %17382 = add i64 %17381, -47826
  %17383 = load i64, i64* %PC.i1142
  %17384 = add i64 %17383, 5
  %17385 = load i64, i64* %PC.i1142
  %17386 = add i64 %17385, 5
  store i64 %17386, i64* %PC.i1142
  %17387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %17388 = load i64, i64* %17387, align 8
  %17389 = add i64 %17388, -8
  %17390 = inttoptr i64 %17389 to i64*
  store i64 %17384, i64* %17390
  store i64 %17389, i64* %17387, align 8
  %17391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17382, i64* %17391, align 8
  store %struct.Memory* %loadMem1_40cad2, %struct.Memory** %MEMORY
  %loadMem2_40cad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cad2 = load i64, i64* %3
  %17392 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40cad2)
  store %struct.Memory* %17392, %struct.Memory** %MEMORY
  %loadMem_40cad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17394 = getelementptr inbounds %struct.GPR, %struct.GPR* %17393, i32 0, i32 33
  %17395 = getelementptr inbounds %struct.Reg, %struct.Reg* %17394, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %17395 to i64*
  %17396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17397 = getelementptr inbounds %struct.GPR, %struct.GPR* %17396, i32 0, i32 11
  %17398 = getelementptr inbounds %struct.Reg, %struct.Reg* %17397, i32 0, i32 0
  %RDI.i1138 = bitcast %union.anon* %17398 to i64*
  %17399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17400 = getelementptr inbounds %struct.GPR, %struct.GPR* %17399, i32 0, i32 15
  %17401 = getelementptr inbounds %struct.Reg, %struct.Reg* %17400, i32 0, i32 0
  %RBP.i1139 = bitcast %union.anon* %17401 to i64*
  %17402 = load i64, i64* %RBP.i1139
  %17403 = sub i64 %17402, 364
  %17404 = load i64, i64* %PC.i1137
  %17405 = add i64 %17404, 6
  store i64 %17405, i64* %PC.i1137
  %17406 = inttoptr i64 %17403 to i32*
  %17407 = load i32, i32* %17406
  %17408 = zext i32 %17407 to i64
  store i64 %17408, i64* %RDI.i1138, align 8
  store %struct.Memory* %loadMem_40cad7, %struct.Memory** %MEMORY
  %loadMem_40cadd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17410 = getelementptr inbounds %struct.GPR, %struct.GPR* %17409, i32 0, i32 33
  %17411 = getelementptr inbounds %struct.Reg, %struct.Reg* %17410, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %17411 to i64*
  %17412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17413 = getelementptr inbounds %struct.GPR, %struct.GPR* %17412, i32 0, i32 1
  %17414 = getelementptr inbounds %struct.Reg, %struct.Reg* %17413, i32 0, i32 0
  %EAX.i1135 = bitcast %union.anon* %17414 to i32*
  %17415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17416 = getelementptr inbounds %struct.GPR, %struct.GPR* %17415, i32 0, i32 11
  %17417 = getelementptr inbounds %struct.Reg, %struct.Reg* %17416, i32 0, i32 0
  %EDI.i1136 = bitcast %union.anon* %17417 to i32*
  %17418 = load i32, i32* %EDI.i1136
  %17419 = zext i32 %17418 to i64
  %17420 = load i32, i32* %EAX.i1135
  %17421 = zext i32 %17420 to i64
  %17422 = load i64, i64* %PC.i1134
  %17423 = add i64 %17422, 2
  store i64 %17423, i64* %PC.i1134
  %17424 = sub i32 %17418, %17420
  %17425 = icmp ult i32 %17418, %17420
  %17426 = zext i1 %17425 to i8
  %17427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17426, i8* %17427, align 1
  %17428 = and i32 %17424, 255
  %17429 = call i32 @llvm.ctpop.i32(i32 %17428)
  %17430 = trunc i32 %17429 to i8
  %17431 = and i8 %17430, 1
  %17432 = xor i8 %17431, 1
  %17433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17432, i8* %17433, align 1
  %17434 = xor i64 %17421, %17419
  %17435 = trunc i64 %17434 to i32
  %17436 = xor i32 %17435, %17424
  %17437 = lshr i32 %17436, 4
  %17438 = trunc i32 %17437 to i8
  %17439 = and i8 %17438, 1
  %17440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17439, i8* %17440, align 1
  %17441 = icmp eq i32 %17424, 0
  %17442 = zext i1 %17441 to i8
  %17443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17442, i8* %17443, align 1
  %17444 = lshr i32 %17424, 31
  %17445 = trunc i32 %17444 to i8
  %17446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17445, i8* %17446, align 1
  %17447 = lshr i32 %17418, 31
  %17448 = lshr i32 %17420, 31
  %17449 = xor i32 %17448, %17447
  %17450 = xor i32 %17444, %17447
  %17451 = add i32 %17450, %17449
  %17452 = icmp eq i32 %17451, 2
  %17453 = zext i1 %17452 to i8
  %17454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17453, i8* %17454, align 1
  store %struct.Memory* %loadMem_40cadd, %struct.Memory** %MEMORY
  %loadMem_40cadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %17455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17456 = getelementptr inbounds %struct.GPR, %struct.GPR* %17455, i32 0, i32 33
  %17457 = getelementptr inbounds %struct.Reg, %struct.Reg* %17456, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %17457 to i64*
  %17458 = load i64, i64* %PC.i1133
  %17459 = add i64 %17458, 23
  %17460 = load i64, i64* %PC.i1133
  %17461 = add i64 %17460, 6
  %17462 = load i64, i64* %PC.i1133
  %17463 = add i64 %17462, 6
  store i64 %17463, i64* %PC.i1133
  %17464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17465 = load i8, i8* %17464, align 1
  %17466 = icmp ne i8 %17465, 0
  %17467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17468 = load i8, i8* %17467, align 1
  %17469 = icmp ne i8 %17468, 0
  %17470 = xor i1 %17466, %17469
  %17471 = xor i1 %17470, true
  %17472 = zext i1 %17471 to i8
  store i8 %17472, i8* %BRANCH_TAKEN, align 1
  %17473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17474 = select i1 %17470, i64 %17461, i64 %17459
  store i64 %17474, i64* %17473, align 8
  store %struct.Memory* %loadMem_40cadf, %struct.Memory** %MEMORY
  %loadBr_40cadf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cadf = icmp eq i8 %loadBr_40cadf, 1
  br i1 %cmpBr_40cadf, label %block_.L_40caf6, label %block_40cae5

block_40cae5:                                     ; preds = %block_40cabb
  %loadMem_40cae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17476 = getelementptr inbounds %struct.GPR, %struct.GPR* %17475, i32 0, i32 33
  %17477 = getelementptr inbounds %struct.Reg, %struct.Reg* %17476, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %17477 to i64*
  %17478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17479 = getelementptr inbounds %struct.GPR, %struct.GPR* %17478, i32 0, i32 1
  %17480 = getelementptr inbounds %struct.Reg, %struct.Reg* %17479, i32 0, i32 0
  %RAX.i1131 = bitcast %union.anon* %17480 to i64*
  %17481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17482 = getelementptr inbounds %struct.GPR, %struct.GPR* %17481, i32 0, i32 15
  %17483 = getelementptr inbounds %struct.Reg, %struct.Reg* %17482, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %17483 to i64*
  %17484 = load i64, i64* %RBP.i1132
  %17485 = sub i64 %17484, 260
  %17486 = load i64, i64* %PC.i1130
  %17487 = add i64 %17486, 6
  store i64 %17487, i64* %PC.i1130
  %17488 = inttoptr i64 %17485 to i32*
  %17489 = load i32, i32* %17488
  %17490 = zext i32 %17489 to i64
  store i64 %17490, i64* %RAX.i1131, align 8
  store %struct.Memory* %loadMem_40cae5, %struct.Memory** %MEMORY
  %loadMem_40caeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17492 = getelementptr inbounds %struct.GPR, %struct.GPR* %17491, i32 0, i32 33
  %17493 = getelementptr inbounds %struct.Reg, %struct.Reg* %17492, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %17493 to i64*
  %17494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17495 = getelementptr inbounds %struct.GPR, %struct.GPR* %17494, i32 0, i32 1
  %17496 = getelementptr inbounds %struct.Reg, %struct.Reg* %17495, i32 0, i32 0
  %EAX.i1128 = bitcast %union.anon* %17496 to i32*
  %17497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17498 = getelementptr inbounds %struct.GPR, %struct.GPR* %17497, i32 0, i32 15
  %17499 = getelementptr inbounds %struct.Reg, %struct.Reg* %17498, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %17499 to i64*
  %17500 = load i64, i64* %RBP.i1129
  %17501 = sub i64 %17500, 368
  %17502 = load i32, i32* %EAX.i1128
  %17503 = zext i32 %17502 to i64
  %17504 = load i64, i64* %PC.i1127
  %17505 = add i64 %17504, 6
  store i64 %17505, i64* %PC.i1127
  %17506 = inttoptr i64 %17501 to i32*
  store i32 %17502, i32* %17506
  store %struct.Memory* %loadMem_40caeb, %struct.Memory** %MEMORY
  %loadMem_40caf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17508 = getelementptr inbounds %struct.GPR, %struct.GPR* %17507, i32 0, i32 33
  %17509 = getelementptr inbounds %struct.Reg, %struct.Reg* %17508, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %17509 to i64*
  %17510 = load i64, i64* %PC.i1126
  %17511 = add i64 %17510, 17
  %17512 = load i64, i64* %PC.i1126
  %17513 = add i64 %17512, 5
  store i64 %17513, i64* %PC.i1126
  %17514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17511, i64* %17514, align 8
  store %struct.Memory* %loadMem_40caf1, %struct.Memory** %MEMORY
  br label %block_.L_40cb02

block_.L_40caf6:                                  ; preds = %block_40cabb
  %loadMem_40caf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17516 = getelementptr inbounds %struct.GPR, %struct.GPR* %17515, i32 0, i32 33
  %17517 = getelementptr inbounds %struct.Reg, %struct.Reg* %17516, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %17517 to i64*
  %17518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17519 = getelementptr inbounds %struct.GPR, %struct.GPR* %17518, i32 0, i32 1
  %17520 = getelementptr inbounds %struct.Reg, %struct.Reg* %17519, i32 0, i32 0
  %RAX.i1124 = bitcast %union.anon* %17520 to i64*
  %17521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17522 = getelementptr inbounds %struct.GPR, %struct.GPR* %17521, i32 0, i32 15
  %17523 = getelementptr inbounds %struct.Reg, %struct.Reg* %17522, i32 0, i32 0
  %RBP.i1125 = bitcast %union.anon* %17523 to i64*
  %17524 = load i64, i64* %RBP.i1125
  %17525 = sub i64 %17524, 264
  %17526 = load i64, i64* %PC.i1123
  %17527 = add i64 %17526, 6
  store i64 %17527, i64* %PC.i1123
  %17528 = inttoptr i64 %17525 to i32*
  %17529 = load i32, i32* %17528
  %17530 = zext i32 %17529 to i64
  store i64 %17530, i64* %RAX.i1124, align 8
  store %struct.Memory* %loadMem_40caf6, %struct.Memory** %MEMORY
  %loadMem_40cafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17532 = getelementptr inbounds %struct.GPR, %struct.GPR* %17531, i32 0, i32 33
  %17533 = getelementptr inbounds %struct.Reg, %struct.Reg* %17532, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %17533 to i64*
  %17534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17535 = getelementptr inbounds %struct.GPR, %struct.GPR* %17534, i32 0, i32 1
  %17536 = getelementptr inbounds %struct.Reg, %struct.Reg* %17535, i32 0, i32 0
  %EAX.i1121 = bitcast %union.anon* %17536 to i32*
  %17537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17538 = getelementptr inbounds %struct.GPR, %struct.GPR* %17537, i32 0, i32 15
  %17539 = getelementptr inbounds %struct.Reg, %struct.Reg* %17538, i32 0, i32 0
  %RBP.i1122 = bitcast %union.anon* %17539 to i64*
  %17540 = load i64, i64* %RBP.i1122
  %17541 = sub i64 %17540, 368
  %17542 = load i32, i32* %EAX.i1121
  %17543 = zext i32 %17542 to i64
  %17544 = load i64, i64* %PC.i1120
  %17545 = add i64 %17544, 6
  store i64 %17545, i64* %PC.i1120
  %17546 = inttoptr i64 %17541 to i32*
  store i32 %17542, i32* %17546
  store %struct.Memory* %loadMem_40cafc, %struct.Memory** %MEMORY
  br label %block_.L_40cb02

block_.L_40cb02:                                  ; preds = %block_.L_40caf6, %block_40cae5
  %loadMem_40cb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17548 = getelementptr inbounds %struct.GPR, %struct.GPR* %17547, i32 0, i32 33
  %17549 = getelementptr inbounds %struct.Reg, %struct.Reg* %17548, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %17549 to i64*
  %17550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17551 = getelementptr inbounds %struct.GPR, %struct.GPR* %17550, i32 0, i32 1
  %17552 = getelementptr inbounds %struct.Reg, %struct.Reg* %17551, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %17552 to i64*
  %17553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17554 = getelementptr inbounds %struct.GPR, %struct.GPR* %17553, i32 0, i32 15
  %17555 = getelementptr inbounds %struct.Reg, %struct.Reg* %17554, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %17555 to i64*
  %17556 = load i64, i64* %RBP.i1119
  %17557 = sub i64 %17556, 368
  %17558 = load i64, i64* %PC.i1117
  %17559 = add i64 %17558, 6
  store i64 %17559, i64* %PC.i1117
  %17560 = inttoptr i64 %17557 to i32*
  %17561 = load i32, i32* %17560
  %17562 = zext i32 %17561 to i64
  store i64 %17562, i64* %RAX.i1118, align 8
  store %struct.Memory* %loadMem_40cb02, %struct.Memory** %MEMORY
  %loadMem_40cb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17564 = getelementptr inbounds %struct.GPR, %struct.GPR* %17563, i32 0, i32 33
  %17565 = getelementptr inbounds %struct.Reg, %struct.Reg* %17564, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %17565 to i64*
  %17566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17567 = getelementptr inbounds %struct.GPR, %struct.GPR* %17566, i32 0, i32 1
  %17568 = getelementptr inbounds %struct.Reg, %struct.Reg* %17567, i32 0, i32 0
  %EAX.i1115 = bitcast %union.anon* %17568 to i32*
  %17569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17570 = getelementptr inbounds %struct.GPR, %struct.GPR* %17569, i32 0, i32 15
  %17571 = getelementptr inbounds %struct.Reg, %struct.Reg* %17570, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %17571 to i64*
  %17572 = load i64, i64* %RBP.i1116
  %17573 = sub i64 %17572, 92
  %17574 = load i32, i32* %EAX.i1115
  %17575 = zext i32 %17574 to i64
  %17576 = load i64, i64* %PC.i1114
  %17577 = add i64 %17576, 3
  store i64 %17577, i64* %PC.i1114
  %17578 = inttoptr i64 %17573 to i32*
  store i32 %17574, i32* %17578
  store %struct.Memory* %loadMem_40cb08, %struct.Memory** %MEMORY
  %loadMem_40cb0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17580 = getelementptr inbounds %struct.GPR, %struct.GPR* %17579, i32 0, i32 33
  %17581 = getelementptr inbounds %struct.Reg, %struct.Reg* %17580, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %17581 to i64*
  %17582 = load i64, i64* %PC.i1113
  %17583 = add i64 %17582, 59
  %17584 = load i64, i64* %PC.i1113
  %17585 = add i64 %17584, 5
  store i64 %17585, i64* %PC.i1113
  %17586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17583, i64* %17586, align 8
  store %struct.Memory* %loadMem_40cb0b, %struct.Memory** %MEMORY
  br label %block_.L_40cb46

block_.L_40cb10:                                  ; preds = %block_40cab5, %routine_ucomisd_MINUS0x118__rbp____xmm0.exit
  %loadMem_40cb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17588 = getelementptr inbounds %struct.GPR, %struct.GPR* %17587, i32 0, i32 33
  %17589 = getelementptr inbounds %struct.Reg, %struct.Reg* %17588, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %17589 to i64*
  %17590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17591 = getelementptr inbounds %struct.GPR, %struct.GPR* %17590, i32 0, i32 15
  %17592 = getelementptr inbounds %struct.Reg, %struct.Reg* %17591, i32 0, i32 0
  %RBP.i1112 = bitcast %union.anon* %17592 to i64*
  %17593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17594 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17593, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %17594 to %"class.std::bitset"*
  %17595 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %17596 = load i64, i64* %RBP.i1112
  %17597 = sub i64 %17596, 272
  %17598 = load i64, i64* %PC.i1111
  %17599 = add i64 %17598, 8
  store i64 %17599, i64* %PC.i1111
  %17600 = inttoptr i64 %17597 to double*
  %17601 = load double, double* %17600
  %17602 = bitcast i8* %17595 to double*
  store double %17601, double* %17602, align 1
  %17603 = getelementptr inbounds i8, i8* %17595, i64 8
  %17604 = bitcast i8* %17603 to double*
  store double 0.000000e+00, double* %17604, align 1
  store %struct.Memory* %loadMem_40cb10, %struct.Memory** %MEMORY
  %loadMem_40cb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17606 = getelementptr inbounds %struct.GPR, %struct.GPR* %17605, i32 0, i32 33
  %17607 = getelementptr inbounds %struct.Reg, %struct.Reg* %17606, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %17607 to i64*
  %17608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17609 = getelementptr inbounds %struct.GPR, %struct.GPR* %17608, i32 0, i32 15
  %17610 = getelementptr inbounds %struct.Reg, %struct.Reg* %17609, i32 0, i32 0
  %RBP.i1110 = bitcast %union.anon* %17610 to i64*
  %17611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17612 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17611, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %17612 to %"class.std::bitset"*
  %17613 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %17614 = load i64, i64* %RBP.i1110
  %17615 = sub i64 %17614, 280
  %17616 = load i64, i64* %PC.i1109
  %17617 = add i64 %17616, 8
  store i64 %17617, i64* %PC.i1109
  %17618 = inttoptr i64 %17615 to double*
  %17619 = load double, double* %17618
  %17620 = bitcast i8* %17613 to double*
  store double %17619, double* %17620, align 1
  %17621 = getelementptr inbounds i8, i8* %17613, i64 8
  %17622 = bitcast i8* %17621 to double*
  store double 0.000000e+00, double* %17622, align 1
  store %struct.Memory* %loadMem_40cb18, %struct.Memory** %MEMORY
  %loadMem_40cb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17624 = getelementptr inbounds %struct.GPR, %struct.GPR* %17623, i32 0, i32 33
  %17625 = getelementptr inbounds %struct.Reg, %struct.Reg* %17624, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %17625 to i64*
  %17626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17627 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17626, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %17627 to %union.vec128_t*
  %17628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %17629 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17628, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %17629 to %union.vec128_t*
  %17630 = bitcast %union.vec128_t* %XMM1.i to i8*
  %17631 = bitcast %union.vec128_t* %XMM0.i to i8*
  %17632 = load i64, i64* %PC.i1106
  %17633 = add i64 %17632, 4
  store i64 %17633, i64* %PC.i1106
  %17634 = bitcast i8* %17630 to double*
  %17635 = load double, double* %17634, align 1
  %17636 = bitcast i8* %17631 to double*
  %17637 = load double, double* %17636, align 1
  %17638 = fcmp uno double %17635, %17637
  br i1 %17638, label %17639, label %17651

; <label>:17639:                                  ; preds = %block_.L_40cb10
  %17640 = fadd double %17635, %17637
  %17641 = bitcast double %17640 to i64
  %17642 = and i64 %17641, 9221120237041090560
  %17643 = icmp eq i64 %17642, 9218868437227405312
  %17644 = and i64 %17641, 2251799813685247
  %17645 = icmp ne i64 %17644, 0
  %17646 = and i1 %17643, %17645
  br i1 %17646, label %17647, label %17657

; <label>:17647:                                  ; preds = %17639
  %17648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17649 = load i64, i64* %17648, align 8
  %17650 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %17649, %struct.Memory* %loadMem_40cb20)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:17651:                                  ; preds = %block_.L_40cb10
  %17652 = fcmp ogt double %17635, %17637
  br i1 %17652, label %17657, label %17653

; <label>:17653:                                  ; preds = %17651
  %17654 = fcmp olt double %17635, %17637
  br i1 %17654, label %17657, label %17655

; <label>:17655:                                  ; preds = %17653
  %17656 = fcmp oeq double %17635, %17637
  br i1 %17656, label %17657, label %17664

; <label>:17657:                                  ; preds = %17655, %17653, %17651, %17639
  %17658 = phi i8 [ 0, %17651 ], [ 0, %17653 ], [ 1, %17655 ], [ 1, %17639 ]
  %17659 = phi i8 [ 0, %17651 ], [ 0, %17653 ], [ 0, %17655 ], [ 1, %17639 ]
  %17660 = phi i8 [ 0, %17651 ], [ 1, %17653 ], [ 0, %17655 ], [ 1, %17639 ]
  %17661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17658, i8* %17661, align 1
  %17662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17659, i8* %17662, align 1
  %17663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17660, i8* %17663, align 1
  br label %17664

; <label>:17664:                                  ; preds = %17657, %17655
  %17665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17665, align 1
  %17666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %17666, align 1
  %17667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17667, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %17647, %17664
  %17668 = phi %struct.Memory* [ %17650, %17647 ], [ %loadMem_40cb20, %17664 ]
  store %struct.Memory* %17668, %struct.Memory** %MEMORY
  %loadMem_40cb24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17670 = getelementptr inbounds %struct.GPR, %struct.GPR* %17669, i32 0, i32 33
  %17671 = getelementptr inbounds %struct.Reg, %struct.Reg* %17670, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %17671 to i64*
  %17672 = load i64, i64* %PC.i1105
  %17673 = add i64 %17672, 20
  %17674 = load i64, i64* %PC.i1105
  %17675 = add i64 %17674, 6
  %17676 = load i64, i64* %PC.i1105
  %17677 = add i64 %17676, 6
  store i64 %17677, i64* %PC.i1105
  %17678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17679 = load i8, i8* %17678, align 1
  %17680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17681 = load i8, i8* %17680, align 1
  %17682 = or i8 %17681, %17679
  %17683 = icmp ne i8 %17682, 0
  %17684 = zext i1 %17683 to i8
  store i8 %17684, i8* %BRANCH_TAKEN, align 1
  %17685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17686 = select i1 %17683, i64 %17673, i64 %17675
  store i64 %17686, i64* %17685, align 8
  store %struct.Memory* %loadMem_40cb24, %struct.Memory** %MEMORY
  %loadBr_40cb24 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb24 = icmp eq i8 %loadBr_40cb24, 1
  br i1 %cmpBr_40cb24, label %block_.L_40cb38, label %block_40cb2a

block_40cb2a:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_40cb2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17688 = getelementptr inbounds %struct.GPR, %struct.GPR* %17687, i32 0, i32 33
  %17689 = getelementptr inbounds %struct.Reg, %struct.Reg* %17688, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %17689 to i64*
  %17690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17691 = getelementptr inbounds %struct.GPR, %struct.GPR* %17690, i32 0, i32 1
  %17692 = getelementptr inbounds %struct.Reg, %struct.Reg* %17691, i32 0, i32 0
  %RAX.i1103 = bitcast %union.anon* %17692 to i64*
  %17693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17694 = getelementptr inbounds %struct.GPR, %struct.GPR* %17693, i32 0, i32 15
  %17695 = getelementptr inbounds %struct.Reg, %struct.Reg* %17694, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %17695 to i64*
  %17696 = load i64, i64* %RBP.i1104
  %17697 = sub i64 %17696, 260
  %17698 = load i64, i64* %PC.i1102
  %17699 = add i64 %17698, 6
  store i64 %17699, i64* %PC.i1102
  %17700 = inttoptr i64 %17697 to i32*
  %17701 = load i32, i32* %17700
  %17702 = zext i32 %17701 to i64
  store i64 %17702, i64* %RAX.i1103, align 8
  store %struct.Memory* %loadMem_40cb2a, %struct.Memory** %MEMORY
  %loadMem_40cb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17704 = getelementptr inbounds %struct.GPR, %struct.GPR* %17703, i32 0, i32 33
  %17705 = getelementptr inbounds %struct.Reg, %struct.Reg* %17704, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %17705 to i64*
  %17706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17707 = getelementptr inbounds %struct.GPR, %struct.GPR* %17706, i32 0, i32 1
  %17708 = getelementptr inbounds %struct.Reg, %struct.Reg* %17707, i32 0, i32 0
  %EAX.i1100 = bitcast %union.anon* %17708 to i32*
  %17709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17710 = getelementptr inbounds %struct.GPR, %struct.GPR* %17709, i32 0, i32 15
  %17711 = getelementptr inbounds %struct.Reg, %struct.Reg* %17710, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %17711 to i64*
  %17712 = load i64, i64* %RBP.i1101
  %17713 = sub i64 %17712, 92
  %17714 = load i32, i32* %EAX.i1100
  %17715 = zext i32 %17714 to i64
  %17716 = load i64, i64* %PC.i1099
  %17717 = add i64 %17716, 3
  store i64 %17717, i64* %PC.i1099
  %17718 = inttoptr i64 %17713 to i32*
  store i32 %17714, i32* %17718
  store %struct.Memory* %loadMem_40cb30, %struct.Memory** %MEMORY
  %loadMem_40cb33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17720 = getelementptr inbounds %struct.GPR, %struct.GPR* %17719, i32 0, i32 33
  %17721 = getelementptr inbounds %struct.Reg, %struct.Reg* %17720, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %17721 to i64*
  %17722 = load i64, i64* %PC.i1098
  %17723 = add i64 %17722, 14
  %17724 = load i64, i64* %PC.i1098
  %17725 = add i64 %17724, 5
  store i64 %17725, i64* %PC.i1098
  %17726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17723, i64* %17726, align 8
  store %struct.Memory* %loadMem_40cb33, %struct.Memory** %MEMORY
  br label %block_.L_40cb41

block_.L_40cb38:                                  ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_40cb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17728 = getelementptr inbounds %struct.GPR, %struct.GPR* %17727, i32 0, i32 33
  %17729 = getelementptr inbounds %struct.Reg, %struct.Reg* %17728, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %17729 to i64*
  %17730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17731 = getelementptr inbounds %struct.GPR, %struct.GPR* %17730, i32 0, i32 1
  %17732 = getelementptr inbounds %struct.Reg, %struct.Reg* %17731, i32 0, i32 0
  %RAX.i1096 = bitcast %union.anon* %17732 to i64*
  %17733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17734 = getelementptr inbounds %struct.GPR, %struct.GPR* %17733, i32 0, i32 15
  %17735 = getelementptr inbounds %struct.Reg, %struct.Reg* %17734, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %17735 to i64*
  %17736 = load i64, i64* %RBP.i1097
  %17737 = sub i64 %17736, 264
  %17738 = load i64, i64* %PC.i1095
  %17739 = add i64 %17738, 6
  store i64 %17739, i64* %PC.i1095
  %17740 = inttoptr i64 %17737 to i32*
  %17741 = load i32, i32* %17740
  %17742 = zext i32 %17741 to i64
  store i64 %17742, i64* %RAX.i1096, align 8
  store %struct.Memory* %loadMem_40cb38, %struct.Memory** %MEMORY
  %loadMem_40cb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17744 = getelementptr inbounds %struct.GPR, %struct.GPR* %17743, i32 0, i32 33
  %17745 = getelementptr inbounds %struct.Reg, %struct.Reg* %17744, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %17745 to i64*
  %17746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17747 = getelementptr inbounds %struct.GPR, %struct.GPR* %17746, i32 0, i32 1
  %17748 = getelementptr inbounds %struct.Reg, %struct.Reg* %17747, i32 0, i32 0
  %EAX.i1093 = bitcast %union.anon* %17748 to i32*
  %17749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17750 = getelementptr inbounds %struct.GPR, %struct.GPR* %17749, i32 0, i32 15
  %17751 = getelementptr inbounds %struct.Reg, %struct.Reg* %17750, i32 0, i32 0
  %RBP.i1094 = bitcast %union.anon* %17751 to i64*
  %17752 = load i64, i64* %RBP.i1094
  %17753 = sub i64 %17752, 92
  %17754 = load i32, i32* %EAX.i1093
  %17755 = zext i32 %17754 to i64
  %17756 = load i64, i64* %PC.i1092
  %17757 = add i64 %17756, 3
  store i64 %17757, i64* %PC.i1092
  %17758 = inttoptr i64 %17753 to i32*
  store i32 %17754, i32* %17758
  store %struct.Memory* %loadMem_40cb3e, %struct.Memory** %MEMORY
  br label %block_.L_40cb41

block_.L_40cb41:                                  ; preds = %block_.L_40cb38, %block_40cb2a
  %loadMem_40cb41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17760 = getelementptr inbounds %struct.GPR, %struct.GPR* %17759, i32 0, i32 33
  %17761 = getelementptr inbounds %struct.Reg, %struct.Reg* %17760, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %17761 to i64*
  %17762 = load i64, i64* %PC.i1091
  %17763 = add i64 %17762, 5
  %17764 = load i64, i64* %PC.i1091
  %17765 = add i64 %17764, 5
  store i64 %17765, i64* %PC.i1091
  %17766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17763, i64* %17766, align 8
  store %struct.Memory* %loadMem_40cb41, %struct.Memory** %MEMORY
  br label %block_.L_40cb46

block_.L_40cb46:                                  ; preds = %block_.L_40cb41, %block_.L_40cb02
  %loadMem_40cb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17768 = getelementptr inbounds %struct.GPR, %struct.GPR* %17767, i32 0, i32 33
  %17769 = getelementptr inbounds %struct.Reg, %struct.Reg* %17768, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %17769 to i64*
  %17770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17771 = getelementptr inbounds %struct.GPR, %struct.GPR* %17770, i32 0, i32 1
  %17772 = getelementptr inbounds %struct.Reg, %struct.Reg* %17771, i32 0, i32 0
  %RAX.i1089 = bitcast %union.anon* %17772 to i64*
  %17773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17774 = getelementptr inbounds %struct.GPR, %struct.GPR* %17773, i32 0, i32 15
  %17775 = getelementptr inbounds %struct.Reg, %struct.Reg* %17774, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %17775 to i64*
  %17776 = load i64, i64* %RBP.i1090
  %17777 = sub i64 %17776, 92
  %17778 = load i64, i64* %PC.i1088
  %17779 = add i64 %17778, 3
  store i64 %17779, i64* %PC.i1088
  %17780 = inttoptr i64 %17777 to i32*
  %17781 = load i32, i32* %17780
  %17782 = zext i32 %17781 to i64
  store i64 %17782, i64* %RAX.i1089, align 8
  store %struct.Memory* %loadMem_40cb46, %struct.Memory** %MEMORY
  %loadMem_40cb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17784 = getelementptr inbounds %struct.GPR, %struct.GPR* %17783, i32 0, i32 33
  %17785 = getelementptr inbounds %struct.Reg, %struct.Reg* %17784, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %17785 to i64*
  %17786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17787 = getelementptr inbounds %struct.GPR, %struct.GPR* %17786, i32 0, i32 1
  %17788 = getelementptr inbounds %struct.Reg, %struct.Reg* %17787, i32 0, i32 0
  %EAX.i1086 = bitcast %union.anon* %17788 to i32*
  %17789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17790 = getelementptr inbounds %struct.GPR, %struct.GPR* %17789, i32 0, i32 15
  %17791 = getelementptr inbounds %struct.Reg, %struct.Reg* %17790, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %17791 to i64*
  %17792 = load i32, i32* %EAX.i1086
  %17793 = zext i32 %17792 to i64
  %17794 = load i64, i64* %RBP.i1087
  %17795 = sub i64 %17794, 260
  %17796 = load i64, i64* %PC.i1085
  %17797 = add i64 %17796, 6
  store i64 %17797, i64* %PC.i1085
  %17798 = inttoptr i64 %17795 to i32*
  %17799 = load i32, i32* %17798
  %17800 = sub i32 %17792, %17799
  %17801 = icmp ult i32 %17792, %17799
  %17802 = zext i1 %17801 to i8
  %17803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17802, i8* %17803, align 1
  %17804 = and i32 %17800, 255
  %17805 = call i32 @llvm.ctpop.i32(i32 %17804)
  %17806 = trunc i32 %17805 to i8
  %17807 = and i8 %17806, 1
  %17808 = xor i8 %17807, 1
  %17809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17808, i8* %17809, align 1
  %17810 = xor i32 %17799, %17792
  %17811 = xor i32 %17810, %17800
  %17812 = lshr i32 %17811, 4
  %17813 = trunc i32 %17812 to i8
  %17814 = and i8 %17813, 1
  %17815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17814, i8* %17815, align 1
  %17816 = icmp eq i32 %17800, 0
  %17817 = zext i1 %17816 to i8
  %17818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17817, i8* %17818, align 1
  %17819 = lshr i32 %17800, 31
  %17820 = trunc i32 %17819 to i8
  %17821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17820, i8* %17821, align 1
  %17822 = lshr i32 %17792, 31
  %17823 = lshr i32 %17799, 31
  %17824 = xor i32 %17823, %17822
  %17825 = xor i32 %17819, %17822
  %17826 = add i32 %17825, %17824
  %17827 = icmp eq i32 %17826, 2
  %17828 = zext i1 %17827 to i8
  %17829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17828, i8* %17829, align 1
  store %struct.Memory* %loadMem_40cb49, %struct.Memory** %MEMORY
  %loadMem_40cb4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17831 = getelementptr inbounds %struct.GPR, %struct.GPR* %17830, i32 0, i32 33
  %17832 = getelementptr inbounds %struct.Reg, %struct.Reg* %17831, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %17832 to i64*
  %17833 = load i64, i64* %PC.i1084
  %17834 = add i64 %17833, 23
  %17835 = load i64, i64* %PC.i1084
  %17836 = add i64 %17835, 6
  %17837 = load i64, i64* %PC.i1084
  %17838 = add i64 %17837, 6
  store i64 %17838, i64* %PC.i1084
  %17839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17840 = load i8, i8* %17839, align 1
  %17841 = icmp eq i8 %17840, 0
  %17842 = zext i1 %17841 to i8
  store i8 %17842, i8* %BRANCH_TAKEN, align 1
  %17843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17844 = select i1 %17841, i64 %17834, i64 %17836
  store i64 %17844, i64* %17843, align 8
  store %struct.Memory* %loadMem_40cb4f, %struct.Memory** %MEMORY
  %loadBr_40cb4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb4f = icmp eq i8 %loadBr_40cb4f, 1
  br i1 %cmpBr_40cb4f, label %block_.L_40cb66, label %block_40cb55

block_40cb55:                                     ; preds = %block_.L_40cb46
  %loadMem_40cb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17846 = getelementptr inbounds %struct.GPR, %struct.GPR* %17845, i32 0, i32 33
  %17847 = getelementptr inbounds %struct.Reg, %struct.Reg* %17846, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %17847 to i64*
  %17848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17849 = getelementptr inbounds %struct.GPR, %struct.GPR* %17848, i32 0, i32 1
  %17850 = getelementptr inbounds %struct.Reg, %struct.Reg* %17849, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %17850 to i64*
  %17851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17852 = getelementptr inbounds %struct.GPR, %struct.GPR* %17851, i32 0, i32 15
  %17853 = getelementptr inbounds %struct.Reg, %struct.Reg* %17852, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %17853 to i64*
  %17854 = load i64, i64* %RBP.i1083
  %17855 = sub i64 %17854, 252
  %17856 = load i64, i64* %PC.i1081
  %17857 = add i64 %17856, 6
  store i64 %17857, i64* %PC.i1081
  %17858 = inttoptr i64 %17855 to i32*
  %17859 = load i32, i32* %17858
  %17860 = zext i32 %17859 to i64
  store i64 %17860, i64* %RAX.i1082, align 8
  store %struct.Memory* %loadMem_40cb55, %struct.Memory** %MEMORY
  %loadMem_40cb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17862 = getelementptr inbounds %struct.GPR, %struct.GPR* %17861, i32 0, i32 33
  %17863 = getelementptr inbounds %struct.Reg, %struct.Reg* %17862, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %17863 to i64*
  %17864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17865 = getelementptr inbounds %struct.GPR, %struct.GPR* %17864, i32 0, i32 1
  %17866 = getelementptr inbounds %struct.Reg, %struct.Reg* %17865, i32 0, i32 0
  %EAX.i1079 = bitcast %union.anon* %17866 to i32*
  %17867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17868 = getelementptr inbounds %struct.GPR, %struct.GPR* %17867, i32 0, i32 15
  %17869 = getelementptr inbounds %struct.Reg, %struct.Reg* %17868, i32 0, i32 0
  %RBP.i1080 = bitcast %union.anon* %17869 to i64*
  %17870 = load i64, i64* %RBP.i1080
  %17871 = sub i64 %17870, 372
  %17872 = load i32, i32* %EAX.i1079
  %17873 = zext i32 %17872 to i64
  %17874 = load i64, i64* %PC.i1078
  %17875 = add i64 %17874, 6
  store i64 %17875, i64* %PC.i1078
  %17876 = inttoptr i64 %17871 to i32*
  store i32 %17872, i32* %17876
  store %struct.Memory* %loadMem_40cb5b, %struct.Memory** %MEMORY
  %loadMem_40cb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17878 = getelementptr inbounds %struct.GPR, %struct.GPR* %17877, i32 0, i32 33
  %17879 = getelementptr inbounds %struct.Reg, %struct.Reg* %17878, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %17879 to i64*
  %17880 = load i64, i64* %PC.i1077
  %17881 = add i64 %17880, 17
  %17882 = load i64, i64* %PC.i1077
  %17883 = add i64 %17882, 5
  store i64 %17883, i64* %PC.i1077
  %17884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17881, i64* %17884, align 8
  store %struct.Memory* %loadMem_40cb61, %struct.Memory** %MEMORY
  br label %block_.L_40cb72

block_.L_40cb66:                                  ; preds = %block_.L_40cb46
  %loadMem_40cb66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17886 = getelementptr inbounds %struct.GPR, %struct.GPR* %17885, i32 0, i32 33
  %17887 = getelementptr inbounds %struct.Reg, %struct.Reg* %17886, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %17887 to i64*
  %17888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17889 = getelementptr inbounds %struct.GPR, %struct.GPR* %17888, i32 0, i32 1
  %17890 = getelementptr inbounds %struct.Reg, %struct.Reg* %17889, i32 0, i32 0
  %RAX.i1075 = bitcast %union.anon* %17890 to i64*
  %17891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17892 = getelementptr inbounds %struct.GPR, %struct.GPR* %17891, i32 0, i32 15
  %17893 = getelementptr inbounds %struct.Reg, %struct.Reg* %17892, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %17893 to i64*
  %17894 = load i64, i64* %RBP.i1076
  %17895 = sub i64 %17894, 256
  %17896 = load i64, i64* %PC.i1074
  %17897 = add i64 %17896, 6
  store i64 %17897, i64* %PC.i1074
  %17898 = inttoptr i64 %17895 to i32*
  %17899 = load i32, i32* %17898
  %17900 = zext i32 %17899 to i64
  store i64 %17900, i64* %RAX.i1075, align 8
  store %struct.Memory* %loadMem_40cb66, %struct.Memory** %MEMORY
  %loadMem_40cb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17902 = getelementptr inbounds %struct.GPR, %struct.GPR* %17901, i32 0, i32 33
  %17903 = getelementptr inbounds %struct.Reg, %struct.Reg* %17902, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %17903 to i64*
  %17904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17905 = getelementptr inbounds %struct.GPR, %struct.GPR* %17904, i32 0, i32 1
  %17906 = getelementptr inbounds %struct.Reg, %struct.Reg* %17905, i32 0, i32 0
  %EAX.i1072 = bitcast %union.anon* %17906 to i32*
  %17907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17908 = getelementptr inbounds %struct.GPR, %struct.GPR* %17907, i32 0, i32 15
  %17909 = getelementptr inbounds %struct.Reg, %struct.Reg* %17908, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %17909 to i64*
  %17910 = load i64, i64* %RBP.i1073
  %17911 = sub i64 %17910, 372
  %17912 = load i32, i32* %EAX.i1072
  %17913 = zext i32 %17912 to i64
  %17914 = load i64, i64* %PC.i1071
  %17915 = add i64 %17914, 6
  store i64 %17915, i64* %PC.i1071
  %17916 = inttoptr i64 %17911 to i32*
  store i32 %17912, i32* %17916
  store %struct.Memory* %loadMem_40cb6c, %struct.Memory** %MEMORY
  br label %block_.L_40cb72

block_.L_40cb72:                                  ; preds = %block_.L_40cb66, %block_40cb55
  %loadMem_40cb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17918 = getelementptr inbounds %struct.GPR, %struct.GPR* %17917, i32 0, i32 33
  %17919 = getelementptr inbounds %struct.Reg, %struct.Reg* %17918, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %17919 to i64*
  %17920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17921 = getelementptr inbounds %struct.GPR, %struct.GPR* %17920, i32 0, i32 1
  %17922 = getelementptr inbounds %struct.Reg, %struct.Reg* %17921, i32 0, i32 0
  %RAX.i1069 = bitcast %union.anon* %17922 to i64*
  %17923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17924 = getelementptr inbounds %struct.GPR, %struct.GPR* %17923, i32 0, i32 15
  %17925 = getelementptr inbounds %struct.Reg, %struct.Reg* %17924, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %17925 to i64*
  %17926 = load i64, i64* %RBP.i1070
  %17927 = sub i64 %17926, 372
  %17928 = load i64, i64* %PC.i1068
  %17929 = add i64 %17928, 6
  store i64 %17929, i64* %PC.i1068
  %17930 = inttoptr i64 %17927 to i32*
  %17931 = load i32, i32* %17930
  %17932 = zext i32 %17931 to i64
  store i64 %17932, i64* %RAX.i1069, align 8
  store %struct.Memory* %loadMem_40cb72, %struct.Memory** %MEMORY
  %loadMem_40cb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17934 = getelementptr inbounds %struct.GPR, %struct.GPR* %17933, i32 0, i32 33
  %17935 = getelementptr inbounds %struct.Reg, %struct.Reg* %17934, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %17935 to i64*
  %17936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17937 = getelementptr inbounds %struct.GPR, %struct.GPR* %17936, i32 0, i32 1
  %17938 = getelementptr inbounds %struct.Reg, %struct.Reg* %17937, i32 0, i32 0
  %EAX.i1066 = bitcast %union.anon* %17938 to i32*
  %17939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17940 = getelementptr inbounds %struct.GPR, %struct.GPR* %17939, i32 0, i32 15
  %17941 = getelementptr inbounds %struct.Reg, %struct.Reg* %17940, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %17941 to i64*
  %17942 = load i64, i64* %RBP.i1067
  %17943 = sub i64 %17942, 180
  %17944 = load i32, i32* %EAX.i1066
  %17945 = zext i32 %17944 to i64
  %17946 = load i64, i64* %PC.i1065
  %17947 = add i64 %17946, 6
  store i64 %17947, i64* %PC.i1065
  %17948 = inttoptr i64 %17943 to i32*
  store i32 %17944, i32* %17948
  store %struct.Memory* %loadMem_40cb78, %struct.Memory** %MEMORY
  %loadMem_40cb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17950 = getelementptr inbounds %struct.GPR, %struct.GPR* %17949, i32 0, i32 33
  %17951 = getelementptr inbounds %struct.Reg, %struct.Reg* %17950, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %17951 to i64*
  %17952 = load i64, i64* %PC.i1064
  %17953 = add i64 %17952, 159
  %17954 = load i64, i64* %PC.i1064
  %17955 = add i64 %17954, 5
  store i64 %17955, i64* %PC.i1064
  %17956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17953, i64* %17956, align 8
  store %struct.Memory* %loadMem_40cb7e, %struct.Memory** %MEMORY
  br label %block_.L_40cc1d

block_.L_40cb83:                                  ; preds = %block_40c865, %block_40c858, %routine_sarl__cl___eax.exit1486
  %loadMem_40cb83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17958 = getelementptr inbounds %struct.GPR, %struct.GPR* %17957, i32 0, i32 33
  %17959 = getelementptr inbounds %struct.Reg, %struct.Reg* %17958, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %17959 to i64*
  %17960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17961 = getelementptr inbounds %struct.GPR, %struct.GPR* %17960, i32 0, i32 1
  %17962 = getelementptr inbounds %struct.Reg, %struct.Reg* %17961, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %17962 to i64*
  %17963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17964 = getelementptr inbounds %struct.GPR, %struct.GPR* %17963, i32 0, i32 15
  %17965 = getelementptr inbounds %struct.Reg, %struct.Reg* %17964, i32 0, i32 0
  %RBP.i1063 = bitcast %union.anon* %17965 to i64*
  %17966 = load i64, i64* %RBP.i1063
  %17967 = sub i64 %17966, 260
  %17968 = load i64, i64* %PC.i1061
  %17969 = add i64 %17968, 6
  store i64 %17969, i64* %PC.i1061
  %17970 = inttoptr i64 %17967 to i32*
  %17971 = load i32, i32* %17970
  %17972 = zext i32 %17971 to i64
  store i64 %17972, i64* %RAX.i1062, align 8
  store %struct.Memory* %loadMem_40cb83, %struct.Memory** %MEMORY
  %loadMem_40cb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17974 = getelementptr inbounds %struct.GPR, %struct.GPR* %17973, i32 0, i32 33
  %17975 = getelementptr inbounds %struct.Reg, %struct.Reg* %17974, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %17975 to i64*
  %17976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17977 = getelementptr inbounds %struct.GPR, %struct.GPR* %17976, i32 0, i32 1
  %17978 = getelementptr inbounds %struct.Reg, %struct.Reg* %17977, i32 0, i32 0
  %EAX.i1059 = bitcast %union.anon* %17978 to i32*
  %17979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17980 = getelementptr inbounds %struct.GPR, %struct.GPR* %17979, i32 0, i32 15
  %17981 = getelementptr inbounds %struct.Reg, %struct.Reg* %17980, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %17981 to i64*
  %17982 = load i32, i32* %EAX.i1059
  %17983 = zext i32 %17982 to i64
  %17984 = load i64, i64* %RBP.i1060
  %17985 = sub i64 %17984, 264
  %17986 = load i64, i64* %PC.i1058
  %17987 = add i64 %17986, 6
  store i64 %17987, i64* %PC.i1058
  %17988 = inttoptr i64 %17985 to i32*
  %17989 = load i32, i32* %17988
  %17990 = sub i32 %17982, %17989
  %17991 = icmp ult i32 %17982, %17989
  %17992 = zext i1 %17991 to i8
  %17993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17992, i8* %17993, align 1
  %17994 = and i32 %17990, 255
  %17995 = call i32 @llvm.ctpop.i32(i32 %17994)
  %17996 = trunc i32 %17995 to i8
  %17997 = and i8 %17996, 1
  %17998 = xor i8 %17997, 1
  %17999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17998, i8* %17999, align 1
  %18000 = xor i32 %17989, %17982
  %18001 = xor i32 %18000, %17990
  %18002 = lshr i32 %18001, 4
  %18003 = trunc i32 %18002 to i8
  %18004 = and i8 %18003, 1
  %18005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18004, i8* %18005, align 1
  %18006 = icmp eq i32 %17990, 0
  %18007 = zext i1 %18006 to i8
  %18008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18007, i8* %18008, align 1
  %18009 = lshr i32 %17990, 31
  %18010 = trunc i32 %18009 to i8
  %18011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18010, i8* %18011, align 1
  %18012 = lshr i32 %17982, 31
  %18013 = lshr i32 %17989, 31
  %18014 = xor i32 %18013, %18012
  %18015 = xor i32 %18009, %18012
  %18016 = add i32 %18015, %18014
  %18017 = icmp eq i32 %18016, 2
  %18018 = zext i1 %18017 to i8
  %18019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18018, i8* %18019, align 1
  store %struct.Memory* %loadMem_40cb89, %struct.Memory** %MEMORY
  %loadMem_40cb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18021 = getelementptr inbounds %struct.GPR, %struct.GPR* %18020, i32 0, i32 33
  %18022 = getelementptr inbounds %struct.Reg, %struct.Reg* %18021, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %18022 to i64*
  %18023 = load i64, i64* %PC.i1057
  %18024 = add i64 %18023, 32
  %18025 = load i64, i64* %PC.i1057
  %18026 = add i64 %18025, 6
  %18027 = load i64, i64* %PC.i1057
  %18028 = add i64 %18027, 6
  store i64 %18028, i64* %PC.i1057
  %18029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18030 = load i8, i8* %18029, align 1
  %18031 = icmp eq i8 %18030, 0
  %18032 = zext i1 %18031 to i8
  store i8 %18032, i8* %BRANCH_TAKEN, align 1
  %18033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18034 = select i1 %18031, i64 %18024, i64 %18026
  store i64 %18034, i64* %18033, align 8
  store %struct.Memory* %loadMem_40cb8f, %struct.Memory** %MEMORY
  %loadBr_40cb8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb8f = icmp eq i8 %loadBr_40cb8f, 1
  br i1 %cmpBr_40cb8f, label %block_.L_40cbaf, label %block_40cb95

block_40cb95:                                     ; preds = %block_.L_40cb83
  %loadMem_40cb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18036 = getelementptr inbounds %struct.GPR, %struct.GPR* %18035, i32 0, i32 33
  %18037 = getelementptr inbounds %struct.Reg, %struct.Reg* %18036, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %18037 to i64*
  %18038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18039 = getelementptr inbounds %struct.GPR, %struct.GPR* %18038, i32 0, i32 1
  %18040 = getelementptr inbounds %struct.Reg, %struct.Reg* %18039, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %18040 to i64*
  %18041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18042 = getelementptr inbounds %struct.GPR, %struct.GPR* %18041, i32 0, i32 15
  %18043 = getelementptr inbounds %struct.Reg, %struct.Reg* %18042, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %18043 to i64*
  %18044 = load i64, i64* %RBP.i1056
  %18045 = sub i64 %18044, 260
  %18046 = load i64, i64* %PC.i1054
  %18047 = add i64 %18046, 6
  store i64 %18047, i64* %PC.i1054
  %18048 = inttoptr i64 %18045 to i32*
  %18049 = load i32, i32* %18048
  %18050 = zext i32 %18049 to i64
  store i64 %18050, i64* %RAX.i1055, align 8
  store %struct.Memory* %loadMem_40cb95, %struct.Memory** %MEMORY
  %loadMem_40cb9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18052 = getelementptr inbounds %struct.GPR, %struct.GPR* %18051, i32 0, i32 33
  %18053 = getelementptr inbounds %struct.Reg, %struct.Reg* %18052, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %18053 to i64*
  %18054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18055 = getelementptr inbounds %struct.GPR, %struct.GPR* %18054, i32 0, i32 1
  %18056 = getelementptr inbounds %struct.Reg, %struct.Reg* %18055, i32 0, i32 0
  %EAX.i1052 = bitcast %union.anon* %18056 to i32*
  %18057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18058 = getelementptr inbounds %struct.GPR, %struct.GPR* %18057, i32 0, i32 15
  %18059 = getelementptr inbounds %struct.Reg, %struct.Reg* %18058, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %18059 to i64*
  %18060 = load i64, i64* %RBP.i1053
  %18061 = sub i64 %18060, 92
  %18062 = load i32, i32* %EAX.i1052
  %18063 = zext i32 %18062 to i64
  %18064 = load i64, i64* %PC.i1051
  %18065 = add i64 %18064, 3
  store i64 %18065, i64* %PC.i1051
  %18066 = inttoptr i64 %18061 to i32*
  store i32 %18062, i32* %18066
  store %struct.Memory* %loadMem_40cb9b, %struct.Memory** %MEMORY
  %loadMem_40cb9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18068 = getelementptr inbounds %struct.GPR, %struct.GPR* %18067, i32 0, i32 33
  %18069 = getelementptr inbounds %struct.Reg, %struct.Reg* %18068, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %18069 to i64*
  %18070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18071 = getelementptr inbounds %struct.GPR, %struct.GPR* %18070, i32 0, i32 1
  %18072 = getelementptr inbounds %struct.Reg, %struct.Reg* %18071, i32 0, i32 0
  %RAX.i1049 = bitcast %union.anon* %18072 to i64*
  %18073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18074 = getelementptr inbounds %struct.GPR, %struct.GPR* %18073, i32 0, i32 15
  %18075 = getelementptr inbounds %struct.Reg, %struct.Reg* %18074, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %18075 to i64*
  %18076 = load i64, i64* %RBP.i1050
  %18077 = sub i64 %18076, 252
  %18078 = load i64, i64* %PC.i1048
  %18079 = add i64 %18078, 6
  store i64 %18079, i64* %PC.i1048
  %18080 = inttoptr i64 %18077 to i32*
  %18081 = load i32, i32* %18080
  %18082 = zext i32 %18081 to i64
  store i64 %18082, i64* %RAX.i1049, align 8
  store %struct.Memory* %loadMem_40cb9e, %struct.Memory** %MEMORY
  %loadMem_40cba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18084 = getelementptr inbounds %struct.GPR, %struct.GPR* %18083, i32 0, i32 33
  %18085 = getelementptr inbounds %struct.Reg, %struct.Reg* %18084, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %18085 to i64*
  %18086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18087 = getelementptr inbounds %struct.GPR, %struct.GPR* %18086, i32 0, i32 1
  %18088 = getelementptr inbounds %struct.Reg, %struct.Reg* %18087, i32 0, i32 0
  %EAX.i1046 = bitcast %union.anon* %18088 to i32*
  %18089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18090 = getelementptr inbounds %struct.GPR, %struct.GPR* %18089, i32 0, i32 15
  %18091 = getelementptr inbounds %struct.Reg, %struct.Reg* %18090, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %18091 to i64*
  %18092 = load i64, i64* %RBP.i1047
  %18093 = sub i64 %18092, 180
  %18094 = load i32, i32* %EAX.i1046
  %18095 = zext i32 %18094 to i64
  %18096 = load i64, i64* %PC.i1045
  %18097 = add i64 %18096, 6
  store i64 %18097, i64* %PC.i1045
  %18098 = inttoptr i64 %18093 to i32*
  store i32 %18094, i32* %18098
  store %struct.Memory* %loadMem_40cba4, %struct.Memory** %MEMORY
  %loadMem_40cbaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %18099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18100 = getelementptr inbounds %struct.GPR, %struct.GPR* %18099, i32 0, i32 33
  %18101 = getelementptr inbounds %struct.Reg, %struct.Reg* %18100, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %18101 to i64*
  %18102 = load i64, i64* %PC.i1044
  %18103 = add i64 %18102, 110
  %18104 = load i64, i64* %PC.i1044
  %18105 = add i64 %18104, 5
  store i64 %18105, i64* %PC.i1044
  %18106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18103, i64* %18106, align 8
  store %struct.Memory* %loadMem_40cbaa, %struct.Memory** %MEMORY
  br label %block_.L_40cc18

block_.L_40cbaf:                                  ; preds = %block_.L_40cb83
  %loadMem_40cbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %18107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18108 = getelementptr inbounds %struct.GPR, %struct.GPR* %18107, i32 0, i32 33
  %18109 = getelementptr inbounds %struct.Reg, %struct.Reg* %18108, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %18109 to i64*
  %18110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18111 = getelementptr inbounds %struct.GPR, %struct.GPR* %18110, i32 0, i32 15
  %18112 = getelementptr inbounds %struct.Reg, %struct.Reg* %18111, i32 0, i32 0
  %RBP.i1043 = bitcast %union.anon* %18112 to i64*
  %18113 = load i64, i64* %RBP.i1043
  %18114 = sub i64 %18113, 260
  %18115 = load i64, i64* %PC.i1042
  %18116 = add i64 %18115, 7
  store i64 %18116, i64* %PC.i1042
  %18117 = inttoptr i64 %18114 to i32*
  %18118 = load i32, i32* %18117
  %18119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18119, align 1
  %18120 = and i32 %18118, 255
  %18121 = call i32 @llvm.ctpop.i32(i32 %18120)
  %18122 = trunc i32 %18121 to i8
  %18123 = and i8 %18122, 1
  %18124 = xor i8 %18123, 1
  %18125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18124, i8* %18125, align 1
  %18126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18126, align 1
  %18127 = icmp eq i32 %18118, 0
  %18128 = zext i1 %18127 to i8
  %18129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18128, i8* %18129, align 1
  %18130 = lshr i32 %18118, 31
  %18131 = trunc i32 %18130 to i8
  %18132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18131, i8* %18132, align 1
  %18133 = lshr i32 %18118, 31
  %18134 = xor i32 %18130, %18133
  %18135 = add i32 %18134, %18133
  %18136 = icmp eq i32 %18135, 2
  %18137 = zext i1 %18136 to i8
  %18138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18137, i8* %18138, align 1
  store %struct.Memory* %loadMem_40cbaf, %struct.Memory** %MEMORY
  %loadMem_40cbb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18140 = getelementptr inbounds %struct.GPR, %struct.GPR* %18139, i32 0, i32 33
  %18141 = getelementptr inbounds %struct.Reg, %struct.Reg* %18140, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %18141 to i64*
  %18142 = load i64, i64* %PC.i1041
  %18143 = add i64 %18142, 23
  %18144 = load i64, i64* %PC.i1041
  %18145 = add i64 %18144, 6
  %18146 = load i64, i64* %PC.i1041
  %18147 = add i64 %18146, 6
  store i64 %18147, i64* %PC.i1041
  %18148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18149 = load i8, i8* %18148, align 1
  %18150 = icmp eq i8 %18149, 0
  %18151 = zext i1 %18150 to i8
  store i8 %18151, i8* %BRANCH_TAKEN, align 1
  %18152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18153 = select i1 %18150, i64 %18143, i64 %18145
  store i64 %18153, i64* %18152, align 8
  store %struct.Memory* %loadMem_40cbb6, %struct.Memory** %MEMORY
  %loadBr_40cbb6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cbb6 = icmp eq i8 %loadBr_40cbb6, 1
  br i1 %cmpBr_40cbb6, label %block_.L_40cbcd, label %block_40cbbc

block_40cbbc:                                     ; preds = %block_.L_40cbaf
  %loadMem_40cbbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18155 = getelementptr inbounds %struct.GPR, %struct.GPR* %18154, i32 0, i32 33
  %18156 = getelementptr inbounds %struct.Reg, %struct.Reg* %18155, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %18156 to i64*
  %18157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18158 = getelementptr inbounds %struct.GPR, %struct.GPR* %18157, i32 0, i32 1
  %18159 = getelementptr inbounds %struct.Reg, %struct.Reg* %18158, i32 0, i32 0
  %RAX.i1039 = bitcast %union.anon* %18159 to i64*
  %18160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18161 = getelementptr inbounds %struct.GPR, %struct.GPR* %18160, i32 0, i32 15
  %18162 = getelementptr inbounds %struct.Reg, %struct.Reg* %18161, i32 0, i32 0
  %RBP.i1040 = bitcast %union.anon* %18162 to i64*
  %18163 = load i64, i64* %RBP.i1040
  %18164 = sub i64 %18163, 260
  %18165 = load i64, i64* %PC.i1038
  %18166 = add i64 %18165, 6
  store i64 %18166, i64* %PC.i1038
  %18167 = inttoptr i64 %18164 to i32*
  %18168 = load i32, i32* %18167
  %18169 = zext i32 %18168 to i64
  store i64 %18169, i64* %RAX.i1039, align 8
  store %struct.Memory* %loadMem_40cbbc, %struct.Memory** %MEMORY
  %loadMem_40cbc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18171 = getelementptr inbounds %struct.GPR, %struct.GPR* %18170, i32 0, i32 33
  %18172 = getelementptr inbounds %struct.Reg, %struct.Reg* %18171, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %18172 to i64*
  %18173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18174 = getelementptr inbounds %struct.GPR, %struct.GPR* %18173, i32 0, i32 1
  %18175 = getelementptr inbounds %struct.Reg, %struct.Reg* %18174, i32 0, i32 0
  %EAX.i1036 = bitcast %union.anon* %18175 to i32*
  %18176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18177 = getelementptr inbounds %struct.GPR, %struct.GPR* %18176, i32 0, i32 15
  %18178 = getelementptr inbounds %struct.Reg, %struct.Reg* %18177, i32 0, i32 0
  %RBP.i1037 = bitcast %union.anon* %18178 to i64*
  %18179 = load i64, i64* %RBP.i1037
  %18180 = sub i64 %18179, 376
  %18181 = load i32, i32* %EAX.i1036
  %18182 = zext i32 %18181 to i64
  %18183 = load i64, i64* %PC.i1035
  %18184 = add i64 %18183, 6
  store i64 %18184, i64* %PC.i1035
  %18185 = inttoptr i64 %18180 to i32*
  store i32 %18181, i32* %18185
  store %struct.Memory* %loadMem_40cbc2, %struct.Memory** %MEMORY
  %loadMem_40cbc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18187 = getelementptr inbounds %struct.GPR, %struct.GPR* %18186, i32 0, i32 33
  %18188 = getelementptr inbounds %struct.Reg, %struct.Reg* %18187, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %18188 to i64*
  %18189 = load i64, i64* %PC.i1034
  %18190 = add i64 %18189, 17
  %18191 = load i64, i64* %PC.i1034
  %18192 = add i64 %18191, 5
  store i64 %18192, i64* %PC.i1034
  %18193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18190, i64* %18193, align 8
  store %struct.Memory* %loadMem_40cbc8, %struct.Memory** %MEMORY
  br label %block_.L_40cbd9

block_.L_40cbcd:                                  ; preds = %block_.L_40cbaf
  %loadMem_40cbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18195 = getelementptr inbounds %struct.GPR, %struct.GPR* %18194, i32 0, i32 33
  %18196 = getelementptr inbounds %struct.Reg, %struct.Reg* %18195, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %18196 to i64*
  %18197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18198 = getelementptr inbounds %struct.GPR, %struct.GPR* %18197, i32 0, i32 1
  %18199 = getelementptr inbounds %struct.Reg, %struct.Reg* %18198, i32 0, i32 0
  %RAX.i1032 = bitcast %union.anon* %18199 to i64*
  %18200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18201 = getelementptr inbounds %struct.GPR, %struct.GPR* %18200, i32 0, i32 15
  %18202 = getelementptr inbounds %struct.Reg, %struct.Reg* %18201, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %18202 to i64*
  %18203 = load i64, i64* %RBP.i1033
  %18204 = sub i64 %18203, 264
  %18205 = load i64, i64* %PC.i1031
  %18206 = add i64 %18205, 6
  store i64 %18206, i64* %PC.i1031
  %18207 = inttoptr i64 %18204 to i32*
  %18208 = load i32, i32* %18207
  %18209 = zext i32 %18208 to i64
  store i64 %18209, i64* %RAX.i1032, align 8
  store %struct.Memory* %loadMem_40cbcd, %struct.Memory** %MEMORY
  %loadMem_40cbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18211 = getelementptr inbounds %struct.GPR, %struct.GPR* %18210, i32 0, i32 33
  %18212 = getelementptr inbounds %struct.Reg, %struct.Reg* %18211, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %18212 to i64*
  %18213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18214 = getelementptr inbounds %struct.GPR, %struct.GPR* %18213, i32 0, i32 1
  %18215 = getelementptr inbounds %struct.Reg, %struct.Reg* %18214, i32 0, i32 0
  %EAX.i1029 = bitcast %union.anon* %18215 to i32*
  %18216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18217 = getelementptr inbounds %struct.GPR, %struct.GPR* %18216, i32 0, i32 15
  %18218 = getelementptr inbounds %struct.Reg, %struct.Reg* %18217, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %18218 to i64*
  %18219 = load i64, i64* %RBP.i1030
  %18220 = sub i64 %18219, 376
  %18221 = load i32, i32* %EAX.i1029
  %18222 = zext i32 %18221 to i64
  %18223 = load i64, i64* %PC.i1028
  %18224 = add i64 %18223, 6
  store i64 %18224, i64* %PC.i1028
  %18225 = inttoptr i64 %18220 to i32*
  store i32 %18221, i32* %18225
  store %struct.Memory* %loadMem_40cbd3, %struct.Memory** %MEMORY
  br label %block_.L_40cbd9

block_.L_40cbd9:                                  ; preds = %block_.L_40cbcd, %block_40cbbc
  %loadMem_40cbd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18227 = getelementptr inbounds %struct.GPR, %struct.GPR* %18226, i32 0, i32 33
  %18228 = getelementptr inbounds %struct.Reg, %struct.Reg* %18227, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %18228 to i64*
  %18229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18230 = getelementptr inbounds %struct.GPR, %struct.GPR* %18229, i32 0, i32 1
  %18231 = getelementptr inbounds %struct.Reg, %struct.Reg* %18230, i32 0, i32 0
  %RAX.i1026 = bitcast %union.anon* %18231 to i64*
  %18232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18233 = getelementptr inbounds %struct.GPR, %struct.GPR* %18232, i32 0, i32 15
  %18234 = getelementptr inbounds %struct.Reg, %struct.Reg* %18233, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %18234 to i64*
  %18235 = load i64, i64* %RBP.i1027
  %18236 = sub i64 %18235, 376
  %18237 = load i64, i64* %PC.i1025
  %18238 = add i64 %18237, 6
  store i64 %18238, i64* %PC.i1025
  %18239 = inttoptr i64 %18236 to i32*
  %18240 = load i32, i32* %18239
  %18241 = zext i32 %18240 to i64
  store i64 %18241, i64* %RAX.i1026, align 8
  store %struct.Memory* %loadMem_40cbd9, %struct.Memory** %MEMORY
  %loadMem_40cbdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %18242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18243 = getelementptr inbounds %struct.GPR, %struct.GPR* %18242, i32 0, i32 33
  %18244 = getelementptr inbounds %struct.Reg, %struct.Reg* %18243, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %18244 to i64*
  %18245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18246 = getelementptr inbounds %struct.GPR, %struct.GPR* %18245, i32 0, i32 1
  %18247 = getelementptr inbounds %struct.Reg, %struct.Reg* %18246, i32 0, i32 0
  %EAX.i1023 = bitcast %union.anon* %18247 to i32*
  %18248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18249 = getelementptr inbounds %struct.GPR, %struct.GPR* %18248, i32 0, i32 15
  %18250 = getelementptr inbounds %struct.Reg, %struct.Reg* %18249, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %18250 to i64*
  %18251 = load i64, i64* %RBP.i1024
  %18252 = sub i64 %18251, 92
  %18253 = load i32, i32* %EAX.i1023
  %18254 = zext i32 %18253 to i64
  %18255 = load i64, i64* %PC.i1022
  %18256 = add i64 %18255, 3
  store i64 %18256, i64* %PC.i1022
  %18257 = inttoptr i64 %18252 to i32*
  store i32 %18253, i32* %18257
  store %struct.Memory* %loadMem_40cbdf, %struct.Memory** %MEMORY
  %loadMem_40cbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18259 = getelementptr inbounds %struct.GPR, %struct.GPR* %18258, i32 0, i32 33
  %18260 = getelementptr inbounds %struct.Reg, %struct.Reg* %18259, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %18260 to i64*
  %18261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18262 = getelementptr inbounds %struct.GPR, %struct.GPR* %18261, i32 0, i32 15
  %18263 = getelementptr inbounds %struct.Reg, %struct.Reg* %18262, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %18263 to i64*
  %18264 = load i64, i64* %RBP.i1021
  %18265 = sub i64 %18264, 260
  %18266 = load i64, i64* %PC.i1020
  %18267 = add i64 %18266, 7
  store i64 %18267, i64* %PC.i1020
  %18268 = inttoptr i64 %18265 to i32*
  %18269 = load i32, i32* %18268
  %18270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18270, align 1
  %18271 = and i32 %18269, 255
  %18272 = call i32 @llvm.ctpop.i32(i32 %18271)
  %18273 = trunc i32 %18272 to i8
  %18274 = and i8 %18273, 1
  %18275 = xor i8 %18274, 1
  %18276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18275, i8* %18276, align 1
  %18277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18277, align 1
  %18278 = icmp eq i32 %18269, 0
  %18279 = zext i1 %18278 to i8
  %18280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18279, i8* %18280, align 1
  %18281 = lshr i32 %18269, 31
  %18282 = trunc i32 %18281 to i8
  %18283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18282, i8* %18283, align 1
  %18284 = lshr i32 %18269, 31
  %18285 = xor i32 %18281, %18284
  %18286 = add i32 %18285, %18284
  %18287 = icmp eq i32 %18286, 2
  %18288 = zext i1 %18287 to i8
  %18289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18288, i8* %18289, align 1
  store %struct.Memory* %loadMem_40cbe2, %struct.Memory** %MEMORY
  %loadMem_40cbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18291 = getelementptr inbounds %struct.GPR, %struct.GPR* %18290, i32 0, i32 33
  %18292 = getelementptr inbounds %struct.Reg, %struct.Reg* %18291, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %18292 to i64*
  %18293 = load i64, i64* %PC.i1019
  %18294 = add i64 %18293, 23
  %18295 = load i64, i64* %PC.i1019
  %18296 = add i64 %18295, 6
  %18297 = load i64, i64* %PC.i1019
  %18298 = add i64 %18297, 6
  store i64 %18298, i64* %PC.i1019
  %18299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18300 = load i8, i8* %18299, align 1
  %18301 = icmp eq i8 %18300, 0
  %18302 = zext i1 %18301 to i8
  store i8 %18302, i8* %BRANCH_TAKEN, align 1
  %18303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18304 = select i1 %18301, i64 %18294, i64 %18296
  store i64 %18304, i64* %18303, align 8
  store %struct.Memory* %loadMem_40cbe9, %struct.Memory** %MEMORY
  %loadBr_40cbe9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cbe9 = icmp eq i8 %loadBr_40cbe9, 1
  br i1 %cmpBr_40cbe9, label %block_.L_40cc00, label %block_40cbef

block_40cbef:                                     ; preds = %block_.L_40cbd9
  %loadMem_40cbef = load %struct.Memory*, %struct.Memory** %MEMORY
  %18305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18306 = getelementptr inbounds %struct.GPR, %struct.GPR* %18305, i32 0, i32 33
  %18307 = getelementptr inbounds %struct.Reg, %struct.Reg* %18306, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %18307 to i64*
  %18308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18309 = getelementptr inbounds %struct.GPR, %struct.GPR* %18308, i32 0, i32 1
  %18310 = getelementptr inbounds %struct.Reg, %struct.Reg* %18309, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %18310 to i64*
  %18311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18312 = getelementptr inbounds %struct.GPR, %struct.GPR* %18311, i32 0, i32 15
  %18313 = getelementptr inbounds %struct.Reg, %struct.Reg* %18312, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %18313 to i64*
  %18314 = load i64, i64* %RBP.i1018
  %18315 = sub i64 %18314, 252
  %18316 = load i64, i64* %PC.i1016
  %18317 = add i64 %18316, 6
  store i64 %18317, i64* %PC.i1016
  %18318 = inttoptr i64 %18315 to i32*
  %18319 = load i32, i32* %18318
  %18320 = zext i32 %18319 to i64
  store i64 %18320, i64* %RAX.i1017, align 8
  store %struct.Memory* %loadMem_40cbef, %struct.Memory** %MEMORY
  %loadMem_40cbf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18322 = getelementptr inbounds %struct.GPR, %struct.GPR* %18321, i32 0, i32 33
  %18323 = getelementptr inbounds %struct.Reg, %struct.Reg* %18322, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %18323 to i64*
  %18324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18325 = getelementptr inbounds %struct.GPR, %struct.GPR* %18324, i32 0, i32 1
  %18326 = getelementptr inbounds %struct.Reg, %struct.Reg* %18325, i32 0, i32 0
  %EAX.i1014 = bitcast %union.anon* %18326 to i32*
  %18327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18328 = getelementptr inbounds %struct.GPR, %struct.GPR* %18327, i32 0, i32 15
  %18329 = getelementptr inbounds %struct.Reg, %struct.Reg* %18328, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %18329 to i64*
  %18330 = load i64, i64* %RBP.i1015
  %18331 = sub i64 %18330, 380
  %18332 = load i32, i32* %EAX.i1014
  %18333 = zext i32 %18332 to i64
  %18334 = load i64, i64* %PC.i1013
  %18335 = add i64 %18334, 6
  store i64 %18335, i64* %PC.i1013
  %18336 = inttoptr i64 %18331 to i32*
  store i32 %18332, i32* %18336
  store %struct.Memory* %loadMem_40cbf5, %struct.Memory** %MEMORY
  %loadMem_40cbfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18338 = getelementptr inbounds %struct.GPR, %struct.GPR* %18337, i32 0, i32 33
  %18339 = getelementptr inbounds %struct.Reg, %struct.Reg* %18338, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %18339 to i64*
  %18340 = load i64, i64* %PC.i1012
  %18341 = add i64 %18340, 17
  %18342 = load i64, i64* %PC.i1012
  %18343 = add i64 %18342, 5
  store i64 %18343, i64* %PC.i1012
  %18344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18341, i64* %18344, align 8
  store %struct.Memory* %loadMem_40cbfb, %struct.Memory** %MEMORY
  br label %block_.L_40cc0c

block_.L_40cc00:                                  ; preds = %block_.L_40cbd9
  %loadMem_40cc00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18346 = getelementptr inbounds %struct.GPR, %struct.GPR* %18345, i32 0, i32 33
  %18347 = getelementptr inbounds %struct.Reg, %struct.Reg* %18346, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %18347 to i64*
  %18348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18349 = getelementptr inbounds %struct.GPR, %struct.GPR* %18348, i32 0, i32 1
  %18350 = getelementptr inbounds %struct.Reg, %struct.Reg* %18349, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %18350 to i64*
  %18351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18352 = getelementptr inbounds %struct.GPR, %struct.GPR* %18351, i32 0, i32 15
  %18353 = getelementptr inbounds %struct.Reg, %struct.Reg* %18352, i32 0, i32 0
  %RBP.i1011 = bitcast %union.anon* %18353 to i64*
  %18354 = load i64, i64* %RBP.i1011
  %18355 = sub i64 %18354, 256
  %18356 = load i64, i64* %PC.i1009
  %18357 = add i64 %18356, 6
  store i64 %18357, i64* %PC.i1009
  %18358 = inttoptr i64 %18355 to i32*
  %18359 = load i32, i32* %18358
  %18360 = zext i32 %18359 to i64
  store i64 %18360, i64* %RAX.i1010, align 8
  store %struct.Memory* %loadMem_40cc00, %struct.Memory** %MEMORY
  %loadMem_40cc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18362 = getelementptr inbounds %struct.GPR, %struct.GPR* %18361, i32 0, i32 33
  %18363 = getelementptr inbounds %struct.Reg, %struct.Reg* %18362, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %18363 to i64*
  %18364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18365 = getelementptr inbounds %struct.GPR, %struct.GPR* %18364, i32 0, i32 1
  %18366 = getelementptr inbounds %struct.Reg, %struct.Reg* %18365, i32 0, i32 0
  %EAX.i1007 = bitcast %union.anon* %18366 to i32*
  %18367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18368 = getelementptr inbounds %struct.GPR, %struct.GPR* %18367, i32 0, i32 15
  %18369 = getelementptr inbounds %struct.Reg, %struct.Reg* %18368, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %18369 to i64*
  %18370 = load i64, i64* %RBP.i1008
  %18371 = sub i64 %18370, 380
  %18372 = load i32, i32* %EAX.i1007
  %18373 = zext i32 %18372 to i64
  %18374 = load i64, i64* %PC.i1006
  %18375 = add i64 %18374, 6
  store i64 %18375, i64* %PC.i1006
  %18376 = inttoptr i64 %18371 to i32*
  store i32 %18372, i32* %18376
  store %struct.Memory* %loadMem_40cc06, %struct.Memory** %MEMORY
  br label %block_.L_40cc0c

block_.L_40cc0c:                                  ; preds = %block_.L_40cc00, %block_40cbef
  %loadMem_40cc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18378 = getelementptr inbounds %struct.GPR, %struct.GPR* %18377, i32 0, i32 33
  %18379 = getelementptr inbounds %struct.Reg, %struct.Reg* %18378, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %18379 to i64*
  %18380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18381 = getelementptr inbounds %struct.GPR, %struct.GPR* %18380, i32 0, i32 1
  %18382 = getelementptr inbounds %struct.Reg, %struct.Reg* %18381, i32 0, i32 0
  %RAX.i1004 = bitcast %union.anon* %18382 to i64*
  %18383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18384 = getelementptr inbounds %struct.GPR, %struct.GPR* %18383, i32 0, i32 15
  %18385 = getelementptr inbounds %struct.Reg, %struct.Reg* %18384, i32 0, i32 0
  %RBP.i1005 = bitcast %union.anon* %18385 to i64*
  %18386 = load i64, i64* %RBP.i1005
  %18387 = sub i64 %18386, 380
  %18388 = load i64, i64* %PC.i1003
  %18389 = add i64 %18388, 6
  store i64 %18389, i64* %PC.i1003
  %18390 = inttoptr i64 %18387 to i32*
  %18391 = load i32, i32* %18390
  %18392 = zext i32 %18391 to i64
  store i64 %18392, i64* %RAX.i1004, align 8
  store %struct.Memory* %loadMem_40cc0c, %struct.Memory** %MEMORY
  %loadMem_40cc12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18394 = getelementptr inbounds %struct.GPR, %struct.GPR* %18393, i32 0, i32 33
  %18395 = getelementptr inbounds %struct.Reg, %struct.Reg* %18394, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %18395 to i64*
  %18396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18397 = getelementptr inbounds %struct.GPR, %struct.GPR* %18396, i32 0, i32 1
  %18398 = getelementptr inbounds %struct.Reg, %struct.Reg* %18397, i32 0, i32 0
  %EAX.i1001 = bitcast %union.anon* %18398 to i32*
  %18399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18400 = getelementptr inbounds %struct.GPR, %struct.GPR* %18399, i32 0, i32 15
  %18401 = getelementptr inbounds %struct.Reg, %struct.Reg* %18400, i32 0, i32 0
  %RBP.i1002 = bitcast %union.anon* %18401 to i64*
  %18402 = load i64, i64* %RBP.i1002
  %18403 = sub i64 %18402, 180
  %18404 = load i32, i32* %EAX.i1001
  %18405 = zext i32 %18404 to i64
  %18406 = load i64, i64* %PC.i1000
  %18407 = add i64 %18406, 6
  store i64 %18407, i64* %PC.i1000
  %18408 = inttoptr i64 %18403 to i32*
  store i32 %18404, i32* %18408
  store %struct.Memory* %loadMem_40cc12, %struct.Memory** %MEMORY
  br label %block_.L_40cc18

block_.L_40cc18:                                  ; preds = %block_.L_40cc0c, %block_40cb95
  %loadMem_40cc18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18410 = getelementptr inbounds %struct.GPR, %struct.GPR* %18409, i32 0, i32 33
  %18411 = getelementptr inbounds %struct.Reg, %struct.Reg* %18410, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %18411 to i64*
  %18412 = load i64, i64* %PC.i999
  %18413 = add i64 %18412, 5
  %18414 = load i64, i64* %PC.i999
  %18415 = add i64 %18414, 5
  store i64 %18415, i64* %PC.i999
  %18416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18413, i64* %18416, align 8
  store %struct.Memory* %loadMem_40cc18, %struct.Memory** %MEMORY
  br label %block_.L_40cc1d

block_.L_40cc1d:                                  ; preds = %block_.L_40cc18, %block_.L_40cb72
  %loadMem_40cc1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18418 = getelementptr inbounds %struct.GPR, %struct.GPR* %18417, i32 0, i32 33
  %18419 = getelementptr inbounds %struct.Reg, %struct.Reg* %18418, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %18419 to i64*
  %18420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18421 = getelementptr inbounds %struct.GPR, %struct.GPR* %18420, i32 0, i32 15
  %18422 = getelementptr inbounds %struct.Reg, %struct.Reg* %18421, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %18422 to i64*
  %18423 = load i64, i64* %RBP.i998
  %18424 = sub i64 %18423, 92
  %18425 = load i64, i64* %PC.i997
  %18426 = add i64 %18425, 4
  store i64 %18426, i64* %PC.i997
  %18427 = inttoptr i64 %18424 to i32*
  %18428 = load i32, i32* %18427
  %18429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %18429, align 1
  %18430 = and i32 %18428, 255
  %18431 = call i32 @llvm.ctpop.i32(i32 %18430)
  %18432 = trunc i32 %18431 to i8
  %18433 = and i8 %18432, 1
  %18434 = xor i8 %18433, 1
  %18435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18434, i8* %18435, align 1
  %18436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18436, align 1
  %18437 = icmp eq i32 %18428, 0
  %18438 = zext i1 %18437 to i8
  %18439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18438, i8* %18439, align 1
  %18440 = lshr i32 %18428, 31
  %18441 = trunc i32 %18440 to i8
  %18442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18441, i8* %18442, align 1
  %18443 = lshr i32 %18428, 31
  %18444 = xor i32 %18440, %18443
  %18445 = add i32 %18444, %18443
  %18446 = icmp eq i32 %18445, 2
  %18447 = zext i1 %18446 to i8
  %18448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18447, i8* %18448, align 1
  store %struct.Memory* %loadMem_40cc1d, %struct.Memory** %MEMORY
  %loadMem_40cc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18450 = getelementptr inbounds %struct.GPR, %struct.GPR* %18449, i32 0, i32 33
  %18451 = getelementptr inbounds %struct.Reg, %struct.Reg* %18450, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %18451 to i64*
  %18452 = load i64, i64* %PC.i996
  %18453 = add i64 %18452, 252
  %18454 = load i64, i64* %PC.i996
  %18455 = add i64 %18454, 6
  %18456 = load i64, i64* %PC.i996
  %18457 = add i64 %18456, 6
  store i64 %18457, i64* %PC.i996
  %18458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18459 = load i8, i8* %18458, align 1
  store i8 %18459, i8* %BRANCH_TAKEN, align 1
  %18460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18461 = icmp ne i8 %18459, 0
  %18462 = select i1 %18461, i64 %18453, i64 %18455
  store i64 %18462, i64* %18460, align 8
  store %struct.Memory* %loadMem_40cc21, %struct.Memory** %MEMORY
  %loadBr_40cc21 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cc21 = icmp eq i8 %loadBr_40cc21, 1
  br i1 %cmpBr_40cc21, label %block_.L_40cd1d, label %block_40cc27

block_40cc27:                                     ; preds = %block_.L_40cc1d
  %loadMem_40cc27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18464 = getelementptr inbounds %struct.GPR, %struct.GPR* %18463, i32 0, i32 33
  %18465 = getelementptr inbounds %struct.Reg, %struct.Reg* %18464, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %18465 to i64*
  %18466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18467 = getelementptr inbounds %struct.GPR, %struct.GPR* %18466, i32 0, i32 15
  %18468 = getelementptr inbounds %struct.Reg, %struct.Reg* %18467, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %18468 to i64*
  %18469 = load i64, i64* %RBP.i995
  %18470 = sub i64 %18469, 104
  %18471 = load i64, i64* %PC.i994
  %18472 = add i64 %18471, 7
  store i64 %18472, i64* %PC.i994
  %18473 = inttoptr i64 %18470 to i32*
  store i32 1, i32* %18473
  store %struct.Memory* %loadMem_40cc27, %struct.Memory** %MEMORY
  %loadMem_40cc2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18475 = getelementptr inbounds %struct.GPR, %struct.GPR* %18474, i32 0, i32 33
  %18476 = getelementptr inbounds %struct.Reg, %struct.Reg* %18475, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %18476 to i64*
  %18477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18478 = getelementptr inbounds %struct.GPR, %struct.GPR* %18477, i32 0, i32 15
  %18479 = getelementptr inbounds %struct.Reg, %struct.Reg* %18478, i32 0, i32 0
  %RBP.i993 = bitcast %union.anon* %18479 to i64*
  %18480 = load i64, i64* %RBP.i993
  %18481 = sub i64 %18480, 92
  %18482 = load i64, i64* %PC.i992
  %18483 = add i64 %18482, 4
  store i64 %18483, i64* %PC.i992
  %18484 = inttoptr i64 %18481 to i32*
  %18485 = load i32, i32* %18484
  %18486 = sub i32 %18485, 1
  %18487 = icmp ult i32 %18485, 1
  %18488 = zext i1 %18487 to i8
  %18489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18488, i8* %18489, align 1
  %18490 = and i32 %18486, 255
  %18491 = call i32 @llvm.ctpop.i32(i32 %18490)
  %18492 = trunc i32 %18491 to i8
  %18493 = and i8 %18492, 1
  %18494 = xor i8 %18493, 1
  %18495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18494, i8* %18495, align 1
  %18496 = xor i32 %18485, 1
  %18497 = xor i32 %18496, %18486
  %18498 = lshr i32 %18497, 4
  %18499 = trunc i32 %18498 to i8
  %18500 = and i8 %18499, 1
  %18501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18500, i8* %18501, align 1
  %18502 = icmp eq i32 %18486, 0
  %18503 = zext i1 %18502 to i8
  %18504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18503, i8* %18504, align 1
  %18505 = lshr i32 %18486, 31
  %18506 = trunc i32 %18505 to i8
  %18507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18506, i8* %18507, align 1
  %18508 = lshr i32 %18485, 31
  %18509 = xor i32 %18505, %18508
  %18510 = add i32 %18509, %18508
  %18511 = icmp eq i32 %18510, 2
  %18512 = zext i1 %18511 to i8
  %18513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18512, i8* %18513, align 1
  store %struct.Memory* %loadMem_40cc2e, %struct.Memory** %MEMORY
  %loadMem_40cc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18515 = getelementptr inbounds %struct.GPR, %struct.GPR* %18514, i32 0, i32 33
  %18516 = getelementptr inbounds %struct.Reg, %struct.Reg* %18515, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %18516 to i64*
  %18517 = load i64, i64* %PC.i991
  %18518 = add i64 %18517, 25
  %18519 = load i64, i64* %PC.i991
  %18520 = add i64 %18519, 6
  %18521 = load i64, i64* %PC.i991
  %18522 = add i64 %18521, 6
  store i64 %18522, i64* %PC.i991
  %18523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18524 = load i8, i8* %18523, align 1
  %18525 = icmp ne i8 %18524, 0
  %18526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18527 = load i8, i8* %18526, align 1
  %18528 = icmp ne i8 %18527, 0
  %18529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18530 = load i8, i8* %18529, align 1
  %18531 = icmp ne i8 %18530, 0
  %18532 = xor i1 %18528, %18531
  %18533 = or i1 %18525, %18532
  %18534 = zext i1 %18533 to i8
  store i8 %18534, i8* %BRANCH_TAKEN, align 1
  %18535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18536 = select i1 %18533, i64 %18518, i64 %18520
  store i64 %18536, i64* %18535, align 8
  store %struct.Memory* %loadMem_40cc32, %struct.Memory** %MEMORY
  %loadBr_40cc32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cc32 = icmp eq i8 %loadBr_40cc32, 1
  br i1 %cmpBr_40cc32, label %block_.L_40cc4b, label %block_40cc38

block_40cc38:                                     ; preds = %block_40cc27
  %loadMem_40cc38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18538 = getelementptr inbounds %struct.GPR, %struct.GPR* %18537, i32 0, i32 33
  %18539 = getelementptr inbounds %struct.Reg, %struct.Reg* %18538, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %18539 to i64*
  %18540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18541 = getelementptr inbounds %struct.GPR, %struct.GPR* %18540, i32 0, i32 1
  %18542 = getelementptr inbounds %struct.Reg, %struct.Reg* %18541, i32 0, i32 0
  %RAX.i989 = bitcast %union.anon* %18542 to i64*
  %18543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18544 = getelementptr inbounds %struct.GPR, %struct.GPR* %18543, i32 0, i32 15
  %18545 = getelementptr inbounds %struct.Reg, %struct.Reg* %18544, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %18545 to i64*
  %18546 = load i64, i64* %RBP.i990
  %18547 = sub i64 %18546, 16
  %18548 = load i64, i64* %PC.i988
  %18549 = add i64 %18548, 4
  store i64 %18549, i64* %PC.i988
  %18550 = inttoptr i64 %18547 to i64*
  %18551 = load i64, i64* %18550
  store i64 %18551, i64* %RAX.i989, align 8
  store %struct.Memory* %loadMem_40cc38, %struct.Memory** %MEMORY
  %loadMem_40cc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18553 = getelementptr inbounds %struct.GPR, %struct.GPR* %18552, i32 0, i32 33
  %18554 = getelementptr inbounds %struct.Reg, %struct.Reg* %18553, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %18554 to i64*
  %18555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18556 = getelementptr inbounds %struct.GPR, %struct.GPR* %18555, i32 0, i32 1
  %18557 = getelementptr inbounds %struct.Reg, %struct.Reg* %18556, i32 0, i32 0
  %RAX.i986 = bitcast %union.anon* %18557 to i64*
  %18558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18559 = getelementptr inbounds %struct.GPR, %struct.GPR* %18558, i32 0, i32 5
  %18560 = getelementptr inbounds %struct.Reg, %struct.Reg* %18559, i32 0, i32 0
  %RCX.i987 = bitcast %union.anon* %18560 to i64*
  %18561 = load i64, i64* %RAX.i986
  %18562 = load i64, i64* %PC.i985
  %18563 = add i64 %18562, 2
  store i64 %18563, i64* %PC.i985
  %18564 = inttoptr i64 %18561 to i32*
  %18565 = load i32, i32* %18564
  %18566 = zext i32 %18565 to i64
  store i64 %18566, i64* %RCX.i987, align 8
  store %struct.Memory* %loadMem_40cc3c, %struct.Memory** %MEMORY
  %loadMem_40cc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18568 = getelementptr inbounds %struct.GPR, %struct.GPR* %18567, i32 0, i32 33
  %18569 = getelementptr inbounds %struct.Reg, %struct.Reg* %18568, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %18569 to i64*
  %18570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18571 = getelementptr inbounds %struct.GPR, %struct.GPR* %18570, i32 0, i32 5
  %18572 = getelementptr inbounds %struct.Reg, %struct.Reg* %18571, i32 0, i32 0
  %RCX.i984 = bitcast %union.anon* %18572 to i64*
  %18573 = load i64, i64* %RCX.i984
  %18574 = load i64, i64* %PC.i983
  %18575 = add i64 %18574, 6
  store i64 %18575, i64* %PC.i983
  %18576 = trunc i64 %18573 to i32
  %18577 = add i32 999999, %18576
  %18578 = zext i32 %18577 to i64
  store i64 %18578, i64* %RCX.i984, align 8
  %18579 = icmp ult i32 %18577, %18576
  %18580 = icmp ult i32 %18577, 999999
  %18581 = or i1 %18579, %18580
  %18582 = zext i1 %18581 to i8
  %18583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18582, i8* %18583, align 1
  %18584 = and i32 %18577, 255
  %18585 = call i32 @llvm.ctpop.i32(i32 %18584)
  %18586 = trunc i32 %18585 to i8
  %18587 = and i8 %18586, 1
  %18588 = xor i8 %18587, 1
  %18589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18588, i8* %18589, align 1
  %18590 = xor i64 999999, %18573
  %18591 = trunc i64 %18590 to i32
  %18592 = xor i32 %18591, %18577
  %18593 = lshr i32 %18592, 4
  %18594 = trunc i32 %18593 to i8
  %18595 = and i8 %18594, 1
  %18596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18595, i8* %18596, align 1
  %18597 = icmp eq i32 %18577, 0
  %18598 = zext i1 %18597 to i8
  %18599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18598, i8* %18599, align 1
  %18600 = lshr i32 %18577, 31
  %18601 = trunc i32 %18600 to i8
  %18602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18601, i8* %18602, align 1
  %18603 = lshr i32 %18576, 31
  %18604 = xor i32 %18600, %18603
  %18605 = add i32 %18604, %18600
  %18606 = icmp eq i32 %18605, 2
  %18607 = zext i1 %18606 to i8
  %18608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18607, i8* %18608, align 1
  store %struct.Memory* %loadMem_40cc3e, %struct.Memory** %MEMORY
  %loadMem_40cc44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18610 = getelementptr inbounds %struct.GPR, %struct.GPR* %18609, i32 0, i32 33
  %18611 = getelementptr inbounds %struct.Reg, %struct.Reg* %18610, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %18611 to i64*
  %18612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18613 = getelementptr inbounds %struct.GPR, %struct.GPR* %18612, i32 0, i32 5
  %18614 = getelementptr inbounds %struct.Reg, %struct.Reg* %18613, i32 0, i32 0
  %ECX.i981 = bitcast %union.anon* %18614 to i32*
  %18615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18616 = getelementptr inbounds %struct.GPR, %struct.GPR* %18615, i32 0, i32 1
  %18617 = getelementptr inbounds %struct.Reg, %struct.Reg* %18616, i32 0, i32 0
  %RAX.i982 = bitcast %union.anon* %18617 to i64*
  %18618 = load i64, i64* %RAX.i982
  %18619 = load i32, i32* %ECX.i981
  %18620 = zext i32 %18619 to i64
  %18621 = load i64, i64* %PC.i980
  %18622 = add i64 %18621, 2
  store i64 %18622, i64* %PC.i980
  %18623 = inttoptr i64 %18618 to i32*
  store i32 %18619, i32* %18623
  store %struct.Memory* %loadMem_40cc44, %struct.Memory** %MEMORY
  %loadMem_40cc46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18625 = getelementptr inbounds %struct.GPR, %struct.GPR* %18624, i32 0, i32 33
  %18626 = getelementptr inbounds %struct.Reg, %struct.Reg* %18625, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %18626 to i64*
  %18627 = load i64, i64* %PC.i979
  %18628 = add i64 %18627, 53
  %18629 = load i64, i64* %PC.i979
  %18630 = add i64 %18629, 5
  store i64 %18630, i64* %PC.i979
  %18631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18628, i64* %18631, align 8
  store %struct.Memory* %loadMem_40cc46, %struct.Memory** %MEMORY
  br label %block_.L_40cc7b

block_.L_40cc4b:                                  ; preds = %block_40cc27
  %loadMem_40cc4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18633 = getelementptr inbounds %struct.GPR, %struct.GPR* %18632, i32 0, i32 33
  %18634 = getelementptr inbounds %struct.Reg, %struct.Reg* %18633, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %18634 to i64*
  %18635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18636 = getelementptr inbounds %struct.GPR, %struct.GPR* %18635, i32 0, i32 1
  %18637 = getelementptr inbounds %struct.Reg, %struct.Reg* %18636, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %18637 to i64*
  %18638 = load i64, i64* %PC.i977
  %18639 = add i64 %18638, 10
  store i64 %18639, i64* %PC.i977
  store i64 ptrtoint (%G__0x4b23a0_type* @G__0x4b23a0 to i64), i64* %RAX.i978, align 8
  store %struct.Memory* %loadMem_40cc4b, %struct.Memory** %MEMORY
  %loadMem_40cc55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18641 = getelementptr inbounds %struct.GPR, %struct.GPR* %18640, i32 0, i32 33
  %18642 = getelementptr inbounds %struct.Reg, %struct.Reg* %18641, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %18642 to i64*
  %18643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18644 = getelementptr inbounds %struct.GPR, %struct.GPR* %18643, i32 0, i32 5
  %18645 = getelementptr inbounds %struct.Reg, %struct.Reg* %18644, i32 0, i32 0
  %RCX.i976 = bitcast %union.anon* %18645 to i64*
  %18646 = load i64, i64* %PC.i975
  %18647 = add i64 %18646, 8
  store i64 %18647, i64* %PC.i975
  %18648 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %18648, i64* %RCX.i976, align 8
  store %struct.Memory* %loadMem_40cc55, %struct.Memory** %MEMORY
  %loadMem_40cc5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18650 = getelementptr inbounds %struct.GPR, %struct.GPR* %18649, i32 0, i32 33
  %18651 = getelementptr inbounds %struct.Reg, %struct.Reg* %18650, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %18651 to i64*
  %18652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18653 = getelementptr inbounds %struct.GPR, %struct.GPR* %18652, i32 0, i32 5
  %18654 = getelementptr inbounds %struct.Reg, %struct.Reg* %18653, i32 0, i32 0
  %RCX.i974 = bitcast %union.anon* %18654 to i64*
  %18655 = load i64, i64* %RCX.i974
  %18656 = add i64 %18655, 2468
  %18657 = load i64, i64* %PC.i973
  %18658 = add i64 %18657, 7
  store i64 %18658, i64* %PC.i973
  %18659 = inttoptr i64 %18656 to i32*
  %18660 = load i32, i32* %18659
  %18661 = sext i32 %18660 to i64
  store i64 %18661, i64* %RCX.i974, align 8
  store %struct.Memory* %loadMem_40cc5d, %struct.Memory** %MEMORY
  %loadMem_40cc64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18663 = getelementptr inbounds %struct.GPR, %struct.GPR* %18662, i32 0, i32 33
  %18664 = getelementptr inbounds %struct.Reg, %struct.Reg* %18663, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %18664 to i64*
  %18665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18666 = getelementptr inbounds %struct.GPR, %struct.GPR* %18665, i32 0, i32 5
  %18667 = getelementptr inbounds %struct.Reg, %struct.Reg* %18666, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %18667 to i64*
  %18668 = load i64, i64* %RCX.i972
  %18669 = load i64, i64* %PC.i971
  %18670 = add i64 %18669, 4
  store i64 %18670, i64* %PC.i971
  %18671 = shl i64 %18668, 3
  %18672 = icmp slt i64 %18671, 0
  %18673 = shl i64 %18671, 1
  store i64 %18673, i64* %RCX.i972, align 8
  %18674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18675 = zext i1 %18672 to i8
  store i8 %18675, i8* %18674, align 1
  %18676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18677 = trunc i64 %18673 to i32
  %18678 = and i32 %18677, 254
  %18679 = call i32 @llvm.ctpop.i32(i32 %18678)
  %18680 = trunc i32 %18679 to i8
  %18681 = and i8 %18680, 1
  %18682 = xor i8 %18681, 1
  store i8 %18682, i8* %18676, align 1
  %18683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18683, align 1
  %18684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18685 = icmp eq i64 %18673, 0
  %18686 = zext i1 %18685 to i8
  store i8 %18686, i8* %18684, align 1
  %18687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18688 = lshr i64 %18673, 63
  %18689 = trunc i64 %18688 to i8
  store i8 %18689, i8* %18687, align 1
  %18690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18690, align 1
  store %struct.Memory* %loadMem_40cc64, %struct.Memory** %MEMORY
  %loadMem_40cc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18692 = getelementptr inbounds %struct.GPR, %struct.GPR* %18691, i32 0, i32 33
  %18693 = getelementptr inbounds %struct.Reg, %struct.Reg* %18692, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %18693 to i64*
  %18694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18695 = getelementptr inbounds %struct.GPR, %struct.GPR* %18694, i32 0, i32 1
  %18696 = getelementptr inbounds %struct.Reg, %struct.Reg* %18695, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %18696 to i64*
  %18697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18698 = getelementptr inbounds %struct.GPR, %struct.GPR* %18697, i32 0, i32 5
  %18699 = getelementptr inbounds %struct.Reg, %struct.Reg* %18698, i32 0, i32 0
  %RCX.i970 = bitcast %union.anon* %18699 to i64*
  %18700 = load i64, i64* %RAX.i969
  %18701 = load i64, i64* %RCX.i970
  %18702 = load i64, i64* %PC.i968
  %18703 = add i64 %18702, 3
  store i64 %18703, i64* %PC.i968
  %18704 = add i64 %18701, %18700
  store i64 %18704, i64* %RAX.i969, align 8
  %18705 = icmp ult i64 %18704, %18700
  %18706 = icmp ult i64 %18704, %18701
  %18707 = or i1 %18705, %18706
  %18708 = zext i1 %18707 to i8
  %18709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18708, i8* %18709, align 1
  %18710 = trunc i64 %18704 to i32
  %18711 = and i32 %18710, 255
  %18712 = call i32 @llvm.ctpop.i32(i32 %18711)
  %18713 = trunc i32 %18712 to i8
  %18714 = and i8 %18713, 1
  %18715 = xor i8 %18714, 1
  %18716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18715, i8* %18716, align 1
  %18717 = xor i64 %18701, %18700
  %18718 = xor i64 %18717, %18704
  %18719 = lshr i64 %18718, 4
  %18720 = trunc i64 %18719 to i8
  %18721 = and i8 %18720, 1
  %18722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18721, i8* %18722, align 1
  %18723 = icmp eq i64 %18704, 0
  %18724 = zext i1 %18723 to i8
  %18725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18724, i8* %18725, align 1
  %18726 = lshr i64 %18704, 63
  %18727 = trunc i64 %18726 to i8
  %18728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18727, i8* %18728, align 1
  %18729 = lshr i64 %18700, 63
  %18730 = lshr i64 %18701, 63
  %18731 = xor i64 %18726, %18729
  %18732 = xor i64 %18726, %18730
  %18733 = add i64 %18731, %18732
  %18734 = icmp eq i64 %18733, 2
  %18735 = zext i1 %18734 to i8
  %18736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18735, i8* %18736, align 1
  store %struct.Memory* %loadMem_40cc68, %struct.Memory** %MEMORY
  %loadMem_40cc6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18738 = getelementptr inbounds %struct.GPR, %struct.GPR* %18737, i32 0, i32 33
  %18739 = getelementptr inbounds %struct.Reg, %struct.Reg* %18738, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %18739 to i64*
  %18740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18741 = getelementptr inbounds %struct.GPR, %struct.GPR* %18740, i32 0, i32 5
  %18742 = getelementptr inbounds %struct.Reg, %struct.Reg* %18741, i32 0, i32 0
  %RCX.i966 = bitcast %union.anon* %18742 to i64*
  %18743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18744 = getelementptr inbounds %struct.GPR, %struct.GPR* %18743, i32 0, i32 15
  %18745 = getelementptr inbounds %struct.Reg, %struct.Reg* %18744, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %18745 to i64*
  %18746 = load i64, i64* %RBP.i967
  %18747 = sub i64 %18746, 100
  %18748 = load i64, i64* %PC.i965
  %18749 = add i64 %18748, 4
  store i64 %18749, i64* %PC.i965
  %18750 = inttoptr i64 %18747 to i32*
  %18751 = load i32, i32* %18750
  %18752 = sext i32 %18751 to i64
  store i64 %18752, i64* %RCX.i966, align 8
  store %struct.Memory* %loadMem_40cc6b, %struct.Memory** %MEMORY
  %loadMem_40cc6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18754 = getelementptr inbounds %struct.GPR, %struct.GPR* %18753, i32 0, i32 33
  %18755 = getelementptr inbounds %struct.Reg, %struct.Reg* %18754, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %18755 to i64*
  %18756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18757 = getelementptr inbounds %struct.GPR, %struct.GPR* %18756, i32 0, i32 1
  %18758 = getelementptr inbounds %struct.Reg, %struct.Reg* %18757, i32 0, i32 0
  %RAX.i962 = bitcast %union.anon* %18758 to i64*
  %18759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18760 = getelementptr inbounds %struct.GPR, %struct.GPR* %18759, i32 0, i32 5
  %18761 = getelementptr inbounds %struct.Reg, %struct.Reg* %18760, i32 0, i32 0
  %RCX.i963 = bitcast %union.anon* %18761 to i64*
  %18762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18763 = getelementptr inbounds %struct.GPR, %struct.GPR* %18762, i32 0, i32 7
  %18764 = getelementptr inbounds %struct.Reg, %struct.Reg* %18763, i32 0, i32 0
  %RDX.i964 = bitcast %union.anon* %18764 to i64*
  %18765 = load i64, i64* %RAX.i962
  %18766 = load i64, i64* %RCX.i963
  %18767 = add i64 %18766, %18765
  %18768 = load i64, i64* %PC.i961
  %18769 = add i64 %18768, 4
  store i64 %18769, i64* %PC.i961
  %18770 = inttoptr i64 %18767 to i8*
  %18771 = load i8, i8* %18770
  %18772 = zext i8 %18771 to i64
  store i64 %18772, i64* %RDX.i964, align 8
  store %struct.Memory* %loadMem_40cc6f, %struct.Memory** %MEMORY
  %loadMem_40cc73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18774 = getelementptr inbounds %struct.GPR, %struct.GPR* %18773, i32 0, i32 33
  %18775 = getelementptr inbounds %struct.Reg, %struct.Reg* %18774, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %18775 to i64*
  %18776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18777 = getelementptr inbounds %struct.GPR, %struct.GPR* %18776, i32 0, i32 1
  %18778 = getelementptr inbounds %struct.Reg, %struct.Reg* %18777, i32 0, i32 0
  %RAX.i959 = bitcast %union.anon* %18778 to i64*
  %18779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18780 = getelementptr inbounds %struct.GPR, %struct.GPR* %18779, i32 0, i32 15
  %18781 = getelementptr inbounds %struct.Reg, %struct.Reg* %18780, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %18781 to i64*
  %18782 = load i64, i64* %RBP.i960
  %18783 = sub i64 %18782, 16
  %18784 = load i64, i64* %PC.i958
  %18785 = add i64 %18784, 4
  store i64 %18785, i64* %PC.i958
  %18786 = inttoptr i64 %18783 to i64*
  %18787 = load i64, i64* %18786
  store i64 %18787, i64* %RAX.i959, align 8
  store %struct.Memory* %loadMem_40cc73, %struct.Memory** %MEMORY
  %loadMem_40cc77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18789 = getelementptr inbounds %struct.GPR, %struct.GPR* %18788, i32 0, i32 33
  %18790 = getelementptr inbounds %struct.Reg, %struct.Reg* %18789, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %18790 to i64*
  %18791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18792 = getelementptr inbounds %struct.GPR, %struct.GPR* %18791, i32 0, i32 1
  %18793 = getelementptr inbounds %struct.Reg, %struct.Reg* %18792, i32 0, i32 0
  %RAX.i956 = bitcast %union.anon* %18793 to i64*
  %18794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18795 = getelementptr inbounds %struct.GPR, %struct.GPR* %18794, i32 0, i32 7
  %18796 = getelementptr inbounds %struct.Reg, %struct.Reg* %18795, i32 0, i32 0
  %RDX.i957 = bitcast %union.anon* %18796 to i64*
  %18797 = load i64, i64* %RDX.i957
  %18798 = load i64, i64* %RAX.i956
  %18799 = load i64, i64* %PC.i955
  %18800 = add i64 %18799, 2
  store i64 %18800, i64* %PC.i955
  %18801 = trunc i64 %18797 to i32
  %18802 = inttoptr i64 %18798 to i32*
  %18803 = load i32, i32* %18802
  %18804 = add i32 %18803, %18801
  %18805 = zext i32 %18804 to i64
  store i64 %18805, i64* %RDX.i957, align 8
  %18806 = icmp ult i32 %18804, %18801
  %18807 = icmp ult i32 %18804, %18803
  %18808 = or i1 %18806, %18807
  %18809 = zext i1 %18808 to i8
  %18810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18809, i8* %18810, align 1
  %18811 = and i32 %18804, 255
  %18812 = call i32 @llvm.ctpop.i32(i32 %18811)
  %18813 = trunc i32 %18812 to i8
  %18814 = and i8 %18813, 1
  %18815 = xor i8 %18814, 1
  %18816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18815, i8* %18816, align 1
  %18817 = xor i32 %18803, %18801
  %18818 = xor i32 %18817, %18804
  %18819 = lshr i32 %18818, 4
  %18820 = trunc i32 %18819 to i8
  %18821 = and i8 %18820, 1
  %18822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18821, i8* %18822, align 1
  %18823 = icmp eq i32 %18804, 0
  %18824 = zext i1 %18823 to i8
  %18825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18824, i8* %18825, align 1
  %18826 = lshr i32 %18804, 31
  %18827 = trunc i32 %18826 to i8
  %18828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18827, i8* %18828, align 1
  %18829 = lshr i32 %18801, 31
  %18830 = lshr i32 %18803, 31
  %18831 = xor i32 %18826, %18829
  %18832 = xor i32 %18826, %18830
  %18833 = add i32 %18831, %18832
  %18834 = icmp eq i32 %18833, 2
  %18835 = zext i1 %18834 to i8
  %18836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18835, i8* %18836, align 1
  store %struct.Memory* %loadMem_40cc77, %struct.Memory** %MEMORY
  %loadMem_40cc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18838 = getelementptr inbounds %struct.GPR, %struct.GPR* %18837, i32 0, i32 33
  %18839 = getelementptr inbounds %struct.Reg, %struct.Reg* %18838, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %18839 to i64*
  %18840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18841 = getelementptr inbounds %struct.GPR, %struct.GPR* %18840, i32 0, i32 7
  %18842 = getelementptr inbounds %struct.Reg, %struct.Reg* %18841, i32 0, i32 0
  %EDX.i953 = bitcast %union.anon* %18842 to i32*
  %18843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18844 = getelementptr inbounds %struct.GPR, %struct.GPR* %18843, i32 0, i32 1
  %18845 = getelementptr inbounds %struct.Reg, %struct.Reg* %18844, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %18845 to i64*
  %18846 = load i64, i64* %RAX.i954
  %18847 = load i32, i32* %EDX.i953
  %18848 = zext i32 %18847 to i64
  %18849 = load i64, i64* %PC.i952
  %18850 = add i64 %18849, 2
  store i64 %18850, i64* %PC.i952
  %18851 = inttoptr i64 %18846 to i32*
  store i32 %18847, i32* %18851
  store %struct.Memory* %loadMem_40cc79, %struct.Memory** %MEMORY
  br label %block_.L_40cc7b

block_.L_40cc7b:                                  ; preds = %block_.L_40cc4b, %block_40cc38
  %loadMem_40cc7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18853 = getelementptr inbounds %struct.GPR, %struct.GPR* %18852, i32 0, i32 33
  %18854 = getelementptr inbounds %struct.Reg, %struct.Reg* %18853, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %18854 to i64*
  %18855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18856 = getelementptr inbounds %struct.GPR, %struct.GPR* %18855, i32 0, i32 11
  %18857 = getelementptr inbounds %struct.Reg, %struct.Reg* %18856, i32 0, i32 0
  %RDI.i950 = bitcast %union.anon* %18857 to i64*
  %18858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18859 = getelementptr inbounds %struct.GPR, %struct.GPR* %18858, i32 0, i32 15
  %18860 = getelementptr inbounds %struct.Reg, %struct.Reg* %18859, i32 0, i32 0
  %RBP.i951 = bitcast %union.anon* %18860 to i64*
  %18861 = load i64, i64* %RBP.i951
  %18862 = sub i64 %18861, 92
  %18863 = load i64, i64* %PC.i949
  %18864 = add i64 %18863, 3
  store i64 %18864, i64* %PC.i949
  %18865 = inttoptr i64 %18862 to i32*
  %18866 = load i32, i32* %18865
  %18867 = zext i32 %18866 to i64
  store i64 %18867, i64* %RDI.i950, align 8
  store %struct.Memory* %loadMem_40cc7b, %struct.Memory** %MEMORY
  %loadMem_40cc7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18869 = getelementptr inbounds %struct.GPR, %struct.GPR* %18868, i32 0, i32 33
  %18870 = getelementptr inbounds %struct.Reg, %struct.Reg* %18869, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %18870 to i64*
  %18871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18872 = getelementptr inbounds %struct.GPR, %struct.GPR* %18871, i32 0, i32 9
  %18873 = getelementptr inbounds %struct.Reg, %struct.Reg* %18872, i32 0, i32 0
  %RSI.i947 = bitcast %union.anon* %18873 to i64*
  %18874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18875 = getelementptr inbounds %struct.GPR, %struct.GPR* %18874, i32 0, i32 15
  %18876 = getelementptr inbounds %struct.Reg, %struct.Reg* %18875, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %18876 to i64*
  %18877 = load i64, i64* %RBP.i948
  %18878 = sub i64 %18877, 180
  %18879 = load i64, i64* %PC.i946
  %18880 = add i64 %18879, 6
  store i64 %18880, i64* %PC.i946
  %18881 = inttoptr i64 %18878 to i32*
  %18882 = load i32, i32* %18881
  %18883 = zext i32 %18882 to i64
  store i64 %18883, i64* %RSI.i947, align 8
  store %struct.Memory* %loadMem_40cc7e, %struct.Memory** %MEMORY
  %loadMem1_40cc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18885 = getelementptr inbounds %struct.GPR, %struct.GPR* %18884, i32 0, i32 33
  %18886 = getelementptr inbounds %struct.Reg, %struct.Reg* %18885, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %18886 to i64*
  %18887 = load i64, i64* %PC.i945
  %18888 = add i64 %18887, 427212
  %18889 = load i64, i64* %PC.i945
  %18890 = add i64 %18889, 5
  %18891 = load i64, i64* %PC.i945
  %18892 = add i64 %18891, 5
  store i64 %18892, i64* %PC.i945
  %18893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %18894 = load i64, i64* %18893, align 8
  %18895 = add i64 %18894, -8
  %18896 = inttoptr i64 %18895 to i64*
  store i64 %18890, i64* %18896
  store i64 %18895, i64* %18893, align 8
  %18897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18888, i64* %18897, align 8
  store %struct.Memory* %loadMem1_40cc84, %struct.Memory** %MEMORY
  %loadMem2_40cc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cc84 = load i64, i64* %3
  %call2_40cc84 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40cc84, %struct.Memory* %loadMem2_40cc84)
  store %struct.Memory* %call2_40cc84, %struct.Memory** %MEMORY
  %loadMem_40cc89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18899 = getelementptr inbounds %struct.GPR, %struct.GPR* %18898, i32 0, i32 33
  %18900 = getelementptr inbounds %struct.Reg, %struct.Reg* %18899, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %18900 to i64*
  %18901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18902 = getelementptr inbounds %struct.GPR, %struct.GPR* %18901, i32 0, i32 5
  %18903 = getelementptr inbounds %struct.Reg, %struct.Reg* %18902, i32 0, i32 0
  %RCX.i943 = bitcast %union.anon* %18903 to i64*
  %18904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18905 = getelementptr inbounds %struct.GPR, %struct.GPR* %18904, i32 0, i32 15
  %18906 = getelementptr inbounds %struct.Reg, %struct.Reg* %18905, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %18906 to i64*
  %18907 = load i64, i64* %RBP.i944
  %18908 = sub i64 %18907, 232
  %18909 = load i64, i64* %PC.i942
  %18910 = add i64 %18909, 7
  store i64 %18910, i64* %PC.i942
  %18911 = inttoptr i64 %18908 to i64*
  %18912 = load i64, i64* %18911
  store i64 %18912, i64* %RCX.i943, align 8
  store %struct.Memory* %loadMem_40cc89, %struct.Memory** %MEMORY
  %loadMem_40cc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18914 = getelementptr inbounds %struct.GPR, %struct.GPR* %18913, i32 0, i32 33
  %18915 = getelementptr inbounds %struct.Reg, %struct.Reg* %18914, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %18915 to i64*
  %18916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18917 = getelementptr inbounds %struct.GPR, %struct.GPR* %18916, i32 0, i32 7
  %18918 = getelementptr inbounds %struct.Reg, %struct.Reg* %18917, i32 0, i32 0
  %RDX.i940 = bitcast %union.anon* %18918 to i64*
  %18919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18920 = getelementptr inbounds %struct.GPR, %struct.GPR* %18919, i32 0, i32 15
  %18921 = getelementptr inbounds %struct.Reg, %struct.Reg* %18920, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %18921 to i64*
  %18922 = load i64, i64* %RBP.i941
  %18923 = sub i64 %18922, 96
  %18924 = load i64, i64* %PC.i939
  %18925 = add i64 %18924, 4
  store i64 %18925, i64* %PC.i939
  %18926 = inttoptr i64 %18923 to i32*
  %18927 = load i32, i32* %18926
  %18928 = sext i32 %18927 to i64
  store i64 %18928, i64* %RDX.i940, align 8
  store %struct.Memory* %loadMem_40cc90, %struct.Memory** %MEMORY
  %loadMem_40cc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18930 = getelementptr inbounds %struct.GPR, %struct.GPR* %18929, i32 0, i32 33
  %18931 = getelementptr inbounds %struct.Reg, %struct.Reg* %18930, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %18931 to i64*
  %18932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18933 = getelementptr inbounds %struct.GPR, %struct.GPR* %18932, i32 0, i32 1
  %18934 = getelementptr inbounds %struct.Reg, %struct.Reg* %18933, i32 0, i32 0
  %EAX.i936 = bitcast %union.anon* %18934 to i32*
  %18935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18936 = getelementptr inbounds %struct.GPR, %struct.GPR* %18935, i32 0, i32 5
  %18937 = getelementptr inbounds %struct.Reg, %struct.Reg* %18936, i32 0, i32 0
  %RCX.i937 = bitcast %union.anon* %18937 to i64*
  %18938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18939 = getelementptr inbounds %struct.GPR, %struct.GPR* %18938, i32 0, i32 7
  %18940 = getelementptr inbounds %struct.Reg, %struct.Reg* %18939, i32 0, i32 0
  %RDX.i938 = bitcast %union.anon* %18940 to i64*
  %18941 = load i64, i64* %RCX.i937
  %18942 = load i64, i64* %RDX.i938
  %18943 = mul i64 %18942, 4
  %18944 = add i64 %18943, %18941
  %18945 = load i32, i32* %EAX.i936
  %18946 = zext i32 %18945 to i64
  %18947 = load i64, i64* %PC.i935
  %18948 = add i64 %18947, 3
  store i64 %18948, i64* %PC.i935
  %18949 = inttoptr i64 %18944 to i32*
  store i32 %18945, i32* %18949
  store %struct.Memory* %loadMem_40cc94, %struct.Memory** %MEMORY
  %loadMem_40cc97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18951 = getelementptr inbounds %struct.GPR, %struct.GPR* %18950, i32 0, i32 33
  %18952 = getelementptr inbounds %struct.Reg, %struct.Reg* %18951, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %18952 to i64*
  %18953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18954 = getelementptr inbounds %struct.GPR, %struct.GPR* %18953, i32 0, i32 1
  %18955 = getelementptr inbounds %struct.Reg, %struct.Reg* %18954, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %18955 to i64*
  %18956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18957 = getelementptr inbounds %struct.GPR, %struct.GPR* %18956, i32 0, i32 15
  %18958 = getelementptr inbounds %struct.Reg, %struct.Reg* %18957, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %18958 to i64*
  %18959 = load i64, i64* %RBP.i934
  %18960 = sub i64 %18959, 100
  %18961 = load i64, i64* %PC.i932
  %18962 = add i64 %18961, 3
  store i64 %18962, i64* %PC.i932
  %18963 = inttoptr i64 %18960 to i32*
  %18964 = load i32, i32* %18963
  %18965 = zext i32 %18964 to i64
  store i64 %18965, i64* %RAX.i933, align 8
  store %struct.Memory* %loadMem_40cc97, %struct.Memory** %MEMORY
  %loadMem_40cc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18967 = getelementptr inbounds %struct.GPR, %struct.GPR* %18966, i32 0, i32 33
  %18968 = getelementptr inbounds %struct.Reg, %struct.Reg* %18967, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %18968 to i64*
  %18969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18970 = getelementptr inbounds %struct.GPR, %struct.GPR* %18969, i32 0, i32 5
  %18971 = getelementptr inbounds %struct.Reg, %struct.Reg* %18970, i32 0, i32 0
  %RCX.i930 = bitcast %union.anon* %18971 to i64*
  %18972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18973 = getelementptr inbounds %struct.GPR, %struct.GPR* %18972, i32 0, i32 15
  %18974 = getelementptr inbounds %struct.Reg, %struct.Reg* %18973, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %18974 to i64*
  %18975 = load i64, i64* %RBP.i931
  %18976 = sub i64 %18975, 240
  %18977 = load i64, i64* %PC.i929
  %18978 = add i64 %18977, 7
  store i64 %18978, i64* %PC.i929
  %18979 = inttoptr i64 %18976 to i64*
  %18980 = load i64, i64* %18979
  store i64 %18980, i64* %RCX.i930, align 8
  store %struct.Memory* %loadMem_40cc9a, %struct.Memory** %MEMORY
  %loadMem_40cca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18982 = getelementptr inbounds %struct.GPR, %struct.GPR* %18981, i32 0, i32 33
  %18983 = getelementptr inbounds %struct.Reg, %struct.Reg* %18982, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %18983 to i64*
  %18984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18985 = getelementptr inbounds %struct.GPR, %struct.GPR* %18984, i32 0, i32 7
  %18986 = getelementptr inbounds %struct.Reg, %struct.Reg* %18985, i32 0, i32 0
  %RDX.i927 = bitcast %union.anon* %18986 to i64*
  %18987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18988 = getelementptr inbounds %struct.GPR, %struct.GPR* %18987, i32 0, i32 15
  %18989 = getelementptr inbounds %struct.Reg, %struct.Reg* %18988, i32 0, i32 0
  %RBP.i928 = bitcast %union.anon* %18989 to i64*
  %18990 = load i64, i64* %RBP.i928
  %18991 = sub i64 %18990, 96
  %18992 = load i64, i64* %PC.i926
  %18993 = add i64 %18992, 4
  store i64 %18993, i64* %PC.i926
  %18994 = inttoptr i64 %18991 to i32*
  %18995 = load i32, i32* %18994
  %18996 = sext i32 %18995 to i64
  store i64 %18996, i64* %RDX.i927, align 8
  store %struct.Memory* %loadMem_40cca1, %struct.Memory** %MEMORY
  %loadMem_40cca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18998 = getelementptr inbounds %struct.GPR, %struct.GPR* %18997, i32 0, i32 33
  %18999 = getelementptr inbounds %struct.Reg, %struct.Reg* %18998, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %18999 to i64*
  %19000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19001 = getelementptr inbounds %struct.GPR, %struct.GPR* %19000, i32 0, i32 1
  %19002 = getelementptr inbounds %struct.Reg, %struct.Reg* %19001, i32 0, i32 0
  %EAX.i923 = bitcast %union.anon* %19002 to i32*
  %19003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19004 = getelementptr inbounds %struct.GPR, %struct.GPR* %19003, i32 0, i32 5
  %19005 = getelementptr inbounds %struct.Reg, %struct.Reg* %19004, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %19005 to i64*
  %19006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19007 = getelementptr inbounds %struct.GPR, %struct.GPR* %19006, i32 0, i32 7
  %19008 = getelementptr inbounds %struct.Reg, %struct.Reg* %19007, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %19008 to i64*
  %19009 = load i64, i64* %RCX.i924
  %19010 = load i64, i64* %RDX.i925
  %19011 = mul i64 %19010, 4
  %19012 = add i64 %19011, %19009
  %19013 = load i32, i32* %EAX.i923
  %19014 = zext i32 %19013 to i64
  %19015 = load i64, i64* %PC.i922
  %19016 = add i64 %19015, 3
  store i64 %19016, i64* %PC.i922
  %19017 = inttoptr i64 %19012 to i32*
  store i32 %19013, i32* %19017
  store %struct.Memory* %loadMem_40cca5, %struct.Memory** %MEMORY
  %loadMem_40cca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19019 = getelementptr inbounds %struct.GPR, %struct.GPR* %19018, i32 0, i32 33
  %19020 = getelementptr inbounds %struct.Reg, %struct.Reg* %19019, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %19020 to i64*
  %19021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19022 = getelementptr inbounds %struct.GPR, %struct.GPR* %19021, i32 0, i32 1
  %19023 = getelementptr inbounds %struct.Reg, %struct.Reg* %19022, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %19023 to i64*
  %19024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19025 = getelementptr inbounds %struct.GPR, %struct.GPR* %19024, i32 0, i32 15
  %19026 = getelementptr inbounds %struct.Reg, %struct.Reg* %19025, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %19026 to i64*
  %19027 = load i64, i64* %RBP.i921
  %19028 = sub i64 %19027, 96
  %19029 = load i64, i64* %PC.i919
  %19030 = add i64 %19029, 3
  store i64 %19030, i64* %PC.i919
  %19031 = inttoptr i64 %19028 to i32*
  %19032 = load i32, i32* %19031
  %19033 = zext i32 %19032 to i64
  store i64 %19033, i64* %RAX.i920, align 8
  store %struct.Memory* %loadMem_40cca8, %struct.Memory** %MEMORY
  %loadMem_40ccab = load %struct.Memory*, %struct.Memory** %MEMORY
  %19034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19035 = getelementptr inbounds %struct.GPR, %struct.GPR* %19034, i32 0, i32 33
  %19036 = getelementptr inbounds %struct.Reg, %struct.Reg* %19035, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %19036 to i64*
  %19037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19038 = getelementptr inbounds %struct.GPR, %struct.GPR* %19037, i32 0, i32 1
  %19039 = getelementptr inbounds %struct.Reg, %struct.Reg* %19038, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %19039 to i64*
  %19040 = load i64, i64* %RAX.i918
  %19041 = load i64, i64* %PC.i917
  %19042 = add i64 %19041, 3
  store i64 %19042, i64* %PC.i917
  %19043 = trunc i64 %19040 to i32
  %19044 = add i32 1, %19043
  %19045 = zext i32 %19044 to i64
  store i64 %19045, i64* %RAX.i918, align 8
  %19046 = icmp ult i32 %19044, %19043
  %19047 = icmp ult i32 %19044, 1
  %19048 = or i1 %19046, %19047
  %19049 = zext i1 %19048 to i8
  %19050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19049, i8* %19050, align 1
  %19051 = and i32 %19044, 255
  %19052 = call i32 @llvm.ctpop.i32(i32 %19051)
  %19053 = trunc i32 %19052 to i8
  %19054 = and i8 %19053, 1
  %19055 = xor i8 %19054, 1
  %19056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19055, i8* %19056, align 1
  %19057 = xor i64 1, %19040
  %19058 = trunc i64 %19057 to i32
  %19059 = xor i32 %19058, %19044
  %19060 = lshr i32 %19059, 4
  %19061 = trunc i32 %19060 to i8
  %19062 = and i8 %19061, 1
  %19063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19062, i8* %19063, align 1
  %19064 = icmp eq i32 %19044, 0
  %19065 = zext i1 %19064 to i8
  %19066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19065, i8* %19066, align 1
  %19067 = lshr i32 %19044, 31
  %19068 = trunc i32 %19067 to i8
  %19069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19068, i8* %19069, align 1
  %19070 = lshr i32 %19043, 31
  %19071 = xor i32 %19067, %19070
  %19072 = add i32 %19071, %19067
  %19073 = icmp eq i32 %19072, 2
  %19074 = zext i1 %19073 to i8
  %19075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19074, i8* %19075, align 1
  store %struct.Memory* %loadMem_40ccab, %struct.Memory** %MEMORY
  %loadMem_40ccae = load %struct.Memory*, %struct.Memory** %MEMORY
  %19076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19077 = getelementptr inbounds %struct.GPR, %struct.GPR* %19076, i32 0, i32 33
  %19078 = getelementptr inbounds %struct.Reg, %struct.Reg* %19077, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %19078 to i64*
  %19079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19080 = getelementptr inbounds %struct.GPR, %struct.GPR* %19079, i32 0, i32 1
  %19081 = getelementptr inbounds %struct.Reg, %struct.Reg* %19080, i32 0, i32 0
  %EAX.i915 = bitcast %union.anon* %19081 to i32*
  %19082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19083 = getelementptr inbounds %struct.GPR, %struct.GPR* %19082, i32 0, i32 15
  %19084 = getelementptr inbounds %struct.Reg, %struct.Reg* %19083, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %19084 to i64*
  %19085 = load i64, i64* %RBP.i916
  %19086 = sub i64 %19085, 96
  %19087 = load i32, i32* %EAX.i915
  %19088 = zext i32 %19087 to i64
  %19089 = load i64, i64* %PC.i914
  %19090 = add i64 %19089, 3
  store i64 %19090, i64* %PC.i914
  %19091 = inttoptr i64 %19086 to i32*
  store i32 %19087, i32* %19091
  store %struct.Memory* %loadMem_40ccae, %struct.Memory** %MEMORY
  %loadMem_40ccb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19093 = getelementptr inbounds %struct.GPR, %struct.GPR* %19092, i32 0, i32 33
  %19094 = getelementptr inbounds %struct.Reg, %struct.Reg* %19093, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %19094 to i64*
  %19095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19096 = getelementptr inbounds %struct.GPR, %struct.GPR* %19095, i32 0, i32 15
  %19097 = getelementptr inbounds %struct.Reg, %struct.Reg* %19096, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %19097 to i64*
  %19098 = load i64, i64* %RBP.i913
  %19099 = sub i64 %19098, 100
  %19100 = load i64, i64* %PC.i912
  %19101 = add i64 %19100, 7
  store i64 %19101, i64* %PC.i912
  %19102 = inttoptr i64 %19099 to i32*
  store i32 -1, i32* %19102
  store %struct.Memory* %loadMem_40ccb1, %struct.Memory** %MEMORY
  %loadMem_40ccb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19104 = getelementptr inbounds %struct.GPR, %struct.GPR* %19103, i32 0, i32 33
  %19105 = getelementptr inbounds %struct.Reg, %struct.Reg* %19104, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %19105 to i64*
  %19106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19107 = getelementptr inbounds %struct.GPR, %struct.GPR* %19106, i32 0, i32 11
  %19108 = getelementptr inbounds %struct.Reg, %struct.Reg* %19107, i32 0, i32 0
  %RDI.i910 = bitcast %union.anon* %19108 to i64*
  %19109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19110 = getelementptr inbounds %struct.GPR, %struct.GPR* %19109, i32 0, i32 15
  %19111 = getelementptr inbounds %struct.Reg, %struct.Reg* %19110, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %19111 to i64*
  %19112 = load i64, i64* %RBP.i911
  %19113 = sub i64 %19112, 92
  %19114 = load i64, i64* %PC.i909
  %19115 = add i64 %19114, 3
  store i64 %19115, i64* %PC.i909
  %19116 = inttoptr i64 %19113 to i32*
  %19117 = load i32, i32* %19116
  %19118 = zext i32 %19117 to i64
  store i64 %19118, i64* %RDI.i910, align 8
  store %struct.Memory* %loadMem_40ccb8, %struct.Memory** %MEMORY
  %loadMem_40ccbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %19119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19120 = getelementptr inbounds %struct.GPR, %struct.GPR* %19119, i32 0, i32 33
  %19121 = getelementptr inbounds %struct.Reg, %struct.Reg* %19120, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %19121 to i64*
  %19122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19123 = getelementptr inbounds %struct.GPR, %struct.GPR* %19122, i32 0, i32 9
  %19124 = getelementptr inbounds %struct.Reg, %struct.Reg* %19123, i32 0, i32 0
  %RSI.i907 = bitcast %union.anon* %19124 to i64*
  %19125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19126 = getelementptr inbounds %struct.GPR, %struct.GPR* %19125, i32 0, i32 15
  %19127 = getelementptr inbounds %struct.Reg, %struct.Reg* %19126, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %19127 to i64*
  %19128 = load i64, i64* %RBP.i908
  %19129 = sub i64 %19128, 180
  %19130 = load i64, i64* %PC.i906
  %19131 = add i64 %19130, 6
  store i64 %19131, i64* %PC.i906
  %19132 = inttoptr i64 %19129 to i32*
  %19133 = load i32, i32* %19132
  %19134 = zext i32 %19133 to i64
  store i64 %19134, i64* %RSI.i907, align 8
  store %struct.Memory* %loadMem_40ccbb, %struct.Memory** %MEMORY
  %loadMem1_40ccc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19136 = getelementptr inbounds %struct.GPR, %struct.GPR* %19135, i32 0, i32 33
  %19137 = getelementptr inbounds %struct.Reg, %struct.Reg* %19136, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %19137 to i64*
  %19138 = load i64, i64* %PC.i905
  %19139 = add i64 %19138, 427151
  %19140 = load i64, i64* %PC.i905
  %19141 = add i64 %19140, 5
  %19142 = load i64, i64* %PC.i905
  %19143 = add i64 %19142, 5
  store i64 %19143, i64* %PC.i905
  %19144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19145 = load i64, i64* %19144, align 8
  %19146 = add i64 %19145, -8
  %19147 = inttoptr i64 %19146 to i64*
  store i64 %19141, i64* %19147
  store i64 %19146, i64* %19144, align 8
  %19148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19139, i64* %19148, align 8
  store %struct.Memory* %loadMem1_40ccc1, %struct.Memory** %MEMORY
  %loadMem2_40ccc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ccc1 = load i64, i64* %3
  %call2_40ccc1 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40ccc1, %struct.Memory* %loadMem2_40ccc1)
  store %struct.Memory* %call2_40ccc1, %struct.Memory** %MEMORY
  %loadMem_40ccc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19150 = getelementptr inbounds %struct.GPR, %struct.GPR* %19149, i32 0, i32 33
  %19151 = getelementptr inbounds %struct.Reg, %struct.Reg* %19150, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %19151 to i64*
  %19152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19153 = getelementptr inbounds %struct.GPR, %struct.GPR* %19152, i32 0, i32 5
  %19154 = getelementptr inbounds %struct.Reg, %struct.Reg* %19153, i32 0, i32 0
  %RCX.i904 = bitcast %union.anon* %19154 to i64*
  %19155 = load i64, i64* %PC.i903
  %19156 = add i64 %19155, 10
  store i64 %19156, i64* %PC.i903
  store i64 ptrtoint (%G__0x4b2a50_type* @G__0x4b2a50 to i64), i64* %RCX.i904, align 8
  store %struct.Memory* %loadMem_40ccc6, %struct.Memory** %MEMORY
  %loadMem_40ccd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19158 = getelementptr inbounds %struct.GPR, %struct.GPR* %19157, i32 0, i32 33
  %19159 = getelementptr inbounds %struct.Reg, %struct.Reg* %19158, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %19159 to i64*
  %19160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19161 = getelementptr inbounds %struct.GPR, %struct.GPR* %19160, i32 0, i32 7
  %19162 = getelementptr inbounds %struct.Reg, %struct.Reg* %19161, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %19162 to i64*
  %19163 = load i64, i64* %PC.i901
  %19164 = add i64 %19163, 10
  store i64 %19164, i64* %PC.i901
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %RDX.i902, align 8
  store %struct.Memory* %loadMem_40ccd0, %struct.Memory** %MEMORY
  %loadMem_40ccda = load %struct.Memory*, %struct.Memory** %MEMORY
  %19165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19166 = getelementptr inbounds %struct.GPR, %struct.GPR* %19165, i32 0, i32 33
  %19167 = getelementptr inbounds %struct.Reg, %struct.Reg* %19166, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %19167 to i64*
  %19168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19169 = getelementptr inbounds %struct.GPR, %struct.GPR* %19168, i32 0, i32 15
  %19170 = getelementptr inbounds %struct.Reg, %struct.Reg* %19169, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %19170 to i64*
  %19171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19172 = getelementptr inbounds %struct.GPR, %struct.GPR* %19171, i32 0, i32 17
  %19173 = getelementptr inbounds %struct.Reg, %struct.Reg* %19172, i32 0, i32 0
  %R8.i900 = bitcast %union.anon* %19173 to i64*
  %19174 = load i64, i64* %RBP.i899
  %19175 = sub i64 %19174, 192
  %19176 = load i64, i64* %PC.i898
  %19177 = add i64 %19176, 7
  store i64 %19177, i64* %PC.i898
  %19178 = inttoptr i64 %19175 to i32*
  %19179 = load i32, i32* %19178
  %19180 = sext i32 %19179 to i64
  store i64 %19180, i64* %R8.i900, align 8
  store %struct.Memory* %loadMem_40ccda, %struct.Memory** %MEMORY
  %loadMem_40cce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19182 = getelementptr inbounds %struct.GPR, %struct.GPR* %19181, i32 0, i32 33
  %19183 = getelementptr inbounds %struct.Reg, %struct.Reg* %19182, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %19183 to i64*
  %19184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19185 = getelementptr inbounds %struct.GPR, %struct.GPR* %19184, i32 0, i32 17
  %19186 = getelementptr inbounds %struct.Reg, %struct.Reg* %19185, i32 0, i32 0
  %R8.i897 = bitcast %union.anon* %19186 to i64*
  %19187 = load i64, i64* %R8.i897
  %19188 = load i64, i64* %PC.i896
  %19189 = add i64 %19188, 4
  store i64 %19189, i64* %PC.i896
  %19190 = shl i64 %19187, 5
  %19191 = icmp slt i64 %19190, 0
  %19192 = shl i64 %19190, 1
  store i64 %19192, i64* %R8.i897, align 8
  %19193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19194 = zext i1 %19191 to i8
  store i8 %19194, i8* %19193, align 1
  %19195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19196 = trunc i64 %19192 to i32
  %19197 = and i32 %19196, 254
  %19198 = call i32 @llvm.ctpop.i32(i32 %19197)
  %19199 = trunc i32 %19198 to i8
  %19200 = and i8 %19199, 1
  %19201 = xor i8 %19200, 1
  store i8 %19201, i8* %19195, align 1
  %19202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19202, align 1
  %19203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19204 = icmp eq i64 %19192, 0
  %19205 = zext i1 %19204 to i8
  store i8 %19205, i8* %19203, align 1
  %19206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19207 = lshr i64 %19192, 63
  %19208 = trunc i64 %19207 to i8
  store i8 %19208, i8* %19206, align 1
  %19209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19209, align 1
  store %struct.Memory* %loadMem_40cce1, %struct.Memory** %MEMORY
  %loadMem_40cce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19211 = getelementptr inbounds %struct.GPR, %struct.GPR* %19210, i32 0, i32 33
  %19212 = getelementptr inbounds %struct.Reg, %struct.Reg* %19211, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %19212 to i64*
  %19213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19214 = getelementptr inbounds %struct.GPR, %struct.GPR* %19213, i32 0, i32 7
  %19215 = getelementptr inbounds %struct.Reg, %struct.Reg* %19214, i32 0, i32 0
  %RDX.i894 = bitcast %union.anon* %19215 to i64*
  %19216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19217 = getelementptr inbounds %struct.GPR, %struct.GPR* %19216, i32 0, i32 17
  %19218 = getelementptr inbounds %struct.Reg, %struct.Reg* %19217, i32 0, i32 0
  %R8.i895 = bitcast %union.anon* %19218 to i64*
  %19219 = load i64, i64* %RDX.i894
  %19220 = load i64, i64* %R8.i895
  %19221 = load i64, i64* %PC.i893
  %19222 = add i64 %19221, 3
  store i64 %19222, i64* %PC.i893
  %19223 = add i64 %19220, %19219
  store i64 %19223, i64* %RDX.i894, align 8
  %19224 = icmp ult i64 %19223, %19219
  %19225 = icmp ult i64 %19223, %19220
  %19226 = or i1 %19224, %19225
  %19227 = zext i1 %19226 to i8
  %19228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19227, i8* %19228, align 1
  %19229 = trunc i64 %19223 to i32
  %19230 = and i32 %19229, 255
  %19231 = call i32 @llvm.ctpop.i32(i32 %19230)
  %19232 = trunc i32 %19231 to i8
  %19233 = and i8 %19232, 1
  %19234 = xor i8 %19233, 1
  %19235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19234, i8* %19235, align 1
  %19236 = xor i64 %19220, %19219
  %19237 = xor i64 %19236, %19223
  %19238 = lshr i64 %19237, 4
  %19239 = trunc i64 %19238 to i8
  %19240 = and i8 %19239, 1
  %19241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19240, i8* %19241, align 1
  %19242 = icmp eq i64 %19223, 0
  %19243 = zext i1 %19242 to i8
  %19244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19243, i8* %19244, align 1
  %19245 = lshr i64 %19223, 63
  %19246 = trunc i64 %19245 to i8
  %19247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19246, i8* %19247, align 1
  %19248 = lshr i64 %19219, 63
  %19249 = lshr i64 %19220, 63
  %19250 = xor i64 %19245, %19248
  %19251 = xor i64 %19245, %19249
  %19252 = add i64 %19250, %19251
  %19253 = icmp eq i64 %19252, 2
  %19254 = zext i1 %19253 to i8
  %19255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19254, i8* %19255, align 1
  store %struct.Memory* %loadMem_40cce5, %struct.Memory** %MEMORY
  %loadMem_40cce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19257 = getelementptr inbounds %struct.GPR, %struct.GPR* %19256, i32 0, i32 33
  %19258 = getelementptr inbounds %struct.Reg, %struct.Reg* %19257, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %19258 to i64*
  %19259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19260 = getelementptr inbounds %struct.GPR, %struct.GPR* %19259, i32 0, i32 15
  %19261 = getelementptr inbounds %struct.Reg, %struct.Reg* %19260, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %19261 to i64*
  %19262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19263 = getelementptr inbounds %struct.GPR, %struct.GPR* %19262, i32 0, i32 17
  %19264 = getelementptr inbounds %struct.Reg, %struct.Reg* %19263, i32 0, i32 0
  %R8.i892 = bitcast %union.anon* %19264 to i64*
  %19265 = load i64, i64* %RBP.i891
  %19266 = sub i64 %19265, 20
  %19267 = load i64, i64* %PC.i890
  %19268 = add i64 %19267, 4
  store i64 %19268, i64* %PC.i890
  %19269 = inttoptr i64 %19266 to i32*
  %19270 = load i32, i32* %19269
  %19271 = sext i32 %19270 to i64
  store i64 %19271, i64* %R8.i892, align 8
  store %struct.Memory* %loadMem_40cce8, %struct.Memory** %MEMORY
  %loadMem_40ccec = load %struct.Memory*, %struct.Memory** %MEMORY
  %19272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19273 = getelementptr inbounds %struct.GPR, %struct.GPR* %19272, i32 0, i32 33
  %19274 = getelementptr inbounds %struct.Reg, %struct.Reg* %19273, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %19274 to i64*
  %19275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19276 = getelementptr inbounds %struct.GPR, %struct.GPR* %19275, i32 0, i32 17
  %19277 = getelementptr inbounds %struct.Reg, %struct.Reg* %19276, i32 0, i32 0
  %R8.i889 = bitcast %union.anon* %19277 to i64*
  %19278 = load i64, i64* %R8.i889
  %19279 = load i64, i64* %PC.i888
  %19280 = add i64 %19279, 4
  store i64 %19280, i64* %PC.i888
  %19281 = shl i64 %19278, 3
  %19282 = icmp slt i64 %19281, 0
  %19283 = shl i64 %19281, 1
  store i64 %19283, i64* %R8.i889, align 8
  %19284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19285 = zext i1 %19282 to i8
  store i8 %19285, i8* %19284, align 1
  %19286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19287 = trunc i64 %19283 to i32
  %19288 = and i32 %19287, 254
  %19289 = call i32 @llvm.ctpop.i32(i32 %19288)
  %19290 = trunc i32 %19289 to i8
  %19291 = and i8 %19290, 1
  %19292 = xor i8 %19291, 1
  store i8 %19292, i8* %19286, align 1
  %19293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19293, align 1
  %19294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19295 = icmp eq i64 %19283, 0
  %19296 = zext i1 %19295 to i8
  store i8 %19296, i8* %19294, align 1
  %19297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19298 = lshr i64 %19283, 63
  %19299 = trunc i64 %19298 to i8
  store i8 %19299, i8* %19297, align 1
  %19300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19300, align 1
  store %struct.Memory* %loadMem_40ccec, %struct.Memory** %MEMORY
  %loadMem_40ccf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19302 = getelementptr inbounds %struct.GPR, %struct.GPR* %19301, i32 0, i32 33
  %19303 = getelementptr inbounds %struct.Reg, %struct.Reg* %19302, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %19303 to i64*
  %19304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19305 = getelementptr inbounds %struct.GPR, %struct.GPR* %19304, i32 0, i32 7
  %19306 = getelementptr inbounds %struct.Reg, %struct.Reg* %19305, i32 0, i32 0
  %RDX.i886 = bitcast %union.anon* %19306 to i64*
  %19307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19308 = getelementptr inbounds %struct.GPR, %struct.GPR* %19307, i32 0, i32 17
  %19309 = getelementptr inbounds %struct.Reg, %struct.Reg* %19308, i32 0, i32 0
  %R8.i887 = bitcast %union.anon* %19309 to i64*
  %19310 = load i64, i64* %RDX.i886
  %19311 = load i64, i64* %R8.i887
  %19312 = load i64, i64* %PC.i885
  %19313 = add i64 %19312, 3
  store i64 %19313, i64* %PC.i885
  %19314 = add i64 %19311, %19310
  store i64 %19314, i64* %RDX.i886, align 8
  %19315 = icmp ult i64 %19314, %19310
  %19316 = icmp ult i64 %19314, %19311
  %19317 = or i1 %19315, %19316
  %19318 = zext i1 %19317 to i8
  %19319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19318, i8* %19319, align 1
  %19320 = trunc i64 %19314 to i32
  %19321 = and i32 %19320, 255
  %19322 = call i32 @llvm.ctpop.i32(i32 %19321)
  %19323 = trunc i32 %19322 to i8
  %19324 = and i8 %19323, 1
  %19325 = xor i8 %19324, 1
  %19326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19325, i8* %19326, align 1
  %19327 = xor i64 %19311, %19310
  %19328 = xor i64 %19327, %19314
  %19329 = lshr i64 %19328, 4
  %19330 = trunc i64 %19329 to i8
  %19331 = and i8 %19330, 1
  %19332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19331, i8* %19332, align 1
  %19333 = icmp eq i64 %19314, 0
  %19334 = zext i1 %19333 to i8
  %19335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19334, i8* %19335, align 1
  %19336 = lshr i64 %19314, 63
  %19337 = trunc i64 %19336 to i8
  %19338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19337, i8* %19338, align 1
  %19339 = lshr i64 %19310, 63
  %19340 = lshr i64 %19311, 63
  %19341 = xor i64 %19336, %19339
  %19342 = xor i64 %19336, %19340
  %19343 = add i64 %19341, %19342
  %19344 = icmp eq i64 %19343, 2
  %19345 = zext i1 %19344 to i8
  %19346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19345, i8* %19346, align 1
  store %struct.Memory* %loadMem_40ccf0, %struct.Memory** %MEMORY
  %loadMem_40ccf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19348 = getelementptr inbounds %struct.GPR, %struct.GPR* %19347, i32 0, i32 33
  %19349 = getelementptr inbounds %struct.Reg, %struct.Reg* %19348, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %19349 to i64*
  %19350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19351 = getelementptr inbounds %struct.GPR, %struct.GPR* %19350, i32 0, i32 15
  %19352 = getelementptr inbounds %struct.Reg, %struct.Reg* %19351, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %19352 to i64*
  %19353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19354 = getelementptr inbounds %struct.GPR, %struct.GPR* %19353, i32 0, i32 17
  %19355 = getelementptr inbounds %struct.Reg, %struct.Reg* %19354, i32 0, i32 0
  %R8.i884 = bitcast %union.anon* %19355 to i64*
  %19356 = load i64, i64* %RBP.i883
  %19357 = sub i64 %19356, 24
  %19358 = load i64, i64* %PC.i882
  %19359 = add i64 %19358, 4
  store i64 %19359, i64* %PC.i882
  %19360 = inttoptr i64 %19357 to i32*
  %19361 = load i32, i32* %19360
  %19362 = sext i32 %19361 to i64
  store i64 %19362, i64* %R8.i884, align 8
  store %struct.Memory* %loadMem_40ccf3, %struct.Memory** %MEMORY
  %loadMem_40ccf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19364 = getelementptr inbounds %struct.GPR, %struct.GPR* %19363, i32 0, i32 33
  %19365 = getelementptr inbounds %struct.Reg, %struct.Reg* %19364, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %19365 to i64*
  %19366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19367 = getelementptr inbounds %struct.GPR, %struct.GPR* %19366, i32 0, i32 1
  %19368 = getelementptr inbounds %struct.Reg, %struct.Reg* %19367, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %19368 to i64*
  %19369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19370 = getelementptr inbounds %struct.GPR, %struct.GPR* %19369, i32 0, i32 7
  %19371 = getelementptr inbounds %struct.Reg, %struct.Reg* %19370, i32 0, i32 0
  %RDX.i880 = bitcast %union.anon* %19371 to i64*
  %19372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19373 = getelementptr inbounds %struct.GPR, %struct.GPR* %19372, i32 0, i32 17
  %19374 = getelementptr inbounds %struct.Reg, %struct.Reg* %19373, i32 0, i32 0
  %R8.i881 = bitcast %union.anon* %19374 to i64*
  %19375 = load i64, i64* %RAX.i879
  %19376 = load i64, i64* %RDX.i880
  %19377 = load i64, i64* %R8.i881
  %19378 = mul i64 %19377, 4
  %19379 = add i64 %19378, %19376
  %19380 = load i64, i64* %PC.i878
  %19381 = add i64 %19380, 5
  store i64 %19381, i64* %PC.i878
  %19382 = inttoptr i64 %19379 to i32*
  %19383 = load i32, i32* %19382
  %19384 = shl i64 %19375, 32
  %19385 = ashr exact i64 %19384, 32
  %19386 = sext i32 %19383 to i64
  %19387 = mul i64 %19386, %19385
  %19388 = trunc i64 %19387 to i32
  %19389 = and i64 %19387, 4294967295
  store i64 %19389, i64* %RAX.i879, align 8
  %19390 = shl i64 %19387, 32
  %19391 = ashr exact i64 %19390, 32
  %19392 = icmp ne i64 %19391, %19387
  %19393 = zext i1 %19392 to i8
  %19394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19393, i8* %19394, align 1
  %19395 = and i32 %19388, 255
  %19396 = call i32 @llvm.ctpop.i32(i32 %19395)
  %19397 = trunc i32 %19396 to i8
  %19398 = and i8 %19397, 1
  %19399 = xor i8 %19398, 1
  %19400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19399, i8* %19400, align 1
  %19401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19401, align 1
  %19402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19402, align 1
  %19403 = lshr i32 %19388, 31
  %19404 = trunc i32 %19403 to i8
  %19405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19404, i8* %19405, align 1
  %19406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19393, i8* %19406, align 1
  store %struct.Memory* %loadMem_40ccf7, %struct.Memory** %MEMORY
  %loadMem_40ccfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %19407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19408 = getelementptr inbounds %struct.GPR, %struct.GPR* %19407, i32 0, i32 33
  %19409 = getelementptr inbounds %struct.Reg, %struct.Reg* %19408, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %19409 to i64*
  %19410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19411 = getelementptr inbounds %struct.GPR, %struct.GPR* %19410, i32 0, i32 7
  %19412 = getelementptr inbounds %struct.Reg, %struct.Reg* %19411, i32 0, i32 0
  %RDX.i876 = bitcast %union.anon* %19412 to i64*
  %19413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19414 = getelementptr inbounds %struct.GPR, %struct.GPR* %19413, i32 0, i32 15
  %19415 = getelementptr inbounds %struct.Reg, %struct.Reg* %19414, i32 0, i32 0
  %RBP.i877 = bitcast %union.anon* %19415 to i64*
  %19416 = load i64, i64* %RBP.i877
  %19417 = sub i64 %19416, 20
  %19418 = load i64, i64* %PC.i875
  %19419 = add i64 %19418, 4
  store i64 %19419, i64* %PC.i875
  %19420 = inttoptr i64 %19417 to i32*
  %19421 = load i32, i32* %19420
  %19422 = sext i32 %19421 to i64
  store i64 %19422, i64* %RDX.i876, align 8
  store %struct.Memory* %loadMem_40ccfc, %struct.Memory** %MEMORY
  %loadMem_40cd00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19424 = getelementptr inbounds %struct.GPR, %struct.GPR* %19423, i32 0, i32 33
  %19425 = getelementptr inbounds %struct.Reg, %struct.Reg* %19424, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %19425 to i64*
  %19426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19427 = getelementptr inbounds %struct.GPR, %struct.GPR* %19426, i32 0, i32 7
  %19428 = getelementptr inbounds %struct.Reg, %struct.Reg* %19427, i32 0, i32 0
  %RDX.i874 = bitcast %union.anon* %19428 to i64*
  %19429 = load i64, i64* %RDX.i874
  %19430 = load i64, i64* %PC.i873
  %19431 = add i64 %19430, 4
  store i64 %19431, i64* %PC.i873
  %19432 = shl i64 %19429, 3
  %19433 = icmp slt i64 %19432, 0
  %19434 = shl i64 %19432, 1
  store i64 %19434, i64* %RDX.i874, align 8
  %19435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19436 = zext i1 %19433 to i8
  store i8 %19436, i8* %19435, align 1
  %19437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19438 = trunc i64 %19434 to i32
  %19439 = and i32 %19438, 254
  %19440 = call i32 @llvm.ctpop.i32(i32 %19439)
  %19441 = trunc i32 %19440 to i8
  %19442 = and i8 %19441, 1
  %19443 = xor i8 %19442, 1
  store i8 %19443, i8* %19437, align 1
  %19444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19444, align 1
  %19445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19446 = icmp eq i64 %19434, 0
  %19447 = zext i1 %19446 to i8
  store i8 %19447, i8* %19445, align 1
  %19448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19449 = lshr i64 %19434, 63
  %19450 = trunc i64 %19449 to i8
  store i8 %19450, i8* %19448, align 1
  %19451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19451, align 1
  store %struct.Memory* %loadMem_40cd00, %struct.Memory** %MEMORY
  %loadMem_40cd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19453 = getelementptr inbounds %struct.GPR, %struct.GPR* %19452, i32 0, i32 33
  %19454 = getelementptr inbounds %struct.Reg, %struct.Reg* %19453, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %19454 to i64*
  %19455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19456 = getelementptr inbounds %struct.GPR, %struct.GPR* %19455, i32 0, i32 5
  %19457 = getelementptr inbounds %struct.Reg, %struct.Reg* %19456, i32 0, i32 0
  %RCX.i871 = bitcast %union.anon* %19457 to i64*
  %19458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19459 = getelementptr inbounds %struct.GPR, %struct.GPR* %19458, i32 0, i32 7
  %19460 = getelementptr inbounds %struct.Reg, %struct.Reg* %19459, i32 0, i32 0
  %RDX.i872 = bitcast %union.anon* %19460 to i64*
  %19461 = load i64, i64* %RCX.i871
  %19462 = load i64, i64* %RDX.i872
  %19463 = load i64, i64* %PC.i870
  %19464 = add i64 %19463, 3
  store i64 %19464, i64* %PC.i870
  %19465 = add i64 %19462, %19461
  store i64 %19465, i64* %RCX.i871, align 8
  %19466 = icmp ult i64 %19465, %19461
  %19467 = icmp ult i64 %19465, %19462
  %19468 = or i1 %19466, %19467
  %19469 = zext i1 %19468 to i8
  %19470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19469, i8* %19470, align 1
  %19471 = trunc i64 %19465 to i32
  %19472 = and i32 %19471, 255
  %19473 = call i32 @llvm.ctpop.i32(i32 %19472)
  %19474 = trunc i32 %19473 to i8
  %19475 = and i8 %19474, 1
  %19476 = xor i8 %19475, 1
  %19477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19476, i8* %19477, align 1
  %19478 = xor i64 %19462, %19461
  %19479 = xor i64 %19478, %19465
  %19480 = lshr i64 %19479, 4
  %19481 = trunc i64 %19480 to i8
  %19482 = and i8 %19481, 1
  %19483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19482, i8* %19483, align 1
  %19484 = icmp eq i64 %19465, 0
  %19485 = zext i1 %19484 to i8
  %19486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19485, i8* %19486, align 1
  %19487 = lshr i64 %19465, 63
  %19488 = trunc i64 %19487 to i8
  %19489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19488, i8* %19489, align 1
  %19490 = lshr i64 %19461, 63
  %19491 = lshr i64 %19462, 63
  %19492 = xor i64 %19487, %19490
  %19493 = xor i64 %19487, %19491
  %19494 = add i64 %19492, %19493
  %19495 = icmp eq i64 %19494, 2
  %19496 = zext i1 %19495 to i8
  %19497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19496, i8* %19497, align 1
  store %struct.Memory* %loadMem_40cd04, %struct.Memory** %MEMORY
  %loadMem_40cd07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19499 = getelementptr inbounds %struct.GPR, %struct.GPR* %19498, i32 0, i32 33
  %19500 = getelementptr inbounds %struct.Reg, %struct.Reg* %19499, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %19500 to i64*
  %19501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19502 = getelementptr inbounds %struct.GPR, %struct.GPR* %19501, i32 0, i32 7
  %19503 = getelementptr inbounds %struct.Reg, %struct.Reg* %19502, i32 0, i32 0
  %RDX.i868 = bitcast %union.anon* %19503 to i64*
  %19504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19505 = getelementptr inbounds %struct.GPR, %struct.GPR* %19504, i32 0, i32 15
  %19506 = getelementptr inbounds %struct.Reg, %struct.Reg* %19505, i32 0, i32 0
  %RBP.i869 = bitcast %union.anon* %19506 to i64*
  %19507 = load i64, i64* %RBP.i869
  %19508 = sub i64 %19507, 24
  %19509 = load i64, i64* %PC.i867
  %19510 = add i64 %19509, 4
  store i64 %19510, i64* %PC.i867
  %19511 = inttoptr i64 %19508 to i32*
  %19512 = load i32, i32* %19511
  %19513 = sext i32 %19512 to i64
  store i64 %19513, i64* %RDX.i868, align 8
  store %struct.Memory* %loadMem_40cd07, %struct.Memory** %MEMORY
  %loadMem_40cd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19515 = getelementptr inbounds %struct.GPR, %struct.GPR* %19514, i32 0, i32 33
  %19516 = getelementptr inbounds %struct.Reg, %struct.Reg* %19515, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %19516 to i64*
  %19517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19518 = getelementptr inbounds %struct.GPR, %struct.GPR* %19517, i32 0, i32 1
  %19519 = getelementptr inbounds %struct.Reg, %struct.Reg* %19518, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %19519 to i64*
  %19520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19521 = getelementptr inbounds %struct.GPR, %struct.GPR* %19520, i32 0, i32 5
  %19522 = getelementptr inbounds %struct.Reg, %struct.Reg* %19521, i32 0, i32 0
  %RCX.i865 = bitcast %union.anon* %19522 to i64*
  %19523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19524 = getelementptr inbounds %struct.GPR, %struct.GPR* %19523, i32 0, i32 7
  %19525 = getelementptr inbounds %struct.Reg, %struct.Reg* %19524, i32 0, i32 0
  %RDX.i866 = bitcast %union.anon* %19525 to i64*
  %19526 = load i64, i64* %RAX.i864
  %19527 = load i64, i64* %RCX.i865
  %19528 = load i64, i64* %RDX.i866
  %19529 = mul i64 %19528, 4
  %19530 = add i64 %19529, %19527
  %19531 = load i64, i64* %PC.i863
  %19532 = add i64 %19531, 4
  store i64 %19532, i64* %PC.i863
  %19533 = inttoptr i64 %19530 to i32*
  %19534 = load i32, i32* %19533
  %19535 = shl i64 %19526, 32
  %19536 = ashr exact i64 %19535, 32
  %19537 = sext i32 %19534 to i64
  %19538 = mul i64 %19537, %19536
  %19539 = trunc i64 %19538 to i32
  %19540 = and i64 %19538, 4294967295
  store i64 %19540, i64* %RAX.i864, align 8
  %19541 = shl i64 %19538, 32
  %19542 = ashr exact i64 %19541, 32
  %19543 = icmp ne i64 %19542, %19538
  %19544 = zext i1 %19543 to i8
  %19545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19544, i8* %19545, align 1
  %19546 = and i32 %19539, 255
  %19547 = call i32 @llvm.ctpop.i32(i32 %19546)
  %19548 = trunc i32 %19547 to i8
  %19549 = and i8 %19548, 1
  %19550 = xor i8 %19549, 1
  %19551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19550, i8* %19551, align 1
  %19552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19552, align 1
  %19553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %19553, align 1
  %19554 = lshr i32 %19539, 31
  %19555 = trunc i32 %19554 to i8
  %19556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19555, i8* %19556, align 1
  %19557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19544, i8* %19557, align 1
  store %struct.Memory* %loadMem_40cd0b, %struct.Memory** %MEMORY
  %loadMem_40cd0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19559 = getelementptr inbounds %struct.GPR, %struct.GPR* %19558, i32 0, i32 33
  %19560 = getelementptr inbounds %struct.Reg, %struct.Reg* %19559, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %19560 to i64*
  %19561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19562 = getelementptr inbounds %struct.GPR, %struct.GPR* %19561, i32 0, i32 5
  %19563 = getelementptr inbounds %struct.Reg, %struct.Reg* %19562, i32 0, i32 0
  %RCX.i861 = bitcast %union.anon* %19563 to i64*
  %19564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19565 = getelementptr inbounds %struct.GPR, %struct.GPR* %19564, i32 0, i32 15
  %19566 = getelementptr inbounds %struct.Reg, %struct.Reg* %19565, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %19566 to i64*
  %19567 = load i64, i64* %RBP.i862
  %19568 = sub i64 %19567, 188
  %19569 = load i64, i64* %PC.i860
  %19570 = add i64 %19569, 6
  store i64 %19570, i64* %PC.i860
  %19571 = inttoptr i64 %19568 to i32*
  %19572 = load i32, i32* %19571
  %19573 = zext i32 %19572 to i64
  store i64 %19573, i64* %RCX.i861, align 8
  store %struct.Memory* %loadMem_40cd0f, %struct.Memory** %MEMORY
  %loadMem_40cd15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19575 = getelementptr inbounds %struct.GPR, %struct.GPR* %19574, i32 0, i32 33
  %19576 = getelementptr inbounds %struct.Reg, %struct.Reg* %19575, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %19576 to i64*
  %19577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19578 = getelementptr inbounds %struct.GPR, %struct.GPR* %19577, i32 0, i32 5
  %19579 = getelementptr inbounds %struct.Reg, %struct.Reg* %19578, i32 0, i32 0
  %19580 = bitcast %union.anon* %19579 to %struct.anon.2*
  %CL.i857 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %19580, i32 0, i32 0
  %19581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19582 = getelementptr inbounds %struct.GPR, %struct.GPR* %19581, i32 0, i32 1
  %19583 = getelementptr inbounds %struct.Reg, %struct.Reg* %19582, i32 0, i32 0
  %RAX.i858 = bitcast %union.anon* %19583 to i64*
  %19584 = load i64, i64* %RAX.i858
  %19585 = load i8, i8* %CL.i857
  %19586 = zext i8 %19585 to i64
  %19587 = load i64, i64* %PC.i856
  %19588 = add i64 %19587, 2
  store i64 %19588, i64* %PC.i856
  %19589 = trunc i64 %19586 to i5
  switch i5 %19589, label %19596 [
    i5 0, label %routine_shll__cl___eax.exit859
    i5 1, label %19590
  ]

; <label>:19590:                                  ; preds = %block_.L_40cc7b
  %19591 = trunc i64 %19584 to i32
  %19592 = shl i32 %19591, 1
  %19593 = icmp slt i32 %19591, 0
  %19594 = icmp slt i32 %19592, 0
  %19595 = xor i1 %19593, %19594
  br label %19605

; <label>:19596:                                  ; preds = %block_.L_40cc7b
  %19597 = and i64 %19586, 31
  %19598 = add i64 %19597, 4294967295
  %19599 = and i64 %19584, 4294967295
  %19600 = and i64 %19598, 4294967295
  %19601 = shl i64 %19599, %19600
  %19602 = trunc i64 %19601 to i32
  %19603 = icmp slt i32 %19602, 0
  %19604 = shl i32 %19602, 1
  br label %19605

; <label>:19605:                                  ; preds = %19596, %19590
  %19606 = phi i1 [ %19593, %19590 ], [ %19603, %19596 ]
  %19607 = phi i1 [ %19595, %19590 ], [ false, %19596 ]
  %19608 = phi i32 [ %19592, %19590 ], [ %19604, %19596 ]
  %19609 = zext i32 %19608 to i64
  store i64 %19609, i64* %RAX.i858, align 8
  %19610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19611 = zext i1 %19606 to i8
  store i8 %19611, i8* %19610, align 1
  %19612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19613 = and i32 %19608, 254
  %19614 = call i32 @llvm.ctpop.i32(i32 %19613)
  %19615 = trunc i32 %19614 to i8
  %19616 = and i8 %19615, 1
  %19617 = xor i8 %19616, 1
  store i8 %19617, i8* %19612, align 1
  %19618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19618, align 1
  %19619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19620 = icmp eq i32 %19608, 0
  %19621 = zext i1 %19620 to i8
  store i8 %19621, i8* %19619, align 1
  %19622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19623 = lshr i32 %19608, 31
  %19624 = trunc i32 %19623 to i8
  store i8 %19624, i8* %19622, align 1
  %19625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19626 = zext i1 %19607 to i8
  store i8 %19626, i8* %19625, align 1
  br label %routine_shll__cl___eax.exit859

routine_shll__cl___eax.exit859:                   ; preds = %block_.L_40cc7b, %19605
  store %struct.Memory* %loadMem_40cd15, %struct.Memory** %MEMORY
  %loadMem_40cd17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19628 = getelementptr inbounds %struct.GPR, %struct.GPR* %19627, i32 0, i32 33
  %19629 = getelementptr inbounds %struct.Reg, %struct.Reg* %19628, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %19629 to i64*
  %19630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19631 = getelementptr inbounds %struct.GPR, %struct.GPR* %19630, i32 0, i32 1
  %19632 = getelementptr inbounds %struct.Reg, %struct.Reg* %19631, i32 0, i32 0
  %RAX.i855 = bitcast %union.anon* %19632 to i64*
  %19633 = load i64, i64* %RAX.i855
  %19634 = load i64, i64* %PC.i854
  %19635 = add i64 %19634, 3
  store i64 %19635, i64* %PC.i854
  %19636 = shl i64 %19633, 32
  %19637 = ashr exact i64 %19636, 32
  %19638 = ashr i64 %19637, 5
  %19639 = lshr i64 %19638, 1
  %19640 = trunc i64 %19638 to i8
  %19641 = and i8 %19640, 1
  %19642 = trunc i64 %19639 to i32
  %19643 = and i64 %19639, 4294967295
  store i64 %19643, i64* %RAX.i855, align 8
  %19644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19641, i8* %19644, align 1
  %19645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19646 = and i32 %19642, 255
  %19647 = call i32 @llvm.ctpop.i32(i32 %19646)
  %19648 = trunc i32 %19647 to i8
  %19649 = and i8 %19648, 1
  %19650 = xor i8 %19649, 1
  store i8 %19650, i8* %19645, align 1
  %19651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19651, align 1
  %19652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19653 = icmp eq i32 %19642, 0
  %19654 = zext i1 %19653 to i8
  store i8 %19654, i8* %19652, align 1
  %19655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19656 = lshr i32 %19642, 31
  %19657 = trunc i32 %19656 to i8
  store i8 %19657, i8* %19655, align 1
  %19658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19658, align 1
  store %struct.Memory* %loadMem_40cd17, %struct.Memory** %MEMORY
  %loadMem_40cd1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19660 = getelementptr inbounds %struct.GPR, %struct.GPR* %19659, i32 0, i32 33
  %19661 = getelementptr inbounds %struct.Reg, %struct.Reg* %19660, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %19661 to i64*
  %19662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19663 = getelementptr inbounds %struct.GPR, %struct.GPR* %19662, i32 0, i32 1
  %19664 = getelementptr inbounds %struct.Reg, %struct.Reg* %19663, i32 0, i32 0
  %EAX.i852 = bitcast %union.anon* %19664 to i32*
  %19665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19666 = getelementptr inbounds %struct.GPR, %struct.GPR* %19665, i32 0, i32 15
  %19667 = getelementptr inbounds %struct.Reg, %struct.Reg* %19666, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %19667 to i64*
  %19668 = load i64, i64* %RBP.i853
  %19669 = sub i64 %19668, 36
  %19670 = load i32, i32* %EAX.i852
  %19671 = zext i32 %19670 to i64
  %19672 = load i64, i64* %PC.i851
  %19673 = add i64 %19672, 3
  store i64 %19673, i64* %PC.i851
  %19674 = inttoptr i64 %19669 to i32*
  store i32 %19670, i32* %19674
  store %struct.Memory* %loadMem_40cd1a, %struct.Memory** %MEMORY
  br label %block_.L_40cd1d

block_.L_40cd1d:                                  ; preds = %routine_shll__cl___eax.exit859, %block_.L_40cc1d
  %loadMem_40cd1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19676 = getelementptr inbounds %struct.GPR, %struct.GPR* %19675, i32 0, i32 33
  %19677 = getelementptr inbounds %struct.Reg, %struct.Reg* %19676, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %19677 to i64*
  %19678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19679 = getelementptr inbounds %struct.GPR, %struct.GPR* %19678, i32 0, i32 1
  %19680 = getelementptr inbounds %struct.Reg, %struct.Reg* %19679, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %19680 to i64*
  %19681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19682 = getelementptr inbounds %struct.GPR, %struct.GPR* %19681, i32 0, i32 15
  %19683 = getelementptr inbounds %struct.Reg, %struct.Reg* %19682, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %19683 to i64*
  %19684 = load i64, i64* %RBP.i850
  %19685 = sub i64 %19684, 176
  %19686 = load i64, i64* %PC.i848
  %19687 = add i64 %19686, 7
  store i64 %19687, i64* %PC.i848
  store i64 %19685, i64* %RAX.i849, align 8
  store %struct.Memory* %loadMem_40cd1d, %struct.Memory** %MEMORY
  %loadMem_40cd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19689 = getelementptr inbounds %struct.GPR, %struct.GPR* %19688, i32 0, i32 33
  %19690 = getelementptr inbounds %struct.Reg, %struct.Reg* %19689, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %19690 to i64*
  %19691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19692 = getelementptr inbounds %struct.GPR, %struct.GPR* %19691, i32 0, i32 5
  %19693 = getelementptr inbounds %struct.Reg, %struct.Reg* %19692, i32 0, i32 0
  %RCX.i846 = bitcast %union.anon* %19693 to i64*
  %19694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19695 = getelementptr inbounds %struct.GPR, %struct.GPR* %19694, i32 0, i32 15
  %19696 = getelementptr inbounds %struct.Reg, %struct.Reg* %19695, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %19696 to i64*
  %19697 = load i64, i64* %RBP.i847
  %19698 = sub i64 %19697, 20
  %19699 = load i64, i64* %PC.i845
  %19700 = add i64 %19699, 4
  store i64 %19700, i64* %PC.i845
  %19701 = inttoptr i64 %19698 to i32*
  %19702 = load i32, i32* %19701
  %19703 = sext i32 %19702 to i64
  store i64 %19703, i64* %RCX.i846, align 8
  store %struct.Memory* %loadMem_40cd24, %struct.Memory** %MEMORY
  %loadMem_40cd28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19705 = getelementptr inbounds %struct.GPR, %struct.GPR* %19704, i32 0, i32 33
  %19706 = getelementptr inbounds %struct.Reg, %struct.Reg* %19705, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %19706 to i64*
  %19707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19708 = getelementptr inbounds %struct.GPR, %struct.GPR* %19707, i32 0, i32 5
  %19709 = getelementptr inbounds %struct.Reg, %struct.Reg* %19708, i32 0, i32 0
  %RCX.i844 = bitcast %union.anon* %19709 to i64*
  %19710 = load i64, i64* %RCX.i844
  %19711 = load i64, i64* %PC.i843
  %19712 = add i64 %19711, 4
  store i64 %19712, i64* %PC.i843
  %19713 = shl i64 %19710, 3
  %19714 = icmp slt i64 %19713, 0
  %19715 = shl i64 %19713, 1
  store i64 %19715, i64* %RCX.i844, align 8
  %19716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19717 = zext i1 %19714 to i8
  store i8 %19717, i8* %19716, align 1
  %19718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19719 = trunc i64 %19715 to i32
  %19720 = and i32 %19719, 254
  %19721 = call i32 @llvm.ctpop.i32(i32 %19720)
  %19722 = trunc i32 %19721 to i8
  %19723 = and i8 %19722, 1
  %19724 = xor i8 %19723, 1
  store i8 %19724, i8* %19718, align 1
  %19725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19725, align 1
  %19726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19727 = icmp eq i64 %19715, 0
  %19728 = zext i1 %19727 to i8
  store i8 %19728, i8* %19726, align 1
  %19729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19730 = lshr i64 %19715, 63
  %19731 = trunc i64 %19730 to i8
  store i8 %19731, i8* %19729, align 1
  %19732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19732, align 1
  store %struct.Memory* %loadMem_40cd28, %struct.Memory** %MEMORY
  %loadMem_40cd2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19734 = getelementptr inbounds %struct.GPR, %struct.GPR* %19733, i32 0, i32 33
  %19735 = getelementptr inbounds %struct.Reg, %struct.Reg* %19734, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %19735 to i64*
  %19736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19737 = getelementptr inbounds %struct.GPR, %struct.GPR* %19736, i32 0, i32 1
  %19738 = getelementptr inbounds %struct.Reg, %struct.Reg* %19737, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %19738 to i64*
  %19739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19740 = getelementptr inbounds %struct.GPR, %struct.GPR* %19739, i32 0, i32 5
  %19741 = getelementptr inbounds %struct.Reg, %struct.Reg* %19740, i32 0, i32 0
  %RCX.i842 = bitcast %union.anon* %19741 to i64*
  %19742 = load i64, i64* %RAX.i841
  %19743 = load i64, i64* %RCX.i842
  %19744 = load i64, i64* %PC.i840
  %19745 = add i64 %19744, 3
  store i64 %19745, i64* %PC.i840
  %19746 = add i64 %19743, %19742
  store i64 %19746, i64* %RAX.i841, align 8
  %19747 = icmp ult i64 %19746, %19742
  %19748 = icmp ult i64 %19746, %19743
  %19749 = or i1 %19747, %19748
  %19750 = zext i1 %19749 to i8
  %19751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19750, i8* %19751, align 1
  %19752 = trunc i64 %19746 to i32
  %19753 = and i32 %19752, 255
  %19754 = call i32 @llvm.ctpop.i32(i32 %19753)
  %19755 = trunc i32 %19754 to i8
  %19756 = and i8 %19755, 1
  %19757 = xor i8 %19756, 1
  %19758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19757, i8* %19758, align 1
  %19759 = xor i64 %19743, %19742
  %19760 = xor i64 %19759, %19746
  %19761 = lshr i64 %19760, 4
  %19762 = trunc i64 %19761 to i8
  %19763 = and i8 %19762, 1
  %19764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19763, i8* %19764, align 1
  %19765 = icmp eq i64 %19746, 0
  %19766 = zext i1 %19765 to i8
  %19767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19766, i8* %19767, align 1
  %19768 = lshr i64 %19746, 63
  %19769 = trunc i64 %19768 to i8
  %19770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19769, i8* %19770, align 1
  %19771 = lshr i64 %19742, 63
  %19772 = lshr i64 %19743, 63
  %19773 = xor i64 %19768, %19771
  %19774 = xor i64 %19768, %19772
  %19775 = add i64 %19773, %19774
  %19776 = icmp eq i64 %19775, 2
  %19777 = zext i1 %19776 to i8
  %19778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19777, i8* %19778, align 1
  store %struct.Memory* %loadMem_40cd2c, %struct.Memory** %MEMORY
  %loadMem_40cd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19780 = getelementptr inbounds %struct.GPR, %struct.GPR* %19779, i32 0, i32 33
  %19781 = getelementptr inbounds %struct.Reg, %struct.Reg* %19780, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %19781 to i64*
  %19782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19783 = getelementptr inbounds %struct.GPR, %struct.GPR* %19782, i32 0, i32 5
  %19784 = getelementptr inbounds %struct.Reg, %struct.Reg* %19783, i32 0, i32 0
  %RCX.i838 = bitcast %union.anon* %19784 to i64*
  %19785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19786 = getelementptr inbounds %struct.GPR, %struct.GPR* %19785, i32 0, i32 15
  %19787 = getelementptr inbounds %struct.Reg, %struct.Reg* %19786, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %19787 to i64*
  %19788 = load i64, i64* %RBP.i839
  %19789 = sub i64 %19788, 24
  %19790 = load i64, i64* %PC.i837
  %19791 = add i64 %19790, 4
  store i64 %19791, i64* %PC.i837
  %19792 = inttoptr i64 %19789 to i32*
  %19793 = load i32, i32* %19792
  %19794 = sext i32 %19793 to i64
  store i64 %19794, i64* %RCX.i838, align 8
  store %struct.Memory* %loadMem_40cd2f, %struct.Memory** %MEMORY
  %loadMem_40cd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19796 = getelementptr inbounds %struct.GPR, %struct.GPR* %19795, i32 0, i32 33
  %19797 = getelementptr inbounds %struct.Reg, %struct.Reg* %19796, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %19797 to i64*
  %19798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19799 = getelementptr inbounds %struct.GPR, %struct.GPR* %19798, i32 0, i32 1
  %19800 = getelementptr inbounds %struct.Reg, %struct.Reg* %19799, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %19800 to i64*
  %19801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19802 = getelementptr inbounds %struct.GPR, %struct.GPR* %19801, i32 0, i32 5
  %19803 = getelementptr inbounds %struct.Reg, %struct.Reg* %19802, i32 0, i32 0
  %RCX.i835 = bitcast %union.anon* %19803 to i64*
  %19804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19805 = getelementptr inbounds %struct.GPR, %struct.GPR* %19804, i32 0, i32 7
  %19806 = getelementptr inbounds %struct.Reg, %struct.Reg* %19805, i32 0, i32 0
  %RDX.i836 = bitcast %union.anon* %19806 to i64*
  %19807 = load i64, i64* %RAX.i834
  %19808 = load i64, i64* %RCX.i835
  %19809 = mul i64 %19808, 4
  %19810 = add i64 %19809, %19807
  %19811 = load i64, i64* %PC.i833
  %19812 = add i64 %19811, 3
  store i64 %19812, i64* %PC.i833
  %19813 = inttoptr i64 %19810 to i32*
  %19814 = load i32, i32* %19813
  %19815 = zext i32 %19814 to i64
  store i64 %19815, i64* %RDX.i836, align 8
  store %struct.Memory* %loadMem_40cd33, %struct.Memory** %MEMORY
  %loadMem_40cd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19817 = getelementptr inbounds %struct.GPR, %struct.GPR* %19816, i32 0, i32 33
  %19818 = getelementptr inbounds %struct.Reg, %struct.Reg* %19817, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %19818 to i64*
  %19819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19820 = getelementptr inbounds %struct.GPR, %struct.GPR* %19819, i32 0, i32 7
  %19821 = getelementptr inbounds %struct.Reg, %struct.Reg* %19820, i32 0, i32 0
  %RDX.i831 = bitcast %union.anon* %19821 to i64*
  %19822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19823 = getelementptr inbounds %struct.GPR, %struct.GPR* %19822, i32 0, i32 15
  %19824 = getelementptr inbounds %struct.Reg, %struct.Reg* %19823, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %19824 to i64*
  %19825 = load i64, i64* %RDX.i831
  %19826 = load i64, i64* %RBP.i832
  %19827 = sub i64 %19826, 36
  %19828 = load i64, i64* %PC.i830
  %19829 = add i64 %19828, 3
  store i64 %19829, i64* %PC.i830
  %19830 = trunc i64 %19825 to i32
  %19831 = inttoptr i64 %19827 to i32*
  %19832 = load i32, i32* %19831
  %19833 = add i32 %19832, %19830
  %19834 = zext i32 %19833 to i64
  store i64 %19834, i64* %RDX.i831, align 8
  %19835 = icmp ult i32 %19833, %19830
  %19836 = icmp ult i32 %19833, %19832
  %19837 = or i1 %19835, %19836
  %19838 = zext i1 %19837 to i8
  %19839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19838, i8* %19839, align 1
  %19840 = and i32 %19833, 255
  %19841 = call i32 @llvm.ctpop.i32(i32 %19840)
  %19842 = trunc i32 %19841 to i8
  %19843 = and i8 %19842, 1
  %19844 = xor i8 %19843, 1
  %19845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19844, i8* %19845, align 1
  %19846 = xor i32 %19832, %19830
  %19847 = xor i32 %19846, %19833
  %19848 = lshr i32 %19847, 4
  %19849 = trunc i32 %19848 to i8
  %19850 = and i8 %19849, 1
  %19851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19850, i8* %19851, align 1
  %19852 = icmp eq i32 %19833, 0
  %19853 = zext i1 %19852 to i8
  %19854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19853, i8* %19854, align 1
  %19855 = lshr i32 %19833, 31
  %19856 = trunc i32 %19855 to i8
  %19857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19856, i8* %19857, align 1
  %19858 = lshr i32 %19830, 31
  %19859 = lshr i32 %19832, 31
  %19860 = xor i32 %19855, %19858
  %19861 = xor i32 %19855, %19859
  %19862 = add i32 %19860, %19861
  %19863 = icmp eq i32 %19862, 2
  %19864 = zext i1 %19863 to i8
  %19865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19864, i8* %19865, align 1
  store %struct.Memory* %loadMem_40cd36, %struct.Memory** %MEMORY
  %loadMem_40cd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19867 = getelementptr inbounds %struct.GPR, %struct.GPR* %19866, i32 0, i32 33
  %19868 = getelementptr inbounds %struct.Reg, %struct.Reg* %19867, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %19868 to i64*
  %19869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19870 = getelementptr inbounds %struct.GPR, %struct.GPR* %19869, i32 0, i32 7
  %19871 = getelementptr inbounds %struct.Reg, %struct.Reg* %19870, i32 0, i32 0
  %EDX.i828 = bitcast %union.anon* %19871 to i32*
  %19872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19873 = getelementptr inbounds %struct.GPR, %struct.GPR* %19872, i32 0, i32 15
  %19874 = getelementptr inbounds %struct.Reg, %struct.Reg* %19873, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %19874 to i64*
  %19875 = load i64, i64* %RBP.i829
  %19876 = sub i64 %19875, 36
  %19877 = load i32, i32* %EDX.i828
  %19878 = zext i32 %19877 to i64
  %19879 = load i64, i64* %PC.i827
  %19880 = add i64 %19879, 3
  store i64 %19880, i64* %PC.i827
  %19881 = inttoptr i64 %19876 to i32*
  store i32 %19877, i32* %19881
  store %struct.Memory* %loadMem_40cd39, %struct.Memory** %MEMORY
  %loadMem_40cd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19883 = getelementptr inbounds %struct.GPR, %struct.GPR* %19882, i32 0, i32 33
  %19884 = getelementptr inbounds %struct.Reg, %struct.Reg* %19883, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %19884 to i64*
  %19885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19886 = getelementptr inbounds %struct.GPR, %struct.GPR* %19885, i32 0, i32 11
  %19887 = getelementptr inbounds %struct.Reg, %struct.Reg* %19886, i32 0, i32 0
  %RDI.i825 = bitcast %union.anon* %19887 to i64*
  %19888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19889 = getelementptr inbounds %struct.GPR, %struct.GPR* %19888, i32 0, i32 15
  %19890 = getelementptr inbounds %struct.Reg, %struct.Reg* %19889, i32 0, i32 0
  %RBP.i826 = bitcast %union.anon* %19890 to i64*
  %19891 = load i64, i64* %RBP.i826
  %19892 = sub i64 %19891, 36
  %19893 = load i64, i64* %PC.i824
  %19894 = add i64 %19893, 3
  store i64 %19894, i64* %PC.i824
  %19895 = inttoptr i64 %19892 to i32*
  %19896 = load i32, i32* %19895
  %19897 = zext i32 %19896 to i64
  store i64 %19897, i64* %RDI.i825, align 8
  store %struct.Memory* %loadMem_40cd3c, %struct.Memory** %MEMORY
  %loadMem1_40cd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19899 = getelementptr inbounds %struct.GPR, %struct.GPR* %19898, i32 0, i32 33
  %19900 = getelementptr inbounds %struct.Reg, %struct.Reg* %19899, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %19900 to i64*
  %19901 = load i64, i64* %PC.i823
  %19902 = add i64 %19901, -48447
  %19903 = load i64, i64* %PC.i823
  %19904 = add i64 %19903, 5
  %19905 = load i64, i64* %PC.i823
  %19906 = add i64 %19905, 5
  store i64 %19906, i64* %PC.i823
  %19907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19908 = load i64, i64* %19907, align 8
  %19909 = add i64 %19908, -8
  %19910 = inttoptr i64 %19909 to i64*
  store i64 %19904, i64* %19910
  store i64 %19909, i64* %19907, align 8
  %19911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19902, i64* %19911, align 8
  store %struct.Memory* %loadMem1_40cd3f, %struct.Memory** %MEMORY
  %loadMem2_40cd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cd3f = load i64, i64* %3
  %19912 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40cd3f)
  store %struct.Memory* %19912, %struct.Memory** %MEMORY
  %loadMem_40cd44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19914 = getelementptr inbounds %struct.GPR, %struct.GPR* %19913, i32 0, i32 33
  %19915 = getelementptr inbounds %struct.Reg, %struct.Reg* %19914, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %19915 to i64*
  %19916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19917 = getelementptr inbounds %struct.GPR, %struct.GPR* %19916, i32 0, i32 5
  %19918 = getelementptr inbounds %struct.Reg, %struct.Reg* %19917, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %19918 to i64*
  %19919 = load i64, i64* %PC.i818
  %19920 = add i64 %19919, 10
  store i64 %19920, i64* %PC.i818
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %RCX.i819, align 8
  store %struct.Memory* %loadMem_40cd44, %struct.Memory** %MEMORY
  %loadMem_40cd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19922 = getelementptr inbounds %struct.GPR, %struct.GPR* %19921, i32 0, i32 33
  %19923 = getelementptr inbounds %struct.Reg, %struct.Reg* %19922, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %19923 to i64*
  %19924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19925 = getelementptr inbounds %struct.GPR, %struct.GPR* %19924, i32 0, i32 9
  %19926 = getelementptr inbounds %struct.Reg, %struct.Reg* %19925, i32 0, i32 0
  %RSI.i816 = bitcast %union.anon* %19926 to i64*
  %19927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19928 = getelementptr inbounds %struct.GPR, %struct.GPR* %19927, i32 0, i32 15
  %19929 = getelementptr inbounds %struct.Reg, %struct.Reg* %19928, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %19929 to i64*
  %19930 = load i64, i64* %RBP.i817
  %19931 = sub i64 %19930, 204
  %19932 = load i64, i64* %PC.i815
  %19933 = add i64 %19932, 7
  store i64 %19933, i64* %PC.i815
  %19934 = inttoptr i64 %19931 to i32*
  %19935 = load i32, i32* %19934
  %19936 = sext i32 %19935 to i64
  store i64 %19936, i64* %RSI.i816, align 8
  store %struct.Memory* %loadMem_40cd4e, %struct.Memory** %MEMORY
  %loadMem_40cd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19938 = getelementptr inbounds %struct.GPR, %struct.GPR* %19937, i32 0, i32 33
  %19939 = getelementptr inbounds %struct.Reg, %struct.Reg* %19938, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %19939 to i64*
  %19940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19941 = getelementptr inbounds %struct.GPR, %struct.GPR* %19940, i32 0, i32 9
  %19942 = getelementptr inbounds %struct.Reg, %struct.Reg* %19941, i32 0, i32 0
  %RSI.i814 = bitcast %union.anon* %19942 to i64*
  %19943 = load i64, i64* %RSI.i814
  %19944 = load i64, i64* %PC.i813
  %19945 = add i64 %19944, 4
  store i64 %19945, i64* %PC.i813
  %19946 = shl i64 %19943, 5
  %19947 = icmp slt i64 %19946, 0
  %19948 = shl i64 %19946, 1
  store i64 %19948, i64* %RSI.i814, align 8
  %19949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19950 = zext i1 %19947 to i8
  store i8 %19950, i8* %19949, align 1
  %19951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19952 = trunc i64 %19948 to i32
  %19953 = and i32 %19952, 254
  %19954 = call i32 @llvm.ctpop.i32(i32 %19953)
  %19955 = trunc i32 %19954 to i8
  %19956 = and i8 %19955, 1
  %19957 = xor i8 %19956, 1
  store i8 %19957, i8* %19951, align 1
  %19958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19958, align 1
  %19959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19960 = icmp eq i64 %19948, 0
  %19961 = zext i1 %19960 to i8
  store i8 %19961, i8* %19959, align 1
  %19962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19963 = lshr i64 %19948, 63
  %19964 = trunc i64 %19963 to i8
  store i8 %19964, i8* %19962, align 1
  %19965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19965, align 1
  store %struct.Memory* %loadMem_40cd55, %struct.Memory** %MEMORY
  %loadMem_40cd59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19967 = getelementptr inbounds %struct.GPR, %struct.GPR* %19966, i32 0, i32 33
  %19968 = getelementptr inbounds %struct.Reg, %struct.Reg* %19967, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %19968 to i64*
  %19969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19970 = getelementptr inbounds %struct.GPR, %struct.GPR* %19969, i32 0, i32 5
  %19971 = getelementptr inbounds %struct.Reg, %struct.Reg* %19970, i32 0, i32 0
  %RCX.i811 = bitcast %union.anon* %19971 to i64*
  %19972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19973 = getelementptr inbounds %struct.GPR, %struct.GPR* %19972, i32 0, i32 9
  %19974 = getelementptr inbounds %struct.Reg, %struct.Reg* %19973, i32 0, i32 0
  %RSI.i812 = bitcast %union.anon* %19974 to i64*
  %19975 = load i64, i64* %RCX.i811
  %19976 = load i64, i64* %RSI.i812
  %19977 = load i64, i64* %PC.i810
  %19978 = add i64 %19977, 3
  store i64 %19978, i64* %PC.i810
  %19979 = add i64 %19976, %19975
  store i64 %19979, i64* %RCX.i811, align 8
  %19980 = icmp ult i64 %19979, %19975
  %19981 = icmp ult i64 %19979, %19976
  %19982 = or i1 %19980, %19981
  %19983 = zext i1 %19982 to i8
  %19984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19983, i8* %19984, align 1
  %19985 = trunc i64 %19979 to i32
  %19986 = and i32 %19985, 255
  %19987 = call i32 @llvm.ctpop.i32(i32 %19986)
  %19988 = trunc i32 %19987 to i8
  %19989 = and i8 %19988, 1
  %19990 = xor i8 %19989, 1
  %19991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19990, i8* %19991, align 1
  %19992 = xor i64 %19976, %19975
  %19993 = xor i64 %19992, %19979
  %19994 = lshr i64 %19993, 4
  %19995 = trunc i64 %19994 to i8
  %19996 = and i8 %19995, 1
  %19997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19996, i8* %19997, align 1
  %19998 = icmp eq i64 %19979, 0
  %19999 = zext i1 %19998 to i8
  %20000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19999, i8* %20000, align 1
  %20001 = lshr i64 %19979, 63
  %20002 = trunc i64 %20001 to i8
  %20003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20002, i8* %20003, align 1
  %20004 = lshr i64 %19975, 63
  %20005 = lshr i64 %19976, 63
  %20006 = xor i64 %20001, %20004
  %20007 = xor i64 %20001, %20005
  %20008 = add i64 %20006, %20007
  %20009 = icmp eq i64 %20008, 2
  %20010 = zext i1 %20009 to i8
  %20011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20010, i8* %20011, align 1
  store %struct.Memory* %loadMem_40cd59, %struct.Memory** %MEMORY
  %loadMem_40cd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20013 = getelementptr inbounds %struct.GPR, %struct.GPR* %20012, i32 0, i32 33
  %20014 = getelementptr inbounds %struct.Reg, %struct.Reg* %20013, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %20014 to i64*
  %20015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20016 = getelementptr inbounds %struct.GPR, %struct.GPR* %20015, i32 0, i32 9
  %20017 = getelementptr inbounds %struct.Reg, %struct.Reg* %20016, i32 0, i32 0
  %RSI.i808 = bitcast %union.anon* %20017 to i64*
  %20018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20019 = getelementptr inbounds %struct.GPR, %struct.GPR* %20018, i32 0, i32 15
  %20020 = getelementptr inbounds %struct.Reg, %struct.Reg* %20019, i32 0, i32 0
  %RBP.i809 = bitcast %union.anon* %20020 to i64*
  %20021 = load i64, i64* %RBP.i809
  %20022 = sub i64 %20021, 20
  %20023 = load i64, i64* %PC.i807
  %20024 = add i64 %20023, 4
  store i64 %20024, i64* %PC.i807
  %20025 = inttoptr i64 %20022 to i32*
  %20026 = load i32, i32* %20025
  %20027 = sext i32 %20026 to i64
  store i64 %20027, i64* %RSI.i808, align 8
  store %struct.Memory* %loadMem_40cd5c, %struct.Memory** %MEMORY
  %loadMem_40cd60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20029 = getelementptr inbounds %struct.GPR, %struct.GPR* %20028, i32 0, i32 33
  %20030 = getelementptr inbounds %struct.Reg, %struct.Reg* %20029, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %20030 to i64*
  %20031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20032 = getelementptr inbounds %struct.GPR, %struct.GPR* %20031, i32 0, i32 9
  %20033 = getelementptr inbounds %struct.Reg, %struct.Reg* %20032, i32 0, i32 0
  %RSI.i806 = bitcast %union.anon* %20033 to i64*
  %20034 = load i64, i64* %RSI.i806
  %20035 = load i64, i64* %PC.i805
  %20036 = add i64 %20035, 4
  store i64 %20036, i64* %PC.i805
  %20037 = shl i64 %20034, 3
  %20038 = icmp slt i64 %20037, 0
  %20039 = shl i64 %20037, 1
  store i64 %20039, i64* %RSI.i806, align 8
  %20040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20041 = zext i1 %20038 to i8
  store i8 %20041, i8* %20040, align 1
  %20042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20043 = trunc i64 %20039 to i32
  %20044 = and i32 %20043, 254
  %20045 = call i32 @llvm.ctpop.i32(i32 %20044)
  %20046 = trunc i32 %20045 to i8
  %20047 = and i8 %20046, 1
  %20048 = xor i8 %20047, 1
  store i8 %20048, i8* %20042, align 1
  %20049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20049, align 1
  %20050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20051 = icmp eq i64 %20039, 0
  %20052 = zext i1 %20051 to i8
  store i8 %20052, i8* %20050, align 1
  %20053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20054 = lshr i64 %20039, 63
  %20055 = trunc i64 %20054 to i8
  store i8 %20055, i8* %20053, align 1
  %20056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20056, align 1
  store %struct.Memory* %loadMem_40cd60, %struct.Memory** %MEMORY
  %loadMem_40cd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20058 = getelementptr inbounds %struct.GPR, %struct.GPR* %20057, i32 0, i32 33
  %20059 = getelementptr inbounds %struct.Reg, %struct.Reg* %20058, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %20059 to i64*
  %20060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20061 = getelementptr inbounds %struct.GPR, %struct.GPR* %20060, i32 0, i32 5
  %20062 = getelementptr inbounds %struct.Reg, %struct.Reg* %20061, i32 0, i32 0
  %RCX.i803 = bitcast %union.anon* %20062 to i64*
  %20063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20064 = getelementptr inbounds %struct.GPR, %struct.GPR* %20063, i32 0, i32 9
  %20065 = getelementptr inbounds %struct.Reg, %struct.Reg* %20064, i32 0, i32 0
  %RSI.i804 = bitcast %union.anon* %20065 to i64*
  %20066 = load i64, i64* %RCX.i803
  %20067 = load i64, i64* %RSI.i804
  %20068 = load i64, i64* %PC.i802
  %20069 = add i64 %20068, 3
  store i64 %20069, i64* %PC.i802
  %20070 = add i64 %20067, %20066
  store i64 %20070, i64* %RCX.i803, align 8
  %20071 = icmp ult i64 %20070, %20066
  %20072 = icmp ult i64 %20070, %20067
  %20073 = or i1 %20071, %20072
  %20074 = zext i1 %20073 to i8
  %20075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20074, i8* %20075, align 1
  %20076 = trunc i64 %20070 to i32
  %20077 = and i32 %20076, 255
  %20078 = call i32 @llvm.ctpop.i32(i32 %20077)
  %20079 = trunc i32 %20078 to i8
  %20080 = and i8 %20079, 1
  %20081 = xor i8 %20080, 1
  %20082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20081, i8* %20082, align 1
  %20083 = xor i64 %20067, %20066
  %20084 = xor i64 %20083, %20070
  %20085 = lshr i64 %20084, 4
  %20086 = trunc i64 %20085 to i8
  %20087 = and i8 %20086, 1
  %20088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20087, i8* %20088, align 1
  %20089 = icmp eq i64 %20070, 0
  %20090 = zext i1 %20089 to i8
  %20091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20090, i8* %20091, align 1
  %20092 = lshr i64 %20070, 63
  %20093 = trunc i64 %20092 to i8
  %20094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20093, i8* %20094, align 1
  %20095 = lshr i64 %20066, 63
  %20096 = lshr i64 %20067, 63
  %20097 = xor i64 %20092, %20095
  %20098 = xor i64 %20092, %20096
  %20099 = add i64 %20097, %20098
  %20100 = icmp eq i64 %20099, 2
  %20101 = zext i1 %20100 to i8
  %20102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20101, i8* %20102, align 1
  store %struct.Memory* %loadMem_40cd64, %struct.Memory** %MEMORY
  %loadMem_40cd67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20104 = getelementptr inbounds %struct.GPR, %struct.GPR* %20103, i32 0, i32 33
  %20105 = getelementptr inbounds %struct.Reg, %struct.Reg* %20104, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %20105 to i64*
  %20106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20107 = getelementptr inbounds %struct.GPR, %struct.GPR* %20106, i32 0, i32 9
  %20108 = getelementptr inbounds %struct.Reg, %struct.Reg* %20107, i32 0, i32 0
  %RSI.i800 = bitcast %union.anon* %20108 to i64*
  %20109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20110 = getelementptr inbounds %struct.GPR, %struct.GPR* %20109, i32 0, i32 15
  %20111 = getelementptr inbounds %struct.Reg, %struct.Reg* %20110, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %20111 to i64*
  %20112 = load i64, i64* %RBP.i801
  %20113 = sub i64 %20112, 24
  %20114 = load i64, i64* %PC.i799
  %20115 = add i64 %20114, 4
  store i64 %20115, i64* %PC.i799
  %20116 = inttoptr i64 %20113 to i32*
  %20117 = load i32, i32* %20116
  %20118 = sext i32 %20117 to i64
  store i64 %20118, i64* %RSI.i800, align 8
  store %struct.Memory* %loadMem_40cd67, %struct.Memory** %MEMORY
  %loadMem_40cd6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20120 = getelementptr inbounds %struct.GPR, %struct.GPR* %20119, i32 0, i32 33
  %20121 = getelementptr inbounds %struct.Reg, %struct.Reg* %20120, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %20121 to i64*
  %20122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20123 = getelementptr inbounds %struct.GPR, %struct.GPR* %20122, i32 0, i32 1
  %20124 = getelementptr inbounds %struct.Reg, %struct.Reg* %20123, i32 0, i32 0
  %RAX.i796 = bitcast %union.anon* %20124 to i64*
  %20125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20126 = getelementptr inbounds %struct.GPR, %struct.GPR* %20125, i32 0, i32 5
  %20127 = getelementptr inbounds %struct.Reg, %struct.Reg* %20126, i32 0, i32 0
  %RCX.i797 = bitcast %union.anon* %20127 to i64*
  %20128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20129 = getelementptr inbounds %struct.GPR, %struct.GPR* %20128, i32 0, i32 9
  %20130 = getelementptr inbounds %struct.Reg, %struct.Reg* %20129, i32 0, i32 0
  %RSI.i798 = bitcast %union.anon* %20130 to i64*
  %20131 = load i64, i64* %RAX.i796
  %20132 = load i64, i64* %RCX.i797
  %20133 = load i64, i64* %RSI.i798
  %20134 = mul i64 %20133, 4
  %20135 = add i64 %20134, %20132
  %20136 = load i64, i64* %PC.i795
  %20137 = add i64 %20136, 4
  store i64 %20137, i64* %PC.i795
  %20138 = inttoptr i64 %20135 to i32*
  %20139 = load i32, i32* %20138
  %20140 = shl i64 %20131, 32
  %20141 = ashr exact i64 %20140, 32
  %20142 = sext i32 %20139 to i64
  %20143 = mul i64 %20142, %20141
  %20144 = trunc i64 %20143 to i32
  %20145 = and i64 %20143, 4294967295
  store i64 %20145, i64* %RAX.i796, align 8
  %20146 = shl i64 %20143, 32
  %20147 = ashr exact i64 %20146, 32
  %20148 = icmp ne i64 %20147, %20143
  %20149 = zext i1 %20148 to i8
  %20150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20149, i8* %20150, align 1
  %20151 = and i32 %20144, 255
  %20152 = call i32 @llvm.ctpop.i32(i32 %20151)
  %20153 = trunc i32 %20152 to i8
  %20154 = and i8 %20153, 1
  %20155 = xor i8 %20154, 1
  %20156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20155, i8* %20156, align 1
  %20157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20157, align 1
  %20158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %20158, align 1
  %20159 = lshr i32 %20144, 31
  %20160 = trunc i32 %20159 to i8
  %20161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20160, i8* %20161, align 1
  %20162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20149, i8* %20162, align 1
  store %struct.Memory* %loadMem_40cd6b, %struct.Memory** %MEMORY
  %loadMem_40cd6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20164 = getelementptr inbounds %struct.GPR, %struct.GPR* %20163, i32 0, i32 33
  %20165 = getelementptr inbounds %struct.Reg, %struct.Reg* %20164, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %20165 to i64*
  %20166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20167 = getelementptr inbounds %struct.GPR, %struct.GPR* %20166, i32 0, i32 1
  %20168 = getelementptr inbounds %struct.Reg, %struct.Reg* %20167, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %20168 to i64*
  %20169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20170 = getelementptr inbounds %struct.GPR, %struct.GPR* %20169, i32 0, i32 15
  %20171 = getelementptr inbounds %struct.Reg, %struct.Reg* %20170, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %20171 to i64*
  %20172 = load i64, i64* %RAX.i793
  %20173 = load i64, i64* %RBP.i794
  %20174 = sub i64 %20173, 184
  %20175 = load i64, i64* %PC.i792
  %20176 = add i64 %20175, 6
  store i64 %20176, i64* %PC.i792
  %20177 = trunc i64 %20172 to i32
  %20178 = inttoptr i64 %20174 to i32*
  %20179 = load i32, i32* %20178
  %20180 = add i32 %20179, %20177
  %20181 = zext i32 %20180 to i64
  store i64 %20181, i64* %RAX.i793, align 8
  %20182 = icmp ult i32 %20180, %20177
  %20183 = icmp ult i32 %20180, %20179
  %20184 = or i1 %20182, %20183
  %20185 = zext i1 %20184 to i8
  %20186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20185, i8* %20186, align 1
  %20187 = and i32 %20180, 255
  %20188 = call i32 @llvm.ctpop.i32(i32 %20187)
  %20189 = trunc i32 %20188 to i8
  %20190 = and i8 %20189, 1
  %20191 = xor i8 %20190, 1
  %20192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20191, i8* %20192, align 1
  %20193 = xor i32 %20179, %20177
  %20194 = xor i32 %20193, %20180
  %20195 = lshr i32 %20194, 4
  %20196 = trunc i32 %20195 to i8
  %20197 = and i8 %20196, 1
  %20198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20197, i8* %20198, align 1
  %20199 = icmp eq i32 %20180, 0
  %20200 = zext i1 %20199 to i8
  %20201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20200, i8* %20201, align 1
  %20202 = lshr i32 %20180, 31
  %20203 = trunc i32 %20202 to i8
  %20204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20203, i8* %20204, align 1
  %20205 = lshr i32 %20177, 31
  %20206 = lshr i32 %20179, 31
  %20207 = xor i32 %20202, %20205
  %20208 = xor i32 %20202, %20206
  %20209 = add i32 %20207, %20208
  %20210 = icmp eq i32 %20209, 2
  %20211 = zext i1 %20210 to i8
  %20212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20211, i8* %20212, align 1
  store %struct.Memory* %loadMem_40cd6f, %struct.Memory** %MEMORY
  %loadMem_40cd75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20214 = getelementptr inbounds %struct.GPR, %struct.GPR* %20213, i32 0, i32 33
  %20215 = getelementptr inbounds %struct.Reg, %struct.Reg* %20214, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %20215 to i64*
  %20216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20217 = getelementptr inbounds %struct.GPR, %struct.GPR* %20216, i32 0, i32 5
  %20218 = getelementptr inbounds %struct.Reg, %struct.Reg* %20217, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %20218 to i64*
  %20219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20220 = getelementptr inbounds %struct.GPR, %struct.GPR* %20219, i32 0, i32 15
  %20221 = getelementptr inbounds %struct.Reg, %struct.Reg* %20220, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %20221 to i64*
  %20222 = load i64, i64* %RBP.i791
  %20223 = sub i64 %20222, 208
  %20224 = load i64, i64* %PC.i789
  %20225 = add i64 %20224, 6
  store i64 %20225, i64* %PC.i789
  %20226 = inttoptr i64 %20223 to i32*
  %20227 = load i32, i32* %20226
  %20228 = zext i32 %20227 to i64
  store i64 %20228, i64* %RCX.i790, align 8
  store %struct.Memory* %loadMem_40cd75, %struct.Memory** %MEMORY
  %loadMem_40cd7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20230 = getelementptr inbounds %struct.GPR, %struct.GPR* %20229, i32 0, i32 33
  %20231 = getelementptr inbounds %struct.Reg, %struct.Reg* %20230, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %20231 to i64*
  %20232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20233 = getelementptr inbounds %struct.GPR, %struct.GPR* %20232, i32 0, i32 5
  %20234 = getelementptr inbounds %struct.Reg, %struct.Reg* %20233, i32 0, i32 0
  %20235 = bitcast %union.anon* %20234 to %struct.anon.2*
  %CL.i787 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20235, i32 0, i32 0
  %20236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20237 = getelementptr inbounds %struct.GPR, %struct.GPR* %20236, i32 0, i32 1
  %20238 = getelementptr inbounds %struct.Reg, %struct.Reg* %20237, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %20238 to i64*
  %20239 = load i64, i64* %RAX.i788
  %20240 = load i8, i8* %CL.i787
  %20241 = zext i8 %20240 to i64
  %20242 = load i64, i64* %PC.i786
  %20243 = add i64 %20242, 2
  store i64 %20243, i64* %PC.i786
  %20244 = trunc i64 %20241 to i5
  switch i5 %20244, label %20248 [
    i5 0, label %routine_sarl__cl___eax.exit
    i5 1, label %20245
  ]

; <label>:20245:                                  ; preds = %block_.L_40cd1d
  %20246 = shl i64 %20239, 32
  %20247 = ashr i64 %20246, 33
  br label %20255

; <label>:20248:                                  ; preds = %block_.L_40cd1d
  %20249 = and i64 %20241, 31
  %20250 = add i64 %20249, -1
  %20251 = shl i64 %20239, 32
  %20252 = ashr exact i64 %20251, 32
  %20253 = ashr i64 %20252, %20250
  %20254 = lshr i64 %20253, 1
  br label %20255

; <label>:20255:                                  ; preds = %20248, %20245
  %20256 = phi i64 [ %20254, %20248 ], [ %20247, %20245 ]
  %20257 = phi i64 [ %20253, %20248 ], [ %20239, %20245 ]
  %20258 = trunc i64 %20257 to i8
  %20259 = and i8 %20258, 1
  %20260 = trunc i64 %20256 to i32
  %20261 = and i64 %20256, 4294967295
  store i64 %20261, i64* %RAX.i788, align 8
  %20262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20259, i8* %20262, align 1
  %20263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20264 = and i32 %20260, 255
  %20265 = call i32 @llvm.ctpop.i32(i32 %20264)
  %20266 = trunc i32 %20265 to i8
  %20267 = and i8 %20266, 1
  %20268 = xor i8 %20267, 1
  store i8 %20268, i8* %20263, align 1
  %20269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20269, align 1
  %20270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20271 = icmp eq i32 %20260, 0
  %20272 = zext i1 %20271 to i8
  store i8 %20272, i8* %20270, align 1
  %20273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20274 = lshr i32 %20260, 31
  %20275 = trunc i32 %20274 to i8
  store i8 %20275, i8* %20273, align 1
  %20276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20276, align 1
  br label %routine_sarl__cl___eax.exit

routine_sarl__cl___eax.exit:                      ; preds = %block_.L_40cd1d, %20255
  store %struct.Memory* %loadMem_40cd7b, %struct.Memory** %MEMORY
  %loadMem_40cd7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20278 = getelementptr inbounds %struct.GPR, %struct.GPR* %20277, i32 0, i32 33
  %20279 = getelementptr inbounds %struct.Reg, %struct.Reg* %20278, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %20279 to i64*
  %20280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20281 = getelementptr inbounds %struct.GPR, %struct.GPR* %20280, i32 0, i32 9
  %20282 = getelementptr inbounds %struct.Reg, %struct.Reg* %20281, i32 0, i32 0
  %RSI.i784 = bitcast %union.anon* %20282 to i64*
  %20283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20284 = getelementptr inbounds %struct.GPR, %struct.GPR* %20283, i32 0, i32 15
  %20285 = getelementptr inbounds %struct.Reg, %struct.Reg* %20284, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %20285 to i64*
  %20286 = load i64, i64* %RBP.i785
  %20287 = sub i64 %20286, 36
  %20288 = load i64, i64* %PC.i783
  %20289 = add i64 %20288, 3
  store i64 %20289, i64* %PC.i783
  %20290 = inttoptr i64 %20287 to i32*
  %20291 = load i32, i32* %20290
  %20292 = zext i32 %20291 to i64
  store i64 %20292, i64* %RSI.i784, align 8
  store %struct.Memory* %loadMem_40cd7d, %struct.Memory** %MEMORY
  %loadMem_40cd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20294 = getelementptr inbounds %struct.GPR, %struct.GPR* %20293, i32 0, i32 33
  %20295 = getelementptr inbounds %struct.Reg, %struct.Reg* %20294, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %20295 to i64*
  %20296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20297 = getelementptr inbounds %struct.GPR, %struct.GPR* %20296, i32 0, i32 1
  %20298 = getelementptr inbounds %struct.Reg, %struct.Reg* %20297, i32 0, i32 0
  %EAX.i781 = bitcast %union.anon* %20298 to i32*
  %20299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20300 = getelementptr inbounds %struct.GPR, %struct.GPR* %20299, i32 0, i32 11
  %20301 = getelementptr inbounds %struct.Reg, %struct.Reg* %20300, i32 0, i32 0
  %RDI.i782 = bitcast %union.anon* %20301 to i64*
  %20302 = load i32, i32* %EAX.i781
  %20303 = zext i32 %20302 to i64
  %20304 = load i64, i64* %PC.i780
  %20305 = add i64 %20304, 2
  store i64 %20305, i64* %PC.i780
  %20306 = and i64 %20303, 4294967295
  store i64 %20306, i64* %RDI.i782, align 8
  store %struct.Memory* %loadMem_40cd80, %struct.Memory** %MEMORY
  %loadMem1_40cd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20308 = getelementptr inbounds %struct.GPR, %struct.GPR* %20307, i32 0, i32 33
  %20309 = getelementptr inbounds %struct.Reg, %struct.Reg* %20308, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %20309 to i64*
  %20310 = load i64, i64* %PC.i779
  %20311 = add i64 %20310, 426958
  %20312 = load i64, i64* %PC.i779
  %20313 = add i64 %20312, 5
  %20314 = load i64, i64* %PC.i779
  %20315 = add i64 %20314, 5
  store i64 %20315, i64* %PC.i779
  %20316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %20317 = load i64, i64* %20316, align 8
  %20318 = add i64 %20317, -8
  %20319 = inttoptr i64 %20318 to i64*
  store i64 %20313, i64* %20319
  store i64 %20318, i64* %20316, align 8
  %20320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20311, i64* %20320, align 8
  store %struct.Memory* %loadMem1_40cd82, %struct.Memory** %MEMORY
  %loadMem2_40cd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cd82 = load i64, i64* %3
  %call2_40cd82 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40cd82, %struct.Memory* %loadMem2_40cd82)
  store %struct.Memory* %call2_40cd82, %struct.Memory** %MEMORY
  %loadMem_40cd87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20322 = getelementptr inbounds %struct.GPR, %struct.GPR* %20321, i32 0, i32 33
  %20323 = getelementptr inbounds %struct.Reg, %struct.Reg* %20322, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %20323 to i64*
  %20324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20325 = getelementptr inbounds %struct.GPR, %struct.GPR* %20324, i32 0, i32 17
  %20326 = getelementptr inbounds %struct.Reg, %struct.Reg* %20325, i32 0, i32 0
  %R8.i778 = bitcast %union.anon* %20326 to i64*
  %20327 = load i64, i64* %PC.i777
  %20328 = add i64 %20327, 10
  store i64 %20328, i64* %PC.i777
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %R8.i778, align 8
  store %struct.Memory* %loadMem_40cd87, %struct.Memory** %MEMORY
  %loadMem_40cd91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20330 = getelementptr inbounds %struct.GPR, %struct.GPR* %20329, i32 0, i32 33
  %20331 = getelementptr inbounds %struct.Reg, %struct.Reg* %20330, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %20331 to i64*
  %20332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20333 = getelementptr inbounds %struct.GPR, %struct.GPR* %20332, i32 0, i32 15
  %20334 = getelementptr inbounds %struct.Reg, %struct.Reg* %20333, i32 0, i32 0
  %RBP.i775 = bitcast %union.anon* %20334 to i64*
  %20335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20336 = getelementptr inbounds %struct.GPR, %struct.GPR* %20335, i32 0, i32 19
  %20337 = getelementptr inbounds %struct.Reg, %struct.Reg* %20336, i32 0, i32 0
  %R9.i776 = bitcast %union.anon* %20337 to i64*
  %20338 = load i64, i64* %RBP.i775
  %20339 = sub i64 %20338, 204
  %20340 = load i64, i64* %PC.i774
  %20341 = add i64 %20340, 7
  store i64 %20341, i64* %PC.i774
  %20342 = inttoptr i64 %20339 to i32*
  %20343 = load i32, i32* %20342
  %20344 = sext i32 %20343 to i64
  store i64 %20344, i64* %R9.i776, align 8
  store %struct.Memory* %loadMem_40cd91, %struct.Memory** %MEMORY
  %loadMem_40cd98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20346 = getelementptr inbounds %struct.GPR, %struct.GPR* %20345, i32 0, i32 33
  %20347 = getelementptr inbounds %struct.Reg, %struct.Reg* %20346, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %20347 to i64*
  %20348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20349 = getelementptr inbounds %struct.GPR, %struct.GPR* %20348, i32 0, i32 19
  %20350 = getelementptr inbounds %struct.Reg, %struct.Reg* %20349, i32 0, i32 0
  %R9.i773 = bitcast %union.anon* %20350 to i64*
  %20351 = load i64, i64* %R9.i773
  %20352 = load i64, i64* %PC.i772
  %20353 = add i64 %20352, 4
  store i64 %20353, i64* %PC.i772
  %20354 = shl i64 %20351, 5
  %20355 = icmp slt i64 %20354, 0
  %20356 = shl i64 %20354, 1
  store i64 %20356, i64* %R9.i773, align 8
  %20357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20358 = zext i1 %20355 to i8
  store i8 %20358, i8* %20357, align 1
  %20359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20360 = trunc i64 %20356 to i32
  %20361 = and i32 %20360, 254
  %20362 = call i32 @llvm.ctpop.i32(i32 %20361)
  %20363 = trunc i32 %20362 to i8
  %20364 = and i8 %20363, 1
  %20365 = xor i8 %20364, 1
  store i8 %20365, i8* %20359, align 1
  %20366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20366, align 1
  %20367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20368 = icmp eq i64 %20356, 0
  %20369 = zext i1 %20368 to i8
  store i8 %20369, i8* %20367, align 1
  %20370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20371 = lshr i64 %20356, 63
  %20372 = trunc i64 %20371 to i8
  store i8 %20372, i8* %20370, align 1
  %20373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20373, align 1
  store %struct.Memory* %loadMem_40cd98, %struct.Memory** %MEMORY
  %loadMem_40cd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %20374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20375 = getelementptr inbounds %struct.GPR, %struct.GPR* %20374, i32 0, i32 33
  %20376 = getelementptr inbounds %struct.Reg, %struct.Reg* %20375, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %20376 to i64*
  %20377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20378 = getelementptr inbounds %struct.GPR, %struct.GPR* %20377, i32 0, i32 17
  %20379 = getelementptr inbounds %struct.Reg, %struct.Reg* %20378, i32 0, i32 0
  %R8.i770 = bitcast %union.anon* %20379 to i64*
  %20380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20381 = getelementptr inbounds %struct.GPR, %struct.GPR* %20380, i32 0, i32 19
  %20382 = getelementptr inbounds %struct.Reg, %struct.Reg* %20381, i32 0, i32 0
  %R9.i771 = bitcast %union.anon* %20382 to i64*
  %20383 = load i64, i64* %R8.i770
  %20384 = load i64, i64* %R9.i771
  %20385 = load i64, i64* %PC.i769
  %20386 = add i64 %20385, 3
  store i64 %20386, i64* %PC.i769
  %20387 = add i64 %20384, %20383
  store i64 %20387, i64* %R8.i770, align 8
  %20388 = icmp ult i64 %20387, %20383
  %20389 = icmp ult i64 %20387, %20384
  %20390 = or i1 %20388, %20389
  %20391 = zext i1 %20390 to i8
  %20392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20391, i8* %20392, align 1
  %20393 = trunc i64 %20387 to i32
  %20394 = and i32 %20393, 255
  %20395 = call i32 @llvm.ctpop.i32(i32 %20394)
  %20396 = trunc i32 %20395 to i8
  %20397 = and i8 %20396, 1
  %20398 = xor i8 %20397, 1
  %20399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20398, i8* %20399, align 1
  %20400 = xor i64 %20384, %20383
  %20401 = xor i64 %20400, %20387
  %20402 = lshr i64 %20401, 4
  %20403 = trunc i64 %20402 to i8
  %20404 = and i8 %20403, 1
  %20405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20404, i8* %20405, align 1
  %20406 = icmp eq i64 %20387, 0
  %20407 = zext i1 %20406 to i8
  %20408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20407, i8* %20408, align 1
  %20409 = lshr i64 %20387, 63
  %20410 = trunc i64 %20409 to i8
  %20411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20410, i8* %20411, align 1
  %20412 = lshr i64 %20383, 63
  %20413 = lshr i64 %20384, 63
  %20414 = xor i64 %20409, %20412
  %20415 = xor i64 %20409, %20413
  %20416 = add i64 %20414, %20415
  %20417 = icmp eq i64 %20416, 2
  %20418 = zext i1 %20417 to i8
  %20419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20418, i8* %20419, align 1
  store %struct.Memory* %loadMem_40cd9c, %struct.Memory** %MEMORY
  %loadMem_40cd9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20421 = getelementptr inbounds %struct.GPR, %struct.GPR* %20420, i32 0, i32 33
  %20422 = getelementptr inbounds %struct.Reg, %struct.Reg* %20421, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %20422 to i64*
  %20423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20424 = getelementptr inbounds %struct.GPR, %struct.GPR* %20423, i32 0, i32 15
  %20425 = getelementptr inbounds %struct.Reg, %struct.Reg* %20424, i32 0, i32 0
  %RBP.i767 = bitcast %union.anon* %20425 to i64*
  %20426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20427 = getelementptr inbounds %struct.GPR, %struct.GPR* %20426, i32 0, i32 19
  %20428 = getelementptr inbounds %struct.Reg, %struct.Reg* %20427, i32 0, i32 0
  %R9.i768 = bitcast %union.anon* %20428 to i64*
  %20429 = load i64, i64* %RBP.i767
  %20430 = sub i64 %20429, 20
  %20431 = load i64, i64* %PC.i766
  %20432 = add i64 %20431, 4
  store i64 %20432, i64* %PC.i766
  %20433 = inttoptr i64 %20430 to i32*
  %20434 = load i32, i32* %20433
  %20435 = sext i32 %20434 to i64
  store i64 %20435, i64* %R9.i768, align 8
  store %struct.Memory* %loadMem_40cd9f, %struct.Memory** %MEMORY
  %loadMem_40cda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20437 = getelementptr inbounds %struct.GPR, %struct.GPR* %20436, i32 0, i32 33
  %20438 = getelementptr inbounds %struct.Reg, %struct.Reg* %20437, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %20438 to i64*
  %20439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20440 = getelementptr inbounds %struct.GPR, %struct.GPR* %20439, i32 0, i32 19
  %20441 = getelementptr inbounds %struct.Reg, %struct.Reg* %20440, i32 0, i32 0
  %R9.i765 = bitcast %union.anon* %20441 to i64*
  %20442 = load i64, i64* %R9.i765
  %20443 = load i64, i64* %PC.i764
  %20444 = add i64 %20443, 4
  store i64 %20444, i64* %PC.i764
  %20445 = shl i64 %20442, 3
  %20446 = icmp slt i64 %20445, 0
  %20447 = shl i64 %20445, 1
  store i64 %20447, i64* %R9.i765, align 8
  %20448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20449 = zext i1 %20446 to i8
  store i8 %20449, i8* %20448, align 1
  %20450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20451 = trunc i64 %20447 to i32
  %20452 = and i32 %20451, 254
  %20453 = call i32 @llvm.ctpop.i32(i32 %20452)
  %20454 = trunc i32 %20453 to i8
  %20455 = and i8 %20454, 1
  %20456 = xor i8 %20455, 1
  store i8 %20456, i8* %20450, align 1
  %20457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20457, align 1
  %20458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20459 = icmp eq i64 %20447, 0
  %20460 = zext i1 %20459 to i8
  store i8 %20460, i8* %20458, align 1
  %20461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20462 = lshr i64 %20447, 63
  %20463 = trunc i64 %20462 to i8
  store i8 %20463, i8* %20461, align 1
  %20464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20464, align 1
  store %struct.Memory* %loadMem_40cda3, %struct.Memory** %MEMORY
  %loadMem_40cda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20466 = getelementptr inbounds %struct.GPR, %struct.GPR* %20465, i32 0, i32 33
  %20467 = getelementptr inbounds %struct.Reg, %struct.Reg* %20466, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %20467 to i64*
  %20468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20469 = getelementptr inbounds %struct.GPR, %struct.GPR* %20468, i32 0, i32 17
  %20470 = getelementptr inbounds %struct.Reg, %struct.Reg* %20469, i32 0, i32 0
  %R8.i762 = bitcast %union.anon* %20470 to i64*
  %20471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20472 = getelementptr inbounds %struct.GPR, %struct.GPR* %20471, i32 0, i32 19
  %20473 = getelementptr inbounds %struct.Reg, %struct.Reg* %20472, i32 0, i32 0
  %R9.i763 = bitcast %union.anon* %20473 to i64*
  %20474 = load i64, i64* %R8.i762
  %20475 = load i64, i64* %R9.i763
  %20476 = load i64, i64* %PC.i761
  %20477 = add i64 %20476, 3
  store i64 %20477, i64* %PC.i761
  %20478 = add i64 %20475, %20474
  store i64 %20478, i64* %R8.i762, align 8
  %20479 = icmp ult i64 %20478, %20474
  %20480 = icmp ult i64 %20478, %20475
  %20481 = or i1 %20479, %20480
  %20482 = zext i1 %20481 to i8
  %20483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20482, i8* %20483, align 1
  %20484 = trunc i64 %20478 to i32
  %20485 = and i32 %20484, 255
  %20486 = call i32 @llvm.ctpop.i32(i32 %20485)
  %20487 = trunc i32 %20486 to i8
  %20488 = and i8 %20487, 1
  %20489 = xor i8 %20488, 1
  %20490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20489, i8* %20490, align 1
  %20491 = xor i64 %20475, %20474
  %20492 = xor i64 %20491, %20478
  %20493 = lshr i64 %20492, 4
  %20494 = trunc i64 %20493 to i8
  %20495 = and i8 %20494, 1
  %20496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20495, i8* %20496, align 1
  %20497 = icmp eq i64 %20478, 0
  %20498 = zext i1 %20497 to i8
  %20499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20498, i8* %20499, align 1
  %20500 = lshr i64 %20478, 63
  %20501 = trunc i64 %20500 to i8
  %20502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20501, i8* %20502, align 1
  %20503 = lshr i64 %20474, 63
  %20504 = lshr i64 %20475, 63
  %20505 = xor i64 %20500, %20503
  %20506 = xor i64 %20500, %20504
  %20507 = add i64 %20505, %20506
  %20508 = icmp eq i64 %20507, 2
  %20509 = zext i1 %20508 to i8
  %20510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20509, i8* %20510, align 1
  store %struct.Memory* %loadMem_40cda7, %struct.Memory** %MEMORY
  %loadMem_40cdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %20511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20512 = getelementptr inbounds %struct.GPR, %struct.GPR* %20511, i32 0, i32 33
  %20513 = getelementptr inbounds %struct.Reg, %struct.Reg* %20512, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %20513 to i64*
  %20514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20515 = getelementptr inbounds %struct.GPR, %struct.GPR* %20514, i32 0, i32 15
  %20516 = getelementptr inbounds %struct.Reg, %struct.Reg* %20515, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %20516 to i64*
  %20517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20518 = getelementptr inbounds %struct.GPR, %struct.GPR* %20517, i32 0, i32 19
  %20519 = getelementptr inbounds %struct.Reg, %struct.Reg* %20518, i32 0, i32 0
  %R9.i760 = bitcast %union.anon* %20519 to i64*
  %20520 = load i64, i64* %RBP.i759
  %20521 = sub i64 %20520, 24
  %20522 = load i64, i64* %PC.i758
  %20523 = add i64 %20522, 4
  store i64 %20523, i64* %PC.i758
  %20524 = inttoptr i64 %20521 to i32*
  %20525 = load i32, i32* %20524
  %20526 = sext i32 %20525 to i64
  store i64 %20526, i64* %R9.i760, align 8
  store %struct.Memory* %loadMem_40cdaa, %struct.Memory** %MEMORY
  %loadMem_40cdae = load %struct.Memory*, %struct.Memory** %MEMORY
  %20527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20528 = getelementptr inbounds %struct.GPR, %struct.GPR* %20527, i32 0, i32 33
  %20529 = getelementptr inbounds %struct.Reg, %struct.Reg* %20528, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %20529 to i64*
  %20530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20531 = getelementptr inbounds %struct.GPR, %struct.GPR* %20530, i32 0, i32 1
  %20532 = getelementptr inbounds %struct.Reg, %struct.Reg* %20531, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %20532 to i64*
  %20533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20534 = getelementptr inbounds %struct.GPR, %struct.GPR* %20533, i32 0, i32 17
  %20535 = getelementptr inbounds %struct.Reg, %struct.Reg* %20534, i32 0, i32 0
  %R8.i756 = bitcast %union.anon* %20535 to i64*
  %20536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20537 = getelementptr inbounds %struct.GPR, %struct.GPR* %20536, i32 0, i32 19
  %20538 = getelementptr inbounds %struct.Reg, %struct.Reg* %20537, i32 0, i32 0
  %R9.i757 = bitcast %union.anon* %20538 to i64*
  %20539 = load i64, i64* %RAX.i755
  %20540 = load i64, i64* %R8.i756
  %20541 = load i64, i64* %R9.i757
  %20542 = mul i64 %20541, 4
  %20543 = add i64 %20542, %20540
  %20544 = load i64, i64* %PC.i754
  %20545 = add i64 %20544, 5
  store i64 %20545, i64* %PC.i754
  %20546 = inttoptr i64 %20543 to i32*
  %20547 = load i32, i32* %20546
  %20548 = shl i64 %20539, 32
  %20549 = ashr exact i64 %20548, 32
  %20550 = sext i32 %20547 to i64
  %20551 = mul i64 %20550, %20549
  %20552 = trunc i64 %20551 to i32
  %20553 = and i64 %20551, 4294967295
  store i64 %20553, i64* %RAX.i755, align 8
  %20554 = shl i64 %20551, 32
  %20555 = ashr exact i64 %20554, 32
  %20556 = icmp ne i64 %20555, %20551
  %20557 = zext i1 %20556 to i8
  %20558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20557, i8* %20558, align 1
  %20559 = and i32 %20552, 255
  %20560 = call i32 @llvm.ctpop.i32(i32 %20559)
  %20561 = trunc i32 %20560 to i8
  %20562 = and i8 %20561, 1
  %20563 = xor i8 %20562, 1
  %20564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20563, i8* %20564, align 1
  %20565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20565, align 1
  %20566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %20566, align 1
  %20567 = lshr i32 %20552, 31
  %20568 = trunc i32 %20567 to i8
  %20569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20568, i8* %20569, align 1
  %20570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20557, i8* %20570, align 1
  store %struct.Memory* %loadMem_40cdae, %struct.Memory** %MEMORY
  %loadMem_40cdb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20572 = getelementptr inbounds %struct.GPR, %struct.GPR* %20571, i32 0, i32 33
  %20573 = getelementptr inbounds %struct.Reg, %struct.Reg* %20572, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %20573 to i64*
  %20574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20575 = getelementptr inbounds %struct.GPR, %struct.GPR* %20574, i32 0, i32 5
  %20576 = getelementptr inbounds %struct.Reg, %struct.Reg* %20575, i32 0, i32 0
  %RCX.i752 = bitcast %union.anon* %20576 to i64*
  %20577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20578 = getelementptr inbounds %struct.GPR, %struct.GPR* %20577, i32 0, i32 15
  %20579 = getelementptr inbounds %struct.Reg, %struct.Reg* %20578, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %20579 to i64*
  %20580 = load i64, i64* %RBP.i753
  %20581 = sub i64 %20580, 200
  %20582 = load i64, i64* %PC.i751
  %20583 = add i64 %20582, 6
  store i64 %20583, i64* %PC.i751
  %20584 = inttoptr i64 %20581 to i32*
  %20585 = load i32, i32* %20584
  %20586 = zext i32 %20585 to i64
  store i64 %20586, i64* %RCX.i752, align 8
  store %struct.Memory* %loadMem_40cdb3, %struct.Memory** %MEMORY
  %loadMem_40cdb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20588 = getelementptr inbounds %struct.GPR, %struct.GPR* %20587, i32 0, i32 33
  %20589 = getelementptr inbounds %struct.Reg, %struct.Reg* %20588, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %20589 to i64*
  %20590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20591 = getelementptr inbounds %struct.GPR, %struct.GPR* %20590, i32 0, i32 5
  %20592 = getelementptr inbounds %struct.Reg, %struct.Reg* %20591, i32 0, i32 0
  %20593 = bitcast %union.anon* %20592 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %20593, i32 0, i32 0
  %20594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20595 = getelementptr inbounds %struct.GPR, %struct.GPR* %20594, i32 0, i32 1
  %20596 = getelementptr inbounds %struct.Reg, %struct.Reg* %20595, i32 0, i32 0
  %RAX.i750 = bitcast %union.anon* %20596 to i64*
  %20597 = load i64, i64* %RAX.i750
  %20598 = load i8, i8* %CL.i
  %20599 = zext i8 %20598 to i64
  %20600 = load i64, i64* %PC.i749
  %20601 = add i64 %20600, 2
  store i64 %20601, i64* %PC.i749
  %20602 = trunc i64 %20599 to i5
  switch i5 %20602, label %20609 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %20603
  ]

; <label>:20603:                                  ; preds = %routine_sarl__cl___eax.exit
  %20604 = trunc i64 %20597 to i32
  %20605 = shl i32 %20604, 1
  %20606 = icmp slt i32 %20604, 0
  %20607 = icmp slt i32 %20605, 0
  %20608 = xor i1 %20606, %20607
  br label %20618

; <label>:20609:                                  ; preds = %routine_sarl__cl___eax.exit
  %20610 = and i64 %20599, 31
  %20611 = add i64 %20610, 4294967295
  %20612 = and i64 %20597, 4294967295
  %20613 = and i64 %20611, 4294967295
  %20614 = shl i64 %20612, %20613
  %20615 = trunc i64 %20614 to i32
  %20616 = icmp slt i32 %20615, 0
  %20617 = shl i32 %20615, 1
  br label %20618

; <label>:20618:                                  ; preds = %20609, %20603
  %20619 = phi i1 [ %20606, %20603 ], [ %20616, %20609 ]
  %20620 = phi i1 [ %20608, %20603 ], [ false, %20609 ]
  %20621 = phi i32 [ %20605, %20603 ], [ %20617, %20609 ]
  %20622 = zext i32 %20621 to i64
  store i64 %20622, i64* %RAX.i750, align 8
  %20623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20624 = zext i1 %20619 to i8
  store i8 %20624, i8* %20623, align 1
  %20625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20626 = and i32 %20621, 254
  %20627 = call i32 @llvm.ctpop.i32(i32 %20626)
  %20628 = trunc i32 %20627 to i8
  %20629 = and i8 %20628, 1
  %20630 = xor i8 %20629, 1
  store i8 %20630, i8* %20625, align 1
  %20631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20631, align 1
  %20632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20633 = icmp eq i32 %20621, 0
  %20634 = zext i1 %20633 to i8
  store i8 %20634, i8* %20632, align 1
  %20635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20636 = lshr i32 %20621, 31
  %20637 = trunc i32 %20636 to i8
  store i8 %20637, i8* %20635, align 1
  %20638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20639 = zext i1 %20620 to i8
  store i8 %20639, i8* %20638, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %routine_sarl__cl___eax.exit, %20618
  store %struct.Memory* %loadMem_40cdb9, %struct.Memory** %MEMORY
  %loadMem_40cdbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %20640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20641 = getelementptr inbounds %struct.GPR, %struct.GPR* %20640, i32 0, i32 33
  %20642 = getelementptr inbounds %struct.Reg, %struct.Reg* %20641, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %20642 to i64*
  %20643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20644 = getelementptr inbounds %struct.GPR, %struct.GPR* %20643, i32 0, i32 17
  %20645 = getelementptr inbounds %struct.Reg, %struct.Reg* %20644, i32 0, i32 0
  %R8.i748 = bitcast %union.anon* %20645 to i64*
  %20646 = load i64, i64* %PC.i747
  %20647 = add i64 %20646, 8
  store i64 %20647, i64* %PC.i747
  %20648 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20648, i64* %R8.i748, align 8
  store %struct.Memory* %loadMem_40cdbb, %struct.Memory** %MEMORY
  %loadMem_40cdc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20650 = getelementptr inbounds %struct.GPR, %struct.GPR* %20649, i32 0, i32 33
  %20651 = getelementptr inbounds %struct.Reg, %struct.Reg* %20650, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %20651 to i64*
  %20652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20653 = getelementptr inbounds %struct.GPR, %struct.GPR* %20652, i32 0, i32 17
  %20654 = getelementptr inbounds %struct.Reg, %struct.Reg* %20653, i32 0, i32 0
  %R8.i746 = bitcast %union.anon* %20654 to i64*
  %20655 = load i64, i64* %R8.i746
  %20656 = load i64, i64* %PC.i745
  %20657 = add i64 %20656, 7
  store i64 %20657, i64* %PC.i745
  %20658 = add i64 13112, %20655
  store i64 %20658, i64* %R8.i746, align 8
  %20659 = icmp ult i64 %20658, %20655
  %20660 = icmp ult i64 %20658, 13112
  %20661 = or i1 %20659, %20660
  %20662 = zext i1 %20661 to i8
  %20663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20662, i8* %20663, align 1
  %20664 = trunc i64 %20658 to i32
  %20665 = and i32 %20664, 255
  %20666 = call i32 @llvm.ctpop.i32(i32 %20665)
  %20667 = trunc i32 %20666 to i8
  %20668 = and i8 %20667, 1
  %20669 = xor i8 %20668, 1
  %20670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20669, i8* %20670, align 1
  %20671 = xor i64 13112, %20655
  %20672 = xor i64 %20671, %20658
  %20673 = lshr i64 %20672, 4
  %20674 = trunc i64 %20673 to i8
  %20675 = and i8 %20674, 1
  %20676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20675, i8* %20676, align 1
  %20677 = icmp eq i64 %20658, 0
  %20678 = zext i1 %20677 to i8
  %20679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20678, i8* %20679, align 1
  %20680 = lshr i64 %20658, 63
  %20681 = trunc i64 %20680 to i8
  %20682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20681, i8* %20682, align 1
  %20683 = lshr i64 %20655, 63
  %20684 = xor i64 %20680, %20683
  %20685 = add i64 %20684, %20680
  %20686 = icmp eq i64 %20685, 2
  %20687 = zext i1 %20686 to i8
  %20688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20687, i8* %20688, align 1
  store %struct.Memory* %loadMem_40cdc3, %struct.Memory** %MEMORY
  %loadMem_40cdca = load %struct.Memory*, %struct.Memory** %MEMORY
  %20689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20690 = getelementptr inbounds %struct.GPR, %struct.GPR* %20689, i32 0, i32 33
  %20691 = getelementptr inbounds %struct.Reg, %struct.Reg* %20690, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %20691 to i64*
  %20692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20693 = getelementptr inbounds %struct.GPR, %struct.GPR* %20692, i32 0, i32 15
  %20694 = getelementptr inbounds %struct.Reg, %struct.Reg* %20693, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %20694 to i64*
  %20695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20696 = getelementptr inbounds %struct.GPR, %struct.GPR* %20695, i32 0, i32 19
  %20697 = getelementptr inbounds %struct.Reg, %struct.Reg* %20696, i32 0, i32 0
  %R9.i744 = bitcast %union.anon* %20697 to i64*
  %20698 = load i64, i64* %RBP.i743
  %20699 = sub i64 %20698, 20
  %20700 = load i64, i64* %PC.i742
  %20701 = add i64 %20700, 4
  store i64 %20701, i64* %PC.i742
  %20702 = inttoptr i64 %20699 to i32*
  %20703 = load i32, i32* %20702
  %20704 = sext i32 %20703 to i64
  store i64 %20704, i64* %R9.i744, align 8
  store %struct.Memory* %loadMem_40cdca, %struct.Memory** %MEMORY
  %loadMem_40cdce = load %struct.Memory*, %struct.Memory** %MEMORY
  %20705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20706 = getelementptr inbounds %struct.GPR, %struct.GPR* %20705, i32 0, i32 33
  %20707 = getelementptr inbounds %struct.Reg, %struct.Reg* %20706, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %20707 to i64*
  %20708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20709 = getelementptr inbounds %struct.GPR, %struct.GPR* %20708, i32 0, i32 19
  %20710 = getelementptr inbounds %struct.Reg, %struct.Reg* %20709, i32 0, i32 0
  %R9.i741 = bitcast %union.anon* %20710 to i64*
  %20711 = load i64, i64* %R9.i741
  %20712 = load i64, i64* %PC.i740
  %20713 = add i64 %20712, 4
  store i64 %20713, i64* %PC.i740
  %20714 = shl i64 %20711, 5
  %20715 = icmp slt i64 %20714, 0
  %20716 = shl i64 %20714, 1
  store i64 %20716, i64* %R9.i741, align 8
  %20717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20718 = zext i1 %20715 to i8
  store i8 %20718, i8* %20717, align 1
  %20719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20720 = trunc i64 %20716 to i32
  %20721 = and i32 %20720, 254
  %20722 = call i32 @llvm.ctpop.i32(i32 %20721)
  %20723 = trunc i32 %20722 to i8
  %20724 = and i8 %20723, 1
  %20725 = xor i8 %20724, 1
  store i8 %20725, i8* %20719, align 1
  %20726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20726, align 1
  %20727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20728 = icmp eq i64 %20716, 0
  %20729 = zext i1 %20728 to i8
  store i8 %20729, i8* %20727, align 1
  %20730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20731 = lshr i64 %20716, 63
  %20732 = trunc i64 %20731 to i8
  store i8 %20732, i8* %20730, align 1
  %20733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20733, align 1
  store %struct.Memory* %loadMem_40cdce, %struct.Memory** %MEMORY
  %loadMem_40cdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20735 = getelementptr inbounds %struct.GPR, %struct.GPR* %20734, i32 0, i32 33
  %20736 = getelementptr inbounds %struct.Reg, %struct.Reg* %20735, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %20736 to i64*
  %20737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20738 = getelementptr inbounds %struct.GPR, %struct.GPR* %20737, i32 0, i32 17
  %20739 = getelementptr inbounds %struct.Reg, %struct.Reg* %20738, i32 0, i32 0
  %R8.i738 = bitcast %union.anon* %20739 to i64*
  %20740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20741 = getelementptr inbounds %struct.GPR, %struct.GPR* %20740, i32 0, i32 19
  %20742 = getelementptr inbounds %struct.Reg, %struct.Reg* %20741, i32 0, i32 0
  %R9.i739 = bitcast %union.anon* %20742 to i64*
  %20743 = load i64, i64* %R8.i738
  %20744 = load i64, i64* %R9.i739
  %20745 = load i64, i64* %PC.i737
  %20746 = add i64 %20745, 3
  store i64 %20746, i64* %PC.i737
  %20747 = add i64 %20744, %20743
  store i64 %20747, i64* %R8.i738, align 8
  %20748 = icmp ult i64 %20747, %20743
  %20749 = icmp ult i64 %20747, %20744
  %20750 = or i1 %20748, %20749
  %20751 = zext i1 %20750 to i8
  %20752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20751, i8* %20752, align 1
  %20753 = trunc i64 %20747 to i32
  %20754 = and i32 %20753, 255
  %20755 = call i32 @llvm.ctpop.i32(i32 %20754)
  %20756 = trunc i32 %20755 to i8
  %20757 = and i8 %20756, 1
  %20758 = xor i8 %20757, 1
  %20759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20758, i8* %20759, align 1
  %20760 = xor i64 %20744, %20743
  %20761 = xor i64 %20760, %20747
  %20762 = lshr i64 %20761, 4
  %20763 = trunc i64 %20762 to i8
  %20764 = and i8 %20763, 1
  %20765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20764, i8* %20765, align 1
  %20766 = icmp eq i64 %20747, 0
  %20767 = zext i1 %20766 to i8
  %20768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20767, i8* %20768, align 1
  %20769 = lshr i64 %20747, 63
  %20770 = trunc i64 %20769 to i8
  %20771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20770, i8* %20771, align 1
  %20772 = lshr i64 %20743, 63
  %20773 = lshr i64 %20744, 63
  %20774 = xor i64 %20769, %20772
  %20775 = xor i64 %20769, %20773
  %20776 = add i64 %20774, %20775
  %20777 = icmp eq i64 %20776, 2
  %20778 = zext i1 %20777 to i8
  %20779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20778, i8* %20779, align 1
  store %struct.Memory* %loadMem_40cdd2, %struct.Memory** %MEMORY
  %loadMem_40cdd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20781 = getelementptr inbounds %struct.GPR, %struct.GPR* %20780, i32 0, i32 33
  %20782 = getelementptr inbounds %struct.Reg, %struct.Reg* %20781, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %20782 to i64*
  %20783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20784 = getelementptr inbounds %struct.GPR, %struct.GPR* %20783, i32 0, i32 15
  %20785 = getelementptr inbounds %struct.Reg, %struct.Reg* %20784, i32 0, i32 0
  %RBP.i735 = bitcast %union.anon* %20785 to i64*
  %20786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20787 = getelementptr inbounds %struct.GPR, %struct.GPR* %20786, i32 0, i32 19
  %20788 = getelementptr inbounds %struct.Reg, %struct.Reg* %20787, i32 0, i32 0
  %R9.i736 = bitcast %union.anon* %20788 to i64*
  %20789 = load i64, i64* %RBP.i735
  %20790 = sub i64 %20789, 24
  %20791 = load i64, i64* %PC.i734
  %20792 = add i64 %20791, 4
  store i64 %20792, i64* %PC.i734
  %20793 = inttoptr i64 %20790 to i32*
  %20794 = load i32, i32* %20793
  %20795 = sext i32 %20794 to i64
  store i64 %20795, i64* %R9.i736, align 8
  store %struct.Memory* %loadMem_40cdd5, %struct.Memory** %MEMORY
  %loadMem_40cdd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20797 = getelementptr inbounds %struct.GPR, %struct.GPR* %20796, i32 0, i32 33
  %20798 = getelementptr inbounds %struct.Reg, %struct.Reg* %20797, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %20798 to i64*
  %20799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20800 = getelementptr inbounds %struct.GPR, %struct.GPR* %20799, i32 0, i32 1
  %20801 = getelementptr inbounds %struct.Reg, %struct.Reg* %20800, i32 0, i32 0
  %EAX.i733 = bitcast %union.anon* %20801 to i32*
  %20802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20803 = getelementptr inbounds %struct.GPR, %struct.GPR* %20802, i32 0, i32 17
  %20804 = getelementptr inbounds %struct.Reg, %struct.Reg* %20803, i32 0, i32 0
  %R8.i = bitcast %union.anon* %20804 to i64*
  %20805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20806 = getelementptr inbounds %struct.GPR, %struct.GPR* %20805, i32 0, i32 19
  %20807 = getelementptr inbounds %struct.Reg, %struct.Reg* %20806, i32 0, i32 0
  %R9.i = bitcast %union.anon* %20807 to i64*
  %20808 = load i64, i64* %R8.i
  %20809 = load i64, i64* %R9.i
  %20810 = mul i64 %20809, 4
  %20811 = add i64 %20810, %20808
  %20812 = load i32, i32* %EAX.i733
  %20813 = zext i32 %20812 to i64
  %20814 = load i64, i64* %PC.i732
  %20815 = add i64 %20814, 4
  store i64 %20815, i64* %PC.i732
  %20816 = inttoptr i64 %20811 to i32*
  store i32 %20812, i32* %20816
  store %struct.Memory* %loadMem_40cdd9, %struct.Memory** %MEMORY
  %loadMem_40cddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20818 = getelementptr inbounds %struct.GPR, %struct.GPR* %20817, i32 0, i32 33
  %20819 = getelementptr inbounds %struct.Reg, %struct.Reg* %20818, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %20819 to i64*
  %20820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20821 = getelementptr inbounds %struct.GPR, %struct.GPR* %20820, i32 0, i32 1
  %20822 = getelementptr inbounds %struct.Reg, %struct.Reg* %20821, i32 0, i32 0
  %RAX.i730 = bitcast %union.anon* %20822 to i64*
  %20823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20824 = getelementptr inbounds %struct.GPR, %struct.GPR* %20823, i32 0, i32 15
  %20825 = getelementptr inbounds %struct.Reg, %struct.Reg* %20824, i32 0, i32 0
  %RBP.i731 = bitcast %union.anon* %20825 to i64*
  %20826 = load i64, i64* %RBP.i731
  %20827 = sub i64 %20826, 84
  %20828 = load i64, i64* %PC.i729
  %20829 = add i64 %20828, 3
  store i64 %20829, i64* %PC.i729
  %20830 = inttoptr i64 %20827 to i32*
  %20831 = load i32, i32* %20830
  %20832 = zext i32 %20831 to i64
  store i64 %20832, i64* %RAX.i730, align 8
  store %struct.Memory* %loadMem_40cddd, %struct.Memory** %MEMORY
  %loadMem_40cde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20834 = getelementptr inbounds %struct.GPR, %struct.GPR* %20833, i32 0, i32 33
  %20835 = getelementptr inbounds %struct.Reg, %struct.Reg* %20834, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %20835 to i64*
  %20836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20837 = getelementptr inbounds %struct.GPR, %struct.GPR* %20836, i32 0, i32 1
  %20838 = getelementptr inbounds %struct.Reg, %struct.Reg* %20837, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %20838 to i64*
  %20839 = load i64, i64* %RAX.i728
  %20840 = load i64, i64* %PC.i727
  %20841 = add i64 %20840, 3
  store i64 %20841, i64* %PC.i727
  %20842 = trunc i64 %20839 to i32
  %20843 = add i32 1, %20842
  %20844 = zext i32 %20843 to i64
  store i64 %20844, i64* %RAX.i728, align 8
  %20845 = icmp ult i32 %20843, %20842
  %20846 = icmp ult i32 %20843, 1
  %20847 = or i1 %20845, %20846
  %20848 = zext i1 %20847 to i8
  %20849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20848, i8* %20849, align 1
  %20850 = and i32 %20843, 255
  %20851 = call i32 @llvm.ctpop.i32(i32 %20850)
  %20852 = trunc i32 %20851 to i8
  %20853 = and i8 %20852, 1
  %20854 = xor i8 %20853, 1
  %20855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20854, i8* %20855, align 1
  %20856 = xor i64 1, %20839
  %20857 = trunc i64 %20856 to i32
  %20858 = xor i32 %20857, %20843
  %20859 = lshr i32 %20858, 4
  %20860 = trunc i32 %20859 to i8
  %20861 = and i8 %20860, 1
  %20862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20861, i8* %20862, align 1
  %20863 = icmp eq i32 %20843, 0
  %20864 = zext i1 %20863 to i8
  %20865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20864, i8* %20865, align 1
  %20866 = lshr i32 %20843, 31
  %20867 = trunc i32 %20866 to i8
  %20868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20867, i8* %20868, align 1
  %20869 = lshr i32 %20842, 31
  %20870 = xor i32 %20866, %20869
  %20871 = add i32 %20870, %20866
  %20872 = icmp eq i32 %20871, 2
  %20873 = zext i1 %20872 to i8
  %20874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20873, i8* %20874, align 1
  store %struct.Memory* %loadMem_40cde0, %struct.Memory** %MEMORY
  %loadMem_40cde3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20876 = getelementptr inbounds %struct.GPR, %struct.GPR* %20875, i32 0, i32 33
  %20877 = getelementptr inbounds %struct.Reg, %struct.Reg* %20876, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %20877 to i64*
  %20878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20879 = getelementptr inbounds %struct.GPR, %struct.GPR* %20878, i32 0, i32 1
  %20880 = getelementptr inbounds %struct.Reg, %struct.Reg* %20879, i32 0, i32 0
  %EAX.i725 = bitcast %union.anon* %20880 to i32*
  %20881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20882 = getelementptr inbounds %struct.GPR, %struct.GPR* %20881, i32 0, i32 15
  %20883 = getelementptr inbounds %struct.Reg, %struct.Reg* %20882, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %20883 to i64*
  %20884 = load i64, i64* %RBP.i726
  %20885 = sub i64 %20884, 84
  %20886 = load i32, i32* %EAX.i725
  %20887 = zext i32 %20886 to i64
  %20888 = load i64, i64* %PC.i724
  %20889 = add i64 %20888, 3
  store i64 %20889, i64* %PC.i724
  %20890 = inttoptr i64 %20885 to i32*
  store i32 %20886, i32* %20890
  store %struct.Memory* %loadMem_40cde3, %struct.Memory** %MEMORY
  %loadMem_40cde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20892 = getelementptr inbounds %struct.GPR, %struct.GPR* %20891, i32 0, i32 33
  %20893 = getelementptr inbounds %struct.Reg, %struct.Reg* %20892, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %20893 to i64*
  %20894 = load i64, i64* %PC.i723
  %20895 = add i64 %20894, -2053
  %20896 = load i64, i64* %PC.i723
  %20897 = add i64 %20896, 5
  store i64 %20897, i64* %PC.i723
  %20898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %20895, i64* %20898, align 8
  store %struct.Memory* %loadMem_40cde6, %struct.Memory** %MEMORY
  br label %block_.L_40c5e1

block_.L_40cdeb:                                  ; preds = %block_.L_40c5e1
  %loadMem_40cdeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %20899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20900 = getelementptr inbounds %struct.GPR, %struct.GPR* %20899, i32 0, i32 33
  %20901 = getelementptr inbounds %struct.Reg, %struct.Reg* %20900, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %20901 to i64*
  %20902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20903 = getelementptr inbounds %struct.GPR, %struct.GPR* %20902, i32 0, i32 1
  %20904 = getelementptr inbounds %struct.Reg, %struct.Reg* %20903, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %20904 to i64*
  %20905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20906 = getelementptr inbounds %struct.GPR, %struct.GPR* %20905, i32 0, i32 15
  %20907 = getelementptr inbounds %struct.Reg, %struct.Reg* %20906, i32 0, i32 0
  %RBP.i722 = bitcast %union.anon* %20907 to i64*
  %20908 = load i64, i64* %RBP.i722
  %20909 = sub i64 %20908, 232
  %20910 = load i64, i64* %PC.i720
  %20911 = add i64 %20910, 7
  store i64 %20911, i64* %PC.i720
  %20912 = inttoptr i64 %20909 to i64*
  %20913 = load i64, i64* %20912
  store i64 %20913, i64* %RAX.i721, align 8
  store %struct.Memory* %loadMem_40cdeb, %struct.Memory** %MEMORY
  %loadMem_40cdf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20915 = getelementptr inbounds %struct.GPR, %struct.GPR* %20914, i32 0, i32 33
  %20916 = getelementptr inbounds %struct.Reg, %struct.Reg* %20915, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %20916 to i64*
  %20917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20918 = getelementptr inbounds %struct.GPR, %struct.GPR* %20917, i32 0, i32 5
  %20919 = getelementptr inbounds %struct.Reg, %struct.Reg* %20918, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %20919 to i64*
  %20920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20921 = getelementptr inbounds %struct.GPR, %struct.GPR* %20920, i32 0, i32 15
  %20922 = getelementptr inbounds %struct.Reg, %struct.Reg* %20921, i32 0, i32 0
  %RBP.i719 = bitcast %union.anon* %20922 to i64*
  %20923 = load i64, i64* %RBP.i719
  %20924 = sub i64 %20923, 96
  %20925 = load i64, i64* %PC.i717
  %20926 = add i64 %20925, 4
  store i64 %20926, i64* %PC.i717
  %20927 = inttoptr i64 %20924 to i32*
  %20928 = load i32, i32* %20927
  %20929 = sext i32 %20928 to i64
  store i64 %20929, i64* %RCX.i718, align 8
  store %struct.Memory* %loadMem_40cdf2, %struct.Memory** %MEMORY
  %loadMem_40cdf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20931 = getelementptr inbounds %struct.GPR, %struct.GPR* %20930, i32 0, i32 33
  %20932 = getelementptr inbounds %struct.Reg, %struct.Reg* %20931, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %20932 to i64*
  %20933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20934 = getelementptr inbounds %struct.GPR, %struct.GPR* %20933, i32 0, i32 1
  %20935 = getelementptr inbounds %struct.Reg, %struct.Reg* %20934, i32 0, i32 0
  %RAX.i715 = bitcast %union.anon* %20935 to i64*
  %20936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20937 = getelementptr inbounds %struct.GPR, %struct.GPR* %20936, i32 0, i32 5
  %20938 = getelementptr inbounds %struct.Reg, %struct.Reg* %20937, i32 0, i32 0
  %RCX.i716 = bitcast %union.anon* %20938 to i64*
  %20939 = load i64, i64* %RAX.i715
  %20940 = load i64, i64* %RCX.i716
  %20941 = mul i64 %20940, 4
  %20942 = add i64 %20941, %20939
  %20943 = load i64, i64* %PC.i714
  %20944 = add i64 %20943, 7
  store i64 %20944, i64* %PC.i714
  %20945 = inttoptr i64 %20942 to i32*
  store i32 0, i32* %20945
  store %struct.Memory* %loadMem_40cdf6, %struct.Memory** %MEMORY
  %loadMem_40cdfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20947 = getelementptr inbounds %struct.GPR, %struct.GPR* %20946, i32 0, i32 33
  %20948 = getelementptr inbounds %struct.Reg, %struct.Reg* %20947, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %20948 to i64*
  %20949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20950 = getelementptr inbounds %struct.GPR, %struct.GPR* %20949, i32 0, i32 15
  %20951 = getelementptr inbounds %struct.Reg, %struct.Reg* %20950, i32 0, i32 0
  %RBP.i713 = bitcast %union.anon* %20951 to i64*
  %20952 = load i64, i64* %RBP.i713
  %20953 = sub i64 %20952, 24
  %20954 = load i64, i64* %PC.i712
  %20955 = add i64 %20954, 7
  store i64 %20955, i64* %PC.i712
  %20956 = inttoptr i64 %20953 to i32*
  store i32 0, i32* %20956
  store %struct.Memory* %loadMem_40cdfd, %struct.Memory** %MEMORY
  br label %block_.L_40ce04

block_.L_40ce04:                                  ; preds = %block_.L_40cf12, %block_.L_40cdeb
  %loadMem_40ce04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20958 = getelementptr inbounds %struct.GPR, %struct.GPR* %20957, i32 0, i32 33
  %20959 = getelementptr inbounds %struct.Reg, %struct.Reg* %20958, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %20959 to i64*
  %20960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20961 = getelementptr inbounds %struct.GPR, %struct.GPR* %20960, i32 0, i32 15
  %20962 = getelementptr inbounds %struct.Reg, %struct.Reg* %20961, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %20962 to i64*
  %20963 = load i64, i64* %RBP.i711
  %20964 = sub i64 %20963, 24
  %20965 = load i64, i64* %PC.i710
  %20966 = add i64 %20965, 4
  store i64 %20966, i64* %PC.i710
  %20967 = inttoptr i64 %20964 to i32*
  %20968 = load i32, i32* %20967
  %20969 = sub i32 %20968, 4
  %20970 = icmp ult i32 %20968, 4
  %20971 = zext i1 %20970 to i8
  %20972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20971, i8* %20972, align 1
  %20973 = and i32 %20969, 255
  %20974 = call i32 @llvm.ctpop.i32(i32 %20973)
  %20975 = trunc i32 %20974 to i8
  %20976 = and i8 %20975, 1
  %20977 = xor i8 %20976, 1
  %20978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20977, i8* %20978, align 1
  %20979 = xor i32 %20968, 4
  %20980 = xor i32 %20979, %20969
  %20981 = lshr i32 %20980, 4
  %20982 = trunc i32 %20981 to i8
  %20983 = and i8 %20982, 1
  %20984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20983, i8* %20984, align 1
  %20985 = icmp eq i32 %20969, 0
  %20986 = zext i1 %20985 to i8
  %20987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20986, i8* %20987, align 1
  %20988 = lshr i32 %20969, 31
  %20989 = trunc i32 %20988 to i8
  %20990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20989, i8* %20990, align 1
  %20991 = lshr i32 %20968, 31
  %20992 = xor i32 %20988, %20991
  %20993 = add i32 %20992, %20991
  %20994 = icmp eq i32 %20993, 2
  %20995 = zext i1 %20994 to i8
  %20996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20995, i8* %20996, align 1
  store %struct.Memory* %loadMem_40ce04, %struct.Memory** %MEMORY
  %loadMem_40ce08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20998 = getelementptr inbounds %struct.GPR, %struct.GPR* %20997, i32 0, i32 33
  %20999 = getelementptr inbounds %struct.Reg, %struct.Reg* %20998, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %20999 to i64*
  %21000 = load i64, i64* %PC.i709
  %21001 = add i64 %21000, 280
  %21002 = load i64, i64* %PC.i709
  %21003 = add i64 %21002, 6
  %21004 = load i64, i64* %PC.i709
  %21005 = add i64 %21004, 6
  store i64 %21005, i64* %PC.i709
  %21006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21007 = load i8, i8* %21006, align 1
  %21008 = icmp ne i8 %21007, 0
  %21009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %21010 = load i8, i8* %21009, align 1
  %21011 = icmp ne i8 %21010, 0
  %21012 = xor i1 %21008, %21011
  %21013 = xor i1 %21012, true
  %21014 = zext i1 %21013 to i8
  store i8 %21014, i8* %BRANCH_TAKEN, align 1
  %21015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21016 = select i1 %21012, i64 %21003, i64 %21001
  store i64 %21016, i64* %21015, align 8
  store %struct.Memory* %loadMem_40ce08, %struct.Memory** %MEMORY
  %loadBr_40ce08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ce08 = icmp eq i8 %loadBr_40ce08, 1
  br i1 %cmpBr_40ce08, label %block_.L_40cf20, label %block_40ce0e

block_40ce0e:                                     ; preds = %block_.L_40ce04
  %loadMem_40ce0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21018 = getelementptr inbounds %struct.GPR, %struct.GPR* %21017, i32 0, i32 33
  %21019 = getelementptr inbounds %struct.Reg, %struct.Reg* %21018, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %21019 to i64*
  %21020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21021 = getelementptr inbounds %struct.GPR, %struct.GPR* %21020, i32 0, i32 15
  %21022 = getelementptr inbounds %struct.Reg, %struct.Reg* %21021, i32 0, i32 0
  %RBP.i708 = bitcast %union.anon* %21022 to i64*
  %21023 = load i64, i64* %RBP.i708
  %21024 = sub i64 %21023, 20
  %21025 = load i64, i64* %PC.i707
  %21026 = add i64 %21025, 7
  store i64 %21026, i64* %PC.i707
  %21027 = inttoptr i64 %21024 to i32*
  store i32 0, i32* %21027
  store %struct.Memory* %loadMem_40ce0e, %struct.Memory** %MEMORY
  br label %block_.L_40ce15

block_.L_40ce15:                                  ; preds = %block_40ce1f, %block_40ce0e
  %loadMem_40ce15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21029 = getelementptr inbounds %struct.GPR, %struct.GPR* %21028, i32 0, i32 33
  %21030 = getelementptr inbounds %struct.Reg, %struct.Reg* %21029, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %21030 to i64*
  %21031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21032 = getelementptr inbounds %struct.GPR, %struct.GPR* %21031, i32 0, i32 15
  %21033 = getelementptr inbounds %struct.Reg, %struct.Reg* %21032, i32 0, i32 0
  %RBP.i706 = bitcast %union.anon* %21033 to i64*
  %21034 = load i64, i64* %RBP.i706
  %21035 = sub i64 %21034, 20
  %21036 = load i64, i64* %PC.i705
  %21037 = add i64 %21036, 4
  store i64 %21037, i64* %PC.i705
  %21038 = inttoptr i64 %21035 to i32*
  %21039 = load i32, i32* %21038
  %21040 = sub i32 %21039, 4
  %21041 = icmp ult i32 %21039, 4
  %21042 = zext i1 %21041 to i8
  %21043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21042, i8* %21043, align 1
  %21044 = and i32 %21040, 255
  %21045 = call i32 @llvm.ctpop.i32(i32 %21044)
  %21046 = trunc i32 %21045 to i8
  %21047 = and i8 %21046, 1
  %21048 = xor i8 %21047, 1
  %21049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21048, i8* %21049, align 1
  %21050 = xor i32 %21039, 4
  %21051 = xor i32 %21050, %21040
  %21052 = lshr i32 %21051, 4
  %21053 = trunc i32 %21052 to i8
  %21054 = and i8 %21053, 1
  %21055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21054, i8* %21055, align 1
  %21056 = icmp eq i32 %21040, 0
  %21057 = zext i1 %21056 to i8
  %21058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21057, i8* %21058, align 1
  %21059 = lshr i32 %21040, 31
  %21060 = trunc i32 %21059 to i8
  %21061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21060, i8* %21061, align 1
  %21062 = lshr i32 %21039, 31
  %21063 = xor i32 %21059, %21062
  %21064 = add i32 %21063, %21062
  %21065 = icmp eq i32 %21064, 2
  %21066 = zext i1 %21065 to i8
  %21067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21066, i8* %21067, align 1
  store %struct.Memory* %loadMem_40ce15, %struct.Memory** %MEMORY
  %loadMem_40ce19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21069 = getelementptr inbounds %struct.GPR, %struct.GPR* %21068, i32 0, i32 33
  %21070 = getelementptr inbounds %struct.Reg, %struct.Reg* %21069, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %21070 to i64*
  %21071 = load i64, i64* %PC.i704
  %21072 = add i64 %21071, 60
  %21073 = load i64, i64* %PC.i704
  %21074 = add i64 %21073, 6
  %21075 = load i64, i64* %PC.i704
  %21076 = add i64 %21075, 6
  store i64 %21076, i64* %PC.i704
  %21077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21078 = load i8, i8* %21077, align 1
  %21079 = icmp ne i8 %21078, 0
  %21080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %21081 = load i8, i8* %21080, align 1
  %21082 = icmp ne i8 %21081, 0
  %21083 = xor i1 %21079, %21082
  %21084 = xor i1 %21083, true
  %21085 = zext i1 %21084 to i8
  store i8 %21085, i8* %BRANCH_TAKEN, align 1
  %21086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21087 = select i1 %21083, i64 %21074, i64 %21072
  store i64 %21087, i64* %21086, align 8
  store %struct.Memory* %loadMem_40ce19, %struct.Memory** %MEMORY
  %loadBr_40ce19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ce19 = icmp eq i8 %loadBr_40ce19, 1
  br i1 %cmpBr_40ce19, label %block_.L_40ce55, label %block_40ce1f

block_40ce1f:                                     ; preds = %block_.L_40ce15
  %loadMem_40ce1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21089 = getelementptr inbounds %struct.GPR, %struct.GPR* %21088, i32 0, i32 33
  %21090 = getelementptr inbounds %struct.Reg, %struct.Reg* %21089, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %21090 to i64*
  %21091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21092 = getelementptr inbounds %struct.GPR, %struct.GPR* %21091, i32 0, i32 1
  %21093 = getelementptr inbounds %struct.Reg, %struct.Reg* %21092, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %21093 to i64*
  %21094 = load i64, i64* %PC.i702
  %21095 = add i64 %21094, 8
  store i64 %21095, i64* %PC.i702
  %21096 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %21096, i64* %RAX.i703, align 8
  store %struct.Memory* %loadMem_40ce1f, %struct.Memory** %MEMORY
  %loadMem_40ce27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21098 = getelementptr inbounds %struct.GPR, %struct.GPR* %21097, i32 0, i32 33
  %21099 = getelementptr inbounds %struct.Reg, %struct.Reg* %21098, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %21099 to i64*
  %21100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21101 = getelementptr inbounds %struct.GPR, %struct.GPR* %21100, i32 0, i32 1
  %21102 = getelementptr inbounds %struct.Reg, %struct.Reg* %21101, i32 0, i32 0
  %RAX.i701 = bitcast %union.anon* %21102 to i64*
  %21103 = load i64, i64* %RAX.i701
  %21104 = load i64, i64* %PC.i700
  %21105 = add i64 %21104, 6
  store i64 %21105, i64* %PC.i700
  %21106 = add i64 13112, %21103
  store i64 %21106, i64* %RAX.i701, align 8
  %21107 = icmp ult i64 %21106, %21103
  %21108 = icmp ult i64 %21106, 13112
  %21109 = or i1 %21107, %21108
  %21110 = zext i1 %21109 to i8
  %21111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21110, i8* %21111, align 1
  %21112 = trunc i64 %21106 to i32
  %21113 = and i32 %21112, 255
  %21114 = call i32 @llvm.ctpop.i32(i32 %21113)
  %21115 = trunc i32 %21114 to i8
  %21116 = and i8 %21115, 1
  %21117 = xor i8 %21116, 1
  %21118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21117, i8* %21118, align 1
  %21119 = xor i64 13112, %21103
  %21120 = xor i64 %21119, %21106
  %21121 = lshr i64 %21120, 4
  %21122 = trunc i64 %21121 to i8
  %21123 = and i8 %21122, 1
  %21124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21123, i8* %21124, align 1
  %21125 = icmp eq i64 %21106, 0
  %21126 = zext i1 %21125 to i8
  %21127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21126, i8* %21127, align 1
  %21128 = lshr i64 %21106, 63
  %21129 = trunc i64 %21128 to i8
  %21130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21129, i8* %21130, align 1
  %21131 = lshr i64 %21103, 63
  %21132 = xor i64 %21128, %21131
  %21133 = add i64 %21132, %21128
  %21134 = icmp eq i64 %21133, 2
  %21135 = zext i1 %21134 to i8
  %21136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21135, i8* %21136, align 1
  store %struct.Memory* %loadMem_40ce27, %struct.Memory** %MEMORY
  %loadMem_40ce2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21138 = getelementptr inbounds %struct.GPR, %struct.GPR* %21137, i32 0, i32 33
  %21139 = getelementptr inbounds %struct.Reg, %struct.Reg* %21138, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %21139 to i64*
  %21140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21141 = getelementptr inbounds %struct.GPR, %struct.GPR* %21140, i32 0, i32 5
  %21142 = getelementptr inbounds %struct.Reg, %struct.Reg* %21141, i32 0, i32 0
  %RCX.i698 = bitcast %union.anon* %21142 to i64*
  %21143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21144 = getelementptr inbounds %struct.GPR, %struct.GPR* %21143, i32 0, i32 15
  %21145 = getelementptr inbounds %struct.Reg, %struct.Reg* %21144, i32 0, i32 0
  %RBP.i699 = bitcast %union.anon* %21145 to i64*
  %21146 = load i64, i64* %RBP.i699
  %21147 = sub i64 %21146, 20
  %21148 = load i64, i64* %PC.i697
  %21149 = add i64 %21148, 4
  store i64 %21149, i64* %PC.i697
  %21150 = inttoptr i64 %21147 to i32*
  %21151 = load i32, i32* %21150
  %21152 = sext i32 %21151 to i64
  store i64 %21152, i64* %RCX.i698, align 8
  store %struct.Memory* %loadMem_40ce2d, %struct.Memory** %MEMORY
  %loadMem_40ce31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21154 = getelementptr inbounds %struct.GPR, %struct.GPR* %21153, i32 0, i32 33
  %21155 = getelementptr inbounds %struct.Reg, %struct.Reg* %21154, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %21155 to i64*
  %21156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21157 = getelementptr inbounds %struct.GPR, %struct.GPR* %21156, i32 0, i32 5
  %21158 = getelementptr inbounds %struct.Reg, %struct.Reg* %21157, i32 0, i32 0
  %RCX.i696 = bitcast %union.anon* %21158 to i64*
  %21159 = load i64, i64* %RCX.i696
  %21160 = load i64, i64* %PC.i695
  %21161 = add i64 %21160, 4
  store i64 %21161, i64* %PC.i695
  %21162 = shl i64 %21159, 5
  %21163 = icmp slt i64 %21162, 0
  %21164 = shl i64 %21162, 1
  store i64 %21164, i64* %RCX.i696, align 8
  %21165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %21166 = zext i1 %21163 to i8
  store i8 %21166, i8* %21165, align 1
  %21167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21168 = trunc i64 %21164 to i32
  %21169 = and i32 %21168, 254
  %21170 = call i32 @llvm.ctpop.i32(i32 %21169)
  %21171 = trunc i32 %21170 to i8
  %21172 = and i8 %21171, 1
  %21173 = xor i8 %21172, 1
  store i8 %21173, i8* %21167, align 1
  %21174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21174, align 1
  %21175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21176 = icmp eq i64 %21164, 0
  %21177 = zext i1 %21176 to i8
  store i8 %21177, i8* %21175, align 1
  %21178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21179 = lshr i64 %21164, 63
  %21180 = trunc i64 %21179 to i8
  store i8 %21180, i8* %21178, align 1
  %21181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21181, align 1
  store %struct.Memory* %loadMem_40ce31, %struct.Memory** %MEMORY
  %loadMem_40ce35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21183 = getelementptr inbounds %struct.GPR, %struct.GPR* %21182, i32 0, i32 33
  %21184 = getelementptr inbounds %struct.Reg, %struct.Reg* %21183, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %21184 to i64*
  %21185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21186 = getelementptr inbounds %struct.GPR, %struct.GPR* %21185, i32 0, i32 1
  %21187 = getelementptr inbounds %struct.Reg, %struct.Reg* %21186, i32 0, i32 0
  %RAX.i693 = bitcast %union.anon* %21187 to i64*
  %21188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21189 = getelementptr inbounds %struct.GPR, %struct.GPR* %21188, i32 0, i32 5
  %21190 = getelementptr inbounds %struct.Reg, %struct.Reg* %21189, i32 0, i32 0
  %RCX.i694 = bitcast %union.anon* %21190 to i64*
  %21191 = load i64, i64* %RAX.i693
  %21192 = load i64, i64* %RCX.i694
  %21193 = load i64, i64* %PC.i692
  %21194 = add i64 %21193, 3
  store i64 %21194, i64* %PC.i692
  %21195 = add i64 %21192, %21191
  store i64 %21195, i64* %RAX.i693, align 8
  %21196 = icmp ult i64 %21195, %21191
  %21197 = icmp ult i64 %21195, %21192
  %21198 = or i1 %21196, %21197
  %21199 = zext i1 %21198 to i8
  %21200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21199, i8* %21200, align 1
  %21201 = trunc i64 %21195 to i32
  %21202 = and i32 %21201, 255
  %21203 = call i32 @llvm.ctpop.i32(i32 %21202)
  %21204 = trunc i32 %21203 to i8
  %21205 = and i8 %21204, 1
  %21206 = xor i8 %21205, 1
  %21207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21206, i8* %21207, align 1
  %21208 = xor i64 %21192, %21191
  %21209 = xor i64 %21208, %21195
  %21210 = lshr i64 %21209, 4
  %21211 = trunc i64 %21210 to i8
  %21212 = and i8 %21211, 1
  %21213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21212, i8* %21213, align 1
  %21214 = icmp eq i64 %21195, 0
  %21215 = zext i1 %21214 to i8
  %21216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21215, i8* %21216, align 1
  %21217 = lshr i64 %21195, 63
  %21218 = trunc i64 %21217 to i8
  %21219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21218, i8* %21219, align 1
  %21220 = lshr i64 %21191, 63
  %21221 = lshr i64 %21192, 63
  %21222 = xor i64 %21217, %21220
  %21223 = xor i64 %21217, %21221
  %21224 = add i64 %21222, %21223
  %21225 = icmp eq i64 %21224, 2
  %21226 = zext i1 %21225 to i8
  %21227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21226, i8* %21227, align 1
  store %struct.Memory* %loadMem_40ce35, %struct.Memory** %MEMORY
  %loadMem_40ce38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21229 = getelementptr inbounds %struct.GPR, %struct.GPR* %21228, i32 0, i32 33
  %21230 = getelementptr inbounds %struct.Reg, %struct.Reg* %21229, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %21230 to i64*
  %21231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21232 = getelementptr inbounds %struct.GPR, %struct.GPR* %21231, i32 0, i32 5
  %21233 = getelementptr inbounds %struct.Reg, %struct.Reg* %21232, i32 0, i32 0
  %RCX.i690 = bitcast %union.anon* %21233 to i64*
  %21234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21235 = getelementptr inbounds %struct.GPR, %struct.GPR* %21234, i32 0, i32 15
  %21236 = getelementptr inbounds %struct.Reg, %struct.Reg* %21235, i32 0, i32 0
  %RBP.i691 = bitcast %union.anon* %21236 to i64*
  %21237 = load i64, i64* %RBP.i691
  %21238 = sub i64 %21237, 24
  %21239 = load i64, i64* %PC.i689
  %21240 = add i64 %21239, 4
  store i64 %21240, i64* %PC.i689
  %21241 = inttoptr i64 %21238 to i32*
  %21242 = load i32, i32* %21241
  %21243 = sext i32 %21242 to i64
  store i64 %21243, i64* %RCX.i690, align 8
  store %struct.Memory* %loadMem_40ce38, %struct.Memory** %MEMORY
  %loadMem_40ce3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21245 = getelementptr inbounds %struct.GPR, %struct.GPR* %21244, i32 0, i32 33
  %21246 = getelementptr inbounds %struct.Reg, %struct.Reg* %21245, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %21246 to i64*
  %21247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21248 = getelementptr inbounds %struct.GPR, %struct.GPR* %21247, i32 0, i32 1
  %21249 = getelementptr inbounds %struct.Reg, %struct.Reg* %21248, i32 0, i32 0
  %RAX.i686 = bitcast %union.anon* %21249 to i64*
  %21250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21251 = getelementptr inbounds %struct.GPR, %struct.GPR* %21250, i32 0, i32 5
  %21252 = getelementptr inbounds %struct.Reg, %struct.Reg* %21251, i32 0, i32 0
  %RCX.i687 = bitcast %union.anon* %21252 to i64*
  %21253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21254 = getelementptr inbounds %struct.GPR, %struct.GPR* %21253, i32 0, i32 7
  %21255 = getelementptr inbounds %struct.Reg, %struct.Reg* %21254, i32 0, i32 0
  %RDX.i688 = bitcast %union.anon* %21255 to i64*
  %21256 = load i64, i64* %RAX.i686
  %21257 = load i64, i64* %RCX.i687
  %21258 = mul i64 %21257, 4
  %21259 = add i64 %21258, %21256
  %21260 = load i64, i64* %PC.i685
  %21261 = add i64 %21260, 3
  store i64 %21261, i64* %PC.i685
  %21262 = inttoptr i64 %21259 to i32*
  %21263 = load i32, i32* %21262
  %21264 = zext i32 %21263 to i64
  store i64 %21264, i64* %RDX.i688, align 8
  store %struct.Memory* %loadMem_40ce3c, %struct.Memory** %MEMORY
  %loadMem_40ce3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %21265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21266 = getelementptr inbounds %struct.GPR, %struct.GPR* %21265, i32 0, i32 33
  %21267 = getelementptr inbounds %struct.Reg, %struct.Reg* %21266, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %21267 to i64*
  %21268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21269 = getelementptr inbounds %struct.GPR, %struct.GPR* %21268, i32 0, i32 1
  %21270 = getelementptr inbounds %struct.Reg, %struct.Reg* %21269, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %21270 to i64*
  %21271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21272 = getelementptr inbounds %struct.GPR, %struct.GPR* %21271, i32 0, i32 15
  %21273 = getelementptr inbounds %struct.Reg, %struct.Reg* %21272, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %21273 to i64*
  %21274 = load i64, i64* %RBP.i684
  %21275 = sub i64 %21274, 20
  %21276 = load i64, i64* %PC.i682
  %21277 = add i64 %21276, 4
  store i64 %21277, i64* %PC.i682
  %21278 = inttoptr i64 %21275 to i32*
  %21279 = load i32, i32* %21278
  %21280 = sext i32 %21279 to i64
  store i64 %21280, i64* %RAX.i683, align 8
  store %struct.Memory* %loadMem_40ce3f, %struct.Memory** %MEMORY
  %loadMem_40ce43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21282 = getelementptr inbounds %struct.GPR, %struct.GPR* %21281, i32 0, i32 33
  %21283 = getelementptr inbounds %struct.Reg, %struct.Reg* %21282, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %21283 to i64*
  %21284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21285 = getelementptr inbounds %struct.GPR, %struct.GPR* %21284, i32 0, i32 7
  %21286 = getelementptr inbounds %struct.Reg, %struct.Reg* %21285, i32 0, i32 0
  %EDX.i679 = bitcast %union.anon* %21286 to i32*
  %21287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21288 = getelementptr inbounds %struct.GPR, %struct.GPR* %21287, i32 0, i32 1
  %21289 = getelementptr inbounds %struct.Reg, %struct.Reg* %21288, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %21289 to i64*
  %21290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21291 = getelementptr inbounds %struct.GPR, %struct.GPR* %21290, i32 0, i32 15
  %21292 = getelementptr inbounds %struct.Reg, %struct.Reg* %21291, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %21292 to i64*
  %21293 = load i64, i64* %RBP.i681
  %21294 = load i64, i64* %RAX.i680
  %21295 = mul i64 %21294, 4
  %21296 = add i64 %21293, -64
  %21297 = add i64 %21296, %21295
  %21298 = load i32, i32* %EDX.i679
  %21299 = zext i32 %21298 to i64
  %21300 = load i64, i64* %PC.i678
  %21301 = add i64 %21300, 4
  store i64 %21301, i64* %PC.i678
  %21302 = inttoptr i64 %21297 to i32*
  store i32 %21298, i32* %21302
  store %struct.Memory* %loadMem_40ce43, %struct.Memory** %MEMORY
  %loadMem_40ce47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21304 = getelementptr inbounds %struct.GPR, %struct.GPR* %21303, i32 0, i32 33
  %21305 = getelementptr inbounds %struct.Reg, %struct.Reg* %21304, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %21305 to i64*
  %21306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21307 = getelementptr inbounds %struct.GPR, %struct.GPR* %21306, i32 0, i32 1
  %21308 = getelementptr inbounds %struct.Reg, %struct.Reg* %21307, i32 0, i32 0
  %RAX.i676 = bitcast %union.anon* %21308 to i64*
  %21309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21310 = getelementptr inbounds %struct.GPR, %struct.GPR* %21309, i32 0, i32 15
  %21311 = getelementptr inbounds %struct.Reg, %struct.Reg* %21310, i32 0, i32 0
  %RBP.i677 = bitcast %union.anon* %21311 to i64*
  %21312 = load i64, i64* %RBP.i677
  %21313 = sub i64 %21312, 20
  %21314 = load i64, i64* %PC.i675
  %21315 = add i64 %21314, 3
  store i64 %21315, i64* %PC.i675
  %21316 = inttoptr i64 %21313 to i32*
  %21317 = load i32, i32* %21316
  %21318 = zext i32 %21317 to i64
  store i64 %21318, i64* %RAX.i676, align 8
  store %struct.Memory* %loadMem_40ce47, %struct.Memory** %MEMORY
  %loadMem_40ce4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21320 = getelementptr inbounds %struct.GPR, %struct.GPR* %21319, i32 0, i32 33
  %21321 = getelementptr inbounds %struct.Reg, %struct.Reg* %21320, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %21321 to i64*
  %21322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21323 = getelementptr inbounds %struct.GPR, %struct.GPR* %21322, i32 0, i32 1
  %21324 = getelementptr inbounds %struct.Reg, %struct.Reg* %21323, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %21324 to i64*
  %21325 = load i64, i64* %RAX.i674
  %21326 = load i64, i64* %PC.i673
  %21327 = add i64 %21326, 3
  store i64 %21327, i64* %PC.i673
  %21328 = trunc i64 %21325 to i32
  %21329 = add i32 1, %21328
  %21330 = zext i32 %21329 to i64
  store i64 %21330, i64* %RAX.i674, align 8
  %21331 = icmp ult i32 %21329, %21328
  %21332 = icmp ult i32 %21329, 1
  %21333 = or i1 %21331, %21332
  %21334 = zext i1 %21333 to i8
  %21335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21334, i8* %21335, align 1
  %21336 = and i32 %21329, 255
  %21337 = call i32 @llvm.ctpop.i32(i32 %21336)
  %21338 = trunc i32 %21337 to i8
  %21339 = and i8 %21338, 1
  %21340 = xor i8 %21339, 1
  %21341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21340, i8* %21341, align 1
  %21342 = xor i64 1, %21325
  %21343 = trunc i64 %21342 to i32
  %21344 = xor i32 %21343, %21329
  %21345 = lshr i32 %21344, 4
  %21346 = trunc i32 %21345 to i8
  %21347 = and i8 %21346, 1
  %21348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21347, i8* %21348, align 1
  %21349 = icmp eq i32 %21329, 0
  %21350 = zext i1 %21349 to i8
  %21351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21350, i8* %21351, align 1
  %21352 = lshr i32 %21329, 31
  %21353 = trunc i32 %21352 to i8
  %21354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21353, i8* %21354, align 1
  %21355 = lshr i32 %21328, 31
  %21356 = xor i32 %21352, %21355
  %21357 = add i32 %21356, %21352
  %21358 = icmp eq i32 %21357, 2
  %21359 = zext i1 %21358 to i8
  %21360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21359, i8* %21360, align 1
  store %struct.Memory* %loadMem_40ce4a, %struct.Memory** %MEMORY
  %loadMem_40ce4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21362 = getelementptr inbounds %struct.GPR, %struct.GPR* %21361, i32 0, i32 33
  %21363 = getelementptr inbounds %struct.Reg, %struct.Reg* %21362, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %21363 to i64*
  %21364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21365 = getelementptr inbounds %struct.GPR, %struct.GPR* %21364, i32 0, i32 1
  %21366 = getelementptr inbounds %struct.Reg, %struct.Reg* %21365, i32 0, i32 0
  %EAX.i671 = bitcast %union.anon* %21366 to i32*
  %21367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21368 = getelementptr inbounds %struct.GPR, %struct.GPR* %21367, i32 0, i32 15
  %21369 = getelementptr inbounds %struct.Reg, %struct.Reg* %21368, i32 0, i32 0
  %RBP.i672 = bitcast %union.anon* %21369 to i64*
  %21370 = load i64, i64* %RBP.i672
  %21371 = sub i64 %21370, 20
  %21372 = load i32, i32* %EAX.i671
  %21373 = zext i32 %21372 to i64
  %21374 = load i64, i64* %PC.i670
  %21375 = add i64 %21374, 3
  store i64 %21375, i64* %PC.i670
  %21376 = inttoptr i64 %21371 to i32*
  store i32 %21372, i32* %21376
  store %struct.Memory* %loadMem_40ce4d, %struct.Memory** %MEMORY
  %loadMem_40ce50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21378 = getelementptr inbounds %struct.GPR, %struct.GPR* %21377, i32 0, i32 33
  %21379 = getelementptr inbounds %struct.Reg, %struct.Reg* %21378, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %21379 to i64*
  %21380 = load i64, i64* %PC.i669
  %21381 = add i64 %21380, -59
  %21382 = load i64, i64* %PC.i669
  %21383 = add i64 %21382, 5
  store i64 %21383, i64* %PC.i669
  %21384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21381, i64* %21384, align 8
  store %struct.Memory* %loadMem_40ce50, %struct.Memory** %MEMORY
  br label %block_.L_40ce15

block_.L_40ce55:                                  ; preds = %block_.L_40ce15
  %loadMem_40ce55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21386 = getelementptr inbounds %struct.GPR, %struct.GPR* %21385, i32 0, i32 33
  %21387 = getelementptr inbounds %struct.Reg, %struct.Reg* %21386, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %21387 to i64*
  %21388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21389 = getelementptr inbounds %struct.GPR, %struct.GPR* %21388, i32 0, i32 1
  %21390 = getelementptr inbounds %struct.Reg, %struct.Reg* %21389, i32 0, i32 0
  %RAX.i667 = bitcast %union.anon* %21390 to i64*
  %21391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21392 = getelementptr inbounds %struct.GPR, %struct.GPR* %21391, i32 0, i32 15
  %21393 = getelementptr inbounds %struct.Reg, %struct.Reg* %21392, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %21393 to i64*
  %21394 = load i64, i64* %RBP.i668
  %21395 = sub i64 %21394, 64
  %21396 = load i64, i64* %PC.i666
  %21397 = add i64 %21396, 3
  store i64 %21397, i64* %PC.i666
  %21398 = inttoptr i64 %21395 to i32*
  %21399 = load i32, i32* %21398
  %21400 = zext i32 %21399 to i64
  store i64 %21400, i64* %RAX.i667, align 8
  store %struct.Memory* %loadMem_40ce55, %struct.Memory** %MEMORY
  %loadMem_40ce58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21402 = getelementptr inbounds %struct.GPR, %struct.GPR* %21401, i32 0, i32 33
  %21403 = getelementptr inbounds %struct.Reg, %struct.Reg* %21402, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %21403 to i64*
  %21404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21405 = getelementptr inbounds %struct.GPR, %struct.GPR* %21404, i32 0, i32 1
  %21406 = getelementptr inbounds %struct.Reg, %struct.Reg* %21405, i32 0, i32 0
  %RAX.i664 = bitcast %union.anon* %21406 to i64*
  %21407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21408 = getelementptr inbounds %struct.GPR, %struct.GPR* %21407, i32 0, i32 15
  %21409 = getelementptr inbounds %struct.Reg, %struct.Reg* %21408, i32 0, i32 0
  %RBP.i665 = bitcast %union.anon* %21409 to i64*
  %21410 = load i64, i64* %RAX.i664
  %21411 = load i64, i64* %RBP.i665
  %21412 = sub i64 %21411, 56
  %21413 = load i64, i64* %PC.i663
  %21414 = add i64 %21413, 3
  store i64 %21414, i64* %PC.i663
  %21415 = trunc i64 %21410 to i32
  %21416 = inttoptr i64 %21412 to i32*
  %21417 = load i32, i32* %21416
  %21418 = add i32 %21417, %21415
  %21419 = zext i32 %21418 to i64
  store i64 %21419, i64* %RAX.i664, align 8
  %21420 = icmp ult i32 %21418, %21415
  %21421 = icmp ult i32 %21418, %21417
  %21422 = or i1 %21420, %21421
  %21423 = zext i1 %21422 to i8
  %21424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21423, i8* %21424, align 1
  %21425 = and i32 %21418, 255
  %21426 = call i32 @llvm.ctpop.i32(i32 %21425)
  %21427 = trunc i32 %21426 to i8
  %21428 = and i8 %21427, 1
  %21429 = xor i8 %21428, 1
  %21430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21429, i8* %21430, align 1
  %21431 = xor i32 %21417, %21415
  %21432 = xor i32 %21431, %21418
  %21433 = lshr i32 %21432, 4
  %21434 = trunc i32 %21433 to i8
  %21435 = and i8 %21434, 1
  %21436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21435, i8* %21436, align 1
  %21437 = icmp eq i32 %21418, 0
  %21438 = zext i1 %21437 to i8
  %21439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21438, i8* %21439, align 1
  %21440 = lshr i32 %21418, 31
  %21441 = trunc i32 %21440 to i8
  %21442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21441, i8* %21442, align 1
  %21443 = lshr i32 %21415, 31
  %21444 = lshr i32 %21417, 31
  %21445 = xor i32 %21440, %21443
  %21446 = xor i32 %21440, %21444
  %21447 = add i32 %21445, %21446
  %21448 = icmp eq i32 %21447, 2
  %21449 = zext i1 %21448 to i8
  %21450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21449, i8* %21450, align 1
  store %struct.Memory* %loadMem_40ce58, %struct.Memory** %MEMORY
  %loadMem_40ce5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21452 = getelementptr inbounds %struct.GPR, %struct.GPR* %21451, i32 0, i32 33
  %21453 = getelementptr inbounds %struct.Reg, %struct.Reg* %21452, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %21453 to i64*
  %21454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21455 = getelementptr inbounds %struct.GPR, %struct.GPR* %21454, i32 0, i32 1
  %21456 = getelementptr inbounds %struct.Reg, %struct.Reg* %21455, i32 0, i32 0
  %EAX.i661 = bitcast %union.anon* %21456 to i32*
  %21457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21458 = getelementptr inbounds %struct.GPR, %struct.GPR* %21457, i32 0, i32 15
  %21459 = getelementptr inbounds %struct.Reg, %struct.Reg* %21458, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %21459 to i64*
  %21460 = load i64, i64* %RBP.i662
  %21461 = sub i64 %21460, 80
  %21462 = load i32, i32* %EAX.i661
  %21463 = zext i32 %21462 to i64
  %21464 = load i64, i64* %PC.i660
  %21465 = add i64 %21464, 3
  store i64 %21465, i64* %PC.i660
  %21466 = inttoptr i64 %21461 to i32*
  store i32 %21462, i32* %21466
  store %struct.Memory* %loadMem_40ce5b, %struct.Memory** %MEMORY
  %loadMem_40ce5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21468 = getelementptr inbounds %struct.GPR, %struct.GPR* %21467, i32 0, i32 33
  %21469 = getelementptr inbounds %struct.Reg, %struct.Reg* %21468, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %21469 to i64*
  %21470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21471 = getelementptr inbounds %struct.GPR, %struct.GPR* %21470, i32 0, i32 1
  %21472 = getelementptr inbounds %struct.Reg, %struct.Reg* %21471, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %21472 to i64*
  %21473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21474 = getelementptr inbounds %struct.GPR, %struct.GPR* %21473, i32 0, i32 15
  %21475 = getelementptr inbounds %struct.Reg, %struct.Reg* %21474, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %21475 to i64*
  %21476 = load i64, i64* %RBP.i659
  %21477 = sub i64 %21476, 64
  %21478 = load i64, i64* %PC.i657
  %21479 = add i64 %21478, 3
  store i64 %21479, i64* %PC.i657
  %21480 = inttoptr i64 %21477 to i32*
  %21481 = load i32, i32* %21480
  %21482 = zext i32 %21481 to i64
  store i64 %21482, i64* %RAX.i658, align 8
  store %struct.Memory* %loadMem_40ce5e, %struct.Memory** %MEMORY
  %loadMem_40ce61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21484 = getelementptr inbounds %struct.GPR, %struct.GPR* %21483, i32 0, i32 33
  %21485 = getelementptr inbounds %struct.Reg, %struct.Reg* %21484, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %21485 to i64*
  %21486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21487 = getelementptr inbounds %struct.GPR, %struct.GPR* %21486, i32 0, i32 1
  %21488 = getelementptr inbounds %struct.Reg, %struct.Reg* %21487, i32 0, i32 0
  %RAX.i655 = bitcast %union.anon* %21488 to i64*
  %21489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21490 = getelementptr inbounds %struct.GPR, %struct.GPR* %21489, i32 0, i32 15
  %21491 = getelementptr inbounds %struct.Reg, %struct.Reg* %21490, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %21491 to i64*
  %21492 = load i64, i64* %RAX.i655
  %21493 = load i64, i64* %RBP.i656
  %21494 = sub i64 %21493, 56
  %21495 = load i64, i64* %PC.i654
  %21496 = add i64 %21495, 3
  store i64 %21496, i64* %PC.i654
  %21497 = trunc i64 %21492 to i32
  %21498 = inttoptr i64 %21494 to i32*
  %21499 = load i32, i32* %21498
  %21500 = sub i32 %21497, %21499
  %21501 = zext i32 %21500 to i64
  store i64 %21501, i64* %RAX.i655, align 8
  %21502 = icmp ult i32 %21497, %21499
  %21503 = zext i1 %21502 to i8
  %21504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21503, i8* %21504, align 1
  %21505 = and i32 %21500, 255
  %21506 = call i32 @llvm.ctpop.i32(i32 %21505)
  %21507 = trunc i32 %21506 to i8
  %21508 = and i8 %21507, 1
  %21509 = xor i8 %21508, 1
  %21510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21509, i8* %21510, align 1
  %21511 = xor i32 %21499, %21497
  %21512 = xor i32 %21511, %21500
  %21513 = lshr i32 %21512, 4
  %21514 = trunc i32 %21513 to i8
  %21515 = and i8 %21514, 1
  %21516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21515, i8* %21516, align 1
  %21517 = icmp eq i32 %21500, 0
  %21518 = zext i1 %21517 to i8
  %21519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21518, i8* %21519, align 1
  %21520 = lshr i32 %21500, 31
  %21521 = trunc i32 %21520 to i8
  %21522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21521, i8* %21522, align 1
  %21523 = lshr i32 %21497, 31
  %21524 = lshr i32 %21499, 31
  %21525 = xor i32 %21524, %21523
  %21526 = xor i32 %21520, %21523
  %21527 = add i32 %21526, %21525
  %21528 = icmp eq i32 %21527, 2
  %21529 = zext i1 %21528 to i8
  %21530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21529, i8* %21530, align 1
  store %struct.Memory* %loadMem_40ce61, %struct.Memory** %MEMORY
  %loadMem_40ce64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21532 = getelementptr inbounds %struct.GPR, %struct.GPR* %21531, i32 0, i32 33
  %21533 = getelementptr inbounds %struct.Reg, %struct.Reg* %21532, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %21533 to i64*
  %21534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21535 = getelementptr inbounds %struct.GPR, %struct.GPR* %21534, i32 0, i32 1
  %21536 = getelementptr inbounds %struct.Reg, %struct.Reg* %21535, i32 0, i32 0
  %EAX.i652 = bitcast %union.anon* %21536 to i32*
  %21537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21538 = getelementptr inbounds %struct.GPR, %struct.GPR* %21537, i32 0, i32 15
  %21539 = getelementptr inbounds %struct.Reg, %struct.Reg* %21538, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %21539 to i64*
  %21540 = load i64, i64* %RBP.i653
  %21541 = sub i64 %21540, 76
  %21542 = load i32, i32* %EAX.i652
  %21543 = zext i32 %21542 to i64
  %21544 = load i64, i64* %PC.i651
  %21545 = add i64 %21544, 3
  store i64 %21545, i64* %PC.i651
  %21546 = inttoptr i64 %21541 to i32*
  store i32 %21542, i32* %21546
  store %struct.Memory* %loadMem_40ce64, %struct.Memory** %MEMORY
  %loadMem_40ce67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21548 = getelementptr inbounds %struct.GPR, %struct.GPR* %21547, i32 0, i32 33
  %21549 = getelementptr inbounds %struct.Reg, %struct.Reg* %21548, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %21549 to i64*
  %21550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21551 = getelementptr inbounds %struct.GPR, %struct.GPR* %21550, i32 0, i32 1
  %21552 = getelementptr inbounds %struct.Reg, %struct.Reg* %21551, i32 0, i32 0
  %RAX.i649 = bitcast %union.anon* %21552 to i64*
  %21553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21554 = getelementptr inbounds %struct.GPR, %struct.GPR* %21553, i32 0, i32 15
  %21555 = getelementptr inbounds %struct.Reg, %struct.Reg* %21554, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %21555 to i64*
  %21556 = load i64, i64* %RBP.i650
  %21557 = sub i64 %21556, 60
  %21558 = load i64, i64* %PC.i648
  %21559 = add i64 %21558, 3
  store i64 %21559, i64* %PC.i648
  %21560 = inttoptr i64 %21557 to i32*
  %21561 = load i32, i32* %21560
  %21562 = zext i32 %21561 to i64
  store i64 %21562, i64* %RAX.i649, align 8
  store %struct.Memory* %loadMem_40ce67, %struct.Memory** %MEMORY
  %loadMem_40ce6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21564 = getelementptr inbounds %struct.GPR, %struct.GPR* %21563, i32 0, i32 33
  %21565 = getelementptr inbounds %struct.Reg, %struct.Reg* %21564, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %21565 to i64*
  %21566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21567 = getelementptr inbounds %struct.GPR, %struct.GPR* %21566, i32 0, i32 1
  %21568 = getelementptr inbounds %struct.Reg, %struct.Reg* %21567, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %21568 to i64*
  %21569 = load i64, i64* %RAX.i647
  %21570 = load i64, i64* %PC.i646
  %21571 = add i64 %21570, 2
  store i64 %21571, i64* %PC.i646
  %21572 = shl i64 %21569, 32
  %21573 = ashr i64 %21572, 33
  %21574 = trunc i64 %21569 to i8
  %21575 = and i8 %21574, 1
  %21576 = trunc i64 %21573 to i32
  %21577 = and i64 %21573, 4294967295
  store i64 %21577, i64* %RAX.i647, align 8
  %21578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21575, i8* %21578, align 1
  %21579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21580 = and i32 %21576, 255
  %21581 = call i32 @llvm.ctpop.i32(i32 %21580)
  %21582 = trunc i32 %21581 to i8
  %21583 = and i8 %21582, 1
  %21584 = xor i8 %21583, 1
  store i8 %21584, i8* %21579, align 1
  %21585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21585, align 1
  %21586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21587 = icmp eq i32 %21576, 0
  %21588 = zext i1 %21587 to i8
  store i8 %21588, i8* %21586, align 1
  %21589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21590 = lshr i32 %21576, 31
  %21591 = trunc i32 %21590 to i8
  store i8 %21591, i8* %21589, align 1
  %21592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21592, align 1
  store %struct.Memory* %loadMem_40ce6a, %struct.Memory** %MEMORY
  %loadMem_40ce6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21594 = getelementptr inbounds %struct.GPR, %struct.GPR* %21593, i32 0, i32 33
  %21595 = getelementptr inbounds %struct.Reg, %struct.Reg* %21594, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %21595 to i64*
  %21596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21597 = getelementptr inbounds %struct.GPR, %struct.GPR* %21596, i32 0, i32 1
  %21598 = getelementptr inbounds %struct.Reg, %struct.Reg* %21597, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %21598 to i64*
  %21599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21600 = getelementptr inbounds %struct.GPR, %struct.GPR* %21599, i32 0, i32 15
  %21601 = getelementptr inbounds %struct.Reg, %struct.Reg* %21600, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %21601 to i64*
  %21602 = load i64, i64* %RAX.i644
  %21603 = load i64, i64* %RBP.i645
  %21604 = sub i64 %21603, 52
  %21605 = load i64, i64* %PC.i643
  %21606 = add i64 %21605, 3
  store i64 %21606, i64* %PC.i643
  %21607 = trunc i64 %21602 to i32
  %21608 = inttoptr i64 %21604 to i32*
  %21609 = load i32, i32* %21608
  %21610 = sub i32 %21607, %21609
  %21611 = zext i32 %21610 to i64
  store i64 %21611, i64* %RAX.i644, align 8
  %21612 = icmp ult i32 %21607, %21609
  %21613 = zext i1 %21612 to i8
  %21614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21613, i8* %21614, align 1
  %21615 = and i32 %21610, 255
  %21616 = call i32 @llvm.ctpop.i32(i32 %21615)
  %21617 = trunc i32 %21616 to i8
  %21618 = and i8 %21617, 1
  %21619 = xor i8 %21618, 1
  %21620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21619, i8* %21620, align 1
  %21621 = xor i32 %21609, %21607
  %21622 = xor i32 %21621, %21610
  %21623 = lshr i32 %21622, 4
  %21624 = trunc i32 %21623 to i8
  %21625 = and i8 %21624, 1
  %21626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21625, i8* %21626, align 1
  %21627 = icmp eq i32 %21610, 0
  %21628 = zext i1 %21627 to i8
  %21629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21628, i8* %21629, align 1
  %21630 = lshr i32 %21610, 31
  %21631 = trunc i32 %21630 to i8
  %21632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21631, i8* %21632, align 1
  %21633 = lshr i32 %21607, 31
  %21634 = lshr i32 %21609, 31
  %21635 = xor i32 %21634, %21633
  %21636 = xor i32 %21630, %21633
  %21637 = add i32 %21636, %21635
  %21638 = icmp eq i32 %21637, 2
  %21639 = zext i1 %21638 to i8
  %21640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21639, i8* %21640, align 1
  store %struct.Memory* %loadMem_40ce6d, %struct.Memory** %MEMORY
  %loadMem_40ce70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21642 = getelementptr inbounds %struct.GPR, %struct.GPR* %21641, i32 0, i32 33
  %21643 = getelementptr inbounds %struct.Reg, %struct.Reg* %21642, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %21643 to i64*
  %21644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21645 = getelementptr inbounds %struct.GPR, %struct.GPR* %21644, i32 0, i32 1
  %21646 = getelementptr inbounds %struct.Reg, %struct.Reg* %21645, i32 0, i32 0
  %EAX.i641 = bitcast %union.anon* %21646 to i32*
  %21647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21648 = getelementptr inbounds %struct.GPR, %struct.GPR* %21647, i32 0, i32 15
  %21649 = getelementptr inbounds %struct.Reg, %struct.Reg* %21648, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %21649 to i64*
  %21650 = load i64, i64* %RBP.i642
  %21651 = sub i64 %21650, 72
  %21652 = load i32, i32* %EAX.i641
  %21653 = zext i32 %21652 to i64
  %21654 = load i64, i64* %PC.i640
  %21655 = add i64 %21654, 3
  store i64 %21655, i64* %PC.i640
  %21656 = inttoptr i64 %21651 to i32*
  store i32 %21652, i32* %21656
  store %struct.Memory* %loadMem_40ce70, %struct.Memory** %MEMORY
  %loadMem_40ce73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21658 = getelementptr inbounds %struct.GPR, %struct.GPR* %21657, i32 0, i32 33
  %21659 = getelementptr inbounds %struct.Reg, %struct.Reg* %21658, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %21659 to i64*
  %21660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21661 = getelementptr inbounds %struct.GPR, %struct.GPR* %21660, i32 0, i32 1
  %21662 = getelementptr inbounds %struct.Reg, %struct.Reg* %21661, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %21662 to i64*
  %21663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21664 = getelementptr inbounds %struct.GPR, %struct.GPR* %21663, i32 0, i32 15
  %21665 = getelementptr inbounds %struct.Reg, %struct.Reg* %21664, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %21665 to i64*
  %21666 = load i64, i64* %RBP.i639
  %21667 = sub i64 %21666, 60
  %21668 = load i64, i64* %PC.i637
  %21669 = add i64 %21668, 3
  store i64 %21669, i64* %PC.i637
  %21670 = inttoptr i64 %21667 to i32*
  %21671 = load i32, i32* %21670
  %21672 = zext i32 %21671 to i64
  store i64 %21672, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_40ce73, %struct.Memory** %MEMORY
  %loadMem_40ce76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21674 = getelementptr inbounds %struct.GPR, %struct.GPR* %21673, i32 0, i32 33
  %21675 = getelementptr inbounds %struct.Reg, %struct.Reg* %21674, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %21675 to i64*
  %21676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21677 = getelementptr inbounds %struct.GPR, %struct.GPR* %21676, i32 0, i32 5
  %21678 = getelementptr inbounds %struct.Reg, %struct.Reg* %21677, i32 0, i32 0
  %RCX.i635 = bitcast %union.anon* %21678 to i64*
  %21679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21680 = getelementptr inbounds %struct.GPR, %struct.GPR* %21679, i32 0, i32 15
  %21681 = getelementptr inbounds %struct.Reg, %struct.Reg* %21680, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %21681 to i64*
  %21682 = load i64, i64* %RBP.i636
  %21683 = sub i64 %21682, 52
  %21684 = load i64, i64* %PC.i634
  %21685 = add i64 %21684, 3
  store i64 %21685, i64* %PC.i634
  %21686 = inttoptr i64 %21683 to i32*
  %21687 = load i32, i32* %21686
  %21688 = zext i32 %21687 to i64
  store i64 %21688, i64* %RCX.i635, align 8
  store %struct.Memory* %loadMem_40ce76, %struct.Memory** %MEMORY
  %loadMem_40ce79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21690 = getelementptr inbounds %struct.GPR, %struct.GPR* %21689, i32 0, i32 33
  %21691 = getelementptr inbounds %struct.Reg, %struct.Reg* %21690, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %21691 to i64*
  %21692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21693 = getelementptr inbounds %struct.GPR, %struct.GPR* %21692, i32 0, i32 5
  %21694 = getelementptr inbounds %struct.Reg, %struct.Reg* %21693, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %21694 to i64*
  %21695 = load i64, i64* %RCX.i633
  %21696 = load i64, i64* %PC.i632
  %21697 = add i64 %21696, 2
  store i64 %21697, i64* %PC.i632
  %21698 = shl i64 %21695, 32
  %21699 = ashr i64 %21698, 33
  %21700 = trunc i64 %21695 to i8
  %21701 = and i8 %21700, 1
  %21702 = trunc i64 %21699 to i32
  %21703 = and i64 %21699, 4294967295
  store i64 %21703, i64* %RCX.i633, align 8
  %21704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21701, i8* %21704, align 1
  %21705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21706 = and i32 %21702, 255
  %21707 = call i32 @llvm.ctpop.i32(i32 %21706)
  %21708 = trunc i32 %21707 to i8
  %21709 = and i8 %21708, 1
  %21710 = xor i8 %21709, 1
  store i8 %21710, i8* %21705, align 1
  %21711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21711, align 1
  %21712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21713 = icmp eq i32 %21702, 0
  %21714 = zext i1 %21713 to i8
  store i8 %21714, i8* %21712, align 1
  %21715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21716 = lshr i32 %21702, 31
  %21717 = trunc i32 %21716 to i8
  store i8 %21717, i8* %21715, align 1
  %21718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21718, align 1
  store %struct.Memory* %loadMem_40ce79, %struct.Memory** %MEMORY
  %loadMem_40ce7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21720 = getelementptr inbounds %struct.GPR, %struct.GPR* %21719, i32 0, i32 33
  %21721 = getelementptr inbounds %struct.Reg, %struct.Reg* %21720, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %21721 to i64*
  %21722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21723 = getelementptr inbounds %struct.GPR, %struct.GPR* %21722, i32 0, i32 5
  %21724 = getelementptr inbounds %struct.Reg, %struct.Reg* %21723, i32 0, i32 0
  %ECX.i630 = bitcast %union.anon* %21724 to i32*
  %21725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21726 = getelementptr inbounds %struct.GPR, %struct.GPR* %21725, i32 0, i32 1
  %21727 = getelementptr inbounds %struct.Reg, %struct.Reg* %21726, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %21727 to i64*
  %21728 = load i64, i64* %RAX.i631
  %21729 = load i32, i32* %ECX.i630
  %21730 = zext i32 %21729 to i64
  %21731 = load i64, i64* %PC.i629
  %21732 = add i64 %21731, 2
  store i64 %21732, i64* %PC.i629
  %21733 = trunc i64 %21728 to i32
  %21734 = add i32 %21729, %21733
  %21735 = zext i32 %21734 to i64
  store i64 %21735, i64* %RAX.i631, align 8
  %21736 = icmp ult i32 %21734, %21733
  %21737 = icmp ult i32 %21734, %21729
  %21738 = or i1 %21736, %21737
  %21739 = zext i1 %21738 to i8
  %21740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21739, i8* %21740, align 1
  %21741 = and i32 %21734, 255
  %21742 = call i32 @llvm.ctpop.i32(i32 %21741)
  %21743 = trunc i32 %21742 to i8
  %21744 = and i8 %21743, 1
  %21745 = xor i8 %21744, 1
  %21746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21745, i8* %21746, align 1
  %21747 = xor i64 %21730, %21728
  %21748 = trunc i64 %21747 to i32
  %21749 = xor i32 %21748, %21734
  %21750 = lshr i32 %21749, 4
  %21751 = trunc i32 %21750 to i8
  %21752 = and i8 %21751, 1
  %21753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21752, i8* %21753, align 1
  %21754 = icmp eq i32 %21734, 0
  %21755 = zext i1 %21754 to i8
  %21756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21755, i8* %21756, align 1
  %21757 = lshr i32 %21734, 31
  %21758 = trunc i32 %21757 to i8
  %21759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21758, i8* %21759, align 1
  %21760 = lshr i32 %21733, 31
  %21761 = lshr i32 %21729, 31
  %21762 = xor i32 %21757, %21760
  %21763 = xor i32 %21757, %21761
  %21764 = add i32 %21762, %21763
  %21765 = icmp eq i32 %21764, 2
  %21766 = zext i1 %21765 to i8
  %21767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21766, i8* %21767, align 1
  store %struct.Memory* %loadMem_40ce7c, %struct.Memory** %MEMORY
  %loadMem_40ce7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21769 = getelementptr inbounds %struct.GPR, %struct.GPR* %21768, i32 0, i32 33
  %21770 = getelementptr inbounds %struct.Reg, %struct.Reg* %21769, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %21770 to i64*
  %21771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21772 = getelementptr inbounds %struct.GPR, %struct.GPR* %21771, i32 0, i32 1
  %21773 = getelementptr inbounds %struct.Reg, %struct.Reg* %21772, i32 0, i32 0
  %EAX.i627 = bitcast %union.anon* %21773 to i32*
  %21774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21775 = getelementptr inbounds %struct.GPR, %struct.GPR* %21774, i32 0, i32 15
  %21776 = getelementptr inbounds %struct.Reg, %struct.Reg* %21775, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %21776 to i64*
  %21777 = load i64, i64* %RBP.i628
  %21778 = sub i64 %21777, 68
  %21779 = load i32, i32* %EAX.i627
  %21780 = zext i32 %21779 to i64
  %21781 = load i64, i64* %PC.i626
  %21782 = add i64 %21781, 3
  store i64 %21782, i64* %PC.i626
  %21783 = inttoptr i64 %21778 to i32*
  store i32 %21779, i32* %21783
  store %struct.Memory* %loadMem_40ce7e, %struct.Memory** %MEMORY
  %loadMem_40ce81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21785 = getelementptr inbounds %struct.GPR, %struct.GPR* %21784, i32 0, i32 33
  %21786 = getelementptr inbounds %struct.Reg, %struct.Reg* %21785, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %21786 to i64*
  %21787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21788 = getelementptr inbounds %struct.GPR, %struct.GPR* %21787, i32 0, i32 15
  %21789 = getelementptr inbounds %struct.Reg, %struct.Reg* %21788, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %21789 to i64*
  %21790 = load i64, i64* %RBP.i625
  %21791 = sub i64 %21790, 20
  %21792 = load i64, i64* %PC.i624
  %21793 = add i64 %21792, 7
  store i64 %21793, i64* %PC.i624
  %21794 = inttoptr i64 %21791 to i32*
  store i32 0, i32* %21794
  store %struct.Memory* %loadMem_40ce81, %struct.Memory** %MEMORY
  br label %block_.L_40ce88

block_.L_40ce88:                                  ; preds = %block_40ce92, %block_.L_40ce55
  %loadMem_40ce88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21796 = getelementptr inbounds %struct.GPR, %struct.GPR* %21795, i32 0, i32 33
  %21797 = getelementptr inbounds %struct.Reg, %struct.Reg* %21796, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %21797 to i64*
  %21798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21799 = getelementptr inbounds %struct.GPR, %struct.GPR* %21798, i32 0, i32 15
  %21800 = getelementptr inbounds %struct.Reg, %struct.Reg* %21799, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %21800 to i64*
  %21801 = load i64, i64* %RBP.i623
  %21802 = sub i64 %21801, 20
  %21803 = load i64, i64* %PC.i622
  %21804 = add i64 %21803, 4
  store i64 %21804, i64* %PC.i622
  %21805 = inttoptr i64 %21802 to i32*
  %21806 = load i32, i32* %21805
  %21807 = sub i32 %21806, 2
  %21808 = icmp ult i32 %21806, 2
  %21809 = zext i1 %21808 to i8
  %21810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21809, i8* %21810, align 1
  %21811 = and i32 %21807, 255
  %21812 = call i32 @llvm.ctpop.i32(i32 %21811)
  %21813 = trunc i32 %21812 to i8
  %21814 = and i8 %21813, 1
  %21815 = xor i8 %21814, 1
  %21816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21815, i8* %21816, align 1
  %21817 = xor i32 %21806, 2
  %21818 = xor i32 %21817, %21807
  %21819 = lshr i32 %21818, 4
  %21820 = trunc i32 %21819 to i8
  %21821 = and i8 %21820, 1
  %21822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21821, i8* %21822, align 1
  %21823 = icmp eq i32 %21807, 0
  %21824 = zext i1 %21823 to i8
  %21825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21824, i8* %21825, align 1
  %21826 = lshr i32 %21807, 31
  %21827 = trunc i32 %21826 to i8
  %21828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21827, i8* %21828, align 1
  %21829 = lshr i32 %21806, 31
  %21830 = xor i32 %21826, %21829
  %21831 = add i32 %21830, %21829
  %21832 = icmp eq i32 %21831, 2
  %21833 = zext i1 %21832 to i8
  %21834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21833, i8* %21834, align 1
  store %struct.Memory* %loadMem_40ce88, %struct.Memory** %MEMORY
  %loadMem_40ce8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %21835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21836 = getelementptr inbounds %struct.GPR, %struct.GPR* %21835, i32 0, i32 33
  %21837 = getelementptr inbounds %struct.Reg, %struct.Reg* %21836, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %21837 to i64*
  %21838 = load i64, i64* %PC.i621
  %21839 = add i64 %21838, 129
  %21840 = load i64, i64* %PC.i621
  %21841 = add i64 %21840, 6
  %21842 = load i64, i64* %PC.i621
  %21843 = add i64 %21842, 6
  store i64 %21843, i64* %PC.i621
  %21844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %21845 = load i8, i8* %21844, align 1
  %21846 = icmp ne i8 %21845, 0
  %21847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %21848 = load i8, i8* %21847, align 1
  %21849 = icmp ne i8 %21848, 0
  %21850 = xor i1 %21846, %21849
  %21851 = xor i1 %21850, true
  %21852 = zext i1 %21851 to i8
  store i8 %21852, i8* %BRANCH_TAKEN, align 1
  %21853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21854 = select i1 %21850, i64 %21841, i64 %21839
  store i64 %21854, i64* %21853, align 8
  store %struct.Memory* %loadMem_40ce8c, %struct.Memory** %MEMORY
  %loadBr_40ce8c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ce8c = icmp eq i8 %loadBr_40ce8c, 1
  br i1 %cmpBr_40ce8c, label %block_.L_40cf0d, label %block_40ce92

block_40ce92:                                     ; preds = %block_.L_40ce88
  %loadMem_40ce92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21856 = getelementptr inbounds %struct.GPR, %struct.GPR* %21855, i32 0, i32 33
  %21857 = getelementptr inbounds %struct.Reg, %struct.Reg* %21856, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %21857 to i64*
  %21858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21859 = getelementptr inbounds %struct.GPR, %struct.GPR* %21858, i32 0, i32 1
  %21860 = getelementptr inbounds %struct.Reg, %struct.Reg* %21859, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %21860 to i64*
  %21861 = load i64, i64* %PC.i619
  %21862 = add i64 %21861, 5
  store i64 %21862, i64* %PC.i619
  store i64 3, i64* %RAX.i620, align 8
  store %struct.Memory* %loadMem_40ce92, %struct.Memory** %MEMORY
  %loadMem_40ce97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21864 = getelementptr inbounds %struct.GPR, %struct.GPR* %21863, i32 0, i32 33
  %21865 = getelementptr inbounds %struct.Reg, %struct.Reg* %21864, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %21865 to i64*
  %21866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21867 = getelementptr inbounds %struct.GPR, %struct.GPR* %21866, i32 0, i32 1
  %21868 = getelementptr inbounds %struct.Reg, %struct.Reg* %21867, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %21868 to i64*
  %21869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21870 = getelementptr inbounds %struct.GPR, %struct.GPR* %21869, i32 0, i32 15
  %21871 = getelementptr inbounds %struct.Reg, %struct.Reg* %21870, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %21871 to i64*
  %21872 = load i64, i64* %RAX.i617
  %21873 = load i64, i64* %RBP.i618
  %21874 = sub i64 %21873, 20
  %21875 = load i64, i64* %PC.i616
  %21876 = add i64 %21875, 3
  store i64 %21876, i64* %PC.i616
  %21877 = trunc i64 %21872 to i32
  %21878 = inttoptr i64 %21874 to i32*
  %21879 = load i32, i32* %21878
  %21880 = sub i32 %21877, %21879
  %21881 = zext i32 %21880 to i64
  store i64 %21881, i64* %RAX.i617, align 8
  %21882 = icmp ult i32 %21877, %21879
  %21883 = zext i1 %21882 to i8
  %21884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21883, i8* %21884, align 1
  %21885 = and i32 %21880, 255
  %21886 = call i32 @llvm.ctpop.i32(i32 %21885)
  %21887 = trunc i32 %21886 to i8
  %21888 = and i8 %21887, 1
  %21889 = xor i8 %21888, 1
  %21890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21889, i8* %21890, align 1
  %21891 = xor i32 %21879, %21877
  %21892 = xor i32 %21891, %21880
  %21893 = lshr i32 %21892, 4
  %21894 = trunc i32 %21893 to i8
  %21895 = and i8 %21894, 1
  %21896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21895, i8* %21896, align 1
  %21897 = icmp eq i32 %21880, 0
  %21898 = zext i1 %21897 to i8
  %21899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21898, i8* %21899, align 1
  %21900 = lshr i32 %21880, 31
  %21901 = trunc i32 %21900 to i8
  %21902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21901, i8* %21902, align 1
  %21903 = lshr i32 %21877, 31
  %21904 = lshr i32 %21879, 31
  %21905 = xor i32 %21904, %21903
  %21906 = xor i32 %21900, %21903
  %21907 = add i32 %21906, %21905
  %21908 = icmp eq i32 %21907, 2
  %21909 = zext i1 %21908 to i8
  %21910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21909, i8* %21910, align 1
  store %struct.Memory* %loadMem_40ce97, %struct.Memory** %MEMORY
  %loadMem_40ce9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %21911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21912 = getelementptr inbounds %struct.GPR, %struct.GPR* %21911, i32 0, i32 33
  %21913 = getelementptr inbounds %struct.Reg, %struct.Reg* %21912, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %21913 to i64*
  %21914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21915 = getelementptr inbounds %struct.GPR, %struct.GPR* %21914, i32 0, i32 1
  %21916 = getelementptr inbounds %struct.Reg, %struct.Reg* %21915, i32 0, i32 0
  %EAX.i614 = bitcast %union.anon* %21916 to i32*
  %21917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21918 = getelementptr inbounds %struct.GPR, %struct.GPR* %21917, i32 0, i32 15
  %21919 = getelementptr inbounds %struct.Reg, %struct.Reg* %21918, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %21919 to i64*
  %21920 = load i64, i64* %RBP.i615
  %21921 = sub i64 %21920, 28
  %21922 = load i32, i32* %EAX.i614
  %21923 = zext i32 %21922 to i64
  %21924 = load i64, i64* %PC.i613
  %21925 = add i64 %21924, 3
  store i64 %21925, i64* %PC.i613
  %21926 = inttoptr i64 %21921 to i32*
  store i32 %21922, i32* %21926
  store %struct.Memory* %loadMem_40ce9a, %struct.Memory** %MEMORY
  %loadMem_40ce9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %21927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21928 = getelementptr inbounds %struct.GPR, %struct.GPR* %21927, i32 0, i32 33
  %21929 = getelementptr inbounds %struct.Reg, %struct.Reg* %21928, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %21929 to i64*
  %21930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21931 = getelementptr inbounds %struct.GPR, %struct.GPR* %21930, i32 0, i32 5
  %21932 = getelementptr inbounds %struct.Reg, %struct.Reg* %21931, i32 0, i32 0
  %RCX.i611 = bitcast %union.anon* %21932 to i64*
  %21933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21934 = getelementptr inbounds %struct.GPR, %struct.GPR* %21933, i32 0, i32 15
  %21935 = getelementptr inbounds %struct.Reg, %struct.Reg* %21934, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %21935 to i64*
  %21936 = load i64, i64* %RBP.i612
  %21937 = sub i64 %21936, 20
  %21938 = load i64, i64* %PC.i610
  %21939 = add i64 %21938, 4
  store i64 %21939, i64* %PC.i610
  %21940 = inttoptr i64 %21937 to i32*
  %21941 = load i32, i32* %21940
  %21942 = sext i32 %21941 to i64
  store i64 %21942, i64* %RCX.i611, align 8
  store %struct.Memory* %loadMem_40ce9d, %struct.Memory** %MEMORY
  %loadMem_40cea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21944 = getelementptr inbounds %struct.GPR, %struct.GPR* %21943, i32 0, i32 33
  %21945 = getelementptr inbounds %struct.Reg, %struct.Reg* %21944, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %21945 to i64*
  %21946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21947 = getelementptr inbounds %struct.GPR, %struct.GPR* %21946, i32 0, i32 1
  %21948 = getelementptr inbounds %struct.Reg, %struct.Reg* %21947, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %21948 to i64*
  %21949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21950 = getelementptr inbounds %struct.GPR, %struct.GPR* %21949, i32 0, i32 5
  %21951 = getelementptr inbounds %struct.Reg, %struct.Reg* %21950, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %21951 to i64*
  %21952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21953 = getelementptr inbounds %struct.GPR, %struct.GPR* %21952, i32 0, i32 15
  %21954 = getelementptr inbounds %struct.Reg, %struct.Reg* %21953, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %21954 to i64*
  %21955 = load i64, i64* %RBP.i609
  %21956 = load i64, i64* %RCX.i608
  %21957 = mul i64 %21956, 4
  %21958 = add i64 %21955, -80
  %21959 = add i64 %21958, %21957
  %21960 = load i64, i64* %PC.i606
  %21961 = add i64 %21960, 4
  store i64 %21961, i64* %PC.i606
  %21962 = inttoptr i64 %21959 to i32*
  %21963 = load i32, i32* %21962
  %21964 = zext i32 %21963 to i64
  store i64 %21964, i64* %RAX.i607, align 8
  store %struct.Memory* %loadMem_40cea1, %struct.Memory** %MEMORY
  %loadMem_40cea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21966 = getelementptr inbounds %struct.GPR, %struct.GPR* %21965, i32 0, i32 33
  %21967 = getelementptr inbounds %struct.Reg, %struct.Reg* %21966, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %21967 to i64*
  %21968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21969 = getelementptr inbounds %struct.GPR, %struct.GPR* %21968, i32 0, i32 5
  %21970 = getelementptr inbounds %struct.Reg, %struct.Reg* %21969, i32 0, i32 0
  %RCX.i604 = bitcast %union.anon* %21970 to i64*
  %21971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21972 = getelementptr inbounds %struct.GPR, %struct.GPR* %21971, i32 0, i32 15
  %21973 = getelementptr inbounds %struct.Reg, %struct.Reg* %21972, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %21973 to i64*
  %21974 = load i64, i64* %RBP.i605
  %21975 = sub i64 %21974, 28
  %21976 = load i64, i64* %PC.i603
  %21977 = add i64 %21976, 4
  store i64 %21977, i64* %PC.i603
  %21978 = inttoptr i64 %21975 to i32*
  %21979 = load i32, i32* %21978
  %21980 = sext i32 %21979 to i64
  store i64 %21980, i64* %RCX.i604, align 8
  store %struct.Memory* %loadMem_40cea5, %struct.Memory** %MEMORY
  %loadMem_40cea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21982 = getelementptr inbounds %struct.GPR, %struct.GPR* %21981, i32 0, i32 33
  %21983 = getelementptr inbounds %struct.Reg, %struct.Reg* %21982, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %21983 to i64*
  %21984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21985 = getelementptr inbounds %struct.GPR, %struct.GPR* %21984, i32 0, i32 1
  %21986 = getelementptr inbounds %struct.Reg, %struct.Reg* %21985, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %21986 to i64*
  %21987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21988 = getelementptr inbounds %struct.GPR, %struct.GPR* %21987, i32 0, i32 5
  %21989 = getelementptr inbounds %struct.Reg, %struct.Reg* %21988, i32 0, i32 0
  %RCX.i601 = bitcast %union.anon* %21989 to i64*
  %21990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21991 = getelementptr inbounds %struct.GPR, %struct.GPR* %21990, i32 0, i32 15
  %21992 = getelementptr inbounds %struct.Reg, %struct.Reg* %21991, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %21992 to i64*
  %21993 = load i64, i64* %RAX.i600
  %21994 = load i64, i64* %RBP.i602
  %21995 = load i64, i64* %RCX.i601
  %21996 = mul i64 %21995, 4
  %21997 = add i64 %21994, -80
  %21998 = add i64 %21997, %21996
  %21999 = load i64, i64* %PC.i599
  %22000 = add i64 %21999, 4
  store i64 %22000, i64* %PC.i599
  %22001 = trunc i64 %21993 to i32
  %22002 = inttoptr i64 %21998 to i32*
  %22003 = load i32, i32* %22002
  %22004 = add i32 %22003, %22001
  %22005 = zext i32 %22004 to i64
  store i64 %22005, i64* %RAX.i600, align 8
  %22006 = icmp ult i32 %22004, %22001
  %22007 = icmp ult i32 %22004, %22003
  %22008 = or i1 %22006, %22007
  %22009 = zext i1 %22008 to i8
  %22010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22009, i8* %22010, align 1
  %22011 = and i32 %22004, 255
  %22012 = call i32 @llvm.ctpop.i32(i32 %22011)
  %22013 = trunc i32 %22012 to i8
  %22014 = and i8 %22013, 1
  %22015 = xor i8 %22014, 1
  %22016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22015, i8* %22016, align 1
  %22017 = xor i32 %22003, %22001
  %22018 = xor i32 %22017, %22004
  %22019 = lshr i32 %22018, 4
  %22020 = trunc i32 %22019 to i8
  %22021 = and i8 %22020, 1
  %22022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22021, i8* %22022, align 1
  %22023 = icmp eq i32 %22004, 0
  %22024 = zext i1 %22023 to i8
  %22025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22024, i8* %22025, align 1
  %22026 = lshr i32 %22004, 31
  %22027 = trunc i32 %22026 to i8
  %22028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22027, i8* %22028, align 1
  %22029 = lshr i32 %22001, 31
  %22030 = lshr i32 %22003, 31
  %22031 = xor i32 %22026, %22029
  %22032 = xor i32 %22026, %22030
  %22033 = add i32 %22031, %22032
  %22034 = icmp eq i32 %22033, 2
  %22035 = zext i1 %22034 to i8
  %22036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22035, i8* %22036, align 1
  store %struct.Memory* %loadMem_40cea9, %struct.Memory** %MEMORY
  %loadMem_40cead = load %struct.Memory*, %struct.Memory** %MEMORY
  %22037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22038 = getelementptr inbounds %struct.GPR, %struct.GPR* %22037, i32 0, i32 33
  %22039 = getelementptr inbounds %struct.Reg, %struct.Reg* %22038, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %22039 to i64*
  %22040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22041 = getelementptr inbounds %struct.GPR, %struct.GPR* %22040, i32 0, i32 5
  %22042 = getelementptr inbounds %struct.Reg, %struct.Reg* %22041, i32 0, i32 0
  %RCX.i598 = bitcast %union.anon* %22042 to i64*
  %22043 = load i64, i64* %PC.i597
  %22044 = add i64 %22043, 8
  store i64 %22044, i64* %PC.i597
  %22045 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22045, i64* %RCX.i598, align 8
  store %struct.Memory* %loadMem_40cead, %struct.Memory** %MEMORY
  %loadMem_40ceb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22047 = getelementptr inbounds %struct.GPR, %struct.GPR* %22046, i32 0, i32 33
  %22048 = getelementptr inbounds %struct.Reg, %struct.Reg* %22047, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %22048 to i64*
  %22049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22050 = getelementptr inbounds %struct.GPR, %struct.GPR* %22049, i32 0, i32 5
  %22051 = getelementptr inbounds %struct.Reg, %struct.Reg* %22050, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %22051 to i64*
  %22052 = load i64, i64* %RCX.i596
  %22053 = load i64, i64* %PC.i595
  %22054 = add i64 %22053, 7
  store i64 %22054, i64* %PC.i595
  %22055 = add i64 13112, %22052
  store i64 %22055, i64* %RCX.i596, align 8
  %22056 = icmp ult i64 %22055, %22052
  %22057 = icmp ult i64 %22055, 13112
  %22058 = or i1 %22056, %22057
  %22059 = zext i1 %22058 to i8
  %22060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22059, i8* %22060, align 1
  %22061 = trunc i64 %22055 to i32
  %22062 = and i32 %22061, 255
  %22063 = call i32 @llvm.ctpop.i32(i32 %22062)
  %22064 = trunc i32 %22063 to i8
  %22065 = and i8 %22064, 1
  %22066 = xor i8 %22065, 1
  %22067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22066, i8* %22067, align 1
  %22068 = xor i64 13112, %22052
  %22069 = xor i64 %22068, %22055
  %22070 = lshr i64 %22069, 4
  %22071 = trunc i64 %22070 to i8
  %22072 = and i8 %22071, 1
  %22073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22072, i8* %22073, align 1
  %22074 = icmp eq i64 %22055, 0
  %22075 = zext i1 %22074 to i8
  %22076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22075, i8* %22076, align 1
  %22077 = lshr i64 %22055, 63
  %22078 = trunc i64 %22077 to i8
  %22079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22078, i8* %22079, align 1
  %22080 = lshr i64 %22052, 63
  %22081 = xor i64 %22077, %22080
  %22082 = add i64 %22081, %22077
  %22083 = icmp eq i64 %22082, 2
  %22084 = zext i1 %22083 to i8
  %22085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22084, i8* %22085, align 1
  store %struct.Memory* %loadMem_40ceb5, %struct.Memory** %MEMORY
  %loadMem_40cebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %22086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22087 = getelementptr inbounds %struct.GPR, %struct.GPR* %22086, i32 0, i32 33
  %22088 = getelementptr inbounds %struct.Reg, %struct.Reg* %22087, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %22088 to i64*
  %22089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22090 = getelementptr inbounds %struct.GPR, %struct.GPR* %22089, i32 0, i32 7
  %22091 = getelementptr inbounds %struct.Reg, %struct.Reg* %22090, i32 0, i32 0
  %RDX.i593 = bitcast %union.anon* %22091 to i64*
  %22092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22093 = getelementptr inbounds %struct.GPR, %struct.GPR* %22092, i32 0, i32 15
  %22094 = getelementptr inbounds %struct.Reg, %struct.Reg* %22093, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %22094 to i64*
  %22095 = load i64, i64* %RBP.i594
  %22096 = sub i64 %22095, 20
  %22097 = load i64, i64* %PC.i592
  %22098 = add i64 %22097, 4
  store i64 %22098, i64* %PC.i592
  %22099 = inttoptr i64 %22096 to i32*
  %22100 = load i32, i32* %22099
  %22101 = sext i32 %22100 to i64
  store i64 %22101, i64* %RDX.i593, align 8
  store %struct.Memory* %loadMem_40cebc, %struct.Memory** %MEMORY
  %loadMem_40cec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22103 = getelementptr inbounds %struct.GPR, %struct.GPR* %22102, i32 0, i32 33
  %22104 = getelementptr inbounds %struct.Reg, %struct.Reg* %22103, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %22104 to i64*
  %22105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22106 = getelementptr inbounds %struct.GPR, %struct.GPR* %22105, i32 0, i32 7
  %22107 = getelementptr inbounds %struct.Reg, %struct.Reg* %22106, i32 0, i32 0
  %RDX.i591 = bitcast %union.anon* %22107 to i64*
  %22108 = load i64, i64* %RDX.i591
  %22109 = load i64, i64* %PC.i590
  %22110 = add i64 %22109, 4
  store i64 %22110, i64* %PC.i590
  %22111 = shl i64 %22108, 5
  %22112 = icmp slt i64 %22111, 0
  %22113 = shl i64 %22111, 1
  store i64 %22113, i64* %RDX.i591, align 8
  %22114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22115 = zext i1 %22112 to i8
  store i8 %22115, i8* %22114, align 1
  %22116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22117 = trunc i64 %22113 to i32
  %22118 = and i32 %22117, 254
  %22119 = call i32 @llvm.ctpop.i32(i32 %22118)
  %22120 = trunc i32 %22119 to i8
  %22121 = and i8 %22120, 1
  %22122 = xor i8 %22121, 1
  store i8 %22122, i8* %22116, align 1
  %22123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22123, align 1
  %22124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22125 = icmp eq i64 %22113, 0
  %22126 = zext i1 %22125 to i8
  store i8 %22126, i8* %22124, align 1
  %22127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22128 = lshr i64 %22113, 63
  %22129 = trunc i64 %22128 to i8
  store i8 %22129, i8* %22127, align 1
  %22130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22130, align 1
  store %struct.Memory* %loadMem_40cec0, %struct.Memory** %MEMORY
  %loadMem_40cec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22132 = getelementptr inbounds %struct.GPR, %struct.GPR* %22131, i32 0, i32 33
  %22133 = getelementptr inbounds %struct.Reg, %struct.Reg* %22132, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %22133 to i64*
  %22134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22135 = getelementptr inbounds %struct.GPR, %struct.GPR* %22134, i32 0, i32 5
  %22136 = getelementptr inbounds %struct.Reg, %struct.Reg* %22135, i32 0, i32 0
  %RCX.i588 = bitcast %union.anon* %22136 to i64*
  %22137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22138 = getelementptr inbounds %struct.GPR, %struct.GPR* %22137, i32 0, i32 7
  %22139 = getelementptr inbounds %struct.Reg, %struct.Reg* %22138, i32 0, i32 0
  %RDX.i589 = bitcast %union.anon* %22139 to i64*
  %22140 = load i64, i64* %RCX.i588
  %22141 = load i64, i64* %RDX.i589
  %22142 = load i64, i64* %PC.i587
  %22143 = add i64 %22142, 3
  store i64 %22143, i64* %PC.i587
  %22144 = add i64 %22141, %22140
  store i64 %22144, i64* %RCX.i588, align 8
  %22145 = icmp ult i64 %22144, %22140
  %22146 = icmp ult i64 %22144, %22141
  %22147 = or i1 %22145, %22146
  %22148 = zext i1 %22147 to i8
  %22149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22148, i8* %22149, align 1
  %22150 = trunc i64 %22144 to i32
  %22151 = and i32 %22150, 255
  %22152 = call i32 @llvm.ctpop.i32(i32 %22151)
  %22153 = trunc i32 %22152 to i8
  %22154 = and i8 %22153, 1
  %22155 = xor i8 %22154, 1
  %22156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22155, i8* %22156, align 1
  %22157 = xor i64 %22141, %22140
  %22158 = xor i64 %22157, %22144
  %22159 = lshr i64 %22158, 4
  %22160 = trunc i64 %22159 to i8
  %22161 = and i8 %22160, 1
  %22162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22161, i8* %22162, align 1
  %22163 = icmp eq i64 %22144, 0
  %22164 = zext i1 %22163 to i8
  %22165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22164, i8* %22165, align 1
  %22166 = lshr i64 %22144, 63
  %22167 = trunc i64 %22166 to i8
  %22168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22167, i8* %22168, align 1
  %22169 = lshr i64 %22140, 63
  %22170 = lshr i64 %22141, 63
  %22171 = xor i64 %22166, %22169
  %22172 = xor i64 %22166, %22170
  %22173 = add i64 %22171, %22172
  %22174 = icmp eq i64 %22173, 2
  %22175 = zext i1 %22174 to i8
  %22176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22175, i8* %22176, align 1
  store %struct.Memory* %loadMem_40cec4, %struct.Memory** %MEMORY
  %loadMem_40cec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22178 = getelementptr inbounds %struct.GPR, %struct.GPR* %22177, i32 0, i32 33
  %22179 = getelementptr inbounds %struct.Reg, %struct.Reg* %22178, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %22179 to i64*
  %22180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22181 = getelementptr inbounds %struct.GPR, %struct.GPR* %22180, i32 0, i32 7
  %22182 = getelementptr inbounds %struct.Reg, %struct.Reg* %22181, i32 0, i32 0
  %RDX.i585 = bitcast %union.anon* %22182 to i64*
  %22183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22184 = getelementptr inbounds %struct.GPR, %struct.GPR* %22183, i32 0, i32 15
  %22185 = getelementptr inbounds %struct.Reg, %struct.Reg* %22184, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %22185 to i64*
  %22186 = load i64, i64* %RBP.i586
  %22187 = sub i64 %22186, 24
  %22188 = load i64, i64* %PC.i584
  %22189 = add i64 %22188, 4
  store i64 %22189, i64* %PC.i584
  %22190 = inttoptr i64 %22187 to i32*
  %22191 = load i32, i32* %22190
  %22192 = sext i32 %22191 to i64
  store i64 %22192, i64* %RDX.i585, align 8
  store %struct.Memory* %loadMem_40cec7, %struct.Memory** %MEMORY
  %loadMem_40cecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %22193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22194 = getelementptr inbounds %struct.GPR, %struct.GPR* %22193, i32 0, i32 33
  %22195 = getelementptr inbounds %struct.Reg, %struct.Reg* %22194, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %22195 to i64*
  %22196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22197 = getelementptr inbounds %struct.GPR, %struct.GPR* %22196, i32 0, i32 1
  %22198 = getelementptr inbounds %struct.Reg, %struct.Reg* %22197, i32 0, i32 0
  %EAX.i581 = bitcast %union.anon* %22198 to i32*
  %22199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22200 = getelementptr inbounds %struct.GPR, %struct.GPR* %22199, i32 0, i32 5
  %22201 = getelementptr inbounds %struct.Reg, %struct.Reg* %22200, i32 0, i32 0
  %RCX.i582 = bitcast %union.anon* %22201 to i64*
  %22202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22203 = getelementptr inbounds %struct.GPR, %struct.GPR* %22202, i32 0, i32 7
  %22204 = getelementptr inbounds %struct.Reg, %struct.Reg* %22203, i32 0, i32 0
  %RDX.i583 = bitcast %union.anon* %22204 to i64*
  %22205 = load i64, i64* %RCX.i582
  %22206 = load i64, i64* %RDX.i583
  %22207 = mul i64 %22206, 4
  %22208 = add i64 %22207, %22205
  %22209 = load i32, i32* %EAX.i581
  %22210 = zext i32 %22209 to i64
  %22211 = load i64, i64* %PC.i580
  %22212 = add i64 %22211, 3
  store i64 %22212, i64* %PC.i580
  %22213 = inttoptr i64 %22208 to i32*
  store i32 %22209, i32* %22213
  store %struct.Memory* %loadMem_40cecb, %struct.Memory** %MEMORY
  %loadMem_40cece = load %struct.Memory*, %struct.Memory** %MEMORY
  %22214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22215 = getelementptr inbounds %struct.GPR, %struct.GPR* %22214, i32 0, i32 33
  %22216 = getelementptr inbounds %struct.Reg, %struct.Reg* %22215, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %22216 to i64*
  %22217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22218 = getelementptr inbounds %struct.GPR, %struct.GPR* %22217, i32 0, i32 5
  %22219 = getelementptr inbounds %struct.Reg, %struct.Reg* %22218, i32 0, i32 0
  %RCX.i578 = bitcast %union.anon* %22219 to i64*
  %22220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22221 = getelementptr inbounds %struct.GPR, %struct.GPR* %22220, i32 0, i32 15
  %22222 = getelementptr inbounds %struct.Reg, %struct.Reg* %22221, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %22222 to i64*
  %22223 = load i64, i64* %RBP.i579
  %22224 = sub i64 %22223, 20
  %22225 = load i64, i64* %PC.i577
  %22226 = add i64 %22225, 4
  store i64 %22226, i64* %PC.i577
  %22227 = inttoptr i64 %22224 to i32*
  %22228 = load i32, i32* %22227
  %22229 = sext i32 %22228 to i64
  store i64 %22229, i64* %RCX.i578, align 8
  store %struct.Memory* %loadMem_40cece, %struct.Memory** %MEMORY
  %loadMem_40ced2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22231 = getelementptr inbounds %struct.GPR, %struct.GPR* %22230, i32 0, i32 33
  %22232 = getelementptr inbounds %struct.Reg, %struct.Reg* %22231, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %22232 to i64*
  %22233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22234 = getelementptr inbounds %struct.GPR, %struct.GPR* %22233, i32 0, i32 1
  %22235 = getelementptr inbounds %struct.Reg, %struct.Reg* %22234, i32 0, i32 0
  %RAX.i574 = bitcast %union.anon* %22235 to i64*
  %22236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22237 = getelementptr inbounds %struct.GPR, %struct.GPR* %22236, i32 0, i32 5
  %22238 = getelementptr inbounds %struct.Reg, %struct.Reg* %22237, i32 0, i32 0
  %RCX.i575 = bitcast %union.anon* %22238 to i64*
  %22239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22240 = getelementptr inbounds %struct.GPR, %struct.GPR* %22239, i32 0, i32 15
  %22241 = getelementptr inbounds %struct.Reg, %struct.Reg* %22240, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %22241 to i64*
  %22242 = load i64, i64* %RBP.i576
  %22243 = load i64, i64* %RCX.i575
  %22244 = mul i64 %22243, 4
  %22245 = add i64 %22242, -80
  %22246 = add i64 %22245, %22244
  %22247 = load i64, i64* %PC.i573
  %22248 = add i64 %22247, 4
  store i64 %22248, i64* %PC.i573
  %22249 = inttoptr i64 %22246 to i32*
  %22250 = load i32, i32* %22249
  %22251 = zext i32 %22250 to i64
  store i64 %22251, i64* %RAX.i574, align 8
  store %struct.Memory* %loadMem_40ced2, %struct.Memory** %MEMORY
  %loadMem_40ced6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22253 = getelementptr inbounds %struct.GPR, %struct.GPR* %22252, i32 0, i32 33
  %22254 = getelementptr inbounds %struct.Reg, %struct.Reg* %22253, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %22254 to i64*
  %22255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22256 = getelementptr inbounds %struct.GPR, %struct.GPR* %22255, i32 0, i32 5
  %22257 = getelementptr inbounds %struct.Reg, %struct.Reg* %22256, i32 0, i32 0
  %RCX.i571 = bitcast %union.anon* %22257 to i64*
  %22258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22259 = getelementptr inbounds %struct.GPR, %struct.GPR* %22258, i32 0, i32 15
  %22260 = getelementptr inbounds %struct.Reg, %struct.Reg* %22259, i32 0, i32 0
  %RBP.i572 = bitcast %union.anon* %22260 to i64*
  %22261 = load i64, i64* %RBP.i572
  %22262 = sub i64 %22261, 28
  %22263 = load i64, i64* %PC.i570
  %22264 = add i64 %22263, 4
  store i64 %22264, i64* %PC.i570
  %22265 = inttoptr i64 %22262 to i32*
  %22266 = load i32, i32* %22265
  %22267 = sext i32 %22266 to i64
  store i64 %22267, i64* %RCX.i571, align 8
  store %struct.Memory* %loadMem_40ced6, %struct.Memory** %MEMORY
  %loadMem_40ceda = load %struct.Memory*, %struct.Memory** %MEMORY
  %22268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22269 = getelementptr inbounds %struct.GPR, %struct.GPR* %22268, i32 0, i32 33
  %22270 = getelementptr inbounds %struct.Reg, %struct.Reg* %22269, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %22270 to i64*
  %22271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22272 = getelementptr inbounds %struct.GPR, %struct.GPR* %22271, i32 0, i32 1
  %22273 = getelementptr inbounds %struct.Reg, %struct.Reg* %22272, i32 0, i32 0
  %RAX.i567 = bitcast %union.anon* %22273 to i64*
  %22274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22275 = getelementptr inbounds %struct.GPR, %struct.GPR* %22274, i32 0, i32 5
  %22276 = getelementptr inbounds %struct.Reg, %struct.Reg* %22275, i32 0, i32 0
  %RCX.i568 = bitcast %union.anon* %22276 to i64*
  %22277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22278 = getelementptr inbounds %struct.GPR, %struct.GPR* %22277, i32 0, i32 15
  %22279 = getelementptr inbounds %struct.Reg, %struct.Reg* %22278, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %22279 to i64*
  %22280 = load i64, i64* %RAX.i567
  %22281 = load i64, i64* %RBP.i569
  %22282 = load i64, i64* %RCX.i568
  %22283 = mul i64 %22282, 4
  %22284 = add i64 %22281, -80
  %22285 = add i64 %22284, %22283
  %22286 = load i64, i64* %PC.i566
  %22287 = add i64 %22286, 4
  store i64 %22287, i64* %PC.i566
  %22288 = trunc i64 %22280 to i32
  %22289 = inttoptr i64 %22285 to i32*
  %22290 = load i32, i32* %22289
  %22291 = sub i32 %22288, %22290
  %22292 = zext i32 %22291 to i64
  store i64 %22292, i64* %RAX.i567, align 8
  %22293 = icmp ult i32 %22288, %22290
  %22294 = zext i1 %22293 to i8
  %22295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22294, i8* %22295, align 1
  %22296 = and i32 %22291, 255
  %22297 = call i32 @llvm.ctpop.i32(i32 %22296)
  %22298 = trunc i32 %22297 to i8
  %22299 = and i8 %22298, 1
  %22300 = xor i8 %22299, 1
  %22301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22300, i8* %22301, align 1
  %22302 = xor i32 %22290, %22288
  %22303 = xor i32 %22302, %22291
  %22304 = lshr i32 %22303, 4
  %22305 = trunc i32 %22304 to i8
  %22306 = and i8 %22305, 1
  %22307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22306, i8* %22307, align 1
  %22308 = icmp eq i32 %22291, 0
  %22309 = zext i1 %22308 to i8
  %22310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22309, i8* %22310, align 1
  %22311 = lshr i32 %22291, 31
  %22312 = trunc i32 %22311 to i8
  %22313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22312, i8* %22313, align 1
  %22314 = lshr i32 %22288, 31
  %22315 = lshr i32 %22290, 31
  %22316 = xor i32 %22315, %22314
  %22317 = xor i32 %22311, %22314
  %22318 = add i32 %22317, %22316
  %22319 = icmp eq i32 %22318, 2
  %22320 = zext i1 %22319 to i8
  %22321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22320, i8* %22321, align 1
  store %struct.Memory* %loadMem_40ceda, %struct.Memory** %MEMORY
  %loadMem_40cede = load %struct.Memory*, %struct.Memory** %MEMORY
  %22322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22323 = getelementptr inbounds %struct.GPR, %struct.GPR* %22322, i32 0, i32 33
  %22324 = getelementptr inbounds %struct.Reg, %struct.Reg* %22323, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %22324 to i64*
  %22325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22326 = getelementptr inbounds %struct.GPR, %struct.GPR* %22325, i32 0, i32 5
  %22327 = getelementptr inbounds %struct.Reg, %struct.Reg* %22326, i32 0, i32 0
  %RCX.i565 = bitcast %union.anon* %22327 to i64*
  %22328 = load i64, i64* %PC.i564
  %22329 = add i64 %22328, 8
  store i64 %22329, i64* %PC.i564
  %22330 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22330, i64* %RCX.i565, align 8
  store %struct.Memory* %loadMem_40cede, %struct.Memory** %MEMORY
  %loadMem_40cee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22332 = getelementptr inbounds %struct.GPR, %struct.GPR* %22331, i32 0, i32 33
  %22333 = getelementptr inbounds %struct.Reg, %struct.Reg* %22332, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %22333 to i64*
  %22334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22335 = getelementptr inbounds %struct.GPR, %struct.GPR* %22334, i32 0, i32 5
  %22336 = getelementptr inbounds %struct.Reg, %struct.Reg* %22335, i32 0, i32 0
  %RCX.i563 = bitcast %union.anon* %22336 to i64*
  %22337 = load i64, i64* %RCX.i563
  %22338 = load i64, i64* %PC.i562
  %22339 = add i64 %22338, 7
  store i64 %22339, i64* %PC.i562
  %22340 = add i64 13112, %22337
  store i64 %22340, i64* %RCX.i563, align 8
  %22341 = icmp ult i64 %22340, %22337
  %22342 = icmp ult i64 %22340, 13112
  %22343 = or i1 %22341, %22342
  %22344 = zext i1 %22343 to i8
  %22345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22344, i8* %22345, align 1
  %22346 = trunc i64 %22340 to i32
  %22347 = and i32 %22346, 255
  %22348 = call i32 @llvm.ctpop.i32(i32 %22347)
  %22349 = trunc i32 %22348 to i8
  %22350 = and i8 %22349, 1
  %22351 = xor i8 %22350, 1
  %22352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22351, i8* %22352, align 1
  %22353 = xor i64 13112, %22337
  %22354 = xor i64 %22353, %22340
  %22355 = lshr i64 %22354, 4
  %22356 = trunc i64 %22355 to i8
  %22357 = and i8 %22356, 1
  %22358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22357, i8* %22358, align 1
  %22359 = icmp eq i64 %22340, 0
  %22360 = zext i1 %22359 to i8
  %22361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22360, i8* %22361, align 1
  %22362 = lshr i64 %22340, 63
  %22363 = trunc i64 %22362 to i8
  %22364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22363, i8* %22364, align 1
  %22365 = lshr i64 %22337, 63
  %22366 = xor i64 %22362, %22365
  %22367 = add i64 %22366, %22362
  %22368 = icmp eq i64 %22367, 2
  %22369 = zext i1 %22368 to i8
  %22370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22369, i8* %22370, align 1
  store %struct.Memory* %loadMem_40cee6, %struct.Memory** %MEMORY
  %loadMem_40ceed = load %struct.Memory*, %struct.Memory** %MEMORY
  %22371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22372 = getelementptr inbounds %struct.GPR, %struct.GPR* %22371, i32 0, i32 33
  %22373 = getelementptr inbounds %struct.Reg, %struct.Reg* %22372, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %22373 to i64*
  %22374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22375 = getelementptr inbounds %struct.GPR, %struct.GPR* %22374, i32 0, i32 7
  %22376 = getelementptr inbounds %struct.Reg, %struct.Reg* %22375, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %22376 to i64*
  %22377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22378 = getelementptr inbounds %struct.GPR, %struct.GPR* %22377, i32 0, i32 15
  %22379 = getelementptr inbounds %struct.Reg, %struct.Reg* %22378, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %22379 to i64*
  %22380 = load i64, i64* %RBP.i561
  %22381 = sub i64 %22380, 28
  %22382 = load i64, i64* %PC.i559
  %22383 = add i64 %22382, 4
  store i64 %22383, i64* %PC.i559
  %22384 = inttoptr i64 %22381 to i32*
  %22385 = load i32, i32* %22384
  %22386 = sext i32 %22385 to i64
  store i64 %22386, i64* %RDX.i560, align 8
  store %struct.Memory* %loadMem_40ceed, %struct.Memory** %MEMORY
  %loadMem_40cef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22388 = getelementptr inbounds %struct.GPR, %struct.GPR* %22387, i32 0, i32 33
  %22389 = getelementptr inbounds %struct.Reg, %struct.Reg* %22388, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %22389 to i64*
  %22390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22391 = getelementptr inbounds %struct.GPR, %struct.GPR* %22390, i32 0, i32 7
  %22392 = getelementptr inbounds %struct.Reg, %struct.Reg* %22391, i32 0, i32 0
  %RDX.i558 = bitcast %union.anon* %22392 to i64*
  %22393 = load i64, i64* %RDX.i558
  %22394 = load i64, i64* %PC.i557
  %22395 = add i64 %22394, 4
  store i64 %22395, i64* %PC.i557
  %22396 = shl i64 %22393, 5
  %22397 = icmp slt i64 %22396, 0
  %22398 = shl i64 %22396, 1
  store i64 %22398, i64* %RDX.i558, align 8
  %22399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22400 = zext i1 %22397 to i8
  store i8 %22400, i8* %22399, align 1
  %22401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22402 = trunc i64 %22398 to i32
  %22403 = and i32 %22402, 254
  %22404 = call i32 @llvm.ctpop.i32(i32 %22403)
  %22405 = trunc i32 %22404 to i8
  %22406 = and i8 %22405, 1
  %22407 = xor i8 %22406, 1
  store i8 %22407, i8* %22401, align 1
  %22408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22408, align 1
  %22409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22410 = icmp eq i64 %22398, 0
  %22411 = zext i1 %22410 to i8
  store i8 %22411, i8* %22409, align 1
  %22412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22413 = lshr i64 %22398, 63
  %22414 = trunc i64 %22413 to i8
  store i8 %22414, i8* %22412, align 1
  %22415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22415, align 1
  store %struct.Memory* %loadMem_40cef1, %struct.Memory** %MEMORY
  %loadMem_40cef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22417 = getelementptr inbounds %struct.GPR, %struct.GPR* %22416, i32 0, i32 33
  %22418 = getelementptr inbounds %struct.Reg, %struct.Reg* %22417, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %22418 to i64*
  %22419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22420 = getelementptr inbounds %struct.GPR, %struct.GPR* %22419, i32 0, i32 5
  %22421 = getelementptr inbounds %struct.Reg, %struct.Reg* %22420, i32 0, i32 0
  %RCX.i555 = bitcast %union.anon* %22421 to i64*
  %22422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22423 = getelementptr inbounds %struct.GPR, %struct.GPR* %22422, i32 0, i32 7
  %22424 = getelementptr inbounds %struct.Reg, %struct.Reg* %22423, i32 0, i32 0
  %RDX.i556 = bitcast %union.anon* %22424 to i64*
  %22425 = load i64, i64* %RCX.i555
  %22426 = load i64, i64* %RDX.i556
  %22427 = load i64, i64* %PC.i554
  %22428 = add i64 %22427, 3
  store i64 %22428, i64* %PC.i554
  %22429 = add i64 %22426, %22425
  store i64 %22429, i64* %RCX.i555, align 8
  %22430 = icmp ult i64 %22429, %22425
  %22431 = icmp ult i64 %22429, %22426
  %22432 = or i1 %22430, %22431
  %22433 = zext i1 %22432 to i8
  %22434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22433, i8* %22434, align 1
  %22435 = trunc i64 %22429 to i32
  %22436 = and i32 %22435, 255
  %22437 = call i32 @llvm.ctpop.i32(i32 %22436)
  %22438 = trunc i32 %22437 to i8
  %22439 = and i8 %22438, 1
  %22440 = xor i8 %22439, 1
  %22441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22440, i8* %22441, align 1
  %22442 = xor i64 %22426, %22425
  %22443 = xor i64 %22442, %22429
  %22444 = lshr i64 %22443, 4
  %22445 = trunc i64 %22444 to i8
  %22446 = and i8 %22445, 1
  %22447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22446, i8* %22447, align 1
  %22448 = icmp eq i64 %22429, 0
  %22449 = zext i1 %22448 to i8
  %22450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22449, i8* %22450, align 1
  %22451 = lshr i64 %22429, 63
  %22452 = trunc i64 %22451 to i8
  %22453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22452, i8* %22453, align 1
  %22454 = lshr i64 %22425, 63
  %22455 = lshr i64 %22426, 63
  %22456 = xor i64 %22451, %22454
  %22457 = xor i64 %22451, %22455
  %22458 = add i64 %22456, %22457
  %22459 = icmp eq i64 %22458, 2
  %22460 = zext i1 %22459 to i8
  %22461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22460, i8* %22461, align 1
  store %struct.Memory* %loadMem_40cef5, %struct.Memory** %MEMORY
  %loadMem_40cef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22463 = getelementptr inbounds %struct.GPR, %struct.GPR* %22462, i32 0, i32 33
  %22464 = getelementptr inbounds %struct.Reg, %struct.Reg* %22463, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %22464 to i64*
  %22465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22466 = getelementptr inbounds %struct.GPR, %struct.GPR* %22465, i32 0, i32 7
  %22467 = getelementptr inbounds %struct.Reg, %struct.Reg* %22466, i32 0, i32 0
  %RDX.i552 = bitcast %union.anon* %22467 to i64*
  %22468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22469 = getelementptr inbounds %struct.GPR, %struct.GPR* %22468, i32 0, i32 15
  %22470 = getelementptr inbounds %struct.Reg, %struct.Reg* %22469, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %22470 to i64*
  %22471 = load i64, i64* %RBP.i553
  %22472 = sub i64 %22471, 24
  %22473 = load i64, i64* %PC.i551
  %22474 = add i64 %22473, 4
  store i64 %22474, i64* %PC.i551
  %22475 = inttoptr i64 %22472 to i32*
  %22476 = load i32, i32* %22475
  %22477 = sext i32 %22476 to i64
  store i64 %22477, i64* %RDX.i552, align 8
  store %struct.Memory* %loadMem_40cef8, %struct.Memory** %MEMORY
  %loadMem_40cefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %22478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22479 = getelementptr inbounds %struct.GPR, %struct.GPR* %22478, i32 0, i32 33
  %22480 = getelementptr inbounds %struct.Reg, %struct.Reg* %22479, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %22480 to i64*
  %22481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22482 = getelementptr inbounds %struct.GPR, %struct.GPR* %22481, i32 0, i32 1
  %22483 = getelementptr inbounds %struct.Reg, %struct.Reg* %22482, i32 0, i32 0
  %EAX.i548 = bitcast %union.anon* %22483 to i32*
  %22484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22485 = getelementptr inbounds %struct.GPR, %struct.GPR* %22484, i32 0, i32 5
  %22486 = getelementptr inbounds %struct.Reg, %struct.Reg* %22485, i32 0, i32 0
  %RCX.i549 = bitcast %union.anon* %22486 to i64*
  %22487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22488 = getelementptr inbounds %struct.GPR, %struct.GPR* %22487, i32 0, i32 7
  %22489 = getelementptr inbounds %struct.Reg, %struct.Reg* %22488, i32 0, i32 0
  %RDX.i550 = bitcast %union.anon* %22489 to i64*
  %22490 = load i64, i64* %RCX.i549
  %22491 = load i64, i64* %RDX.i550
  %22492 = mul i64 %22491, 4
  %22493 = add i64 %22492, %22490
  %22494 = load i32, i32* %EAX.i548
  %22495 = zext i32 %22494 to i64
  %22496 = load i64, i64* %PC.i547
  %22497 = add i64 %22496, 3
  store i64 %22497, i64* %PC.i547
  %22498 = inttoptr i64 %22493 to i32*
  store i32 %22494, i32* %22498
  store %struct.Memory* %loadMem_40cefc, %struct.Memory** %MEMORY
  %loadMem_40ceff = load %struct.Memory*, %struct.Memory** %MEMORY
  %22499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22500 = getelementptr inbounds %struct.GPR, %struct.GPR* %22499, i32 0, i32 33
  %22501 = getelementptr inbounds %struct.Reg, %struct.Reg* %22500, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %22501 to i64*
  %22502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22503 = getelementptr inbounds %struct.GPR, %struct.GPR* %22502, i32 0, i32 1
  %22504 = getelementptr inbounds %struct.Reg, %struct.Reg* %22503, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %22504 to i64*
  %22505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22506 = getelementptr inbounds %struct.GPR, %struct.GPR* %22505, i32 0, i32 15
  %22507 = getelementptr inbounds %struct.Reg, %struct.Reg* %22506, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %22507 to i64*
  %22508 = load i64, i64* %RBP.i546
  %22509 = sub i64 %22508, 20
  %22510 = load i64, i64* %PC.i544
  %22511 = add i64 %22510, 3
  store i64 %22511, i64* %PC.i544
  %22512 = inttoptr i64 %22509 to i32*
  %22513 = load i32, i32* %22512
  %22514 = zext i32 %22513 to i64
  store i64 %22514, i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_40ceff, %struct.Memory** %MEMORY
  %loadMem_40cf02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22516 = getelementptr inbounds %struct.GPR, %struct.GPR* %22515, i32 0, i32 33
  %22517 = getelementptr inbounds %struct.Reg, %struct.Reg* %22516, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %22517 to i64*
  %22518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22519 = getelementptr inbounds %struct.GPR, %struct.GPR* %22518, i32 0, i32 1
  %22520 = getelementptr inbounds %struct.Reg, %struct.Reg* %22519, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %22520 to i64*
  %22521 = load i64, i64* %RAX.i543
  %22522 = load i64, i64* %PC.i542
  %22523 = add i64 %22522, 3
  store i64 %22523, i64* %PC.i542
  %22524 = trunc i64 %22521 to i32
  %22525 = add i32 1, %22524
  %22526 = zext i32 %22525 to i64
  store i64 %22526, i64* %RAX.i543, align 8
  %22527 = icmp ult i32 %22525, %22524
  %22528 = icmp ult i32 %22525, 1
  %22529 = or i1 %22527, %22528
  %22530 = zext i1 %22529 to i8
  %22531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22530, i8* %22531, align 1
  %22532 = and i32 %22525, 255
  %22533 = call i32 @llvm.ctpop.i32(i32 %22532)
  %22534 = trunc i32 %22533 to i8
  %22535 = and i8 %22534, 1
  %22536 = xor i8 %22535, 1
  %22537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22536, i8* %22537, align 1
  %22538 = xor i64 1, %22521
  %22539 = trunc i64 %22538 to i32
  %22540 = xor i32 %22539, %22525
  %22541 = lshr i32 %22540, 4
  %22542 = trunc i32 %22541 to i8
  %22543 = and i8 %22542, 1
  %22544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22543, i8* %22544, align 1
  %22545 = icmp eq i32 %22525, 0
  %22546 = zext i1 %22545 to i8
  %22547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22546, i8* %22547, align 1
  %22548 = lshr i32 %22525, 31
  %22549 = trunc i32 %22548 to i8
  %22550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22549, i8* %22550, align 1
  %22551 = lshr i32 %22524, 31
  %22552 = xor i32 %22548, %22551
  %22553 = add i32 %22552, %22548
  %22554 = icmp eq i32 %22553, 2
  %22555 = zext i1 %22554 to i8
  %22556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22555, i8* %22556, align 1
  store %struct.Memory* %loadMem_40cf02, %struct.Memory** %MEMORY
  %loadMem_40cf05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22558 = getelementptr inbounds %struct.GPR, %struct.GPR* %22557, i32 0, i32 33
  %22559 = getelementptr inbounds %struct.Reg, %struct.Reg* %22558, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %22559 to i64*
  %22560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22561 = getelementptr inbounds %struct.GPR, %struct.GPR* %22560, i32 0, i32 1
  %22562 = getelementptr inbounds %struct.Reg, %struct.Reg* %22561, i32 0, i32 0
  %EAX.i540 = bitcast %union.anon* %22562 to i32*
  %22563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22564 = getelementptr inbounds %struct.GPR, %struct.GPR* %22563, i32 0, i32 15
  %22565 = getelementptr inbounds %struct.Reg, %struct.Reg* %22564, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %22565 to i64*
  %22566 = load i64, i64* %RBP.i541
  %22567 = sub i64 %22566, 20
  %22568 = load i32, i32* %EAX.i540
  %22569 = zext i32 %22568 to i64
  %22570 = load i64, i64* %PC.i539
  %22571 = add i64 %22570, 3
  store i64 %22571, i64* %PC.i539
  %22572 = inttoptr i64 %22567 to i32*
  store i32 %22568, i32* %22572
  store %struct.Memory* %loadMem_40cf05, %struct.Memory** %MEMORY
  %loadMem_40cf08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22574 = getelementptr inbounds %struct.GPR, %struct.GPR* %22573, i32 0, i32 33
  %22575 = getelementptr inbounds %struct.Reg, %struct.Reg* %22574, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %22575 to i64*
  %22576 = load i64, i64* %PC.i538
  %22577 = add i64 %22576, -128
  %22578 = load i64, i64* %PC.i538
  %22579 = add i64 %22578, 5
  store i64 %22579, i64* %PC.i538
  %22580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %22577, i64* %22580, align 8
  store %struct.Memory* %loadMem_40cf08, %struct.Memory** %MEMORY
  br label %block_.L_40ce88

block_.L_40cf0d:                                  ; preds = %block_.L_40ce88
  %loadMem_40cf0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %22581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22582 = getelementptr inbounds %struct.GPR, %struct.GPR* %22581, i32 0, i32 33
  %22583 = getelementptr inbounds %struct.Reg, %struct.Reg* %22582, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %22583 to i64*
  %22584 = load i64, i64* %PC.i537
  %22585 = add i64 %22584, 5
  %22586 = load i64, i64* %PC.i537
  %22587 = add i64 %22586, 5
  store i64 %22587, i64* %PC.i537
  %22588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %22585, i64* %22588, align 8
  store %struct.Memory* %loadMem_40cf0d, %struct.Memory** %MEMORY
  br label %block_.L_40cf12

block_.L_40cf12:                                  ; preds = %block_.L_40cf0d
  %loadMem_40cf12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22590 = getelementptr inbounds %struct.GPR, %struct.GPR* %22589, i32 0, i32 33
  %22591 = getelementptr inbounds %struct.Reg, %struct.Reg* %22590, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %22591 to i64*
  %22592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22593 = getelementptr inbounds %struct.GPR, %struct.GPR* %22592, i32 0, i32 1
  %22594 = getelementptr inbounds %struct.Reg, %struct.Reg* %22593, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %22594 to i64*
  %22595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22596 = getelementptr inbounds %struct.GPR, %struct.GPR* %22595, i32 0, i32 15
  %22597 = getelementptr inbounds %struct.Reg, %struct.Reg* %22596, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %22597 to i64*
  %22598 = load i64, i64* %RBP.i536
  %22599 = sub i64 %22598, 24
  %22600 = load i64, i64* %PC.i534
  %22601 = add i64 %22600, 3
  store i64 %22601, i64* %PC.i534
  %22602 = inttoptr i64 %22599 to i32*
  %22603 = load i32, i32* %22602
  %22604 = zext i32 %22603 to i64
  store i64 %22604, i64* %RAX.i535, align 8
  store %struct.Memory* %loadMem_40cf12, %struct.Memory** %MEMORY
  %loadMem_40cf15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22606 = getelementptr inbounds %struct.GPR, %struct.GPR* %22605, i32 0, i32 33
  %22607 = getelementptr inbounds %struct.Reg, %struct.Reg* %22606, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %22607 to i64*
  %22608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22609 = getelementptr inbounds %struct.GPR, %struct.GPR* %22608, i32 0, i32 1
  %22610 = getelementptr inbounds %struct.Reg, %struct.Reg* %22609, i32 0, i32 0
  %RAX.i533 = bitcast %union.anon* %22610 to i64*
  %22611 = load i64, i64* %RAX.i533
  %22612 = load i64, i64* %PC.i532
  %22613 = add i64 %22612, 3
  store i64 %22613, i64* %PC.i532
  %22614 = trunc i64 %22611 to i32
  %22615 = add i32 1, %22614
  %22616 = zext i32 %22615 to i64
  store i64 %22616, i64* %RAX.i533, align 8
  %22617 = icmp ult i32 %22615, %22614
  %22618 = icmp ult i32 %22615, 1
  %22619 = or i1 %22617, %22618
  %22620 = zext i1 %22619 to i8
  %22621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22620, i8* %22621, align 1
  %22622 = and i32 %22615, 255
  %22623 = call i32 @llvm.ctpop.i32(i32 %22622)
  %22624 = trunc i32 %22623 to i8
  %22625 = and i8 %22624, 1
  %22626 = xor i8 %22625, 1
  %22627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22626, i8* %22627, align 1
  %22628 = xor i64 1, %22611
  %22629 = trunc i64 %22628 to i32
  %22630 = xor i32 %22629, %22615
  %22631 = lshr i32 %22630, 4
  %22632 = trunc i32 %22631 to i8
  %22633 = and i8 %22632, 1
  %22634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22633, i8* %22634, align 1
  %22635 = icmp eq i32 %22615, 0
  %22636 = zext i1 %22635 to i8
  %22637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22636, i8* %22637, align 1
  %22638 = lshr i32 %22615, 31
  %22639 = trunc i32 %22638 to i8
  %22640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22639, i8* %22640, align 1
  %22641 = lshr i32 %22614, 31
  %22642 = xor i32 %22638, %22641
  %22643 = add i32 %22642, %22638
  %22644 = icmp eq i32 %22643, 2
  %22645 = zext i1 %22644 to i8
  %22646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22645, i8* %22646, align 1
  store %struct.Memory* %loadMem_40cf15, %struct.Memory** %MEMORY
  %loadMem_40cf18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22648 = getelementptr inbounds %struct.GPR, %struct.GPR* %22647, i32 0, i32 33
  %22649 = getelementptr inbounds %struct.Reg, %struct.Reg* %22648, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %22649 to i64*
  %22650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22651 = getelementptr inbounds %struct.GPR, %struct.GPR* %22650, i32 0, i32 1
  %22652 = getelementptr inbounds %struct.Reg, %struct.Reg* %22651, i32 0, i32 0
  %EAX.i530 = bitcast %union.anon* %22652 to i32*
  %22653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22654 = getelementptr inbounds %struct.GPR, %struct.GPR* %22653, i32 0, i32 15
  %22655 = getelementptr inbounds %struct.Reg, %struct.Reg* %22654, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %22655 to i64*
  %22656 = load i64, i64* %RBP.i531
  %22657 = sub i64 %22656, 24
  %22658 = load i32, i32* %EAX.i530
  %22659 = zext i32 %22658 to i64
  %22660 = load i64, i64* %PC.i529
  %22661 = add i64 %22660, 3
  store i64 %22661, i64* %PC.i529
  %22662 = inttoptr i64 %22657 to i32*
  store i32 %22658, i32* %22662
  store %struct.Memory* %loadMem_40cf18, %struct.Memory** %MEMORY
  %loadMem_40cf1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22664 = getelementptr inbounds %struct.GPR, %struct.GPR* %22663, i32 0, i32 33
  %22665 = getelementptr inbounds %struct.Reg, %struct.Reg* %22664, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %22665 to i64*
  %22666 = load i64, i64* %PC.i528
  %22667 = add i64 %22666, -279
  %22668 = load i64, i64* %PC.i528
  %22669 = add i64 %22668, 5
  store i64 %22669, i64* %PC.i528
  %22670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %22667, i64* %22670, align 8
  store %struct.Memory* %loadMem_40cf1b, %struct.Memory** %MEMORY
  br label %block_.L_40ce04

block_.L_40cf20:                                  ; preds = %block_.L_40ce04
  %loadMem_40cf20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22672 = getelementptr inbounds %struct.GPR, %struct.GPR* %22671, i32 0, i32 33
  %22673 = getelementptr inbounds %struct.Reg, %struct.Reg* %22672, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %22673 to i64*
  %22674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22675 = getelementptr inbounds %struct.GPR, %struct.GPR* %22674, i32 0, i32 15
  %22676 = getelementptr inbounds %struct.Reg, %struct.Reg* %22675, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %22676 to i64*
  %22677 = load i64, i64* %RBP.i527
  %22678 = sub i64 %22677, 20
  %22679 = load i64, i64* %PC.i526
  %22680 = add i64 %22679, 7
  store i64 %22680, i64* %PC.i526
  %22681 = inttoptr i64 %22678 to i32*
  store i32 0, i32* %22681
  store %struct.Memory* %loadMem_40cf20, %struct.Memory** %MEMORY
  br label %block_.L_40cf27

block_.L_40cf27:                                  ; preds = %block_.L_40d1df, %block_.L_40cf20
  %loadMem_40cf27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22683 = getelementptr inbounds %struct.GPR, %struct.GPR* %22682, i32 0, i32 33
  %22684 = getelementptr inbounds %struct.Reg, %struct.Reg* %22683, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %22684 to i64*
  %22685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22686 = getelementptr inbounds %struct.GPR, %struct.GPR* %22685, i32 0, i32 15
  %22687 = getelementptr inbounds %struct.Reg, %struct.Reg* %22686, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %22687 to i64*
  %22688 = load i64, i64* %RBP.i525
  %22689 = sub i64 %22688, 20
  %22690 = load i64, i64* %PC.i524
  %22691 = add i64 %22690, 4
  store i64 %22691, i64* %PC.i524
  %22692 = inttoptr i64 %22689 to i32*
  %22693 = load i32, i32* %22692
  %22694 = sub i32 %22693, 4
  %22695 = icmp ult i32 %22693, 4
  %22696 = zext i1 %22695 to i8
  %22697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22696, i8* %22697, align 1
  %22698 = and i32 %22694, 255
  %22699 = call i32 @llvm.ctpop.i32(i32 %22698)
  %22700 = trunc i32 %22699 to i8
  %22701 = and i8 %22700, 1
  %22702 = xor i8 %22701, 1
  %22703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22702, i8* %22703, align 1
  %22704 = xor i32 %22693, 4
  %22705 = xor i32 %22704, %22694
  %22706 = lshr i32 %22705, 4
  %22707 = trunc i32 %22706 to i8
  %22708 = and i8 %22707, 1
  %22709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22708, i8* %22709, align 1
  %22710 = icmp eq i32 %22694, 0
  %22711 = zext i1 %22710 to i8
  %22712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22711, i8* %22712, align 1
  %22713 = lshr i32 %22694, 31
  %22714 = trunc i32 %22713 to i8
  %22715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22714, i8* %22715, align 1
  %22716 = lshr i32 %22693, 31
  %22717 = xor i32 %22713, %22716
  %22718 = add i32 %22717, %22716
  %22719 = icmp eq i32 %22718, 2
  %22720 = zext i1 %22719 to i8
  %22721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22720, i8* %22721, align 1
  store %struct.Memory* %loadMem_40cf27, %struct.Memory** %MEMORY
  %loadMem_40cf2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22723 = getelementptr inbounds %struct.GPR, %struct.GPR* %22722, i32 0, i32 33
  %22724 = getelementptr inbounds %struct.Reg, %struct.Reg* %22723, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %22724 to i64*
  %22725 = load i64, i64* %PC.i523
  %22726 = add i64 %22725, 706
  %22727 = load i64, i64* %PC.i523
  %22728 = add i64 %22727, 6
  %22729 = load i64, i64* %PC.i523
  %22730 = add i64 %22729, 6
  store i64 %22730, i64* %PC.i523
  %22731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22732 = load i8, i8* %22731, align 1
  %22733 = icmp ne i8 %22732, 0
  %22734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22735 = load i8, i8* %22734, align 1
  %22736 = icmp ne i8 %22735, 0
  %22737 = xor i1 %22733, %22736
  %22738 = xor i1 %22737, true
  %22739 = zext i1 %22738 to i8
  store i8 %22739, i8* %BRANCH_TAKEN, align 1
  %22740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22741 = select i1 %22737, i64 %22728, i64 %22726
  store i64 %22741, i64* %22740, align 8
  store %struct.Memory* %loadMem_40cf2b, %struct.Memory** %MEMORY
  %loadBr_40cf2b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cf2b = icmp eq i8 %loadBr_40cf2b, 1
  br i1 %cmpBr_40cf2b, label %block_.L_40d1ed, label %block_40cf31

block_40cf31:                                     ; preds = %block_.L_40cf27
  %loadMem_40cf31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22743 = getelementptr inbounds %struct.GPR, %struct.GPR* %22742, i32 0, i32 33
  %22744 = getelementptr inbounds %struct.Reg, %struct.Reg* %22743, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %22744 to i64*
  %22745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22746 = getelementptr inbounds %struct.GPR, %struct.GPR* %22745, i32 0, i32 15
  %22747 = getelementptr inbounds %struct.Reg, %struct.Reg* %22746, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %22747 to i64*
  %22748 = load i64, i64* %RBP.i522
  %22749 = sub i64 %22748, 24
  %22750 = load i64, i64* %PC.i521
  %22751 = add i64 %22750, 7
  store i64 %22751, i64* %PC.i521
  %22752 = inttoptr i64 %22749 to i32*
  store i32 0, i32* %22752
  store %struct.Memory* %loadMem_40cf31, %struct.Memory** %MEMORY
  br label %block_.L_40cf38

block_.L_40cf38:                                  ; preds = %block_40cf42, %block_40cf31
  %loadMem_40cf38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22754 = getelementptr inbounds %struct.GPR, %struct.GPR* %22753, i32 0, i32 33
  %22755 = getelementptr inbounds %struct.Reg, %struct.Reg* %22754, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %22755 to i64*
  %22756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22757 = getelementptr inbounds %struct.GPR, %struct.GPR* %22756, i32 0, i32 15
  %22758 = getelementptr inbounds %struct.Reg, %struct.Reg* %22757, i32 0, i32 0
  %RBP.i520 = bitcast %union.anon* %22758 to i64*
  %22759 = load i64, i64* %RBP.i520
  %22760 = sub i64 %22759, 24
  %22761 = load i64, i64* %PC.i519
  %22762 = add i64 %22761, 4
  store i64 %22762, i64* %PC.i519
  %22763 = inttoptr i64 %22760 to i32*
  %22764 = load i32, i32* %22763
  %22765 = sub i32 %22764, 4
  %22766 = icmp ult i32 %22764, 4
  %22767 = zext i1 %22766 to i8
  %22768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22767, i8* %22768, align 1
  %22769 = and i32 %22765, 255
  %22770 = call i32 @llvm.ctpop.i32(i32 %22769)
  %22771 = trunc i32 %22770 to i8
  %22772 = and i8 %22771, 1
  %22773 = xor i8 %22772, 1
  %22774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22773, i8* %22774, align 1
  %22775 = xor i32 %22764, 4
  %22776 = xor i32 %22775, %22765
  %22777 = lshr i32 %22776, 4
  %22778 = trunc i32 %22777 to i8
  %22779 = and i8 %22778, 1
  %22780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22779, i8* %22780, align 1
  %22781 = icmp eq i32 %22765, 0
  %22782 = zext i1 %22781 to i8
  %22783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22782, i8* %22783, align 1
  %22784 = lshr i32 %22765, 31
  %22785 = trunc i32 %22784 to i8
  %22786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22785, i8* %22786, align 1
  %22787 = lshr i32 %22764, 31
  %22788 = xor i32 %22784, %22787
  %22789 = add i32 %22788, %22787
  %22790 = icmp eq i32 %22789, 2
  %22791 = zext i1 %22790 to i8
  %22792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22791, i8* %22792, align 1
  store %struct.Memory* %loadMem_40cf38, %struct.Memory** %MEMORY
  %loadMem_40cf3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %22793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22794 = getelementptr inbounds %struct.GPR, %struct.GPR* %22793, i32 0, i32 33
  %22795 = getelementptr inbounds %struct.Reg, %struct.Reg* %22794, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %22795 to i64*
  %22796 = load i64, i64* %PC.i518
  %22797 = add i64 %22796, 60
  %22798 = load i64, i64* %PC.i518
  %22799 = add i64 %22798, 6
  %22800 = load i64, i64* %PC.i518
  %22801 = add i64 %22800, 6
  store i64 %22801, i64* %PC.i518
  %22802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22803 = load i8, i8* %22802, align 1
  %22804 = icmp ne i8 %22803, 0
  %22805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %22806 = load i8, i8* %22805, align 1
  %22807 = icmp ne i8 %22806, 0
  %22808 = xor i1 %22804, %22807
  %22809 = xor i1 %22808, true
  %22810 = zext i1 %22809 to i8
  store i8 %22810, i8* %BRANCH_TAKEN, align 1
  %22811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22812 = select i1 %22808, i64 %22799, i64 %22797
  store i64 %22812, i64* %22811, align 8
  store %struct.Memory* %loadMem_40cf3c, %struct.Memory** %MEMORY
  %loadBr_40cf3c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cf3c = icmp eq i8 %loadBr_40cf3c, 1
  br i1 %cmpBr_40cf3c, label %block_.L_40cf78, label %block_40cf42

block_40cf42:                                     ; preds = %block_.L_40cf38
  %loadMem_40cf42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22814 = getelementptr inbounds %struct.GPR, %struct.GPR* %22813, i32 0, i32 33
  %22815 = getelementptr inbounds %struct.Reg, %struct.Reg* %22814, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %22815 to i64*
  %22816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22817 = getelementptr inbounds %struct.GPR, %struct.GPR* %22816, i32 0, i32 1
  %22818 = getelementptr inbounds %struct.Reg, %struct.Reg* %22817, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %22818 to i64*
  %22819 = load i64, i64* %PC.i516
  %22820 = add i64 %22819, 8
  store i64 %22820, i64* %PC.i516
  %22821 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %22821, i64* %RAX.i517, align 8
  store %struct.Memory* %loadMem_40cf42, %struct.Memory** %MEMORY
  %loadMem_40cf4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %22822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22823 = getelementptr inbounds %struct.GPR, %struct.GPR* %22822, i32 0, i32 33
  %22824 = getelementptr inbounds %struct.Reg, %struct.Reg* %22823, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %22824 to i64*
  %22825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22826 = getelementptr inbounds %struct.GPR, %struct.GPR* %22825, i32 0, i32 1
  %22827 = getelementptr inbounds %struct.Reg, %struct.Reg* %22826, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %22827 to i64*
  %22828 = load i64, i64* %RAX.i515
  %22829 = load i64, i64* %PC.i514
  %22830 = add i64 %22829, 6
  store i64 %22830, i64* %PC.i514
  %22831 = add i64 13112, %22828
  store i64 %22831, i64* %RAX.i515, align 8
  %22832 = icmp ult i64 %22831, %22828
  %22833 = icmp ult i64 %22831, 13112
  %22834 = or i1 %22832, %22833
  %22835 = zext i1 %22834 to i8
  %22836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22835, i8* %22836, align 1
  %22837 = trunc i64 %22831 to i32
  %22838 = and i32 %22837, 255
  %22839 = call i32 @llvm.ctpop.i32(i32 %22838)
  %22840 = trunc i32 %22839 to i8
  %22841 = and i8 %22840, 1
  %22842 = xor i8 %22841, 1
  %22843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22842, i8* %22843, align 1
  %22844 = xor i64 13112, %22828
  %22845 = xor i64 %22844, %22831
  %22846 = lshr i64 %22845, 4
  %22847 = trunc i64 %22846 to i8
  %22848 = and i8 %22847, 1
  %22849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22848, i8* %22849, align 1
  %22850 = icmp eq i64 %22831, 0
  %22851 = zext i1 %22850 to i8
  %22852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22851, i8* %22852, align 1
  %22853 = lshr i64 %22831, 63
  %22854 = trunc i64 %22853 to i8
  %22855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22854, i8* %22855, align 1
  %22856 = lshr i64 %22828, 63
  %22857 = xor i64 %22853, %22856
  %22858 = add i64 %22857, %22853
  %22859 = icmp eq i64 %22858, 2
  %22860 = zext i1 %22859 to i8
  %22861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22860, i8* %22861, align 1
  store %struct.Memory* %loadMem_40cf4a, %struct.Memory** %MEMORY
  %loadMem_40cf50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22863 = getelementptr inbounds %struct.GPR, %struct.GPR* %22862, i32 0, i32 33
  %22864 = getelementptr inbounds %struct.Reg, %struct.Reg* %22863, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %22864 to i64*
  %22865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22866 = getelementptr inbounds %struct.GPR, %struct.GPR* %22865, i32 0, i32 5
  %22867 = getelementptr inbounds %struct.Reg, %struct.Reg* %22866, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %22867 to i64*
  %22868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22869 = getelementptr inbounds %struct.GPR, %struct.GPR* %22868, i32 0, i32 15
  %22870 = getelementptr inbounds %struct.Reg, %struct.Reg* %22869, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %22870 to i64*
  %22871 = load i64, i64* %RBP.i513
  %22872 = sub i64 %22871, 20
  %22873 = load i64, i64* %PC.i511
  %22874 = add i64 %22873, 4
  store i64 %22874, i64* %PC.i511
  %22875 = inttoptr i64 %22872 to i32*
  %22876 = load i32, i32* %22875
  %22877 = sext i32 %22876 to i64
  store i64 %22877, i64* %RCX.i512, align 8
  store %struct.Memory* %loadMem_40cf50, %struct.Memory** %MEMORY
  %loadMem_40cf54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22879 = getelementptr inbounds %struct.GPR, %struct.GPR* %22878, i32 0, i32 33
  %22880 = getelementptr inbounds %struct.Reg, %struct.Reg* %22879, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %22880 to i64*
  %22881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22882 = getelementptr inbounds %struct.GPR, %struct.GPR* %22881, i32 0, i32 5
  %22883 = getelementptr inbounds %struct.Reg, %struct.Reg* %22882, i32 0, i32 0
  %RCX.i510 = bitcast %union.anon* %22883 to i64*
  %22884 = load i64, i64* %RCX.i510
  %22885 = load i64, i64* %PC.i509
  %22886 = add i64 %22885, 4
  store i64 %22886, i64* %PC.i509
  %22887 = shl i64 %22884, 5
  %22888 = icmp slt i64 %22887, 0
  %22889 = shl i64 %22887, 1
  store i64 %22889, i64* %RCX.i510, align 8
  %22890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %22891 = zext i1 %22888 to i8
  store i8 %22891, i8* %22890, align 1
  %22892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22893 = trunc i64 %22889 to i32
  %22894 = and i32 %22893, 254
  %22895 = call i32 @llvm.ctpop.i32(i32 %22894)
  %22896 = trunc i32 %22895 to i8
  %22897 = and i8 %22896, 1
  %22898 = xor i8 %22897, 1
  store i8 %22898, i8* %22892, align 1
  %22899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22899, align 1
  %22900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %22901 = icmp eq i64 %22889, 0
  %22902 = zext i1 %22901 to i8
  store i8 %22902, i8* %22900, align 1
  %22903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %22904 = lshr i64 %22889, 63
  %22905 = trunc i64 %22904 to i8
  store i8 %22905, i8* %22903, align 1
  %22906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22906, align 1
  store %struct.Memory* %loadMem_40cf54, %struct.Memory** %MEMORY
  %loadMem_40cf58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22908 = getelementptr inbounds %struct.GPR, %struct.GPR* %22907, i32 0, i32 33
  %22909 = getelementptr inbounds %struct.Reg, %struct.Reg* %22908, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %22909 to i64*
  %22910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22911 = getelementptr inbounds %struct.GPR, %struct.GPR* %22910, i32 0, i32 1
  %22912 = getelementptr inbounds %struct.Reg, %struct.Reg* %22911, i32 0, i32 0
  %RAX.i507 = bitcast %union.anon* %22912 to i64*
  %22913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22914 = getelementptr inbounds %struct.GPR, %struct.GPR* %22913, i32 0, i32 5
  %22915 = getelementptr inbounds %struct.Reg, %struct.Reg* %22914, i32 0, i32 0
  %RCX.i508 = bitcast %union.anon* %22915 to i64*
  %22916 = load i64, i64* %RAX.i507
  %22917 = load i64, i64* %RCX.i508
  %22918 = load i64, i64* %PC.i506
  %22919 = add i64 %22918, 3
  store i64 %22919, i64* %PC.i506
  %22920 = add i64 %22917, %22916
  store i64 %22920, i64* %RAX.i507, align 8
  %22921 = icmp ult i64 %22920, %22916
  %22922 = icmp ult i64 %22920, %22917
  %22923 = or i1 %22921, %22922
  %22924 = zext i1 %22923 to i8
  %22925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22924, i8* %22925, align 1
  %22926 = trunc i64 %22920 to i32
  %22927 = and i32 %22926, 255
  %22928 = call i32 @llvm.ctpop.i32(i32 %22927)
  %22929 = trunc i32 %22928 to i8
  %22930 = and i8 %22929, 1
  %22931 = xor i8 %22930, 1
  %22932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22931, i8* %22932, align 1
  %22933 = xor i64 %22917, %22916
  %22934 = xor i64 %22933, %22920
  %22935 = lshr i64 %22934, 4
  %22936 = trunc i64 %22935 to i8
  %22937 = and i8 %22936, 1
  %22938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22937, i8* %22938, align 1
  %22939 = icmp eq i64 %22920, 0
  %22940 = zext i1 %22939 to i8
  %22941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22940, i8* %22941, align 1
  %22942 = lshr i64 %22920, 63
  %22943 = trunc i64 %22942 to i8
  %22944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %22943, i8* %22944, align 1
  %22945 = lshr i64 %22916, 63
  %22946 = lshr i64 %22917, 63
  %22947 = xor i64 %22942, %22945
  %22948 = xor i64 %22942, %22946
  %22949 = add i64 %22947, %22948
  %22950 = icmp eq i64 %22949, 2
  %22951 = zext i1 %22950 to i8
  %22952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22951, i8* %22952, align 1
  store %struct.Memory* %loadMem_40cf58, %struct.Memory** %MEMORY
  %loadMem_40cf5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %22953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22954 = getelementptr inbounds %struct.GPR, %struct.GPR* %22953, i32 0, i32 33
  %22955 = getelementptr inbounds %struct.Reg, %struct.Reg* %22954, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %22955 to i64*
  %22956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22957 = getelementptr inbounds %struct.GPR, %struct.GPR* %22956, i32 0, i32 5
  %22958 = getelementptr inbounds %struct.Reg, %struct.Reg* %22957, i32 0, i32 0
  %RCX.i504 = bitcast %union.anon* %22958 to i64*
  %22959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22960 = getelementptr inbounds %struct.GPR, %struct.GPR* %22959, i32 0, i32 15
  %22961 = getelementptr inbounds %struct.Reg, %struct.Reg* %22960, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %22961 to i64*
  %22962 = load i64, i64* %RBP.i505
  %22963 = sub i64 %22962, 24
  %22964 = load i64, i64* %PC.i503
  %22965 = add i64 %22964, 4
  store i64 %22965, i64* %PC.i503
  %22966 = inttoptr i64 %22963 to i32*
  %22967 = load i32, i32* %22966
  %22968 = sext i32 %22967 to i64
  store i64 %22968, i64* %RCX.i504, align 8
  store %struct.Memory* %loadMem_40cf5b, %struct.Memory** %MEMORY
  %loadMem_40cf5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %22969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22970 = getelementptr inbounds %struct.GPR, %struct.GPR* %22969, i32 0, i32 33
  %22971 = getelementptr inbounds %struct.Reg, %struct.Reg* %22970, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %22971 to i64*
  %22972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22973 = getelementptr inbounds %struct.GPR, %struct.GPR* %22972, i32 0, i32 1
  %22974 = getelementptr inbounds %struct.Reg, %struct.Reg* %22973, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %22974 to i64*
  %22975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22976 = getelementptr inbounds %struct.GPR, %struct.GPR* %22975, i32 0, i32 5
  %22977 = getelementptr inbounds %struct.Reg, %struct.Reg* %22976, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %22977 to i64*
  %22978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22979 = getelementptr inbounds %struct.GPR, %struct.GPR* %22978, i32 0, i32 7
  %22980 = getelementptr inbounds %struct.Reg, %struct.Reg* %22979, i32 0, i32 0
  %RDX.i502 = bitcast %union.anon* %22980 to i64*
  %22981 = load i64, i64* %RAX.i500
  %22982 = load i64, i64* %RCX.i501
  %22983 = mul i64 %22982, 4
  %22984 = add i64 %22983, %22981
  %22985 = load i64, i64* %PC.i499
  %22986 = add i64 %22985, 3
  store i64 %22986, i64* %PC.i499
  %22987 = inttoptr i64 %22984 to i32*
  %22988 = load i32, i32* %22987
  %22989 = zext i32 %22988 to i64
  store i64 %22989, i64* %RDX.i502, align 8
  store %struct.Memory* %loadMem_40cf5f, %struct.Memory** %MEMORY
  %loadMem_40cf62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %22990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22991 = getelementptr inbounds %struct.GPR, %struct.GPR* %22990, i32 0, i32 33
  %22992 = getelementptr inbounds %struct.Reg, %struct.Reg* %22991, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %22992 to i64*
  %22993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22994 = getelementptr inbounds %struct.GPR, %struct.GPR* %22993, i32 0, i32 1
  %22995 = getelementptr inbounds %struct.Reg, %struct.Reg* %22994, i32 0, i32 0
  %RAX.i497 = bitcast %union.anon* %22995 to i64*
  %22996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22997 = getelementptr inbounds %struct.GPR, %struct.GPR* %22996, i32 0, i32 15
  %22998 = getelementptr inbounds %struct.Reg, %struct.Reg* %22997, i32 0, i32 0
  %RBP.i498 = bitcast %union.anon* %22998 to i64*
  %22999 = load i64, i64* %RBP.i498
  %23000 = sub i64 %22999, 24
  %23001 = load i64, i64* %PC.i496
  %23002 = add i64 %23001, 4
  store i64 %23002, i64* %PC.i496
  %23003 = inttoptr i64 %23000 to i32*
  %23004 = load i32, i32* %23003
  %23005 = sext i32 %23004 to i64
  store i64 %23005, i64* %RAX.i497, align 8
  store %struct.Memory* %loadMem_40cf62, %struct.Memory** %MEMORY
  %loadMem_40cf66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23007 = getelementptr inbounds %struct.GPR, %struct.GPR* %23006, i32 0, i32 33
  %23008 = getelementptr inbounds %struct.Reg, %struct.Reg* %23007, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %23008 to i64*
  %23009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23010 = getelementptr inbounds %struct.GPR, %struct.GPR* %23009, i32 0, i32 7
  %23011 = getelementptr inbounds %struct.Reg, %struct.Reg* %23010, i32 0, i32 0
  %EDX.i493 = bitcast %union.anon* %23011 to i32*
  %23012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23013 = getelementptr inbounds %struct.GPR, %struct.GPR* %23012, i32 0, i32 1
  %23014 = getelementptr inbounds %struct.Reg, %struct.Reg* %23013, i32 0, i32 0
  %RAX.i494 = bitcast %union.anon* %23014 to i64*
  %23015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23016 = getelementptr inbounds %struct.GPR, %struct.GPR* %23015, i32 0, i32 15
  %23017 = getelementptr inbounds %struct.Reg, %struct.Reg* %23016, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %23017 to i64*
  %23018 = load i64, i64* %RBP.i495
  %23019 = load i64, i64* %RAX.i494
  %23020 = mul i64 %23019, 4
  %23021 = add i64 %23018, -64
  %23022 = add i64 %23021, %23020
  %23023 = load i32, i32* %EDX.i493
  %23024 = zext i32 %23023 to i64
  %23025 = load i64, i64* %PC.i492
  %23026 = add i64 %23025, 4
  store i64 %23026, i64* %PC.i492
  %23027 = inttoptr i64 %23022 to i32*
  store i32 %23023, i32* %23027
  store %struct.Memory* %loadMem_40cf66, %struct.Memory** %MEMORY
  %loadMem_40cf6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23029 = getelementptr inbounds %struct.GPR, %struct.GPR* %23028, i32 0, i32 33
  %23030 = getelementptr inbounds %struct.Reg, %struct.Reg* %23029, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %23030 to i64*
  %23031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23032 = getelementptr inbounds %struct.GPR, %struct.GPR* %23031, i32 0, i32 1
  %23033 = getelementptr inbounds %struct.Reg, %struct.Reg* %23032, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %23033 to i64*
  %23034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23035 = getelementptr inbounds %struct.GPR, %struct.GPR* %23034, i32 0, i32 15
  %23036 = getelementptr inbounds %struct.Reg, %struct.Reg* %23035, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %23036 to i64*
  %23037 = load i64, i64* %RBP.i491
  %23038 = sub i64 %23037, 24
  %23039 = load i64, i64* %PC.i489
  %23040 = add i64 %23039, 3
  store i64 %23040, i64* %PC.i489
  %23041 = inttoptr i64 %23038 to i32*
  %23042 = load i32, i32* %23041
  %23043 = zext i32 %23042 to i64
  store i64 %23043, i64* %RAX.i490, align 8
  store %struct.Memory* %loadMem_40cf6a, %struct.Memory** %MEMORY
  %loadMem_40cf6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %23044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23045 = getelementptr inbounds %struct.GPR, %struct.GPR* %23044, i32 0, i32 33
  %23046 = getelementptr inbounds %struct.Reg, %struct.Reg* %23045, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %23046 to i64*
  %23047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23048 = getelementptr inbounds %struct.GPR, %struct.GPR* %23047, i32 0, i32 1
  %23049 = getelementptr inbounds %struct.Reg, %struct.Reg* %23048, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %23049 to i64*
  %23050 = load i64, i64* %RAX.i488
  %23051 = load i64, i64* %PC.i487
  %23052 = add i64 %23051, 3
  store i64 %23052, i64* %PC.i487
  %23053 = trunc i64 %23050 to i32
  %23054 = add i32 1, %23053
  %23055 = zext i32 %23054 to i64
  store i64 %23055, i64* %RAX.i488, align 8
  %23056 = icmp ult i32 %23054, %23053
  %23057 = icmp ult i32 %23054, 1
  %23058 = or i1 %23056, %23057
  %23059 = zext i1 %23058 to i8
  %23060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23059, i8* %23060, align 1
  %23061 = and i32 %23054, 255
  %23062 = call i32 @llvm.ctpop.i32(i32 %23061)
  %23063 = trunc i32 %23062 to i8
  %23064 = and i8 %23063, 1
  %23065 = xor i8 %23064, 1
  %23066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23065, i8* %23066, align 1
  %23067 = xor i64 1, %23050
  %23068 = trunc i64 %23067 to i32
  %23069 = xor i32 %23068, %23054
  %23070 = lshr i32 %23069, 4
  %23071 = trunc i32 %23070 to i8
  %23072 = and i8 %23071, 1
  %23073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23072, i8* %23073, align 1
  %23074 = icmp eq i32 %23054, 0
  %23075 = zext i1 %23074 to i8
  %23076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23075, i8* %23076, align 1
  %23077 = lshr i32 %23054, 31
  %23078 = trunc i32 %23077 to i8
  %23079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23078, i8* %23079, align 1
  %23080 = lshr i32 %23053, 31
  %23081 = xor i32 %23077, %23080
  %23082 = add i32 %23081, %23077
  %23083 = icmp eq i32 %23082, 2
  %23084 = zext i1 %23083 to i8
  %23085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23084, i8* %23085, align 1
  store %struct.Memory* %loadMem_40cf6d, %struct.Memory** %MEMORY
  %loadMem_40cf70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23087 = getelementptr inbounds %struct.GPR, %struct.GPR* %23086, i32 0, i32 33
  %23088 = getelementptr inbounds %struct.Reg, %struct.Reg* %23087, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %23088 to i64*
  %23089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23090 = getelementptr inbounds %struct.GPR, %struct.GPR* %23089, i32 0, i32 1
  %23091 = getelementptr inbounds %struct.Reg, %struct.Reg* %23090, i32 0, i32 0
  %EAX.i485 = bitcast %union.anon* %23091 to i32*
  %23092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23093 = getelementptr inbounds %struct.GPR, %struct.GPR* %23092, i32 0, i32 15
  %23094 = getelementptr inbounds %struct.Reg, %struct.Reg* %23093, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %23094 to i64*
  %23095 = load i64, i64* %RBP.i486
  %23096 = sub i64 %23095, 24
  %23097 = load i32, i32* %EAX.i485
  %23098 = zext i32 %23097 to i64
  %23099 = load i64, i64* %PC.i484
  %23100 = add i64 %23099, 3
  store i64 %23100, i64* %PC.i484
  %23101 = inttoptr i64 %23096 to i32*
  store i32 %23097, i32* %23101
  store %struct.Memory* %loadMem_40cf70, %struct.Memory** %MEMORY
  %loadMem_40cf73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23103 = getelementptr inbounds %struct.GPR, %struct.GPR* %23102, i32 0, i32 33
  %23104 = getelementptr inbounds %struct.Reg, %struct.Reg* %23103, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %23104 to i64*
  %23105 = load i64, i64* %PC.i483
  %23106 = add i64 %23105, -59
  %23107 = load i64, i64* %PC.i483
  %23108 = add i64 %23107, 5
  store i64 %23108, i64* %PC.i483
  %23109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %23106, i64* %23109, align 8
  store %struct.Memory* %loadMem_40cf73, %struct.Memory** %MEMORY
  br label %block_.L_40cf38

block_.L_40cf78:                                  ; preds = %block_.L_40cf38
  %loadMem_40cf78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23111 = getelementptr inbounds %struct.GPR, %struct.GPR* %23110, i32 0, i32 33
  %23112 = getelementptr inbounds %struct.Reg, %struct.Reg* %23111, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %23112 to i64*
  %23113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23114 = getelementptr inbounds %struct.GPR, %struct.GPR* %23113, i32 0, i32 1
  %23115 = getelementptr inbounds %struct.Reg, %struct.Reg* %23114, i32 0, i32 0
  %RAX.i481 = bitcast %union.anon* %23115 to i64*
  %23116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23117 = getelementptr inbounds %struct.GPR, %struct.GPR* %23116, i32 0, i32 15
  %23118 = getelementptr inbounds %struct.Reg, %struct.Reg* %23117, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %23118 to i64*
  %23119 = load i64, i64* %RBP.i482
  %23120 = sub i64 %23119, 64
  %23121 = load i64, i64* %PC.i480
  %23122 = add i64 %23121, 3
  store i64 %23122, i64* %PC.i480
  %23123 = inttoptr i64 %23120 to i32*
  %23124 = load i32, i32* %23123
  %23125 = zext i32 %23124 to i64
  store i64 %23125, i64* %RAX.i481, align 8
  store %struct.Memory* %loadMem_40cf78, %struct.Memory** %MEMORY
  %loadMem_40cf7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %23126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23127 = getelementptr inbounds %struct.GPR, %struct.GPR* %23126, i32 0, i32 33
  %23128 = getelementptr inbounds %struct.Reg, %struct.Reg* %23127, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %23128 to i64*
  %23129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23130 = getelementptr inbounds %struct.GPR, %struct.GPR* %23129, i32 0, i32 1
  %23131 = getelementptr inbounds %struct.Reg, %struct.Reg* %23130, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %23131 to i64*
  %23132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23133 = getelementptr inbounds %struct.GPR, %struct.GPR* %23132, i32 0, i32 15
  %23134 = getelementptr inbounds %struct.Reg, %struct.Reg* %23133, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %23134 to i64*
  %23135 = load i64, i64* %RAX.i478
  %23136 = load i64, i64* %RBP.i479
  %23137 = sub i64 %23136, 56
  %23138 = load i64, i64* %PC.i477
  %23139 = add i64 %23138, 3
  store i64 %23139, i64* %PC.i477
  %23140 = trunc i64 %23135 to i32
  %23141 = inttoptr i64 %23137 to i32*
  %23142 = load i32, i32* %23141
  %23143 = add i32 %23142, %23140
  %23144 = zext i32 %23143 to i64
  store i64 %23144, i64* %RAX.i478, align 8
  %23145 = icmp ult i32 %23143, %23140
  %23146 = icmp ult i32 %23143, %23142
  %23147 = or i1 %23145, %23146
  %23148 = zext i1 %23147 to i8
  %23149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23148, i8* %23149, align 1
  %23150 = and i32 %23143, 255
  %23151 = call i32 @llvm.ctpop.i32(i32 %23150)
  %23152 = trunc i32 %23151 to i8
  %23153 = and i8 %23152, 1
  %23154 = xor i8 %23153, 1
  %23155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23154, i8* %23155, align 1
  %23156 = xor i32 %23142, %23140
  %23157 = xor i32 %23156, %23143
  %23158 = lshr i32 %23157, 4
  %23159 = trunc i32 %23158 to i8
  %23160 = and i8 %23159, 1
  %23161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23160, i8* %23161, align 1
  %23162 = icmp eq i32 %23143, 0
  %23163 = zext i1 %23162 to i8
  %23164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23163, i8* %23164, align 1
  %23165 = lshr i32 %23143, 31
  %23166 = trunc i32 %23165 to i8
  %23167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23166, i8* %23167, align 1
  %23168 = lshr i32 %23140, 31
  %23169 = lshr i32 %23142, 31
  %23170 = xor i32 %23165, %23168
  %23171 = xor i32 %23165, %23169
  %23172 = add i32 %23170, %23171
  %23173 = icmp eq i32 %23172, 2
  %23174 = zext i1 %23173 to i8
  %23175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23174, i8* %23175, align 1
  store %struct.Memory* %loadMem_40cf7b, %struct.Memory** %MEMORY
  %loadMem_40cf7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %23176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23177 = getelementptr inbounds %struct.GPR, %struct.GPR* %23176, i32 0, i32 33
  %23178 = getelementptr inbounds %struct.Reg, %struct.Reg* %23177, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %23178 to i64*
  %23179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23180 = getelementptr inbounds %struct.GPR, %struct.GPR* %23179, i32 0, i32 1
  %23181 = getelementptr inbounds %struct.Reg, %struct.Reg* %23180, i32 0, i32 0
  %EAX.i475 = bitcast %union.anon* %23181 to i32*
  %23182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23183 = getelementptr inbounds %struct.GPR, %struct.GPR* %23182, i32 0, i32 15
  %23184 = getelementptr inbounds %struct.Reg, %struct.Reg* %23183, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %23184 to i64*
  %23185 = load i64, i64* %RBP.i476
  %23186 = sub i64 %23185, 80
  %23187 = load i32, i32* %EAX.i475
  %23188 = zext i32 %23187 to i64
  %23189 = load i64, i64* %PC.i474
  %23190 = add i64 %23189, 3
  store i64 %23190, i64* %PC.i474
  %23191 = inttoptr i64 %23186 to i32*
  store i32 %23187, i32* %23191
  store %struct.Memory* %loadMem_40cf7e, %struct.Memory** %MEMORY
  %loadMem_40cf81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23193 = getelementptr inbounds %struct.GPR, %struct.GPR* %23192, i32 0, i32 33
  %23194 = getelementptr inbounds %struct.Reg, %struct.Reg* %23193, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %23194 to i64*
  %23195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23196 = getelementptr inbounds %struct.GPR, %struct.GPR* %23195, i32 0, i32 1
  %23197 = getelementptr inbounds %struct.Reg, %struct.Reg* %23196, i32 0, i32 0
  %RAX.i472 = bitcast %union.anon* %23197 to i64*
  %23198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23199 = getelementptr inbounds %struct.GPR, %struct.GPR* %23198, i32 0, i32 15
  %23200 = getelementptr inbounds %struct.Reg, %struct.Reg* %23199, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %23200 to i64*
  %23201 = load i64, i64* %RBP.i473
  %23202 = sub i64 %23201, 64
  %23203 = load i64, i64* %PC.i471
  %23204 = add i64 %23203, 3
  store i64 %23204, i64* %PC.i471
  %23205 = inttoptr i64 %23202 to i32*
  %23206 = load i32, i32* %23205
  %23207 = zext i32 %23206 to i64
  store i64 %23207, i64* %RAX.i472, align 8
  store %struct.Memory* %loadMem_40cf81, %struct.Memory** %MEMORY
  %loadMem_40cf84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23209 = getelementptr inbounds %struct.GPR, %struct.GPR* %23208, i32 0, i32 33
  %23210 = getelementptr inbounds %struct.Reg, %struct.Reg* %23209, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %23210 to i64*
  %23211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23212 = getelementptr inbounds %struct.GPR, %struct.GPR* %23211, i32 0, i32 1
  %23213 = getelementptr inbounds %struct.Reg, %struct.Reg* %23212, i32 0, i32 0
  %RAX.i469 = bitcast %union.anon* %23213 to i64*
  %23214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23215 = getelementptr inbounds %struct.GPR, %struct.GPR* %23214, i32 0, i32 15
  %23216 = getelementptr inbounds %struct.Reg, %struct.Reg* %23215, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %23216 to i64*
  %23217 = load i64, i64* %RAX.i469
  %23218 = load i64, i64* %RBP.i470
  %23219 = sub i64 %23218, 56
  %23220 = load i64, i64* %PC.i468
  %23221 = add i64 %23220, 3
  store i64 %23221, i64* %PC.i468
  %23222 = trunc i64 %23217 to i32
  %23223 = inttoptr i64 %23219 to i32*
  %23224 = load i32, i32* %23223
  %23225 = sub i32 %23222, %23224
  %23226 = zext i32 %23225 to i64
  store i64 %23226, i64* %RAX.i469, align 8
  %23227 = icmp ult i32 %23222, %23224
  %23228 = zext i1 %23227 to i8
  %23229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23228, i8* %23229, align 1
  %23230 = and i32 %23225, 255
  %23231 = call i32 @llvm.ctpop.i32(i32 %23230)
  %23232 = trunc i32 %23231 to i8
  %23233 = and i8 %23232, 1
  %23234 = xor i8 %23233, 1
  %23235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23234, i8* %23235, align 1
  %23236 = xor i32 %23224, %23222
  %23237 = xor i32 %23236, %23225
  %23238 = lshr i32 %23237, 4
  %23239 = trunc i32 %23238 to i8
  %23240 = and i8 %23239, 1
  %23241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23240, i8* %23241, align 1
  %23242 = icmp eq i32 %23225, 0
  %23243 = zext i1 %23242 to i8
  %23244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23243, i8* %23244, align 1
  %23245 = lshr i32 %23225, 31
  %23246 = trunc i32 %23245 to i8
  %23247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23246, i8* %23247, align 1
  %23248 = lshr i32 %23222, 31
  %23249 = lshr i32 %23224, 31
  %23250 = xor i32 %23249, %23248
  %23251 = xor i32 %23245, %23248
  %23252 = add i32 %23251, %23250
  %23253 = icmp eq i32 %23252, 2
  %23254 = zext i1 %23253 to i8
  %23255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23254, i8* %23255, align 1
  store %struct.Memory* %loadMem_40cf84, %struct.Memory** %MEMORY
  %loadMem_40cf87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23257 = getelementptr inbounds %struct.GPR, %struct.GPR* %23256, i32 0, i32 33
  %23258 = getelementptr inbounds %struct.Reg, %struct.Reg* %23257, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %23258 to i64*
  %23259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23260 = getelementptr inbounds %struct.GPR, %struct.GPR* %23259, i32 0, i32 1
  %23261 = getelementptr inbounds %struct.Reg, %struct.Reg* %23260, i32 0, i32 0
  %EAX.i466 = bitcast %union.anon* %23261 to i32*
  %23262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23263 = getelementptr inbounds %struct.GPR, %struct.GPR* %23262, i32 0, i32 15
  %23264 = getelementptr inbounds %struct.Reg, %struct.Reg* %23263, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %23264 to i64*
  %23265 = load i64, i64* %RBP.i467
  %23266 = sub i64 %23265, 76
  %23267 = load i32, i32* %EAX.i466
  %23268 = zext i32 %23267 to i64
  %23269 = load i64, i64* %PC.i465
  %23270 = add i64 %23269, 3
  store i64 %23270, i64* %PC.i465
  %23271 = inttoptr i64 %23266 to i32*
  store i32 %23267, i32* %23271
  store %struct.Memory* %loadMem_40cf87, %struct.Memory** %MEMORY
  %loadMem_40cf8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %23272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23273 = getelementptr inbounds %struct.GPR, %struct.GPR* %23272, i32 0, i32 33
  %23274 = getelementptr inbounds %struct.Reg, %struct.Reg* %23273, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %23274 to i64*
  %23275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23276 = getelementptr inbounds %struct.GPR, %struct.GPR* %23275, i32 0, i32 1
  %23277 = getelementptr inbounds %struct.Reg, %struct.Reg* %23276, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %23277 to i64*
  %23278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23279 = getelementptr inbounds %struct.GPR, %struct.GPR* %23278, i32 0, i32 15
  %23280 = getelementptr inbounds %struct.Reg, %struct.Reg* %23279, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %23280 to i64*
  %23281 = load i64, i64* %RBP.i464
  %23282 = sub i64 %23281, 60
  %23283 = load i64, i64* %PC.i462
  %23284 = add i64 %23283, 3
  store i64 %23284, i64* %PC.i462
  %23285 = inttoptr i64 %23282 to i32*
  %23286 = load i32, i32* %23285
  %23287 = zext i32 %23286 to i64
  store i64 %23287, i64* %RAX.i463, align 8
  store %struct.Memory* %loadMem_40cf8a, %struct.Memory** %MEMORY
  %loadMem_40cf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %23288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23289 = getelementptr inbounds %struct.GPR, %struct.GPR* %23288, i32 0, i32 33
  %23290 = getelementptr inbounds %struct.Reg, %struct.Reg* %23289, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %23290 to i64*
  %23291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23292 = getelementptr inbounds %struct.GPR, %struct.GPR* %23291, i32 0, i32 1
  %23293 = getelementptr inbounds %struct.Reg, %struct.Reg* %23292, i32 0, i32 0
  %RAX.i461 = bitcast %union.anon* %23293 to i64*
  %23294 = load i64, i64* %RAX.i461
  %23295 = load i64, i64* %PC.i460
  %23296 = add i64 %23295, 2
  store i64 %23296, i64* %PC.i460
  %23297 = shl i64 %23294, 32
  %23298 = ashr i64 %23297, 33
  %23299 = trunc i64 %23294 to i8
  %23300 = and i8 %23299, 1
  %23301 = trunc i64 %23298 to i32
  %23302 = and i64 %23298, 4294967295
  store i64 %23302, i64* %RAX.i461, align 8
  %23303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23300, i8* %23303, align 1
  %23304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23305 = and i32 %23301, 255
  %23306 = call i32 @llvm.ctpop.i32(i32 %23305)
  %23307 = trunc i32 %23306 to i8
  %23308 = and i8 %23307, 1
  %23309 = xor i8 %23308, 1
  store i8 %23309, i8* %23304, align 1
  %23310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23310, align 1
  %23311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23312 = icmp eq i32 %23301, 0
  %23313 = zext i1 %23312 to i8
  store i8 %23313, i8* %23311, align 1
  %23314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23315 = lshr i32 %23301, 31
  %23316 = trunc i32 %23315 to i8
  store i8 %23316, i8* %23314, align 1
  %23317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23317, align 1
  store %struct.Memory* %loadMem_40cf8d, %struct.Memory** %MEMORY
  %loadMem_40cf90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23319 = getelementptr inbounds %struct.GPR, %struct.GPR* %23318, i32 0, i32 33
  %23320 = getelementptr inbounds %struct.Reg, %struct.Reg* %23319, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %23320 to i64*
  %23321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23322 = getelementptr inbounds %struct.GPR, %struct.GPR* %23321, i32 0, i32 1
  %23323 = getelementptr inbounds %struct.Reg, %struct.Reg* %23322, i32 0, i32 0
  %RAX.i458 = bitcast %union.anon* %23323 to i64*
  %23324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23325 = getelementptr inbounds %struct.GPR, %struct.GPR* %23324, i32 0, i32 15
  %23326 = getelementptr inbounds %struct.Reg, %struct.Reg* %23325, i32 0, i32 0
  %RBP.i459 = bitcast %union.anon* %23326 to i64*
  %23327 = load i64, i64* %RAX.i458
  %23328 = load i64, i64* %RBP.i459
  %23329 = sub i64 %23328, 52
  %23330 = load i64, i64* %PC.i457
  %23331 = add i64 %23330, 3
  store i64 %23331, i64* %PC.i457
  %23332 = trunc i64 %23327 to i32
  %23333 = inttoptr i64 %23329 to i32*
  %23334 = load i32, i32* %23333
  %23335 = sub i32 %23332, %23334
  %23336 = zext i32 %23335 to i64
  store i64 %23336, i64* %RAX.i458, align 8
  %23337 = icmp ult i32 %23332, %23334
  %23338 = zext i1 %23337 to i8
  %23339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23338, i8* %23339, align 1
  %23340 = and i32 %23335, 255
  %23341 = call i32 @llvm.ctpop.i32(i32 %23340)
  %23342 = trunc i32 %23341 to i8
  %23343 = and i8 %23342, 1
  %23344 = xor i8 %23343, 1
  %23345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23344, i8* %23345, align 1
  %23346 = xor i32 %23334, %23332
  %23347 = xor i32 %23346, %23335
  %23348 = lshr i32 %23347, 4
  %23349 = trunc i32 %23348 to i8
  %23350 = and i8 %23349, 1
  %23351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23350, i8* %23351, align 1
  %23352 = icmp eq i32 %23335, 0
  %23353 = zext i1 %23352 to i8
  %23354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23353, i8* %23354, align 1
  %23355 = lshr i32 %23335, 31
  %23356 = trunc i32 %23355 to i8
  %23357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23356, i8* %23357, align 1
  %23358 = lshr i32 %23332, 31
  %23359 = lshr i32 %23334, 31
  %23360 = xor i32 %23359, %23358
  %23361 = xor i32 %23355, %23358
  %23362 = add i32 %23361, %23360
  %23363 = icmp eq i32 %23362, 2
  %23364 = zext i1 %23363 to i8
  %23365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23364, i8* %23365, align 1
  store %struct.Memory* %loadMem_40cf90, %struct.Memory** %MEMORY
  %loadMem_40cf93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23367 = getelementptr inbounds %struct.GPR, %struct.GPR* %23366, i32 0, i32 33
  %23368 = getelementptr inbounds %struct.Reg, %struct.Reg* %23367, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %23368 to i64*
  %23369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23370 = getelementptr inbounds %struct.GPR, %struct.GPR* %23369, i32 0, i32 1
  %23371 = getelementptr inbounds %struct.Reg, %struct.Reg* %23370, i32 0, i32 0
  %EAX.i455 = bitcast %union.anon* %23371 to i32*
  %23372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23373 = getelementptr inbounds %struct.GPR, %struct.GPR* %23372, i32 0, i32 15
  %23374 = getelementptr inbounds %struct.Reg, %struct.Reg* %23373, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %23374 to i64*
  %23375 = load i64, i64* %RBP.i456
  %23376 = sub i64 %23375, 72
  %23377 = load i32, i32* %EAX.i455
  %23378 = zext i32 %23377 to i64
  %23379 = load i64, i64* %PC.i454
  %23380 = add i64 %23379, 3
  store i64 %23380, i64* %PC.i454
  %23381 = inttoptr i64 %23376 to i32*
  store i32 %23377, i32* %23381
  store %struct.Memory* %loadMem_40cf93, %struct.Memory** %MEMORY
  %loadMem_40cf96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23383 = getelementptr inbounds %struct.GPR, %struct.GPR* %23382, i32 0, i32 33
  %23384 = getelementptr inbounds %struct.Reg, %struct.Reg* %23383, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %23384 to i64*
  %23385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23386 = getelementptr inbounds %struct.GPR, %struct.GPR* %23385, i32 0, i32 1
  %23387 = getelementptr inbounds %struct.Reg, %struct.Reg* %23386, i32 0, i32 0
  %RAX.i452 = bitcast %union.anon* %23387 to i64*
  %23388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23389 = getelementptr inbounds %struct.GPR, %struct.GPR* %23388, i32 0, i32 15
  %23390 = getelementptr inbounds %struct.Reg, %struct.Reg* %23389, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %23390 to i64*
  %23391 = load i64, i64* %RBP.i453
  %23392 = sub i64 %23391, 60
  %23393 = load i64, i64* %PC.i451
  %23394 = add i64 %23393, 3
  store i64 %23394, i64* %PC.i451
  %23395 = inttoptr i64 %23392 to i32*
  %23396 = load i32, i32* %23395
  %23397 = zext i32 %23396 to i64
  store i64 %23397, i64* %RAX.i452, align 8
  store %struct.Memory* %loadMem_40cf96, %struct.Memory** %MEMORY
  %loadMem_40cf99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23399 = getelementptr inbounds %struct.GPR, %struct.GPR* %23398, i32 0, i32 33
  %23400 = getelementptr inbounds %struct.Reg, %struct.Reg* %23399, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %23400 to i64*
  %23401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23402 = getelementptr inbounds %struct.GPR, %struct.GPR* %23401, i32 0, i32 5
  %23403 = getelementptr inbounds %struct.Reg, %struct.Reg* %23402, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %23403 to i64*
  %23404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23405 = getelementptr inbounds %struct.GPR, %struct.GPR* %23404, i32 0, i32 15
  %23406 = getelementptr inbounds %struct.Reg, %struct.Reg* %23405, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %23406 to i64*
  %23407 = load i64, i64* %RBP.i450
  %23408 = sub i64 %23407, 52
  %23409 = load i64, i64* %PC.i448
  %23410 = add i64 %23409, 3
  store i64 %23410, i64* %PC.i448
  %23411 = inttoptr i64 %23408 to i32*
  %23412 = load i32, i32* %23411
  %23413 = zext i32 %23412 to i64
  store i64 %23413, i64* %RCX.i449, align 8
  store %struct.Memory* %loadMem_40cf99, %struct.Memory** %MEMORY
  %loadMem_40cf9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %23414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23415 = getelementptr inbounds %struct.GPR, %struct.GPR* %23414, i32 0, i32 33
  %23416 = getelementptr inbounds %struct.Reg, %struct.Reg* %23415, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %23416 to i64*
  %23417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23418 = getelementptr inbounds %struct.GPR, %struct.GPR* %23417, i32 0, i32 5
  %23419 = getelementptr inbounds %struct.Reg, %struct.Reg* %23418, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %23419 to i64*
  %23420 = load i64, i64* %RCX.i447
  %23421 = load i64, i64* %PC.i446
  %23422 = add i64 %23421, 2
  store i64 %23422, i64* %PC.i446
  %23423 = shl i64 %23420, 32
  %23424 = ashr i64 %23423, 33
  %23425 = trunc i64 %23420 to i8
  %23426 = and i8 %23425, 1
  %23427 = trunc i64 %23424 to i32
  %23428 = and i64 %23424, 4294967295
  store i64 %23428, i64* %RCX.i447, align 8
  %23429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23426, i8* %23429, align 1
  %23430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23431 = and i32 %23427, 255
  %23432 = call i32 @llvm.ctpop.i32(i32 %23431)
  %23433 = trunc i32 %23432 to i8
  %23434 = and i8 %23433, 1
  %23435 = xor i8 %23434, 1
  store i8 %23435, i8* %23430, align 1
  %23436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23436, align 1
  %23437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23438 = icmp eq i32 %23427, 0
  %23439 = zext i1 %23438 to i8
  store i8 %23439, i8* %23437, align 1
  %23440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23441 = lshr i32 %23427, 31
  %23442 = trunc i32 %23441 to i8
  store i8 %23442, i8* %23440, align 1
  %23443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23443, align 1
  store %struct.Memory* %loadMem_40cf9c, %struct.Memory** %MEMORY
  %loadMem_40cf9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %23444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23445 = getelementptr inbounds %struct.GPR, %struct.GPR* %23444, i32 0, i32 33
  %23446 = getelementptr inbounds %struct.Reg, %struct.Reg* %23445, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %23446 to i64*
  %23447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23448 = getelementptr inbounds %struct.GPR, %struct.GPR* %23447, i32 0, i32 5
  %23449 = getelementptr inbounds %struct.Reg, %struct.Reg* %23448, i32 0, i32 0
  %ECX.i444 = bitcast %union.anon* %23449 to i32*
  %23450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23451 = getelementptr inbounds %struct.GPR, %struct.GPR* %23450, i32 0, i32 1
  %23452 = getelementptr inbounds %struct.Reg, %struct.Reg* %23451, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %23452 to i64*
  %23453 = load i64, i64* %RAX.i445
  %23454 = load i32, i32* %ECX.i444
  %23455 = zext i32 %23454 to i64
  %23456 = load i64, i64* %PC.i443
  %23457 = add i64 %23456, 2
  store i64 %23457, i64* %PC.i443
  %23458 = trunc i64 %23453 to i32
  %23459 = add i32 %23454, %23458
  %23460 = zext i32 %23459 to i64
  store i64 %23460, i64* %RAX.i445, align 8
  %23461 = icmp ult i32 %23459, %23458
  %23462 = icmp ult i32 %23459, %23454
  %23463 = or i1 %23461, %23462
  %23464 = zext i1 %23463 to i8
  %23465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23464, i8* %23465, align 1
  %23466 = and i32 %23459, 255
  %23467 = call i32 @llvm.ctpop.i32(i32 %23466)
  %23468 = trunc i32 %23467 to i8
  %23469 = and i8 %23468, 1
  %23470 = xor i8 %23469, 1
  %23471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23470, i8* %23471, align 1
  %23472 = xor i64 %23455, %23453
  %23473 = trunc i64 %23472 to i32
  %23474 = xor i32 %23473, %23459
  %23475 = lshr i32 %23474, 4
  %23476 = trunc i32 %23475 to i8
  %23477 = and i8 %23476, 1
  %23478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23477, i8* %23478, align 1
  %23479 = icmp eq i32 %23459, 0
  %23480 = zext i1 %23479 to i8
  %23481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23480, i8* %23481, align 1
  %23482 = lshr i32 %23459, 31
  %23483 = trunc i32 %23482 to i8
  %23484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23483, i8* %23484, align 1
  %23485 = lshr i32 %23458, 31
  %23486 = lshr i32 %23454, 31
  %23487 = xor i32 %23482, %23485
  %23488 = xor i32 %23482, %23486
  %23489 = add i32 %23487, %23488
  %23490 = icmp eq i32 %23489, 2
  %23491 = zext i1 %23490 to i8
  %23492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23491, i8* %23492, align 1
  store %struct.Memory* %loadMem_40cf9f, %struct.Memory** %MEMORY
  %loadMem_40cfa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23494 = getelementptr inbounds %struct.GPR, %struct.GPR* %23493, i32 0, i32 33
  %23495 = getelementptr inbounds %struct.Reg, %struct.Reg* %23494, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %23495 to i64*
  %23496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23497 = getelementptr inbounds %struct.GPR, %struct.GPR* %23496, i32 0, i32 1
  %23498 = getelementptr inbounds %struct.Reg, %struct.Reg* %23497, i32 0, i32 0
  %EAX.i441 = bitcast %union.anon* %23498 to i32*
  %23499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23500 = getelementptr inbounds %struct.GPR, %struct.GPR* %23499, i32 0, i32 15
  %23501 = getelementptr inbounds %struct.Reg, %struct.Reg* %23500, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %23501 to i64*
  %23502 = load i64, i64* %RBP.i442
  %23503 = sub i64 %23502, 68
  %23504 = load i32, i32* %EAX.i441
  %23505 = zext i32 %23504 to i64
  %23506 = load i64, i64* %PC.i440
  %23507 = add i64 %23506, 3
  store i64 %23507, i64* %PC.i440
  %23508 = inttoptr i64 %23503 to i32*
  store i32 %23504, i32* %23508
  store %struct.Memory* %loadMem_40cfa1, %struct.Memory** %MEMORY
  %loadMem_40cfa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23510 = getelementptr inbounds %struct.GPR, %struct.GPR* %23509, i32 0, i32 33
  %23511 = getelementptr inbounds %struct.Reg, %struct.Reg* %23510, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %23511 to i64*
  %23512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23513 = getelementptr inbounds %struct.GPR, %struct.GPR* %23512, i32 0, i32 15
  %23514 = getelementptr inbounds %struct.Reg, %struct.Reg* %23513, i32 0, i32 0
  %RBP.i439 = bitcast %union.anon* %23514 to i64*
  %23515 = load i64, i64* %RBP.i439
  %23516 = sub i64 %23515, 24
  %23517 = load i64, i64* %PC.i438
  %23518 = add i64 %23517, 7
  store i64 %23518, i64* %PC.i438
  %23519 = inttoptr i64 %23516 to i32*
  store i32 0, i32* %23519
  store %struct.Memory* %loadMem_40cfa4, %struct.Memory** %MEMORY
  br label %block_.L_40cfab

block_.L_40cfab:                                  ; preds = %block_.L_40d1a5, %block_.L_40cf78
  %loadMem_40cfab = load %struct.Memory*, %struct.Memory** %MEMORY
  %23520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23521 = getelementptr inbounds %struct.GPR, %struct.GPR* %23520, i32 0, i32 33
  %23522 = getelementptr inbounds %struct.Reg, %struct.Reg* %23521, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %23522 to i64*
  %23523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23524 = getelementptr inbounds %struct.GPR, %struct.GPR* %23523, i32 0, i32 15
  %23525 = getelementptr inbounds %struct.Reg, %struct.Reg* %23524, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %23525 to i64*
  %23526 = load i64, i64* %RBP.i437
  %23527 = sub i64 %23526, 24
  %23528 = load i64, i64* %PC.i436
  %23529 = add i64 %23528, 4
  store i64 %23529, i64* %PC.i436
  %23530 = inttoptr i64 %23527 to i32*
  %23531 = load i32, i32* %23530
  %23532 = sub i32 %23531, 2
  %23533 = icmp ult i32 %23531, 2
  %23534 = zext i1 %23533 to i8
  %23535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23534, i8* %23535, align 1
  %23536 = and i32 %23532, 255
  %23537 = call i32 @llvm.ctpop.i32(i32 %23536)
  %23538 = trunc i32 %23537 to i8
  %23539 = and i8 %23538, 1
  %23540 = xor i8 %23539, 1
  %23541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23540, i8* %23541, align 1
  %23542 = xor i32 %23531, 2
  %23543 = xor i32 %23542, %23532
  %23544 = lshr i32 %23543, 4
  %23545 = trunc i32 %23544 to i8
  %23546 = and i8 %23545, 1
  %23547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23546, i8* %23547, align 1
  %23548 = icmp eq i32 %23532, 0
  %23549 = zext i1 %23548 to i8
  %23550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23549, i8* %23550, align 1
  %23551 = lshr i32 %23532, 31
  %23552 = trunc i32 %23551 to i8
  %23553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23552, i8* %23553, align 1
  %23554 = lshr i32 %23531, 31
  %23555 = xor i32 %23551, %23554
  %23556 = add i32 %23555, %23554
  %23557 = icmp eq i32 %23556, 2
  %23558 = zext i1 %23557 to i8
  %23559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23558, i8* %23559, align 1
  store %struct.Memory* %loadMem_40cfab, %struct.Memory** %MEMORY
  %loadMem_40cfaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %23560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23561 = getelementptr inbounds %struct.GPR, %struct.GPR* %23560, i32 0, i32 33
  %23562 = getelementptr inbounds %struct.Reg, %struct.Reg* %23561, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %23562 to i64*
  %23563 = load i64, i64* %PC.i435
  %23564 = add i64 %23563, 555
  %23565 = load i64, i64* %PC.i435
  %23566 = add i64 %23565, 6
  %23567 = load i64, i64* %PC.i435
  %23568 = add i64 %23567, 6
  store i64 %23568, i64* %PC.i435
  %23569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23570 = load i8, i8* %23569, align 1
  %23571 = icmp ne i8 %23570, 0
  %23572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %23573 = load i8, i8* %23572, align 1
  %23574 = icmp ne i8 %23573, 0
  %23575 = xor i1 %23571, %23574
  %23576 = xor i1 %23575, true
  %23577 = zext i1 %23576 to i8
  store i8 %23577, i8* %BRANCH_TAKEN, align 1
  %23578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23579 = select i1 %23575, i64 %23566, i64 %23564
  store i64 %23579, i64* %23578, align 8
  store %struct.Memory* %loadMem_40cfaf, %struct.Memory** %MEMORY
  %loadBr_40cfaf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cfaf = icmp eq i8 %loadBr_40cfaf, 1
  br i1 %cmpBr_40cfaf, label %block_.L_40d1da, label %block_40cfb5

block_40cfb5:                                     ; preds = %block_.L_40cfab
  %loadMem_40cfb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23581 = getelementptr inbounds %struct.GPR, %struct.GPR* %23580, i32 0, i32 33
  %23582 = getelementptr inbounds %struct.Reg, %struct.Reg* %23581, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %23582 to i64*
  %23583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23584 = getelementptr inbounds %struct.GPR, %struct.GPR* %23583, i32 0, i32 1
  %23585 = getelementptr inbounds %struct.Reg, %struct.Reg* %23584, i32 0, i32 0
  %EAX.i433 = bitcast %union.anon* %23585 to i32*
  %23586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23587 = getelementptr inbounds %struct.GPR, %struct.GPR* %23586, i32 0, i32 1
  %23588 = getelementptr inbounds %struct.Reg, %struct.Reg* %23587, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %23588 to i64*
  %23589 = load i64, i64* %RAX.i434
  %23590 = load i32, i32* %EAX.i433
  %23591 = zext i32 %23590 to i64
  %23592 = load i64, i64* %PC.i432
  %23593 = add i64 %23592, 2
  store i64 %23593, i64* %PC.i432
  %23594 = xor i64 %23591, %23589
  %23595 = trunc i64 %23594 to i32
  %23596 = and i64 %23594, 4294967295
  store i64 %23596, i64* %RAX.i434, align 8
  %23597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23597, align 1
  %23598 = and i32 %23595, 255
  %23599 = call i32 @llvm.ctpop.i32(i32 %23598)
  %23600 = trunc i32 %23599 to i8
  %23601 = and i8 %23600, 1
  %23602 = xor i8 %23601, 1
  %23603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23602, i8* %23603, align 1
  %23604 = icmp eq i32 %23595, 0
  %23605 = zext i1 %23604 to i8
  %23606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23605, i8* %23606, align 1
  %23607 = lshr i32 %23595, 31
  %23608 = trunc i32 %23607 to i8
  %23609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23608, i8* %23609, align 1
  %23610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23610, align 1
  %23611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23611, align 1
  store %struct.Memory* %loadMem_40cfb5, %struct.Memory** %MEMORY
  %loadMem_40cfb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23613 = getelementptr inbounds %struct.GPR, %struct.GPR* %23612, i32 0, i32 33
  %23614 = getelementptr inbounds %struct.Reg, %struct.Reg* %23613, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %23614 to i64*
  %23615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23616 = getelementptr inbounds %struct.GPR, %struct.GPR* %23615, i32 0, i32 5
  %23617 = getelementptr inbounds %struct.Reg, %struct.Reg* %23616, i32 0, i32 0
  %RCX.i431 = bitcast %union.anon* %23617 to i64*
  %23618 = load i64, i64* %PC.i430
  %23619 = add i64 %23618, 5
  store i64 %23619, i64* %PC.i430
  store i64 3, i64* %RCX.i431, align 8
  store %struct.Memory* %loadMem_40cfb7, %struct.Memory** %MEMORY
  %loadMem_40cfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %23620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23621 = getelementptr inbounds %struct.GPR, %struct.GPR* %23620, i32 0, i32 33
  %23622 = getelementptr inbounds %struct.Reg, %struct.Reg* %23621, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %23622 to i64*
  %23623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23624 = getelementptr inbounds %struct.GPR, %struct.GPR* %23623, i32 0, i32 5
  %23625 = getelementptr inbounds %struct.Reg, %struct.Reg* %23624, i32 0, i32 0
  %RCX.i428 = bitcast %union.anon* %23625 to i64*
  %23626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23627 = getelementptr inbounds %struct.GPR, %struct.GPR* %23626, i32 0, i32 15
  %23628 = getelementptr inbounds %struct.Reg, %struct.Reg* %23627, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %23628 to i64*
  %23629 = load i64, i64* %RCX.i428
  %23630 = load i64, i64* %RBP.i429
  %23631 = sub i64 %23630, 24
  %23632 = load i64, i64* %PC.i427
  %23633 = add i64 %23632, 3
  store i64 %23633, i64* %PC.i427
  %23634 = trunc i64 %23629 to i32
  %23635 = inttoptr i64 %23631 to i32*
  %23636 = load i32, i32* %23635
  %23637 = sub i32 %23634, %23636
  %23638 = zext i32 %23637 to i64
  store i64 %23638, i64* %RCX.i428, align 8
  %23639 = icmp ult i32 %23634, %23636
  %23640 = zext i1 %23639 to i8
  %23641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23640, i8* %23641, align 1
  %23642 = and i32 %23637, 255
  %23643 = call i32 @llvm.ctpop.i32(i32 %23642)
  %23644 = trunc i32 %23643 to i8
  %23645 = and i8 %23644, 1
  %23646 = xor i8 %23645, 1
  %23647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23646, i8* %23647, align 1
  %23648 = xor i32 %23636, %23634
  %23649 = xor i32 %23648, %23637
  %23650 = lshr i32 %23649, 4
  %23651 = trunc i32 %23650 to i8
  %23652 = and i8 %23651, 1
  %23653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23652, i8* %23653, align 1
  %23654 = icmp eq i32 %23637, 0
  %23655 = zext i1 %23654 to i8
  %23656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23655, i8* %23656, align 1
  %23657 = lshr i32 %23637, 31
  %23658 = trunc i32 %23657 to i8
  %23659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23658, i8* %23659, align 1
  %23660 = lshr i32 %23634, 31
  %23661 = lshr i32 %23636, 31
  %23662 = xor i32 %23661, %23660
  %23663 = xor i32 %23657, %23660
  %23664 = add i32 %23663, %23662
  %23665 = icmp eq i32 %23664, 2
  %23666 = zext i1 %23665 to i8
  %23667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23666, i8* %23667, align 1
  store %struct.Memory* %loadMem_40cfbc, %struct.Memory** %MEMORY
  %loadMem_40cfbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %23668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23669 = getelementptr inbounds %struct.GPR, %struct.GPR* %23668, i32 0, i32 33
  %23670 = getelementptr inbounds %struct.Reg, %struct.Reg* %23669, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %23670 to i64*
  %23671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23672 = getelementptr inbounds %struct.GPR, %struct.GPR* %23671, i32 0, i32 5
  %23673 = getelementptr inbounds %struct.Reg, %struct.Reg* %23672, i32 0, i32 0
  %ECX.i425 = bitcast %union.anon* %23673 to i32*
  %23674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23675 = getelementptr inbounds %struct.GPR, %struct.GPR* %23674, i32 0, i32 15
  %23676 = getelementptr inbounds %struct.Reg, %struct.Reg* %23675, i32 0, i32 0
  %RBP.i426 = bitcast %union.anon* %23676 to i64*
  %23677 = load i64, i64* %RBP.i426
  %23678 = sub i64 %23677, 32
  %23679 = load i32, i32* %ECX.i425
  %23680 = zext i32 %23679 to i64
  %23681 = load i64, i64* %PC.i424
  %23682 = add i64 %23681, 3
  store i64 %23682, i64* %PC.i424
  %23683 = inttoptr i64 %23678 to i32*
  store i32 %23679, i32* %23683
  store %struct.Memory* %loadMem_40cfbf, %struct.Memory** %MEMORY
  %loadMem_40cfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23685 = getelementptr inbounds %struct.GPR, %struct.GPR* %23684, i32 0, i32 33
  %23686 = getelementptr inbounds %struct.Reg, %struct.Reg* %23685, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %23686 to i64*
  %23687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23688 = getelementptr inbounds %struct.GPR, %struct.GPR* %23687, i32 0, i32 7
  %23689 = getelementptr inbounds %struct.Reg, %struct.Reg* %23688, i32 0, i32 0
  %RDX.i423 = bitcast %union.anon* %23689 to i64*
  %23690 = load i64, i64* %PC.i422
  %23691 = add i64 %23690, 8
  store i64 %23691, i64* %PC.i422
  %23692 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %23692, i64* %RDX.i423, align 8
  store %struct.Memory* %loadMem_40cfc2, %struct.Memory** %MEMORY
  %loadMem_40cfca = load %struct.Memory*, %struct.Memory** %MEMORY
  %23693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23694 = getelementptr inbounds %struct.GPR, %struct.GPR* %23693, i32 0, i32 33
  %23695 = getelementptr inbounds %struct.Reg, %struct.Reg* %23694, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %23695 to i64*
  %23696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23697 = getelementptr inbounds %struct.GPR, %struct.GPR* %23696, i32 0, i32 5
  %23698 = getelementptr inbounds %struct.Reg, %struct.Reg* %23697, i32 0, i32 0
  %RCX.i420 = bitcast %union.anon* %23698 to i64*
  %23699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23700 = getelementptr inbounds %struct.GPR, %struct.GPR* %23699, i32 0, i32 7
  %23701 = getelementptr inbounds %struct.Reg, %struct.Reg* %23700, i32 0, i32 0
  %RDX.i421 = bitcast %union.anon* %23701 to i64*
  %23702 = load i64, i64* %RDX.i421
  %23703 = add i64 %23702, 72684
  %23704 = load i64, i64* %PC.i419
  %23705 = add i64 %23704, 6
  store i64 %23705, i64* %PC.i419
  %23706 = inttoptr i64 %23703 to i32*
  %23707 = load i32, i32* %23706
  %23708 = zext i32 %23707 to i64
  store i64 %23708, i64* %RCX.i420, align 8
  store %struct.Memory* %loadMem_40cfca, %struct.Memory** %MEMORY
  %loadMem_40cfd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23710 = getelementptr inbounds %struct.GPR, %struct.GPR* %23709, i32 0, i32 33
  %23711 = getelementptr inbounds %struct.Reg, %struct.Reg* %23710, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %23711 to i64*
  %23712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23713 = getelementptr inbounds %struct.GPR, %struct.GPR* %23712, i32 0, i32 7
  %23714 = getelementptr inbounds %struct.Reg, %struct.Reg* %23713, i32 0, i32 0
  %RDX.i417 = bitcast %union.anon* %23714 to i64*
  %23715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23716 = getelementptr inbounds %struct.GPR, %struct.GPR* %23715, i32 0, i32 15
  %23717 = getelementptr inbounds %struct.Reg, %struct.Reg* %23716, i32 0, i32 0
  %RBP.i418 = bitcast %union.anon* %23717 to i64*
  %23718 = load i64, i64* %RBP.i418
  %23719 = sub i64 %23718, 24
  %23720 = load i64, i64* %PC.i416
  %23721 = add i64 %23720, 4
  store i64 %23721, i64* %PC.i416
  %23722 = inttoptr i64 %23719 to i32*
  %23723 = load i32, i32* %23722
  %23724 = sext i32 %23723 to i64
  store i64 %23724, i64* %RDX.i417, align 8
  store %struct.Memory* %loadMem_40cfd0, %struct.Memory** %MEMORY
  %loadMem_40cfd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23726 = getelementptr inbounds %struct.GPR, %struct.GPR* %23725, i32 0, i32 33
  %23727 = getelementptr inbounds %struct.Reg, %struct.Reg* %23726, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %23727 to i64*
  %23728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23729 = getelementptr inbounds %struct.GPR, %struct.GPR* %23728, i32 0, i32 7
  %23730 = getelementptr inbounds %struct.Reg, %struct.Reg* %23729, i32 0, i32 0
  %RDX.i413 = bitcast %union.anon* %23730 to i64*
  %23731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23732 = getelementptr inbounds %struct.GPR, %struct.GPR* %23731, i32 0, i32 9
  %23733 = getelementptr inbounds %struct.Reg, %struct.Reg* %23732, i32 0, i32 0
  %RSI.i414 = bitcast %union.anon* %23733 to i64*
  %23734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23735 = getelementptr inbounds %struct.GPR, %struct.GPR* %23734, i32 0, i32 15
  %23736 = getelementptr inbounds %struct.Reg, %struct.Reg* %23735, i32 0, i32 0
  %RBP.i415 = bitcast %union.anon* %23736 to i64*
  %23737 = load i64, i64* %RBP.i415
  %23738 = load i64, i64* %RDX.i413
  %23739 = mul i64 %23738, 4
  %23740 = add i64 %23737, -80
  %23741 = add i64 %23740, %23739
  %23742 = load i64, i64* %PC.i412
  %23743 = add i64 %23742, 4
  store i64 %23743, i64* %PC.i412
  %23744 = inttoptr i64 %23741 to i32*
  %23745 = load i32, i32* %23744
  %23746 = zext i32 %23745 to i64
  store i64 %23746, i64* %RSI.i414, align 8
  store %struct.Memory* %loadMem_40cfd4, %struct.Memory** %MEMORY
  %loadMem_40cfd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23748 = getelementptr inbounds %struct.GPR, %struct.GPR* %23747, i32 0, i32 33
  %23749 = getelementptr inbounds %struct.Reg, %struct.Reg* %23748, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %23749 to i64*
  %23750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23751 = getelementptr inbounds %struct.GPR, %struct.GPR* %23750, i32 0, i32 7
  %23752 = getelementptr inbounds %struct.Reg, %struct.Reg* %23751, i32 0, i32 0
  %RDX.i410 = bitcast %union.anon* %23752 to i64*
  %23753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23754 = getelementptr inbounds %struct.GPR, %struct.GPR* %23753, i32 0, i32 15
  %23755 = getelementptr inbounds %struct.Reg, %struct.Reg* %23754, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %23755 to i64*
  %23756 = load i64, i64* %RBP.i411
  %23757 = sub i64 %23756, 32
  %23758 = load i64, i64* %PC.i409
  %23759 = add i64 %23758, 4
  store i64 %23759, i64* %PC.i409
  %23760 = inttoptr i64 %23757 to i32*
  %23761 = load i32, i32* %23760
  %23762 = sext i32 %23761 to i64
  store i64 %23762, i64* %RDX.i410, align 8
  store %struct.Memory* %loadMem_40cfd8, %struct.Memory** %MEMORY
  %loadMem_40cfdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %23763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23764 = getelementptr inbounds %struct.GPR, %struct.GPR* %23763, i32 0, i32 33
  %23765 = getelementptr inbounds %struct.Reg, %struct.Reg* %23764, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %23765 to i64*
  %23766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23767 = getelementptr inbounds %struct.GPR, %struct.GPR* %23766, i32 0, i32 7
  %23768 = getelementptr inbounds %struct.Reg, %struct.Reg* %23767, i32 0, i32 0
  %RDX.i406 = bitcast %union.anon* %23768 to i64*
  %23769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23770 = getelementptr inbounds %struct.GPR, %struct.GPR* %23769, i32 0, i32 9
  %23771 = getelementptr inbounds %struct.Reg, %struct.Reg* %23770, i32 0, i32 0
  %RSI.i407 = bitcast %union.anon* %23771 to i64*
  %23772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23773 = getelementptr inbounds %struct.GPR, %struct.GPR* %23772, i32 0, i32 15
  %23774 = getelementptr inbounds %struct.Reg, %struct.Reg* %23773, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %23774 to i64*
  %23775 = load i64, i64* %RSI.i407
  %23776 = load i64, i64* %RBP.i408
  %23777 = load i64, i64* %RDX.i406
  %23778 = mul i64 %23777, 4
  %23779 = add i64 %23776, -80
  %23780 = add i64 %23779, %23778
  %23781 = load i64, i64* %PC.i405
  %23782 = add i64 %23781, 4
  store i64 %23782, i64* %PC.i405
  %23783 = trunc i64 %23775 to i32
  %23784 = inttoptr i64 %23780 to i32*
  %23785 = load i32, i32* %23784
  %23786 = add i32 %23785, %23783
  %23787 = zext i32 %23786 to i64
  store i64 %23787, i64* %RSI.i407, align 8
  %23788 = icmp ult i32 %23786, %23783
  %23789 = icmp ult i32 %23786, %23785
  %23790 = or i1 %23788, %23789
  %23791 = zext i1 %23790 to i8
  %23792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23791, i8* %23792, align 1
  %23793 = and i32 %23786, 255
  %23794 = call i32 @llvm.ctpop.i32(i32 %23793)
  %23795 = trunc i32 %23794 to i8
  %23796 = and i8 %23795, 1
  %23797 = xor i8 %23796, 1
  %23798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23797, i8* %23798, align 1
  %23799 = xor i32 %23785, %23783
  %23800 = xor i32 %23799, %23786
  %23801 = lshr i32 %23800, 4
  %23802 = trunc i32 %23801 to i8
  %23803 = and i8 %23802, 1
  %23804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23803, i8* %23804, align 1
  %23805 = icmp eq i32 %23786, 0
  %23806 = zext i1 %23805 to i8
  %23807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23806, i8* %23807, align 1
  %23808 = lshr i32 %23786, 31
  %23809 = trunc i32 %23808 to i8
  %23810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23809, i8* %23810, align 1
  %23811 = lshr i32 %23783, 31
  %23812 = lshr i32 %23785, 31
  %23813 = xor i32 %23808, %23811
  %23814 = xor i32 %23808, %23812
  %23815 = add i32 %23813, %23814
  %23816 = icmp eq i32 %23815, 2
  %23817 = zext i1 %23816 to i8
  %23818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23817, i8* %23818, align 1
  store %struct.Memory* %loadMem_40cfdc, %struct.Memory** %MEMORY
  %loadMem_40cfe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23820 = getelementptr inbounds %struct.GPR, %struct.GPR* %23819, i32 0, i32 33
  %23821 = getelementptr inbounds %struct.Reg, %struct.Reg* %23820, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %23821 to i64*
  %23822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23823 = getelementptr inbounds %struct.GPR, %struct.GPR* %23822, i32 0, i32 9
  %23824 = getelementptr inbounds %struct.Reg, %struct.Reg* %23823, i32 0, i32 0
  %RSI.i404 = bitcast %union.anon* %23824 to i64*
  %23825 = load i64, i64* %RSI.i404
  %23826 = load i64, i64* %PC.i403
  %23827 = add i64 %23826, 3
  store i64 %23827, i64* %PC.i403
  %23828 = trunc i64 %23825 to i32
  %23829 = add i32 32, %23828
  %23830 = zext i32 %23829 to i64
  store i64 %23830, i64* %RSI.i404, align 8
  %23831 = icmp ult i32 %23829, %23828
  %23832 = icmp ult i32 %23829, 32
  %23833 = or i1 %23831, %23832
  %23834 = zext i1 %23833 to i8
  %23835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23834, i8* %23835, align 1
  %23836 = and i32 %23829, 255
  %23837 = call i32 @llvm.ctpop.i32(i32 %23836)
  %23838 = trunc i32 %23837 to i8
  %23839 = and i8 %23838, 1
  %23840 = xor i8 %23839, 1
  %23841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23840, i8* %23841, align 1
  %23842 = xor i64 32, %23825
  %23843 = trunc i64 %23842 to i32
  %23844 = xor i32 %23843, %23829
  %23845 = lshr i32 %23844, 4
  %23846 = trunc i32 %23845 to i8
  %23847 = and i8 %23846, 1
  %23848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23847, i8* %23848, align 1
  %23849 = icmp eq i32 %23829, 0
  %23850 = zext i1 %23849 to i8
  %23851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23850, i8* %23851, align 1
  %23852 = lshr i32 %23829, 31
  %23853 = trunc i32 %23852 to i8
  %23854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23853, i8* %23854, align 1
  %23855 = lshr i32 %23828, 31
  %23856 = xor i32 %23852, %23855
  %23857 = add i32 %23856, %23852
  %23858 = icmp eq i32 %23857, 2
  %23859 = zext i1 %23858 to i8
  %23860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23859, i8* %23860, align 1
  store %struct.Memory* %loadMem_40cfe0, %struct.Memory** %MEMORY
  %loadMem_40cfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23862 = getelementptr inbounds %struct.GPR, %struct.GPR* %23861, i32 0, i32 33
  %23863 = getelementptr inbounds %struct.Reg, %struct.Reg* %23862, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %23863 to i64*
  %23864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23865 = getelementptr inbounds %struct.GPR, %struct.GPR* %23864, i32 0, i32 9
  %23866 = getelementptr inbounds %struct.Reg, %struct.Reg* %23865, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %23866 to i64*
  %23867 = load i64, i64* %RSI.i402
  %23868 = load i64, i64* %PC.i401
  %23869 = add i64 %23868, 3
  store i64 %23869, i64* %PC.i401
  %23870 = shl i64 %23867, 32
  %23871 = ashr exact i64 %23870, 32
  %23872 = ashr i64 %23871, 5
  %23873 = lshr i64 %23872, 1
  %23874 = trunc i64 %23872 to i8
  %23875 = and i8 %23874, 1
  %23876 = trunc i64 %23873 to i32
  %23877 = and i64 %23873, 4294967295
  store i64 %23877, i64* %RSI.i402, align 8
  %23878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23875, i8* %23878, align 1
  %23879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23880 = and i32 %23876, 255
  %23881 = call i32 @llvm.ctpop.i32(i32 %23880)
  %23882 = trunc i32 %23881 to i8
  %23883 = and i8 %23882, 1
  %23884 = xor i8 %23883, 1
  store i8 %23884, i8* %23879, align 1
  %23885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23885, align 1
  %23886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23887 = icmp eq i32 %23876, 0
  %23888 = zext i1 %23887 to i8
  store i8 %23888, i8* %23886, align 1
  %23889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23890 = lshr i32 %23876, 31
  %23891 = trunc i32 %23890 to i8
  store i8 %23891, i8* %23889, align 1
  %23892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23892, align 1
  store %struct.Memory* %loadMem_40cfe3, %struct.Memory** %MEMORY
  %loadMem_40cfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23894 = getelementptr inbounds %struct.GPR, %struct.GPR* %23893, i32 0, i32 33
  %23895 = getelementptr inbounds %struct.Reg, %struct.Reg* %23894, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %23895 to i64*
  %23896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23897 = getelementptr inbounds %struct.GPR, %struct.GPR* %23896, i32 0, i32 1
  %23898 = getelementptr inbounds %struct.Reg, %struct.Reg* %23897, i32 0, i32 0
  %EAX.i400 = bitcast %union.anon* %23898 to i32*
  %23899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23900 = getelementptr inbounds %struct.GPR, %struct.GPR* %23899, i32 0, i32 9
  %23901 = getelementptr inbounds %struct.Reg, %struct.Reg* %23900, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %23901 to i32*
  %23902 = load i32, i32* %EAX.i400
  %23903 = zext i32 %23902 to i64
  %23904 = load i32, i32* %ESI.i
  %23905 = zext i32 %23904 to i64
  %23906 = load i64, i64* %PC.i399
  %23907 = add i64 %23906, 2
  store i64 %23907, i64* %PC.i399
  %23908 = sub i32 %23902, %23904
  %23909 = icmp ult i32 %23902, %23904
  %23910 = zext i1 %23909 to i8
  %23911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23910, i8* %23911, align 1
  %23912 = and i32 %23908, 255
  %23913 = call i32 @llvm.ctpop.i32(i32 %23912)
  %23914 = trunc i32 %23913 to i8
  %23915 = and i8 %23914, 1
  %23916 = xor i8 %23915, 1
  %23917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23916, i8* %23917, align 1
  %23918 = xor i64 %23905, %23903
  %23919 = trunc i64 %23918 to i32
  %23920 = xor i32 %23919, %23908
  %23921 = lshr i32 %23920, 4
  %23922 = trunc i32 %23921 to i8
  %23923 = and i8 %23922, 1
  %23924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23923, i8* %23924, align 1
  %23925 = icmp eq i32 %23908, 0
  %23926 = zext i1 %23925 to i8
  %23927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23926, i8* %23927, align 1
  %23928 = lshr i32 %23908, 31
  %23929 = trunc i32 %23928 to i8
  %23930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %23929, i8* %23930, align 1
  %23931 = lshr i32 %23902, 31
  %23932 = lshr i32 %23904, 31
  %23933 = xor i32 %23932, %23931
  %23934 = xor i32 %23928, %23931
  %23935 = add i32 %23934, %23933
  %23936 = icmp eq i32 %23935, 2
  %23937 = zext i1 %23936 to i8
  %23938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %23937, i8* %23938, align 1
  store %struct.Memory* %loadMem_40cfe6, %struct.Memory** %MEMORY
  %loadMem_40cfe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23940 = getelementptr inbounds %struct.GPR, %struct.GPR* %23939, i32 0, i32 33
  %23941 = getelementptr inbounds %struct.Reg, %struct.Reg* %23940, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %23941 to i64*
  %23942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23943 = getelementptr inbounds %struct.GPR, %struct.GPR* %23942, i32 0, i32 5
  %23944 = getelementptr inbounds %struct.Reg, %struct.Reg* %23943, i32 0, i32 0
  %ECX.i397 = bitcast %union.anon* %23944 to i32*
  %23945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23946 = getelementptr inbounds %struct.GPR, %struct.GPR* %23945, i32 0, i32 15
  %23947 = getelementptr inbounds %struct.Reg, %struct.Reg* %23946, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %23947 to i64*
  %23948 = load i64, i64* %RBP.i398
  %23949 = sub i64 %23948, 384
  %23950 = load i32, i32* %ECX.i397
  %23951 = zext i32 %23950 to i64
  %23952 = load i64, i64* %PC.i396
  %23953 = add i64 %23952, 6
  store i64 %23953, i64* %PC.i396
  %23954 = inttoptr i64 %23949 to i32*
  store i32 %23950, i32* %23954
  store %struct.Memory* %loadMem_40cfe8, %struct.Memory** %MEMORY
  %loadMem_40cfee = load %struct.Memory*, %struct.Memory** %MEMORY
  %23955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23956 = getelementptr inbounds %struct.GPR, %struct.GPR* %23955, i32 0, i32 33
  %23957 = getelementptr inbounds %struct.Reg, %struct.Reg* %23956, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %23957 to i64*
  %23958 = load i64, i64* %PC.i395
  %23959 = add i64 %23958, 19
  %23960 = load i64, i64* %PC.i395
  %23961 = add i64 %23960, 6
  %23962 = load i64, i64* %PC.i395
  %23963 = add i64 %23962, 6
  store i64 %23963, i64* %PC.i395
  %23964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %23965 = load i8, i8* %23964, align 1
  %23966 = icmp ne i8 %23965, 0
  %23967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23968 = load i8, i8* %23967, align 1
  %23969 = icmp ne i8 %23968, 0
  %23970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %23971 = load i8, i8* %23970, align 1
  %23972 = icmp ne i8 %23971, 0
  %23973 = xor i1 %23969, %23972
  %23974 = or i1 %23966, %23973
  %23975 = zext i1 %23974 to i8
  store i8 %23975, i8* %BRANCH_TAKEN, align 1
  %23976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %23977 = select i1 %23974, i64 %23959, i64 %23961
  store i64 %23977, i64* %23976, align 8
  store %struct.Memory* %loadMem_40cfee, %struct.Memory** %MEMORY
  %loadBr_40cfee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cfee = icmp eq i8 %loadBr_40cfee, 1
  br i1 %cmpBr_40cfee, label %block_.L_40d001, label %block_40cff4

block_40cff4:                                     ; preds = %block_40cfb5
  %loadMem_40cff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %23978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23979 = getelementptr inbounds %struct.GPR, %struct.GPR* %23978, i32 0, i32 33
  %23980 = getelementptr inbounds %struct.Reg, %struct.Reg* %23979, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %23980 to i64*
  %23981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23982 = getelementptr inbounds %struct.GPR, %struct.GPR* %23981, i32 0, i32 1
  %23983 = getelementptr inbounds %struct.Reg, %struct.Reg* %23982, i32 0, i32 0
  %EAX.i393 = bitcast %union.anon* %23983 to i32*
  %23984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23985 = getelementptr inbounds %struct.GPR, %struct.GPR* %23984, i32 0, i32 1
  %23986 = getelementptr inbounds %struct.Reg, %struct.Reg* %23985, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %23986 to i64*
  %23987 = load i64, i64* %RAX.i394
  %23988 = load i32, i32* %EAX.i393
  %23989 = zext i32 %23988 to i64
  %23990 = load i64, i64* %PC.i392
  %23991 = add i64 %23990, 2
  store i64 %23991, i64* %PC.i392
  %23992 = xor i64 %23989, %23987
  %23993 = trunc i64 %23992 to i32
  %23994 = and i64 %23992, 4294967295
  store i64 %23994, i64* %RAX.i394, align 8
  %23995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %23995, align 1
  %23996 = and i32 %23993, 255
  %23997 = call i32 @llvm.ctpop.i32(i32 %23996)
  %23998 = trunc i32 %23997 to i8
  %23999 = and i8 %23998, 1
  %24000 = xor i8 %23999, 1
  %24001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24000, i8* %24001, align 1
  %24002 = icmp eq i32 %23993, 0
  %24003 = zext i1 %24002 to i8
  %24004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24003, i8* %24004, align 1
  %24005 = lshr i32 %23993, 31
  %24006 = trunc i32 %24005 to i8
  %24007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24006, i8* %24007, align 1
  %24008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24008, align 1
  %24009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24009, align 1
  store %struct.Memory* %loadMem_40cff4, %struct.Memory** %MEMORY
  %loadMem_40cff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24011 = getelementptr inbounds %struct.GPR, %struct.GPR* %24010, i32 0, i32 33
  %24012 = getelementptr inbounds %struct.Reg, %struct.Reg* %24011, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %24012 to i64*
  %24013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24014 = getelementptr inbounds %struct.GPR, %struct.GPR* %24013, i32 0, i32 1
  %24015 = getelementptr inbounds %struct.Reg, %struct.Reg* %24014, i32 0, i32 0
  %EAX.i390 = bitcast %union.anon* %24015 to i32*
  %24016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24017 = getelementptr inbounds %struct.GPR, %struct.GPR* %24016, i32 0, i32 15
  %24018 = getelementptr inbounds %struct.Reg, %struct.Reg* %24017, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %24018 to i64*
  %24019 = load i64, i64* %RBP.i391
  %24020 = sub i64 %24019, 388
  %24021 = load i32, i32* %EAX.i390
  %24022 = zext i32 %24021 to i64
  %24023 = load i64, i64* %PC.i389
  %24024 = add i64 %24023, 6
  store i64 %24024, i64* %PC.i389
  %24025 = inttoptr i64 %24020 to i32*
  store i32 %24021, i32* %24025
  store %struct.Memory* %loadMem_40cff6, %struct.Memory** %MEMORY
  %loadMem_40cffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %24026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24027 = getelementptr inbounds %struct.GPR, %struct.GPR* %24026, i32 0, i32 33
  %24028 = getelementptr inbounds %struct.Reg, %struct.Reg* %24027, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %24028 to i64*
  %24029 = load i64, i64* %PC.i388
  %24030 = add i64 %24029, 33
  %24031 = load i64, i64* %PC.i388
  %24032 = add i64 %24031, 5
  store i64 %24032, i64* %PC.i388
  %24033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24030, i64* %24033, align 8
  store %struct.Memory* %loadMem_40cffc, %struct.Memory** %MEMORY
  br label %block_.L_40d01d

block_.L_40d001:                                  ; preds = %block_40cfb5
  %loadMem_40d001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24035 = getelementptr inbounds %struct.GPR, %struct.GPR* %24034, i32 0, i32 33
  %24036 = getelementptr inbounds %struct.Reg, %struct.Reg* %24035, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %24036 to i64*
  %24037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24038 = getelementptr inbounds %struct.GPR, %struct.GPR* %24037, i32 0, i32 1
  %24039 = getelementptr inbounds %struct.Reg, %struct.Reg* %24038, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %24039 to i64*
  %24040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24041 = getelementptr inbounds %struct.GPR, %struct.GPR* %24040, i32 0, i32 15
  %24042 = getelementptr inbounds %struct.Reg, %struct.Reg* %24041, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %24042 to i64*
  %24043 = load i64, i64* %RBP.i387
  %24044 = sub i64 %24043, 24
  %24045 = load i64, i64* %PC.i385
  %24046 = add i64 %24045, 4
  store i64 %24046, i64* %PC.i385
  %24047 = inttoptr i64 %24044 to i32*
  %24048 = load i32, i32* %24047
  %24049 = sext i32 %24048 to i64
  store i64 %24049, i64* %RAX.i386, align 8
  store %struct.Memory* %loadMem_40d001, %struct.Memory** %MEMORY
  %loadMem_40d005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24051 = getelementptr inbounds %struct.GPR, %struct.GPR* %24050, i32 0, i32 33
  %24052 = getelementptr inbounds %struct.Reg, %struct.Reg* %24051, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %24052 to i64*
  %24053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24054 = getelementptr inbounds %struct.GPR, %struct.GPR* %24053, i32 0, i32 1
  %24055 = getelementptr inbounds %struct.Reg, %struct.Reg* %24054, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %24055 to i64*
  %24056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24057 = getelementptr inbounds %struct.GPR, %struct.GPR* %24056, i32 0, i32 5
  %24058 = getelementptr inbounds %struct.Reg, %struct.Reg* %24057, i32 0, i32 0
  %RCX.i383 = bitcast %union.anon* %24058 to i64*
  %24059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24060 = getelementptr inbounds %struct.GPR, %struct.GPR* %24059, i32 0, i32 15
  %24061 = getelementptr inbounds %struct.Reg, %struct.Reg* %24060, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %24061 to i64*
  %24062 = load i64, i64* %RBP.i384
  %24063 = load i64, i64* %RAX.i382
  %24064 = mul i64 %24063, 4
  %24065 = add i64 %24062, -80
  %24066 = add i64 %24065, %24064
  %24067 = load i64, i64* %PC.i381
  %24068 = add i64 %24067, 4
  store i64 %24068, i64* %PC.i381
  %24069 = inttoptr i64 %24066 to i32*
  %24070 = load i32, i32* %24069
  %24071 = zext i32 %24070 to i64
  store i64 %24071, i64* %RCX.i383, align 8
  store %struct.Memory* %loadMem_40d005, %struct.Memory** %MEMORY
  %loadMem_40d009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24073 = getelementptr inbounds %struct.GPR, %struct.GPR* %24072, i32 0, i32 33
  %24074 = getelementptr inbounds %struct.Reg, %struct.Reg* %24073, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %24074 to i64*
  %24075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24076 = getelementptr inbounds %struct.GPR, %struct.GPR* %24075, i32 0, i32 1
  %24077 = getelementptr inbounds %struct.Reg, %struct.Reg* %24076, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %24077 to i64*
  %24078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24079 = getelementptr inbounds %struct.GPR, %struct.GPR* %24078, i32 0, i32 15
  %24080 = getelementptr inbounds %struct.Reg, %struct.Reg* %24079, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %24080 to i64*
  %24081 = load i64, i64* %RBP.i380
  %24082 = sub i64 %24081, 32
  %24083 = load i64, i64* %PC.i378
  %24084 = add i64 %24083, 4
  store i64 %24084, i64* %PC.i378
  %24085 = inttoptr i64 %24082 to i32*
  %24086 = load i32, i32* %24085
  %24087 = sext i32 %24086 to i64
  store i64 %24087, i64* %RAX.i379, align 8
  store %struct.Memory* %loadMem_40d009, %struct.Memory** %MEMORY
  %loadMem_40d00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24089 = getelementptr inbounds %struct.GPR, %struct.GPR* %24088, i32 0, i32 33
  %24090 = getelementptr inbounds %struct.Reg, %struct.Reg* %24089, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %24090 to i64*
  %24091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24092 = getelementptr inbounds %struct.GPR, %struct.GPR* %24091, i32 0, i32 1
  %24093 = getelementptr inbounds %struct.Reg, %struct.Reg* %24092, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %24093 to i64*
  %24094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24095 = getelementptr inbounds %struct.GPR, %struct.GPR* %24094, i32 0, i32 5
  %24096 = getelementptr inbounds %struct.Reg, %struct.Reg* %24095, i32 0, i32 0
  %RCX.i376 = bitcast %union.anon* %24096 to i64*
  %24097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24098 = getelementptr inbounds %struct.GPR, %struct.GPR* %24097, i32 0, i32 15
  %24099 = getelementptr inbounds %struct.Reg, %struct.Reg* %24098, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %24099 to i64*
  %24100 = load i64, i64* %RCX.i376
  %24101 = load i64, i64* %RBP.i377
  %24102 = load i64, i64* %RAX.i375
  %24103 = mul i64 %24102, 4
  %24104 = add i64 %24101, -80
  %24105 = add i64 %24104, %24103
  %24106 = load i64, i64* %PC.i374
  %24107 = add i64 %24106, 4
  store i64 %24107, i64* %PC.i374
  %24108 = trunc i64 %24100 to i32
  %24109 = inttoptr i64 %24105 to i32*
  %24110 = load i32, i32* %24109
  %24111 = add i32 %24110, %24108
  %24112 = zext i32 %24111 to i64
  store i64 %24112, i64* %RCX.i376, align 8
  %24113 = icmp ult i32 %24111, %24108
  %24114 = icmp ult i32 %24111, %24110
  %24115 = or i1 %24113, %24114
  %24116 = zext i1 %24115 to i8
  %24117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24116, i8* %24117, align 1
  %24118 = and i32 %24111, 255
  %24119 = call i32 @llvm.ctpop.i32(i32 %24118)
  %24120 = trunc i32 %24119 to i8
  %24121 = and i8 %24120, 1
  %24122 = xor i8 %24121, 1
  %24123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24122, i8* %24123, align 1
  %24124 = xor i32 %24110, %24108
  %24125 = xor i32 %24124, %24111
  %24126 = lshr i32 %24125, 4
  %24127 = trunc i32 %24126 to i8
  %24128 = and i8 %24127, 1
  %24129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24128, i8* %24129, align 1
  %24130 = icmp eq i32 %24111, 0
  %24131 = zext i1 %24130 to i8
  %24132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24131, i8* %24132, align 1
  %24133 = lshr i32 %24111, 31
  %24134 = trunc i32 %24133 to i8
  %24135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24134, i8* %24135, align 1
  %24136 = lshr i32 %24108, 31
  %24137 = lshr i32 %24110, 31
  %24138 = xor i32 %24133, %24136
  %24139 = xor i32 %24133, %24137
  %24140 = add i32 %24138, %24139
  %24141 = icmp eq i32 %24140, 2
  %24142 = zext i1 %24141 to i8
  %24143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24142, i8* %24143, align 1
  store %struct.Memory* %loadMem_40d00d, %struct.Memory** %MEMORY
  %loadMem_40d011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24145 = getelementptr inbounds %struct.GPR, %struct.GPR* %24144, i32 0, i32 33
  %24146 = getelementptr inbounds %struct.Reg, %struct.Reg* %24145, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %24146 to i64*
  %24147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24148 = getelementptr inbounds %struct.GPR, %struct.GPR* %24147, i32 0, i32 5
  %24149 = getelementptr inbounds %struct.Reg, %struct.Reg* %24148, i32 0, i32 0
  %RCX.i373 = bitcast %union.anon* %24149 to i64*
  %24150 = load i64, i64* %RCX.i373
  %24151 = load i64, i64* %PC.i372
  %24152 = add i64 %24151, 3
  store i64 %24152, i64* %PC.i372
  %24153 = trunc i64 %24150 to i32
  %24154 = add i32 32, %24153
  %24155 = zext i32 %24154 to i64
  store i64 %24155, i64* %RCX.i373, align 8
  %24156 = icmp ult i32 %24154, %24153
  %24157 = icmp ult i32 %24154, 32
  %24158 = or i1 %24156, %24157
  %24159 = zext i1 %24158 to i8
  %24160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24159, i8* %24160, align 1
  %24161 = and i32 %24154, 255
  %24162 = call i32 @llvm.ctpop.i32(i32 %24161)
  %24163 = trunc i32 %24162 to i8
  %24164 = and i8 %24163, 1
  %24165 = xor i8 %24164, 1
  %24166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24165, i8* %24166, align 1
  %24167 = xor i64 32, %24150
  %24168 = trunc i64 %24167 to i32
  %24169 = xor i32 %24168, %24154
  %24170 = lshr i32 %24169, 4
  %24171 = trunc i32 %24170 to i8
  %24172 = and i8 %24171, 1
  %24173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24172, i8* %24173, align 1
  %24174 = icmp eq i32 %24154, 0
  %24175 = zext i1 %24174 to i8
  %24176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24175, i8* %24176, align 1
  %24177 = lshr i32 %24154, 31
  %24178 = trunc i32 %24177 to i8
  %24179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24178, i8* %24179, align 1
  %24180 = lshr i32 %24153, 31
  %24181 = xor i32 %24177, %24180
  %24182 = add i32 %24181, %24177
  %24183 = icmp eq i32 %24182, 2
  %24184 = zext i1 %24183 to i8
  %24185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24184, i8* %24185, align 1
  store %struct.Memory* %loadMem_40d011, %struct.Memory** %MEMORY
  %loadMem_40d014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24187 = getelementptr inbounds %struct.GPR, %struct.GPR* %24186, i32 0, i32 33
  %24188 = getelementptr inbounds %struct.Reg, %struct.Reg* %24187, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %24188 to i64*
  %24189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24190 = getelementptr inbounds %struct.GPR, %struct.GPR* %24189, i32 0, i32 5
  %24191 = getelementptr inbounds %struct.Reg, %struct.Reg* %24190, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %24191 to i64*
  %24192 = load i64, i64* %RCX.i371
  %24193 = load i64, i64* %PC.i370
  %24194 = add i64 %24193, 3
  store i64 %24194, i64* %PC.i370
  %24195 = shl i64 %24192, 32
  %24196 = ashr exact i64 %24195, 32
  %24197 = ashr i64 %24196, 5
  %24198 = lshr i64 %24197, 1
  %24199 = trunc i64 %24197 to i8
  %24200 = and i8 %24199, 1
  %24201 = trunc i64 %24198 to i32
  %24202 = and i64 %24198, 4294967295
  store i64 %24202, i64* %RCX.i371, align 8
  %24203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24200, i8* %24203, align 1
  %24204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24205 = and i32 %24201, 255
  %24206 = call i32 @llvm.ctpop.i32(i32 %24205)
  %24207 = trunc i32 %24206 to i8
  %24208 = and i8 %24207, 1
  %24209 = xor i8 %24208, 1
  store i8 %24209, i8* %24204, align 1
  %24210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24210, align 1
  %24211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24212 = icmp eq i32 %24201, 0
  %24213 = zext i1 %24212 to i8
  store i8 %24213, i8* %24211, align 1
  %24214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24215 = lshr i32 %24201, 31
  %24216 = trunc i32 %24215 to i8
  store i8 %24216, i8* %24214, align 1
  %24217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24217, align 1
  store %struct.Memory* %loadMem_40d014, %struct.Memory** %MEMORY
  %loadMem_40d017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24219 = getelementptr inbounds %struct.GPR, %struct.GPR* %24218, i32 0, i32 33
  %24220 = getelementptr inbounds %struct.Reg, %struct.Reg* %24219, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %24220 to i64*
  %24221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24222 = getelementptr inbounds %struct.GPR, %struct.GPR* %24221, i32 0, i32 5
  %24223 = getelementptr inbounds %struct.Reg, %struct.Reg* %24222, i32 0, i32 0
  %ECX.i368 = bitcast %union.anon* %24223 to i32*
  %24224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24225 = getelementptr inbounds %struct.GPR, %struct.GPR* %24224, i32 0, i32 15
  %24226 = getelementptr inbounds %struct.Reg, %struct.Reg* %24225, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %24226 to i64*
  %24227 = load i64, i64* %RBP.i369
  %24228 = sub i64 %24227, 388
  %24229 = load i32, i32* %ECX.i368
  %24230 = zext i32 %24229 to i64
  %24231 = load i64, i64* %PC.i367
  %24232 = add i64 %24231, 6
  store i64 %24232, i64* %PC.i367
  %24233 = inttoptr i64 %24228 to i32*
  store i32 %24229, i32* %24233
  store %struct.Memory* %loadMem_40d017, %struct.Memory** %MEMORY
  br label %block_.L_40d01d

block_.L_40d01d:                                  ; preds = %block_.L_40d001, %block_40cff4
  %loadMem_40d01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24235 = getelementptr inbounds %struct.GPR, %struct.GPR* %24234, i32 0, i32 33
  %24236 = getelementptr inbounds %struct.Reg, %struct.Reg* %24235, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %24236 to i64*
  %24237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24238 = getelementptr inbounds %struct.GPR, %struct.GPR* %24237, i32 0, i32 1
  %24239 = getelementptr inbounds %struct.Reg, %struct.Reg* %24238, i32 0, i32 0
  %RAX.i365 = bitcast %union.anon* %24239 to i64*
  %24240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24241 = getelementptr inbounds %struct.GPR, %struct.GPR* %24240, i32 0, i32 15
  %24242 = getelementptr inbounds %struct.Reg, %struct.Reg* %24241, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %24242 to i64*
  %24243 = load i64, i64* %RBP.i366
  %24244 = sub i64 %24243, 388
  %24245 = load i64, i64* %PC.i364
  %24246 = add i64 %24245, 6
  store i64 %24246, i64* %PC.i364
  %24247 = inttoptr i64 %24244 to i32*
  %24248 = load i32, i32* %24247
  %24249 = zext i32 %24248 to i64
  store i64 %24249, i64* %RAX.i365, align 8
  store %struct.Memory* %loadMem_40d01d, %struct.Memory** %MEMORY
  %loadMem_40d023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24251 = getelementptr inbounds %struct.GPR, %struct.GPR* %24250, i32 0, i32 33
  %24252 = getelementptr inbounds %struct.Reg, %struct.Reg* %24251, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %24252 to i64*
  %24253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24254 = getelementptr inbounds %struct.GPR, %struct.GPR* %24253, i32 0, i32 5
  %24255 = getelementptr inbounds %struct.Reg, %struct.Reg* %24254, i32 0, i32 0
  %RCX.i362 = bitcast %union.anon* %24255 to i64*
  %24256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24257 = getelementptr inbounds %struct.GPR, %struct.GPR* %24256, i32 0, i32 15
  %24258 = getelementptr inbounds %struct.Reg, %struct.Reg* %24257, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %24258 to i64*
  %24259 = load i64, i64* %RBP.i363
  %24260 = sub i64 %24259, 384
  %24261 = load i64, i64* %PC.i361
  %24262 = add i64 %24261, 6
  store i64 %24262, i64* %PC.i361
  %24263 = inttoptr i64 %24260 to i32*
  %24264 = load i32, i32* %24263
  %24265 = zext i32 %24264 to i64
  store i64 %24265, i64* %RCX.i362, align 8
  store %struct.Memory* %loadMem_40d023, %struct.Memory** %MEMORY
  %loadMem_40d029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24267 = getelementptr inbounds %struct.GPR, %struct.GPR* %24266, i32 0, i32 33
  %24268 = getelementptr inbounds %struct.Reg, %struct.Reg* %24267, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %24268 to i64*
  %24269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24270 = getelementptr inbounds %struct.GPR, %struct.GPR* %24269, i32 0, i32 1
  %24271 = getelementptr inbounds %struct.Reg, %struct.Reg* %24270, i32 0, i32 0
  %EAX.i359 = bitcast %union.anon* %24271 to i32*
  %24272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24273 = getelementptr inbounds %struct.GPR, %struct.GPR* %24272, i32 0, i32 5
  %24274 = getelementptr inbounds %struct.Reg, %struct.Reg* %24273, i32 0, i32 0
  %ECX.i360 = bitcast %union.anon* %24274 to i32*
  %24275 = load i32, i32* %ECX.i360
  %24276 = zext i32 %24275 to i64
  %24277 = load i32, i32* %EAX.i359
  %24278 = zext i32 %24277 to i64
  %24279 = load i64, i64* %PC.i358
  %24280 = add i64 %24279, 2
  store i64 %24280, i64* %PC.i358
  %24281 = sub i32 %24275, %24277
  %24282 = icmp ult i32 %24275, %24277
  %24283 = zext i1 %24282 to i8
  %24284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24283, i8* %24284, align 1
  %24285 = and i32 %24281, 255
  %24286 = call i32 @llvm.ctpop.i32(i32 %24285)
  %24287 = trunc i32 %24286 to i8
  %24288 = and i8 %24287, 1
  %24289 = xor i8 %24288, 1
  %24290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24289, i8* %24290, align 1
  %24291 = xor i64 %24278, %24276
  %24292 = trunc i64 %24291 to i32
  %24293 = xor i32 %24292, %24281
  %24294 = lshr i32 %24293, 4
  %24295 = trunc i32 %24294 to i8
  %24296 = and i8 %24295, 1
  %24297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24296, i8* %24297, align 1
  %24298 = icmp eq i32 %24281, 0
  %24299 = zext i1 %24298 to i8
  %24300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24299, i8* %24300, align 1
  %24301 = lshr i32 %24281, 31
  %24302 = trunc i32 %24301 to i8
  %24303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24302, i8* %24303, align 1
  %24304 = lshr i32 %24275, 31
  %24305 = lshr i32 %24277, 31
  %24306 = xor i32 %24305, %24304
  %24307 = xor i32 %24301, %24304
  %24308 = add i32 %24307, %24306
  %24309 = icmp eq i32 %24308, 2
  %24310 = zext i1 %24309 to i8
  %24311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24310, i8* %24311, align 1
  store %struct.Memory* %loadMem_40d029, %struct.Memory** %MEMORY
  %loadMem_40d02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %24312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24313 = getelementptr inbounds %struct.GPR, %struct.GPR* %24312, i32 0, i32 33
  %24314 = getelementptr inbounds %struct.Reg, %struct.Reg* %24313, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %24314 to i64*
  %24315 = load i64, i64* %PC.i357
  %24316 = add i64 %24315, 31
  %24317 = load i64, i64* %PC.i357
  %24318 = add i64 %24317, 6
  %24319 = load i64, i64* %PC.i357
  %24320 = add i64 %24319, 6
  store i64 %24320, i64* %PC.i357
  %24321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24322 = load i8, i8* %24321, align 1
  %24323 = icmp ne i8 %24322, 0
  %24324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %24325 = load i8, i8* %24324, align 1
  %24326 = icmp ne i8 %24325, 0
  %24327 = xor i1 %24323, %24326
  %24328 = xor i1 %24327, true
  %24329 = zext i1 %24328 to i8
  store i8 %24329, i8* %BRANCH_TAKEN, align 1
  %24330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24331 = select i1 %24327, i64 %24318, i64 %24316
  store i64 %24331, i64* %24330, align 8
  store %struct.Memory* %loadMem_40d02b, %struct.Memory** %MEMORY
  %loadBr_40d02b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d02b = icmp eq i8 %loadBr_40d02b, 1
  br i1 %cmpBr_40d02b, label %block_.L_40d04a, label %block_40d031

block_40d031:                                     ; preds = %block_.L_40d01d
  %loadMem_40d031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24333 = getelementptr inbounds %struct.GPR, %struct.GPR* %24332, i32 0, i32 33
  %24334 = getelementptr inbounds %struct.Reg, %struct.Reg* %24333, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %24334 to i64*
  %24335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24336 = getelementptr inbounds %struct.GPR, %struct.GPR* %24335, i32 0, i32 1
  %24337 = getelementptr inbounds %struct.Reg, %struct.Reg* %24336, i32 0, i32 0
  %RAX.i356 = bitcast %union.anon* %24337 to i64*
  %24338 = load i64, i64* %PC.i355
  %24339 = add i64 %24338, 8
  store i64 %24339, i64* %PC.i355
  %24340 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %24340, i64* %RAX.i356, align 8
  store %struct.Memory* %loadMem_40d031, %struct.Memory** %MEMORY
  %loadMem_40d039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24342 = getelementptr inbounds %struct.GPR, %struct.GPR* %24341, i32 0, i32 33
  %24343 = getelementptr inbounds %struct.Reg, %struct.Reg* %24342, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %24343 to i64*
  %24344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24345 = getelementptr inbounds %struct.GPR, %struct.GPR* %24344, i32 0, i32 1
  %24346 = getelementptr inbounds %struct.Reg, %struct.Reg* %24345, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %24346 to i64*
  %24347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24348 = getelementptr inbounds %struct.GPR, %struct.GPR* %24347, i32 0, i32 5
  %24349 = getelementptr inbounds %struct.Reg, %struct.Reg* %24348, i32 0, i32 0
  %RCX.i354 = bitcast %union.anon* %24349 to i64*
  %24350 = load i64, i64* %RAX.i353
  %24351 = add i64 %24350, 72684
  %24352 = load i64, i64* %PC.i352
  %24353 = add i64 %24352, 6
  store i64 %24353, i64* %PC.i352
  %24354 = inttoptr i64 %24351 to i32*
  %24355 = load i32, i32* %24354
  %24356 = zext i32 %24355 to i64
  store i64 %24356, i64* %RCX.i354, align 8
  store %struct.Memory* %loadMem_40d039, %struct.Memory** %MEMORY
  %loadMem_40d03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24358 = getelementptr inbounds %struct.GPR, %struct.GPR* %24357, i32 0, i32 33
  %24359 = getelementptr inbounds %struct.Reg, %struct.Reg* %24358, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %24359 to i64*
  %24360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24361 = getelementptr inbounds %struct.GPR, %struct.GPR* %24360, i32 0, i32 5
  %24362 = getelementptr inbounds %struct.Reg, %struct.Reg* %24361, i32 0, i32 0
  %ECX.i350 = bitcast %union.anon* %24362 to i32*
  %24363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24364 = getelementptr inbounds %struct.GPR, %struct.GPR* %24363, i32 0, i32 15
  %24365 = getelementptr inbounds %struct.Reg, %struct.Reg* %24364, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %24365 to i64*
  %24366 = load i64, i64* %RBP.i351
  %24367 = sub i64 %24366, 392
  %24368 = load i32, i32* %ECX.i350
  %24369 = zext i32 %24368 to i64
  %24370 = load i64, i64* %PC.i349
  %24371 = add i64 %24370, 6
  store i64 %24371, i64* %PC.i349
  %24372 = inttoptr i64 %24367 to i32*
  store i32 %24368, i32* %24372
  store %struct.Memory* %loadMem_40d03f, %struct.Memory** %MEMORY
  %loadMem_40d045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24374 = getelementptr inbounds %struct.GPR, %struct.GPR* %24373, i32 0, i32 33
  %24375 = getelementptr inbounds %struct.Reg, %struct.Reg* %24374, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %24375 to i64*
  %24376 = load i64, i64* %PC.i348
  %24377 = add i64 %24376, 90
  %24378 = load i64, i64* %PC.i348
  %24379 = add i64 %24378, 5
  store i64 %24379, i64* %PC.i348
  %24380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24377, i64* %24380, align 8
  store %struct.Memory* %loadMem_40d045, %struct.Memory** %MEMORY
  br label %block_.L_40d09f

block_.L_40d04a:                                  ; preds = %block_.L_40d01d
  %loadMem_40d04a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24382 = getelementptr inbounds %struct.GPR, %struct.GPR* %24381, i32 0, i32 33
  %24383 = getelementptr inbounds %struct.Reg, %struct.Reg* %24382, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %24383 to i64*
  %24384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24385 = getelementptr inbounds %struct.GPR, %struct.GPR* %24384, i32 0, i32 1
  %24386 = getelementptr inbounds %struct.Reg, %struct.Reg* %24385, i32 0, i32 0
  %EAX.i346 = bitcast %union.anon* %24386 to i32*
  %24387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24388 = getelementptr inbounds %struct.GPR, %struct.GPR* %24387, i32 0, i32 1
  %24389 = getelementptr inbounds %struct.Reg, %struct.Reg* %24388, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %24389 to i64*
  %24390 = load i64, i64* %RAX.i347
  %24391 = load i32, i32* %EAX.i346
  %24392 = zext i32 %24391 to i64
  %24393 = load i64, i64* %PC.i345
  %24394 = add i64 %24393, 2
  store i64 %24394, i64* %PC.i345
  %24395 = xor i64 %24392, %24390
  %24396 = trunc i64 %24395 to i32
  %24397 = and i64 %24395, 4294967295
  store i64 %24397, i64* %RAX.i347, align 8
  %24398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24398, align 1
  %24399 = and i32 %24396, 255
  %24400 = call i32 @llvm.ctpop.i32(i32 %24399)
  %24401 = trunc i32 %24400 to i8
  %24402 = and i8 %24401, 1
  %24403 = xor i8 %24402, 1
  %24404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24403, i8* %24404, align 1
  %24405 = icmp eq i32 %24396, 0
  %24406 = zext i1 %24405 to i8
  %24407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24406, i8* %24407, align 1
  %24408 = lshr i32 %24396, 31
  %24409 = trunc i32 %24408 to i8
  %24410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24409, i8* %24410, align 1
  %24411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24411, align 1
  %24412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24412, align 1
  store %struct.Memory* %loadMem_40d04a, %struct.Memory** %MEMORY
  %loadMem_40d04c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24414 = getelementptr inbounds %struct.GPR, %struct.GPR* %24413, i32 0, i32 33
  %24415 = getelementptr inbounds %struct.Reg, %struct.Reg* %24414, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %24415 to i64*
  %24416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24417 = getelementptr inbounds %struct.GPR, %struct.GPR* %24416, i32 0, i32 5
  %24418 = getelementptr inbounds %struct.Reg, %struct.Reg* %24417, i32 0, i32 0
  %RCX.i343 = bitcast %union.anon* %24418 to i64*
  %24419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24420 = getelementptr inbounds %struct.GPR, %struct.GPR* %24419, i32 0, i32 15
  %24421 = getelementptr inbounds %struct.Reg, %struct.Reg* %24420, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %24421 to i64*
  %24422 = load i64, i64* %RBP.i344
  %24423 = sub i64 %24422, 24
  %24424 = load i64, i64* %PC.i342
  %24425 = add i64 %24424, 4
  store i64 %24425, i64* %PC.i342
  %24426 = inttoptr i64 %24423 to i32*
  %24427 = load i32, i32* %24426
  %24428 = sext i32 %24427 to i64
  store i64 %24428, i64* %RCX.i343, align 8
  store %struct.Memory* %loadMem_40d04c, %struct.Memory** %MEMORY
  %loadMem_40d050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24430 = getelementptr inbounds %struct.GPR, %struct.GPR* %24429, i32 0, i32 33
  %24431 = getelementptr inbounds %struct.Reg, %struct.Reg* %24430, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %24431 to i64*
  %24432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24433 = getelementptr inbounds %struct.GPR, %struct.GPR* %24432, i32 0, i32 5
  %24434 = getelementptr inbounds %struct.Reg, %struct.Reg* %24433, i32 0, i32 0
  %RCX.i339 = bitcast %union.anon* %24434 to i64*
  %24435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24436 = getelementptr inbounds %struct.GPR, %struct.GPR* %24435, i32 0, i32 7
  %24437 = getelementptr inbounds %struct.Reg, %struct.Reg* %24436, i32 0, i32 0
  %RDX.i340 = bitcast %union.anon* %24437 to i64*
  %24438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24439 = getelementptr inbounds %struct.GPR, %struct.GPR* %24438, i32 0, i32 15
  %24440 = getelementptr inbounds %struct.Reg, %struct.Reg* %24439, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %24440 to i64*
  %24441 = load i64, i64* %RBP.i341
  %24442 = load i64, i64* %RCX.i339
  %24443 = mul i64 %24442, 4
  %24444 = add i64 %24441, -80
  %24445 = add i64 %24444, %24443
  %24446 = load i64, i64* %PC.i338
  %24447 = add i64 %24446, 4
  store i64 %24447, i64* %PC.i338
  %24448 = inttoptr i64 %24445 to i32*
  %24449 = load i32, i32* %24448
  %24450 = zext i32 %24449 to i64
  store i64 %24450, i64* %RDX.i340, align 8
  store %struct.Memory* %loadMem_40d050, %struct.Memory** %MEMORY
  %loadMem_40d054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24452 = getelementptr inbounds %struct.GPR, %struct.GPR* %24451, i32 0, i32 33
  %24453 = getelementptr inbounds %struct.Reg, %struct.Reg* %24452, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %24453 to i64*
  %24454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24455 = getelementptr inbounds %struct.GPR, %struct.GPR* %24454, i32 0, i32 5
  %24456 = getelementptr inbounds %struct.Reg, %struct.Reg* %24455, i32 0, i32 0
  %RCX.i336 = bitcast %union.anon* %24456 to i64*
  %24457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24458 = getelementptr inbounds %struct.GPR, %struct.GPR* %24457, i32 0, i32 15
  %24459 = getelementptr inbounds %struct.Reg, %struct.Reg* %24458, i32 0, i32 0
  %RBP.i337 = bitcast %union.anon* %24459 to i64*
  %24460 = load i64, i64* %RBP.i337
  %24461 = sub i64 %24460, 32
  %24462 = load i64, i64* %PC.i335
  %24463 = add i64 %24462, 4
  store i64 %24463, i64* %PC.i335
  %24464 = inttoptr i64 %24461 to i32*
  %24465 = load i32, i32* %24464
  %24466 = sext i32 %24465 to i64
  store i64 %24466, i64* %RCX.i336, align 8
  store %struct.Memory* %loadMem_40d054, %struct.Memory** %MEMORY
  %loadMem_40d058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24468 = getelementptr inbounds %struct.GPR, %struct.GPR* %24467, i32 0, i32 33
  %24469 = getelementptr inbounds %struct.Reg, %struct.Reg* %24468, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %24469 to i64*
  %24470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24471 = getelementptr inbounds %struct.GPR, %struct.GPR* %24470, i32 0, i32 5
  %24472 = getelementptr inbounds %struct.Reg, %struct.Reg* %24471, i32 0, i32 0
  %RCX.i332 = bitcast %union.anon* %24472 to i64*
  %24473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24474 = getelementptr inbounds %struct.GPR, %struct.GPR* %24473, i32 0, i32 7
  %24475 = getelementptr inbounds %struct.Reg, %struct.Reg* %24474, i32 0, i32 0
  %RDX.i333 = bitcast %union.anon* %24475 to i64*
  %24476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24477 = getelementptr inbounds %struct.GPR, %struct.GPR* %24476, i32 0, i32 15
  %24478 = getelementptr inbounds %struct.Reg, %struct.Reg* %24477, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %24478 to i64*
  %24479 = load i64, i64* %RDX.i333
  %24480 = load i64, i64* %RBP.i334
  %24481 = load i64, i64* %RCX.i332
  %24482 = mul i64 %24481, 4
  %24483 = add i64 %24480, -80
  %24484 = add i64 %24483, %24482
  %24485 = load i64, i64* %PC.i331
  %24486 = add i64 %24485, 4
  store i64 %24486, i64* %PC.i331
  %24487 = trunc i64 %24479 to i32
  %24488 = inttoptr i64 %24484 to i32*
  %24489 = load i32, i32* %24488
  %24490 = add i32 %24489, %24487
  %24491 = zext i32 %24490 to i64
  store i64 %24491, i64* %RDX.i333, align 8
  %24492 = icmp ult i32 %24490, %24487
  %24493 = icmp ult i32 %24490, %24489
  %24494 = or i1 %24492, %24493
  %24495 = zext i1 %24494 to i8
  %24496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24495, i8* %24496, align 1
  %24497 = and i32 %24490, 255
  %24498 = call i32 @llvm.ctpop.i32(i32 %24497)
  %24499 = trunc i32 %24498 to i8
  %24500 = and i8 %24499, 1
  %24501 = xor i8 %24500, 1
  %24502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24501, i8* %24502, align 1
  %24503 = xor i32 %24489, %24487
  %24504 = xor i32 %24503, %24490
  %24505 = lshr i32 %24504, 4
  %24506 = trunc i32 %24505 to i8
  %24507 = and i8 %24506, 1
  %24508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24507, i8* %24508, align 1
  %24509 = icmp eq i32 %24490, 0
  %24510 = zext i1 %24509 to i8
  %24511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24510, i8* %24511, align 1
  %24512 = lshr i32 %24490, 31
  %24513 = trunc i32 %24512 to i8
  %24514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24513, i8* %24514, align 1
  %24515 = lshr i32 %24487, 31
  %24516 = lshr i32 %24489, 31
  %24517 = xor i32 %24512, %24515
  %24518 = xor i32 %24512, %24516
  %24519 = add i32 %24517, %24518
  %24520 = icmp eq i32 %24519, 2
  %24521 = zext i1 %24520 to i8
  %24522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24521, i8* %24522, align 1
  store %struct.Memory* %loadMem_40d058, %struct.Memory** %MEMORY
  %loadMem_40d05c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24524 = getelementptr inbounds %struct.GPR, %struct.GPR* %24523, i32 0, i32 33
  %24525 = getelementptr inbounds %struct.Reg, %struct.Reg* %24524, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %24525 to i64*
  %24526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24527 = getelementptr inbounds %struct.GPR, %struct.GPR* %24526, i32 0, i32 7
  %24528 = getelementptr inbounds %struct.Reg, %struct.Reg* %24527, i32 0, i32 0
  %RDX.i330 = bitcast %union.anon* %24528 to i64*
  %24529 = load i64, i64* %RDX.i330
  %24530 = load i64, i64* %PC.i329
  %24531 = add i64 %24530, 3
  store i64 %24531, i64* %PC.i329
  %24532 = trunc i64 %24529 to i32
  %24533 = add i32 32, %24532
  %24534 = zext i32 %24533 to i64
  store i64 %24534, i64* %RDX.i330, align 8
  %24535 = icmp ult i32 %24533, %24532
  %24536 = icmp ult i32 %24533, 32
  %24537 = or i1 %24535, %24536
  %24538 = zext i1 %24537 to i8
  %24539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24538, i8* %24539, align 1
  %24540 = and i32 %24533, 255
  %24541 = call i32 @llvm.ctpop.i32(i32 %24540)
  %24542 = trunc i32 %24541 to i8
  %24543 = and i8 %24542, 1
  %24544 = xor i8 %24543, 1
  %24545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24544, i8* %24545, align 1
  %24546 = xor i64 32, %24529
  %24547 = trunc i64 %24546 to i32
  %24548 = xor i32 %24547, %24533
  %24549 = lshr i32 %24548, 4
  %24550 = trunc i32 %24549 to i8
  %24551 = and i8 %24550, 1
  %24552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24551, i8* %24552, align 1
  %24553 = icmp eq i32 %24533, 0
  %24554 = zext i1 %24553 to i8
  %24555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24554, i8* %24555, align 1
  %24556 = lshr i32 %24533, 31
  %24557 = trunc i32 %24556 to i8
  %24558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24557, i8* %24558, align 1
  %24559 = lshr i32 %24532, 31
  %24560 = xor i32 %24556, %24559
  %24561 = add i32 %24560, %24556
  %24562 = icmp eq i32 %24561, 2
  %24563 = zext i1 %24562 to i8
  %24564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24563, i8* %24564, align 1
  store %struct.Memory* %loadMem_40d05c, %struct.Memory** %MEMORY
  %loadMem_40d05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24566 = getelementptr inbounds %struct.GPR, %struct.GPR* %24565, i32 0, i32 33
  %24567 = getelementptr inbounds %struct.Reg, %struct.Reg* %24566, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %24567 to i64*
  %24568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24569 = getelementptr inbounds %struct.GPR, %struct.GPR* %24568, i32 0, i32 7
  %24570 = getelementptr inbounds %struct.Reg, %struct.Reg* %24569, i32 0, i32 0
  %RDX.i328 = bitcast %union.anon* %24570 to i64*
  %24571 = load i64, i64* %RDX.i328
  %24572 = load i64, i64* %PC.i327
  %24573 = add i64 %24572, 3
  store i64 %24573, i64* %PC.i327
  %24574 = shl i64 %24571, 32
  %24575 = ashr exact i64 %24574, 32
  %24576 = ashr i64 %24575, 5
  %24577 = lshr i64 %24576, 1
  %24578 = trunc i64 %24576 to i8
  %24579 = and i8 %24578, 1
  %24580 = trunc i64 %24577 to i32
  %24581 = and i64 %24577, 4294967295
  store i64 %24581, i64* %RDX.i328, align 8
  %24582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24579, i8* %24582, align 1
  %24583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24584 = and i32 %24580, 255
  %24585 = call i32 @llvm.ctpop.i32(i32 %24584)
  %24586 = trunc i32 %24585 to i8
  %24587 = and i8 %24586, 1
  %24588 = xor i8 %24587, 1
  store i8 %24588, i8* %24583, align 1
  %24589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24589, align 1
  %24590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24591 = icmp eq i32 %24580, 0
  %24592 = zext i1 %24591 to i8
  store i8 %24592, i8* %24590, align 1
  %24593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24594 = lshr i32 %24580, 31
  %24595 = trunc i32 %24594 to i8
  store i8 %24595, i8* %24593, align 1
  %24596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24596, align 1
  store %struct.Memory* %loadMem_40d05f, %struct.Memory** %MEMORY
  %loadMem_40d062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24598 = getelementptr inbounds %struct.GPR, %struct.GPR* %24597, i32 0, i32 33
  %24599 = getelementptr inbounds %struct.Reg, %struct.Reg* %24598, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %24599 to i64*
  %24600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24601 = getelementptr inbounds %struct.GPR, %struct.GPR* %24600, i32 0, i32 1
  %24602 = getelementptr inbounds %struct.Reg, %struct.Reg* %24601, i32 0, i32 0
  %EAX.i325 = bitcast %union.anon* %24602 to i32*
  %24603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24604 = getelementptr inbounds %struct.GPR, %struct.GPR* %24603, i32 0, i32 7
  %24605 = getelementptr inbounds %struct.Reg, %struct.Reg* %24604, i32 0, i32 0
  %EDX.i326 = bitcast %union.anon* %24605 to i32*
  %24606 = load i32, i32* %EAX.i325
  %24607 = zext i32 %24606 to i64
  %24608 = load i32, i32* %EDX.i326
  %24609 = zext i32 %24608 to i64
  %24610 = load i64, i64* %PC.i324
  %24611 = add i64 %24610, 2
  store i64 %24611, i64* %PC.i324
  %24612 = sub i32 %24606, %24608
  %24613 = icmp ult i32 %24606, %24608
  %24614 = zext i1 %24613 to i8
  %24615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24614, i8* %24615, align 1
  %24616 = and i32 %24612, 255
  %24617 = call i32 @llvm.ctpop.i32(i32 %24616)
  %24618 = trunc i32 %24617 to i8
  %24619 = and i8 %24618, 1
  %24620 = xor i8 %24619, 1
  %24621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24620, i8* %24621, align 1
  %24622 = xor i64 %24609, %24607
  %24623 = trunc i64 %24622 to i32
  %24624 = xor i32 %24623, %24612
  %24625 = lshr i32 %24624, 4
  %24626 = trunc i32 %24625 to i8
  %24627 = and i8 %24626, 1
  %24628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24627, i8* %24628, align 1
  %24629 = icmp eq i32 %24612, 0
  %24630 = zext i1 %24629 to i8
  %24631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24630, i8* %24631, align 1
  %24632 = lshr i32 %24612, 31
  %24633 = trunc i32 %24632 to i8
  %24634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24633, i8* %24634, align 1
  %24635 = lshr i32 %24606, 31
  %24636 = lshr i32 %24608, 31
  %24637 = xor i32 %24636, %24635
  %24638 = xor i32 %24632, %24635
  %24639 = add i32 %24638, %24637
  %24640 = icmp eq i32 %24639, 2
  %24641 = zext i1 %24640 to i8
  %24642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24641, i8* %24642, align 1
  store %struct.Memory* %loadMem_40d062, %struct.Memory** %MEMORY
  %loadMem_40d064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24644 = getelementptr inbounds %struct.GPR, %struct.GPR* %24643, i32 0, i32 33
  %24645 = getelementptr inbounds %struct.Reg, %struct.Reg* %24644, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %24645 to i64*
  %24646 = load i64, i64* %PC.i323
  %24647 = add i64 %24646, 19
  %24648 = load i64, i64* %PC.i323
  %24649 = add i64 %24648, 6
  %24650 = load i64, i64* %PC.i323
  %24651 = add i64 %24650, 6
  store i64 %24651, i64* %PC.i323
  %24652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24653 = load i8, i8* %24652, align 1
  %24654 = icmp ne i8 %24653, 0
  %24655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24656 = load i8, i8* %24655, align 1
  %24657 = icmp ne i8 %24656, 0
  %24658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %24659 = load i8, i8* %24658, align 1
  %24660 = icmp ne i8 %24659, 0
  %24661 = xor i1 %24657, %24660
  %24662 = or i1 %24654, %24661
  %24663 = zext i1 %24662 to i8
  store i8 %24663, i8* %BRANCH_TAKEN, align 1
  %24664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %24665 = select i1 %24662, i64 %24647, i64 %24649
  store i64 %24665, i64* %24664, align 8
  store %struct.Memory* %loadMem_40d064, %struct.Memory** %MEMORY
  %loadBr_40d064 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d064 = icmp eq i8 %loadBr_40d064, 1
  br i1 %cmpBr_40d064, label %block_.L_40d077, label %block_40d06a

block_40d06a:                                     ; preds = %block_.L_40d04a
  %loadMem_40d06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24667 = getelementptr inbounds %struct.GPR, %struct.GPR* %24666, i32 0, i32 33
  %24668 = getelementptr inbounds %struct.Reg, %struct.Reg* %24667, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %24668 to i64*
  %24669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24670 = getelementptr inbounds %struct.GPR, %struct.GPR* %24669, i32 0, i32 1
  %24671 = getelementptr inbounds %struct.Reg, %struct.Reg* %24670, i32 0, i32 0
  %EAX.i321 = bitcast %union.anon* %24671 to i32*
  %24672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24673 = getelementptr inbounds %struct.GPR, %struct.GPR* %24672, i32 0, i32 1
  %24674 = getelementptr inbounds %struct.Reg, %struct.Reg* %24673, i32 0, i32 0
  %RAX.i322 = bitcast %union.anon* %24674 to i64*
  %24675 = load i64, i64* %RAX.i322
  %24676 = load i32, i32* %EAX.i321
  %24677 = zext i32 %24676 to i64
  %24678 = load i64, i64* %PC.i320
  %24679 = add i64 %24678, 2
  store i64 %24679, i64* %PC.i320
  %24680 = xor i64 %24677, %24675
  %24681 = trunc i64 %24680 to i32
  %24682 = and i64 %24680, 4294967295
  store i64 %24682, i64* %RAX.i322, align 8
  %24683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24683, align 1
  %24684 = and i32 %24681, 255
  %24685 = call i32 @llvm.ctpop.i32(i32 %24684)
  %24686 = trunc i32 %24685 to i8
  %24687 = and i8 %24686, 1
  %24688 = xor i8 %24687, 1
  %24689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24688, i8* %24689, align 1
  %24690 = icmp eq i32 %24681, 0
  %24691 = zext i1 %24690 to i8
  %24692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24691, i8* %24692, align 1
  %24693 = lshr i32 %24681, 31
  %24694 = trunc i32 %24693 to i8
  %24695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24694, i8* %24695, align 1
  %24696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24696, align 1
  %24697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24697, align 1
  store %struct.Memory* %loadMem_40d06a, %struct.Memory** %MEMORY
  %loadMem_40d06c = load %struct.Memory*, %struct.Memory** %MEMORY
  %24698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24699 = getelementptr inbounds %struct.GPR, %struct.GPR* %24698, i32 0, i32 33
  %24700 = getelementptr inbounds %struct.Reg, %struct.Reg* %24699, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %24700 to i64*
  %24701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24702 = getelementptr inbounds %struct.GPR, %struct.GPR* %24701, i32 0, i32 1
  %24703 = getelementptr inbounds %struct.Reg, %struct.Reg* %24702, i32 0, i32 0
  %EAX.i318 = bitcast %union.anon* %24703 to i32*
  %24704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24705 = getelementptr inbounds %struct.GPR, %struct.GPR* %24704, i32 0, i32 15
  %24706 = getelementptr inbounds %struct.Reg, %struct.Reg* %24705, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %24706 to i64*
  %24707 = load i64, i64* %RBP.i319
  %24708 = sub i64 %24707, 396
  %24709 = load i32, i32* %EAX.i318
  %24710 = zext i32 %24709 to i64
  %24711 = load i64, i64* %PC.i317
  %24712 = add i64 %24711, 6
  store i64 %24712, i64* %PC.i317
  %24713 = inttoptr i64 %24708 to i32*
  store i32 %24709, i32* %24713
  store %struct.Memory* %loadMem_40d06c, %struct.Memory** %MEMORY
  %loadMem_40d072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24715 = getelementptr inbounds %struct.GPR, %struct.GPR* %24714, i32 0, i32 33
  %24716 = getelementptr inbounds %struct.Reg, %struct.Reg* %24715, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %24716 to i64*
  %24717 = load i64, i64* %PC.i316
  %24718 = add i64 %24717, 33
  %24719 = load i64, i64* %PC.i316
  %24720 = add i64 %24719, 5
  store i64 %24720, i64* %PC.i316
  %24721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %24718, i64* %24721, align 8
  store %struct.Memory* %loadMem_40d072, %struct.Memory** %MEMORY
  br label %block_.L_40d093

block_.L_40d077:                                  ; preds = %block_.L_40d04a
  %loadMem_40d077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24723 = getelementptr inbounds %struct.GPR, %struct.GPR* %24722, i32 0, i32 33
  %24724 = getelementptr inbounds %struct.Reg, %struct.Reg* %24723, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %24724 to i64*
  %24725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24726 = getelementptr inbounds %struct.GPR, %struct.GPR* %24725, i32 0, i32 1
  %24727 = getelementptr inbounds %struct.Reg, %struct.Reg* %24726, i32 0, i32 0
  %RAX.i314 = bitcast %union.anon* %24727 to i64*
  %24728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24729 = getelementptr inbounds %struct.GPR, %struct.GPR* %24728, i32 0, i32 15
  %24730 = getelementptr inbounds %struct.Reg, %struct.Reg* %24729, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %24730 to i64*
  %24731 = load i64, i64* %RBP.i315
  %24732 = sub i64 %24731, 24
  %24733 = load i64, i64* %PC.i313
  %24734 = add i64 %24733, 4
  store i64 %24734, i64* %PC.i313
  %24735 = inttoptr i64 %24732 to i32*
  %24736 = load i32, i32* %24735
  %24737 = sext i32 %24736 to i64
  store i64 %24737, i64* %RAX.i314, align 8
  store %struct.Memory* %loadMem_40d077, %struct.Memory** %MEMORY
  %loadMem_40d07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %24738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24739 = getelementptr inbounds %struct.GPR, %struct.GPR* %24738, i32 0, i32 33
  %24740 = getelementptr inbounds %struct.Reg, %struct.Reg* %24739, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %24740 to i64*
  %24741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24742 = getelementptr inbounds %struct.GPR, %struct.GPR* %24741, i32 0, i32 1
  %24743 = getelementptr inbounds %struct.Reg, %struct.Reg* %24742, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %24743 to i64*
  %24744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24745 = getelementptr inbounds %struct.GPR, %struct.GPR* %24744, i32 0, i32 5
  %24746 = getelementptr inbounds %struct.Reg, %struct.Reg* %24745, i32 0, i32 0
  %RCX.i311 = bitcast %union.anon* %24746 to i64*
  %24747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24748 = getelementptr inbounds %struct.GPR, %struct.GPR* %24747, i32 0, i32 15
  %24749 = getelementptr inbounds %struct.Reg, %struct.Reg* %24748, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %24749 to i64*
  %24750 = load i64, i64* %RBP.i312
  %24751 = load i64, i64* %RAX.i310
  %24752 = mul i64 %24751, 4
  %24753 = add i64 %24750, -80
  %24754 = add i64 %24753, %24752
  %24755 = load i64, i64* %PC.i309
  %24756 = add i64 %24755, 4
  store i64 %24756, i64* %PC.i309
  %24757 = inttoptr i64 %24754 to i32*
  %24758 = load i32, i32* %24757
  %24759 = zext i32 %24758 to i64
  store i64 %24759, i64* %RCX.i311, align 8
  store %struct.Memory* %loadMem_40d07b, %struct.Memory** %MEMORY
  %loadMem_40d07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24761 = getelementptr inbounds %struct.GPR, %struct.GPR* %24760, i32 0, i32 33
  %24762 = getelementptr inbounds %struct.Reg, %struct.Reg* %24761, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %24762 to i64*
  %24763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24764 = getelementptr inbounds %struct.GPR, %struct.GPR* %24763, i32 0, i32 1
  %24765 = getelementptr inbounds %struct.Reg, %struct.Reg* %24764, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %24765 to i64*
  %24766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24767 = getelementptr inbounds %struct.GPR, %struct.GPR* %24766, i32 0, i32 15
  %24768 = getelementptr inbounds %struct.Reg, %struct.Reg* %24767, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %24768 to i64*
  %24769 = load i64, i64* %RBP.i308
  %24770 = sub i64 %24769, 32
  %24771 = load i64, i64* %PC.i306
  %24772 = add i64 %24771, 4
  store i64 %24772, i64* %PC.i306
  %24773 = inttoptr i64 %24770 to i32*
  %24774 = load i32, i32* %24773
  %24775 = sext i32 %24774 to i64
  store i64 %24775, i64* %RAX.i307, align 8
  store %struct.Memory* %loadMem_40d07f, %struct.Memory** %MEMORY
  %loadMem_40d083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24777 = getelementptr inbounds %struct.GPR, %struct.GPR* %24776, i32 0, i32 33
  %24778 = getelementptr inbounds %struct.Reg, %struct.Reg* %24777, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %24778 to i64*
  %24779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24780 = getelementptr inbounds %struct.GPR, %struct.GPR* %24779, i32 0, i32 1
  %24781 = getelementptr inbounds %struct.Reg, %struct.Reg* %24780, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %24781 to i64*
  %24782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24783 = getelementptr inbounds %struct.GPR, %struct.GPR* %24782, i32 0, i32 5
  %24784 = getelementptr inbounds %struct.Reg, %struct.Reg* %24783, i32 0, i32 0
  %RCX.i304 = bitcast %union.anon* %24784 to i64*
  %24785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24786 = getelementptr inbounds %struct.GPR, %struct.GPR* %24785, i32 0, i32 15
  %24787 = getelementptr inbounds %struct.Reg, %struct.Reg* %24786, i32 0, i32 0
  %RBP.i305 = bitcast %union.anon* %24787 to i64*
  %24788 = load i64, i64* %RCX.i304
  %24789 = load i64, i64* %RBP.i305
  %24790 = load i64, i64* %RAX.i303
  %24791 = mul i64 %24790, 4
  %24792 = add i64 %24789, -80
  %24793 = add i64 %24792, %24791
  %24794 = load i64, i64* %PC.i302
  %24795 = add i64 %24794, 4
  store i64 %24795, i64* %PC.i302
  %24796 = trunc i64 %24788 to i32
  %24797 = inttoptr i64 %24793 to i32*
  %24798 = load i32, i32* %24797
  %24799 = add i32 %24798, %24796
  %24800 = zext i32 %24799 to i64
  store i64 %24800, i64* %RCX.i304, align 8
  %24801 = icmp ult i32 %24799, %24796
  %24802 = icmp ult i32 %24799, %24798
  %24803 = or i1 %24801, %24802
  %24804 = zext i1 %24803 to i8
  %24805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24804, i8* %24805, align 1
  %24806 = and i32 %24799, 255
  %24807 = call i32 @llvm.ctpop.i32(i32 %24806)
  %24808 = trunc i32 %24807 to i8
  %24809 = and i8 %24808, 1
  %24810 = xor i8 %24809, 1
  %24811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24810, i8* %24811, align 1
  %24812 = xor i32 %24798, %24796
  %24813 = xor i32 %24812, %24799
  %24814 = lshr i32 %24813, 4
  %24815 = trunc i32 %24814 to i8
  %24816 = and i8 %24815, 1
  %24817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24816, i8* %24817, align 1
  %24818 = icmp eq i32 %24799, 0
  %24819 = zext i1 %24818 to i8
  %24820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24819, i8* %24820, align 1
  %24821 = lshr i32 %24799, 31
  %24822 = trunc i32 %24821 to i8
  %24823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24822, i8* %24823, align 1
  %24824 = lshr i32 %24796, 31
  %24825 = lshr i32 %24798, 31
  %24826 = xor i32 %24821, %24824
  %24827 = xor i32 %24821, %24825
  %24828 = add i32 %24826, %24827
  %24829 = icmp eq i32 %24828, 2
  %24830 = zext i1 %24829 to i8
  %24831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24830, i8* %24831, align 1
  store %struct.Memory* %loadMem_40d083, %struct.Memory** %MEMORY
  %loadMem_40d087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24833 = getelementptr inbounds %struct.GPR, %struct.GPR* %24832, i32 0, i32 33
  %24834 = getelementptr inbounds %struct.Reg, %struct.Reg* %24833, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %24834 to i64*
  %24835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24836 = getelementptr inbounds %struct.GPR, %struct.GPR* %24835, i32 0, i32 5
  %24837 = getelementptr inbounds %struct.Reg, %struct.Reg* %24836, i32 0, i32 0
  %RCX.i301 = bitcast %union.anon* %24837 to i64*
  %24838 = load i64, i64* %RCX.i301
  %24839 = load i64, i64* %PC.i300
  %24840 = add i64 %24839, 3
  store i64 %24840, i64* %PC.i300
  %24841 = trunc i64 %24838 to i32
  %24842 = add i32 32, %24841
  %24843 = zext i32 %24842 to i64
  store i64 %24843, i64* %RCX.i301, align 8
  %24844 = icmp ult i32 %24842, %24841
  %24845 = icmp ult i32 %24842, 32
  %24846 = or i1 %24844, %24845
  %24847 = zext i1 %24846 to i8
  %24848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24847, i8* %24848, align 1
  %24849 = and i32 %24842, 255
  %24850 = call i32 @llvm.ctpop.i32(i32 %24849)
  %24851 = trunc i32 %24850 to i8
  %24852 = and i8 %24851, 1
  %24853 = xor i8 %24852, 1
  %24854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24853, i8* %24854, align 1
  %24855 = xor i64 32, %24838
  %24856 = trunc i64 %24855 to i32
  %24857 = xor i32 %24856, %24842
  %24858 = lshr i32 %24857, 4
  %24859 = trunc i32 %24858 to i8
  %24860 = and i8 %24859, 1
  %24861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24860, i8* %24861, align 1
  %24862 = icmp eq i32 %24842, 0
  %24863 = zext i1 %24862 to i8
  %24864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24863, i8* %24864, align 1
  %24865 = lshr i32 %24842, 31
  %24866 = trunc i32 %24865 to i8
  %24867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24866, i8* %24867, align 1
  %24868 = lshr i32 %24841, 31
  %24869 = xor i32 %24865, %24868
  %24870 = add i32 %24869, %24865
  %24871 = icmp eq i32 %24870, 2
  %24872 = zext i1 %24871 to i8
  %24873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %24872, i8* %24873, align 1
  store %struct.Memory* %loadMem_40d087, %struct.Memory** %MEMORY
  %loadMem_40d08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %24874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24875 = getelementptr inbounds %struct.GPR, %struct.GPR* %24874, i32 0, i32 33
  %24876 = getelementptr inbounds %struct.Reg, %struct.Reg* %24875, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %24876 to i64*
  %24877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24878 = getelementptr inbounds %struct.GPR, %struct.GPR* %24877, i32 0, i32 5
  %24879 = getelementptr inbounds %struct.Reg, %struct.Reg* %24878, i32 0, i32 0
  %RCX.i299 = bitcast %union.anon* %24879 to i64*
  %24880 = load i64, i64* %RCX.i299
  %24881 = load i64, i64* %PC.i298
  %24882 = add i64 %24881, 3
  store i64 %24882, i64* %PC.i298
  %24883 = shl i64 %24880, 32
  %24884 = ashr exact i64 %24883, 32
  %24885 = ashr i64 %24884, 5
  %24886 = lshr i64 %24885, 1
  %24887 = trunc i64 %24885 to i8
  %24888 = and i8 %24887, 1
  %24889 = trunc i64 %24886 to i32
  %24890 = and i64 %24886, 4294967295
  store i64 %24890, i64* %RCX.i299, align 8
  %24891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24888, i8* %24891, align 1
  %24892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %24893 = and i32 %24889, 255
  %24894 = call i32 @llvm.ctpop.i32(i32 %24893)
  %24895 = trunc i32 %24894 to i8
  %24896 = and i8 %24895, 1
  %24897 = xor i8 %24896, 1
  store i8 %24897, i8* %24892, align 1
  %24898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24898, align 1
  %24899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %24900 = icmp eq i32 %24889, 0
  %24901 = zext i1 %24900 to i8
  store i8 %24901, i8* %24899, align 1
  %24902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24903 = lshr i32 %24889, 31
  %24904 = trunc i32 %24903 to i8
  store i8 %24904, i8* %24902, align 1
  %24905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %24905, align 1
  store %struct.Memory* %loadMem_40d08a, %struct.Memory** %MEMORY
  %loadMem_40d08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %24906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24907 = getelementptr inbounds %struct.GPR, %struct.GPR* %24906, i32 0, i32 33
  %24908 = getelementptr inbounds %struct.Reg, %struct.Reg* %24907, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %24908 to i64*
  %24909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24910 = getelementptr inbounds %struct.GPR, %struct.GPR* %24909, i32 0, i32 5
  %24911 = getelementptr inbounds %struct.Reg, %struct.Reg* %24910, i32 0, i32 0
  %ECX.i296 = bitcast %union.anon* %24911 to i32*
  %24912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24913 = getelementptr inbounds %struct.GPR, %struct.GPR* %24912, i32 0, i32 15
  %24914 = getelementptr inbounds %struct.Reg, %struct.Reg* %24913, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %24914 to i64*
  %24915 = load i64, i64* %RBP.i297
  %24916 = sub i64 %24915, 396
  %24917 = load i32, i32* %ECX.i296
  %24918 = zext i32 %24917 to i64
  %24919 = load i64, i64* %PC.i295
  %24920 = add i64 %24919, 6
  store i64 %24920, i64* %PC.i295
  %24921 = inttoptr i64 %24916 to i32*
  store i32 %24917, i32* %24921
  store %struct.Memory* %loadMem_40d08d, %struct.Memory** %MEMORY
  br label %block_.L_40d093

block_.L_40d093:                                  ; preds = %block_.L_40d077, %block_40d06a
  %loadMem_40d093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24923 = getelementptr inbounds %struct.GPR, %struct.GPR* %24922, i32 0, i32 33
  %24924 = getelementptr inbounds %struct.Reg, %struct.Reg* %24923, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %24924 to i64*
  %24925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24926 = getelementptr inbounds %struct.GPR, %struct.GPR* %24925, i32 0, i32 1
  %24927 = getelementptr inbounds %struct.Reg, %struct.Reg* %24926, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %24927 to i64*
  %24928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24929 = getelementptr inbounds %struct.GPR, %struct.GPR* %24928, i32 0, i32 15
  %24930 = getelementptr inbounds %struct.Reg, %struct.Reg* %24929, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %24930 to i64*
  %24931 = load i64, i64* %RBP.i294
  %24932 = sub i64 %24931, 396
  %24933 = load i64, i64* %PC.i292
  %24934 = add i64 %24933, 6
  store i64 %24934, i64* %PC.i292
  %24935 = inttoptr i64 %24932 to i32*
  %24936 = load i32, i32* %24935
  %24937 = zext i32 %24936 to i64
  store i64 %24937, i64* %RAX.i293, align 8
  store %struct.Memory* %loadMem_40d093, %struct.Memory** %MEMORY
  %loadMem_40d099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24939 = getelementptr inbounds %struct.GPR, %struct.GPR* %24938, i32 0, i32 33
  %24940 = getelementptr inbounds %struct.Reg, %struct.Reg* %24939, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %24940 to i64*
  %24941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24942 = getelementptr inbounds %struct.GPR, %struct.GPR* %24941, i32 0, i32 1
  %24943 = getelementptr inbounds %struct.Reg, %struct.Reg* %24942, i32 0, i32 0
  %EAX.i290 = bitcast %union.anon* %24943 to i32*
  %24944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24945 = getelementptr inbounds %struct.GPR, %struct.GPR* %24944, i32 0, i32 15
  %24946 = getelementptr inbounds %struct.Reg, %struct.Reg* %24945, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %24946 to i64*
  %24947 = load i64, i64* %RBP.i291
  %24948 = sub i64 %24947, 392
  %24949 = load i32, i32* %EAX.i290
  %24950 = zext i32 %24949 to i64
  %24951 = load i64, i64* %PC.i289
  %24952 = add i64 %24951, 6
  store i64 %24952, i64* %PC.i289
  %24953 = inttoptr i64 %24948 to i32*
  store i32 %24949, i32* %24953
  store %struct.Memory* %loadMem_40d099, %struct.Memory** %MEMORY
  br label %block_.L_40d09f

block_.L_40d09f:                                  ; preds = %block_.L_40d093, %block_40d031
  %loadMem_40d09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %24954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24955 = getelementptr inbounds %struct.GPR, %struct.GPR* %24954, i32 0, i32 33
  %24956 = getelementptr inbounds %struct.Reg, %struct.Reg* %24955, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %24956 to i64*
  %24957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24958 = getelementptr inbounds %struct.GPR, %struct.GPR* %24957, i32 0, i32 1
  %24959 = getelementptr inbounds %struct.Reg, %struct.Reg* %24958, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %24959 to i64*
  %24960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24961 = getelementptr inbounds %struct.GPR, %struct.GPR* %24960, i32 0, i32 15
  %24962 = getelementptr inbounds %struct.Reg, %struct.Reg* %24961, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %24962 to i64*
  %24963 = load i64, i64* %RBP.i288
  %24964 = sub i64 %24963, 392
  %24965 = load i64, i64* %PC.i286
  %24966 = add i64 %24965, 6
  store i64 %24966, i64* %PC.i286
  %24967 = inttoptr i64 %24964 to i32*
  %24968 = load i32, i32* %24967
  %24969 = zext i32 %24968 to i64
  store i64 %24969, i64* %RAX.i287, align 8
  store %struct.Memory* %loadMem_40d09f, %struct.Memory** %MEMORY
  %loadMem_40d0a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %24970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24971 = getelementptr inbounds %struct.GPR, %struct.GPR* %24970, i32 0, i32 33
  %24972 = getelementptr inbounds %struct.Reg, %struct.Reg* %24971, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %24972 to i64*
  %24973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24974 = getelementptr inbounds %struct.GPR, %struct.GPR* %24973, i32 0, i32 5
  %24975 = getelementptr inbounds %struct.Reg, %struct.Reg* %24974, i32 0, i32 0
  %ECX.i284 = bitcast %union.anon* %24975 to i32*
  %24976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24977 = getelementptr inbounds %struct.GPR, %struct.GPR* %24976, i32 0, i32 5
  %24978 = getelementptr inbounds %struct.Reg, %struct.Reg* %24977, i32 0, i32 0
  %RCX.i285 = bitcast %union.anon* %24978 to i64*
  %24979 = load i64, i64* %RCX.i285
  %24980 = load i32, i32* %ECX.i284
  %24981 = zext i32 %24980 to i64
  %24982 = load i64, i64* %PC.i283
  %24983 = add i64 %24982, 2
  store i64 %24983, i64* %PC.i283
  %24984 = xor i64 %24981, %24979
  %24985 = trunc i64 %24984 to i32
  %24986 = and i64 %24984, 4294967295
  store i64 %24986, i64* %RCX.i285, align 8
  %24987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %24987, align 1
  %24988 = and i32 %24985, 255
  %24989 = call i32 @llvm.ctpop.i32(i32 %24988)
  %24990 = trunc i32 %24989 to i8
  %24991 = and i8 %24990, 1
  %24992 = xor i8 %24991, 1
  %24993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24992, i8* %24993, align 1
  %24994 = icmp eq i32 %24985, 0
  %24995 = zext i1 %24994 to i8
  %24996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24995, i8* %24996, align 1
  %24997 = lshr i32 %24985, 31
  %24998 = trunc i32 %24997 to i8
  %24999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24998, i8* %24999, align 1
  %25000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25000, align 1
  %25001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25001, align 1
  store %struct.Memory* %loadMem_40d0a5, %struct.Memory** %MEMORY
  %loadMem_40d0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25003 = getelementptr inbounds %struct.GPR, %struct.GPR* %25002, i32 0, i32 33
  %25004 = getelementptr inbounds %struct.Reg, %struct.Reg* %25003, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %25004 to i64*
  %25005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25006 = getelementptr inbounds %struct.GPR, %struct.GPR* %25005, i32 0, i32 7
  %25007 = getelementptr inbounds %struct.Reg, %struct.Reg* %25006, i32 0, i32 0
  %RDX.i282 = bitcast %union.anon* %25007 to i64*
  %25008 = load i64, i64* %PC.i281
  %25009 = add i64 %25008, 8
  store i64 %25009, i64* %PC.i281
  %25010 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %25010, i64* %RDX.i282, align 8
  store %struct.Memory* %loadMem_40d0a7, %struct.Memory** %MEMORY
  %loadMem_40d0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %25011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25012 = getelementptr inbounds %struct.GPR, %struct.GPR* %25011, i32 0, i32 33
  %25013 = getelementptr inbounds %struct.Reg, %struct.Reg* %25012, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %25013 to i64*
  %25014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25015 = getelementptr inbounds %struct.GPR, %struct.GPR* %25014, i32 0, i32 7
  %25016 = getelementptr inbounds %struct.Reg, %struct.Reg* %25015, i32 0, i32 0
  %RDX.i280 = bitcast %union.anon* %25016 to i64*
  %25017 = load i64, i64* %RDX.i280
  %25018 = load i64, i64* %PC.i279
  %25019 = add i64 %25018, 7
  store i64 %25019, i64* %PC.i279
  %25020 = add i64 13112, %25017
  store i64 %25020, i64* %RDX.i280, align 8
  %25021 = icmp ult i64 %25020, %25017
  %25022 = icmp ult i64 %25020, 13112
  %25023 = or i1 %25021, %25022
  %25024 = zext i1 %25023 to i8
  %25025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25024, i8* %25025, align 1
  %25026 = trunc i64 %25020 to i32
  %25027 = and i32 %25026, 255
  %25028 = call i32 @llvm.ctpop.i32(i32 %25027)
  %25029 = trunc i32 %25028 to i8
  %25030 = and i8 %25029, 1
  %25031 = xor i8 %25030, 1
  %25032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25031, i8* %25032, align 1
  %25033 = xor i64 13112, %25017
  %25034 = xor i64 %25033, %25020
  %25035 = lshr i64 %25034, 4
  %25036 = trunc i64 %25035 to i8
  %25037 = and i8 %25036, 1
  %25038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25037, i8* %25038, align 1
  %25039 = icmp eq i64 %25020, 0
  %25040 = zext i1 %25039 to i8
  %25041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25040, i8* %25041, align 1
  %25042 = lshr i64 %25020, 63
  %25043 = trunc i64 %25042 to i8
  %25044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25043, i8* %25044, align 1
  %25045 = lshr i64 %25017, 63
  %25046 = xor i64 %25042, %25045
  %25047 = add i64 %25046, %25042
  %25048 = icmp eq i64 %25047, 2
  %25049 = zext i1 %25048 to i8
  %25050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25049, i8* %25050, align 1
  store %struct.Memory* %loadMem_40d0af, %struct.Memory** %MEMORY
  %loadMem_40d0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25052 = getelementptr inbounds %struct.GPR, %struct.GPR* %25051, i32 0, i32 33
  %25053 = getelementptr inbounds %struct.Reg, %struct.Reg* %25052, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %25053 to i64*
  %25054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25055 = getelementptr inbounds %struct.GPR, %struct.GPR* %25054, i32 0, i32 9
  %25056 = getelementptr inbounds %struct.Reg, %struct.Reg* %25055, i32 0, i32 0
  %RSI.i277 = bitcast %union.anon* %25056 to i64*
  %25057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25058 = getelementptr inbounds %struct.GPR, %struct.GPR* %25057, i32 0, i32 15
  %25059 = getelementptr inbounds %struct.Reg, %struct.Reg* %25058, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %25059 to i64*
  %25060 = load i64, i64* %RBP.i278
  %25061 = sub i64 %25060, 20
  %25062 = load i64, i64* %PC.i276
  %25063 = add i64 %25062, 4
  store i64 %25063, i64* %PC.i276
  %25064 = inttoptr i64 %25061 to i32*
  %25065 = load i32, i32* %25064
  %25066 = sext i32 %25065 to i64
  store i64 %25066, i64* %RSI.i277, align 8
  store %struct.Memory* %loadMem_40d0b6, %struct.Memory** %MEMORY
  %loadMem_40d0ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %25067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25068 = getelementptr inbounds %struct.GPR, %struct.GPR* %25067, i32 0, i32 33
  %25069 = getelementptr inbounds %struct.Reg, %struct.Reg* %25068, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %25069 to i64*
  %25070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25071 = getelementptr inbounds %struct.GPR, %struct.GPR* %25070, i32 0, i32 9
  %25072 = getelementptr inbounds %struct.Reg, %struct.Reg* %25071, i32 0, i32 0
  %RSI.i275 = bitcast %union.anon* %25072 to i64*
  %25073 = load i64, i64* %RSI.i275
  %25074 = load i64, i64* %PC.i274
  %25075 = add i64 %25074, 4
  store i64 %25075, i64* %PC.i274
  %25076 = shl i64 %25073, 5
  %25077 = icmp slt i64 %25076, 0
  %25078 = shl i64 %25076, 1
  store i64 %25078, i64* %RSI.i275, align 8
  %25079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %25080 = zext i1 %25077 to i8
  store i8 %25080, i8* %25079, align 1
  %25081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25082 = trunc i64 %25078 to i32
  %25083 = and i32 %25082, 254
  %25084 = call i32 @llvm.ctpop.i32(i32 %25083)
  %25085 = trunc i32 %25084 to i8
  %25086 = and i8 %25085, 1
  %25087 = xor i8 %25086, 1
  store i8 %25087, i8* %25081, align 1
  %25088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25088, align 1
  %25089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25090 = icmp eq i64 %25078, 0
  %25091 = zext i1 %25090 to i8
  store i8 %25091, i8* %25089, align 1
  %25092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25093 = lshr i64 %25078, 63
  %25094 = trunc i64 %25093 to i8
  store i8 %25094, i8* %25092, align 1
  %25095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25095, align 1
  store %struct.Memory* %loadMem_40d0ba, %struct.Memory** %MEMORY
  %loadMem_40d0be = load %struct.Memory*, %struct.Memory** %MEMORY
  %25096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25097 = getelementptr inbounds %struct.GPR, %struct.GPR* %25096, i32 0, i32 33
  %25098 = getelementptr inbounds %struct.Reg, %struct.Reg* %25097, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %25098 to i64*
  %25099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25100 = getelementptr inbounds %struct.GPR, %struct.GPR* %25099, i32 0, i32 7
  %25101 = getelementptr inbounds %struct.Reg, %struct.Reg* %25100, i32 0, i32 0
  %RDX.i272 = bitcast %union.anon* %25101 to i64*
  %25102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25103 = getelementptr inbounds %struct.GPR, %struct.GPR* %25102, i32 0, i32 9
  %25104 = getelementptr inbounds %struct.Reg, %struct.Reg* %25103, i32 0, i32 0
  %RSI.i273 = bitcast %union.anon* %25104 to i64*
  %25105 = load i64, i64* %RDX.i272
  %25106 = load i64, i64* %RSI.i273
  %25107 = load i64, i64* %PC.i271
  %25108 = add i64 %25107, 3
  store i64 %25108, i64* %PC.i271
  %25109 = add i64 %25106, %25105
  store i64 %25109, i64* %RDX.i272, align 8
  %25110 = icmp ult i64 %25109, %25105
  %25111 = icmp ult i64 %25109, %25106
  %25112 = or i1 %25110, %25111
  %25113 = zext i1 %25112 to i8
  %25114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25113, i8* %25114, align 1
  %25115 = trunc i64 %25109 to i32
  %25116 = and i32 %25115, 255
  %25117 = call i32 @llvm.ctpop.i32(i32 %25116)
  %25118 = trunc i32 %25117 to i8
  %25119 = and i8 %25118, 1
  %25120 = xor i8 %25119, 1
  %25121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25120, i8* %25121, align 1
  %25122 = xor i64 %25106, %25105
  %25123 = xor i64 %25122, %25109
  %25124 = lshr i64 %25123, 4
  %25125 = trunc i64 %25124 to i8
  %25126 = and i8 %25125, 1
  %25127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25126, i8* %25127, align 1
  %25128 = icmp eq i64 %25109, 0
  %25129 = zext i1 %25128 to i8
  %25130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25129, i8* %25130, align 1
  %25131 = lshr i64 %25109, 63
  %25132 = trunc i64 %25131 to i8
  %25133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25132, i8* %25133, align 1
  %25134 = lshr i64 %25105, 63
  %25135 = lshr i64 %25106, 63
  %25136 = xor i64 %25131, %25134
  %25137 = xor i64 %25131, %25135
  %25138 = add i64 %25136, %25137
  %25139 = icmp eq i64 %25138, 2
  %25140 = zext i1 %25139 to i8
  %25141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25140, i8* %25141, align 1
  store %struct.Memory* %loadMem_40d0be, %struct.Memory** %MEMORY
  %loadMem_40d0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25143 = getelementptr inbounds %struct.GPR, %struct.GPR* %25142, i32 0, i32 33
  %25144 = getelementptr inbounds %struct.Reg, %struct.Reg* %25143, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %25144 to i64*
  %25145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25146 = getelementptr inbounds %struct.GPR, %struct.GPR* %25145, i32 0, i32 9
  %25147 = getelementptr inbounds %struct.Reg, %struct.Reg* %25146, i32 0, i32 0
  %RSI.i269 = bitcast %union.anon* %25147 to i64*
  %25148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25149 = getelementptr inbounds %struct.GPR, %struct.GPR* %25148, i32 0, i32 15
  %25150 = getelementptr inbounds %struct.Reg, %struct.Reg* %25149, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %25150 to i64*
  %25151 = load i64, i64* %RBP.i270
  %25152 = sub i64 %25151, 24
  %25153 = load i64, i64* %PC.i268
  %25154 = add i64 %25153, 4
  store i64 %25154, i64* %PC.i268
  %25155 = inttoptr i64 %25152 to i32*
  %25156 = load i32, i32* %25155
  %25157 = sext i32 %25156 to i64
  store i64 %25157, i64* %RSI.i269, align 8
  store %struct.Memory* %loadMem_40d0c1, %struct.Memory** %MEMORY
  %loadMem_40d0c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25159 = getelementptr inbounds %struct.GPR, %struct.GPR* %25158, i32 0, i32 33
  %25160 = getelementptr inbounds %struct.Reg, %struct.Reg* %25159, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %25160 to i64*
  %25161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25162 = getelementptr inbounds %struct.GPR, %struct.GPR* %25161, i32 0, i32 1
  %25163 = getelementptr inbounds %struct.Reg, %struct.Reg* %25162, i32 0, i32 0
  %EAX.i266 = bitcast %union.anon* %25163 to i32*
  %25164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25165 = getelementptr inbounds %struct.GPR, %struct.GPR* %25164, i32 0, i32 7
  %25166 = getelementptr inbounds %struct.Reg, %struct.Reg* %25165, i32 0, i32 0
  %RDX.i267 = bitcast %union.anon* %25166 to i64*
  %25167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25168 = getelementptr inbounds %struct.GPR, %struct.GPR* %25167, i32 0, i32 9
  %25169 = getelementptr inbounds %struct.Reg, %struct.Reg* %25168, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %25169 to i64*
  %25170 = load i64, i64* %RDX.i267
  %25171 = load i64, i64* %RSI.i
  %25172 = mul i64 %25171, 4
  %25173 = add i64 %25172, %25170
  %25174 = load i32, i32* %EAX.i266
  %25175 = zext i32 %25174 to i64
  %25176 = load i64, i64* %PC.i265
  %25177 = add i64 %25176, 3
  store i64 %25177, i64* %PC.i265
  %25178 = inttoptr i64 %25173 to i32*
  store i32 %25174, i32* %25178
  store %struct.Memory* %loadMem_40d0c5, %struct.Memory** %MEMORY
  %loadMem_40d0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25180 = getelementptr inbounds %struct.GPR, %struct.GPR* %25179, i32 0, i32 33
  %25181 = getelementptr inbounds %struct.Reg, %struct.Reg* %25180, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %25181 to i64*
  %25182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25183 = getelementptr inbounds %struct.GPR, %struct.GPR* %25182, i32 0, i32 7
  %25184 = getelementptr inbounds %struct.Reg, %struct.Reg* %25183, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %25184 to i64*
  %25185 = load i64, i64* %PC.i263
  %25186 = add i64 %25185, 8
  store i64 %25186, i64* %PC.i263
  %25187 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %25187, i64* %RDX.i264, align 8
  store %struct.Memory* %loadMem_40d0c8, %struct.Memory** %MEMORY
  %loadMem_40d0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25189 = getelementptr inbounds %struct.GPR, %struct.GPR* %25188, i32 0, i32 33
  %25190 = getelementptr inbounds %struct.Reg, %struct.Reg* %25189, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %25190 to i64*
  %25191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25192 = getelementptr inbounds %struct.GPR, %struct.GPR* %25191, i32 0, i32 1
  %25193 = getelementptr inbounds %struct.Reg, %struct.Reg* %25192, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %25193 to i64*
  %25194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25195 = getelementptr inbounds %struct.GPR, %struct.GPR* %25194, i32 0, i32 7
  %25196 = getelementptr inbounds %struct.Reg, %struct.Reg* %25195, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %25196 to i64*
  %25197 = load i64, i64* %RDX.i262
  %25198 = add i64 %25197, 72684
  %25199 = load i64, i64* %PC.i260
  %25200 = add i64 %25199, 6
  store i64 %25200, i64* %PC.i260
  %25201 = inttoptr i64 %25198 to i32*
  %25202 = load i32, i32* %25201
  %25203 = zext i32 %25202 to i64
  store i64 %25203, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_40d0d0, %struct.Memory** %MEMORY
  %loadMem_40d0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25205 = getelementptr inbounds %struct.GPR, %struct.GPR* %25204, i32 0, i32 33
  %25206 = getelementptr inbounds %struct.Reg, %struct.Reg* %25205, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %25206 to i64*
  %25207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25208 = getelementptr inbounds %struct.GPR, %struct.GPR* %25207, i32 0, i32 7
  %25209 = getelementptr inbounds %struct.Reg, %struct.Reg* %25208, i32 0, i32 0
  %RDX.i258 = bitcast %union.anon* %25209 to i64*
  %25210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25211 = getelementptr inbounds %struct.GPR, %struct.GPR* %25210, i32 0, i32 15
  %25212 = getelementptr inbounds %struct.Reg, %struct.Reg* %25211, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %25212 to i64*
  %25213 = load i64, i64* %RBP.i259
  %25214 = sub i64 %25213, 24
  %25215 = load i64, i64* %PC.i257
  %25216 = add i64 %25215, 4
  store i64 %25216, i64* %PC.i257
  %25217 = inttoptr i64 %25214 to i32*
  %25218 = load i32, i32* %25217
  %25219 = sext i32 %25218 to i64
  store i64 %25219, i64* %RDX.i258, align 8
  store %struct.Memory* %loadMem_40d0d6, %struct.Memory** %MEMORY
  %loadMem_40d0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %25220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25221 = getelementptr inbounds %struct.GPR, %struct.GPR* %25220, i32 0, i32 33
  %25222 = getelementptr inbounds %struct.Reg, %struct.Reg* %25221, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %25222 to i64*
  %25223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25224 = getelementptr inbounds %struct.GPR, %struct.GPR* %25223, i32 0, i32 7
  %25225 = getelementptr inbounds %struct.Reg, %struct.Reg* %25224, i32 0, i32 0
  %RDX.i254 = bitcast %union.anon* %25225 to i64*
  %25226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25227 = getelementptr inbounds %struct.GPR, %struct.GPR* %25226, i32 0, i32 11
  %25228 = getelementptr inbounds %struct.Reg, %struct.Reg* %25227, i32 0, i32 0
  %RDI.i255 = bitcast %union.anon* %25228 to i64*
  %25229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25230 = getelementptr inbounds %struct.GPR, %struct.GPR* %25229, i32 0, i32 15
  %25231 = getelementptr inbounds %struct.Reg, %struct.Reg* %25230, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %25231 to i64*
  %25232 = load i64, i64* %RBP.i256
  %25233 = load i64, i64* %RDX.i254
  %25234 = mul i64 %25233, 4
  %25235 = add i64 %25232, -80
  %25236 = add i64 %25235, %25234
  %25237 = load i64, i64* %PC.i253
  %25238 = add i64 %25237, 4
  store i64 %25238, i64* %PC.i253
  %25239 = inttoptr i64 %25236 to i32*
  %25240 = load i32, i32* %25239
  %25241 = zext i32 %25240 to i64
  store i64 %25241, i64* %RDI.i255, align 8
  store %struct.Memory* %loadMem_40d0da, %struct.Memory** %MEMORY
  %loadMem_40d0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %25242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25243 = getelementptr inbounds %struct.GPR, %struct.GPR* %25242, i32 0, i32 33
  %25244 = getelementptr inbounds %struct.Reg, %struct.Reg* %25243, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %25244 to i64*
  %25245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25246 = getelementptr inbounds %struct.GPR, %struct.GPR* %25245, i32 0, i32 7
  %25247 = getelementptr inbounds %struct.Reg, %struct.Reg* %25246, i32 0, i32 0
  %RDX.i251 = bitcast %union.anon* %25247 to i64*
  %25248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25249 = getelementptr inbounds %struct.GPR, %struct.GPR* %25248, i32 0, i32 15
  %25250 = getelementptr inbounds %struct.Reg, %struct.Reg* %25249, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %25250 to i64*
  %25251 = load i64, i64* %RBP.i252
  %25252 = sub i64 %25251, 32
  %25253 = load i64, i64* %PC.i250
  %25254 = add i64 %25253, 4
  store i64 %25254, i64* %PC.i250
  %25255 = inttoptr i64 %25252 to i32*
  %25256 = load i32, i32* %25255
  %25257 = sext i32 %25256 to i64
  store i64 %25257, i64* %RDX.i251, align 8
  store %struct.Memory* %loadMem_40d0de, %struct.Memory** %MEMORY
  %loadMem_40d0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25259 = getelementptr inbounds %struct.GPR, %struct.GPR* %25258, i32 0, i32 33
  %25260 = getelementptr inbounds %struct.Reg, %struct.Reg* %25259, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %25260 to i64*
  %25261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25262 = getelementptr inbounds %struct.GPR, %struct.GPR* %25261, i32 0, i32 7
  %25263 = getelementptr inbounds %struct.Reg, %struct.Reg* %25262, i32 0, i32 0
  %RDX.i247 = bitcast %union.anon* %25263 to i64*
  %25264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25265 = getelementptr inbounds %struct.GPR, %struct.GPR* %25264, i32 0, i32 11
  %25266 = getelementptr inbounds %struct.Reg, %struct.Reg* %25265, i32 0, i32 0
  %RDI.i248 = bitcast %union.anon* %25266 to i64*
  %25267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25268 = getelementptr inbounds %struct.GPR, %struct.GPR* %25267, i32 0, i32 15
  %25269 = getelementptr inbounds %struct.Reg, %struct.Reg* %25268, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %25269 to i64*
  %25270 = load i64, i64* %RDI.i248
  %25271 = load i64, i64* %RBP.i249
  %25272 = load i64, i64* %RDX.i247
  %25273 = mul i64 %25272, 4
  %25274 = add i64 %25271, -80
  %25275 = add i64 %25274, %25273
  %25276 = load i64, i64* %PC.i246
  %25277 = add i64 %25276, 4
  store i64 %25277, i64* %PC.i246
  %25278 = trunc i64 %25270 to i32
  %25279 = inttoptr i64 %25275 to i32*
  %25280 = load i32, i32* %25279
  %25281 = sub i32 %25278, %25280
  %25282 = zext i32 %25281 to i64
  store i64 %25282, i64* %RDI.i248, align 8
  %25283 = icmp ult i32 %25278, %25280
  %25284 = zext i1 %25283 to i8
  %25285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25284, i8* %25285, align 1
  %25286 = and i32 %25281, 255
  %25287 = call i32 @llvm.ctpop.i32(i32 %25286)
  %25288 = trunc i32 %25287 to i8
  %25289 = and i8 %25288, 1
  %25290 = xor i8 %25289, 1
  %25291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25290, i8* %25291, align 1
  %25292 = xor i32 %25280, %25278
  %25293 = xor i32 %25292, %25281
  %25294 = lshr i32 %25293, 4
  %25295 = trunc i32 %25294 to i8
  %25296 = and i8 %25295, 1
  %25297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25296, i8* %25297, align 1
  %25298 = icmp eq i32 %25281, 0
  %25299 = zext i1 %25298 to i8
  %25300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25299, i8* %25300, align 1
  %25301 = lshr i32 %25281, 31
  %25302 = trunc i32 %25301 to i8
  %25303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25302, i8* %25303, align 1
  %25304 = lshr i32 %25278, 31
  %25305 = lshr i32 %25280, 31
  %25306 = xor i32 %25305, %25304
  %25307 = xor i32 %25301, %25304
  %25308 = add i32 %25307, %25306
  %25309 = icmp eq i32 %25308, 2
  %25310 = zext i1 %25309 to i8
  %25311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25310, i8* %25311, align 1
  store %struct.Memory* %loadMem_40d0e2, %struct.Memory** %MEMORY
  %loadMem_40d0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25313 = getelementptr inbounds %struct.GPR, %struct.GPR* %25312, i32 0, i32 33
  %25314 = getelementptr inbounds %struct.Reg, %struct.Reg* %25313, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %25314 to i64*
  %25315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25316 = getelementptr inbounds %struct.GPR, %struct.GPR* %25315, i32 0, i32 11
  %25317 = getelementptr inbounds %struct.Reg, %struct.Reg* %25316, i32 0, i32 0
  %RDI.i245 = bitcast %union.anon* %25317 to i64*
  %25318 = load i64, i64* %RDI.i245
  %25319 = load i64, i64* %PC.i244
  %25320 = add i64 %25319, 3
  store i64 %25320, i64* %PC.i244
  %25321 = trunc i64 %25318 to i32
  %25322 = add i32 32, %25321
  %25323 = zext i32 %25322 to i64
  store i64 %25323, i64* %RDI.i245, align 8
  %25324 = icmp ult i32 %25322, %25321
  %25325 = icmp ult i32 %25322, 32
  %25326 = or i1 %25324, %25325
  %25327 = zext i1 %25326 to i8
  %25328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25327, i8* %25328, align 1
  %25329 = and i32 %25322, 255
  %25330 = call i32 @llvm.ctpop.i32(i32 %25329)
  %25331 = trunc i32 %25330 to i8
  %25332 = and i8 %25331, 1
  %25333 = xor i8 %25332, 1
  %25334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25333, i8* %25334, align 1
  %25335 = xor i64 32, %25318
  %25336 = trunc i64 %25335 to i32
  %25337 = xor i32 %25336, %25322
  %25338 = lshr i32 %25337, 4
  %25339 = trunc i32 %25338 to i8
  %25340 = and i8 %25339, 1
  %25341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25340, i8* %25341, align 1
  %25342 = icmp eq i32 %25322, 0
  %25343 = zext i1 %25342 to i8
  %25344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25343, i8* %25344, align 1
  %25345 = lshr i32 %25322, 31
  %25346 = trunc i32 %25345 to i8
  %25347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25346, i8* %25347, align 1
  %25348 = lshr i32 %25321, 31
  %25349 = xor i32 %25345, %25348
  %25350 = add i32 %25349, %25345
  %25351 = icmp eq i32 %25350, 2
  %25352 = zext i1 %25351 to i8
  %25353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25352, i8* %25353, align 1
  store %struct.Memory* %loadMem_40d0e6, %struct.Memory** %MEMORY
  %loadMem_40d0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25355 = getelementptr inbounds %struct.GPR, %struct.GPR* %25354, i32 0, i32 33
  %25356 = getelementptr inbounds %struct.Reg, %struct.Reg* %25355, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %25356 to i64*
  %25357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25358 = getelementptr inbounds %struct.GPR, %struct.GPR* %25357, i32 0, i32 11
  %25359 = getelementptr inbounds %struct.Reg, %struct.Reg* %25358, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %25359 to i64*
  %25360 = load i64, i64* %RDI.i
  %25361 = load i64, i64* %PC.i243
  %25362 = add i64 %25361, 3
  store i64 %25362, i64* %PC.i243
  %25363 = shl i64 %25360, 32
  %25364 = ashr exact i64 %25363, 32
  %25365 = ashr i64 %25364, 5
  %25366 = lshr i64 %25365, 1
  %25367 = trunc i64 %25365 to i8
  %25368 = and i8 %25367, 1
  %25369 = trunc i64 %25366 to i32
  %25370 = and i64 %25366, 4294967295
  store i64 %25370, i64* %RDI.i, align 8
  %25371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25368, i8* %25371, align 1
  %25372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25373 = and i32 %25369, 255
  %25374 = call i32 @llvm.ctpop.i32(i32 %25373)
  %25375 = trunc i32 %25374 to i8
  %25376 = and i8 %25375, 1
  %25377 = xor i8 %25376, 1
  store i8 %25377, i8* %25372, align 1
  %25378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25378, align 1
  %25379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25380 = icmp eq i32 %25369, 0
  %25381 = zext i1 %25380 to i8
  store i8 %25381, i8* %25379, align 1
  %25382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25383 = lshr i32 %25369, 31
  %25384 = trunc i32 %25383 to i8
  store i8 %25384, i8* %25382, align 1
  %25385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25385, align 1
  store %struct.Memory* %loadMem_40d0e9, %struct.Memory** %MEMORY
  %loadMem_40d0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %25386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25387 = getelementptr inbounds %struct.GPR, %struct.GPR* %25386, i32 0, i32 33
  %25388 = getelementptr inbounds %struct.Reg, %struct.Reg* %25387, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %25388 to i64*
  %25389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25390 = getelementptr inbounds %struct.GPR, %struct.GPR* %25389, i32 0, i32 5
  %25391 = getelementptr inbounds %struct.Reg, %struct.Reg* %25390, i32 0, i32 0
  %ECX.i242 = bitcast %union.anon* %25391 to i32*
  %25392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25393 = getelementptr inbounds %struct.GPR, %struct.GPR* %25392, i32 0, i32 11
  %25394 = getelementptr inbounds %struct.Reg, %struct.Reg* %25393, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %25394 to i32*
  %25395 = load i32, i32* %ECX.i242
  %25396 = zext i32 %25395 to i64
  %25397 = load i32, i32* %EDI.i
  %25398 = zext i32 %25397 to i64
  %25399 = load i64, i64* %PC.i241
  %25400 = add i64 %25399, 2
  store i64 %25400, i64* %PC.i241
  %25401 = sub i32 %25395, %25397
  %25402 = icmp ult i32 %25395, %25397
  %25403 = zext i1 %25402 to i8
  %25404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25403, i8* %25404, align 1
  %25405 = and i32 %25401, 255
  %25406 = call i32 @llvm.ctpop.i32(i32 %25405)
  %25407 = trunc i32 %25406 to i8
  %25408 = and i8 %25407, 1
  %25409 = xor i8 %25408, 1
  %25410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25409, i8* %25410, align 1
  %25411 = xor i64 %25398, %25396
  %25412 = trunc i64 %25411 to i32
  %25413 = xor i32 %25412, %25401
  %25414 = lshr i32 %25413, 4
  %25415 = trunc i32 %25414 to i8
  %25416 = and i8 %25415, 1
  %25417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25416, i8* %25417, align 1
  %25418 = icmp eq i32 %25401, 0
  %25419 = zext i1 %25418 to i8
  %25420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25419, i8* %25420, align 1
  %25421 = lshr i32 %25401, 31
  %25422 = trunc i32 %25421 to i8
  %25423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25422, i8* %25423, align 1
  %25424 = lshr i32 %25395, 31
  %25425 = lshr i32 %25397, 31
  %25426 = xor i32 %25425, %25424
  %25427 = xor i32 %25421, %25424
  %25428 = add i32 %25427, %25426
  %25429 = icmp eq i32 %25428, 2
  %25430 = zext i1 %25429 to i8
  %25431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25430, i8* %25431, align 1
  store %struct.Memory* %loadMem_40d0ec, %struct.Memory** %MEMORY
  %loadMem_40d0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %25432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25433 = getelementptr inbounds %struct.GPR, %struct.GPR* %25432, i32 0, i32 33
  %25434 = getelementptr inbounds %struct.Reg, %struct.Reg* %25433, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %25434 to i64*
  %25435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25436 = getelementptr inbounds %struct.GPR, %struct.GPR* %25435, i32 0, i32 1
  %25437 = getelementptr inbounds %struct.Reg, %struct.Reg* %25436, i32 0, i32 0
  %EAX.i239 = bitcast %union.anon* %25437 to i32*
  %25438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25439 = getelementptr inbounds %struct.GPR, %struct.GPR* %25438, i32 0, i32 15
  %25440 = getelementptr inbounds %struct.Reg, %struct.Reg* %25439, i32 0, i32 0
  %RBP.i240 = bitcast %union.anon* %25440 to i64*
  %25441 = load i64, i64* %RBP.i240
  %25442 = sub i64 %25441, 400
  %25443 = load i32, i32* %EAX.i239
  %25444 = zext i32 %25443 to i64
  %25445 = load i64, i64* %PC.i238
  %25446 = add i64 %25445, 6
  store i64 %25446, i64* %PC.i238
  %25447 = inttoptr i64 %25442 to i32*
  store i32 %25443, i32* %25447
  store %struct.Memory* %loadMem_40d0ee, %struct.Memory** %MEMORY
  %loadMem_40d0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25449 = getelementptr inbounds %struct.GPR, %struct.GPR* %25448, i32 0, i32 33
  %25450 = getelementptr inbounds %struct.Reg, %struct.Reg* %25449, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %25450 to i64*
  %25451 = load i64, i64* %PC.i237
  %25452 = add i64 %25451, 19
  %25453 = load i64, i64* %PC.i237
  %25454 = add i64 %25453, 6
  %25455 = load i64, i64* %PC.i237
  %25456 = add i64 %25455, 6
  store i64 %25456, i64* %PC.i237
  %25457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25458 = load i8, i8* %25457, align 1
  %25459 = icmp ne i8 %25458, 0
  %25460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25461 = load i8, i8* %25460, align 1
  %25462 = icmp ne i8 %25461, 0
  %25463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %25464 = load i8, i8* %25463, align 1
  %25465 = icmp ne i8 %25464, 0
  %25466 = xor i1 %25462, %25465
  %25467 = or i1 %25459, %25466
  %25468 = zext i1 %25467 to i8
  store i8 %25468, i8* %BRANCH_TAKEN, align 1
  %25469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25470 = select i1 %25467, i64 %25452, i64 %25454
  store i64 %25470, i64* %25469, align 8
  store %struct.Memory* %loadMem_40d0f4, %struct.Memory** %MEMORY
  %loadBr_40d0f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d0f4 = icmp eq i8 %loadBr_40d0f4, 1
  br i1 %cmpBr_40d0f4, label %block_.L_40d107, label %block_40d0fa

block_40d0fa:                                     ; preds = %block_.L_40d09f
  %loadMem_40d0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %25471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25472 = getelementptr inbounds %struct.GPR, %struct.GPR* %25471, i32 0, i32 33
  %25473 = getelementptr inbounds %struct.Reg, %struct.Reg* %25472, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %25473 to i64*
  %25474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25475 = getelementptr inbounds %struct.GPR, %struct.GPR* %25474, i32 0, i32 1
  %25476 = getelementptr inbounds %struct.Reg, %struct.Reg* %25475, i32 0, i32 0
  %EAX.i235 = bitcast %union.anon* %25476 to i32*
  %25477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25478 = getelementptr inbounds %struct.GPR, %struct.GPR* %25477, i32 0, i32 1
  %25479 = getelementptr inbounds %struct.Reg, %struct.Reg* %25478, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %25479 to i64*
  %25480 = load i64, i64* %RAX.i236
  %25481 = load i32, i32* %EAX.i235
  %25482 = zext i32 %25481 to i64
  %25483 = load i64, i64* %PC.i234
  %25484 = add i64 %25483, 2
  store i64 %25484, i64* %PC.i234
  %25485 = xor i64 %25482, %25480
  %25486 = trunc i64 %25485 to i32
  %25487 = and i64 %25485, 4294967295
  store i64 %25487, i64* %RAX.i236, align 8
  %25488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %25488, align 1
  %25489 = and i32 %25486, 255
  %25490 = call i32 @llvm.ctpop.i32(i32 %25489)
  %25491 = trunc i32 %25490 to i8
  %25492 = and i8 %25491, 1
  %25493 = xor i8 %25492, 1
  %25494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25493, i8* %25494, align 1
  %25495 = icmp eq i32 %25486, 0
  %25496 = zext i1 %25495 to i8
  %25497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25496, i8* %25497, align 1
  %25498 = lshr i32 %25486, 31
  %25499 = trunc i32 %25498 to i8
  %25500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25499, i8* %25500, align 1
  %25501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25501, align 1
  %25502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25502, align 1
  store %struct.Memory* %loadMem_40d0fa, %struct.Memory** %MEMORY
  %loadMem_40d0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %25503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25504 = getelementptr inbounds %struct.GPR, %struct.GPR* %25503, i32 0, i32 33
  %25505 = getelementptr inbounds %struct.Reg, %struct.Reg* %25504, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %25505 to i64*
  %25506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25507 = getelementptr inbounds %struct.GPR, %struct.GPR* %25506, i32 0, i32 1
  %25508 = getelementptr inbounds %struct.Reg, %struct.Reg* %25507, i32 0, i32 0
  %EAX.i232 = bitcast %union.anon* %25508 to i32*
  %25509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25510 = getelementptr inbounds %struct.GPR, %struct.GPR* %25509, i32 0, i32 15
  %25511 = getelementptr inbounds %struct.Reg, %struct.Reg* %25510, i32 0, i32 0
  %RBP.i233 = bitcast %union.anon* %25511 to i64*
  %25512 = load i64, i64* %RBP.i233
  %25513 = sub i64 %25512, 404
  %25514 = load i32, i32* %EAX.i232
  %25515 = zext i32 %25514 to i64
  %25516 = load i64, i64* %PC.i231
  %25517 = add i64 %25516, 6
  store i64 %25517, i64* %PC.i231
  %25518 = inttoptr i64 %25513 to i32*
  store i32 %25514, i32* %25518
  store %struct.Memory* %loadMem_40d0fc, %struct.Memory** %MEMORY
  %loadMem_40d102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25520 = getelementptr inbounds %struct.GPR, %struct.GPR* %25519, i32 0, i32 33
  %25521 = getelementptr inbounds %struct.Reg, %struct.Reg* %25520, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %25521 to i64*
  %25522 = load i64, i64* %PC.i230
  %25523 = add i64 %25522, 33
  %25524 = load i64, i64* %PC.i230
  %25525 = add i64 %25524, 5
  store i64 %25525, i64* %PC.i230
  %25526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25523, i64* %25526, align 8
  store %struct.Memory* %loadMem_40d102, %struct.Memory** %MEMORY
  br label %block_.L_40d123

block_.L_40d107:                                  ; preds = %block_.L_40d09f
  %loadMem_40d107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25528 = getelementptr inbounds %struct.GPR, %struct.GPR* %25527, i32 0, i32 33
  %25529 = getelementptr inbounds %struct.Reg, %struct.Reg* %25528, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %25529 to i64*
  %25530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25531 = getelementptr inbounds %struct.GPR, %struct.GPR* %25530, i32 0, i32 1
  %25532 = getelementptr inbounds %struct.Reg, %struct.Reg* %25531, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %25532 to i64*
  %25533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25534 = getelementptr inbounds %struct.GPR, %struct.GPR* %25533, i32 0, i32 15
  %25535 = getelementptr inbounds %struct.Reg, %struct.Reg* %25534, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %25535 to i64*
  %25536 = load i64, i64* %RBP.i229
  %25537 = sub i64 %25536, 24
  %25538 = load i64, i64* %PC.i227
  %25539 = add i64 %25538, 4
  store i64 %25539, i64* %PC.i227
  %25540 = inttoptr i64 %25537 to i32*
  %25541 = load i32, i32* %25540
  %25542 = sext i32 %25541 to i64
  store i64 %25542, i64* %RAX.i228, align 8
  store %struct.Memory* %loadMem_40d107, %struct.Memory** %MEMORY
  %loadMem_40d10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %25543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25544 = getelementptr inbounds %struct.GPR, %struct.GPR* %25543, i32 0, i32 33
  %25545 = getelementptr inbounds %struct.Reg, %struct.Reg* %25544, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %25545 to i64*
  %25546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25547 = getelementptr inbounds %struct.GPR, %struct.GPR* %25546, i32 0, i32 1
  %25548 = getelementptr inbounds %struct.Reg, %struct.Reg* %25547, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %25548 to i64*
  %25549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25550 = getelementptr inbounds %struct.GPR, %struct.GPR* %25549, i32 0, i32 5
  %25551 = getelementptr inbounds %struct.Reg, %struct.Reg* %25550, i32 0, i32 0
  %RCX.i225 = bitcast %union.anon* %25551 to i64*
  %25552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25553 = getelementptr inbounds %struct.GPR, %struct.GPR* %25552, i32 0, i32 15
  %25554 = getelementptr inbounds %struct.Reg, %struct.Reg* %25553, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %25554 to i64*
  %25555 = load i64, i64* %RBP.i226
  %25556 = load i64, i64* %RAX.i224
  %25557 = mul i64 %25556, 4
  %25558 = add i64 %25555, -80
  %25559 = add i64 %25558, %25557
  %25560 = load i64, i64* %PC.i223
  %25561 = add i64 %25560, 4
  store i64 %25561, i64* %PC.i223
  %25562 = inttoptr i64 %25559 to i32*
  %25563 = load i32, i32* %25562
  %25564 = zext i32 %25563 to i64
  store i64 %25564, i64* %RCX.i225, align 8
  store %struct.Memory* %loadMem_40d10b, %struct.Memory** %MEMORY
  %loadMem_40d10f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25566 = getelementptr inbounds %struct.GPR, %struct.GPR* %25565, i32 0, i32 33
  %25567 = getelementptr inbounds %struct.Reg, %struct.Reg* %25566, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %25567 to i64*
  %25568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25569 = getelementptr inbounds %struct.GPR, %struct.GPR* %25568, i32 0, i32 1
  %25570 = getelementptr inbounds %struct.Reg, %struct.Reg* %25569, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %25570 to i64*
  %25571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25572 = getelementptr inbounds %struct.GPR, %struct.GPR* %25571, i32 0, i32 15
  %25573 = getelementptr inbounds %struct.Reg, %struct.Reg* %25572, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %25573 to i64*
  %25574 = load i64, i64* %RBP.i222
  %25575 = sub i64 %25574, 32
  %25576 = load i64, i64* %PC.i220
  %25577 = add i64 %25576, 4
  store i64 %25577, i64* %PC.i220
  %25578 = inttoptr i64 %25575 to i32*
  %25579 = load i32, i32* %25578
  %25580 = sext i32 %25579 to i64
  store i64 %25580, i64* %RAX.i221, align 8
  store %struct.Memory* %loadMem_40d10f, %struct.Memory** %MEMORY
  %loadMem_40d113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25582 = getelementptr inbounds %struct.GPR, %struct.GPR* %25581, i32 0, i32 33
  %25583 = getelementptr inbounds %struct.Reg, %struct.Reg* %25582, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %25583 to i64*
  %25584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25585 = getelementptr inbounds %struct.GPR, %struct.GPR* %25584, i32 0, i32 1
  %25586 = getelementptr inbounds %struct.Reg, %struct.Reg* %25585, i32 0, i32 0
  %RAX.i217 = bitcast %union.anon* %25586 to i64*
  %25587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25588 = getelementptr inbounds %struct.GPR, %struct.GPR* %25587, i32 0, i32 5
  %25589 = getelementptr inbounds %struct.Reg, %struct.Reg* %25588, i32 0, i32 0
  %RCX.i218 = bitcast %union.anon* %25589 to i64*
  %25590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25591 = getelementptr inbounds %struct.GPR, %struct.GPR* %25590, i32 0, i32 15
  %25592 = getelementptr inbounds %struct.Reg, %struct.Reg* %25591, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %25592 to i64*
  %25593 = load i64, i64* %RCX.i218
  %25594 = load i64, i64* %RBP.i219
  %25595 = load i64, i64* %RAX.i217
  %25596 = mul i64 %25595, 4
  %25597 = add i64 %25594, -80
  %25598 = add i64 %25597, %25596
  %25599 = load i64, i64* %PC.i216
  %25600 = add i64 %25599, 4
  store i64 %25600, i64* %PC.i216
  %25601 = trunc i64 %25593 to i32
  %25602 = inttoptr i64 %25598 to i32*
  %25603 = load i32, i32* %25602
  %25604 = sub i32 %25601, %25603
  %25605 = zext i32 %25604 to i64
  store i64 %25605, i64* %RCX.i218, align 8
  %25606 = icmp ult i32 %25601, %25603
  %25607 = zext i1 %25606 to i8
  %25608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25607, i8* %25608, align 1
  %25609 = and i32 %25604, 255
  %25610 = call i32 @llvm.ctpop.i32(i32 %25609)
  %25611 = trunc i32 %25610 to i8
  %25612 = and i8 %25611, 1
  %25613 = xor i8 %25612, 1
  %25614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25613, i8* %25614, align 1
  %25615 = xor i32 %25603, %25601
  %25616 = xor i32 %25615, %25604
  %25617 = lshr i32 %25616, 4
  %25618 = trunc i32 %25617 to i8
  %25619 = and i8 %25618, 1
  %25620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25619, i8* %25620, align 1
  %25621 = icmp eq i32 %25604, 0
  %25622 = zext i1 %25621 to i8
  %25623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25622, i8* %25623, align 1
  %25624 = lshr i32 %25604, 31
  %25625 = trunc i32 %25624 to i8
  %25626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25625, i8* %25626, align 1
  %25627 = lshr i32 %25601, 31
  %25628 = lshr i32 %25603, 31
  %25629 = xor i32 %25628, %25627
  %25630 = xor i32 %25624, %25627
  %25631 = add i32 %25630, %25629
  %25632 = icmp eq i32 %25631, 2
  %25633 = zext i1 %25632 to i8
  %25634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25633, i8* %25634, align 1
  store %struct.Memory* %loadMem_40d113, %struct.Memory** %MEMORY
  %loadMem_40d117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25636 = getelementptr inbounds %struct.GPR, %struct.GPR* %25635, i32 0, i32 33
  %25637 = getelementptr inbounds %struct.Reg, %struct.Reg* %25636, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %25637 to i64*
  %25638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25639 = getelementptr inbounds %struct.GPR, %struct.GPR* %25638, i32 0, i32 5
  %25640 = getelementptr inbounds %struct.Reg, %struct.Reg* %25639, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %25640 to i64*
  %25641 = load i64, i64* %RCX.i215
  %25642 = load i64, i64* %PC.i214
  %25643 = add i64 %25642, 3
  store i64 %25643, i64* %PC.i214
  %25644 = trunc i64 %25641 to i32
  %25645 = add i32 32, %25644
  %25646 = zext i32 %25645 to i64
  store i64 %25646, i64* %RCX.i215, align 8
  %25647 = icmp ult i32 %25645, %25644
  %25648 = icmp ult i32 %25645, 32
  %25649 = or i1 %25647, %25648
  %25650 = zext i1 %25649 to i8
  %25651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25650, i8* %25651, align 1
  %25652 = and i32 %25645, 255
  %25653 = call i32 @llvm.ctpop.i32(i32 %25652)
  %25654 = trunc i32 %25653 to i8
  %25655 = and i8 %25654, 1
  %25656 = xor i8 %25655, 1
  %25657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25656, i8* %25657, align 1
  %25658 = xor i64 32, %25641
  %25659 = trunc i64 %25658 to i32
  %25660 = xor i32 %25659, %25645
  %25661 = lshr i32 %25660, 4
  %25662 = trunc i32 %25661 to i8
  %25663 = and i8 %25662, 1
  %25664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25663, i8* %25664, align 1
  %25665 = icmp eq i32 %25645, 0
  %25666 = zext i1 %25665 to i8
  %25667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25666, i8* %25667, align 1
  %25668 = lshr i32 %25645, 31
  %25669 = trunc i32 %25668 to i8
  %25670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25669, i8* %25670, align 1
  %25671 = lshr i32 %25644, 31
  %25672 = xor i32 %25668, %25671
  %25673 = add i32 %25672, %25668
  %25674 = icmp eq i32 %25673, 2
  %25675 = zext i1 %25674 to i8
  %25676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25675, i8* %25676, align 1
  store %struct.Memory* %loadMem_40d117, %struct.Memory** %MEMORY
  %loadMem_40d11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25678 = getelementptr inbounds %struct.GPR, %struct.GPR* %25677, i32 0, i32 33
  %25679 = getelementptr inbounds %struct.Reg, %struct.Reg* %25678, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %25679 to i64*
  %25680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25681 = getelementptr inbounds %struct.GPR, %struct.GPR* %25680, i32 0, i32 5
  %25682 = getelementptr inbounds %struct.Reg, %struct.Reg* %25681, i32 0, i32 0
  %RCX.i213 = bitcast %union.anon* %25682 to i64*
  %25683 = load i64, i64* %RCX.i213
  %25684 = load i64, i64* %PC.i212
  %25685 = add i64 %25684, 3
  store i64 %25685, i64* %PC.i212
  %25686 = shl i64 %25683, 32
  %25687 = ashr exact i64 %25686, 32
  %25688 = ashr i64 %25687, 5
  %25689 = lshr i64 %25688, 1
  %25690 = trunc i64 %25688 to i8
  %25691 = and i8 %25690, 1
  %25692 = trunc i64 %25689 to i32
  %25693 = and i64 %25689, 4294967295
  store i64 %25693, i64* %RCX.i213, align 8
  %25694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25691, i8* %25694, align 1
  %25695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %25696 = and i32 %25692, 255
  %25697 = call i32 @llvm.ctpop.i32(i32 %25696)
  %25698 = trunc i32 %25697 to i8
  %25699 = and i8 %25698, 1
  %25700 = xor i8 %25699, 1
  store i8 %25700, i8* %25695, align 1
  %25701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25701, align 1
  %25702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %25703 = icmp eq i32 %25692, 0
  %25704 = zext i1 %25703 to i8
  store i8 %25704, i8* %25702, align 1
  %25705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25706 = lshr i32 %25692, 31
  %25707 = trunc i32 %25706 to i8
  store i8 %25707, i8* %25705, align 1
  %25708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25708, align 1
  store %struct.Memory* %loadMem_40d11a, %struct.Memory** %MEMORY
  %loadMem_40d11d = load %struct.Memory*, %struct.Memory** %MEMORY
  %25709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25710 = getelementptr inbounds %struct.GPR, %struct.GPR* %25709, i32 0, i32 33
  %25711 = getelementptr inbounds %struct.Reg, %struct.Reg* %25710, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %25711 to i64*
  %25712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25713 = getelementptr inbounds %struct.GPR, %struct.GPR* %25712, i32 0, i32 5
  %25714 = getelementptr inbounds %struct.Reg, %struct.Reg* %25713, i32 0, i32 0
  %ECX.i210 = bitcast %union.anon* %25714 to i32*
  %25715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25716 = getelementptr inbounds %struct.GPR, %struct.GPR* %25715, i32 0, i32 15
  %25717 = getelementptr inbounds %struct.Reg, %struct.Reg* %25716, i32 0, i32 0
  %RBP.i211 = bitcast %union.anon* %25717 to i64*
  %25718 = load i64, i64* %RBP.i211
  %25719 = sub i64 %25718, 404
  %25720 = load i32, i32* %ECX.i210
  %25721 = zext i32 %25720 to i64
  %25722 = load i64, i64* %PC.i209
  %25723 = add i64 %25722, 6
  store i64 %25723, i64* %PC.i209
  %25724 = inttoptr i64 %25719 to i32*
  store i32 %25720, i32* %25724
  store %struct.Memory* %loadMem_40d11d, %struct.Memory** %MEMORY
  br label %block_.L_40d123

block_.L_40d123:                                  ; preds = %block_.L_40d107, %block_40d0fa
  %loadMem_40d123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25726 = getelementptr inbounds %struct.GPR, %struct.GPR* %25725, i32 0, i32 33
  %25727 = getelementptr inbounds %struct.Reg, %struct.Reg* %25726, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %25727 to i64*
  %25728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25729 = getelementptr inbounds %struct.GPR, %struct.GPR* %25728, i32 0, i32 1
  %25730 = getelementptr inbounds %struct.Reg, %struct.Reg* %25729, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %25730 to i64*
  %25731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25732 = getelementptr inbounds %struct.GPR, %struct.GPR* %25731, i32 0, i32 15
  %25733 = getelementptr inbounds %struct.Reg, %struct.Reg* %25732, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %25733 to i64*
  %25734 = load i64, i64* %RBP.i208
  %25735 = sub i64 %25734, 404
  %25736 = load i64, i64* %PC.i206
  %25737 = add i64 %25736, 6
  store i64 %25737, i64* %PC.i206
  %25738 = inttoptr i64 %25735 to i32*
  %25739 = load i32, i32* %25738
  %25740 = zext i32 %25739 to i64
  store i64 %25740, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_40d123, %struct.Memory** %MEMORY
  %loadMem_40d129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25742 = getelementptr inbounds %struct.GPR, %struct.GPR* %25741, i32 0, i32 33
  %25743 = getelementptr inbounds %struct.Reg, %struct.Reg* %25742, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %25743 to i64*
  %25744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25745 = getelementptr inbounds %struct.GPR, %struct.GPR* %25744, i32 0, i32 5
  %25746 = getelementptr inbounds %struct.Reg, %struct.Reg* %25745, i32 0, i32 0
  %RCX.i204 = bitcast %union.anon* %25746 to i64*
  %25747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25748 = getelementptr inbounds %struct.GPR, %struct.GPR* %25747, i32 0, i32 15
  %25749 = getelementptr inbounds %struct.Reg, %struct.Reg* %25748, i32 0, i32 0
  %RBP.i205 = bitcast %union.anon* %25749 to i64*
  %25750 = load i64, i64* %RBP.i205
  %25751 = sub i64 %25750, 400
  %25752 = load i64, i64* %PC.i203
  %25753 = add i64 %25752, 6
  store i64 %25753, i64* %PC.i203
  %25754 = inttoptr i64 %25751 to i32*
  %25755 = load i32, i32* %25754
  %25756 = zext i32 %25755 to i64
  store i64 %25756, i64* %RCX.i204, align 8
  store %struct.Memory* %loadMem_40d129, %struct.Memory** %MEMORY
  %loadMem_40d12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25758 = getelementptr inbounds %struct.GPR, %struct.GPR* %25757, i32 0, i32 33
  %25759 = getelementptr inbounds %struct.Reg, %struct.Reg* %25758, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %25759 to i64*
  %25760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25761 = getelementptr inbounds %struct.GPR, %struct.GPR* %25760, i32 0, i32 1
  %25762 = getelementptr inbounds %struct.Reg, %struct.Reg* %25761, i32 0, i32 0
  %EAX.i201 = bitcast %union.anon* %25762 to i32*
  %25763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25764 = getelementptr inbounds %struct.GPR, %struct.GPR* %25763, i32 0, i32 5
  %25765 = getelementptr inbounds %struct.Reg, %struct.Reg* %25764, i32 0, i32 0
  %ECX.i202 = bitcast %union.anon* %25765 to i32*
  %25766 = load i32, i32* %ECX.i202
  %25767 = zext i32 %25766 to i64
  %25768 = load i32, i32* %EAX.i201
  %25769 = zext i32 %25768 to i64
  %25770 = load i64, i64* %PC.i200
  %25771 = add i64 %25770, 2
  store i64 %25771, i64* %PC.i200
  %25772 = sub i32 %25766, %25768
  %25773 = icmp ult i32 %25766, %25768
  %25774 = zext i1 %25773 to i8
  %25775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25774, i8* %25775, align 1
  %25776 = and i32 %25772, 255
  %25777 = call i32 @llvm.ctpop.i32(i32 %25776)
  %25778 = trunc i32 %25777 to i8
  %25779 = and i8 %25778, 1
  %25780 = xor i8 %25779, 1
  %25781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25780, i8* %25781, align 1
  %25782 = xor i64 %25769, %25767
  %25783 = trunc i64 %25782 to i32
  %25784 = xor i32 %25783, %25772
  %25785 = lshr i32 %25784, 4
  %25786 = trunc i32 %25785 to i8
  %25787 = and i8 %25786, 1
  %25788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25787, i8* %25788, align 1
  %25789 = icmp eq i32 %25772, 0
  %25790 = zext i1 %25789 to i8
  %25791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25790, i8* %25791, align 1
  %25792 = lshr i32 %25772, 31
  %25793 = trunc i32 %25792 to i8
  %25794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25793, i8* %25794, align 1
  %25795 = lshr i32 %25766, 31
  %25796 = lshr i32 %25768, 31
  %25797 = xor i32 %25796, %25795
  %25798 = xor i32 %25792, %25795
  %25799 = add i32 %25798, %25797
  %25800 = icmp eq i32 %25799, 2
  %25801 = zext i1 %25800 to i8
  %25802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %25801, i8* %25802, align 1
  store %struct.Memory* %loadMem_40d12f, %struct.Memory** %MEMORY
  %loadMem_40d131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25804 = getelementptr inbounds %struct.GPR, %struct.GPR* %25803, i32 0, i32 33
  %25805 = getelementptr inbounds %struct.Reg, %struct.Reg* %25804, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %25805 to i64*
  %25806 = load i64, i64* %PC.i199
  %25807 = add i64 %25806, 31
  %25808 = load i64, i64* %PC.i199
  %25809 = add i64 %25808, 6
  %25810 = load i64, i64* %PC.i199
  %25811 = add i64 %25810, 6
  store i64 %25811, i64* %PC.i199
  %25812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %25813 = load i8, i8* %25812, align 1
  %25814 = icmp ne i8 %25813, 0
  %25815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %25816 = load i8, i8* %25815, align 1
  %25817 = icmp ne i8 %25816, 0
  %25818 = xor i1 %25814, %25817
  %25819 = xor i1 %25818, true
  %25820 = zext i1 %25819 to i8
  store i8 %25820, i8* %BRANCH_TAKEN, align 1
  %25821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25822 = select i1 %25818, i64 %25809, i64 %25807
  store i64 %25822, i64* %25821, align 8
  store %struct.Memory* %loadMem_40d131, %struct.Memory** %MEMORY
  %loadBr_40d131 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d131 = icmp eq i8 %loadBr_40d131, 1
  br i1 %cmpBr_40d131, label %block_.L_40d150, label %block_40d137

block_40d137:                                     ; preds = %block_.L_40d123
  %loadMem_40d137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25824 = getelementptr inbounds %struct.GPR, %struct.GPR* %25823, i32 0, i32 33
  %25825 = getelementptr inbounds %struct.Reg, %struct.Reg* %25824, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %25825 to i64*
  %25826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25827 = getelementptr inbounds %struct.GPR, %struct.GPR* %25826, i32 0, i32 1
  %25828 = getelementptr inbounds %struct.Reg, %struct.Reg* %25827, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %25828 to i64*
  %25829 = load i64, i64* %PC.i197
  %25830 = add i64 %25829, 8
  store i64 %25830, i64* %PC.i197
  %25831 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %25831, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_40d137, %struct.Memory** %MEMORY
  %loadMem_40d13f = load %struct.Memory*, %struct.Memory** %MEMORY
  %25832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25833 = getelementptr inbounds %struct.GPR, %struct.GPR* %25832, i32 0, i32 33
  %25834 = getelementptr inbounds %struct.Reg, %struct.Reg* %25833, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %25834 to i64*
  %25835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25836 = getelementptr inbounds %struct.GPR, %struct.GPR* %25835, i32 0, i32 1
  %25837 = getelementptr inbounds %struct.Reg, %struct.Reg* %25836, i32 0, i32 0
  %RAX.i195 = bitcast %union.anon* %25837 to i64*
  %25838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25839 = getelementptr inbounds %struct.GPR, %struct.GPR* %25838, i32 0, i32 5
  %25840 = getelementptr inbounds %struct.Reg, %struct.Reg* %25839, i32 0, i32 0
  %RCX.i196 = bitcast %union.anon* %25840 to i64*
  %25841 = load i64, i64* %RAX.i195
  %25842 = add i64 %25841, 72684
  %25843 = load i64, i64* %PC.i194
  %25844 = add i64 %25843, 6
  store i64 %25844, i64* %PC.i194
  %25845 = inttoptr i64 %25842 to i32*
  %25846 = load i32, i32* %25845
  %25847 = zext i32 %25846 to i64
  store i64 %25847, i64* %RCX.i196, align 8
  store %struct.Memory* %loadMem_40d13f, %struct.Memory** %MEMORY
  %loadMem_40d145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25849 = getelementptr inbounds %struct.GPR, %struct.GPR* %25848, i32 0, i32 33
  %25850 = getelementptr inbounds %struct.Reg, %struct.Reg* %25849, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %25850 to i64*
  %25851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25852 = getelementptr inbounds %struct.GPR, %struct.GPR* %25851, i32 0, i32 5
  %25853 = getelementptr inbounds %struct.Reg, %struct.Reg* %25852, i32 0, i32 0
  %ECX.i192 = bitcast %union.anon* %25853 to i32*
  %25854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25855 = getelementptr inbounds %struct.GPR, %struct.GPR* %25854, i32 0, i32 15
  %25856 = getelementptr inbounds %struct.Reg, %struct.Reg* %25855, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %25856 to i64*
  %25857 = load i64, i64* %RBP.i193
  %25858 = sub i64 %25857, 408
  %25859 = load i32, i32* %ECX.i192
  %25860 = zext i32 %25859 to i64
  %25861 = load i64, i64* %PC.i191
  %25862 = add i64 %25861, 6
  store i64 %25862, i64* %PC.i191
  %25863 = inttoptr i64 %25858 to i32*
  store i32 %25859, i32* %25863
  store %struct.Memory* %loadMem_40d145, %struct.Memory** %MEMORY
  %loadMem_40d14b = load %struct.Memory*, %struct.Memory** %MEMORY
  %25864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25865 = getelementptr inbounds %struct.GPR, %struct.GPR* %25864, i32 0, i32 33
  %25866 = getelementptr inbounds %struct.Reg, %struct.Reg* %25865, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %25866 to i64*
  %25867 = load i64, i64* %PC.i190
  %25868 = add i64 %25867, 90
  %25869 = load i64, i64* %PC.i190
  %25870 = add i64 %25869, 5
  store i64 %25870, i64* %PC.i190
  %25871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %25868, i64* %25871, align 8
  store %struct.Memory* %loadMem_40d14b, %struct.Memory** %MEMORY
  br label %block_.L_40d1a5

block_.L_40d150:                                  ; preds = %block_.L_40d123
  %loadMem_40d150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25873 = getelementptr inbounds %struct.GPR, %struct.GPR* %25872, i32 0, i32 33
  %25874 = getelementptr inbounds %struct.Reg, %struct.Reg* %25873, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %25874 to i64*
  %25875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25876 = getelementptr inbounds %struct.GPR, %struct.GPR* %25875, i32 0, i32 1
  %25877 = getelementptr inbounds %struct.Reg, %struct.Reg* %25876, i32 0, i32 0
  %EAX.i188 = bitcast %union.anon* %25877 to i32*
  %25878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25879 = getelementptr inbounds %struct.GPR, %struct.GPR* %25878, i32 0, i32 1
  %25880 = getelementptr inbounds %struct.Reg, %struct.Reg* %25879, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %25880 to i64*
  %25881 = load i64, i64* %RAX.i189
  %25882 = load i32, i32* %EAX.i188
  %25883 = zext i32 %25882 to i64
  %25884 = load i64, i64* %PC.i187
  %25885 = add i64 %25884, 2
  store i64 %25885, i64* %PC.i187
  %25886 = xor i64 %25883, %25881
  %25887 = trunc i64 %25886 to i32
  %25888 = and i64 %25886, 4294967295
  store i64 %25888, i64* %RAX.i189, align 8
  %25889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %25889, align 1
  %25890 = and i32 %25887, 255
  %25891 = call i32 @llvm.ctpop.i32(i32 %25890)
  %25892 = trunc i32 %25891 to i8
  %25893 = and i8 %25892, 1
  %25894 = xor i8 %25893, 1
  %25895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25894, i8* %25895, align 1
  %25896 = icmp eq i32 %25887, 0
  %25897 = zext i1 %25896 to i8
  %25898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25897, i8* %25898, align 1
  %25899 = lshr i32 %25887, 31
  %25900 = trunc i32 %25899 to i8
  %25901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25900, i8* %25901, align 1
  %25902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %25902, align 1
  %25903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25903, align 1
  store %struct.Memory* %loadMem_40d150, %struct.Memory** %MEMORY
  %loadMem_40d152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25905 = getelementptr inbounds %struct.GPR, %struct.GPR* %25904, i32 0, i32 33
  %25906 = getelementptr inbounds %struct.Reg, %struct.Reg* %25905, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %25906 to i64*
  %25907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25908 = getelementptr inbounds %struct.GPR, %struct.GPR* %25907, i32 0, i32 5
  %25909 = getelementptr inbounds %struct.Reg, %struct.Reg* %25908, i32 0, i32 0
  %RCX.i185 = bitcast %union.anon* %25909 to i64*
  %25910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25911 = getelementptr inbounds %struct.GPR, %struct.GPR* %25910, i32 0, i32 15
  %25912 = getelementptr inbounds %struct.Reg, %struct.Reg* %25911, i32 0, i32 0
  %RBP.i186 = bitcast %union.anon* %25912 to i64*
  %25913 = load i64, i64* %RBP.i186
  %25914 = sub i64 %25913, 24
  %25915 = load i64, i64* %PC.i184
  %25916 = add i64 %25915, 4
  store i64 %25916, i64* %PC.i184
  %25917 = inttoptr i64 %25914 to i32*
  %25918 = load i32, i32* %25917
  %25919 = sext i32 %25918 to i64
  store i64 %25919, i64* %RCX.i185, align 8
  store %struct.Memory* %loadMem_40d152, %struct.Memory** %MEMORY
  %loadMem_40d156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %25920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25921 = getelementptr inbounds %struct.GPR, %struct.GPR* %25920, i32 0, i32 33
  %25922 = getelementptr inbounds %struct.Reg, %struct.Reg* %25921, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %25922 to i64*
  %25923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25924 = getelementptr inbounds %struct.GPR, %struct.GPR* %25923, i32 0, i32 5
  %25925 = getelementptr inbounds %struct.Reg, %struct.Reg* %25924, i32 0, i32 0
  %RCX.i181 = bitcast %union.anon* %25925 to i64*
  %25926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25927 = getelementptr inbounds %struct.GPR, %struct.GPR* %25926, i32 0, i32 7
  %25928 = getelementptr inbounds %struct.Reg, %struct.Reg* %25927, i32 0, i32 0
  %RDX.i182 = bitcast %union.anon* %25928 to i64*
  %25929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25930 = getelementptr inbounds %struct.GPR, %struct.GPR* %25929, i32 0, i32 15
  %25931 = getelementptr inbounds %struct.Reg, %struct.Reg* %25930, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %25931 to i64*
  %25932 = load i64, i64* %RBP.i183
  %25933 = load i64, i64* %RCX.i181
  %25934 = mul i64 %25933, 4
  %25935 = add i64 %25932, -80
  %25936 = add i64 %25935, %25934
  %25937 = load i64, i64* %PC.i180
  %25938 = add i64 %25937, 4
  store i64 %25938, i64* %PC.i180
  %25939 = inttoptr i64 %25936 to i32*
  %25940 = load i32, i32* %25939
  %25941 = zext i32 %25940 to i64
  store i64 %25941, i64* %RDX.i182, align 8
  store %struct.Memory* %loadMem_40d156, %struct.Memory** %MEMORY
  %loadMem_40d15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %25942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25943 = getelementptr inbounds %struct.GPR, %struct.GPR* %25942, i32 0, i32 33
  %25944 = getelementptr inbounds %struct.Reg, %struct.Reg* %25943, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %25944 to i64*
  %25945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25946 = getelementptr inbounds %struct.GPR, %struct.GPR* %25945, i32 0, i32 5
  %25947 = getelementptr inbounds %struct.Reg, %struct.Reg* %25946, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %25947 to i64*
  %25948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25949 = getelementptr inbounds %struct.GPR, %struct.GPR* %25948, i32 0, i32 15
  %25950 = getelementptr inbounds %struct.Reg, %struct.Reg* %25949, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %25950 to i64*
  %25951 = load i64, i64* %RBP.i179
  %25952 = sub i64 %25951, 32
  %25953 = load i64, i64* %PC.i177
  %25954 = add i64 %25953, 4
  store i64 %25954, i64* %PC.i177
  %25955 = inttoptr i64 %25952 to i32*
  %25956 = load i32, i32* %25955
  %25957 = sext i32 %25956 to i64
  store i64 %25957, i64* %RCX.i178, align 8
  store %struct.Memory* %loadMem_40d15a, %struct.Memory** %MEMORY
  %loadMem_40d15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %25958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25959 = getelementptr inbounds %struct.GPR, %struct.GPR* %25958, i32 0, i32 33
  %25960 = getelementptr inbounds %struct.Reg, %struct.Reg* %25959, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %25960 to i64*
  %25961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25962 = getelementptr inbounds %struct.GPR, %struct.GPR* %25961, i32 0, i32 5
  %25963 = getelementptr inbounds %struct.Reg, %struct.Reg* %25962, i32 0, i32 0
  %RCX.i174 = bitcast %union.anon* %25963 to i64*
  %25964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25965 = getelementptr inbounds %struct.GPR, %struct.GPR* %25964, i32 0, i32 7
  %25966 = getelementptr inbounds %struct.Reg, %struct.Reg* %25965, i32 0, i32 0
  %RDX.i175 = bitcast %union.anon* %25966 to i64*
  %25967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25968 = getelementptr inbounds %struct.GPR, %struct.GPR* %25967, i32 0, i32 15
  %25969 = getelementptr inbounds %struct.Reg, %struct.Reg* %25968, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %25969 to i64*
  %25970 = load i64, i64* %RDX.i175
  %25971 = load i64, i64* %RBP.i176
  %25972 = load i64, i64* %RCX.i174
  %25973 = mul i64 %25972, 4
  %25974 = add i64 %25971, -80
  %25975 = add i64 %25974, %25973
  %25976 = load i64, i64* %PC.i173
  %25977 = add i64 %25976, 4
  store i64 %25977, i64* %PC.i173
  %25978 = trunc i64 %25970 to i32
  %25979 = inttoptr i64 %25975 to i32*
  %25980 = load i32, i32* %25979
  %25981 = sub i32 %25978, %25980
  %25982 = zext i32 %25981 to i64
  store i64 %25982, i64* %RDX.i175, align 8
  %25983 = icmp ult i32 %25978, %25980
  %25984 = zext i1 %25983 to i8
  %25985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25984, i8* %25985, align 1
  %25986 = and i32 %25981, 255
  %25987 = call i32 @llvm.ctpop.i32(i32 %25986)
  %25988 = trunc i32 %25987 to i8
  %25989 = and i8 %25988, 1
  %25990 = xor i8 %25989, 1
  %25991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25990, i8* %25991, align 1
  %25992 = xor i32 %25980, %25978
  %25993 = xor i32 %25992, %25981
  %25994 = lshr i32 %25993, 4
  %25995 = trunc i32 %25994 to i8
  %25996 = and i8 %25995, 1
  %25997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25996, i8* %25997, align 1
  %25998 = icmp eq i32 %25981, 0
  %25999 = zext i1 %25998 to i8
  %26000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25999, i8* %26000, align 1
  %26001 = lshr i32 %25981, 31
  %26002 = trunc i32 %26001 to i8
  %26003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26002, i8* %26003, align 1
  %26004 = lshr i32 %25978, 31
  %26005 = lshr i32 %25980, 31
  %26006 = xor i32 %26005, %26004
  %26007 = xor i32 %26001, %26004
  %26008 = add i32 %26007, %26006
  %26009 = icmp eq i32 %26008, 2
  %26010 = zext i1 %26009 to i8
  %26011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26010, i8* %26011, align 1
  store %struct.Memory* %loadMem_40d15e, %struct.Memory** %MEMORY
  %loadMem_40d162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26013 = getelementptr inbounds %struct.GPR, %struct.GPR* %26012, i32 0, i32 33
  %26014 = getelementptr inbounds %struct.Reg, %struct.Reg* %26013, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %26014 to i64*
  %26015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26016 = getelementptr inbounds %struct.GPR, %struct.GPR* %26015, i32 0, i32 7
  %26017 = getelementptr inbounds %struct.Reg, %struct.Reg* %26016, i32 0, i32 0
  %RDX.i172 = bitcast %union.anon* %26017 to i64*
  %26018 = load i64, i64* %RDX.i172
  %26019 = load i64, i64* %PC.i171
  %26020 = add i64 %26019, 3
  store i64 %26020, i64* %PC.i171
  %26021 = trunc i64 %26018 to i32
  %26022 = add i32 32, %26021
  %26023 = zext i32 %26022 to i64
  store i64 %26023, i64* %RDX.i172, align 8
  %26024 = icmp ult i32 %26022, %26021
  %26025 = icmp ult i32 %26022, 32
  %26026 = or i1 %26024, %26025
  %26027 = zext i1 %26026 to i8
  %26028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26027, i8* %26028, align 1
  %26029 = and i32 %26022, 255
  %26030 = call i32 @llvm.ctpop.i32(i32 %26029)
  %26031 = trunc i32 %26030 to i8
  %26032 = and i8 %26031, 1
  %26033 = xor i8 %26032, 1
  %26034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26033, i8* %26034, align 1
  %26035 = xor i64 32, %26018
  %26036 = trunc i64 %26035 to i32
  %26037 = xor i32 %26036, %26022
  %26038 = lshr i32 %26037, 4
  %26039 = trunc i32 %26038 to i8
  %26040 = and i8 %26039, 1
  %26041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26040, i8* %26041, align 1
  %26042 = icmp eq i32 %26022, 0
  %26043 = zext i1 %26042 to i8
  %26044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26043, i8* %26044, align 1
  %26045 = lshr i32 %26022, 31
  %26046 = trunc i32 %26045 to i8
  %26047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26046, i8* %26047, align 1
  %26048 = lshr i32 %26021, 31
  %26049 = xor i32 %26045, %26048
  %26050 = add i32 %26049, %26045
  %26051 = icmp eq i32 %26050, 2
  %26052 = zext i1 %26051 to i8
  %26053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26052, i8* %26053, align 1
  store %struct.Memory* %loadMem_40d162, %struct.Memory** %MEMORY
  %loadMem_40d165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26055 = getelementptr inbounds %struct.GPR, %struct.GPR* %26054, i32 0, i32 33
  %26056 = getelementptr inbounds %struct.Reg, %struct.Reg* %26055, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %26056 to i64*
  %26057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26058 = getelementptr inbounds %struct.GPR, %struct.GPR* %26057, i32 0, i32 7
  %26059 = getelementptr inbounds %struct.Reg, %struct.Reg* %26058, i32 0, i32 0
  %RDX.i170 = bitcast %union.anon* %26059 to i64*
  %26060 = load i64, i64* %RDX.i170
  %26061 = load i64, i64* %PC.i169
  %26062 = add i64 %26061, 3
  store i64 %26062, i64* %PC.i169
  %26063 = shl i64 %26060, 32
  %26064 = ashr exact i64 %26063, 32
  %26065 = ashr i64 %26064, 5
  %26066 = lshr i64 %26065, 1
  %26067 = trunc i64 %26065 to i8
  %26068 = and i8 %26067, 1
  %26069 = trunc i64 %26066 to i32
  %26070 = and i64 %26066, 4294967295
  store i64 %26070, i64* %RDX.i170, align 8
  %26071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26068, i8* %26071, align 1
  %26072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26073 = and i32 %26069, 255
  %26074 = call i32 @llvm.ctpop.i32(i32 %26073)
  %26075 = trunc i32 %26074 to i8
  %26076 = and i8 %26075, 1
  %26077 = xor i8 %26076, 1
  store i8 %26077, i8* %26072, align 1
  %26078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26078, align 1
  %26079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26080 = icmp eq i32 %26069, 0
  %26081 = zext i1 %26080 to i8
  store i8 %26081, i8* %26079, align 1
  %26082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26083 = lshr i32 %26069, 31
  %26084 = trunc i32 %26083 to i8
  store i8 %26084, i8* %26082, align 1
  %26085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26085, align 1
  store %struct.Memory* %loadMem_40d165, %struct.Memory** %MEMORY
  %loadMem_40d168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26087 = getelementptr inbounds %struct.GPR, %struct.GPR* %26086, i32 0, i32 33
  %26088 = getelementptr inbounds %struct.Reg, %struct.Reg* %26087, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %26088 to i64*
  %26089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26090 = getelementptr inbounds %struct.GPR, %struct.GPR* %26089, i32 0, i32 1
  %26091 = getelementptr inbounds %struct.Reg, %struct.Reg* %26090, i32 0, i32 0
  %EAX.i167 = bitcast %union.anon* %26091 to i32*
  %26092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26093 = getelementptr inbounds %struct.GPR, %struct.GPR* %26092, i32 0, i32 7
  %26094 = getelementptr inbounds %struct.Reg, %struct.Reg* %26093, i32 0, i32 0
  %EDX.i168 = bitcast %union.anon* %26094 to i32*
  %26095 = load i32, i32* %EAX.i167
  %26096 = zext i32 %26095 to i64
  %26097 = load i32, i32* %EDX.i168
  %26098 = zext i32 %26097 to i64
  %26099 = load i64, i64* %PC.i166
  %26100 = add i64 %26099, 2
  store i64 %26100, i64* %PC.i166
  %26101 = sub i32 %26095, %26097
  %26102 = icmp ult i32 %26095, %26097
  %26103 = zext i1 %26102 to i8
  %26104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26103, i8* %26104, align 1
  %26105 = and i32 %26101, 255
  %26106 = call i32 @llvm.ctpop.i32(i32 %26105)
  %26107 = trunc i32 %26106 to i8
  %26108 = and i8 %26107, 1
  %26109 = xor i8 %26108, 1
  %26110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26109, i8* %26110, align 1
  %26111 = xor i64 %26098, %26096
  %26112 = trunc i64 %26111 to i32
  %26113 = xor i32 %26112, %26101
  %26114 = lshr i32 %26113, 4
  %26115 = trunc i32 %26114 to i8
  %26116 = and i8 %26115, 1
  %26117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26116, i8* %26117, align 1
  %26118 = icmp eq i32 %26101, 0
  %26119 = zext i1 %26118 to i8
  %26120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26119, i8* %26120, align 1
  %26121 = lshr i32 %26101, 31
  %26122 = trunc i32 %26121 to i8
  %26123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26122, i8* %26123, align 1
  %26124 = lshr i32 %26095, 31
  %26125 = lshr i32 %26097, 31
  %26126 = xor i32 %26125, %26124
  %26127 = xor i32 %26121, %26124
  %26128 = add i32 %26127, %26126
  %26129 = icmp eq i32 %26128, 2
  %26130 = zext i1 %26129 to i8
  %26131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26130, i8* %26131, align 1
  store %struct.Memory* %loadMem_40d168, %struct.Memory** %MEMORY
  %loadMem_40d16a = load %struct.Memory*, %struct.Memory** %MEMORY
  %26132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26133 = getelementptr inbounds %struct.GPR, %struct.GPR* %26132, i32 0, i32 33
  %26134 = getelementptr inbounds %struct.Reg, %struct.Reg* %26133, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %26134 to i64*
  %26135 = load i64, i64* %PC.i165
  %26136 = add i64 %26135, 19
  %26137 = load i64, i64* %PC.i165
  %26138 = add i64 %26137, 6
  %26139 = load i64, i64* %PC.i165
  %26140 = add i64 %26139, 6
  store i64 %26140, i64* %PC.i165
  %26141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26142 = load i8, i8* %26141, align 1
  %26143 = icmp ne i8 %26142, 0
  %26144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26145 = load i8, i8* %26144, align 1
  %26146 = icmp ne i8 %26145, 0
  %26147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %26148 = load i8, i8* %26147, align 1
  %26149 = icmp ne i8 %26148, 0
  %26150 = xor i1 %26146, %26149
  %26151 = or i1 %26143, %26150
  %26152 = zext i1 %26151 to i8
  store i8 %26152, i8* %BRANCH_TAKEN, align 1
  %26153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26154 = select i1 %26151, i64 %26136, i64 %26138
  store i64 %26154, i64* %26153, align 8
  store %struct.Memory* %loadMem_40d16a, %struct.Memory** %MEMORY
  %loadBr_40d16a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d16a = icmp eq i8 %loadBr_40d16a, 1
  br i1 %cmpBr_40d16a, label %block_.L_40d17d, label %block_40d170

block_40d170:                                     ; preds = %block_.L_40d150
  %loadMem_40d170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26156 = getelementptr inbounds %struct.GPR, %struct.GPR* %26155, i32 0, i32 33
  %26157 = getelementptr inbounds %struct.Reg, %struct.Reg* %26156, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %26157 to i64*
  %26158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26159 = getelementptr inbounds %struct.GPR, %struct.GPR* %26158, i32 0, i32 1
  %26160 = getelementptr inbounds %struct.Reg, %struct.Reg* %26159, i32 0, i32 0
  %EAX.i163 = bitcast %union.anon* %26160 to i32*
  %26161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26162 = getelementptr inbounds %struct.GPR, %struct.GPR* %26161, i32 0, i32 1
  %26163 = getelementptr inbounds %struct.Reg, %struct.Reg* %26162, i32 0, i32 0
  %RAX.i164 = bitcast %union.anon* %26163 to i64*
  %26164 = load i64, i64* %RAX.i164
  %26165 = load i32, i32* %EAX.i163
  %26166 = zext i32 %26165 to i64
  %26167 = load i64, i64* %PC.i162
  %26168 = add i64 %26167, 2
  store i64 %26168, i64* %PC.i162
  %26169 = xor i64 %26166, %26164
  %26170 = trunc i64 %26169 to i32
  %26171 = and i64 %26169, 4294967295
  store i64 %26171, i64* %RAX.i164, align 8
  %26172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %26172, align 1
  %26173 = and i32 %26170, 255
  %26174 = call i32 @llvm.ctpop.i32(i32 %26173)
  %26175 = trunc i32 %26174 to i8
  %26176 = and i8 %26175, 1
  %26177 = xor i8 %26176, 1
  %26178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26177, i8* %26178, align 1
  %26179 = icmp eq i32 %26170, 0
  %26180 = zext i1 %26179 to i8
  %26181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26180, i8* %26181, align 1
  %26182 = lshr i32 %26170, 31
  %26183 = trunc i32 %26182 to i8
  %26184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26183, i8* %26184, align 1
  %26185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26185, align 1
  %26186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26186, align 1
  store %struct.Memory* %loadMem_40d170, %struct.Memory** %MEMORY
  %loadMem_40d172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26188 = getelementptr inbounds %struct.GPR, %struct.GPR* %26187, i32 0, i32 33
  %26189 = getelementptr inbounds %struct.Reg, %struct.Reg* %26188, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %26189 to i64*
  %26190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26191 = getelementptr inbounds %struct.GPR, %struct.GPR* %26190, i32 0, i32 1
  %26192 = getelementptr inbounds %struct.Reg, %struct.Reg* %26191, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %26192 to i32*
  %26193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26194 = getelementptr inbounds %struct.GPR, %struct.GPR* %26193, i32 0, i32 15
  %26195 = getelementptr inbounds %struct.Reg, %struct.Reg* %26194, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %26195 to i64*
  %26196 = load i64, i64* %RBP.i161
  %26197 = sub i64 %26196, 412
  %26198 = load i32, i32* %EAX.i160
  %26199 = zext i32 %26198 to i64
  %26200 = load i64, i64* %PC.i159
  %26201 = add i64 %26200, 6
  store i64 %26201, i64* %PC.i159
  %26202 = inttoptr i64 %26197 to i32*
  store i32 %26198, i32* %26202
  store %struct.Memory* %loadMem_40d172, %struct.Memory** %MEMORY
  %loadMem_40d178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26204 = getelementptr inbounds %struct.GPR, %struct.GPR* %26203, i32 0, i32 33
  %26205 = getelementptr inbounds %struct.Reg, %struct.Reg* %26204, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %26205 to i64*
  %26206 = load i64, i64* %PC.i158
  %26207 = add i64 %26206, 33
  %26208 = load i64, i64* %PC.i158
  %26209 = add i64 %26208, 5
  store i64 %26209, i64* %PC.i158
  %26210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26207, i64* %26210, align 8
  store %struct.Memory* %loadMem_40d178, %struct.Memory** %MEMORY
  br label %block_.L_40d199

block_.L_40d17d:                                  ; preds = %block_.L_40d150
  %loadMem_40d17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26212 = getelementptr inbounds %struct.GPR, %struct.GPR* %26211, i32 0, i32 33
  %26213 = getelementptr inbounds %struct.Reg, %struct.Reg* %26212, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %26213 to i64*
  %26214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26215 = getelementptr inbounds %struct.GPR, %struct.GPR* %26214, i32 0, i32 1
  %26216 = getelementptr inbounds %struct.Reg, %struct.Reg* %26215, i32 0, i32 0
  %RAX.i156 = bitcast %union.anon* %26216 to i64*
  %26217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26218 = getelementptr inbounds %struct.GPR, %struct.GPR* %26217, i32 0, i32 15
  %26219 = getelementptr inbounds %struct.Reg, %struct.Reg* %26218, i32 0, i32 0
  %RBP.i157 = bitcast %union.anon* %26219 to i64*
  %26220 = load i64, i64* %RBP.i157
  %26221 = sub i64 %26220, 24
  %26222 = load i64, i64* %PC.i155
  %26223 = add i64 %26222, 4
  store i64 %26223, i64* %PC.i155
  %26224 = inttoptr i64 %26221 to i32*
  %26225 = load i32, i32* %26224
  %26226 = sext i32 %26225 to i64
  store i64 %26226, i64* %RAX.i156, align 8
  store %struct.Memory* %loadMem_40d17d, %struct.Memory** %MEMORY
  %loadMem_40d181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26228 = getelementptr inbounds %struct.GPR, %struct.GPR* %26227, i32 0, i32 33
  %26229 = getelementptr inbounds %struct.Reg, %struct.Reg* %26228, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %26229 to i64*
  %26230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26231 = getelementptr inbounds %struct.GPR, %struct.GPR* %26230, i32 0, i32 1
  %26232 = getelementptr inbounds %struct.Reg, %struct.Reg* %26231, i32 0, i32 0
  %RAX.i152 = bitcast %union.anon* %26232 to i64*
  %26233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26234 = getelementptr inbounds %struct.GPR, %struct.GPR* %26233, i32 0, i32 5
  %26235 = getelementptr inbounds %struct.Reg, %struct.Reg* %26234, i32 0, i32 0
  %RCX.i153 = bitcast %union.anon* %26235 to i64*
  %26236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26237 = getelementptr inbounds %struct.GPR, %struct.GPR* %26236, i32 0, i32 15
  %26238 = getelementptr inbounds %struct.Reg, %struct.Reg* %26237, i32 0, i32 0
  %RBP.i154 = bitcast %union.anon* %26238 to i64*
  %26239 = load i64, i64* %RBP.i154
  %26240 = load i64, i64* %RAX.i152
  %26241 = mul i64 %26240, 4
  %26242 = add i64 %26239, -80
  %26243 = add i64 %26242, %26241
  %26244 = load i64, i64* %PC.i151
  %26245 = add i64 %26244, 4
  store i64 %26245, i64* %PC.i151
  %26246 = inttoptr i64 %26243 to i32*
  %26247 = load i32, i32* %26246
  %26248 = zext i32 %26247 to i64
  store i64 %26248, i64* %RCX.i153, align 8
  store %struct.Memory* %loadMem_40d181, %struct.Memory** %MEMORY
  %loadMem_40d185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26250 = getelementptr inbounds %struct.GPR, %struct.GPR* %26249, i32 0, i32 33
  %26251 = getelementptr inbounds %struct.Reg, %struct.Reg* %26250, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %26251 to i64*
  %26252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26253 = getelementptr inbounds %struct.GPR, %struct.GPR* %26252, i32 0, i32 1
  %26254 = getelementptr inbounds %struct.Reg, %struct.Reg* %26253, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %26254 to i64*
  %26255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26256 = getelementptr inbounds %struct.GPR, %struct.GPR* %26255, i32 0, i32 15
  %26257 = getelementptr inbounds %struct.Reg, %struct.Reg* %26256, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %26257 to i64*
  %26258 = load i64, i64* %RBP.i150
  %26259 = sub i64 %26258, 32
  %26260 = load i64, i64* %PC.i148
  %26261 = add i64 %26260, 4
  store i64 %26261, i64* %PC.i148
  %26262 = inttoptr i64 %26259 to i32*
  %26263 = load i32, i32* %26262
  %26264 = sext i32 %26263 to i64
  store i64 %26264, i64* %RAX.i149, align 8
  store %struct.Memory* %loadMem_40d185, %struct.Memory** %MEMORY
  %loadMem_40d189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26266 = getelementptr inbounds %struct.GPR, %struct.GPR* %26265, i32 0, i32 33
  %26267 = getelementptr inbounds %struct.Reg, %struct.Reg* %26266, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %26267 to i64*
  %26268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26269 = getelementptr inbounds %struct.GPR, %struct.GPR* %26268, i32 0, i32 1
  %26270 = getelementptr inbounds %struct.Reg, %struct.Reg* %26269, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %26270 to i64*
  %26271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26272 = getelementptr inbounds %struct.GPR, %struct.GPR* %26271, i32 0, i32 5
  %26273 = getelementptr inbounds %struct.Reg, %struct.Reg* %26272, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %26273 to i64*
  %26274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26275 = getelementptr inbounds %struct.GPR, %struct.GPR* %26274, i32 0, i32 15
  %26276 = getelementptr inbounds %struct.Reg, %struct.Reg* %26275, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %26276 to i64*
  %26277 = load i64, i64* %RCX.i146
  %26278 = load i64, i64* %RBP.i147
  %26279 = load i64, i64* %RAX.i145
  %26280 = mul i64 %26279, 4
  %26281 = add i64 %26278, -80
  %26282 = add i64 %26281, %26280
  %26283 = load i64, i64* %PC.i144
  %26284 = add i64 %26283, 4
  store i64 %26284, i64* %PC.i144
  %26285 = trunc i64 %26277 to i32
  %26286 = inttoptr i64 %26282 to i32*
  %26287 = load i32, i32* %26286
  %26288 = sub i32 %26285, %26287
  %26289 = zext i32 %26288 to i64
  store i64 %26289, i64* %RCX.i146, align 8
  %26290 = icmp ult i32 %26285, %26287
  %26291 = zext i1 %26290 to i8
  %26292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26291, i8* %26292, align 1
  %26293 = and i32 %26288, 255
  %26294 = call i32 @llvm.ctpop.i32(i32 %26293)
  %26295 = trunc i32 %26294 to i8
  %26296 = and i8 %26295, 1
  %26297 = xor i8 %26296, 1
  %26298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26297, i8* %26298, align 1
  %26299 = xor i32 %26287, %26285
  %26300 = xor i32 %26299, %26288
  %26301 = lshr i32 %26300, 4
  %26302 = trunc i32 %26301 to i8
  %26303 = and i8 %26302, 1
  %26304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26303, i8* %26304, align 1
  %26305 = icmp eq i32 %26288, 0
  %26306 = zext i1 %26305 to i8
  %26307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26306, i8* %26307, align 1
  %26308 = lshr i32 %26288, 31
  %26309 = trunc i32 %26308 to i8
  %26310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26309, i8* %26310, align 1
  %26311 = lshr i32 %26285, 31
  %26312 = lshr i32 %26287, 31
  %26313 = xor i32 %26312, %26311
  %26314 = xor i32 %26308, %26311
  %26315 = add i32 %26314, %26313
  %26316 = icmp eq i32 %26315, 2
  %26317 = zext i1 %26316 to i8
  %26318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26317, i8* %26318, align 1
  store %struct.Memory* %loadMem_40d189, %struct.Memory** %MEMORY
  %loadMem_40d18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26320 = getelementptr inbounds %struct.GPR, %struct.GPR* %26319, i32 0, i32 33
  %26321 = getelementptr inbounds %struct.Reg, %struct.Reg* %26320, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %26321 to i64*
  %26322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26323 = getelementptr inbounds %struct.GPR, %struct.GPR* %26322, i32 0, i32 5
  %26324 = getelementptr inbounds %struct.Reg, %struct.Reg* %26323, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %26324 to i64*
  %26325 = load i64, i64* %RCX.i143
  %26326 = load i64, i64* %PC.i142
  %26327 = add i64 %26326, 3
  store i64 %26327, i64* %PC.i142
  %26328 = trunc i64 %26325 to i32
  %26329 = add i32 32, %26328
  %26330 = zext i32 %26329 to i64
  store i64 %26330, i64* %RCX.i143, align 8
  %26331 = icmp ult i32 %26329, %26328
  %26332 = icmp ult i32 %26329, 32
  %26333 = or i1 %26331, %26332
  %26334 = zext i1 %26333 to i8
  %26335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26334, i8* %26335, align 1
  %26336 = and i32 %26329, 255
  %26337 = call i32 @llvm.ctpop.i32(i32 %26336)
  %26338 = trunc i32 %26337 to i8
  %26339 = and i8 %26338, 1
  %26340 = xor i8 %26339, 1
  %26341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26340, i8* %26341, align 1
  %26342 = xor i64 32, %26325
  %26343 = trunc i64 %26342 to i32
  %26344 = xor i32 %26343, %26329
  %26345 = lshr i32 %26344, 4
  %26346 = trunc i32 %26345 to i8
  %26347 = and i8 %26346, 1
  %26348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26347, i8* %26348, align 1
  %26349 = icmp eq i32 %26329, 0
  %26350 = zext i1 %26349 to i8
  %26351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26350, i8* %26351, align 1
  %26352 = lshr i32 %26329, 31
  %26353 = trunc i32 %26352 to i8
  %26354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26353, i8* %26354, align 1
  %26355 = lshr i32 %26328, 31
  %26356 = xor i32 %26352, %26355
  %26357 = add i32 %26356, %26352
  %26358 = icmp eq i32 %26357, 2
  %26359 = zext i1 %26358 to i8
  %26360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26359, i8* %26360, align 1
  store %struct.Memory* %loadMem_40d18d, %struct.Memory** %MEMORY
  %loadMem_40d190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26362 = getelementptr inbounds %struct.GPR, %struct.GPR* %26361, i32 0, i32 33
  %26363 = getelementptr inbounds %struct.Reg, %struct.Reg* %26362, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %26363 to i64*
  %26364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26365 = getelementptr inbounds %struct.GPR, %struct.GPR* %26364, i32 0, i32 5
  %26366 = getelementptr inbounds %struct.Reg, %struct.Reg* %26365, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %26366 to i64*
  %26367 = load i64, i64* %RCX.i141
  %26368 = load i64, i64* %PC.i140
  %26369 = add i64 %26368, 3
  store i64 %26369, i64* %PC.i140
  %26370 = shl i64 %26367, 32
  %26371 = ashr exact i64 %26370, 32
  %26372 = ashr i64 %26371, 5
  %26373 = lshr i64 %26372, 1
  %26374 = trunc i64 %26372 to i8
  %26375 = and i8 %26374, 1
  %26376 = trunc i64 %26373 to i32
  %26377 = and i64 %26373, 4294967295
  store i64 %26377, i64* %RCX.i141, align 8
  %26378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26375, i8* %26378, align 1
  %26379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26380 = and i32 %26376, 255
  %26381 = call i32 @llvm.ctpop.i32(i32 %26380)
  %26382 = trunc i32 %26381 to i8
  %26383 = and i8 %26382, 1
  %26384 = xor i8 %26383, 1
  store i8 %26384, i8* %26379, align 1
  %26385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26385, align 1
  %26386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26387 = icmp eq i32 %26376, 0
  %26388 = zext i1 %26387 to i8
  store i8 %26388, i8* %26386, align 1
  %26389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26390 = lshr i32 %26376, 31
  %26391 = trunc i32 %26390 to i8
  store i8 %26391, i8* %26389, align 1
  %26392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26392, align 1
  store %struct.Memory* %loadMem_40d190, %struct.Memory** %MEMORY
  %loadMem_40d193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26394 = getelementptr inbounds %struct.GPR, %struct.GPR* %26393, i32 0, i32 33
  %26395 = getelementptr inbounds %struct.Reg, %struct.Reg* %26394, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %26395 to i64*
  %26396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26397 = getelementptr inbounds %struct.GPR, %struct.GPR* %26396, i32 0, i32 5
  %26398 = getelementptr inbounds %struct.Reg, %struct.Reg* %26397, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %26398 to i32*
  %26399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26400 = getelementptr inbounds %struct.GPR, %struct.GPR* %26399, i32 0, i32 15
  %26401 = getelementptr inbounds %struct.Reg, %struct.Reg* %26400, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %26401 to i64*
  %26402 = load i64, i64* %RBP.i139
  %26403 = sub i64 %26402, 412
  %26404 = load i32, i32* %ECX.i
  %26405 = zext i32 %26404 to i64
  %26406 = load i64, i64* %PC.i138
  %26407 = add i64 %26406, 6
  store i64 %26407, i64* %PC.i138
  %26408 = inttoptr i64 %26403 to i32*
  store i32 %26404, i32* %26408
  store %struct.Memory* %loadMem_40d193, %struct.Memory** %MEMORY
  br label %block_.L_40d199

block_.L_40d199:                                  ; preds = %block_.L_40d17d, %block_40d170
  %loadMem_40d199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26410 = getelementptr inbounds %struct.GPR, %struct.GPR* %26409, i32 0, i32 33
  %26411 = getelementptr inbounds %struct.Reg, %struct.Reg* %26410, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %26411 to i64*
  %26412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26413 = getelementptr inbounds %struct.GPR, %struct.GPR* %26412, i32 0, i32 1
  %26414 = getelementptr inbounds %struct.Reg, %struct.Reg* %26413, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %26414 to i64*
  %26415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26416 = getelementptr inbounds %struct.GPR, %struct.GPR* %26415, i32 0, i32 15
  %26417 = getelementptr inbounds %struct.Reg, %struct.Reg* %26416, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %26417 to i64*
  %26418 = load i64, i64* %RBP.i137
  %26419 = sub i64 %26418, 412
  %26420 = load i64, i64* %PC.i135
  %26421 = add i64 %26420, 6
  store i64 %26421, i64* %PC.i135
  %26422 = inttoptr i64 %26419 to i32*
  %26423 = load i32, i32* %26422
  %26424 = zext i32 %26423 to i64
  store i64 %26424, i64* %RAX.i136, align 8
  store %struct.Memory* %loadMem_40d199, %struct.Memory** %MEMORY
  %loadMem_40d19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %26425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26426 = getelementptr inbounds %struct.GPR, %struct.GPR* %26425, i32 0, i32 33
  %26427 = getelementptr inbounds %struct.Reg, %struct.Reg* %26426, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %26427 to i64*
  %26428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26429 = getelementptr inbounds %struct.GPR, %struct.GPR* %26428, i32 0, i32 1
  %26430 = getelementptr inbounds %struct.Reg, %struct.Reg* %26429, i32 0, i32 0
  %EAX.i133 = bitcast %union.anon* %26430 to i32*
  %26431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26432 = getelementptr inbounds %struct.GPR, %struct.GPR* %26431, i32 0, i32 15
  %26433 = getelementptr inbounds %struct.Reg, %struct.Reg* %26432, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %26433 to i64*
  %26434 = load i64, i64* %RBP.i134
  %26435 = sub i64 %26434, 408
  %26436 = load i32, i32* %EAX.i133
  %26437 = zext i32 %26436 to i64
  %26438 = load i64, i64* %PC.i132
  %26439 = add i64 %26438, 6
  store i64 %26439, i64* %PC.i132
  %26440 = inttoptr i64 %26435 to i32*
  store i32 %26436, i32* %26440
  store %struct.Memory* %loadMem_40d19f, %struct.Memory** %MEMORY
  br label %block_.L_40d1a5

block_.L_40d1a5:                                  ; preds = %block_.L_40d199, %block_40d137
  %loadMem_40d1a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26442 = getelementptr inbounds %struct.GPR, %struct.GPR* %26441, i32 0, i32 33
  %26443 = getelementptr inbounds %struct.Reg, %struct.Reg* %26442, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %26443 to i64*
  %26444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26445 = getelementptr inbounds %struct.GPR, %struct.GPR* %26444, i32 0, i32 1
  %26446 = getelementptr inbounds %struct.Reg, %struct.Reg* %26445, i32 0, i32 0
  %RAX.i130 = bitcast %union.anon* %26446 to i64*
  %26447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26448 = getelementptr inbounds %struct.GPR, %struct.GPR* %26447, i32 0, i32 15
  %26449 = getelementptr inbounds %struct.Reg, %struct.Reg* %26448, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %26449 to i64*
  %26450 = load i64, i64* %RBP.i131
  %26451 = sub i64 %26450, 408
  %26452 = load i64, i64* %PC.i129
  %26453 = add i64 %26452, 6
  store i64 %26453, i64* %PC.i129
  %26454 = inttoptr i64 %26451 to i32*
  %26455 = load i32, i32* %26454
  %26456 = zext i32 %26455 to i64
  store i64 %26456, i64* %RAX.i130, align 8
  store %struct.Memory* %loadMem_40d1a5, %struct.Memory** %MEMORY
  %loadMem_40d1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %26457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26458 = getelementptr inbounds %struct.GPR, %struct.GPR* %26457, i32 0, i32 33
  %26459 = getelementptr inbounds %struct.Reg, %struct.Reg* %26458, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %26459 to i64*
  %26460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26461 = getelementptr inbounds %struct.GPR, %struct.GPR* %26460, i32 0, i32 5
  %26462 = getelementptr inbounds %struct.Reg, %struct.Reg* %26461, i32 0, i32 0
  %RCX.i128 = bitcast %union.anon* %26462 to i64*
  %26463 = load i64, i64* %PC.i127
  %26464 = add i64 %26463, 8
  store i64 %26464, i64* %PC.i127
  %26465 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %26465, i64* %RCX.i128, align 8
  store %struct.Memory* %loadMem_40d1ab, %struct.Memory** %MEMORY
  %loadMem_40d1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26467 = getelementptr inbounds %struct.GPR, %struct.GPR* %26466, i32 0, i32 33
  %26468 = getelementptr inbounds %struct.Reg, %struct.Reg* %26467, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %26468 to i64*
  %26469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26470 = getelementptr inbounds %struct.GPR, %struct.GPR* %26469, i32 0, i32 5
  %26471 = getelementptr inbounds %struct.Reg, %struct.Reg* %26470, i32 0, i32 0
  %RCX.i126 = bitcast %union.anon* %26471 to i64*
  %26472 = load i64, i64* %RCX.i126
  %26473 = load i64, i64* %PC.i125
  %26474 = add i64 %26473, 7
  store i64 %26474, i64* %PC.i125
  %26475 = add i64 13112, %26472
  store i64 %26475, i64* %RCX.i126, align 8
  %26476 = icmp ult i64 %26475, %26472
  %26477 = icmp ult i64 %26475, 13112
  %26478 = or i1 %26476, %26477
  %26479 = zext i1 %26478 to i8
  %26480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26479, i8* %26480, align 1
  %26481 = trunc i64 %26475 to i32
  %26482 = and i32 %26481, 255
  %26483 = call i32 @llvm.ctpop.i32(i32 %26482)
  %26484 = trunc i32 %26483 to i8
  %26485 = and i8 %26484, 1
  %26486 = xor i8 %26485, 1
  %26487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26486, i8* %26487, align 1
  %26488 = xor i64 13112, %26472
  %26489 = xor i64 %26488, %26475
  %26490 = lshr i64 %26489, 4
  %26491 = trunc i64 %26490 to i8
  %26492 = and i8 %26491, 1
  %26493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26492, i8* %26493, align 1
  %26494 = icmp eq i64 %26475, 0
  %26495 = zext i1 %26494 to i8
  %26496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26495, i8* %26496, align 1
  %26497 = lshr i64 %26475, 63
  %26498 = trunc i64 %26497 to i8
  %26499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26498, i8* %26499, align 1
  %26500 = lshr i64 %26472, 63
  %26501 = xor i64 %26497, %26500
  %26502 = add i64 %26501, %26497
  %26503 = icmp eq i64 %26502, 2
  %26504 = zext i1 %26503 to i8
  %26505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26504, i8* %26505, align 1
  store %struct.Memory* %loadMem_40d1b3, %struct.Memory** %MEMORY
  %loadMem_40d1ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %26506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26507 = getelementptr inbounds %struct.GPR, %struct.GPR* %26506, i32 0, i32 33
  %26508 = getelementptr inbounds %struct.Reg, %struct.Reg* %26507, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %26508 to i64*
  %26509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26510 = getelementptr inbounds %struct.GPR, %struct.GPR* %26509, i32 0, i32 7
  %26511 = getelementptr inbounds %struct.Reg, %struct.Reg* %26510, i32 0, i32 0
  %RDX.i123 = bitcast %union.anon* %26511 to i64*
  %26512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26513 = getelementptr inbounds %struct.GPR, %struct.GPR* %26512, i32 0, i32 15
  %26514 = getelementptr inbounds %struct.Reg, %struct.Reg* %26513, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %26514 to i64*
  %26515 = load i64, i64* %RBP.i124
  %26516 = sub i64 %26515, 20
  %26517 = load i64, i64* %PC.i122
  %26518 = add i64 %26517, 4
  store i64 %26518, i64* %PC.i122
  %26519 = inttoptr i64 %26516 to i32*
  %26520 = load i32, i32* %26519
  %26521 = sext i32 %26520 to i64
  store i64 %26521, i64* %RDX.i123, align 8
  store %struct.Memory* %loadMem_40d1ba, %struct.Memory** %MEMORY
  %loadMem_40d1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %26522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26523 = getelementptr inbounds %struct.GPR, %struct.GPR* %26522, i32 0, i32 33
  %26524 = getelementptr inbounds %struct.Reg, %struct.Reg* %26523, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %26524 to i64*
  %26525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26526 = getelementptr inbounds %struct.GPR, %struct.GPR* %26525, i32 0, i32 7
  %26527 = getelementptr inbounds %struct.Reg, %struct.Reg* %26526, i32 0, i32 0
  %RDX.i121 = bitcast %union.anon* %26527 to i64*
  %26528 = load i64, i64* %RDX.i121
  %26529 = load i64, i64* %PC.i120
  %26530 = add i64 %26529, 4
  store i64 %26530, i64* %PC.i120
  %26531 = shl i64 %26528, 5
  %26532 = icmp slt i64 %26531, 0
  %26533 = shl i64 %26531, 1
  store i64 %26533, i64* %RDX.i121, align 8
  %26534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %26535 = zext i1 %26532 to i8
  store i8 %26535, i8* %26534, align 1
  %26536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %26537 = trunc i64 %26533 to i32
  %26538 = and i32 %26537, 254
  %26539 = call i32 @llvm.ctpop.i32(i32 %26538)
  %26540 = trunc i32 %26539 to i8
  %26541 = and i8 %26540, 1
  %26542 = xor i8 %26541, 1
  store i8 %26542, i8* %26536, align 1
  %26543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26543, align 1
  %26544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26545 = icmp eq i64 %26533, 0
  %26546 = zext i1 %26545 to i8
  store i8 %26546, i8* %26544, align 1
  %26547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26548 = lshr i64 %26533, 63
  %26549 = trunc i64 %26548 to i8
  store i8 %26549, i8* %26547, align 1
  %26550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26550, align 1
  store %struct.Memory* %loadMem_40d1be, %struct.Memory** %MEMORY
  %loadMem_40d1c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26552 = getelementptr inbounds %struct.GPR, %struct.GPR* %26551, i32 0, i32 33
  %26553 = getelementptr inbounds %struct.Reg, %struct.Reg* %26552, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %26553 to i64*
  %26554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26555 = getelementptr inbounds %struct.GPR, %struct.GPR* %26554, i32 0, i32 5
  %26556 = getelementptr inbounds %struct.Reg, %struct.Reg* %26555, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %26556 to i64*
  %26557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26558 = getelementptr inbounds %struct.GPR, %struct.GPR* %26557, i32 0, i32 7
  %26559 = getelementptr inbounds %struct.Reg, %struct.Reg* %26558, i32 0, i32 0
  %RDX.i119 = bitcast %union.anon* %26559 to i64*
  %26560 = load i64, i64* %RCX.i118
  %26561 = load i64, i64* %RDX.i119
  %26562 = load i64, i64* %PC.i117
  %26563 = add i64 %26562, 3
  store i64 %26563, i64* %PC.i117
  %26564 = add i64 %26561, %26560
  store i64 %26564, i64* %RCX.i118, align 8
  %26565 = icmp ult i64 %26564, %26560
  %26566 = icmp ult i64 %26564, %26561
  %26567 = or i1 %26565, %26566
  %26568 = zext i1 %26567 to i8
  %26569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26568, i8* %26569, align 1
  %26570 = trunc i64 %26564 to i32
  %26571 = and i32 %26570, 255
  %26572 = call i32 @llvm.ctpop.i32(i32 %26571)
  %26573 = trunc i32 %26572 to i8
  %26574 = and i8 %26573, 1
  %26575 = xor i8 %26574, 1
  %26576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26575, i8* %26576, align 1
  %26577 = xor i64 %26561, %26560
  %26578 = xor i64 %26577, %26564
  %26579 = lshr i64 %26578, 4
  %26580 = trunc i64 %26579 to i8
  %26581 = and i8 %26580, 1
  %26582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26581, i8* %26582, align 1
  %26583 = icmp eq i64 %26564, 0
  %26584 = zext i1 %26583 to i8
  %26585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26584, i8* %26585, align 1
  %26586 = lshr i64 %26564, 63
  %26587 = trunc i64 %26586 to i8
  %26588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26587, i8* %26588, align 1
  %26589 = lshr i64 %26560, 63
  %26590 = lshr i64 %26561, 63
  %26591 = xor i64 %26586, %26589
  %26592 = xor i64 %26586, %26590
  %26593 = add i64 %26591, %26592
  %26594 = icmp eq i64 %26593, 2
  %26595 = zext i1 %26594 to i8
  %26596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26595, i8* %26596, align 1
  store %struct.Memory* %loadMem_40d1c2, %struct.Memory** %MEMORY
  %loadMem_40d1c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26598 = getelementptr inbounds %struct.GPR, %struct.GPR* %26597, i32 0, i32 33
  %26599 = getelementptr inbounds %struct.Reg, %struct.Reg* %26598, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %26599 to i64*
  %26600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26601 = getelementptr inbounds %struct.GPR, %struct.GPR* %26600, i32 0, i32 7
  %26602 = getelementptr inbounds %struct.Reg, %struct.Reg* %26601, i32 0, i32 0
  %RDX.i115 = bitcast %union.anon* %26602 to i64*
  %26603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26604 = getelementptr inbounds %struct.GPR, %struct.GPR* %26603, i32 0, i32 15
  %26605 = getelementptr inbounds %struct.Reg, %struct.Reg* %26604, i32 0, i32 0
  %RBP.i116 = bitcast %union.anon* %26605 to i64*
  %26606 = load i64, i64* %RBP.i116
  %26607 = sub i64 %26606, 32
  %26608 = load i64, i64* %PC.i114
  %26609 = add i64 %26608, 4
  store i64 %26609, i64* %PC.i114
  %26610 = inttoptr i64 %26607 to i32*
  %26611 = load i32, i32* %26610
  %26612 = sext i32 %26611 to i64
  store i64 %26612, i64* %RDX.i115, align 8
  store %struct.Memory* %loadMem_40d1c5, %struct.Memory** %MEMORY
  %loadMem_40d1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26614 = getelementptr inbounds %struct.GPR, %struct.GPR* %26613, i32 0, i32 33
  %26615 = getelementptr inbounds %struct.Reg, %struct.Reg* %26614, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %26615 to i64*
  %26616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26617 = getelementptr inbounds %struct.GPR, %struct.GPR* %26616, i32 0, i32 1
  %26618 = getelementptr inbounds %struct.Reg, %struct.Reg* %26617, i32 0, i32 0
  %EAX.i111 = bitcast %union.anon* %26618 to i32*
  %26619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26620 = getelementptr inbounds %struct.GPR, %struct.GPR* %26619, i32 0, i32 5
  %26621 = getelementptr inbounds %struct.Reg, %struct.Reg* %26620, i32 0, i32 0
  %RCX.i112 = bitcast %union.anon* %26621 to i64*
  %26622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26623 = getelementptr inbounds %struct.GPR, %struct.GPR* %26622, i32 0, i32 7
  %26624 = getelementptr inbounds %struct.Reg, %struct.Reg* %26623, i32 0, i32 0
  %RDX.i113 = bitcast %union.anon* %26624 to i64*
  %26625 = load i64, i64* %RCX.i112
  %26626 = load i64, i64* %RDX.i113
  %26627 = mul i64 %26626, 4
  %26628 = add i64 %26627, %26625
  %26629 = load i32, i32* %EAX.i111
  %26630 = zext i32 %26629 to i64
  %26631 = load i64, i64* %PC.i110
  %26632 = add i64 %26631, 3
  store i64 %26632, i64* %PC.i110
  %26633 = inttoptr i64 %26628 to i32*
  store i32 %26629, i32* %26633
  store %struct.Memory* %loadMem_40d1c9, %struct.Memory** %MEMORY
  %loadMem_40d1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %26634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26635 = getelementptr inbounds %struct.GPR, %struct.GPR* %26634, i32 0, i32 33
  %26636 = getelementptr inbounds %struct.Reg, %struct.Reg* %26635, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %26636 to i64*
  %26637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26638 = getelementptr inbounds %struct.GPR, %struct.GPR* %26637, i32 0, i32 1
  %26639 = getelementptr inbounds %struct.Reg, %struct.Reg* %26638, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %26639 to i64*
  %26640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26641 = getelementptr inbounds %struct.GPR, %struct.GPR* %26640, i32 0, i32 15
  %26642 = getelementptr inbounds %struct.Reg, %struct.Reg* %26641, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %26642 to i64*
  %26643 = load i64, i64* %RBP.i109
  %26644 = sub i64 %26643, 24
  %26645 = load i64, i64* %PC.i107
  %26646 = add i64 %26645, 3
  store i64 %26646, i64* %PC.i107
  %26647 = inttoptr i64 %26644 to i32*
  %26648 = load i32, i32* %26647
  %26649 = zext i32 %26648 to i64
  store i64 %26649, i64* %RAX.i108, align 8
  store %struct.Memory* %loadMem_40d1cc, %struct.Memory** %MEMORY
  %loadMem_40d1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %26650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26651 = getelementptr inbounds %struct.GPR, %struct.GPR* %26650, i32 0, i32 33
  %26652 = getelementptr inbounds %struct.Reg, %struct.Reg* %26651, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %26652 to i64*
  %26653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26654 = getelementptr inbounds %struct.GPR, %struct.GPR* %26653, i32 0, i32 1
  %26655 = getelementptr inbounds %struct.Reg, %struct.Reg* %26654, i32 0, i32 0
  %RAX.i106 = bitcast %union.anon* %26655 to i64*
  %26656 = load i64, i64* %RAX.i106
  %26657 = load i64, i64* %PC.i105
  %26658 = add i64 %26657, 3
  store i64 %26658, i64* %PC.i105
  %26659 = trunc i64 %26656 to i32
  %26660 = add i32 1, %26659
  %26661 = zext i32 %26660 to i64
  store i64 %26661, i64* %RAX.i106, align 8
  %26662 = icmp ult i32 %26660, %26659
  %26663 = icmp ult i32 %26660, 1
  %26664 = or i1 %26662, %26663
  %26665 = zext i1 %26664 to i8
  %26666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26665, i8* %26666, align 1
  %26667 = and i32 %26660, 255
  %26668 = call i32 @llvm.ctpop.i32(i32 %26667)
  %26669 = trunc i32 %26668 to i8
  %26670 = and i8 %26669, 1
  %26671 = xor i8 %26670, 1
  %26672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26671, i8* %26672, align 1
  %26673 = xor i64 1, %26656
  %26674 = trunc i64 %26673 to i32
  %26675 = xor i32 %26674, %26660
  %26676 = lshr i32 %26675, 4
  %26677 = trunc i32 %26676 to i8
  %26678 = and i8 %26677, 1
  %26679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26678, i8* %26679, align 1
  %26680 = icmp eq i32 %26660, 0
  %26681 = zext i1 %26680 to i8
  %26682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26681, i8* %26682, align 1
  %26683 = lshr i32 %26660, 31
  %26684 = trunc i32 %26683 to i8
  %26685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26684, i8* %26685, align 1
  %26686 = lshr i32 %26659, 31
  %26687 = xor i32 %26683, %26686
  %26688 = add i32 %26687, %26683
  %26689 = icmp eq i32 %26688, 2
  %26690 = zext i1 %26689 to i8
  %26691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26690, i8* %26691, align 1
  store %struct.Memory* %loadMem_40d1cf, %struct.Memory** %MEMORY
  %loadMem_40d1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26693 = getelementptr inbounds %struct.GPR, %struct.GPR* %26692, i32 0, i32 33
  %26694 = getelementptr inbounds %struct.Reg, %struct.Reg* %26693, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %26694 to i64*
  %26695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26696 = getelementptr inbounds %struct.GPR, %struct.GPR* %26695, i32 0, i32 1
  %26697 = getelementptr inbounds %struct.Reg, %struct.Reg* %26696, i32 0, i32 0
  %EAX.i103 = bitcast %union.anon* %26697 to i32*
  %26698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26699 = getelementptr inbounds %struct.GPR, %struct.GPR* %26698, i32 0, i32 15
  %26700 = getelementptr inbounds %struct.Reg, %struct.Reg* %26699, i32 0, i32 0
  %RBP.i104 = bitcast %union.anon* %26700 to i64*
  %26701 = load i64, i64* %RBP.i104
  %26702 = sub i64 %26701, 24
  %26703 = load i32, i32* %EAX.i103
  %26704 = zext i32 %26703 to i64
  %26705 = load i64, i64* %PC.i102
  %26706 = add i64 %26705, 3
  store i64 %26706, i64* %PC.i102
  %26707 = inttoptr i64 %26702 to i32*
  store i32 %26703, i32* %26707
  store %struct.Memory* %loadMem_40d1d2, %struct.Memory** %MEMORY
  %loadMem_40d1d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26709 = getelementptr inbounds %struct.GPR, %struct.GPR* %26708, i32 0, i32 33
  %26710 = getelementptr inbounds %struct.Reg, %struct.Reg* %26709, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %26710 to i64*
  %26711 = load i64, i64* %PC.i101
  %26712 = add i64 %26711, -554
  %26713 = load i64, i64* %PC.i101
  %26714 = add i64 %26713, 5
  store i64 %26714, i64* %PC.i101
  %26715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26712, i64* %26715, align 8
  store %struct.Memory* %loadMem_40d1d5, %struct.Memory** %MEMORY
  br label %block_.L_40cfab

block_.L_40d1da:                                  ; preds = %block_.L_40cfab
  %loadMem_40d1da = load %struct.Memory*, %struct.Memory** %MEMORY
  %26716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26717 = getelementptr inbounds %struct.GPR, %struct.GPR* %26716, i32 0, i32 33
  %26718 = getelementptr inbounds %struct.Reg, %struct.Reg* %26717, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %26718 to i64*
  %26719 = load i64, i64* %PC.i100
  %26720 = add i64 %26719, 5
  %26721 = load i64, i64* %PC.i100
  %26722 = add i64 %26721, 5
  store i64 %26722, i64* %PC.i100
  %26723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26720, i64* %26723, align 8
  store %struct.Memory* %loadMem_40d1da, %struct.Memory** %MEMORY
  br label %block_.L_40d1df

block_.L_40d1df:                                  ; preds = %block_.L_40d1da
  %loadMem_40d1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %26724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26725 = getelementptr inbounds %struct.GPR, %struct.GPR* %26724, i32 0, i32 33
  %26726 = getelementptr inbounds %struct.Reg, %struct.Reg* %26725, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %26726 to i64*
  %26727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26728 = getelementptr inbounds %struct.GPR, %struct.GPR* %26727, i32 0, i32 1
  %26729 = getelementptr inbounds %struct.Reg, %struct.Reg* %26728, i32 0, i32 0
  %RAX.i98 = bitcast %union.anon* %26729 to i64*
  %26730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26731 = getelementptr inbounds %struct.GPR, %struct.GPR* %26730, i32 0, i32 15
  %26732 = getelementptr inbounds %struct.Reg, %struct.Reg* %26731, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %26732 to i64*
  %26733 = load i64, i64* %RBP.i99
  %26734 = sub i64 %26733, 20
  %26735 = load i64, i64* %PC.i97
  %26736 = add i64 %26735, 3
  store i64 %26736, i64* %PC.i97
  %26737 = inttoptr i64 %26734 to i32*
  %26738 = load i32, i32* %26737
  %26739 = zext i32 %26738 to i64
  store i64 %26739, i64* %RAX.i98, align 8
  store %struct.Memory* %loadMem_40d1df, %struct.Memory** %MEMORY
  %loadMem_40d1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26741 = getelementptr inbounds %struct.GPR, %struct.GPR* %26740, i32 0, i32 33
  %26742 = getelementptr inbounds %struct.Reg, %struct.Reg* %26741, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %26742 to i64*
  %26743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26744 = getelementptr inbounds %struct.GPR, %struct.GPR* %26743, i32 0, i32 1
  %26745 = getelementptr inbounds %struct.Reg, %struct.Reg* %26744, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %26745 to i64*
  %26746 = load i64, i64* %RAX.i96
  %26747 = load i64, i64* %PC.i95
  %26748 = add i64 %26747, 3
  store i64 %26748, i64* %PC.i95
  %26749 = trunc i64 %26746 to i32
  %26750 = add i32 1, %26749
  %26751 = zext i32 %26750 to i64
  store i64 %26751, i64* %RAX.i96, align 8
  %26752 = icmp ult i32 %26750, %26749
  %26753 = icmp ult i32 %26750, 1
  %26754 = or i1 %26752, %26753
  %26755 = zext i1 %26754 to i8
  %26756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26755, i8* %26756, align 1
  %26757 = and i32 %26750, 255
  %26758 = call i32 @llvm.ctpop.i32(i32 %26757)
  %26759 = trunc i32 %26758 to i8
  %26760 = and i8 %26759, 1
  %26761 = xor i8 %26760, 1
  %26762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26761, i8* %26762, align 1
  %26763 = xor i64 1, %26746
  %26764 = trunc i64 %26763 to i32
  %26765 = xor i32 %26764, %26750
  %26766 = lshr i32 %26765, 4
  %26767 = trunc i32 %26766 to i8
  %26768 = and i8 %26767, 1
  %26769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26768, i8* %26769, align 1
  %26770 = icmp eq i32 %26750, 0
  %26771 = zext i1 %26770 to i8
  %26772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26771, i8* %26772, align 1
  %26773 = lshr i32 %26750, 31
  %26774 = trunc i32 %26773 to i8
  %26775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26774, i8* %26775, align 1
  %26776 = lshr i32 %26749, 31
  %26777 = xor i32 %26773, %26776
  %26778 = add i32 %26777, %26773
  %26779 = icmp eq i32 %26778, 2
  %26780 = zext i1 %26779 to i8
  %26781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26780, i8* %26781, align 1
  store %struct.Memory* %loadMem_40d1e2, %struct.Memory** %MEMORY
  %loadMem_40d1e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26783 = getelementptr inbounds %struct.GPR, %struct.GPR* %26782, i32 0, i32 33
  %26784 = getelementptr inbounds %struct.Reg, %struct.Reg* %26783, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %26784 to i64*
  %26785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26786 = getelementptr inbounds %struct.GPR, %struct.GPR* %26785, i32 0, i32 1
  %26787 = getelementptr inbounds %struct.Reg, %struct.Reg* %26786, i32 0, i32 0
  %EAX.i93 = bitcast %union.anon* %26787 to i32*
  %26788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26789 = getelementptr inbounds %struct.GPR, %struct.GPR* %26788, i32 0, i32 15
  %26790 = getelementptr inbounds %struct.Reg, %struct.Reg* %26789, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %26790 to i64*
  %26791 = load i64, i64* %RBP.i94
  %26792 = sub i64 %26791, 20
  %26793 = load i32, i32* %EAX.i93
  %26794 = zext i32 %26793 to i64
  %26795 = load i64, i64* %PC.i92
  %26796 = add i64 %26795, 3
  store i64 %26796, i64* %PC.i92
  %26797 = inttoptr i64 %26792 to i32*
  store i32 %26793, i32* %26797
  store %struct.Memory* %loadMem_40d1e5, %struct.Memory** %MEMORY
  %loadMem_40d1e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26799 = getelementptr inbounds %struct.GPR, %struct.GPR* %26798, i32 0, i32 33
  %26800 = getelementptr inbounds %struct.Reg, %struct.Reg* %26799, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %26800 to i64*
  %26801 = load i64, i64* %PC.i91
  %26802 = add i64 %26801, -705
  %26803 = load i64, i64* %PC.i91
  %26804 = add i64 %26803, 5
  store i64 %26804, i64* %PC.i91
  %26805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %26802, i64* %26805, align 8
  store %struct.Memory* %loadMem_40d1e8, %struct.Memory** %MEMORY
  br label %block_.L_40cf27

block_.L_40d1ed:                                  ; preds = %block_.L_40cf27
  %loadMem_40d1ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %26806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26807 = getelementptr inbounds %struct.GPR, %struct.GPR* %26806, i32 0, i32 33
  %26808 = getelementptr inbounds %struct.Reg, %struct.Reg* %26807, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %26808 to i64*
  %26809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26810 = getelementptr inbounds %struct.GPR, %struct.GPR* %26809, i32 0, i32 15
  %26811 = getelementptr inbounds %struct.Reg, %struct.Reg* %26810, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %26811 to i64*
  %26812 = load i64, i64* %RBP.i90
  %26813 = sub i64 %26812, 24
  %26814 = load i64, i64* %PC.i89
  %26815 = add i64 %26814, 7
  store i64 %26815, i64* %PC.i89
  %26816 = inttoptr i64 %26813 to i32*
  store i32 0, i32* %26816
  store %struct.Memory* %loadMem_40d1ed, %struct.Memory** %MEMORY
  br label %block_.L_40d1f4

block_.L_40d1f4:                                  ; preds = %block_.L_40d28a, %block_.L_40d1ed
  %loadMem_40d1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26818 = getelementptr inbounds %struct.GPR, %struct.GPR* %26817, i32 0, i32 33
  %26819 = getelementptr inbounds %struct.Reg, %struct.Reg* %26818, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %26819 to i64*
  %26820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26821 = getelementptr inbounds %struct.GPR, %struct.GPR* %26820, i32 0, i32 15
  %26822 = getelementptr inbounds %struct.Reg, %struct.Reg* %26821, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %26822 to i64*
  %26823 = load i64, i64* %RBP.i88
  %26824 = sub i64 %26823, 24
  %26825 = load i64, i64* %PC.i87
  %26826 = add i64 %26825, 4
  store i64 %26826, i64* %PC.i87
  %26827 = inttoptr i64 %26824 to i32*
  %26828 = load i32, i32* %26827
  %26829 = sub i32 %26828, 4
  %26830 = icmp ult i32 %26828, 4
  %26831 = zext i1 %26830 to i8
  %26832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26831, i8* %26832, align 1
  %26833 = and i32 %26829, 255
  %26834 = call i32 @llvm.ctpop.i32(i32 %26833)
  %26835 = trunc i32 %26834 to i8
  %26836 = and i8 %26835, 1
  %26837 = xor i8 %26836, 1
  %26838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26837, i8* %26838, align 1
  %26839 = xor i32 %26828, 4
  %26840 = xor i32 %26839, %26829
  %26841 = lshr i32 %26840, 4
  %26842 = trunc i32 %26841 to i8
  %26843 = and i8 %26842, 1
  %26844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26843, i8* %26844, align 1
  %26845 = icmp eq i32 %26829, 0
  %26846 = zext i1 %26845 to i8
  %26847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26846, i8* %26847, align 1
  %26848 = lshr i32 %26829, 31
  %26849 = trunc i32 %26848 to i8
  %26850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26849, i8* %26850, align 1
  %26851 = lshr i32 %26828, 31
  %26852 = xor i32 %26848, %26851
  %26853 = add i32 %26852, %26851
  %26854 = icmp eq i32 %26853, 2
  %26855 = zext i1 %26854 to i8
  %26856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26855, i8* %26856, align 1
  store %struct.Memory* %loadMem_40d1f4, %struct.Memory** %MEMORY
  %loadMem_40d1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26858 = getelementptr inbounds %struct.GPR, %struct.GPR* %26857, i32 0, i32 33
  %26859 = getelementptr inbounds %struct.Reg, %struct.Reg* %26858, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %26859 to i64*
  %26860 = load i64, i64* %PC.i86
  %26861 = add i64 %26860, 160
  %26862 = load i64, i64* %PC.i86
  %26863 = add i64 %26862, 6
  %26864 = load i64, i64* %PC.i86
  %26865 = add i64 %26864, 6
  store i64 %26865, i64* %PC.i86
  %26866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26867 = load i8, i8* %26866, align 1
  %26868 = icmp ne i8 %26867, 0
  %26869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %26870 = load i8, i8* %26869, align 1
  %26871 = icmp ne i8 %26870, 0
  %26872 = xor i1 %26868, %26871
  %26873 = xor i1 %26872, true
  %26874 = zext i1 %26873 to i8
  store i8 %26874, i8* %BRANCH_TAKEN, align 1
  %26875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26876 = select i1 %26872, i64 %26863, i64 %26861
  store i64 %26876, i64* %26875, align 8
  store %struct.Memory* %loadMem_40d1f8, %struct.Memory** %MEMORY
  %loadBr_40d1f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d1f8 = icmp eq i8 %loadBr_40d1f8, 1
  br i1 %cmpBr_40d1f8, label %block_.L_40d298, label %block_40d1fe

block_40d1fe:                                     ; preds = %block_.L_40d1f4
  %loadMem_40d1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %26877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26878 = getelementptr inbounds %struct.GPR, %struct.GPR* %26877, i32 0, i32 33
  %26879 = getelementptr inbounds %struct.Reg, %struct.Reg* %26878, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %26879 to i64*
  %26880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26881 = getelementptr inbounds %struct.GPR, %struct.GPR* %26880, i32 0, i32 15
  %26882 = getelementptr inbounds %struct.Reg, %struct.Reg* %26881, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %26882 to i64*
  %26883 = load i64, i64* %RBP.i85
  %26884 = sub i64 %26883, 20
  %26885 = load i64, i64* %PC.i84
  %26886 = add i64 %26885, 7
  store i64 %26886, i64* %PC.i84
  %26887 = inttoptr i64 %26884 to i32*
  store i32 0, i32* %26887
  store %struct.Memory* %loadMem_40d1fe, %struct.Memory** %MEMORY
  br label %block_.L_40d205

block_.L_40d205:                                  ; preds = %block_40d20f, %block_40d1fe
  %loadMem_40d205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26889 = getelementptr inbounds %struct.GPR, %struct.GPR* %26888, i32 0, i32 33
  %26890 = getelementptr inbounds %struct.Reg, %struct.Reg* %26889, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %26890 to i64*
  %26891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26892 = getelementptr inbounds %struct.GPR, %struct.GPR* %26891, i32 0, i32 15
  %26893 = getelementptr inbounds %struct.Reg, %struct.Reg* %26892, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %26893 to i64*
  %26894 = load i64, i64* %RBP.i83
  %26895 = sub i64 %26894, 20
  %26896 = load i64, i64* %PC.i82
  %26897 = add i64 %26896, 4
  store i64 %26897, i64* %PC.i82
  %26898 = inttoptr i64 %26895 to i32*
  %26899 = load i32, i32* %26898
  %26900 = sub i32 %26899, 4
  %26901 = icmp ult i32 %26899, 4
  %26902 = zext i1 %26901 to i8
  %26903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26902, i8* %26903, align 1
  %26904 = and i32 %26900, 255
  %26905 = call i32 @llvm.ctpop.i32(i32 %26904)
  %26906 = trunc i32 %26905 to i8
  %26907 = and i8 %26906, 1
  %26908 = xor i8 %26907, 1
  %26909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26908, i8* %26909, align 1
  %26910 = xor i32 %26899, 4
  %26911 = xor i32 %26910, %26900
  %26912 = lshr i32 %26911, 4
  %26913 = trunc i32 %26912 to i8
  %26914 = and i8 %26913, 1
  %26915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26914, i8* %26915, align 1
  %26916 = icmp eq i32 %26900, 0
  %26917 = zext i1 %26916 to i8
  %26918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26917, i8* %26918, align 1
  %26919 = lshr i32 %26900, 31
  %26920 = trunc i32 %26919 to i8
  %26921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26920, i8* %26921, align 1
  %26922 = lshr i32 %26899, 31
  %26923 = xor i32 %26919, %26922
  %26924 = add i32 %26923, %26922
  %26925 = icmp eq i32 %26924, 2
  %26926 = zext i1 %26925 to i8
  %26927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26926, i8* %26927, align 1
  store %struct.Memory* %loadMem_40d205, %struct.Memory** %MEMORY
  %loadMem_40d209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26929 = getelementptr inbounds %struct.GPR, %struct.GPR* %26928, i32 0, i32 33
  %26930 = getelementptr inbounds %struct.Reg, %struct.Reg* %26929, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %26930 to i64*
  %26931 = load i64, i64* %PC.i81
  %26932 = add i64 %26931, 124
  %26933 = load i64, i64* %PC.i81
  %26934 = add i64 %26933, 6
  %26935 = load i64, i64* %PC.i81
  %26936 = add i64 %26935, 6
  store i64 %26936, i64* %PC.i81
  %26937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %26938 = load i8, i8* %26937, align 1
  %26939 = icmp ne i8 %26938, 0
  %26940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %26941 = load i8, i8* %26940, align 1
  %26942 = icmp ne i8 %26941, 0
  %26943 = xor i1 %26939, %26942
  %26944 = xor i1 %26943, true
  %26945 = zext i1 %26944 to i8
  store i8 %26945, i8* %BRANCH_TAKEN, align 1
  %26946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26947 = select i1 %26943, i64 %26934, i64 %26932
  store i64 %26947, i64* %26946, align 8
  store %struct.Memory* %loadMem_40d209, %struct.Memory** %MEMORY
  %loadBr_40d209 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d209 = icmp eq i8 %loadBr_40d209, 1
  br i1 %cmpBr_40d209, label %block_.L_40d285, label %block_40d20f

block_40d20f:                                     ; preds = %block_.L_40d205
  %loadMem_40d20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %26948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26949 = getelementptr inbounds %struct.GPR, %struct.GPR* %26948, i32 0, i32 33
  %26950 = getelementptr inbounds %struct.Reg, %struct.Reg* %26949, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %26950 to i64*
  %26951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26952 = getelementptr inbounds %struct.GPR, %struct.GPR* %26951, i32 0, i32 1
  %26953 = getelementptr inbounds %struct.Reg, %struct.Reg* %26952, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %26953 to i64*
  %26954 = load i64, i64* %PC.i79
  %26955 = add i64 %26954, 8
  store i64 %26955, i64* %PC.i79
  %26956 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %26956, i64* %RAX.i80, align 8
  store %struct.Memory* %loadMem_40d20f, %struct.Memory** %MEMORY
  %loadMem_40d217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %26957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26958 = getelementptr inbounds %struct.GPR, %struct.GPR* %26957, i32 0, i32 33
  %26959 = getelementptr inbounds %struct.Reg, %struct.Reg* %26958, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %26959 to i64*
  %26960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26961 = getelementptr inbounds %struct.GPR, %struct.GPR* %26960, i32 0, i32 1
  %26962 = getelementptr inbounds %struct.Reg, %struct.Reg* %26961, i32 0, i32 0
  %RAX.i78 = bitcast %union.anon* %26962 to i64*
  %26963 = load i64, i64* %RAX.i78
  %26964 = load i64, i64* %PC.i77
  %26965 = add i64 %26964, 6
  store i64 %26965, i64* %PC.i77
  %26966 = add i64 13112, %26963
  store i64 %26966, i64* %RAX.i78, align 8
  %26967 = icmp ult i64 %26966, %26963
  %26968 = icmp ult i64 %26966, 13112
  %26969 = or i1 %26967, %26968
  %26970 = zext i1 %26969 to i8
  %26971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26970, i8* %26971, align 1
  %26972 = trunc i64 %26966 to i32
  %26973 = and i32 %26972, 255
  %26974 = call i32 @llvm.ctpop.i32(i32 %26973)
  %26975 = trunc i32 %26974 to i8
  %26976 = and i8 %26975, 1
  %26977 = xor i8 %26976, 1
  %26978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26977, i8* %26978, align 1
  %26979 = xor i64 13112, %26963
  %26980 = xor i64 %26979, %26966
  %26981 = lshr i64 %26980, 4
  %26982 = trunc i64 %26981 to i8
  %26983 = and i8 %26982, 1
  %26984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %26983, i8* %26984, align 1
  %26985 = icmp eq i64 %26966, 0
  %26986 = zext i1 %26985 to i8
  %26987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26986, i8* %26987, align 1
  %26988 = lshr i64 %26966, 63
  %26989 = trunc i64 %26988 to i8
  %26990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26989, i8* %26990, align 1
  %26991 = lshr i64 %26963, 63
  %26992 = xor i64 %26988, %26991
  %26993 = add i64 %26992, %26988
  %26994 = icmp eq i64 %26993, 2
  %26995 = zext i1 %26994 to i8
  %26996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26995, i8* %26996, align 1
  store %struct.Memory* %loadMem_40d217, %struct.Memory** %MEMORY
  %loadMem_40d21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %26997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26998 = getelementptr inbounds %struct.GPR, %struct.GPR* %26997, i32 0, i32 33
  %26999 = getelementptr inbounds %struct.Reg, %struct.Reg* %26998, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %26999 to i64*
  %27000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27001 = getelementptr inbounds %struct.GPR, %struct.GPR* %27000, i32 0, i32 5
  %27002 = getelementptr inbounds %struct.Reg, %struct.Reg* %27001, i32 0, i32 0
  %RCX.i75 = bitcast %union.anon* %27002 to i64*
  %27003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27004 = getelementptr inbounds %struct.GPR, %struct.GPR* %27003, i32 0, i32 15
  %27005 = getelementptr inbounds %struct.Reg, %struct.Reg* %27004, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %27005 to i64*
  %27006 = load i64, i64* %RBP.i76
  %27007 = sub i64 %27006, 20
  %27008 = load i64, i64* %PC.i74
  %27009 = add i64 %27008, 4
  store i64 %27009, i64* %PC.i74
  %27010 = inttoptr i64 %27007 to i32*
  %27011 = load i32, i32* %27010
  %27012 = sext i32 %27011 to i64
  store i64 %27012, i64* %RCX.i75, align 8
  store %struct.Memory* %loadMem_40d21d, %struct.Memory** %MEMORY
  %loadMem_40d221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27014 = getelementptr inbounds %struct.GPR, %struct.GPR* %27013, i32 0, i32 33
  %27015 = getelementptr inbounds %struct.Reg, %struct.Reg* %27014, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %27015 to i64*
  %27016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27017 = getelementptr inbounds %struct.GPR, %struct.GPR* %27016, i32 0, i32 5
  %27018 = getelementptr inbounds %struct.Reg, %struct.Reg* %27017, i32 0, i32 0
  %RCX.i73 = bitcast %union.anon* %27018 to i64*
  %27019 = load i64, i64* %RCX.i73
  %27020 = load i64, i64* %PC.i72
  %27021 = add i64 %27020, 4
  store i64 %27021, i64* %PC.i72
  %27022 = shl i64 %27019, 5
  %27023 = icmp slt i64 %27022, 0
  %27024 = shl i64 %27022, 1
  store i64 %27024, i64* %RCX.i73, align 8
  %27025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %27026 = zext i1 %27023 to i8
  store i8 %27026, i8* %27025, align 1
  %27027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %27028 = trunc i64 %27024 to i32
  %27029 = and i32 %27028, 254
  %27030 = call i32 @llvm.ctpop.i32(i32 %27029)
  %27031 = trunc i32 %27030 to i8
  %27032 = and i8 %27031, 1
  %27033 = xor i8 %27032, 1
  store i8 %27033, i8* %27027, align 1
  %27034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27034, align 1
  %27035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27036 = icmp eq i64 %27024, 0
  %27037 = zext i1 %27036 to i8
  store i8 %27037, i8* %27035, align 1
  %27038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %27039 = lshr i64 %27024, 63
  %27040 = trunc i64 %27039 to i8
  store i8 %27040, i8* %27038, align 1
  %27041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %27041, align 1
  store %struct.Memory* %loadMem_40d221, %struct.Memory** %MEMORY
  %loadMem_40d225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27043 = getelementptr inbounds %struct.GPR, %struct.GPR* %27042, i32 0, i32 33
  %27044 = getelementptr inbounds %struct.Reg, %struct.Reg* %27043, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %27044 to i64*
  %27045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27046 = getelementptr inbounds %struct.GPR, %struct.GPR* %27045, i32 0, i32 1
  %27047 = getelementptr inbounds %struct.Reg, %struct.Reg* %27046, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %27047 to i64*
  %27048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27049 = getelementptr inbounds %struct.GPR, %struct.GPR* %27048, i32 0, i32 5
  %27050 = getelementptr inbounds %struct.Reg, %struct.Reg* %27049, i32 0, i32 0
  %RCX.i71 = bitcast %union.anon* %27050 to i64*
  %27051 = load i64, i64* %RAX.i70
  %27052 = load i64, i64* %RCX.i71
  %27053 = load i64, i64* %PC.i69
  %27054 = add i64 %27053, 3
  store i64 %27054, i64* %PC.i69
  %27055 = add i64 %27052, %27051
  store i64 %27055, i64* %RAX.i70, align 8
  %27056 = icmp ult i64 %27055, %27051
  %27057 = icmp ult i64 %27055, %27052
  %27058 = or i1 %27056, %27057
  %27059 = zext i1 %27058 to i8
  %27060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27059, i8* %27060, align 1
  %27061 = trunc i64 %27055 to i32
  %27062 = and i32 %27061, 255
  %27063 = call i32 @llvm.ctpop.i32(i32 %27062)
  %27064 = trunc i32 %27063 to i8
  %27065 = and i8 %27064, 1
  %27066 = xor i8 %27065, 1
  %27067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27066, i8* %27067, align 1
  %27068 = xor i64 %27052, %27051
  %27069 = xor i64 %27068, %27055
  %27070 = lshr i64 %27069, 4
  %27071 = trunc i64 %27070 to i8
  %27072 = and i8 %27071, 1
  %27073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27072, i8* %27073, align 1
  %27074 = icmp eq i64 %27055, 0
  %27075 = zext i1 %27074 to i8
  %27076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27075, i8* %27076, align 1
  %27077 = lshr i64 %27055, 63
  %27078 = trunc i64 %27077 to i8
  %27079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27078, i8* %27079, align 1
  %27080 = lshr i64 %27051, 63
  %27081 = lshr i64 %27052, 63
  %27082 = xor i64 %27077, %27080
  %27083 = xor i64 %27077, %27081
  %27084 = add i64 %27082, %27083
  %27085 = icmp eq i64 %27084, 2
  %27086 = zext i1 %27085 to i8
  %27087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27086, i8* %27087, align 1
  store %struct.Memory* %loadMem_40d225, %struct.Memory** %MEMORY
  %loadMem_40d228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27089 = getelementptr inbounds %struct.GPR, %struct.GPR* %27088, i32 0, i32 33
  %27090 = getelementptr inbounds %struct.Reg, %struct.Reg* %27089, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %27090 to i64*
  %27091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27092 = getelementptr inbounds %struct.GPR, %struct.GPR* %27091, i32 0, i32 5
  %27093 = getelementptr inbounds %struct.Reg, %struct.Reg* %27092, i32 0, i32 0
  %RCX.i67 = bitcast %union.anon* %27093 to i64*
  %27094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27095 = getelementptr inbounds %struct.GPR, %struct.GPR* %27094, i32 0, i32 15
  %27096 = getelementptr inbounds %struct.Reg, %struct.Reg* %27095, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %27096 to i64*
  %27097 = load i64, i64* %RBP.i68
  %27098 = sub i64 %27097, 24
  %27099 = load i64, i64* %PC.i66
  %27100 = add i64 %27099, 4
  store i64 %27100, i64* %PC.i66
  %27101 = inttoptr i64 %27098 to i32*
  %27102 = load i32, i32* %27101
  %27103 = sext i32 %27102 to i64
  store i64 %27103, i64* %RCX.i67, align 8
  store %struct.Memory* %loadMem_40d228, %struct.Memory** %MEMORY
  %loadMem_40d22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %27104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27105 = getelementptr inbounds %struct.GPR, %struct.GPR* %27104, i32 0, i32 33
  %27106 = getelementptr inbounds %struct.Reg, %struct.Reg* %27105, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %27106 to i64*
  %27107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27108 = getelementptr inbounds %struct.GPR, %struct.GPR* %27107, i32 0, i32 1
  %27109 = getelementptr inbounds %struct.Reg, %struct.Reg* %27108, i32 0, i32 0
  %RAX.i63 = bitcast %union.anon* %27109 to i64*
  %27110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27111 = getelementptr inbounds %struct.GPR, %struct.GPR* %27110, i32 0, i32 5
  %27112 = getelementptr inbounds %struct.Reg, %struct.Reg* %27111, i32 0, i32 0
  %RCX.i64 = bitcast %union.anon* %27112 to i64*
  %27113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27114 = getelementptr inbounds %struct.GPR, %struct.GPR* %27113, i32 0, i32 7
  %27115 = getelementptr inbounds %struct.Reg, %struct.Reg* %27114, i32 0, i32 0
  %RDX.i65 = bitcast %union.anon* %27115 to i64*
  %27116 = load i64, i64* %RAX.i63
  %27117 = load i64, i64* %RCX.i64
  %27118 = mul i64 %27117, 4
  %27119 = add i64 %27118, %27116
  %27120 = load i64, i64* %PC.i62
  %27121 = add i64 %27120, 3
  store i64 %27121, i64* %PC.i62
  %27122 = inttoptr i64 %27119 to i32*
  %27123 = load i32, i32* %27122
  %27124 = zext i32 %27123 to i64
  store i64 %27124, i64* %RDX.i65, align 8
  store %struct.Memory* %loadMem_40d22c, %struct.Memory** %MEMORY
  %loadMem_40d22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %27125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27126 = getelementptr inbounds %struct.GPR, %struct.GPR* %27125, i32 0, i32 33
  %27127 = getelementptr inbounds %struct.Reg, %struct.Reg* %27126, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %27127 to i64*
  %27128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27129 = getelementptr inbounds %struct.GPR, %struct.GPR* %27128, i32 0, i32 7
  %27130 = getelementptr inbounds %struct.Reg, %struct.Reg* %27129, i32 0, i32 0
  %DX.i = bitcast %union.anon* %27130 to i16*
  %27131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27132 = getelementptr inbounds %struct.GPR, %struct.GPR* %27131, i32 0, i32 9
  %27133 = getelementptr inbounds %struct.Reg, %struct.Reg* %27132, i32 0, i32 0
  %SI.i61 = bitcast %union.anon* %27133 to i16*
  %27134 = load i16, i16* %DX.i
  %27135 = zext i16 %27134 to i64
  %27136 = load i64, i64* %PC.i60
  %27137 = add i64 %27136, 3
  store i64 %27137, i64* %PC.i60
  store i16 %27134, i16* %SI.i61, align 2
  store %struct.Memory* %loadMem_40d22f, %struct.Memory** %MEMORY
  %loadMem_40d232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27139 = getelementptr inbounds %struct.GPR, %struct.GPR* %27138, i32 0, i32 33
  %27140 = getelementptr inbounds %struct.Reg, %struct.Reg* %27139, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %27140 to i64*
  %27141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27142 = getelementptr inbounds %struct.GPR, %struct.GPR* %27141, i32 0, i32 1
  %27143 = getelementptr inbounds %struct.Reg, %struct.Reg* %27142, i32 0, i32 0
  %RAX.i59 = bitcast %union.anon* %27143 to i64*
  %27144 = load i64, i64* %PC.i58
  %27145 = add i64 %27144, 8
  store i64 %27145, i64* %PC.i58
  %27146 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %27146, i64* %RAX.i59, align 8
  store %struct.Memory* %loadMem_40d232, %struct.Memory** %MEMORY
  %loadMem_40d23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %27147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27148 = getelementptr inbounds %struct.GPR, %struct.GPR* %27147, i32 0, i32 33
  %27149 = getelementptr inbounds %struct.Reg, %struct.Reg* %27148, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %27149 to i64*
  %27150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27151 = getelementptr inbounds %struct.GPR, %struct.GPR* %27150, i32 0, i32 1
  %27152 = getelementptr inbounds %struct.Reg, %struct.Reg* %27151, i32 0, i32 0
  %RAX.i57 = bitcast %union.anon* %27152 to i64*
  %27153 = load i64, i64* %RAX.i57
  %27154 = add i64 %27153, 6424
  %27155 = load i64, i64* %PC.i56
  %27156 = add i64 %27155, 7
  store i64 %27156, i64* %PC.i56
  %27157 = inttoptr i64 %27154 to i64*
  %27158 = load i64, i64* %27157
  store i64 %27158, i64* %RAX.i57, align 8
  store %struct.Memory* %loadMem_40d23a, %struct.Memory** %MEMORY
  %loadMem_40d241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27160 = getelementptr inbounds %struct.GPR, %struct.GPR* %27159, i32 0, i32 33
  %27161 = getelementptr inbounds %struct.Reg, %struct.Reg* %27160, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %27161 to i64*
  %27162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27163 = getelementptr inbounds %struct.GPR, %struct.GPR* %27162, i32 0, i32 5
  %27164 = getelementptr inbounds %struct.Reg, %struct.Reg* %27163, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %27164 to i64*
  %27165 = load i64, i64* %PC.i54
  %27166 = add i64 %27165, 8
  store i64 %27166, i64* %PC.i54
  %27167 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %27167, i64* %RCX.i55, align 8
  store %struct.Memory* %loadMem_40d241, %struct.Memory** %MEMORY
  %loadMem_40d249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27169 = getelementptr inbounds %struct.GPR, %struct.GPR* %27168, i32 0, i32 33
  %27170 = getelementptr inbounds %struct.Reg, %struct.Reg* %27169, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %27170 to i64*
  %27171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27172 = getelementptr inbounds %struct.GPR, %struct.GPR* %27171, i32 0, i32 5
  %27173 = getelementptr inbounds %struct.Reg, %struct.Reg* %27172, i32 0, i32 0
  %RCX.i52 = bitcast %union.anon* %27173 to i64*
  %27174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27175 = getelementptr inbounds %struct.GPR, %struct.GPR* %27174, i32 0, i32 7
  %27176 = getelementptr inbounds %struct.Reg, %struct.Reg* %27175, i32 0, i32 0
  %RDX.i53 = bitcast %union.anon* %27176 to i64*
  %27177 = load i64, i64* %RCX.i52
  %27178 = add i64 %27177, 156
  %27179 = load i64, i64* %PC.i51
  %27180 = add i64 %27179, 6
  store i64 %27180, i64* %PC.i51
  %27181 = inttoptr i64 %27178 to i32*
  %27182 = load i32, i32* %27181
  %27183 = zext i32 %27182 to i64
  store i64 %27183, i64* %RDX.i53, align 8
  store %struct.Memory* %loadMem_40d249, %struct.Memory** %MEMORY
  %loadMem_40d24f = load %struct.Memory*, %struct.Memory** %MEMORY
  %27184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27185 = getelementptr inbounds %struct.GPR, %struct.GPR* %27184, i32 0, i32 33
  %27186 = getelementptr inbounds %struct.Reg, %struct.Reg* %27185, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %27186 to i64*
  %27187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27188 = getelementptr inbounds %struct.GPR, %struct.GPR* %27187, i32 0, i32 7
  %27189 = getelementptr inbounds %struct.Reg, %struct.Reg* %27188, i32 0, i32 0
  %RDX.i49 = bitcast %union.anon* %27189 to i64*
  %27190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27191 = getelementptr inbounds %struct.GPR, %struct.GPR* %27190, i32 0, i32 15
  %27192 = getelementptr inbounds %struct.Reg, %struct.Reg* %27191, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %27192 to i64*
  %27193 = load i64, i64* %RDX.i49
  %27194 = load i64, i64* %RBP.i50
  %27195 = sub i64 %27194, 8
  %27196 = load i64, i64* %PC.i48
  %27197 = add i64 %27196, 3
  store i64 %27197, i64* %PC.i48
  %27198 = trunc i64 %27193 to i32
  %27199 = inttoptr i64 %27195 to i32*
  %27200 = load i32, i32* %27199
  %27201 = add i32 %27200, %27198
  %27202 = zext i32 %27201 to i64
  store i64 %27202, i64* %RDX.i49, align 8
  %27203 = icmp ult i32 %27201, %27198
  %27204 = icmp ult i32 %27201, %27200
  %27205 = or i1 %27203, %27204
  %27206 = zext i1 %27205 to i8
  %27207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27206, i8* %27207, align 1
  %27208 = and i32 %27201, 255
  %27209 = call i32 @llvm.ctpop.i32(i32 %27208)
  %27210 = trunc i32 %27209 to i8
  %27211 = and i8 %27210, 1
  %27212 = xor i8 %27211, 1
  %27213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27212, i8* %27213, align 1
  %27214 = xor i32 %27200, %27198
  %27215 = xor i32 %27214, %27201
  %27216 = lshr i32 %27215, 4
  %27217 = trunc i32 %27216 to i8
  %27218 = and i8 %27217, 1
  %27219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27218, i8* %27219, align 1
  %27220 = icmp eq i32 %27201, 0
  %27221 = zext i1 %27220 to i8
  %27222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27221, i8* %27222, align 1
  %27223 = lshr i32 %27201, 31
  %27224 = trunc i32 %27223 to i8
  %27225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27224, i8* %27225, align 1
  %27226 = lshr i32 %27198, 31
  %27227 = lshr i32 %27200, 31
  %27228 = xor i32 %27223, %27226
  %27229 = xor i32 %27223, %27227
  %27230 = add i32 %27228, %27229
  %27231 = icmp eq i32 %27230, 2
  %27232 = zext i1 %27231 to i8
  %27233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27232, i8* %27233, align 1
  store %struct.Memory* %loadMem_40d24f, %struct.Memory** %MEMORY
  %loadMem_40d252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27235 = getelementptr inbounds %struct.GPR, %struct.GPR* %27234, i32 0, i32 33
  %27236 = getelementptr inbounds %struct.Reg, %struct.Reg* %27235, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %27236 to i64*
  %27237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27238 = getelementptr inbounds %struct.GPR, %struct.GPR* %27237, i32 0, i32 7
  %27239 = getelementptr inbounds %struct.Reg, %struct.Reg* %27238, i32 0, i32 0
  %RDX.i46 = bitcast %union.anon* %27239 to i64*
  %27240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27241 = getelementptr inbounds %struct.GPR, %struct.GPR* %27240, i32 0, i32 15
  %27242 = getelementptr inbounds %struct.Reg, %struct.Reg* %27241, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %27242 to i64*
  %27243 = load i64, i64* %RDX.i46
  %27244 = load i64, i64* %RBP.i47
  %27245 = sub i64 %27244, 24
  %27246 = load i64, i64* %PC.i45
  %27247 = add i64 %27246, 3
  store i64 %27247, i64* %PC.i45
  %27248 = trunc i64 %27243 to i32
  %27249 = inttoptr i64 %27245 to i32*
  %27250 = load i32, i32* %27249
  %27251 = add i32 %27250, %27248
  %27252 = zext i32 %27251 to i64
  store i64 %27252, i64* %RDX.i46, align 8
  %27253 = icmp ult i32 %27251, %27248
  %27254 = icmp ult i32 %27251, %27250
  %27255 = or i1 %27253, %27254
  %27256 = zext i1 %27255 to i8
  %27257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27256, i8* %27257, align 1
  %27258 = and i32 %27251, 255
  %27259 = call i32 @llvm.ctpop.i32(i32 %27258)
  %27260 = trunc i32 %27259 to i8
  %27261 = and i8 %27260, 1
  %27262 = xor i8 %27261, 1
  %27263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27262, i8* %27263, align 1
  %27264 = xor i32 %27250, %27248
  %27265 = xor i32 %27264, %27251
  %27266 = lshr i32 %27265, 4
  %27267 = trunc i32 %27266 to i8
  %27268 = and i8 %27267, 1
  %27269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27268, i8* %27269, align 1
  %27270 = icmp eq i32 %27251, 0
  %27271 = zext i1 %27270 to i8
  %27272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27271, i8* %27272, align 1
  %27273 = lshr i32 %27251, 31
  %27274 = trunc i32 %27273 to i8
  %27275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27274, i8* %27275, align 1
  %27276 = lshr i32 %27248, 31
  %27277 = lshr i32 %27250, 31
  %27278 = xor i32 %27273, %27276
  %27279 = xor i32 %27273, %27277
  %27280 = add i32 %27278, %27279
  %27281 = icmp eq i32 %27280, 2
  %27282 = zext i1 %27281 to i8
  %27283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27282, i8* %27283, align 1
  store %struct.Memory* %loadMem_40d252, %struct.Memory** %MEMORY
  %loadMem_40d255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27285 = getelementptr inbounds %struct.GPR, %struct.GPR* %27284, i32 0, i32 33
  %27286 = getelementptr inbounds %struct.Reg, %struct.Reg* %27285, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %27286 to i64*
  %27287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27288 = getelementptr inbounds %struct.GPR, %struct.GPR* %27287, i32 0, i32 7
  %27289 = getelementptr inbounds %struct.Reg, %struct.Reg* %27288, i32 0, i32 0
  %EDX.i43 = bitcast %union.anon* %27289 to i32*
  %27290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27291 = getelementptr inbounds %struct.GPR, %struct.GPR* %27290, i32 0, i32 5
  %27292 = getelementptr inbounds %struct.Reg, %struct.Reg* %27291, i32 0, i32 0
  %RCX.i44 = bitcast %union.anon* %27292 to i64*
  %27293 = load i32, i32* %EDX.i43
  %27294 = zext i32 %27293 to i64
  %27295 = load i64, i64* %PC.i42
  %27296 = add i64 %27295, 3
  store i64 %27296, i64* %PC.i42
  %27297 = shl i64 %27294, 32
  %27298 = ashr exact i64 %27297, 32
  store i64 %27298, i64* %RCX.i44, align 8
  store %struct.Memory* %loadMem_40d255, %struct.Memory** %MEMORY
  %loadMem_40d258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27300 = getelementptr inbounds %struct.GPR, %struct.GPR* %27299, i32 0, i32 33
  %27301 = getelementptr inbounds %struct.Reg, %struct.Reg* %27300, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %27301 to i64*
  %27302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27303 = getelementptr inbounds %struct.GPR, %struct.GPR* %27302, i32 0, i32 1
  %27304 = getelementptr inbounds %struct.Reg, %struct.Reg* %27303, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %27304 to i64*
  %27305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27306 = getelementptr inbounds %struct.GPR, %struct.GPR* %27305, i32 0, i32 5
  %27307 = getelementptr inbounds %struct.Reg, %struct.Reg* %27306, i32 0, i32 0
  %RCX.i41 = bitcast %union.anon* %27307 to i64*
  %27308 = load i64, i64* %RAX.i40
  %27309 = load i64, i64* %RCX.i41
  %27310 = mul i64 %27309, 8
  %27311 = add i64 %27310, %27308
  %27312 = load i64, i64* %PC.i39
  %27313 = add i64 %27312, 4
  store i64 %27313, i64* %PC.i39
  %27314 = inttoptr i64 %27311 to i64*
  %27315 = load i64, i64* %27314
  store i64 %27315, i64* %RAX.i40, align 8
  store %struct.Memory* %loadMem_40d258, %struct.Memory** %MEMORY
  %loadMem_40d25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %27316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27317 = getelementptr inbounds %struct.GPR, %struct.GPR* %27316, i32 0, i32 33
  %27318 = getelementptr inbounds %struct.Reg, %struct.Reg* %27317, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %27318 to i64*
  %27319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27320 = getelementptr inbounds %struct.GPR, %struct.GPR* %27319, i32 0, i32 5
  %27321 = getelementptr inbounds %struct.Reg, %struct.Reg* %27320, i32 0, i32 0
  %RCX.i38 = bitcast %union.anon* %27321 to i64*
  %27322 = load i64, i64* %PC.i37
  %27323 = add i64 %27322, 8
  store i64 %27323, i64* %PC.i37
  %27324 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %27324, i64* %RCX.i38, align 8
  store %struct.Memory* %loadMem_40d25c, %struct.Memory** %MEMORY
  %loadMem_40d264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27326 = getelementptr inbounds %struct.GPR, %struct.GPR* %27325, i32 0, i32 33
  %27327 = getelementptr inbounds %struct.Reg, %struct.Reg* %27326, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %27327 to i64*
  %27328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27329 = getelementptr inbounds %struct.GPR, %struct.GPR* %27328, i32 0, i32 5
  %27330 = getelementptr inbounds %struct.Reg, %struct.Reg* %27329, i32 0, i32 0
  %RCX.i35 = bitcast %union.anon* %27330 to i64*
  %27331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27332 = getelementptr inbounds %struct.GPR, %struct.GPR* %27331, i32 0, i32 7
  %27333 = getelementptr inbounds %struct.Reg, %struct.Reg* %27332, i32 0, i32 0
  %RDX.i36 = bitcast %union.anon* %27333 to i64*
  %27334 = load i64, i64* %RCX.i35
  %27335 = add i64 %27334, 152
  %27336 = load i64, i64* %PC.i34
  %27337 = add i64 %27336, 6
  store i64 %27337, i64* %PC.i34
  %27338 = inttoptr i64 %27335 to i32*
  %27339 = load i32, i32* %27338
  %27340 = zext i32 %27339 to i64
  store i64 %27340, i64* %RDX.i36, align 8
  store %struct.Memory* %loadMem_40d264, %struct.Memory** %MEMORY
  %loadMem_40d26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %27341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27342 = getelementptr inbounds %struct.GPR, %struct.GPR* %27341, i32 0, i32 33
  %27343 = getelementptr inbounds %struct.Reg, %struct.Reg* %27342, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %27343 to i64*
  %27344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27345 = getelementptr inbounds %struct.GPR, %struct.GPR* %27344, i32 0, i32 7
  %27346 = getelementptr inbounds %struct.Reg, %struct.Reg* %27345, i32 0, i32 0
  %RDX.i32 = bitcast %union.anon* %27346 to i64*
  %27347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27348 = getelementptr inbounds %struct.GPR, %struct.GPR* %27347, i32 0, i32 15
  %27349 = getelementptr inbounds %struct.Reg, %struct.Reg* %27348, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %27349 to i64*
  %27350 = load i64, i64* %RDX.i32
  %27351 = load i64, i64* %RBP.i33
  %27352 = sub i64 %27351, 4
  %27353 = load i64, i64* %PC.i31
  %27354 = add i64 %27353, 3
  store i64 %27354, i64* %PC.i31
  %27355 = trunc i64 %27350 to i32
  %27356 = inttoptr i64 %27352 to i32*
  %27357 = load i32, i32* %27356
  %27358 = add i32 %27357, %27355
  %27359 = zext i32 %27358 to i64
  store i64 %27359, i64* %RDX.i32, align 8
  %27360 = icmp ult i32 %27358, %27355
  %27361 = icmp ult i32 %27358, %27357
  %27362 = or i1 %27360, %27361
  %27363 = zext i1 %27362 to i8
  %27364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27363, i8* %27364, align 1
  %27365 = and i32 %27358, 255
  %27366 = call i32 @llvm.ctpop.i32(i32 %27365)
  %27367 = trunc i32 %27366 to i8
  %27368 = and i8 %27367, 1
  %27369 = xor i8 %27368, 1
  %27370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27369, i8* %27370, align 1
  %27371 = xor i32 %27357, %27355
  %27372 = xor i32 %27371, %27358
  %27373 = lshr i32 %27372, 4
  %27374 = trunc i32 %27373 to i8
  %27375 = and i8 %27374, 1
  %27376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27375, i8* %27376, align 1
  %27377 = icmp eq i32 %27358, 0
  %27378 = zext i1 %27377 to i8
  %27379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27378, i8* %27379, align 1
  %27380 = lshr i32 %27358, 31
  %27381 = trunc i32 %27380 to i8
  %27382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27381, i8* %27382, align 1
  %27383 = lshr i32 %27355, 31
  %27384 = lshr i32 %27357, 31
  %27385 = xor i32 %27380, %27383
  %27386 = xor i32 %27380, %27384
  %27387 = add i32 %27385, %27386
  %27388 = icmp eq i32 %27387, 2
  %27389 = zext i1 %27388 to i8
  %27390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27389, i8* %27390, align 1
  store %struct.Memory* %loadMem_40d26a, %struct.Memory** %MEMORY
  %loadMem_40d26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %27391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27392 = getelementptr inbounds %struct.GPR, %struct.GPR* %27391, i32 0, i32 33
  %27393 = getelementptr inbounds %struct.Reg, %struct.Reg* %27392, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %27393 to i64*
  %27394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27395 = getelementptr inbounds %struct.GPR, %struct.GPR* %27394, i32 0, i32 7
  %27396 = getelementptr inbounds %struct.Reg, %struct.Reg* %27395, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %27396 to i64*
  %27397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27398 = getelementptr inbounds %struct.GPR, %struct.GPR* %27397, i32 0, i32 15
  %27399 = getelementptr inbounds %struct.Reg, %struct.Reg* %27398, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %27399 to i64*
  %27400 = load i64, i64* %RDX.i
  %27401 = load i64, i64* %RBP.i30
  %27402 = sub i64 %27401, 20
  %27403 = load i64, i64* %PC.i29
  %27404 = add i64 %27403, 3
  store i64 %27404, i64* %PC.i29
  %27405 = trunc i64 %27400 to i32
  %27406 = inttoptr i64 %27402 to i32*
  %27407 = load i32, i32* %27406
  %27408 = add i32 %27407, %27405
  %27409 = zext i32 %27408 to i64
  store i64 %27409, i64* %RDX.i, align 8
  %27410 = icmp ult i32 %27408, %27405
  %27411 = icmp ult i32 %27408, %27407
  %27412 = or i1 %27410, %27411
  %27413 = zext i1 %27412 to i8
  %27414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27413, i8* %27414, align 1
  %27415 = and i32 %27408, 255
  %27416 = call i32 @llvm.ctpop.i32(i32 %27415)
  %27417 = trunc i32 %27416 to i8
  %27418 = and i8 %27417, 1
  %27419 = xor i8 %27418, 1
  %27420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27419, i8* %27420, align 1
  %27421 = xor i32 %27407, %27405
  %27422 = xor i32 %27421, %27408
  %27423 = lshr i32 %27422, 4
  %27424 = trunc i32 %27423 to i8
  %27425 = and i8 %27424, 1
  %27426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27425, i8* %27426, align 1
  %27427 = icmp eq i32 %27408, 0
  %27428 = zext i1 %27427 to i8
  %27429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27428, i8* %27429, align 1
  %27430 = lshr i32 %27408, 31
  %27431 = trunc i32 %27430 to i8
  %27432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27431, i8* %27432, align 1
  %27433 = lshr i32 %27405, 31
  %27434 = lshr i32 %27407, 31
  %27435 = xor i32 %27430, %27433
  %27436 = xor i32 %27430, %27434
  %27437 = add i32 %27435, %27436
  %27438 = icmp eq i32 %27437, 2
  %27439 = zext i1 %27438 to i8
  %27440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27439, i8* %27440, align 1
  store %struct.Memory* %loadMem_40d26d, %struct.Memory** %MEMORY
  %loadMem_40d270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27442 = getelementptr inbounds %struct.GPR, %struct.GPR* %27441, i32 0, i32 33
  %27443 = getelementptr inbounds %struct.Reg, %struct.Reg* %27442, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %27443 to i64*
  %27444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27445 = getelementptr inbounds %struct.GPR, %struct.GPR* %27444, i32 0, i32 7
  %27446 = getelementptr inbounds %struct.Reg, %struct.Reg* %27445, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %27446 to i32*
  %27447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27448 = getelementptr inbounds %struct.GPR, %struct.GPR* %27447, i32 0, i32 5
  %27449 = getelementptr inbounds %struct.Reg, %struct.Reg* %27448, i32 0, i32 0
  %RCX.i28 = bitcast %union.anon* %27449 to i64*
  %27450 = load i32, i32* %EDX.i
  %27451 = zext i32 %27450 to i64
  %27452 = load i64, i64* %PC.i27
  %27453 = add i64 %27452, 3
  store i64 %27453, i64* %PC.i27
  %27454 = shl i64 %27451, 32
  %27455 = ashr exact i64 %27454, 32
  store i64 %27455, i64* %RCX.i28, align 8
  store %struct.Memory* %loadMem_40d270, %struct.Memory** %MEMORY
  %loadMem_40d273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27457 = getelementptr inbounds %struct.GPR, %struct.GPR* %27456, i32 0, i32 33
  %27458 = getelementptr inbounds %struct.Reg, %struct.Reg* %27457, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %27458 to i64*
  %27459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27460 = getelementptr inbounds %struct.GPR, %struct.GPR* %27459, i32 0, i32 9
  %27461 = getelementptr inbounds %struct.Reg, %struct.Reg* %27460, i32 0, i32 0
  %SI.i = bitcast %union.anon* %27461 to i16*
  %27462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27463 = getelementptr inbounds %struct.GPR, %struct.GPR* %27462, i32 0, i32 1
  %27464 = getelementptr inbounds %struct.Reg, %struct.Reg* %27463, i32 0, i32 0
  %RAX.i26 = bitcast %union.anon* %27464 to i64*
  %27465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27466 = getelementptr inbounds %struct.GPR, %struct.GPR* %27465, i32 0, i32 5
  %27467 = getelementptr inbounds %struct.Reg, %struct.Reg* %27466, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %27467 to i64*
  %27468 = load i64, i64* %RAX.i26
  %27469 = load i64, i64* %RCX.i
  %27470 = mul i64 %27469, 2
  %27471 = add i64 %27470, %27468
  %27472 = load i16, i16* %SI.i
  %27473 = zext i16 %27472 to i64
  %27474 = load i64, i64* %PC.i25
  %27475 = add i64 %27474, 4
  store i64 %27475, i64* %PC.i25
  %27476 = inttoptr i64 %27471 to i16*
  store i16 %27472, i16* %27476
  store %struct.Memory* %loadMem_40d273, %struct.Memory** %MEMORY
  %loadMem_40d277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27478 = getelementptr inbounds %struct.GPR, %struct.GPR* %27477, i32 0, i32 33
  %27479 = getelementptr inbounds %struct.Reg, %struct.Reg* %27478, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %27479 to i64*
  %27480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27481 = getelementptr inbounds %struct.GPR, %struct.GPR* %27480, i32 0, i32 1
  %27482 = getelementptr inbounds %struct.Reg, %struct.Reg* %27481, i32 0, i32 0
  %RAX.i23 = bitcast %union.anon* %27482 to i64*
  %27483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27484 = getelementptr inbounds %struct.GPR, %struct.GPR* %27483, i32 0, i32 15
  %27485 = getelementptr inbounds %struct.Reg, %struct.Reg* %27484, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %27485 to i64*
  %27486 = load i64, i64* %RBP.i24
  %27487 = sub i64 %27486, 20
  %27488 = load i64, i64* %PC.i22
  %27489 = add i64 %27488, 3
  store i64 %27489, i64* %PC.i22
  %27490 = inttoptr i64 %27487 to i32*
  %27491 = load i32, i32* %27490
  %27492 = zext i32 %27491 to i64
  store i64 %27492, i64* %RAX.i23, align 8
  store %struct.Memory* %loadMem_40d277, %struct.Memory** %MEMORY
  %loadMem_40d27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %27493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27494 = getelementptr inbounds %struct.GPR, %struct.GPR* %27493, i32 0, i32 33
  %27495 = getelementptr inbounds %struct.Reg, %struct.Reg* %27494, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %27495 to i64*
  %27496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27497 = getelementptr inbounds %struct.GPR, %struct.GPR* %27496, i32 0, i32 1
  %27498 = getelementptr inbounds %struct.Reg, %struct.Reg* %27497, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %27498 to i64*
  %27499 = load i64, i64* %RAX.i21
  %27500 = load i64, i64* %PC.i20
  %27501 = add i64 %27500, 3
  store i64 %27501, i64* %PC.i20
  %27502 = trunc i64 %27499 to i32
  %27503 = add i32 1, %27502
  %27504 = zext i32 %27503 to i64
  store i64 %27504, i64* %RAX.i21, align 8
  %27505 = icmp ult i32 %27503, %27502
  %27506 = icmp ult i32 %27503, 1
  %27507 = or i1 %27505, %27506
  %27508 = zext i1 %27507 to i8
  %27509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27508, i8* %27509, align 1
  %27510 = and i32 %27503, 255
  %27511 = call i32 @llvm.ctpop.i32(i32 %27510)
  %27512 = trunc i32 %27511 to i8
  %27513 = and i8 %27512, 1
  %27514 = xor i8 %27513, 1
  %27515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27514, i8* %27515, align 1
  %27516 = xor i64 1, %27499
  %27517 = trunc i64 %27516 to i32
  %27518 = xor i32 %27517, %27503
  %27519 = lshr i32 %27518, 4
  %27520 = trunc i32 %27519 to i8
  %27521 = and i8 %27520, 1
  %27522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27521, i8* %27522, align 1
  %27523 = icmp eq i32 %27503, 0
  %27524 = zext i1 %27523 to i8
  %27525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27524, i8* %27525, align 1
  %27526 = lshr i32 %27503, 31
  %27527 = trunc i32 %27526 to i8
  %27528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27527, i8* %27528, align 1
  %27529 = lshr i32 %27502, 31
  %27530 = xor i32 %27526, %27529
  %27531 = add i32 %27530, %27526
  %27532 = icmp eq i32 %27531, 2
  %27533 = zext i1 %27532 to i8
  %27534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27533, i8* %27534, align 1
  store %struct.Memory* %loadMem_40d27a, %struct.Memory** %MEMORY
  %loadMem_40d27d = load %struct.Memory*, %struct.Memory** %MEMORY
  %27535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27536 = getelementptr inbounds %struct.GPR, %struct.GPR* %27535, i32 0, i32 33
  %27537 = getelementptr inbounds %struct.Reg, %struct.Reg* %27536, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %27537 to i64*
  %27538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27539 = getelementptr inbounds %struct.GPR, %struct.GPR* %27538, i32 0, i32 1
  %27540 = getelementptr inbounds %struct.Reg, %struct.Reg* %27539, i32 0, i32 0
  %EAX.i18 = bitcast %union.anon* %27540 to i32*
  %27541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27542 = getelementptr inbounds %struct.GPR, %struct.GPR* %27541, i32 0, i32 15
  %27543 = getelementptr inbounds %struct.Reg, %struct.Reg* %27542, i32 0, i32 0
  %RBP.i19 = bitcast %union.anon* %27543 to i64*
  %27544 = load i64, i64* %RBP.i19
  %27545 = sub i64 %27544, 20
  %27546 = load i32, i32* %EAX.i18
  %27547 = zext i32 %27546 to i64
  %27548 = load i64, i64* %PC.i17
  %27549 = add i64 %27548, 3
  store i64 %27549, i64* %PC.i17
  %27550 = inttoptr i64 %27545 to i32*
  store i32 %27546, i32* %27550
  store %struct.Memory* %loadMem_40d27d, %struct.Memory** %MEMORY
  %loadMem_40d280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27552 = getelementptr inbounds %struct.GPR, %struct.GPR* %27551, i32 0, i32 33
  %27553 = getelementptr inbounds %struct.Reg, %struct.Reg* %27552, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %27553 to i64*
  %27554 = load i64, i64* %PC.i16
  %27555 = add i64 %27554, -123
  %27556 = load i64, i64* %PC.i16
  %27557 = add i64 %27556, 5
  store i64 %27557, i64* %PC.i16
  %27558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27555, i64* %27558, align 8
  store %struct.Memory* %loadMem_40d280, %struct.Memory** %MEMORY
  br label %block_.L_40d205

block_.L_40d285:                                  ; preds = %block_.L_40d205
  %loadMem_40d285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27560 = getelementptr inbounds %struct.GPR, %struct.GPR* %27559, i32 0, i32 33
  %27561 = getelementptr inbounds %struct.Reg, %struct.Reg* %27560, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %27561 to i64*
  %27562 = load i64, i64* %PC.i15
  %27563 = add i64 %27562, 5
  %27564 = load i64, i64* %PC.i15
  %27565 = add i64 %27564, 5
  store i64 %27565, i64* %PC.i15
  %27566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27563, i64* %27566, align 8
  store %struct.Memory* %loadMem_40d285, %struct.Memory** %MEMORY
  br label %block_.L_40d28a

block_.L_40d28a:                                  ; preds = %block_.L_40d285
  %loadMem_40d28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %27567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27568 = getelementptr inbounds %struct.GPR, %struct.GPR* %27567, i32 0, i32 33
  %27569 = getelementptr inbounds %struct.Reg, %struct.Reg* %27568, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %27569 to i64*
  %27570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27571 = getelementptr inbounds %struct.GPR, %struct.GPR* %27570, i32 0, i32 1
  %27572 = getelementptr inbounds %struct.Reg, %struct.Reg* %27571, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %27572 to i64*
  %27573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27574 = getelementptr inbounds %struct.GPR, %struct.GPR* %27573, i32 0, i32 15
  %27575 = getelementptr inbounds %struct.Reg, %struct.Reg* %27574, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %27575 to i64*
  %27576 = load i64, i64* %RBP.i14
  %27577 = sub i64 %27576, 24
  %27578 = load i64, i64* %PC.i12
  %27579 = add i64 %27578, 3
  store i64 %27579, i64* %PC.i12
  %27580 = inttoptr i64 %27577 to i32*
  %27581 = load i32, i32* %27580
  %27582 = zext i32 %27581 to i64
  store i64 %27582, i64* %RAX.i13, align 8
  store %struct.Memory* %loadMem_40d28a, %struct.Memory** %MEMORY
  %loadMem_40d28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %27583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27584 = getelementptr inbounds %struct.GPR, %struct.GPR* %27583, i32 0, i32 33
  %27585 = getelementptr inbounds %struct.Reg, %struct.Reg* %27584, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %27585 to i64*
  %27586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27587 = getelementptr inbounds %struct.GPR, %struct.GPR* %27586, i32 0, i32 1
  %27588 = getelementptr inbounds %struct.Reg, %struct.Reg* %27587, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %27588 to i64*
  %27589 = load i64, i64* %RAX.i11
  %27590 = load i64, i64* %PC.i10
  %27591 = add i64 %27590, 3
  store i64 %27591, i64* %PC.i10
  %27592 = trunc i64 %27589 to i32
  %27593 = add i32 1, %27592
  %27594 = zext i32 %27593 to i64
  store i64 %27594, i64* %RAX.i11, align 8
  %27595 = icmp ult i32 %27593, %27592
  %27596 = icmp ult i32 %27593, 1
  %27597 = or i1 %27595, %27596
  %27598 = zext i1 %27597 to i8
  %27599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27598, i8* %27599, align 1
  %27600 = and i32 %27593, 255
  %27601 = call i32 @llvm.ctpop.i32(i32 %27600)
  %27602 = trunc i32 %27601 to i8
  %27603 = and i8 %27602, 1
  %27604 = xor i8 %27603, 1
  %27605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27604, i8* %27605, align 1
  %27606 = xor i64 1, %27589
  %27607 = trunc i64 %27606 to i32
  %27608 = xor i32 %27607, %27593
  %27609 = lshr i32 %27608, 4
  %27610 = trunc i32 %27609 to i8
  %27611 = and i8 %27610, 1
  %27612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27611, i8* %27612, align 1
  %27613 = icmp eq i32 %27593, 0
  %27614 = zext i1 %27613 to i8
  %27615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27614, i8* %27615, align 1
  %27616 = lshr i32 %27593, 31
  %27617 = trunc i32 %27616 to i8
  %27618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27617, i8* %27618, align 1
  %27619 = lshr i32 %27592, 31
  %27620 = xor i32 %27616, %27619
  %27621 = add i32 %27620, %27616
  %27622 = icmp eq i32 %27621, 2
  %27623 = zext i1 %27622 to i8
  %27624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27623, i8* %27624, align 1
  store %struct.Memory* %loadMem_40d28d, %struct.Memory** %MEMORY
  %loadMem_40d290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27626 = getelementptr inbounds %struct.GPR, %struct.GPR* %27625, i32 0, i32 33
  %27627 = getelementptr inbounds %struct.Reg, %struct.Reg* %27626, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %27627 to i64*
  %27628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27629 = getelementptr inbounds %struct.GPR, %struct.GPR* %27628, i32 0, i32 1
  %27630 = getelementptr inbounds %struct.Reg, %struct.Reg* %27629, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %27630 to i32*
  %27631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27632 = getelementptr inbounds %struct.GPR, %struct.GPR* %27631, i32 0, i32 15
  %27633 = getelementptr inbounds %struct.Reg, %struct.Reg* %27632, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %27633 to i64*
  %27634 = load i64, i64* %RBP.i9
  %27635 = sub i64 %27634, 24
  %27636 = load i32, i32* %EAX.i
  %27637 = zext i32 %27636 to i64
  %27638 = load i64, i64* %PC.i8
  %27639 = add i64 %27638, 3
  store i64 %27639, i64* %PC.i8
  %27640 = inttoptr i64 %27635 to i32*
  store i32 %27636, i32* %27640
  store %struct.Memory* %loadMem_40d290, %struct.Memory** %MEMORY
  %loadMem_40d293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27642 = getelementptr inbounds %struct.GPR, %struct.GPR* %27641, i32 0, i32 33
  %27643 = getelementptr inbounds %struct.Reg, %struct.Reg* %27642, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %27643 to i64*
  %27644 = load i64, i64* %PC.i7
  %27645 = add i64 %27644, -159
  %27646 = load i64, i64* %PC.i7
  %27647 = add i64 %27646, 5
  store i64 %27647, i64* %PC.i7
  %27648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %27645, i64* %27648, align 8
  store %struct.Memory* %loadMem_40d293, %struct.Memory** %MEMORY
  br label %block_.L_40d1f4

block_.L_40d298:                                  ; preds = %block_.L_40d1f4
  %loadMem_40d298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27650 = getelementptr inbounds %struct.GPR, %struct.GPR* %27649, i32 0, i32 33
  %27651 = getelementptr inbounds %struct.Reg, %struct.Reg* %27650, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %27651 to i64*
  %27652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27653 = getelementptr inbounds %struct.GPR, %struct.GPR* %27652, i32 0, i32 1
  %27654 = getelementptr inbounds %struct.Reg, %struct.Reg* %27653, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %27654 to i64*
  %27655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27656 = getelementptr inbounds %struct.GPR, %struct.GPR* %27655, i32 0, i32 15
  %27657 = getelementptr inbounds %struct.Reg, %struct.Reg* %27656, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %27657 to i64*
  %27658 = load i64, i64* %RBP.i6
  %27659 = sub i64 %27658, 104
  %27660 = load i64, i64* %PC.i5
  %27661 = add i64 %27660, 3
  store i64 %27661, i64* %PC.i5
  %27662 = inttoptr i64 %27659 to i32*
  %27663 = load i32, i32* %27662
  %27664 = zext i32 %27663 to i64
  store i64 %27664, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_40d298, %struct.Memory** %MEMORY
  %loadMem_40d29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %27665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27666 = getelementptr inbounds %struct.GPR, %struct.GPR* %27665, i32 0, i32 33
  %27667 = getelementptr inbounds %struct.Reg, %struct.Reg* %27666, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %27667 to i64*
  %27668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27669 = getelementptr inbounds %struct.GPR, %struct.GPR* %27668, i32 0, i32 13
  %27670 = getelementptr inbounds %struct.Reg, %struct.Reg* %27669, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %27670 to i64*
  %27671 = load i64, i64* %RSP.i
  %27672 = load i64, i64* %PC.i4
  %27673 = add i64 %27672, 7
  store i64 %27673, i64* %PC.i4
  %27674 = add i64 416, %27671
  store i64 %27674, i64* %RSP.i, align 8
  %27675 = icmp ult i64 %27674, %27671
  %27676 = icmp ult i64 %27674, 416
  %27677 = or i1 %27675, %27676
  %27678 = zext i1 %27677 to i8
  %27679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27678, i8* %27679, align 1
  %27680 = trunc i64 %27674 to i32
  %27681 = and i32 %27680, 255
  %27682 = call i32 @llvm.ctpop.i32(i32 %27681)
  %27683 = trunc i32 %27682 to i8
  %27684 = and i8 %27683, 1
  %27685 = xor i8 %27684, 1
  %27686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27685, i8* %27686, align 1
  %27687 = xor i64 416, %27671
  %27688 = xor i64 %27687, %27674
  %27689 = lshr i64 %27688, 4
  %27690 = trunc i64 %27689 to i8
  %27691 = and i8 %27690, 1
  %27692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27691, i8* %27692, align 1
  %27693 = icmp eq i64 %27674, 0
  %27694 = zext i1 %27693 to i8
  %27695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27694, i8* %27695, align 1
  %27696 = lshr i64 %27674, 63
  %27697 = trunc i64 %27696 to i8
  %27698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27697, i8* %27698, align 1
  %27699 = lshr i64 %27671, 63
  %27700 = xor i64 %27696, %27699
  %27701 = add i64 %27700, %27696
  %27702 = icmp eq i64 %27701, 2
  %27703 = zext i1 %27702 to i8
  %27704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27703, i8* %27704, align 1
  store %struct.Memory* %loadMem_40d29b, %struct.Memory** %MEMORY
  %loadMem_40d2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27706 = getelementptr inbounds %struct.GPR, %struct.GPR* %27705, i32 0, i32 33
  %27707 = getelementptr inbounds %struct.Reg, %struct.Reg* %27706, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %27707 to i64*
  %27708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27709 = getelementptr inbounds %struct.GPR, %struct.GPR* %27708, i32 0, i32 15
  %27710 = getelementptr inbounds %struct.Reg, %struct.Reg* %27709, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %27710 to i64*
  %27711 = load i64, i64* %PC.i2
  %27712 = add i64 %27711, 1
  store i64 %27712, i64* %PC.i2
  %27713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27714 = load i64, i64* %27713, align 8
  %27715 = add i64 %27714, 8
  %27716 = inttoptr i64 %27714 to i64*
  %27717 = load i64, i64* %27716
  store i64 %27717, i64* %RBP.i3, align 8
  store i64 %27715, i64* %27713, align 8
  store %struct.Memory* %loadMem_40d2a2, %struct.Memory** %MEMORY
  %loadMem_40d2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %27718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %27719 = getelementptr inbounds %struct.GPR, %struct.GPR* %27718, i32 0, i32 33
  %27720 = getelementptr inbounds %struct.Reg, %struct.Reg* %27719, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %27720 to i64*
  %27721 = load i64, i64* %PC.i1
  %27722 = add i64 %27721, 1
  store i64 %27722, i64* %PC.i1
  %27723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %27724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27725 = load i64, i64* %27724, align 8
  %27726 = inttoptr i64 %27725 to i64*
  %27727 = load i64, i64* %27726
  store i64 %27727, i64* %27723, align 8
  %27728 = add i64 %27725, 8
  store i64 %27728, i64* %27724, align 8
  store %struct.Memory* %loadMem_40d2a3, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40d2a3
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x1a0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 416
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 416
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 416, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xa5a55__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa5a55__rip__type* @G_0xa5a55__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xa5a55__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa5a55__rip__type* @G_0xa5a55__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x12c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x130__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x134__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x134__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3738__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xdc__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r8__r9_8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xe0__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__r9____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___r9___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R9, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r9___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf8__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__r8____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xc___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 12
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 12, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__edx___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.pow_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xa58ed__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa58ed__rip__type* @G_0xa58ed__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xa58ed__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xa58ed__rip__type* @G_0xa58ed__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 296
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__r8____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RDI, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__r8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 15, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 15
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 15, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__r8____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RDX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__r8____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x138__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x138__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x13c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c0fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c0e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xb0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rcx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c03a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c0ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c029(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c243(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c1c9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c112(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3338__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x33b8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13240
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3378__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13176
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x33f8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13304
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c101(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c3b3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c312(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c25b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c24a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c4ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c456(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RCX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x40__rbp__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RCX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x40__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c3cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -176
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -144
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c3ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c5c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40c550(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c4c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x38__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c4b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40cdeb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72444
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c623(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x6d4750(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x6d4750_type* @G_0x6d4750 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c646(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11948__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72008
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x54__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924288
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924289
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c664(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924257
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xb0__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2750___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xcc__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R9, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___r9__r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R9
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xb8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RAX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x148__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl___rsi__r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %19 = bitcast %union.anon* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %23 = bitcast %union.anon* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = inttoptr i64 %15 to i32*
  %27 = load i32, i32* %26
  %28 = sext i32 %27 to i64
  %29 = shl i64 %25, 32
  %30 = or i64 %29, %21
  %31 = sdiv i64 %30, %28
  %32 = shl i64 %31, 32
  %33 = ashr exact i64 %32, 32
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %block_400488
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %37, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:39:                                     ; preds = %block_400488
  %40 = srem i64 %30, %28
  %41 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %42 = and i64 %31, 4294967295
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %44 = and i64 %40, 4294967295
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %35, %39
  %51 = phi %struct.Memory* [ %38, %35 ], [ %2, %39 ]
  ret %struct.Memory* %51
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x104__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x148__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___r8__rsi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sign(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xfc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xfc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xb0__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2750___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc0__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R10, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r10___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R9, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R10, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___r9__r10_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R9
  %17 = load i64, i64* %R10
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc4__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %R9, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___r9__r10_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R9
  %16 = load i64, i64* %R10
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R9, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___r8__r9_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x100__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2750___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc0__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R9, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___r8__r9_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x108__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 264
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40cb83(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 260
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 264
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xfc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x11c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x120__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2a50___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2a50_type* @G__0x4b2a50 to i64), i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b28d0___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc0__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R11, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r11___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R10, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R11, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___r10__r11_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %R10
  %17 = load i64, i64* %R11
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x158__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x150__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___r8__r9_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = load i64, i64* %R9
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RSI, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 272
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x158__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.levrun_linfo_inter(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x110__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_MINUS0x110__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 272
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fmul double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x128__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x11c__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x108__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x100__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x15c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x168__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x15c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 280
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x168__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x118__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_MINUS0x118__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 280
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fmul double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd_MINUS0x118__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %13 to double*
  %19 = load double, double* %18
  %20 = fcmp uno double %17, %19
  br i1 %20, label %21, label %33

; <label>:21:                                     ; preds = %block_400488
  %22 = fadd double %17, %19
  %23 = bitcast double %22 to i64
  %24 = and i64 %23, 9221120237041090560
  %25 = icmp eq i64 %24, 9218868437227405312
  %26 = and i64 %23, 2251799813685247
  %27 = icmp ne i64 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %39

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = fcmp ogt double %17, %19
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp olt double %17, %19
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %35
  %38 = fcmp oeq double %17, %19
  br i1 %38, label %39, label %46

; <label>:39:                                     ; preds = %37, %35, %33, %21
  %40 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 1, %37 ], [ 1, %21 ]
  %41 = phi i8 [ 0, %33 ], [ 0, %35 ], [ 0, %37 ], [ 1, %21 ]
  %42 = phi i8 [ 0, %33 ], [ 1, %35 ], [ 0, %37 ], [ 1, %21 ]
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %41, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %42, i8* %45, align 1
  br label %46

; <label>:46:                                     ; preds = %39, %37
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %49, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_.exit: ; preds = %29, %46
  %50 = phi %struct.Memory* [ %32, %29 ], [ %2, %46 ]
  ret %struct.Memory* %50
}

define %struct.Memory* @routine_jne_.L_40cb10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_40cb10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x16c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40caf6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x170__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cb02(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x108__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x170__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cb46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x118__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_40cb38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cb41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x104__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 260
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cb66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xfc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cb72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x100__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cc1d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cbaf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cc18(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cbcd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x178__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cbd9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x178__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cc00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cc0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40cd1d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40cc4b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf423f___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 999999, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 999999
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 999999, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cc7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b23a0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b23a0_type* @G__0x4b23a0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x9a4__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2468
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xe8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x60__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2a50___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2a50_type* @G__0x4b2a50 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b28d0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc0__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx__r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x24__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b2750___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b2750_type* @G__0x4b2750 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xcc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rcx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4b28d0___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4b28d0_type* @G__0x4b28d0 to i64), i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xcc__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %R8, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____r8__r9_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %R9
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c5e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xe8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x60__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40cf20(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40ce55(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x40__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ce15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40cf0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ce88(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cf12(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ce04(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40d1ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40cf78(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cf38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40d1da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RSI, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x180__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40d001(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x184__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d01d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x184__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x184__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x180__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40d04a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x188__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d09f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x50__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40d077(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d093(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x188__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x188__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bec__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -80
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rdx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDI, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RDI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x190__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40d107(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d123(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x194__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x194__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x190__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40d150(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x198__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d1a5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x50__rbp__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -80
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RDX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40d17d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x19c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d199(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x19c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x19c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x198__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x198__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cfab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d1df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cf27(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40d298(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40d285(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d205(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d28a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d1f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1a0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 416, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 416
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 416, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
