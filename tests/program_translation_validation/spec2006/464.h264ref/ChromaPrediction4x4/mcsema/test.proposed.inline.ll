; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4690_type = type <{ [8 x i8] }>
%G_0x6d4740_type = type <{ [8 x i8] }>
%G_0x6f9728_type = type <{ [8 x i8] }>
%G_0x70fcf8_type = type <{ [8 x i8] }>
%G_0x710790_type = type <{ [4 x i8] }>
%G_0x7242a0_type = type <{ [4 x i8] }>
%G__0x6cc2b0_type = type <{ [8 x i8] }>
%G__0x6cc2f0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4690 = global %G_0x6d4690_type zeroinitializer
@G_0x6d4740 = global %G_0x6d4740_type zeroinitializer
@G_0x6f9728 = global %G_0x6f9728_type zeroinitializer
@G_0x70fcf8 = global %G_0x70fcf8_type zeroinitializer
@G_0x710790 = global %G_0x710790_type zeroinitializer
@G_0x7242a0 = global %G_0x7242a0_type zeroinitializer
@G__0x6cc2b0 = global %G__0x6cc2b0_type zeroinitializer
@G__0x6cc2f0 = global %G__0x6cc2f0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_440440.IntraChromaPrediction4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_440530.OneComponentChromaPrediction4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_43b710.clip1a_chr(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @ChromaPrediction4x4(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_43fcc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_43fcc0, %struct.Memory** %MEMORY
  %loadMem_43fcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i210 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i211 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i210
  %27 = load i64, i64* %PC.i209
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i209
  store i64 %26, i64* %RBP.i211, align 8
  store %struct.Memory* %loadMem_43fcc1, %struct.Memory** %MEMORY
  %loadMem_43fcc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 3
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RBX.i1089 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RBX.i1089
  %36 = load i64, i64* %PC.i1088
  %37 = add i64 %36, 1
  store i64 %37, i64* %PC.i1088
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_43fcc4, %struct.Memory** %MEMORY
  %loadMem_43fcc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 13
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %RSP.i1087 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %RSP.i1087
  %49 = load i64, i64* %PC.i1086
  %50 = add i64 %49, 7
  store i64 %50, i64* %PC.i1086
  %51 = sub i64 %48, 136
  store i64 %51, i64* %RSP.i1087, align 8
  %52 = icmp ult i64 %48, 136
  %53 = zext i1 %52 to i8
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %53, i8* %54, align 1
  %55 = trunc i64 %51 to i32
  %56 = and i32 %55, 255
  %57 = call i32 @llvm.ctpop.i32(i32 %56)
  %58 = trunc i32 %57 to i8
  %59 = and i8 %58, 1
  %60 = xor i8 %59, 1
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %60, i8* %61, align 1
  %62 = xor i64 136, %48
  %63 = xor i64 %62, %51
  %64 = lshr i64 %63, 4
  %65 = trunc i64 %64 to i8
  %66 = and i8 %65, 1
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %66, i8* %67, align 1
  %68 = icmp eq i64 %51, 0
  %69 = zext i1 %68 to i8
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %69, i8* %70, align 1
  %71 = lshr i64 %51, 63
  %72 = trunc i64 %71 to i8
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %72, i8* %73, align 1
  %74 = lshr i64 %48, 63
  %75 = xor i64 %71, %74
  %76 = add i64 %75, %74
  %77 = icmp eq i64 %76, 2
  %78 = zext i1 %77 to i8
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %78, i8* %79, align 1
  store %struct.Memory* %loadMem_43fcc5, %struct.Memory** %MEMORY
  %loadMem_43fccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %81 = getelementptr inbounds %struct.GPR, %struct.GPR* %80, i32 0, i32 33
  %82 = getelementptr inbounds %struct.Reg, %struct.Reg* %81, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %82 to i64*
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 1
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %AX.i1084 = bitcast %union.anon* %85 to i16*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 15
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %88 to i64*
  %89 = load i64, i64* %RBP.i1085
  %90 = add i64 %89, 24
  %91 = load i64, i64* %PC.i1083
  %92 = add i64 %91, 4
  store i64 %92, i64* %PC.i1083
  %93 = inttoptr i64 %90 to i16*
  %94 = load i16, i16* %93
  store i16 %94, i16* %AX.i1084, align 2
  store %struct.Memory* %loadMem_43fccc, %struct.Memory** %MEMORY
  %loadMem_43fcd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %96 = getelementptr inbounds %struct.GPR, %struct.GPR* %95, i32 0, i32 33
  %97 = getelementptr inbounds %struct.Reg, %struct.Reg* %96, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %97 to i64*
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %99 = getelementptr inbounds %struct.GPR, %struct.GPR* %98, i32 0, i32 21
  %100 = getelementptr inbounds %struct.Reg, %struct.Reg* %99, i32 0, i32 0
  %R10W.i1081 = bitcast %union.anon* %100 to i16*
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.GPR, %struct.GPR* %101, i32 0, i32 15
  %103 = getelementptr inbounds %struct.Reg, %struct.Reg* %102, i32 0, i32 0
  %RBP.i1082 = bitcast %union.anon* %103 to i64*
  %104 = load i64, i64* %RBP.i1082
  %105 = add i64 %104, 16
  %106 = load i64, i64* %PC.i1080
  %107 = add i64 %106, 5
  store i64 %107, i64* %PC.i1080
  %108 = inttoptr i64 %105 to i16*
  %109 = load i16, i16* %108
  store i16 %109, i16* %R10W.i1081, align 2
  store %struct.Memory* %loadMem_43fcd0, %struct.Memory** %MEMORY
  %loadMem_43fcd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %111 = getelementptr inbounds %struct.GPR, %struct.GPR* %110, i32 0, i32 33
  %112 = getelementptr inbounds %struct.Reg, %struct.Reg* %111, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %112 to i64*
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %114 = getelementptr inbounds %struct.GPR, %struct.GPR* %113, i32 0, i32 23
  %115 = getelementptr inbounds %struct.Reg, %struct.Reg* %114, i32 0, i32 0
  %R11.i1079 = bitcast %union.anon* %115 to i64*
  %116 = load i64, i64* %PC.i1078
  %117 = add i64 %116, 10
  store i64 %117, i64* %PC.i1078
  store i64 ptrtoint (%G__0x6cc2f0_type* @G__0x6cc2f0 to i64), i64* %R11.i1079, align 8
  store %struct.Memory* %loadMem_43fcd5, %struct.Memory** %MEMORY
  %loadMem_43fcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 33
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %120 to i64*
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 3
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %RBX.i1077 = bitcast %union.anon* %123 to i64*
  %124 = load i64, i64* %PC.i1076
  %125 = add i64 %124, 10
  store i64 %125, i64* %PC.i1076
  store i64 ptrtoint (%G__0x6cc2b0_type* @G__0x6cc2b0 to i64), i64* %RBX.i1077, align 8
  store %struct.Memory* %loadMem_43fcdf, %struct.Memory** %MEMORY
  %loadMem_43fce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 33
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %128 to i64*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 11
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %EDI.i1074 = bitcast %union.anon* %131 to i32*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 15
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %134 to i64*
  %135 = load i64, i64* %RBP.i1075
  %136 = sub i64 %135, 12
  %137 = load i32, i32* %EDI.i1074
  %138 = zext i32 %137 to i64
  %139 = load i64, i64* %PC.i1073
  %140 = add i64 %139, 3
  store i64 %140, i64* %PC.i1073
  %141 = inttoptr i64 %136 to i32*
  store i32 %137, i32* %141
  store %struct.Memory* %loadMem_43fce9, %struct.Memory** %MEMORY
  %loadMem_43fcec = load %struct.Memory*, %struct.Memory** %MEMORY
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 33
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 9
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %ESI.i1071 = bitcast %union.anon* %147 to i32*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 15
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RBP.i1072 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RBP.i1072
  %152 = sub i64 %151, 16
  %153 = load i32, i32* %ESI.i1071
  %154 = zext i32 %153 to i64
  %155 = load i64, i64* %PC.i1070
  %156 = add i64 %155, 3
  store i64 %156, i64* %PC.i1070
  %157 = inttoptr i64 %152 to i32*
  store i32 %153, i32* %157
  store %struct.Memory* %loadMem_43fcec, %struct.Memory** %MEMORY
  %loadMem_43fcef = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 7
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %EDX.i1068 = bitcast %union.anon* %163 to i32*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 15
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %166 to i64*
  %167 = load i64, i64* %RBP.i1069
  %168 = sub i64 %167, 20
  %169 = load i32, i32* %EDX.i1068
  %170 = zext i32 %169 to i64
  %171 = load i64, i64* %PC.i1067
  %172 = add i64 %171, 3
  store i64 %172, i64* %PC.i1067
  %173 = inttoptr i64 %168 to i32*
  store i32 %169, i32* %173
  store %struct.Memory* %loadMem_43fcef, %struct.Memory** %MEMORY
  %loadMem_43fcf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 33
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %176 to i64*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 5
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %ECX.i1065 = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 15
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %182 to i64*
  %183 = load i64, i64* %RBP.i1066
  %184 = sub i64 %183, 24
  %185 = load i32, i32* %ECX.i1065
  %186 = zext i32 %185 to i64
  %187 = load i64, i64* %PC.i1064
  %188 = add i64 %187, 3
  store i64 %188, i64* %PC.i1064
  %189 = inttoptr i64 %184 to i32*
  store i32 %185, i32* %189
  store %struct.Memory* %loadMem_43fcf2, %struct.Memory** %MEMORY
  %loadMem_43fcf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 33
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %192 to i64*
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 17
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %R8D.i1062 = bitcast %union.anon* %195 to i32*
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %197 = getelementptr inbounds %struct.GPR, %struct.GPR* %196, i32 0, i32 15
  %198 = getelementptr inbounds %struct.Reg, %struct.Reg* %197, i32 0, i32 0
  %RBP.i1063 = bitcast %union.anon* %198 to i64*
  %199 = load i64, i64* %RBP.i1063
  %200 = sub i64 %199, 28
  %201 = load i32, i32* %R8D.i1062
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC.i1061
  %204 = add i64 %203, 4
  store i64 %204, i64* %PC.i1061
  %205 = inttoptr i64 %200 to i32*
  store i32 %201, i32* %205
  store %struct.Memory* %loadMem_43fcf5, %struct.Memory** %MEMORY
  %loadMem_43fcf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %208 to i64*
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 19
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %R9D.i1059 = bitcast %union.anon* %211 to i32*
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 15
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %214 to i64*
  %215 = load i64, i64* %RBP.i1060
  %216 = sub i64 %215, 32
  %217 = load i32, i32* %R9D.i1059
  %218 = zext i32 %217 to i64
  %219 = load i64, i64* %PC.i1058
  %220 = add i64 %219, 4
  store i64 %220, i64* %PC.i1058
  %221 = inttoptr i64 %216 to i32*
  store i32 %217, i32* %221
  store %struct.Memory* %loadMem_43fcf9, %struct.Memory** %MEMORY
  %loadMem_43fcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 33
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 21
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %227 to i16*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 15
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %230 to i64*
  %231 = load i64, i64* %RBP.i1057
  %232 = sub i64 %231, 34
  %233 = load i16, i16* %R10W.i
  %234 = zext i16 %233 to i64
  %235 = load i64, i64* %PC.i1056
  %236 = add i64 %235, 5
  store i64 %236, i64* %PC.i1056
  %237 = inttoptr i64 %232 to i16*
  store i16 %233, i16* %237
  store %struct.Memory* %loadMem_43fcfd, %struct.Memory** %MEMORY
  %loadMem_43fd02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %239 = getelementptr inbounds %struct.GPR, %struct.GPR* %238, i32 0, i32 33
  %240 = getelementptr inbounds %struct.Reg, %struct.Reg* %239, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %240 to i64*
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %242 = getelementptr inbounds %struct.GPR, %struct.GPR* %241, i32 0, i32 1
  %243 = getelementptr inbounds %struct.Reg, %struct.Reg* %242, i32 0, i32 0
  %AX.i1054 = bitcast %union.anon* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 15
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %246 to i64*
  %247 = load i64, i64* %RBP.i1055
  %248 = sub i64 %247, 36
  %249 = load i16, i16* %AX.i1054
  %250 = zext i16 %249 to i64
  %251 = load i64, i64* %PC.i1053
  %252 = add i64 %251, 4
  store i64 %252, i64* %PC.i1053
  %253 = inttoptr i64 %248 to i16*
  store i16 %249, i16* %253
  store %struct.Memory* %loadMem_43fd02, %struct.Memory** %MEMORY
  %loadMem_43fd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %255 = getelementptr inbounds %struct.GPR, %struct.GPR* %254, i32 0, i32 33
  %256 = getelementptr inbounds %struct.Reg, %struct.Reg* %255, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %256 to i64*
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %258 = getelementptr inbounds %struct.GPR, %struct.GPR* %257, i32 0, i32 5
  %259 = getelementptr inbounds %struct.Reg, %struct.Reg* %258, i32 0, i32 0
  %RCX.i1051 = bitcast %union.anon* %259 to i64*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %261 = getelementptr inbounds %struct.GPR, %struct.GPR* %260, i32 0, i32 15
  %262 = getelementptr inbounds %struct.Reg, %struct.Reg* %261, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %262 to i64*
  %263 = load i64, i64* %RBP.i1052
  %264 = sub i64 %263, 16
  %265 = load i64, i64* %PC.i1050
  %266 = add i64 %265, 3
  store i64 %266, i64* %PC.i1050
  %267 = inttoptr i64 %264 to i32*
  %268 = load i32, i32* %267
  %269 = zext i32 %268 to i64
  store i64 %269, i64* %RCX.i1051, align 8
  store %struct.Memory* %loadMem_43fd06, %struct.Memory** %MEMORY
  %loadMem_43fd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %271 = getelementptr inbounds %struct.GPR, %struct.GPR* %270, i32 0, i32 33
  %272 = getelementptr inbounds %struct.Reg, %struct.Reg* %271, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %272 to i64*
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 5
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %RCX.i1049 = bitcast %union.anon* %275 to i64*
  %276 = load i64, i64* %RCX.i1049
  %277 = load i64, i64* %PC.i1048
  %278 = add i64 %277, 3
  store i64 %278, i64* %PC.i1048
  %279 = trunc i64 %276 to i32
  %280 = add i32 4, %279
  %281 = zext i32 %280 to i64
  store i64 %281, i64* %RCX.i1049, align 8
  %282 = icmp ult i32 %280, %279
  %283 = icmp ult i32 %280, 4
  %284 = or i1 %282, %283
  %285 = zext i1 %284 to i8
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %285, i8* %286, align 1
  %287 = and i32 %280, 255
  %288 = call i32 @llvm.ctpop.i32(i32 %287)
  %289 = trunc i32 %288 to i8
  %290 = and i8 %289, 1
  %291 = xor i8 %290, 1
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %291, i8* %292, align 1
  %293 = xor i64 4, %276
  %294 = trunc i64 %293 to i32
  %295 = xor i32 %294, %280
  %296 = lshr i32 %295, 4
  %297 = trunc i32 %296 to i8
  %298 = and i8 %297, 1
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %298, i8* %299, align 1
  %300 = icmp eq i32 %280, 0
  %301 = zext i1 %300 to i8
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %301, i8* %302, align 1
  %303 = lshr i32 %280, 31
  %304 = trunc i32 %303 to i8
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %304, i8* %305, align 1
  %306 = lshr i32 %279, 31
  %307 = xor i32 %303, %306
  %308 = add i32 %307, %303
  %309 = icmp eq i32 %308, 2
  %310 = zext i1 %309 to i8
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %310, i8* %311, align 1
  store %struct.Memory* %loadMem_43fd09, %struct.Memory** %MEMORY
  %loadMem_43fd0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 33
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %314 to i64*
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %316 = getelementptr inbounds %struct.GPR, %struct.GPR* %315, i32 0, i32 5
  %317 = getelementptr inbounds %struct.Reg, %struct.Reg* %316, i32 0, i32 0
  %ECX.i1046 = bitcast %union.anon* %317 to i32*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 15
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %320 to i64*
  %321 = load i64, i64* %RBP.i1047
  %322 = sub i64 %321, 48
  %323 = load i32, i32* %ECX.i1046
  %324 = zext i32 %323 to i64
  %325 = load i64, i64* %PC.i1045
  %326 = add i64 %325, 3
  store i64 %326, i64* %PC.i1045
  %327 = inttoptr i64 %322 to i32*
  store i32 %323, i32* %327
  store %struct.Memory* %loadMem_43fd0c, %struct.Memory** %MEMORY
  %loadMem_43fd0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %329 = getelementptr inbounds %struct.GPR, %struct.GPR* %328, i32 0, i32 33
  %330 = getelementptr inbounds %struct.Reg, %struct.Reg* %329, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %330 to i64*
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %332 = getelementptr inbounds %struct.GPR, %struct.GPR* %331, i32 0, i32 5
  %333 = getelementptr inbounds %struct.Reg, %struct.Reg* %332, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %333 to i64*
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %335 = getelementptr inbounds %struct.GPR, %struct.GPR* %334, i32 0, i32 15
  %336 = getelementptr inbounds %struct.Reg, %struct.Reg* %335, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %336 to i64*
  %337 = load i64, i64* %RBP.i1044
  %338 = sub i64 %337, 20
  %339 = load i64, i64* %PC.i1042
  %340 = add i64 %339, 3
  store i64 %340, i64* %PC.i1042
  %341 = inttoptr i64 %338 to i32*
  %342 = load i32, i32* %341
  %343 = zext i32 %342 to i64
  store i64 %343, i64* %RCX.i1043, align 8
  store %struct.Memory* %loadMem_43fd0f, %struct.Memory** %MEMORY
  %loadMem_43fd12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %345 = getelementptr inbounds %struct.GPR, %struct.GPR* %344, i32 0, i32 33
  %346 = getelementptr inbounds %struct.Reg, %struct.Reg* %345, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %346 to i64*
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 5
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %RCX.i1041 = bitcast %union.anon* %349 to i64*
  %350 = load i64, i64* %RCX.i1041
  %351 = load i64, i64* %PC.i1040
  %352 = add i64 %351, 3
  store i64 %352, i64* %PC.i1040
  %353 = trunc i64 %350 to i32
  %354 = add i32 4, %353
  %355 = zext i32 %354 to i64
  store i64 %355, i64* %RCX.i1041, align 8
  %356 = icmp ult i32 %354, %353
  %357 = icmp ult i32 %354, 4
  %358 = or i1 %356, %357
  %359 = zext i1 %358 to i8
  %360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %359, i8* %360, align 1
  %361 = and i32 %354, 255
  %362 = call i32 @llvm.ctpop.i32(i32 %361)
  %363 = trunc i32 %362 to i8
  %364 = and i8 %363, 1
  %365 = xor i8 %364, 1
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %365, i8* %366, align 1
  %367 = xor i64 4, %350
  %368 = trunc i64 %367 to i32
  %369 = xor i32 %368, %354
  %370 = lshr i32 %369, 4
  %371 = trunc i32 %370 to i8
  %372 = and i8 %371, 1
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %372, i8* %373, align 1
  %374 = icmp eq i32 %354, 0
  %375 = zext i1 %374 to i8
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %375, i8* %376, align 1
  %377 = lshr i32 %354, 31
  %378 = trunc i32 %377 to i8
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %378, i8* %379, align 1
  %380 = lshr i32 %353, 31
  %381 = xor i32 %377, %380
  %382 = add i32 %381, %377
  %383 = icmp eq i32 %382, 2
  %384 = zext i1 %383 to i8
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %384, i8* %385, align 1
  store %struct.Memory* %loadMem_43fd12, %struct.Memory** %MEMORY
  %loadMem_43fd15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 33
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %388 to i64*
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 5
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %ECX.i1038 = bitcast %union.anon* %391 to i32*
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 15
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %394 to i64*
  %395 = load i64, i64* %RBP.i1039
  %396 = sub i64 %395, 52
  %397 = load i32, i32* %ECX.i1038
  %398 = zext i32 %397 to i64
  %399 = load i64, i64* %PC.i1037
  %400 = add i64 %399, 3
  store i64 %400, i64* %PC.i1037
  %401 = inttoptr i64 %396 to i32*
  store i32 %397, i32* %401
  store %struct.Memory* %loadMem_43fd15, %struct.Memory** %MEMORY
  %loadMem_43fd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 33
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %404 to i64*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 3
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RBX.i1035 = bitcast %union.anon* %407 to i64*
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 15
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %410 to i64*
  %411 = load i64, i64* %RBP.i1036
  %412 = sub i64 %411, 64
  %413 = load i64, i64* %RBX.i1035
  %414 = load i64, i64* %PC.i1034
  %415 = add i64 %414, 4
  store i64 %415, i64* %PC.i1034
  %416 = inttoptr i64 %412 to i64*
  store i64 %413, i64* %416
  store %struct.Memory* %loadMem_43fd18, %struct.Memory** %MEMORY
  %loadMem_43fd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %418 = getelementptr inbounds %struct.GPR, %struct.GPR* %417, i32 0, i32 33
  %419 = getelementptr inbounds %struct.Reg, %struct.Reg* %418, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %419 to i64*
  %420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %421 = getelementptr inbounds %struct.GPR, %struct.GPR* %420, i32 0, i32 15
  %422 = getelementptr inbounds %struct.Reg, %struct.Reg* %421, i32 0, i32 0
  %RBP.i1032 = bitcast %union.anon* %422 to i64*
  %423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %424 = getelementptr inbounds %struct.GPR, %struct.GPR* %423, i32 0, i32 23
  %425 = getelementptr inbounds %struct.Reg, %struct.Reg* %424, i32 0, i32 0
  %R11.i1033 = bitcast %union.anon* %425 to i64*
  %426 = load i64, i64* %RBP.i1032
  %427 = sub i64 %426, 72
  %428 = load i64, i64* %R11.i1033
  %429 = load i64, i64* %PC.i1031
  %430 = add i64 %429, 4
  store i64 %430, i64* %PC.i1031
  %431 = inttoptr i64 %427 to i64*
  store i64 %428, i64* %431
  store %struct.Memory* %loadMem_43fd1c, %struct.Memory** %MEMORY
  %loadMem_43fd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %433 = getelementptr inbounds %struct.GPR, %struct.GPR* %432, i32 0, i32 33
  %434 = getelementptr inbounds %struct.Reg, %struct.Reg* %433, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %434 to i64*
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 23
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %R11.i1030 = bitcast %union.anon* %437 to i64*
  %438 = load i64, i64* %PC.i1029
  %439 = add i64 %438, 8
  store i64 %439, i64* %PC.i1029
  %440 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %440, i64* %R11.i1030, align 8
  store %struct.Memory* %loadMem_43fd20, %struct.Memory** %MEMORY
  %loadMem_43fd28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 33
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %443 to i64*
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 23
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %R11.i1028 = bitcast %union.anon* %446 to i64*
  %447 = load i64, i64* %R11.i1028
  %448 = add i64 %447, 71928
  %449 = load i64, i64* %PC.i1027
  %450 = add i64 %449, 7
  store i64 %450, i64* %PC.i1027
  %451 = inttoptr i64 %448 to i64*
  %452 = load i64, i64* %451
  store i64 %452, i64* %R11.i1028, align 8
  store %struct.Memory* %loadMem_43fd28, %struct.Memory** %MEMORY
  %loadMem_43fd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 33
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %455 to i64*
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 15
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %458 to i64*
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 23
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %R11.i1026 = bitcast %union.anon* %461 to i64*
  %462 = load i64, i64* %RBP.i1025
  %463 = sub i64 %462, 80
  %464 = load i64, i64* %R11.i1026
  %465 = load i64, i64* %PC.i1024
  %466 = add i64 %465, 4
  store i64 %466, i64* %PC.i1024
  %467 = inttoptr i64 %463 to i64*
  store i64 %464, i64* %467
  store %struct.Memory* %loadMem_43fd2f, %struct.Memory** %MEMORY
  %loadMem_43fd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %469 = getelementptr inbounds %struct.GPR, %struct.GPR* %468, i32 0, i32 33
  %470 = getelementptr inbounds %struct.Reg, %struct.Reg* %469, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %470 to i64*
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %472 = getelementptr inbounds %struct.GPR, %struct.GPR* %471, i32 0, i32 23
  %473 = getelementptr inbounds %struct.Reg, %struct.Reg* %472, i32 0, i32 0
  %R11.i1023 = bitcast %union.anon* %473 to i64*
  %474 = load i64, i64* %PC.i1022
  %475 = add i64 %474, 8
  store i64 %475, i64* %PC.i1022
  %476 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %476, i64* %R11.i1023, align 8
  store %struct.Memory* %loadMem_43fd33, %struct.Memory** %MEMORY
  %loadMem_43fd3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %478 = getelementptr inbounds %struct.GPR, %struct.GPR* %477, i32 0, i32 33
  %479 = getelementptr inbounds %struct.Reg, %struct.Reg* %478, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %479 to i64*
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 23
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %R11.i1021 = bitcast %union.anon* %482 to i64*
  %483 = load i64, i64* %R11.i1021
  %484 = add i64 %483, 14168
  %485 = load i64, i64* %PC.i1020
  %486 = add i64 %485, 7
  store i64 %486, i64* %PC.i1020
  %487 = inttoptr i64 %484 to i64*
  %488 = load i64, i64* %487
  store i64 %488, i64* %R11.i1021, align 8
  store %struct.Memory* %loadMem_43fd3b, %struct.Memory** %MEMORY
  %loadMem_43fd42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 33
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %491 to i64*
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 3
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %RBX.i1019 = bitcast %union.anon* %494 to i64*
  %495 = load i64, i64* %PC.i1018
  %496 = add i64 %495, 8
  store i64 %496, i64* %PC.i1018
  %497 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %497, i64* %RBX.i1019, align 8
  store %struct.Memory* %loadMem_43fd42, %struct.Memory** %MEMORY
  %loadMem_43fd4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %499 = getelementptr inbounds %struct.GPR, %struct.GPR* %498, i32 0, i32 33
  %500 = getelementptr inbounds %struct.Reg, %struct.Reg* %499, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %500 to i64*
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 3
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %RBX.i1017 = bitcast %union.anon* %503 to i64*
  %504 = load i64, i64* %RBX.i1017
  %505 = add i64 %504, 12
  %506 = load i64, i64* %PC.i1016
  %507 = add i64 %506, 4
  store i64 %507, i64* %PC.i1016
  %508 = inttoptr i64 %505 to i32*
  %509 = load i32, i32* %508
  %510 = sext i32 %509 to i64
  store i64 %510, i64* %RBX.i1017, align 8
  store %struct.Memory* %loadMem_43fd4a, %struct.Memory** %MEMORY
  %loadMem_43fd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %512 = getelementptr inbounds %struct.GPR, %struct.GPR* %511, i32 0, i32 33
  %513 = getelementptr inbounds %struct.Reg, %struct.Reg* %512, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %513 to i64*
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 3
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %RBX.i1015 = bitcast %union.anon* %516 to i64*
  %517 = load i64, i64* %RBX.i1015
  %518 = load i64, i64* %PC.i1014
  %519 = add i64 %518, 7
  store i64 %519, i64* %PC.i1014
  %520 = sext i64 %517 to i128
  %521 = and i128 %520, -18446744073709551616
  %522 = zext i64 %517 to i128
  %523 = or i128 %521, %522
  %524 = mul i128 632, %523
  %525 = trunc i128 %524 to i64
  store i64 %525, i64* %RBX.i1015, align 8
  %526 = sext i64 %525 to i128
  %527 = icmp ne i128 %526, %524
  %528 = zext i1 %527 to i8
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %528, i8* %529, align 1
  %530 = trunc i128 %524 to i32
  %531 = and i32 %530, 255
  %532 = call i32 @llvm.ctpop.i32(i32 %531)
  %533 = trunc i32 %532 to i8
  %534 = and i8 %533, 1
  %535 = xor i8 %534, 1
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %535, i8* %536, align 1
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %537, align 1
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %538, align 1
  %539 = lshr i64 %525, 63
  %540 = trunc i64 %539 to i8
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %540, i8* %541, align 1
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %528, i8* %542, align 1
  store %struct.Memory* %loadMem_43fd4e, %struct.Memory** %MEMORY
  %loadMem_43fd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 33
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %545 to i64*
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 3
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %RBX.i1012 = bitcast %union.anon* %548 to i64*
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 23
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %R11.i1013 = bitcast %union.anon* %551 to i64*
  %552 = load i64, i64* %R11.i1013
  %553 = load i64, i64* %RBX.i1012
  %554 = load i64, i64* %PC.i1011
  %555 = add i64 %554, 3
  store i64 %555, i64* %PC.i1011
  %556 = add i64 %553, %552
  store i64 %556, i64* %R11.i1013, align 8
  %557 = icmp ult i64 %556, %552
  %558 = icmp ult i64 %556, %553
  %559 = or i1 %557, %558
  %560 = zext i1 %559 to i8
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %560, i8* %561, align 1
  %562 = trunc i64 %556 to i32
  %563 = and i32 %562, 255
  %564 = call i32 @llvm.ctpop.i32(i32 %563)
  %565 = trunc i32 %564 to i8
  %566 = and i8 %565, 1
  %567 = xor i8 %566, 1
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %567, i8* %568, align 1
  %569 = xor i64 %553, %552
  %570 = xor i64 %569, %556
  %571 = lshr i64 %570, 4
  %572 = trunc i64 %571 to i8
  %573 = and i8 %572, 1
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %573, i8* %574, align 1
  %575 = icmp eq i64 %556, 0
  %576 = zext i1 %575 to i8
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %576, i8* %577, align 1
  %578 = lshr i64 %556, 63
  %579 = trunc i64 %578 to i8
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %579, i8* %580, align 1
  %581 = lshr i64 %552, 63
  %582 = lshr i64 %553, 63
  %583 = xor i64 %578, %581
  %584 = xor i64 %578, %582
  %585 = add i64 %583, %584
  %586 = icmp eq i64 %585, 2
  %587 = zext i1 %586 to i8
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %587, i8* %588, align 1
  store %struct.Memory* %loadMem_43fd55, %struct.Memory** %MEMORY
  %loadMem_43fd58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %590 = getelementptr inbounds %struct.GPR, %struct.GPR* %589, i32 0, i32 33
  %591 = getelementptr inbounds %struct.Reg, %struct.Reg* %590, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %591 to i64*
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %593 = getelementptr inbounds %struct.GPR, %struct.GPR* %592, i32 0, i32 15
  %594 = getelementptr inbounds %struct.Reg, %struct.Reg* %593, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %594 to i64*
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 23
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %R11.i1010 = bitcast %union.anon* %597 to i64*
  %598 = load i64, i64* %RBP.i1009
  %599 = sub i64 %598, 88
  %600 = load i64, i64* %R11.i1010
  %601 = load i64, i64* %PC.i1008
  %602 = add i64 %601, 4
  store i64 %602, i64* %PC.i1008
  %603 = inttoptr i64 %599 to i64*
  store i64 %600, i64* %603
  store %struct.Memory* %loadMem_43fd58, %struct.Memory** %MEMORY
  %loadMem_43fd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %605 = getelementptr inbounds %struct.GPR, %struct.GPR* %604, i32 0, i32 33
  %606 = getelementptr inbounds %struct.Reg, %struct.Reg* %605, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %606 to i64*
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 23
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %R11.i1007 = bitcast %union.anon* %609 to i64*
  %610 = load i64, i64* %PC.i1006
  %611 = add i64 %610, 8
  store i64 %611, i64* %PC.i1006
  %612 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %612, i64* %R11.i1007, align 8
  store %struct.Memory* %loadMem_43fd5c, %struct.Memory** %MEMORY
  %loadMem_43fd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %614 = getelementptr inbounds %struct.GPR, %struct.GPR* %613, i32 0, i32 33
  %615 = getelementptr inbounds %struct.Reg, %struct.Reg* %614, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %615 to i64*
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %617 = getelementptr inbounds %struct.GPR, %struct.GPR* %616, i32 0, i32 23
  %618 = getelementptr inbounds %struct.Reg, %struct.Reg* %617, i32 0, i32 0
  %R11.i1005 = bitcast %union.anon* %618 to i64*
  %619 = load i64, i64* %R11.i1005
  %620 = add i64 %619, 192
  %621 = load i64, i64* %PC.i1004
  %622 = add i64 %621, 8
  store i64 %622, i64* %PC.i1004
  %623 = inttoptr i64 %620 to i32*
  %624 = load i32, i32* %623
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %625, align 1
  %626 = and i32 %624, 255
  %627 = call i32 @llvm.ctpop.i32(i32 %626)
  %628 = trunc i32 %627 to i8
  %629 = and i8 %628, 1
  %630 = xor i8 %629, 1
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %630, i8* %631, align 1
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %632, align 1
  %633 = icmp eq i32 %624, 0
  %634 = zext i1 %633 to i8
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %634, i8* %635, align 1
  %636 = lshr i32 %624, 31
  %637 = trunc i32 %636 to i8
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %637, i8* %638, align 1
  %639 = lshr i32 %624, 31
  %640 = xor i32 %636, %639
  %641 = add i32 %640, %639
  %642 = icmp eq i32 %641, 2
  %643 = zext i1 %642 to i8
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %643, i8* %644, align 1
  store %struct.Memory* %loadMem_43fd64, %struct.Memory** %MEMORY
  %loadMem_43fd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %646 = getelementptr inbounds %struct.GPR, %struct.GPR* %645, i32 0, i32 33
  %647 = getelementptr inbounds %struct.Reg, %struct.Reg* %646, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %647 to i64*
  %648 = load i64, i64* %PC.i1003
  %649 = add i64 %648, 52
  %650 = load i64, i64* %PC.i1003
  %651 = add i64 %650, 6
  %652 = load i64, i64* %PC.i1003
  %653 = add i64 %652, 6
  store i64 %653, i64* %PC.i1003
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %655 = load i8, i8* %654, align 1
  store i8 %655, i8* %BRANCH_TAKEN, align 1
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %657 = icmp ne i8 %655, 0
  %658 = select i1 %657, i64 %649, i64 %651
  store i64 %658, i64* %656, align 8
  store %struct.Memory* %loadMem_43fd6c, %struct.Memory** %MEMORY
  %loadBr_43fd6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fd6c = icmp eq i8 %loadBr_43fd6c, 1
  br i1 %cmpBr_43fd6c, label %block_.L_43fda0, label %block_43fd72

block_43fd72:                                     ; preds = %entry
  %loadMem_43fd72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %660 = getelementptr inbounds %struct.GPR, %struct.GPR* %659, i32 0, i32 33
  %661 = getelementptr inbounds %struct.Reg, %struct.Reg* %660, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %661 to i64*
  %662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %663 = getelementptr inbounds %struct.GPR, %struct.GPR* %662, i32 0, i32 1
  %664 = getelementptr inbounds %struct.Reg, %struct.Reg* %663, i32 0, i32 0
  %665 = bitcast %union.anon* %664 to %struct.anon.2*
  %AL.i1002 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %665, i32 0, i32 0
  %666 = load i64, i64* %PC.i1001
  %667 = add i64 %666, 2
  store i64 %667, i64* %PC.i1001
  store i8 1, i8* %AL.i1002, align 1
  store %struct.Memory* %loadMem_43fd72, %struct.Memory** %MEMORY
  %loadMem_43fd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 33
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %670 to i64*
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 5
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %RCX.i1000 = bitcast %union.anon* %673 to i64*
  %674 = load i64, i64* %PC.i999
  %675 = add i64 %674, 8
  store i64 %675, i64* %PC.i999
  %676 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %676, i64* %RCX.i1000, align 8
  store %struct.Memory* %loadMem_43fd74, %struct.Memory** %MEMORY
  %loadMem_43fd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %678 = getelementptr inbounds %struct.GPR, %struct.GPR* %677, i32 0, i32 33
  %679 = getelementptr inbounds %struct.Reg, %struct.Reg* %678, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %679 to i64*
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %681 = getelementptr inbounds %struct.GPR, %struct.GPR* %680, i32 0, i32 5
  %682 = getelementptr inbounds %struct.Reg, %struct.Reg* %681, i32 0, i32 0
  %RCX.i998 = bitcast %union.anon* %682 to i64*
  %683 = load i64, i64* %RCX.i998
  %684 = add i64 %683, 24
  %685 = load i64, i64* %PC.i997
  %686 = add i64 %685, 4
  store i64 %686, i64* %PC.i997
  %687 = inttoptr i64 %684 to i32*
  %688 = load i32, i32* %687
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %689, align 1
  %690 = and i32 %688, 255
  %691 = call i32 @llvm.ctpop.i32(i32 %690)
  %692 = trunc i32 %691 to i8
  %693 = and i8 %692, 1
  %694 = xor i8 %693, 1
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %694, i8* %695, align 1
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %696, align 1
  %697 = icmp eq i32 %688, 0
  %698 = zext i1 %697 to i8
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %698, i8* %699, align 1
  %700 = lshr i32 %688, 31
  %701 = trunc i32 %700 to i8
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %701, i8* %702, align 1
  %703 = lshr i32 %688, 31
  %704 = xor i32 %700, %703
  %705 = add i32 %704, %703
  %706 = icmp eq i32 %705, 2
  %707 = zext i1 %706 to i8
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %707, i8* %708, align 1
  store %struct.Memory* %loadMem_43fd7c, %struct.Memory** %MEMORY
  %loadMem_43fd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 33
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %711 to i64*
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 1
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %715 = bitcast %union.anon* %714 to %struct.anon.2*
  %AL.i995 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %715, i32 0, i32 0
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 15
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %RBP.i996 = bitcast %union.anon* %718 to i64*
  %719 = load i64, i64* %RBP.i996
  %720 = sub i64 %719, 93
  %721 = load i8, i8* %AL.i995
  %722 = zext i8 %721 to i64
  %723 = load i64, i64* %PC.i994
  %724 = add i64 %723, 3
  store i64 %724, i64* %PC.i994
  %725 = inttoptr i64 %720 to i8*
  store i8 %721, i8* %725
  store %struct.Memory* %loadMem_43fd80, %struct.Memory** %MEMORY
  %loadMem_43fd83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 33
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %728 to i64*
  %729 = load i64, i64* %PC.i993
  %730 = add i64 %729, 81
  %731 = load i64, i64* %PC.i993
  %732 = add i64 %731, 6
  %733 = load i64, i64* %PC.i993
  %734 = add i64 %733, 6
  store i64 %734, i64* %PC.i993
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %736 = load i8, i8* %735, align 1
  store i8 %736, i8* %BRANCH_TAKEN, align 1
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %738 = icmp ne i8 %736, 0
  %739 = select i1 %738, i64 %730, i64 %732
  store i64 %739, i64* %737, align 8
  store %struct.Memory* %loadMem_43fd83, %struct.Memory** %MEMORY
  %loadBr_43fd83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fd83 = icmp eq i8 %loadBr_43fd83, 1
  br i1 %cmpBr_43fd83, label %block_.L_43fdd4, label %block_43fd89

block_43fd89:                                     ; preds = %block_43fd72
  %loadMem_43fd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 33
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %742 to i64*
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 1
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %746 = bitcast %union.anon* %745 to %struct.anon.2*
  %AL.i992 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %746, i32 0, i32 0
  %747 = load i64, i64* %PC.i991
  %748 = add i64 %747, 2
  store i64 %748, i64* %PC.i991
  store i8 1, i8* %AL.i992, align 1
  store %struct.Memory* %loadMem_43fd89, %struct.Memory** %MEMORY
  %loadMem_43fd8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 33
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %751 to i64*
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %753 = getelementptr inbounds %struct.GPR, %struct.GPR* %752, i32 0, i32 5
  %754 = getelementptr inbounds %struct.Reg, %struct.Reg* %753, i32 0, i32 0
  %RCX.i990 = bitcast %union.anon* %754 to i64*
  %755 = load i64, i64* %PC.i989
  %756 = add i64 %755, 8
  store i64 %756, i64* %PC.i989
  %757 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %757, i64* %RCX.i990, align 8
  store %struct.Memory* %loadMem_43fd8b, %struct.Memory** %MEMORY
  %loadMem_43fd93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 33
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 5
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RCX.i988 = bitcast %union.anon* %763 to i64*
  %764 = load i64, i64* %RCX.i988
  %765 = add i64 %764, 24
  %766 = load i64, i64* %PC.i987
  %767 = add i64 %766, 4
  store i64 %767, i64* %PC.i987
  %768 = inttoptr i64 %765 to i32*
  %769 = load i32, i32* %768
  %770 = sub i32 %769, 3
  %771 = icmp ult i32 %769, 3
  %772 = zext i1 %771 to i8
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %772, i8* %773, align 1
  %774 = and i32 %770, 255
  %775 = call i32 @llvm.ctpop.i32(i32 %774)
  %776 = trunc i32 %775 to i8
  %777 = and i8 %776, 1
  %778 = xor i8 %777, 1
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %778, i8* %779, align 1
  %780 = xor i32 %769, 3
  %781 = xor i32 %780, %770
  %782 = lshr i32 %781, 4
  %783 = trunc i32 %782 to i8
  %784 = and i8 %783, 1
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %784, i8* %785, align 1
  %786 = icmp eq i32 %770, 0
  %787 = zext i1 %786 to i8
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %787, i8* %788, align 1
  %789 = lshr i32 %770, 31
  %790 = trunc i32 %789 to i8
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %790, i8* %791, align 1
  %792 = lshr i32 %769, 31
  %793 = xor i32 %789, %792
  %794 = add i32 %793, %792
  %795 = icmp eq i32 %794, 2
  %796 = zext i1 %795 to i8
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %796, i8* %797, align 1
  store %struct.Memory* %loadMem_43fd93, %struct.Memory** %MEMORY
  %loadMem_43fd97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %799 = getelementptr inbounds %struct.GPR, %struct.GPR* %798, i32 0, i32 33
  %800 = getelementptr inbounds %struct.Reg, %struct.Reg* %799, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %800 to i64*
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 1
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %804 = bitcast %union.anon* %803 to %struct.anon.2*
  %AL.i985 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %804, i32 0, i32 0
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %806 = getelementptr inbounds %struct.GPR, %struct.GPR* %805, i32 0, i32 15
  %807 = getelementptr inbounds %struct.Reg, %struct.Reg* %806, i32 0, i32 0
  %RBP.i986 = bitcast %union.anon* %807 to i64*
  %808 = load i64, i64* %RBP.i986
  %809 = sub i64 %808, 93
  %810 = load i8, i8* %AL.i985
  %811 = zext i8 %810 to i64
  %812 = load i64, i64* %PC.i984
  %813 = add i64 %812, 3
  store i64 %813, i64* %PC.i984
  %814 = inttoptr i64 %809 to i8*
  store i8 %810, i8* %814
  store %struct.Memory* %loadMem_43fd97, %struct.Memory** %MEMORY
  %loadMem_43fd9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 33
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %817 to i64*
  %818 = load i64, i64* %PC.i983
  %819 = add i64 %818, 58
  %820 = load i64, i64* %PC.i983
  %821 = add i64 %820, 6
  %822 = load i64, i64* %PC.i983
  %823 = add i64 %822, 6
  store i64 %823, i64* %PC.i983
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %825 = load i8, i8* %824, align 1
  store i8 %825, i8* %BRANCH_TAKEN, align 1
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %827 = icmp ne i8 %825, 0
  %828 = select i1 %827, i64 %819, i64 %821
  store i64 %828, i64* %826, align 8
  store %struct.Memory* %loadMem_43fd9a, %struct.Memory** %MEMORY
  %loadBr_43fd9a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fd9a = icmp eq i8 %loadBr_43fd9a, 1
  br i1 %cmpBr_43fd9a, label %block_.L_43fdd4, label %block_.L_43fda0

block_.L_43fda0:                                  ; preds = %block_43fd89, %entry
  %loadMem_43fda0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %830 = getelementptr inbounds %struct.GPR, %struct.GPR* %829, i32 0, i32 33
  %831 = getelementptr inbounds %struct.Reg, %struct.Reg* %830, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %831 to i64*
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %833 = getelementptr inbounds %struct.GPR, %struct.GPR* %832, i32 0, i32 1
  %834 = getelementptr inbounds %struct.Reg, %struct.Reg* %833, i32 0, i32 0
  %EAX.i981 = bitcast %union.anon* %834 to i32*
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %836 = getelementptr inbounds %struct.GPR, %struct.GPR* %835, i32 0, i32 1
  %837 = getelementptr inbounds %struct.Reg, %struct.Reg* %836, i32 0, i32 0
  %RAX.i982 = bitcast %union.anon* %837 to i64*
  %838 = load i64, i64* %RAX.i982
  %839 = load i32, i32* %EAX.i981
  %840 = zext i32 %839 to i64
  %841 = load i64, i64* %PC.i980
  %842 = add i64 %841, 2
  store i64 %842, i64* %PC.i980
  %843 = xor i64 %840, %838
  %844 = trunc i64 %843 to i32
  %845 = and i64 %843, 4294967295
  store i64 %845, i64* %RAX.i982, align 8
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %846, align 1
  %847 = and i32 %844, 255
  %848 = call i32 @llvm.ctpop.i32(i32 %847)
  %849 = trunc i32 %848 to i8
  %850 = and i8 %849, 1
  %851 = xor i8 %850, 1
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %851, i8* %852, align 1
  %853 = icmp eq i32 %844, 0
  %854 = zext i1 %853 to i8
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %854, i8* %855, align 1
  %856 = lshr i32 %844, 31
  %857 = trunc i32 %856 to i8
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %857, i8* %858, align 1
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %859, align 1
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %860, align 1
  store %struct.Memory* %loadMem_43fda0, %struct.Memory** %MEMORY
  %loadMem_43fda2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 33
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %863 to i64*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 1
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %867 = bitcast %union.anon* %866 to %struct.anon.2*
  %AL.i978 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %867, i32 0, i32 0
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 5
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %871 = bitcast %union.anon* %870 to %struct.anon.2*
  %CL.i979 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %871, i32 0, i32 0
  %872 = load i8, i8* %AL.i978
  %873 = zext i8 %872 to i64
  %874 = load i64, i64* %PC.i977
  %875 = add i64 %874, 2
  store i64 %875, i64* %PC.i977
  store i8 %872, i8* %CL.i979, align 1
  store %struct.Memory* %loadMem_43fda2, %struct.Memory** %MEMORY
  %loadMem_43fda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %877 = getelementptr inbounds %struct.GPR, %struct.GPR* %876, i32 0, i32 33
  %878 = getelementptr inbounds %struct.Reg, %struct.Reg* %877, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %878 to i64*
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %880 = getelementptr inbounds %struct.GPR, %struct.GPR* %879, i32 0, i32 7
  %881 = getelementptr inbounds %struct.Reg, %struct.Reg* %880, i32 0, i32 0
  %RDX.i976 = bitcast %union.anon* %881 to i64*
  %882 = load i64, i64* %PC.i975
  %883 = add i64 %882, 8
  store i64 %883, i64* %PC.i975
  %884 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %884, i64* %RDX.i976, align 8
  store %struct.Memory* %loadMem_43fda4, %struct.Memory** %MEMORY
  %loadMem_43fdac = load %struct.Memory*, %struct.Memory** %MEMORY
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 33
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %887 to i64*
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 7
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %RDX.i974 = bitcast %union.anon* %890 to i64*
  %891 = load i64, i64* %RDX.i974
  %892 = add i64 %891, 196
  %893 = load i64, i64* %PC.i973
  %894 = add i64 %893, 7
  store i64 %894, i64* %PC.i973
  %895 = inttoptr i64 %892 to i32*
  %896 = load i32, i32* %895
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %897, align 1
  %898 = and i32 %896, 255
  %899 = call i32 @llvm.ctpop.i32(i32 %898)
  %900 = trunc i32 %899 to i8
  %901 = and i8 %900, 1
  %902 = xor i8 %901, 1
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %902, i8* %903, align 1
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %904, align 1
  %905 = icmp eq i32 %896, 0
  %906 = zext i1 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %906, i8* %907, align 1
  %908 = lshr i32 %896, 31
  %909 = trunc i32 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %909, i8* %910, align 1
  %911 = lshr i32 %896, 31
  %912 = xor i32 %908, %911
  %913 = add i32 %912, %911
  %914 = icmp eq i32 %913, 2
  %915 = zext i1 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %915, i8* %916, align 1
  store %struct.Memory* %loadMem_43fdac, %struct.Memory** %MEMORY
  %loadMem_43fdb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 33
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %919 to i64*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 5
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %923 = bitcast %union.anon* %922 to %struct.anon.2*
  %CL.i971 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %923, i32 0, i32 0
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %925 = getelementptr inbounds %struct.GPR, %struct.GPR* %924, i32 0, i32 15
  %926 = getelementptr inbounds %struct.Reg, %struct.Reg* %925, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %926 to i64*
  %927 = load i64, i64* %RBP.i972
  %928 = sub i64 %927, 94
  %929 = load i8, i8* %CL.i971
  %930 = zext i8 %929 to i64
  %931 = load i64, i64* %PC.i970
  %932 = add i64 %931, 3
  store i64 %932, i64* %PC.i970
  %933 = inttoptr i64 %928 to i8*
  store i8 %929, i8* %933
  store %struct.Memory* %loadMem_43fdb3, %struct.Memory** %MEMORY
  %loadMem_43fdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %935 = getelementptr inbounds %struct.GPR, %struct.GPR* %934, i32 0, i32 33
  %936 = getelementptr inbounds %struct.Reg, %struct.Reg* %935, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %936 to i64*
  %937 = load i64, i64* %PC.i969
  %938 = add i64 %937, 24
  %939 = load i64, i64* %PC.i969
  %940 = add i64 %939, 6
  %941 = load i64, i64* %PC.i969
  %942 = add i64 %941, 6
  store i64 %942, i64* %PC.i969
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %944 = load i8, i8* %943, align 1
  store i8 %944, i8* %BRANCH_TAKEN, align 1
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %946 = icmp ne i8 %944, 0
  %947 = select i1 %946, i64 %938, i64 %940
  store i64 %947, i64* %945, align 8
  store %struct.Memory* %loadMem_43fdb6, %struct.Memory** %MEMORY
  %loadBr_43fdb6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fdb6 = icmp eq i8 %loadBr_43fdb6, 1
  br i1 %cmpBr_43fdb6, label %block_.L_43fdce, label %block_43fdbc

block_43fdbc:                                     ; preds = %block_.L_43fda0
  %loadMem_43fdbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 33
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %950 to i64*
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 1
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %953 to i64*
  %954 = load i64, i64* %PC.i967
  %955 = add i64 %954, 8
  store i64 %955, i64* %PC.i967
  %956 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %956, i64* %RAX.i968, align 8
  store %struct.Memory* %loadMem_43fdbc, %struct.Memory** %MEMORY
  %loadMem_43fdc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %958 = getelementptr inbounds %struct.GPR, %struct.GPR* %957, i32 0, i32 33
  %959 = getelementptr inbounds %struct.Reg, %struct.Reg* %958, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %959 to i64*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 1
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %962 to i64*
  %963 = load i64, i64* %RAX.i966
  %964 = add i64 %963, 24
  %965 = load i64, i64* %PC.i965
  %966 = add i64 %965, 4
  store i64 %966, i64* %PC.i965
  %967 = inttoptr i64 %964 to i32*
  %968 = load i32, i32* %967
  %969 = sub i32 %968, 1
  %970 = icmp ult i32 %968, 1
  %971 = zext i1 %970 to i8
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %971, i8* %972, align 1
  %973 = and i32 %969, 255
  %974 = call i32 @llvm.ctpop.i32(i32 %973)
  %975 = trunc i32 %974 to i8
  %976 = and i8 %975, 1
  %977 = xor i8 %976, 1
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %977, i8* %978, align 1
  %979 = xor i32 %968, 1
  %980 = xor i32 %979, %969
  %981 = lshr i32 %980, 4
  %982 = trunc i32 %981 to i8
  %983 = and i8 %982, 1
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %983, i8* %984, align 1
  %985 = icmp eq i32 %969, 0
  %986 = zext i1 %985 to i8
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %986, i8* %987, align 1
  %988 = lshr i32 %969, 31
  %989 = trunc i32 %988 to i8
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %989, i8* %990, align 1
  %991 = lshr i32 %968, 31
  %992 = xor i32 %988, %991
  %993 = add i32 %992, %991
  %994 = icmp eq i32 %993, 2
  %995 = zext i1 %994 to i8
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %995, i8* %996, align 1
  store %struct.Memory* %loadMem_43fdc4, %struct.Memory** %MEMORY
  %loadMem_43fdc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %998 = getelementptr inbounds %struct.GPR, %struct.GPR* %997, i32 0, i32 33
  %999 = getelementptr inbounds %struct.Reg, %struct.Reg* %998, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %999 to i64*
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 5
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %1003 = bitcast %union.anon* %1002 to %struct.anon.2*
  %CL.i964 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1003, i32 0, i32 0
  %1004 = load i64, i64* %PC.i963
  %1005 = add i64 %1004, 3
  store i64 %1005, i64* %PC.i963
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1007 = load i8, i8* %1006, align 1
  store i8 %1007, i8* %CL.i964, align 1
  store %struct.Memory* %loadMem_43fdc8, %struct.Memory** %MEMORY
  %loadMem_43fdcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1009 = getelementptr inbounds %struct.GPR, %struct.GPR* %1008, i32 0, i32 33
  %1010 = getelementptr inbounds %struct.Reg, %struct.Reg* %1009, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %1010 to i64*
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 5
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %1014 = bitcast %union.anon* %1013 to %struct.anon.2*
  %CL.i961 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1014, i32 0, i32 0
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 15
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %1017 to i64*
  %1018 = load i64, i64* %RBP.i962
  %1019 = sub i64 %1018, 94
  %1020 = load i8, i8* %CL.i961
  %1021 = zext i8 %1020 to i64
  %1022 = load i64, i64* %PC.i960
  %1023 = add i64 %1022, 3
  store i64 %1023, i64* %PC.i960
  %1024 = inttoptr i64 %1019 to i8*
  store i8 %1020, i8* %1024
  store %struct.Memory* %loadMem_43fdcb, %struct.Memory** %MEMORY
  br label %block_.L_43fdce

block_.L_43fdce:                                  ; preds = %block_43fdbc, %block_.L_43fda0
  %loadMem_43fdce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1026 = getelementptr inbounds %struct.GPR, %struct.GPR* %1025, i32 0, i32 33
  %1027 = getelementptr inbounds %struct.Reg, %struct.Reg* %1026, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %1027 to i64*
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 1
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %1031 = bitcast %union.anon* %1030 to %struct.anon.2*
  %AL.i958 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1031, i32 0, i32 0
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 15
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %RBP.i959 = bitcast %union.anon* %1034 to i64*
  %1035 = load i64, i64* %RBP.i959
  %1036 = sub i64 %1035, 94
  %1037 = load i64, i64* %PC.i957
  %1038 = add i64 %1037, 3
  store i64 %1038, i64* %PC.i957
  %1039 = inttoptr i64 %1036 to i8*
  %1040 = load i8, i8* %1039
  store i8 %1040, i8* %AL.i958, align 1
  store %struct.Memory* %loadMem_43fdce, %struct.Memory** %MEMORY
  %loadMem_43fdd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1042 = getelementptr inbounds %struct.GPR, %struct.GPR* %1041, i32 0, i32 33
  %1043 = getelementptr inbounds %struct.Reg, %struct.Reg* %1042, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %1043 to i64*
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1045 = getelementptr inbounds %struct.GPR, %struct.GPR* %1044, i32 0, i32 1
  %1046 = getelementptr inbounds %struct.Reg, %struct.Reg* %1045, i32 0, i32 0
  %1047 = bitcast %union.anon* %1046 to %struct.anon.2*
  %AL.i955 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1047, i32 0, i32 0
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 15
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %1050 to i64*
  %1051 = load i64, i64* %RBP.i956
  %1052 = sub i64 %1051, 93
  %1053 = load i8, i8* %AL.i955
  %1054 = zext i8 %1053 to i64
  %1055 = load i64, i64* %PC.i954
  %1056 = add i64 %1055, 3
  store i64 %1056, i64* %PC.i954
  %1057 = inttoptr i64 %1052 to i8*
  store i8 %1053, i8* %1057
  store %struct.Memory* %loadMem_43fdd1, %struct.Memory** %MEMORY
  br label %block_.L_43fdd4

block_.L_43fdd4:                                  ; preds = %block_.L_43fdce, %block_43fd89, %block_43fd72
  %loadMem_43fdd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1059 = getelementptr inbounds %struct.GPR, %struct.GPR* %1058, i32 0, i32 33
  %1060 = getelementptr inbounds %struct.Reg, %struct.Reg* %1059, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %1060 to i64*
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 1
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %1064 = bitcast %union.anon* %1063 to %struct.anon.2*
  %AL.i952 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1064, i32 0, i32 0
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 15
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RBP.i953
  %1069 = sub i64 %1068, 93
  %1070 = load i64, i64* %PC.i951
  %1071 = add i64 %1070, 3
  store i64 %1071, i64* %PC.i951
  %1072 = inttoptr i64 %1069 to i8*
  %1073 = load i8, i8* %1072
  store i8 %1073, i8* %AL.i952, align 1
  store %struct.Memory* %loadMem_43fdd4, %struct.Memory** %MEMORY
  %loadMem_43fdd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1075 = getelementptr inbounds %struct.GPR, %struct.GPR* %1074, i32 0, i32 33
  %1076 = getelementptr inbounds %struct.Reg, %struct.Reg* %1075, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %1076 to i64*
  %1077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1078 = getelementptr inbounds %struct.GPR, %struct.GPR* %1077, i32 0, i32 1
  %1079 = getelementptr inbounds %struct.Reg, %struct.Reg* %1078, i32 0, i32 0
  %1080 = bitcast %union.anon* %1079 to %struct.anon.2*
  %AL.i950 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1080, i32 0, i32 0
  %1081 = load i8, i8* %AL.i950
  %1082 = zext i8 %1081 to i64
  %1083 = load i64, i64* %PC.i949
  %1084 = add i64 %1083, 2
  store i64 %1084, i64* %PC.i949
  %1085 = and i64 1, %1082
  %1086 = trunc i64 %1085 to i8
  store i8 %1086, i8* %AL.i950, align 1
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1087, align 1
  %1088 = trunc i64 %1085 to i32
  %1089 = and i32 %1088, 255
  %1090 = call i32 @llvm.ctpop.i32(i32 %1089)
  %1091 = trunc i32 %1090 to i8
  %1092 = and i8 %1091, 1
  %1093 = xor i8 %1092, 1
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1093, i8* %1094, align 1
  %1095 = icmp eq i8 %1086, 0
  %1096 = zext i1 %1095 to i8
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1096, i8* %1097, align 1
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1098, align 1
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1099, align 1
  %1100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1100, align 1
  store %struct.Memory* %loadMem_43fdd7, %struct.Memory** %MEMORY
  %loadMem_43fdd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1102 = getelementptr inbounds %struct.GPR, %struct.GPR* %1101, i32 0, i32 33
  %1103 = getelementptr inbounds %struct.Reg, %struct.Reg* %1102, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %1103 to i64*
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 1
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %1107 = bitcast %union.anon* %1106 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1107, i32 0, i32 0
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 5
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %RCX.i948 = bitcast %union.anon* %1110 to i64*
  %1111 = load i8, i8* %AL.i
  %1112 = zext i8 %1111 to i64
  %1113 = load i64, i64* %PC.i947
  %1114 = add i64 %1113, 3
  store i64 %1114, i64* %PC.i947
  %1115 = and i64 %1112, 255
  store i64 %1115, i64* %RCX.i948, align 8
  store %struct.Memory* %loadMem_43fdd9, %struct.Memory** %MEMORY
  %loadMem_43fddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1117 = getelementptr inbounds %struct.GPR, %struct.GPR* %1116, i32 0, i32 33
  %1118 = getelementptr inbounds %struct.Reg, %struct.Reg* %1117, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %1118 to i64*
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1120 = getelementptr inbounds %struct.GPR, %struct.GPR* %1119, i32 0, i32 5
  %1121 = getelementptr inbounds %struct.Reg, %struct.Reg* %1120, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %1121 to i32*
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1123 = getelementptr inbounds %struct.GPR, %struct.GPR* %1122, i32 0, i32 15
  %1124 = getelementptr inbounds %struct.Reg, %struct.Reg* %1123, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %1124 to i64*
  %1125 = load i64, i64* %RBP.i946
  %1126 = sub i64 %1125, 92
  %1127 = load i32, i32* %ECX.i
  %1128 = zext i32 %1127 to i64
  %1129 = load i64, i64* %PC.i945
  %1130 = add i64 %1129, 3
  store i64 %1130, i64* %PC.i945
  %1131 = inttoptr i64 %1126 to i32*
  store i32 %1127, i32* %1131
  store %struct.Memory* %loadMem_43fddc, %struct.Memory** %MEMORY
  %loadMem_43fddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 33
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %1134 to i64*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 7
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %RDX.i943 = bitcast %union.anon* %1137 to i64*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 15
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %1140 to i64*
  %1141 = load i64, i64* %RBP.i944
  %1142 = sub i64 %1141, 88
  %1143 = load i64, i64* %PC.i942
  %1144 = add i64 %1143, 4
  store i64 %1144, i64* %PC.i942
  %1145 = inttoptr i64 %1142 to i64*
  %1146 = load i64, i64* %1145
  store i64 %1146, i64* %RDX.i943, align 8
  store %struct.Memory* %loadMem_43fddf, %struct.Memory** %MEMORY
  %loadMem_43fde3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 33
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %1149 to i64*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 7
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %RDX.i941 = bitcast %union.anon* %1152 to i64*
  %1153 = load i64, i64* %RDX.i941
  %1154 = add i64 %1153, 580
  %1155 = load i64, i64* %PC.i940
  %1156 = add i64 %1155, 7
  store i64 %1156, i64* %PC.i940
  %1157 = inttoptr i64 %1154 to i32*
  %1158 = load i32, i32* %1157
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1159, align 1
  %1160 = and i32 %1158, 255
  %1161 = call i32 @llvm.ctpop.i32(i32 %1160)
  %1162 = trunc i32 %1161 to i8
  %1163 = and i8 %1162, 1
  %1164 = xor i8 %1163, 1
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1164, i8* %1165, align 1
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1166, align 1
  %1167 = icmp eq i32 %1158, 0
  %1168 = zext i1 %1167 to i8
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1168, i8* %1169, align 1
  %1170 = lshr i32 %1158, 31
  %1171 = trunc i32 %1170 to i8
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1171, i8* %1172, align 1
  %1173 = lshr i32 %1158, 31
  %1174 = xor i32 %1170, %1173
  %1175 = add i32 %1174, %1173
  %1176 = icmp eq i32 %1175, 2
  %1177 = zext i1 %1176 to i8
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1177, i8* %1178, align 1
  store %struct.Memory* %loadMem_43fde3, %struct.Memory** %MEMORY
  %loadMem_43fdea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1180 = getelementptr inbounds %struct.GPR, %struct.GPR* %1179, i32 0, i32 33
  %1181 = getelementptr inbounds %struct.Reg, %struct.Reg* %1180, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %1181 to i64*
  %1182 = load i64, i64* %PC.i939
  %1183 = add i64 %1182, 130
  %1184 = load i64, i64* %PC.i939
  %1185 = add i64 %1184, 6
  %1186 = load i64, i64* %PC.i939
  %1187 = add i64 %1186, 6
  store i64 %1187, i64* %PC.i939
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1189 = load i8, i8* %1188, align 1
  store i8 %1189, i8* %BRANCH_TAKEN, align 1
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1191 = icmp ne i8 %1189, 0
  %1192 = select i1 %1191, i64 %1183, i64 %1185
  store i64 %1192, i64* %1190, align 8
  store %struct.Memory* %loadMem_43fdea, %struct.Memory** %MEMORY
  %loadBr_43fdea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fdea = icmp eq i8 %loadBr_43fdea, 1
  br i1 %cmpBr_43fdea, label %block_.L_43fe6c, label %block_43fdf0

block_43fdf0:                                     ; preds = %block_.L_43fdd4
  %loadMem_43fdf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 33
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %1195 to i64*
  %1196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1197 = getelementptr inbounds %struct.GPR, %struct.GPR* %1196, i32 0, i32 1
  %1198 = getelementptr inbounds %struct.Reg, %struct.Reg* %1197, i32 0, i32 0
  %RAX.i937 = bitcast %union.anon* %1198 to i64*
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1200 = getelementptr inbounds %struct.GPR, %struct.GPR* %1199, i32 0, i32 15
  %1201 = getelementptr inbounds %struct.Reg, %struct.Reg* %1200, i32 0, i32 0
  %RBP.i938 = bitcast %union.anon* %1201 to i64*
  %1202 = load i64, i64* %RBP.i938
  %1203 = sub i64 %1202, 34
  %1204 = load i64, i64* %PC.i936
  %1205 = add i64 %1204, 4
  store i64 %1205, i64* %PC.i936
  %1206 = inttoptr i64 %1203 to i16*
  %1207 = load i16, i16* %1206
  %1208 = sext i16 %1207 to i64
  %1209 = and i64 %1208, 4294967295
  store i64 %1209, i64* %RAX.i937, align 8
  store %struct.Memory* %loadMem_43fdf0, %struct.Memory** %MEMORY
  %loadMem_43fdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 33
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %1212 to i64*
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 1
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %EAX.i935 = bitcast %union.anon* %1215 to i32*
  %1216 = load i32, i32* %EAX.i935
  %1217 = zext i32 %1216 to i64
  %1218 = load i64, i64* %PC.i934
  %1219 = add i64 %1218, 3
  store i64 %1219, i64* %PC.i934
  %1220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1220, align 1
  %1221 = and i32 %1216, 255
  %1222 = call i32 @llvm.ctpop.i32(i32 %1221)
  %1223 = trunc i32 %1222 to i8
  %1224 = and i8 %1223, 1
  %1225 = xor i8 %1224, 1
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1225, i8* %1226, align 1
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1227, align 1
  %1228 = icmp eq i32 %1216, 0
  %1229 = zext i1 %1228 to i8
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1229, i8* %1230, align 1
  %1231 = lshr i32 %1216, 31
  %1232 = trunc i32 %1231 to i8
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1232, i8* %1233, align 1
  %1234 = lshr i32 %1216, 31
  %1235 = xor i32 %1231, %1234
  %1236 = add i32 %1235, %1234
  %1237 = icmp eq i32 %1236, 2
  %1238 = zext i1 %1237 to i8
  %1239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1238, i8* %1239, align 1
  store %struct.Memory* %loadMem_43fdf4, %struct.Memory** %MEMORY
  %loadMem_43fdf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 33
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %1242 to i64*
  %1243 = load i64, i64* %PC.i933
  %1244 = add i64 %1243, 117
  %1245 = load i64, i64* %PC.i933
  %1246 = add i64 %1245, 6
  %1247 = load i64, i64* %PC.i933
  %1248 = add i64 %1247, 6
  store i64 %1248, i64* %PC.i933
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1250 = load i8, i8* %1249, align 1
  %1251 = icmp eq i8 %1250, 0
  %1252 = zext i1 %1251 to i8
  store i8 %1252, i8* %BRANCH_TAKEN, align 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1254 = select i1 %1251, i64 %1244, i64 %1246
  store i64 %1254, i64* %1253, align 8
  store %struct.Memory* %loadMem_43fdf7, %struct.Memory** %MEMORY
  %loadBr_43fdf7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fdf7 = icmp eq i8 %loadBr_43fdf7, 1
  br i1 %cmpBr_43fdf7, label %block_.L_43fe6c, label %block_43fdfd

block_43fdfd:                                     ; preds = %block_43fdf0
  %loadMem_43fdfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 33
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 1
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %1260 to i64*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 15
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %RBP.i932 = bitcast %union.anon* %1263 to i64*
  %1264 = load i64, i64* %RBP.i932
  %1265 = sub i64 %1264, 36
  %1266 = load i64, i64* %PC.i930
  %1267 = add i64 %1266, 4
  store i64 %1267, i64* %PC.i930
  %1268 = inttoptr i64 %1265 to i16*
  %1269 = load i16, i16* %1268
  %1270 = sext i16 %1269 to i64
  %1271 = and i64 %1270, 4294967295
  store i64 %1271, i64* %RAX.i931, align 8
  store %struct.Memory* %loadMem_43fdfd, %struct.Memory** %MEMORY
  %loadMem_43fe01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1273 = getelementptr inbounds %struct.GPR, %struct.GPR* %1272, i32 0, i32 33
  %1274 = getelementptr inbounds %struct.Reg, %struct.Reg* %1273, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %1274 to i64*
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1276 = getelementptr inbounds %struct.GPR, %struct.GPR* %1275, i32 0, i32 1
  %1277 = getelementptr inbounds %struct.Reg, %struct.Reg* %1276, i32 0, i32 0
  %EAX.i929 = bitcast %union.anon* %1277 to i32*
  %1278 = load i32, i32* %EAX.i929
  %1279 = zext i32 %1278 to i64
  %1280 = load i64, i64* %PC.i928
  %1281 = add i64 %1280, 3
  store i64 %1281, i64* %PC.i928
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1282, align 1
  %1283 = and i32 %1278, 255
  %1284 = call i32 @llvm.ctpop.i32(i32 %1283)
  %1285 = trunc i32 %1284 to i8
  %1286 = and i8 %1285, 1
  %1287 = xor i8 %1286, 1
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1287, i8* %1288, align 1
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1289, align 1
  %1290 = icmp eq i32 %1278, 0
  %1291 = zext i1 %1290 to i8
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1291, i8* %1292, align 1
  %1293 = lshr i32 %1278, 31
  %1294 = trunc i32 %1293 to i8
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1294, i8* %1295, align 1
  %1296 = lshr i32 %1278, 31
  %1297 = xor i32 %1293, %1296
  %1298 = add i32 %1297, %1296
  %1299 = icmp eq i32 %1298, 2
  %1300 = zext i1 %1299 to i8
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1300, i8* %1301, align 1
  store %struct.Memory* %loadMem_43fe01, %struct.Memory** %MEMORY
  %loadMem_43fe04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 33
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %1304 to i64*
  %1305 = load i64, i64* %PC.i927
  %1306 = add i64 %1305, 104
  %1307 = load i64, i64* %PC.i927
  %1308 = add i64 %1307, 6
  %1309 = load i64, i64* %PC.i927
  %1310 = add i64 %1309, 6
  store i64 %1310, i64* %PC.i927
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1312 = load i8, i8* %1311, align 1
  %1313 = icmp eq i8 %1312, 0
  %1314 = zext i1 %1313 to i8
  store i8 %1314, i8* %BRANCH_TAKEN, align 1
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1316 = select i1 %1313, i64 %1306, i64 %1308
  store i64 %1316, i64* %1315, align 8
  store %struct.Memory* %loadMem_43fe04, %struct.Memory** %MEMORY
  %loadBr_43fe04 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe04 = icmp eq i8 %loadBr_43fe04, 1
  br i1 %cmpBr_43fe04, label %block_.L_43fe6c, label %block_43fe0a

block_43fe0a:                                     ; preds = %block_43fdfd
  %loadMem_43fe0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 33
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %1319 to i64*
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 15
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %RBP.i926 = bitcast %union.anon* %1322 to i64*
  %1323 = load i64, i64* %RBP.i926
  %1324 = sub i64 %1323, 24
  %1325 = load i64, i64* %PC.i925
  %1326 = add i64 %1325, 4
  store i64 %1326, i64* %PC.i925
  %1327 = inttoptr i64 %1324 to i32*
  %1328 = load i32, i32* %1327
  %1329 = sub i32 %1328, 2
  %1330 = icmp ult i32 %1328, 2
  %1331 = zext i1 %1330 to i8
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1331, i8* %1332, align 1
  %1333 = and i32 %1329, 255
  %1334 = call i32 @llvm.ctpop.i32(i32 %1333)
  %1335 = trunc i32 %1334 to i8
  %1336 = and i8 %1335, 1
  %1337 = xor i8 %1336, 1
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1337, i8* %1338, align 1
  %1339 = xor i32 %1328, 2
  %1340 = xor i32 %1339, %1329
  %1341 = lshr i32 %1340, 4
  %1342 = trunc i32 %1341 to i8
  %1343 = and i8 %1342, 1
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1343, i8* %1344, align 1
  %1345 = icmp eq i32 %1329, 0
  %1346 = zext i1 %1345 to i8
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1346, i8* %1347, align 1
  %1348 = lshr i32 %1329, 31
  %1349 = trunc i32 %1348 to i8
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1349, i8* %1350, align 1
  %1351 = lshr i32 %1328, 31
  %1352 = xor i32 %1348, %1351
  %1353 = add i32 %1352, %1351
  %1354 = icmp eq i32 %1353, 2
  %1355 = zext i1 %1354 to i8
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1355, i8* %1356, align 1
  store %struct.Memory* %loadMem_43fe0a, %struct.Memory** %MEMORY
  %loadMem_43fe0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 33
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %1359 to i64*
  %1360 = load i64, i64* %PC.i924
  %1361 = add i64 %1360, 94
  %1362 = load i64, i64* %PC.i924
  %1363 = add i64 %1362, 6
  %1364 = load i64, i64* %PC.i924
  %1365 = add i64 %1364, 6
  store i64 %1365, i64* %PC.i924
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1367 = load i8, i8* %1366, align 1
  %1368 = icmp eq i8 %1367, 0
  %1369 = zext i1 %1368 to i8
  store i8 %1369, i8* %BRANCH_TAKEN, align 1
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1371 = select i1 %1368, i64 %1361, i64 %1363
  store i64 %1371, i64* %1370, align 8
  store %struct.Memory* %loadMem_43fe0e, %struct.Memory** %MEMORY
  %loadBr_43fe0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe0e = icmp eq i8 %loadBr_43fe0e, 1
  br i1 %cmpBr_43fe0e, label %block_.L_43fe6c, label %block_43fe14

block_43fe14:                                     ; preds = %block_43fe0a
  %loadMem_43fe14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1373 = getelementptr inbounds %struct.GPR, %struct.GPR* %1372, i32 0, i32 33
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %1374 to i64*
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 15
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %1377 to i64*
  %1378 = load i64, i64* %RBP.i923
  %1379 = sub i64 %1378, 28
  %1380 = load i64, i64* %PC.i922
  %1381 = add i64 %1380, 4
  store i64 %1381, i64* %PC.i922
  %1382 = inttoptr i64 %1379 to i32*
  %1383 = load i32, i32* %1382
  %1384 = sub i32 %1383, 1
  %1385 = icmp ult i32 %1383, 1
  %1386 = zext i1 %1385 to i8
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1386, i8* %1387, align 1
  %1388 = and i32 %1384, 255
  %1389 = call i32 @llvm.ctpop.i32(i32 %1388)
  %1390 = trunc i32 %1389 to i8
  %1391 = and i8 %1390, 1
  %1392 = xor i8 %1391, 1
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1392, i8* %1393, align 1
  %1394 = xor i32 %1383, 1
  %1395 = xor i32 %1394, %1384
  %1396 = lshr i32 %1395, 4
  %1397 = trunc i32 %1396 to i8
  %1398 = and i8 %1397, 1
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1398, i8* %1399, align 1
  %1400 = icmp eq i32 %1384, 0
  %1401 = zext i1 %1400 to i8
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1401, i8* %1402, align 1
  %1403 = lshr i32 %1384, 31
  %1404 = trunc i32 %1403 to i8
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1404, i8* %1405, align 1
  %1406 = lshr i32 %1383, 31
  %1407 = xor i32 %1403, %1406
  %1408 = add i32 %1407, %1406
  %1409 = icmp eq i32 %1408, 2
  %1410 = zext i1 %1409 to i8
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1410, i8* %1411, align 1
  store %struct.Memory* %loadMem_43fe14, %struct.Memory** %MEMORY
  %loadMem_43fe18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1413 = getelementptr inbounds %struct.GPR, %struct.GPR* %1412, i32 0, i32 33
  %1414 = getelementptr inbounds %struct.Reg, %struct.Reg* %1413, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %1414 to i64*
  %1415 = load i64, i64* %PC.i921
  %1416 = add i64 %1415, 84
  %1417 = load i64, i64* %PC.i921
  %1418 = add i64 %1417, 6
  %1419 = load i64, i64* %PC.i921
  %1420 = add i64 %1419, 6
  store i64 %1420, i64* %PC.i921
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1422 = load i8, i8* %1421, align 1
  %1423 = icmp eq i8 %1422, 0
  %1424 = zext i1 %1423 to i8
  store i8 %1424, i8* %BRANCH_TAKEN, align 1
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1426 = select i1 %1423, i64 %1416, i64 %1418
  store i64 %1426, i64* %1425, align 8
  store %struct.Memory* %loadMem_43fe18, %struct.Memory** %MEMORY
  %loadBr_43fe18 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe18 = icmp eq i8 %loadBr_43fe18, 1
  br i1 %cmpBr_43fe18, label %block_.L_43fe6c, label %block_43fe1e

block_43fe1e:                                     ; preds = %block_43fe14
  %loadMem_43fe1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 33
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %1429 to i64*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1431 = getelementptr inbounds %struct.GPR, %struct.GPR* %1430, i32 0, i32 15
  %1432 = getelementptr inbounds %struct.Reg, %struct.Reg* %1431, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %1432 to i64*
  %1433 = load i64, i64* %RBP.i920
  %1434 = sub i64 %1433, 32
  %1435 = load i64, i64* %PC.i919
  %1436 = add i64 %1435, 4
  store i64 %1436, i64* %PC.i919
  %1437 = inttoptr i64 %1434 to i32*
  %1438 = load i32, i32* %1437
  %1439 = sub i32 %1438, 1
  %1440 = icmp ult i32 %1438, 1
  %1441 = zext i1 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1441, i8* %1442, align 1
  %1443 = and i32 %1439, 255
  %1444 = call i32 @llvm.ctpop.i32(i32 %1443)
  %1445 = trunc i32 %1444 to i8
  %1446 = and i8 %1445, 1
  %1447 = xor i8 %1446, 1
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1447, i8* %1448, align 1
  %1449 = xor i32 %1438, 1
  %1450 = xor i32 %1449, %1439
  %1451 = lshr i32 %1450, 4
  %1452 = trunc i32 %1451 to i8
  %1453 = and i8 %1452, 1
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1453, i8* %1454, align 1
  %1455 = icmp eq i32 %1439, 0
  %1456 = zext i1 %1455 to i8
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1456, i8* %1457, align 1
  %1458 = lshr i32 %1439, 31
  %1459 = trunc i32 %1458 to i8
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1459, i8* %1460, align 1
  %1461 = lshr i32 %1438, 31
  %1462 = xor i32 %1458, %1461
  %1463 = add i32 %1462, %1461
  %1464 = icmp eq i32 %1463, 2
  %1465 = zext i1 %1464 to i8
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1465, i8* %1466, align 1
  store %struct.Memory* %loadMem_43fe1e, %struct.Memory** %MEMORY
  %loadMem_43fe22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1468 = getelementptr inbounds %struct.GPR, %struct.GPR* %1467, i32 0, i32 33
  %1469 = getelementptr inbounds %struct.Reg, %struct.Reg* %1468, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %1469 to i64*
  %1470 = load i64, i64* %PC.i918
  %1471 = add i64 %1470, 74
  %1472 = load i64, i64* %PC.i918
  %1473 = add i64 %1472, 6
  %1474 = load i64, i64* %PC.i918
  %1475 = add i64 %1474, 6
  store i64 %1475, i64* %PC.i918
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1477 = load i8, i8* %1476, align 1
  %1478 = icmp eq i8 %1477, 0
  %1479 = zext i1 %1478 to i8
  store i8 %1479, i8* %BRANCH_TAKEN, align 1
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1481 = select i1 %1478, i64 %1471, i64 %1473
  store i64 %1481, i64* %1480, align 8
  store %struct.Memory* %loadMem_43fe22, %struct.Memory** %MEMORY
  %loadBr_43fe22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe22 = icmp eq i8 %loadBr_43fe22, 1
  br i1 %cmpBr_43fe22, label %block_.L_43fe6c, label %block_43fe28

block_43fe28:                                     ; preds = %block_43fe1e
  %loadMem_43fe28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 33
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 1
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RAX.i916 = bitcast %union.anon* %1487 to i64*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 15
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %RBP.i917 = bitcast %union.anon* %1490 to i64*
  %1491 = load i64, i64* %RBP.i917
  %1492 = sub i64 %1491, 88
  %1493 = load i64, i64* %PC.i915
  %1494 = add i64 %1493, 4
  store i64 %1494, i64* %PC.i915
  %1495 = inttoptr i64 %1492 to i64*
  %1496 = load i64, i64* %1495
  store i64 %1496, i64* %RAX.i916, align 8
  store %struct.Memory* %loadMem_43fe28, %struct.Memory** %MEMORY
  %loadMem_43fe2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 33
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %1499 to i64*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 1
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %RAX.i914 = bitcast %union.anon* %1502 to i64*
  %1503 = load i64, i64* %RAX.i914
  %1504 = add i64 %1503, 580
  %1505 = load i64, i64* %PC.i913
  %1506 = add i64 %1505, 7
  store i64 %1506, i64* %PC.i913
  %1507 = inttoptr i64 %1504 to i32*
  %1508 = load i32, i32* %1507
  %1509 = sub i32 %1508, 1
  %1510 = icmp ult i32 %1508, 1
  %1511 = zext i1 %1510 to i8
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1511, i8* %1512, align 1
  %1513 = and i32 %1509, 255
  %1514 = call i32 @llvm.ctpop.i32(i32 %1513)
  %1515 = trunc i32 %1514 to i8
  %1516 = and i8 %1515, 1
  %1517 = xor i8 %1516, 1
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1517, i8* %1518, align 1
  %1519 = xor i32 %1508, 1
  %1520 = xor i32 %1519, %1509
  %1521 = lshr i32 %1520, 4
  %1522 = trunc i32 %1521 to i8
  %1523 = and i8 %1522, 1
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1523, i8* %1524, align 1
  %1525 = icmp eq i32 %1509, 0
  %1526 = zext i1 %1525 to i8
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1526, i8* %1527, align 1
  %1528 = lshr i32 %1509, 31
  %1529 = trunc i32 %1528 to i8
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1529, i8* %1530, align 1
  %1531 = lshr i32 %1508, 31
  %1532 = xor i32 %1528, %1531
  %1533 = add i32 %1532, %1531
  %1534 = icmp eq i32 %1533, 2
  %1535 = zext i1 %1534 to i8
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1535, i8* %1536, align 1
  store %struct.Memory* %loadMem_43fe2c, %struct.Memory** %MEMORY
  %loadMem_43fe33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1538 = getelementptr inbounds %struct.GPR, %struct.GPR* %1537, i32 0, i32 33
  %1539 = getelementptr inbounds %struct.Reg, %struct.Reg* %1538, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %1539 to i64*
  %1540 = load i64, i64* %PC.i912
  %1541 = add i64 %1540, 30
  %1542 = load i64, i64* %PC.i912
  %1543 = add i64 %1542, 6
  %1544 = load i64, i64* %PC.i912
  %1545 = add i64 %1544, 6
  store i64 %1545, i64* %PC.i912
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1547 = load i8, i8* %1546, align 1
  %1548 = icmp eq i8 %1547, 0
  %1549 = zext i1 %1548 to i8
  store i8 %1549, i8* %BRANCH_TAKEN, align 1
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1551 = select i1 %1548, i64 %1541, i64 %1543
  store i64 %1551, i64* %1550, align 8
  store %struct.Memory* %loadMem_43fe33, %struct.Memory** %MEMORY
  %loadBr_43fe33 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe33 = icmp eq i8 %loadBr_43fe33, 1
  br i1 %cmpBr_43fe33, label %block_.L_43fe51, label %block_43fe39

block_43fe39:                                     ; preds = %block_43fe28
  %loadMem_43fe39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1553 = getelementptr inbounds %struct.GPR, %struct.GPR* %1552, i32 0, i32 33
  %1554 = getelementptr inbounds %struct.Reg, %struct.Reg* %1553, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %1554 to i64*
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1556 = getelementptr inbounds %struct.GPR, %struct.GPR* %1555, i32 0, i32 1
  %1557 = getelementptr inbounds %struct.Reg, %struct.Reg* %1556, i32 0, i32 0
  %RAX.i911 = bitcast %union.anon* %1557 to i64*
  %1558 = load i64, i64* %PC.i910
  %1559 = add i64 %1558, 8
  store i64 %1559, i64* %PC.i910
  %1560 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1560, i64* %RAX.i911, align 8
  store %struct.Memory* %loadMem_43fe39, %struct.Memory** %MEMORY
  %loadMem_43fe41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 1
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %1566 to i64*
  %1567 = load i64, i64* %RAX.i909
  %1568 = add i64 %1567, 71936
  %1569 = load i64, i64* %PC.i908
  %1570 = add i64 %1569, 7
  store i64 %1570, i64* %PC.i908
  %1571 = inttoptr i64 %1568 to i64*
  %1572 = load i64, i64* %1571
  store i64 %1572, i64* %RAX.i909, align 8
  store %struct.Memory* %loadMem_43fe41, %struct.Memory** %MEMORY
  %loadMem_43fe48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1574 = getelementptr inbounds %struct.GPR, %struct.GPR* %1573, i32 0, i32 33
  %1575 = getelementptr inbounds %struct.Reg, %struct.Reg* %1574, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %1575 to i64*
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1577 = getelementptr inbounds %struct.GPR, %struct.GPR* %1576, i32 0, i32 1
  %1578 = getelementptr inbounds %struct.Reg, %struct.Reg* %1577, i32 0, i32 0
  %RAX.i906 = bitcast %union.anon* %1578 to i64*
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1580 = getelementptr inbounds %struct.GPR, %struct.GPR* %1579, i32 0, i32 15
  %1581 = getelementptr inbounds %struct.Reg, %struct.Reg* %1580, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %1581 to i64*
  %1582 = load i64, i64* %RBP.i907
  %1583 = sub i64 %1582, 104
  %1584 = load i64, i64* %RAX.i906
  %1585 = load i64, i64* %PC.i905
  %1586 = add i64 %1585, 4
  store i64 %1586, i64* %PC.i905
  %1587 = inttoptr i64 %1583 to i64*
  store i64 %1584, i64* %1587
  store %struct.Memory* %loadMem_43fe48, %struct.Memory** %MEMORY
  %loadMem_43fe4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 33
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %1590 to i64*
  %1591 = load i64, i64* %PC.i904
  %1592 = add i64 %1591, 24
  %1593 = load i64, i64* %PC.i904
  %1594 = add i64 %1593, 5
  store i64 %1594, i64* %PC.i904
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1592, i64* %1595, align 8
  store %struct.Memory* %loadMem_43fe4c, %struct.Memory** %MEMORY
  br label %block_.L_43fe64

block_.L_43fe51:                                  ; preds = %block_43fe28
  %loadMem_43fe51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1597 = getelementptr inbounds %struct.GPR, %struct.GPR* %1596, i32 0, i32 33
  %1598 = getelementptr inbounds %struct.Reg, %struct.Reg* %1597, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %1598 to i64*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1600 = getelementptr inbounds %struct.GPR, %struct.GPR* %1599, i32 0, i32 1
  %1601 = getelementptr inbounds %struct.Reg, %struct.Reg* %1600, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %1601 to i64*
  %1602 = load i64, i64* %PC.i902
  %1603 = add i64 %1602, 8
  store i64 %1603, i64* %PC.i902
  %1604 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1604, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_43fe51, %struct.Memory** %MEMORY
  %loadMem_43fe59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %1607 to i64*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 1
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %1610 to i64*
  %1611 = load i64, i64* %RAX.i901
  %1612 = add i64 %1611, 71944
  %1613 = load i64, i64* %PC.i900
  %1614 = add i64 %1613, 7
  store i64 %1614, i64* %PC.i900
  %1615 = inttoptr i64 %1612 to i64*
  %1616 = load i64, i64* %1615
  store i64 %1616, i64* %RAX.i901, align 8
  store %struct.Memory* %loadMem_43fe59, %struct.Memory** %MEMORY
  %loadMem_43fe60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 33
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %1619 to i64*
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1621 = getelementptr inbounds %struct.GPR, %struct.GPR* %1620, i32 0, i32 1
  %1622 = getelementptr inbounds %struct.Reg, %struct.Reg* %1621, i32 0, i32 0
  %RAX.i898 = bitcast %union.anon* %1622 to i64*
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1624 = getelementptr inbounds %struct.GPR, %struct.GPR* %1623, i32 0, i32 15
  %1625 = getelementptr inbounds %struct.Reg, %struct.Reg* %1624, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %1625 to i64*
  %1626 = load i64, i64* %RBP.i899
  %1627 = sub i64 %1626, 104
  %1628 = load i64, i64* %RAX.i898
  %1629 = load i64, i64* %PC.i897
  %1630 = add i64 %1629, 4
  store i64 %1630, i64* %PC.i897
  %1631 = inttoptr i64 %1627 to i64*
  store i64 %1628, i64* %1631
  store %struct.Memory* %loadMem_43fe60, %struct.Memory** %MEMORY
  br label %block_.L_43fe64

block_.L_43fe64:                                  ; preds = %block_.L_43fe51, %block_43fe39
  %loadMem_43fe64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 33
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %1634 to i64*
  %1635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1636 = getelementptr inbounds %struct.GPR, %struct.GPR* %1635, i32 0, i32 1
  %1637 = getelementptr inbounds %struct.Reg, %struct.Reg* %1636, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %1637 to i64*
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1639 = getelementptr inbounds %struct.GPR, %struct.GPR* %1638, i32 0, i32 15
  %1640 = getelementptr inbounds %struct.Reg, %struct.Reg* %1639, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %1640 to i64*
  %1641 = load i64, i64* %RBP.i896
  %1642 = sub i64 %1641, 104
  %1643 = load i64, i64* %PC.i894
  %1644 = add i64 %1643, 4
  store i64 %1644, i64* %PC.i894
  %1645 = inttoptr i64 %1642 to i64*
  %1646 = load i64, i64* %1645
  store i64 %1646, i64* %RAX.i895, align 8
  store %struct.Memory* %loadMem_43fe64, %struct.Memory** %MEMORY
  %loadMem_43fe68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 33
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %1649 to i64*
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 1
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %1652 to i64*
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 15
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %1655 to i64*
  %1656 = load i64, i64* %RBP.i893
  %1657 = sub i64 %1656, 80
  %1658 = load i64, i64* %RAX.i892
  %1659 = load i64, i64* %PC.i891
  %1660 = add i64 %1659, 4
  store i64 %1660, i64* %PC.i891
  %1661 = inttoptr i64 %1657 to i64*
  store i64 %1658, i64* %1661
  store %struct.Memory* %loadMem_43fe68, %struct.Memory** %MEMORY
  br label %block_.L_43fe6c

block_.L_43fe6c:                                  ; preds = %block_.L_43fe64, %block_43fe1e, %block_43fe14, %block_43fe0a, %block_43fdfd, %block_43fdf0, %block_.L_43fdd4
  %loadMem_43fe6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 33
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %1664 to i64*
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1666 = getelementptr inbounds %struct.GPR, %struct.GPR* %1665, i32 0, i32 15
  %1667 = getelementptr inbounds %struct.Reg, %struct.Reg* %1666, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %1667 to i64*
  %1668 = load i64, i64* %RBP.i890
  %1669 = sub i64 %1668, 24
  %1670 = load i64, i64* %PC.i889
  %1671 = add i64 %1670, 4
  store i64 %1671, i64* %PC.i889
  %1672 = inttoptr i64 %1669 to i32*
  %1673 = load i32, i32* %1672
  %1674 = sub i32 %1673, -1
  %1675 = icmp ult i32 %1673, -1
  %1676 = zext i1 %1675 to i8
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1676, i8* %1677, align 1
  %1678 = and i32 %1674, 255
  %1679 = call i32 @llvm.ctpop.i32(i32 %1678)
  %1680 = trunc i32 %1679 to i8
  %1681 = and i8 %1680, 1
  %1682 = xor i8 %1681, 1
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1682, i8* %1683, align 1
  %1684 = xor i32 %1673, -1
  %1685 = xor i32 %1684, %1674
  %1686 = lshr i32 %1685, 4
  %1687 = trunc i32 %1686 to i8
  %1688 = and i8 %1687, 1
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1688, i8* %1689, align 1
  %1690 = icmp eq i32 %1674, 0
  %1691 = zext i1 %1690 to i8
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1691, i8* %1692, align 1
  %1693 = lshr i32 %1674, 31
  %1694 = trunc i32 %1693 to i8
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1694, i8* %1695, align 1
  %1696 = lshr i32 %1673, 31
  %1697 = xor i32 %1696, 1
  %1698 = xor i32 %1693, %1696
  %1699 = add i32 %1698, %1697
  %1700 = icmp eq i32 %1699, 2
  %1701 = zext i1 %1700 to i8
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1701, i8* %1702, align 1
  store %struct.Memory* %loadMem_43fe6c, %struct.Memory** %MEMORY
  %loadMem_43fe70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1704 = getelementptr inbounds %struct.GPR, %struct.GPR* %1703, i32 0, i32 33
  %1705 = getelementptr inbounds %struct.Reg, %struct.Reg* %1704, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %1705 to i64*
  %1706 = load i64, i64* %PC.i888
  %1707 = add i64 %1706, 25
  %1708 = load i64, i64* %PC.i888
  %1709 = add i64 %1708, 6
  %1710 = load i64, i64* %PC.i888
  %1711 = add i64 %1710, 6
  store i64 %1711, i64* %PC.i888
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1713 = load i8, i8* %1712, align 1
  %1714 = icmp eq i8 %1713, 0
  %1715 = zext i1 %1714 to i8
  store i8 %1715, i8* %BRANCH_TAKEN, align 1
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1717 = select i1 %1714, i64 %1707, i64 %1709
  store i64 %1717, i64* %1716, align 8
  store %struct.Memory* %loadMem_43fe70, %struct.Memory** %MEMORY
  %loadBr_43fe70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe70 = icmp eq i8 %loadBr_43fe70, 1
  br i1 %cmpBr_43fe70, label %block_.L_43fe89, label %block_43fe76

block_43fe76:                                     ; preds = %block_.L_43fe6c
  %loadMem_43fe76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 33
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %1720 to i64*
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 11
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %RDI.i886 = bitcast %union.anon* %1723 to i64*
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 15
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %1726 to i64*
  %1727 = load i64, i64* %RBP.i887
  %1728 = sub i64 %1727, 12
  %1729 = load i64, i64* %PC.i885
  %1730 = add i64 %1729, 3
  store i64 %1730, i64* %PC.i885
  %1731 = inttoptr i64 %1728 to i32*
  %1732 = load i32, i32* %1731
  %1733 = zext i32 %1732 to i64
  store i64 %1733, i64* %RDI.i886, align 8
  store %struct.Memory* %loadMem_43fe76, %struct.Memory** %MEMORY
  %loadMem_43fe79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1735 = getelementptr inbounds %struct.GPR, %struct.GPR* %1734, i32 0, i32 33
  %1736 = getelementptr inbounds %struct.Reg, %struct.Reg* %1735, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %1736 to i64*
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1738 = getelementptr inbounds %struct.GPR, %struct.GPR* %1737, i32 0, i32 9
  %1739 = getelementptr inbounds %struct.Reg, %struct.Reg* %1738, i32 0, i32 0
  %RSI.i883 = bitcast %union.anon* %1739 to i64*
  %1740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1741 = getelementptr inbounds %struct.GPR, %struct.GPR* %1740, i32 0, i32 15
  %1742 = getelementptr inbounds %struct.Reg, %struct.Reg* %1741, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %1742 to i64*
  %1743 = load i64, i64* %RBP.i884
  %1744 = sub i64 %1743, 16
  %1745 = load i64, i64* %PC.i882
  %1746 = add i64 %1745, 3
  store i64 %1746, i64* %PC.i882
  %1747 = inttoptr i64 %1744 to i32*
  %1748 = load i32, i32* %1747
  %1749 = zext i32 %1748 to i64
  store i64 %1749, i64* %RSI.i883, align 8
  store %struct.Memory* %loadMem_43fe79, %struct.Memory** %MEMORY
  %loadMem_43fe7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1751 = getelementptr inbounds %struct.GPR, %struct.GPR* %1750, i32 0, i32 33
  %1752 = getelementptr inbounds %struct.Reg, %struct.Reg* %1751, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %1752 to i64*
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1754 = getelementptr inbounds %struct.GPR, %struct.GPR* %1753, i32 0, i32 7
  %1755 = getelementptr inbounds %struct.Reg, %struct.Reg* %1754, i32 0, i32 0
  %RDX.i880 = bitcast %union.anon* %1755 to i64*
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 15
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %1758 to i64*
  %1759 = load i64, i64* %RBP.i881
  %1760 = sub i64 %1759, 20
  %1761 = load i64, i64* %PC.i879
  %1762 = add i64 %1761, 3
  store i64 %1762, i64* %PC.i879
  %1763 = inttoptr i64 %1760 to i32*
  %1764 = load i32, i32* %1763
  %1765 = zext i32 %1764 to i64
  store i64 %1765, i64* %RDX.i880, align 8
  store %struct.Memory* %loadMem_43fe7c, %struct.Memory** %MEMORY
  %loadMem1_43fe7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1767 = getelementptr inbounds %struct.GPR, %struct.GPR* %1766, i32 0, i32 33
  %1768 = getelementptr inbounds %struct.Reg, %struct.Reg* %1767, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %1768 to i64*
  %1769 = load i64, i64* %PC.i878
  %1770 = add i64 %1769, 1473
  %1771 = load i64, i64* %PC.i878
  %1772 = add i64 %1771, 5
  %1773 = load i64, i64* %PC.i878
  %1774 = add i64 %1773, 5
  store i64 %1774, i64* %PC.i878
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1776 = load i64, i64* %1775, align 8
  %1777 = add i64 %1776, -8
  %1778 = inttoptr i64 %1777 to i64*
  store i64 %1772, i64* %1778
  store i64 %1777, i64* %1775, align 8
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1770, i64* %1779, align 8
  store %struct.Memory* %loadMem1_43fe7f, %struct.Memory** %MEMORY
  %loadMem2_43fe7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fe7f = load i64, i64* %3
  %call2_43fe7f = call %struct.Memory* @sub_440440.IntraChromaPrediction4x4(%struct.State* %0, i64 %loadPC_43fe7f, %struct.Memory* %loadMem2_43fe7f)
  store %struct.Memory* %call2_43fe7f, %struct.Memory** %MEMORY
  %loadMem_43fe84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1781 = getelementptr inbounds %struct.GPR, %struct.GPR* %1780, i32 0, i32 33
  %1782 = getelementptr inbounds %struct.Reg, %struct.Reg* %1781, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %1782 to i64*
  %1783 = load i64, i64* %PC.i877
  %1784 = add i64 %1783, 1445
  %1785 = load i64, i64* %PC.i877
  %1786 = add i64 %1785, 5
  store i64 %1786, i64* %PC.i877
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1784, i64* %1787, align 8
  store %struct.Memory* %loadMem_43fe84, %struct.Memory** %MEMORY
  br label %block_.L_440429

block_.L_43fe89:                                  ; preds = %block_.L_43fe6c
  %loadMem_43fe89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 33
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %1790 to i64*
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 15
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %1793 to i64*
  %1794 = load i64, i64* %RBP.i876
  %1795 = sub i64 %1794, 24
  %1796 = load i64, i64* %PC.i875
  %1797 = add i64 %1796, 4
  store i64 %1797, i64* %PC.i875
  %1798 = inttoptr i64 %1795 to i32*
  %1799 = load i32, i32* %1798
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1800, align 1
  %1801 = and i32 %1799, 255
  %1802 = call i32 @llvm.ctpop.i32(i32 %1801)
  %1803 = trunc i32 %1802 to i8
  %1804 = and i8 %1803, 1
  %1805 = xor i8 %1804, 1
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1805, i8* %1806, align 1
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1807, align 1
  %1808 = icmp eq i32 %1799, 0
  %1809 = zext i1 %1808 to i8
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1809, i8* %1810, align 1
  %1811 = lshr i32 %1799, 31
  %1812 = trunc i32 %1811 to i8
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1812, i8* %1813, align 1
  %1814 = lshr i32 %1799, 31
  %1815 = xor i32 %1811, %1814
  %1816 = add i32 %1815, %1814
  %1817 = icmp eq i32 %1816, 2
  %1818 = zext i1 %1817 to i8
  %1819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1818, i8* %1819, align 1
  store %struct.Memory* %loadMem_43fe89, %struct.Memory** %MEMORY
  %loadMem_43fe8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 33
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %1822 to i64*
  %1823 = load i64, i64* %PC.i874
  %1824 = add i64 %1823, 16
  %1825 = load i64, i64* %PC.i874
  %1826 = add i64 %1825, 6
  %1827 = load i64, i64* %PC.i874
  %1828 = add i64 %1827, 6
  store i64 %1828, i64* %PC.i874
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1830 = load i8, i8* %1829, align 1
  store i8 %1830, i8* %BRANCH_TAKEN, align 1
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1832 = icmp ne i8 %1830, 0
  %1833 = select i1 %1832, i64 %1824, i64 %1826
  store i64 %1833, i64* %1831, align 8
  store %struct.Memory* %loadMem_43fe8d, %struct.Memory** %MEMORY
  %loadBr_43fe8d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe8d = icmp eq i8 %loadBr_43fe8d, 1
  br i1 %cmpBr_43fe8d, label %block_.L_43fe9d, label %block_43fe93

block_43fe93:                                     ; preds = %block_.L_43fe89
  %loadMem_43fe93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 33
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %1836 to i64*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 15
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %1839 to i64*
  %1840 = load i64, i64* %RBP.i873
  %1841 = sub i64 %1840, 24
  %1842 = load i64, i64* %PC.i872
  %1843 = add i64 %1842, 4
  store i64 %1843, i64* %PC.i872
  %1844 = inttoptr i64 %1841 to i32*
  %1845 = load i32, i32* %1844
  %1846 = sub i32 %1845, 2
  %1847 = icmp ult i32 %1845, 2
  %1848 = zext i1 %1847 to i8
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1848, i8* %1849, align 1
  %1850 = and i32 %1846, 255
  %1851 = call i32 @llvm.ctpop.i32(i32 %1850)
  %1852 = trunc i32 %1851 to i8
  %1853 = and i8 %1852, 1
  %1854 = xor i8 %1853, 1
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1854, i8* %1855, align 1
  %1856 = xor i32 %1845, 2
  %1857 = xor i32 %1856, %1846
  %1858 = lshr i32 %1857, 4
  %1859 = trunc i32 %1858 to i8
  %1860 = and i8 %1859, 1
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1860, i8* %1861, align 1
  %1862 = icmp eq i32 %1846, 0
  %1863 = zext i1 %1862 to i8
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1863, i8* %1864, align 1
  %1865 = lshr i32 %1846, 31
  %1866 = trunc i32 %1865 to i8
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1866, i8* %1867, align 1
  %1868 = lshr i32 %1845, 31
  %1869 = xor i32 %1865, %1868
  %1870 = add i32 %1869, %1868
  %1871 = icmp eq i32 %1870, 2
  %1872 = zext i1 %1871 to i8
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1872, i8* %1873, align 1
  store %struct.Memory* %loadMem_43fe93, %struct.Memory** %MEMORY
  %loadMem_43fe97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 33
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %1876 to i64*
  %1877 = load i64, i64* %PC.i871
  %1878 = add i64 %1877, 70
  %1879 = load i64, i64* %PC.i871
  %1880 = add i64 %1879, 6
  %1881 = load i64, i64* %PC.i871
  %1882 = add i64 %1881, 6
  store i64 %1882, i64* %PC.i871
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1884 = load i8, i8* %1883, align 1
  %1885 = icmp eq i8 %1884, 0
  %1886 = zext i1 %1885 to i8
  store i8 %1886, i8* %BRANCH_TAKEN, align 1
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1888 = select i1 %1885, i64 %1878, i64 %1880
  store i64 %1888, i64* %1887, align 8
  store %struct.Memory* %loadMem_43fe97, %struct.Memory** %MEMORY
  %loadBr_43fe97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe97 = icmp eq i8 %loadBr_43fe97, 1
  br i1 %cmpBr_43fe97, label %block_.L_43fedd, label %block_.L_43fe9d

block_.L_43fe9d:                                  ; preds = %block_43fe93, %block_.L_43fe89
  %loadMem_43fe9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 33
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %1891 to i64*
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 11
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %RDI.i870 = bitcast %union.anon* %1894 to i64*
  %1895 = load i64, i64* %PC.i869
  %1896 = add i64 %1895, 10
  store i64 %1896, i64* %PC.i869
  store i64 ptrtoint (%G__0x6cc2b0_type* @G__0x6cc2b0 to i64), i64* %RDI.i870, align 8
  store %struct.Memory* %loadMem_43fe9d, %struct.Memory** %MEMORY
  %loadMem_43fea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1898 = getelementptr inbounds %struct.GPR, %struct.GPR* %1897, i32 0, i32 33
  %1899 = getelementptr inbounds %struct.Reg, %struct.Reg* %1898, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %1899 to i64*
  %1900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1901 = getelementptr inbounds %struct.GPR, %struct.GPR* %1900, i32 0, i32 17
  %1902 = getelementptr inbounds %struct.Reg, %struct.Reg* %1901, i32 0, i32 0
  %R8D.i868 = bitcast %union.anon* %1902 to i32*
  %1903 = bitcast i32* %R8D.i868 to i64*
  %1904 = load i32, i32* %R8D.i868
  %1905 = zext i32 %1904 to i64
  %1906 = load i32, i32* %R8D.i868
  %1907 = zext i32 %1906 to i64
  %1908 = load i64, i64* %PC.i867
  %1909 = add i64 %1908, 3
  store i64 %1909, i64* %PC.i867
  %1910 = xor i64 %1907, %1905
  %1911 = trunc i64 %1910 to i32
  %1912 = and i64 %1910, 4294967295
  store i64 %1912, i64* %1903, align 8
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1913, align 1
  %1914 = and i32 %1911, 255
  %1915 = call i32 @llvm.ctpop.i32(i32 %1914)
  %1916 = trunc i32 %1915 to i8
  %1917 = and i8 %1916, 1
  %1918 = xor i8 %1917, 1
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1918, i8* %1919, align 1
  %1920 = icmp eq i32 %1911, 0
  %1921 = zext i1 %1920 to i8
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1921, i8* %1922, align 1
  %1923 = lshr i32 %1911, 31
  %1924 = trunc i32 %1923 to i8
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1924, i8* %1925, align 1
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1926, align 1
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1927, align 1
  store %struct.Memory* %loadMem_43fea7, %struct.Memory** %MEMORY
  %loadMem_43feaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 33
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %1930 to i64*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 9
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %RSI.i865 = bitcast %union.anon* %1933 to i64*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 15
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %1936 to i64*
  %1937 = load i64, i64* %RBP.i866
  %1938 = sub i64 %1937, 16
  %1939 = load i64, i64* %PC.i864
  %1940 = add i64 %1939, 3
  store i64 %1940, i64* %PC.i864
  %1941 = inttoptr i64 %1938 to i32*
  %1942 = load i32, i32* %1941
  %1943 = zext i32 %1942 to i64
  store i64 %1943, i64* %RSI.i865, align 8
  store %struct.Memory* %loadMem_43feaa, %struct.Memory** %MEMORY
  %loadMem_43fead = load %struct.Memory*, %struct.Memory** %MEMORY
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 33
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %1946 to i64*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 7
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %RDX.i862 = bitcast %union.anon* %1949 to i64*
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 15
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %RBP.i863 = bitcast %union.anon* %1952 to i64*
  %1953 = load i64, i64* %RBP.i863
  %1954 = sub i64 %1953, 20
  %1955 = load i64, i64* %PC.i861
  %1956 = add i64 %1955, 3
  store i64 %1956, i64* %PC.i861
  %1957 = inttoptr i64 %1954 to i32*
  %1958 = load i32, i32* %1957
  %1959 = zext i32 %1958 to i64
  store i64 %1959, i64* %RDX.i862, align 8
  store %struct.Memory* %loadMem_43fead, %struct.Memory** %MEMORY
  %loadMem_43feb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1961 = getelementptr inbounds %struct.GPR, %struct.GPR* %1960, i32 0, i32 33
  %1962 = getelementptr inbounds %struct.Reg, %struct.Reg* %1961, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %1962 to i64*
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 5
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %1965 to i64*
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1967 = getelementptr inbounds %struct.GPR, %struct.GPR* %1966, i32 0, i32 15
  %1968 = getelementptr inbounds %struct.Reg, %struct.Reg* %1967, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %1968 to i64*
  %1969 = load i64, i64* %RBP.i860
  %1970 = sub i64 %1969, 80
  %1971 = load i64, i64* %PC.i858
  %1972 = add i64 %1971, 4
  store i64 %1972, i64* %PC.i858
  %1973 = inttoptr i64 %1970 to i64*
  %1974 = load i64, i64* %1973
  store i64 %1974, i64* %RCX.i859, align 8
  store %struct.Memory* %loadMem_43feb0, %struct.Memory** %MEMORY
  %loadMem_43feb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 33
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %1977 to i64*
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 1
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %AX.i856 = bitcast %union.anon* %1980 to i16*
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1982 = getelementptr inbounds %struct.GPR, %struct.GPR* %1981, i32 0, i32 15
  %1983 = getelementptr inbounds %struct.Reg, %struct.Reg* %1982, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %1983 to i64*
  %1984 = load i64, i64* %RBP.i857
  %1985 = sub i64 %1984, 34
  %1986 = load i64, i64* %PC.i855
  %1987 = add i64 %1986, 4
  store i64 %1987, i64* %PC.i855
  %1988 = inttoptr i64 %1985 to i16*
  %1989 = load i16, i16* %1988
  store i16 %1989, i16* %AX.i856, align 2
  store %struct.Memory* %loadMem_43feb4, %struct.Memory** %MEMORY
  %loadMem_43feb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 33
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %1992 to i64*
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 19
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %R9D.i853 = bitcast %union.anon* %1995 to i32*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 15
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %1998 to i64*
  %1999 = bitcast i32* %R9D.i853 to i64*
  %2000 = load i64, i64* %RBP.i854
  %2001 = sub i64 %2000, 28
  %2002 = load i64, i64* %PC.i852
  %2003 = add i64 %2002, 4
  store i64 %2003, i64* %PC.i852
  %2004 = inttoptr i64 %2001 to i32*
  %2005 = load i32, i32* %2004
  %2006 = zext i32 %2005 to i64
  store i64 %2006, i64* %1999, align 8
  store %struct.Memory* %loadMem_43feb8, %struct.Memory** %MEMORY
  %loadMem_43febc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2008 = getelementptr inbounds %struct.GPR, %struct.GPR* %2007, i32 0, i32 33
  %2009 = getelementptr inbounds %struct.Reg, %struct.Reg* %2008, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2009 to i64*
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2011 = getelementptr inbounds %struct.GPR, %struct.GPR* %2010, i32 0, i32 21
  %2012 = getelementptr inbounds %struct.Reg, %struct.Reg* %2011, i32 0, i32 0
  %R10D.i850 = bitcast %union.anon* %2012 to i32*
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 15
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %RBP.i851 = bitcast %union.anon* %2015 to i64*
  %2016 = bitcast i32* %R10D.i850 to i64*
  %2017 = load i64, i64* %RBP.i851
  %2018 = sub i64 %2017, 12
  %2019 = load i64, i64* %PC.i849
  %2020 = add i64 %2019, 4
  store i64 %2020, i64* %PC.i849
  %2021 = inttoptr i64 %2018 to i32*
  %2022 = load i32, i32* %2021
  %2023 = zext i32 %2022 to i64
  store i64 %2023, i64* %2016, align 8
  store %struct.Memory* %loadMem_43febc, %struct.Memory** %MEMORY
  %loadMem_43fec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2025 = getelementptr inbounds %struct.GPR, %struct.GPR* %2024, i32 0, i32 33
  %2026 = getelementptr inbounds %struct.Reg, %struct.Reg* %2025, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %2026 to i64*
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 1
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %AX.i847 = bitcast %union.anon* %2029 to i16*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 23
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %R11D.i848 = bitcast %union.anon* %2032 to i32*
  %2033 = bitcast i32* %R11D.i848 to i64*
  %2034 = load i16, i16* %AX.i847
  %2035 = zext i16 %2034 to i64
  %2036 = load i64, i64* %PC.i846
  %2037 = add i64 %2036, 4
  store i64 %2037, i64* %PC.i846
  %2038 = trunc i64 %2035 to i32
  %2039 = shl i32 %2038, 16
  %2040 = ashr exact i32 %2039, 16
  %2041 = zext i32 %2040 to i64
  store i64 %2041, i64* %2033, align 8
  store %struct.Memory* %loadMem_43fec0, %struct.Memory** %MEMORY
  %loadMem_43fec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 33
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2044 to i64*
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2046 = getelementptr inbounds %struct.GPR, %struct.GPR* %2045, i32 0, i32 19
  %2047 = getelementptr inbounds %struct.Reg, %struct.Reg* %2046, i32 0, i32 0
  %R9D.i844 = bitcast %union.anon* %2047 to i32*
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 15
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %2050 to i64*
  %2051 = load i64, i64* %RBP.i845
  %2052 = sub i64 %2051, 108
  %2053 = load i32, i32* %R9D.i844
  %2054 = zext i32 %2053 to i64
  %2055 = load i64, i64* %PC.i843
  %2056 = add i64 %2055, 4
  store i64 %2056, i64* %PC.i843
  %2057 = inttoptr i64 %2052 to i32*
  store i32 %2053, i32* %2057
  store %struct.Memory* %loadMem_43fec4, %struct.Memory** %MEMORY
  %loadMem_43fec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2059 = getelementptr inbounds %struct.GPR, %struct.GPR* %2058, i32 0, i32 33
  %2060 = getelementptr inbounds %struct.Reg, %struct.Reg* %2059, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %2060 to i64*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 19
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %R9D.i841 = bitcast %union.anon* %2063 to i32*
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 23
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %R11D.i842 = bitcast %union.anon* %2066 to i32*
  %2067 = bitcast i32* %R9D.i841 to i64*
  %2068 = load i32, i32* %R11D.i842
  %2069 = zext i32 %2068 to i64
  %2070 = load i64, i64* %PC.i840
  %2071 = add i64 %2070, 3
  store i64 %2071, i64* %PC.i840
  %2072 = and i64 %2069, 4294967295
  store i64 %2072, i64* %2067, align 8
  store %struct.Memory* %loadMem_43fec8, %struct.Memory** %MEMORY
  %loadMem_43fecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 33
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2075 to i64*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 23
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %R11D.i838 = bitcast %union.anon* %2078 to i32*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 15
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %2081 to i64*
  %2082 = bitcast i32* %R11D.i838 to i64*
  %2083 = load i64, i64* %RBP.i839
  %2084 = sub i64 %2083, 108
  %2085 = load i64, i64* %PC.i837
  %2086 = add i64 %2085, 4
  store i64 %2086, i64* %PC.i837
  %2087 = inttoptr i64 %2084 to i32*
  %2088 = load i32, i32* %2087
  %2089 = zext i32 %2088 to i64
  store i64 %2089, i64* %2082, align 8
  store %struct.Memory* %loadMem_43fecb, %struct.Memory** %MEMORY
  %loadMem_43fecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2091 = getelementptr inbounds %struct.GPR, %struct.GPR* %2090, i32 0, i32 33
  %2092 = getelementptr inbounds %struct.Reg, %struct.Reg* %2091, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %2092 to i64*
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2094 = getelementptr inbounds %struct.GPR, %struct.GPR* %2093, i32 0, i32 23
  %2095 = getelementptr inbounds %struct.Reg, %struct.Reg* %2094, i32 0, i32 0
  %R11D.i835 = bitcast %union.anon* %2095 to i32*
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2097 = getelementptr inbounds %struct.GPR, %struct.GPR* %2096, i32 0, i32 13
  %2098 = getelementptr inbounds %struct.Reg, %struct.Reg* %2097, i32 0, i32 0
  %RSP.i836 = bitcast %union.anon* %2098 to i64*
  %2099 = load i64, i64* %RSP.i836
  %2100 = load i32, i32* %R11D.i835
  %2101 = zext i32 %2100 to i64
  %2102 = load i64, i64* %PC.i834
  %2103 = add i64 %2102, 4
  store i64 %2103, i64* %PC.i834
  %2104 = inttoptr i64 %2099 to i32*
  store i32 %2100, i32* %2104
  store %struct.Memory* %loadMem_43fecf, %struct.Memory** %MEMORY
  %loadMem_43fed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2106 = getelementptr inbounds %struct.GPR, %struct.GPR* %2105, i32 0, i32 33
  %2107 = getelementptr inbounds %struct.Reg, %struct.Reg* %2106, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %2107 to i64*
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2109 = getelementptr inbounds %struct.GPR, %struct.GPR* %2108, i32 0, i32 21
  %2110 = getelementptr inbounds %struct.Reg, %struct.Reg* %2109, i32 0, i32 0
  %R10D.i832 = bitcast %union.anon* %2110 to i32*
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2112 = getelementptr inbounds %struct.GPR, %struct.GPR* %2111, i32 0, i32 13
  %2113 = getelementptr inbounds %struct.Reg, %struct.Reg* %2112, i32 0, i32 0
  %RSP.i833 = bitcast %union.anon* %2113 to i64*
  %2114 = load i64, i64* %RSP.i833
  %2115 = add i64 %2114, 8
  %2116 = load i32, i32* %R10D.i832
  %2117 = zext i32 %2116 to i64
  %2118 = load i64, i64* %PC.i831
  %2119 = add i64 %2118, 5
  store i64 %2119, i64* %PC.i831
  %2120 = inttoptr i64 %2115 to i32*
  store i32 %2116, i32* %2120
  store %struct.Memory* %loadMem_43fed3, %struct.Memory** %MEMORY
  %loadMem1_43fed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2122 = getelementptr inbounds %struct.GPR, %struct.GPR* %2121, i32 0, i32 33
  %2123 = getelementptr inbounds %struct.Reg, %struct.Reg* %2122, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %2123 to i64*
  %2124 = load i64, i64* %PC.i830
  %2125 = add i64 %2124, 1624
  %2126 = load i64, i64* %PC.i830
  %2127 = add i64 %2126, 5
  %2128 = load i64, i64* %PC.i830
  %2129 = add i64 %2128, 5
  store i64 %2129, i64* %PC.i830
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2131 = load i64, i64* %2130, align 8
  %2132 = add i64 %2131, -8
  %2133 = inttoptr i64 %2132 to i64*
  store i64 %2127, i64* %2133
  store i64 %2132, i64* %2130, align 8
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2125, i64* %2134, align 8
  store %struct.Memory* %loadMem1_43fed8, %struct.Memory** %MEMORY
  %loadMem2_43fed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fed8 = load i64, i64* %3
  %call2_43fed8 = call %struct.Memory* @sub_440530.OneComponentChromaPrediction4x4(%struct.State* %0, i64 %loadPC_43fed8, %struct.Memory* %loadMem2_43fed8)
  store %struct.Memory* %call2_43fed8, %struct.Memory** %MEMORY
  br label %block_.L_43fedd

block_.L_43fedd:                                  ; preds = %block_.L_43fe9d, %block_43fe93
  %loadMem_43fedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 15
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %2140 to i64*
  %2141 = load i64, i64* %RBP.i829
  %2142 = sub i64 %2141, 24
  %2143 = load i64, i64* %PC.i828
  %2144 = add i64 %2143, 4
  store i64 %2144, i64* %PC.i828
  %2145 = inttoptr i64 %2142 to i32*
  %2146 = load i32, i32* %2145
  %2147 = sub i32 %2146, 1
  %2148 = icmp ult i32 %2146, 1
  %2149 = zext i1 %2148 to i8
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2149, i8* %2150, align 1
  %2151 = and i32 %2147, 255
  %2152 = call i32 @llvm.ctpop.i32(i32 %2151)
  %2153 = trunc i32 %2152 to i8
  %2154 = and i8 %2153, 1
  %2155 = xor i8 %2154, 1
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2155, i8* %2156, align 1
  %2157 = xor i32 %2146, 1
  %2158 = xor i32 %2157, %2147
  %2159 = lshr i32 %2158, 4
  %2160 = trunc i32 %2159 to i8
  %2161 = and i8 %2160, 1
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2161, i8* %2162, align 1
  %2163 = icmp eq i32 %2147, 0
  %2164 = zext i1 %2163 to i8
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2164, i8* %2165, align 1
  %2166 = lshr i32 %2147, 31
  %2167 = trunc i32 %2166 to i8
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2167, i8* %2168, align 1
  %2169 = lshr i32 %2146, 31
  %2170 = xor i32 %2166, %2169
  %2171 = add i32 %2170, %2169
  %2172 = icmp eq i32 %2171, 2
  %2173 = zext i1 %2172 to i8
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2173, i8* %2174, align 1
  store %struct.Memory* %loadMem_43fedd, %struct.Memory** %MEMORY
  %loadMem_43fee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %2177 to i64*
  %2178 = load i64, i64* %PC.i827
  %2179 = add i64 %2178, 16
  %2180 = load i64, i64* %PC.i827
  %2181 = add i64 %2180, 6
  %2182 = load i64, i64* %PC.i827
  %2183 = add i64 %2182, 6
  store i64 %2183, i64* %PC.i827
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2185 = load i8, i8* %2184, align 1
  store i8 %2185, i8* %BRANCH_TAKEN, align 1
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2187 = icmp ne i8 %2185, 0
  %2188 = select i1 %2187, i64 %2179, i64 %2181
  store i64 %2188, i64* %2186, align 8
  store %struct.Memory* %loadMem_43fee1, %struct.Memory** %MEMORY
  %loadBr_43fee1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fee1 = icmp eq i8 %loadBr_43fee1, 1
  br i1 %cmpBr_43fee1, label %block_.L_43fef1, label %block_43fee7

block_43fee7:                                     ; preds = %block_.L_43fedd
  %loadMem_43fee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2190 = getelementptr inbounds %struct.GPR, %struct.GPR* %2189, i32 0, i32 33
  %2191 = getelementptr inbounds %struct.Reg, %struct.Reg* %2190, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %2191 to i64*
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2193 = getelementptr inbounds %struct.GPR, %struct.GPR* %2192, i32 0, i32 15
  %2194 = getelementptr inbounds %struct.Reg, %struct.Reg* %2193, i32 0, i32 0
  %RBP.i826 = bitcast %union.anon* %2194 to i64*
  %2195 = load i64, i64* %RBP.i826
  %2196 = sub i64 %2195, 24
  %2197 = load i64, i64* %PC.i825
  %2198 = add i64 %2197, 4
  store i64 %2198, i64* %PC.i825
  %2199 = inttoptr i64 %2196 to i32*
  %2200 = load i32, i32* %2199
  %2201 = sub i32 %2200, 2
  %2202 = icmp ult i32 %2200, 2
  %2203 = zext i1 %2202 to i8
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2203, i8* %2204, align 1
  %2205 = and i32 %2201, 255
  %2206 = call i32 @llvm.ctpop.i32(i32 %2205)
  %2207 = trunc i32 %2206 to i8
  %2208 = and i8 %2207, 1
  %2209 = xor i8 %2208, 1
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2209, i8* %2210, align 1
  %2211 = xor i32 %2200, 2
  %2212 = xor i32 %2211, %2201
  %2213 = lshr i32 %2212, 4
  %2214 = trunc i32 %2213 to i8
  %2215 = and i8 %2214, 1
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2215, i8* %2216, align 1
  %2217 = icmp eq i32 %2201, 0
  %2218 = zext i1 %2217 to i8
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2218, i8* %2219, align 1
  %2220 = lshr i32 %2201, 31
  %2221 = trunc i32 %2220 to i8
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2221, i8* %2222, align 1
  %2223 = lshr i32 %2200, 31
  %2224 = xor i32 %2220, %2223
  %2225 = add i32 %2224, %2223
  %2226 = icmp eq i32 %2225, 2
  %2227 = zext i1 %2226 to i8
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2227, i8* %2228, align 1
  store %struct.Memory* %loadMem_43fee7, %struct.Memory** %MEMORY
  %loadMem_43feeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2230 = getelementptr inbounds %struct.GPR, %struct.GPR* %2229, i32 0, i32 33
  %2231 = getelementptr inbounds %struct.Reg, %struct.Reg* %2230, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %2231 to i64*
  %2232 = load i64, i64* %PC.i824
  %2233 = add i64 %2232, 73
  %2234 = load i64, i64* %PC.i824
  %2235 = add i64 %2234, 6
  %2236 = load i64, i64* %PC.i824
  %2237 = add i64 %2236, 6
  store i64 %2237, i64* %PC.i824
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2239 = load i8, i8* %2238, align 1
  %2240 = icmp eq i8 %2239, 0
  %2241 = zext i1 %2240 to i8
  store i8 %2241, i8* %BRANCH_TAKEN, align 1
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2243 = select i1 %2240, i64 %2233, i64 %2235
  store i64 %2243, i64* %2242, align 8
  store %struct.Memory* %loadMem_43feeb, %struct.Memory** %MEMORY
  %loadBr_43feeb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43feeb = icmp eq i8 %loadBr_43feeb, 1
  br i1 %cmpBr_43feeb, label %block_.L_43ff34, label %block_.L_43fef1

block_.L_43fef1:                                  ; preds = %block_43fee7, %block_.L_43fedd
  %loadMem_43fef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2245 = getelementptr inbounds %struct.GPR, %struct.GPR* %2244, i32 0, i32 33
  %2246 = getelementptr inbounds %struct.Reg, %struct.Reg* %2245, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %2246 to i64*
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 11
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %RDI.i823 = bitcast %union.anon* %2249 to i64*
  %2250 = load i64, i64* %PC.i822
  %2251 = add i64 %2250, 10
  store i64 %2251, i64* %PC.i822
  store i64 ptrtoint (%G__0x6cc2f0_type* @G__0x6cc2f0 to i64), i64* %RDI.i823, align 8
  store %struct.Memory* %loadMem_43fef1, %struct.Memory** %MEMORY
  %loadMem_43fefb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 33
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %2254 to i64*
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 17
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %R8D.i821 = bitcast %union.anon* %2257 to i32*
  %2258 = bitcast i32* %R8D.i821 to i64*
  %2259 = load i64, i64* %PC.i820
  %2260 = add i64 %2259, 6
  store i64 %2260, i64* %PC.i820
  store i64 1, i64* %2258, align 8
  store %struct.Memory* %loadMem_43fefb, %struct.Memory** %MEMORY
  %loadMem_43ff01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2262 = getelementptr inbounds %struct.GPR, %struct.GPR* %2261, i32 0, i32 33
  %2263 = getelementptr inbounds %struct.Reg, %struct.Reg* %2262, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %2263 to i64*
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2265 = getelementptr inbounds %struct.GPR, %struct.GPR* %2264, i32 0, i32 9
  %2266 = getelementptr inbounds %struct.Reg, %struct.Reg* %2265, i32 0, i32 0
  %RSI.i818 = bitcast %union.anon* %2266 to i64*
  %2267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2268 = getelementptr inbounds %struct.GPR, %struct.GPR* %2267, i32 0, i32 15
  %2269 = getelementptr inbounds %struct.Reg, %struct.Reg* %2268, i32 0, i32 0
  %RBP.i819 = bitcast %union.anon* %2269 to i64*
  %2270 = load i64, i64* %RBP.i819
  %2271 = sub i64 %2270, 16
  %2272 = load i64, i64* %PC.i817
  %2273 = add i64 %2272, 3
  store i64 %2273, i64* %PC.i817
  %2274 = inttoptr i64 %2271 to i32*
  %2275 = load i32, i32* %2274
  %2276 = zext i32 %2275 to i64
  store i64 %2276, i64* %RSI.i818, align 8
  store %struct.Memory* %loadMem_43ff01, %struct.Memory** %MEMORY
  %loadMem_43ff04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 33
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %2279 to i64*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 7
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %RDX.i815 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 15
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RBP.i816 = bitcast %union.anon* %2285 to i64*
  %2286 = load i64, i64* %RBP.i816
  %2287 = sub i64 %2286, 20
  %2288 = load i64, i64* %PC.i814
  %2289 = add i64 %2288, 3
  store i64 %2289, i64* %PC.i814
  %2290 = inttoptr i64 %2287 to i32*
  %2291 = load i32, i32* %2290
  %2292 = zext i32 %2291 to i64
  store i64 %2292, i64* %RDX.i815, align 8
  store %struct.Memory* %loadMem_43ff04, %struct.Memory** %MEMORY
  %loadMem_43ff07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 33
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 5
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RCX.i812 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 15
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %2301 to i64*
  %2302 = load i64, i64* %RBP.i813
  %2303 = sub i64 %2302, 80
  %2304 = load i64, i64* %PC.i811
  %2305 = add i64 %2304, 4
  store i64 %2305, i64* %PC.i811
  %2306 = inttoptr i64 %2303 to i64*
  %2307 = load i64, i64* %2306
  store i64 %2307, i64* %RCX.i812, align 8
  store %struct.Memory* %loadMem_43ff07, %struct.Memory** %MEMORY
  %loadMem_43ff0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 33
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 1
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %AX.i809 = bitcast %union.anon* %2313 to i16*
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2315 = getelementptr inbounds %struct.GPR, %struct.GPR* %2314, i32 0, i32 15
  %2316 = getelementptr inbounds %struct.Reg, %struct.Reg* %2315, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %2316 to i64*
  %2317 = load i64, i64* %RBP.i810
  %2318 = sub i64 %2317, 36
  %2319 = load i64, i64* %PC.i808
  %2320 = add i64 %2319, 4
  store i64 %2320, i64* %PC.i808
  %2321 = inttoptr i64 %2318 to i16*
  %2322 = load i16, i16* %2321
  store i16 %2322, i16* %AX.i809, align 2
  store %struct.Memory* %loadMem_43ff0b, %struct.Memory** %MEMORY
  %loadMem_43ff0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 33
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %2325 to i64*
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 19
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %R9D.i806 = bitcast %union.anon* %2328 to i32*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 15
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %2331 to i64*
  %2332 = bitcast i32* %R9D.i806 to i64*
  %2333 = load i64, i64* %RBP.i807
  %2334 = sub i64 %2333, 32
  %2335 = load i64, i64* %PC.i805
  %2336 = add i64 %2335, 4
  store i64 %2336, i64* %PC.i805
  %2337 = inttoptr i64 %2334 to i32*
  %2338 = load i32, i32* %2337
  %2339 = zext i32 %2338 to i64
  store i64 %2339, i64* %2332, align 8
  store %struct.Memory* %loadMem_43ff0f, %struct.Memory** %MEMORY
  %loadMem_43ff13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 33
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %2342 to i64*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 21
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %R10D.i803 = bitcast %union.anon* %2345 to i32*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 15
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %2348 to i64*
  %2349 = bitcast i32* %R10D.i803 to i64*
  %2350 = load i64, i64* %RBP.i804
  %2351 = sub i64 %2350, 12
  %2352 = load i64, i64* %PC.i802
  %2353 = add i64 %2352, 4
  store i64 %2353, i64* %PC.i802
  %2354 = inttoptr i64 %2351 to i32*
  %2355 = load i32, i32* %2354
  %2356 = zext i32 %2355 to i64
  store i64 %2356, i64* %2349, align 8
  store %struct.Memory* %loadMem_43ff13, %struct.Memory** %MEMORY
  %loadMem_43ff17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2358 = getelementptr inbounds %struct.GPR, %struct.GPR* %2357, i32 0, i32 33
  %2359 = getelementptr inbounds %struct.Reg, %struct.Reg* %2358, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %2359 to i64*
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 1
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %AX.i800 = bitcast %union.anon* %2362 to i16*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 23
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %R11D.i801 = bitcast %union.anon* %2365 to i32*
  %2366 = bitcast i32* %R11D.i801 to i64*
  %2367 = load i16, i16* %AX.i800
  %2368 = zext i16 %2367 to i64
  %2369 = load i64, i64* %PC.i799
  %2370 = add i64 %2369, 4
  store i64 %2370, i64* %PC.i799
  %2371 = trunc i64 %2368 to i32
  %2372 = shl i32 %2371, 16
  %2373 = ashr exact i32 %2372, 16
  %2374 = zext i32 %2373 to i64
  store i64 %2374, i64* %2366, align 8
  store %struct.Memory* %loadMem_43ff17, %struct.Memory** %MEMORY
  %loadMem_43ff1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2376 = getelementptr inbounds %struct.GPR, %struct.GPR* %2375, i32 0, i32 33
  %2377 = getelementptr inbounds %struct.Reg, %struct.Reg* %2376, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %2377 to i64*
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2379 = getelementptr inbounds %struct.GPR, %struct.GPR* %2378, i32 0, i32 19
  %2380 = getelementptr inbounds %struct.Reg, %struct.Reg* %2379, i32 0, i32 0
  %R9D.i797 = bitcast %union.anon* %2380 to i32*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 15
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %2383 to i64*
  %2384 = load i64, i64* %RBP.i798
  %2385 = sub i64 %2384, 112
  %2386 = load i32, i32* %R9D.i797
  %2387 = zext i32 %2386 to i64
  %2388 = load i64, i64* %PC.i796
  %2389 = add i64 %2388, 4
  store i64 %2389, i64* %PC.i796
  %2390 = inttoptr i64 %2385 to i32*
  store i32 %2386, i32* %2390
  store %struct.Memory* %loadMem_43ff1b, %struct.Memory** %MEMORY
  %loadMem_43ff1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2392 = getelementptr inbounds %struct.GPR, %struct.GPR* %2391, i32 0, i32 33
  %2393 = getelementptr inbounds %struct.Reg, %struct.Reg* %2392, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %2393 to i64*
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2395 = getelementptr inbounds %struct.GPR, %struct.GPR* %2394, i32 0, i32 19
  %2396 = getelementptr inbounds %struct.Reg, %struct.Reg* %2395, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %2396 to i32*
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2398 = getelementptr inbounds %struct.GPR, %struct.GPR* %2397, i32 0, i32 23
  %2399 = getelementptr inbounds %struct.Reg, %struct.Reg* %2398, i32 0, i32 0
  %R11D.i795 = bitcast %union.anon* %2399 to i32*
  %2400 = bitcast i32* %R9D.i to i64*
  %2401 = load i32, i32* %R11D.i795
  %2402 = zext i32 %2401 to i64
  %2403 = load i64, i64* %PC.i794
  %2404 = add i64 %2403, 3
  store i64 %2404, i64* %PC.i794
  %2405 = and i64 %2402, 4294967295
  store i64 %2405, i64* %2400, align 8
  store %struct.Memory* %loadMem_43ff1f, %struct.Memory** %MEMORY
  %loadMem_43ff22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2407 = getelementptr inbounds %struct.GPR, %struct.GPR* %2406, i32 0, i32 33
  %2408 = getelementptr inbounds %struct.Reg, %struct.Reg* %2407, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %2408 to i64*
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2410 = getelementptr inbounds %struct.GPR, %struct.GPR* %2409, i32 0, i32 23
  %2411 = getelementptr inbounds %struct.Reg, %struct.Reg* %2410, i32 0, i32 0
  %R11D.i792 = bitcast %union.anon* %2411 to i32*
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 15
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %2414 to i64*
  %2415 = bitcast i32* %R11D.i792 to i64*
  %2416 = load i64, i64* %RBP.i793
  %2417 = sub i64 %2416, 112
  %2418 = load i64, i64* %PC.i791
  %2419 = add i64 %2418, 4
  store i64 %2419, i64* %PC.i791
  %2420 = inttoptr i64 %2417 to i32*
  %2421 = load i32, i32* %2420
  %2422 = zext i32 %2421 to i64
  store i64 %2422, i64* %2415, align 8
  store %struct.Memory* %loadMem_43ff22, %struct.Memory** %MEMORY
  %loadMem_43ff26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 33
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %2425 to i64*
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2427 = getelementptr inbounds %struct.GPR, %struct.GPR* %2426, i32 0, i32 23
  %2428 = getelementptr inbounds %struct.Reg, %struct.Reg* %2427, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %2428 to i32*
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 13
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %RSP.i790 = bitcast %union.anon* %2431 to i64*
  %2432 = load i64, i64* %RSP.i790
  %2433 = load i32, i32* %R11D.i
  %2434 = zext i32 %2433 to i64
  %2435 = load i64, i64* %PC.i789
  %2436 = add i64 %2435, 4
  store i64 %2436, i64* %PC.i789
  %2437 = inttoptr i64 %2432 to i32*
  store i32 %2433, i32* %2437
  store %struct.Memory* %loadMem_43ff26, %struct.Memory** %MEMORY
  %loadMem_43ff2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2439 = getelementptr inbounds %struct.GPR, %struct.GPR* %2438, i32 0, i32 33
  %2440 = getelementptr inbounds %struct.Reg, %struct.Reg* %2439, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %2440 to i64*
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 21
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %2443 to i32*
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 13
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %RSP.i788 = bitcast %union.anon* %2446 to i64*
  %2447 = load i64, i64* %RSP.i788
  %2448 = add i64 %2447, 8
  %2449 = load i32, i32* %R10D.i
  %2450 = zext i32 %2449 to i64
  %2451 = load i64, i64* %PC.i787
  %2452 = add i64 %2451, 5
  store i64 %2452, i64* %PC.i787
  %2453 = inttoptr i64 %2448 to i32*
  store i32 %2449, i32* %2453
  store %struct.Memory* %loadMem_43ff2a, %struct.Memory** %MEMORY
  %loadMem1_43ff2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2455 = getelementptr inbounds %struct.GPR, %struct.GPR* %2454, i32 0, i32 33
  %2456 = getelementptr inbounds %struct.Reg, %struct.Reg* %2455, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %2456 to i64*
  %2457 = load i64, i64* %PC.i786
  %2458 = add i64 %2457, 1537
  %2459 = load i64, i64* %PC.i786
  %2460 = add i64 %2459, 5
  %2461 = load i64, i64* %PC.i786
  %2462 = add i64 %2461, 5
  store i64 %2462, i64* %PC.i786
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2464 = load i64, i64* %2463, align 8
  %2465 = add i64 %2464, -8
  %2466 = inttoptr i64 %2465 to i64*
  store i64 %2460, i64* %2466
  store i64 %2465, i64* %2463, align 8
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2458, i64* %2467, align 8
  store %struct.Memory* %loadMem1_43ff2f, %struct.Memory** %MEMORY
  %loadMem2_43ff2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ff2f = load i64, i64* %3
  %call2_43ff2f = call %struct.Memory* @sub_440530.OneComponentChromaPrediction4x4(%struct.State* %0, i64 %loadPC_43ff2f, %struct.Memory* %loadMem2_43ff2f)
  store %struct.Memory* %call2_43ff2f, %struct.Memory** %MEMORY
  br label %block_.L_43ff34

block_.L_43ff34:                                  ; preds = %block_.L_43fef1, %block_43fee7
  %loadMem_43ff34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2469 = getelementptr inbounds %struct.GPR, %struct.GPR* %2468, i32 0, i32 33
  %2470 = getelementptr inbounds %struct.Reg, %struct.Reg* %2469, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %2470 to i64*
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 15
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %2473 to i64*
  %2474 = load i64, i64* %RBP.i785
  %2475 = sub i64 %2474, 92
  %2476 = load i64, i64* %PC.i784
  %2477 = add i64 %2476, 4
  store i64 %2477, i64* %PC.i784
  %2478 = inttoptr i64 %2475 to i32*
  %2479 = load i32, i32* %2478
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2480, align 1
  %2481 = and i32 %2479, 255
  %2482 = call i32 @llvm.ctpop.i32(i32 %2481)
  %2483 = trunc i32 %2482 to i8
  %2484 = and i8 %2483, 1
  %2485 = xor i8 %2484, 1
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2485, i8* %2486, align 1
  %2487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2487, align 1
  %2488 = icmp eq i32 %2479, 0
  %2489 = zext i1 %2488 to i8
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2489, i8* %2490, align 1
  %2491 = lshr i32 %2479, 31
  %2492 = trunc i32 %2491 to i8
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2492, i8* %2493, align 1
  %2494 = lshr i32 %2479, 31
  %2495 = xor i32 %2491, %2494
  %2496 = add i32 %2495, %2494
  %2497 = icmp eq i32 %2496, 2
  %2498 = zext i1 %2497 to i8
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2498, i8* %2499, align 1
  store %struct.Memory* %loadMem_43ff34, %struct.Memory** %MEMORY
  %loadMem_43ff38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2501 = getelementptr inbounds %struct.GPR, %struct.GPR* %2500, i32 0, i32 33
  %2502 = getelementptr inbounds %struct.Reg, %struct.Reg* %2501, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %2502 to i64*
  %2503 = load i64, i64* %PC.i783
  %2504 = add i64 %2503, 816
  %2505 = load i64, i64* %PC.i783
  %2506 = add i64 %2505, 6
  %2507 = load i64, i64* %PC.i783
  %2508 = add i64 %2507, 6
  store i64 %2508, i64* %PC.i783
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2510 = load i8, i8* %2509, align 1
  store i8 %2510, i8* %BRANCH_TAKEN, align 1
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2512 = icmp ne i8 %2510, 0
  %2513 = select i1 %2512, i64 %2504, i64 %2506
  store i64 %2513, i64* %2511, align 8
  store %struct.Memory* %loadMem_43ff38, %struct.Memory** %MEMORY
  %loadBr_43ff38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff38 = icmp eq i8 %loadBr_43ff38, 1
  br i1 %cmpBr_43ff38, label %block_.L_440268, label %block_43ff3e

block_43ff3e:                                     ; preds = %block_.L_43ff34
  %loadMem_43ff3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 33
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %2516 to i64*
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2518 = getelementptr inbounds %struct.GPR, %struct.GPR* %2517, i32 0, i32 15
  %2519 = getelementptr inbounds %struct.Reg, %struct.Reg* %2518, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %2519 to i64*
  %2520 = load i64, i64* %RBP.i782
  %2521 = sub i64 %2520, 24
  %2522 = load i64, i64* %PC.i781
  %2523 = add i64 %2522, 4
  store i64 %2523, i64* %PC.i781
  %2524 = inttoptr i64 %2521 to i32*
  %2525 = load i32, i32* %2524
  %2526 = sub i32 %2525, 2
  %2527 = icmp ult i32 %2525, 2
  %2528 = zext i1 %2527 to i8
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2528, i8* %2529, align 1
  %2530 = and i32 %2526, 255
  %2531 = call i32 @llvm.ctpop.i32(i32 %2530)
  %2532 = trunc i32 %2531 to i8
  %2533 = and i8 %2532, 1
  %2534 = xor i8 %2533, 1
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2534, i8* %2535, align 1
  %2536 = xor i32 %2525, 2
  %2537 = xor i32 %2536, %2526
  %2538 = lshr i32 %2537, 4
  %2539 = trunc i32 %2538 to i8
  %2540 = and i8 %2539, 1
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2540, i8* %2541, align 1
  %2542 = icmp eq i32 %2526, 0
  %2543 = zext i1 %2542 to i8
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2543, i8* %2544, align 1
  %2545 = lshr i32 %2526, 31
  %2546 = trunc i32 %2545 to i8
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2546, i8* %2547, align 1
  %2548 = lshr i32 %2525, 31
  %2549 = xor i32 %2545, %2548
  %2550 = add i32 %2549, %2548
  %2551 = icmp eq i32 %2550, 2
  %2552 = zext i1 %2551 to i8
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2552, i8* %2553, align 1
  store %struct.Memory* %loadMem_43ff3e, %struct.Memory** %MEMORY
  %loadMem_43ff42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 33
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %2556 to i64*
  %2557 = load i64, i64* %PC.i780
  %2558 = add i64 %2557, 348
  %2559 = load i64, i64* %PC.i780
  %2560 = add i64 %2559, 6
  %2561 = load i64, i64* %PC.i780
  %2562 = add i64 %2561, 6
  store i64 %2562, i64* %PC.i780
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2564 = load i8, i8* %2563, align 1
  %2565 = icmp eq i8 %2564, 0
  %2566 = zext i1 %2565 to i8
  store i8 %2566, i8* %BRANCH_TAKEN, align 1
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2568 = select i1 %2565, i64 %2558, i64 %2560
  store i64 %2568, i64* %2567, align 8
  store %struct.Memory* %loadMem_43ff42, %struct.Memory** %MEMORY
  %loadBr_43ff42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff42 = icmp eq i8 %loadBr_43ff42, 1
  br i1 %cmpBr_43ff42, label %block_.L_44009e, label %block_43ff48

block_43ff48:                                     ; preds = %block_43ff3e
  %loadMem_43ff48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 33
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %2571 to i64*
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2573 = getelementptr inbounds %struct.GPR, %struct.GPR* %2572, i32 0, i32 1
  %2574 = getelementptr inbounds %struct.Reg, %struct.Reg* %2573, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %2574 to i64*
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 15
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %RBP.i779 = bitcast %union.anon* %2577 to i64*
  %2578 = load i64, i64* %RBP.i779
  %2579 = sub i64 %2578, 20
  %2580 = load i64, i64* %PC.i777
  %2581 = add i64 %2580, 3
  store i64 %2581, i64* %PC.i777
  %2582 = inttoptr i64 %2579 to i32*
  %2583 = load i32, i32* %2582
  %2584 = zext i32 %2583 to i64
  store i64 %2584, i64* %RAX.i778, align 8
  store %struct.Memory* %loadMem_43ff48, %struct.Memory** %MEMORY
  %loadMem_43ff4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2586 = getelementptr inbounds %struct.GPR, %struct.GPR* %2585, i32 0, i32 33
  %2587 = getelementptr inbounds %struct.Reg, %struct.Reg* %2586, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %2587 to i64*
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2589 = getelementptr inbounds %struct.GPR, %struct.GPR* %2588, i32 0, i32 1
  %2590 = getelementptr inbounds %struct.Reg, %struct.Reg* %2589, i32 0, i32 0
  %EAX.i775 = bitcast %union.anon* %2590 to i32*
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2592 = getelementptr inbounds %struct.GPR, %struct.GPR* %2591, i32 0, i32 15
  %2593 = getelementptr inbounds %struct.Reg, %struct.Reg* %2592, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %2593 to i64*
  %2594 = load i64, i64* %RBP.i776
  %2595 = sub i64 %2594, 44
  %2596 = load i32, i32* %EAX.i775
  %2597 = zext i32 %2596 to i64
  %2598 = load i64, i64* %PC.i774
  %2599 = add i64 %2598, 3
  store i64 %2599, i64* %PC.i774
  %2600 = inttoptr i64 %2595 to i32*
  store i32 %2596, i32* %2600
  store %struct.Memory* %loadMem_43ff4b, %struct.Memory** %MEMORY
  br label %block_.L_43ff4e

block_.L_43ff4e:                                  ; preds = %block_.L_44008b, %block_43ff48
  %loadMem_43ff4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2602 = getelementptr inbounds %struct.GPR, %struct.GPR* %2601, i32 0, i32 33
  %2603 = getelementptr inbounds %struct.Reg, %struct.Reg* %2602, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %2603 to i64*
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2605 = getelementptr inbounds %struct.GPR, %struct.GPR* %2604, i32 0, i32 1
  %2606 = getelementptr inbounds %struct.Reg, %struct.Reg* %2605, i32 0, i32 0
  %RAX.i772 = bitcast %union.anon* %2606 to i64*
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2608 = getelementptr inbounds %struct.GPR, %struct.GPR* %2607, i32 0, i32 15
  %2609 = getelementptr inbounds %struct.Reg, %struct.Reg* %2608, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %2609 to i64*
  %2610 = load i64, i64* %RBP.i773
  %2611 = sub i64 %2610, 44
  %2612 = load i64, i64* %PC.i771
  %2613 = add i64 %2612, 3
  store i64 %2613, i64* %PC.i771
  %2614 = inttoptr i64 %2611 to i32*
  %2615 = load i32, i32* %2614
  %2616 = zext i32 %2615 to i64
  store i64 %2616, i64* %RAX.i772, align 8
  store %struct.Memory* %loadMem_43ff4e, %struct.Memory** %MEMORY
  %loadMem_43ff51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 33
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %2619 to i64*
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2621 = getelementptr inbounds %struct.GPR, %struct.GPR* %2620, i32 0, i32 1
  %2622 = getelementptr inbounds %struct.Reg, %struct.Reg* %2621, i32 0, i32 0
  %EAX.i769 = bitcast %union.anon* %2622 to i32*
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2624 = getelementptr inbounds %struct.GPR, %struct.GPR* %2623, i32 0, i32 15
  %2625 = getelementptr inbounds %struct.Reg, %struct.Reg* %2624, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %2625 to i64*
  %2626 = load i32, i32* %EAX.i769
  %2627 = zext i32 %2626 to i64
  %2628 = load i64, i64* %RBP.i770
  %2629 = sub i64 %2628, 52
  %2630 = load i64, i64* %PC.i768
  %2631 = add i64 %2630, 3
  store i64 %2631, i64* %PC.i768
  %2632 = inttoptr i64 %2629 to i32*
  %2633 = load i32, i32* %2632
  %2634 = sub i32 %2626, %2633
  %2635 = icmp ult i32 %2626, %2633
  %2636 = zext i1 %2635 to i8
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2636, i8* %2637, align 1
  %2638 = and i32 %2634, 255
  %2639 = call i32 @llvm.ctpop.i32(i32 %2638)
  %2640 = trunc i32 %2639 to i8
  %2641 = and i8 %2640, 1
  %2642 = xor i8 %2641, 1
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2642, i8* %2643, align 1
  %2644 = xor i32 %2633, %2626
  %2645 = xor i32 %2644, %2634
  %2646 = lshr i32 %2645, 4
  %2647 = trunc i32 %2646 to i8
  %2648 = and i8 %2647, 1
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2648, i8* %2649, align 1
  %2650 = icmp eq i32 %2634, 0
  %2651 = zext i1 %2650 to i8
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2651, i8* %2652, align 1
  %2653 = lshr i32 %2634, 31
  %2654 = trunc i32 %2653 to i8
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2654, i8* %2655, align 1
  %2656 = lshr i32 %2626, 31
  %2657 = lshr i32 %2633, 31
  %2658 = xor i32 %2657, %2656
  %2659 = xor i32 %2653, %2656
  %2660 = add i32 %2659, %2658
  %2661 = icmp eq i32 %2660, 2
  %2662 = zext i1 %2661 to i8
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2662, i8* %2663, align 1
  store %struct.Memory* %loadMem_43ff51, %struct.Memory** %MEMORY
  %loadMem_43ff54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2665 = getelementptr inbounds %struct.GPR, %struct.GPR* %2664, i32 0, i32 33
  %2666 = getelementptr inbounds %struct.Reg, %struct.Reg* %2665, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %2666 to i64*
  %2667 = load i64, i64* %PC.i767
  %2668 = add i64 %2667, 325
  %2669 = load i64, i64* %PC.i767
  %2670 = add i64 %2669, 6
  %2671 = load i64, i64* %PC.i767
  %2672 = add i64 %2671, 6
  store i64 %2672, i64* %PC.i767
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2674 = load i8, i8* %2673, align 1
  %2675 = icmp ne i8 %2674, 0
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2677 = load i8, i8* %2676, align 1
  %2678 = icmp ne i8 %2677, 0
  %2679 = xor i1 %2675, %2678
  %2680 = xor i1 %2679, true
  %2681 = zext i1 %2680 to i8
  store i8 %2681, i8* %BRANCH_TAKEN, align 1
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2683 = select i1 %2679, i64 %2670, i64 %2668
  store i64 %2683, i64* %2682, align 8
  store %struct.Memory* %loadMem_43ff54, %struct.Memory** %MEMORY
  %loadBr_43ff54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff54 = icmp eq i8 %loadBr_43ff54, 1
  br i1 %cmpBr_43ff54, label %block_.L_440099, label %block_43ff5a

block_43ff5a:                                     ; preds = %block_.L_43ff4e
  %loadMem_43ff5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 33
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %2686 to i64*
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 1
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %2689 to i64*
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 15
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %2692 to i64*
  %2693 = load i64, i64* %RBP.i766
  %2694 = sub i64 %2693, 16
  %2695 = load i64, i64* %PC.i764
  %2696 = add i64 %2695, 3
  store i64 %2696, i64* %PC.i764
  %2697 = inttoptr i64 %2694 to i32*
  %2698 = load i32, i32* %2697
  %2699 = zext i32 %2698 to i64
  store i64 %2699, i64* %RAX.i765, align 8
  store %struct.Memory* %loadMem_43ff5a, %struct.Memory** %MEMORY
  %loadMem_43ff5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2701 = getelementptr inbounds %struct.GPR, %struct.GPR* %2700, i32 0, i32 33
  %2702 = getelementptr inbounds %struct.Reg, %struct.Reg* %2701, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %2702 to i64*
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2704 = getelementptr inbounds %struct.GPR, %struct.GPR* %2703, i32 0, i32 1
  %2705 = getelementptr inbounds %struct.Reg, %struct.Reg* %2704, i32 0, i32 0
  %EAX.i762 = bitcast %union.anon* %2705 to i32*
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2707 = getelementptr inbounds %struct.GPR, %struct.GPR* %2706, i32 0, i32 15
  %2708 = getelementptr inbounds %struct.Reg, %struct.Reg* %2707, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %2708 to i64*
  %2709 = load i64, i64* %RBP.i763
  %2710 = sub i64 %2709, 40
  %2711 = load i32, i32* %EAX.i762
  %2712 = zext i32 %2711 to i64
  %2713 = load i64, i64* %PC.i761
  %2714 = add i64 %2713, 3
  store i64 %2714, i64* %PC.i761
  %2715 = inttoptr i64 %2710 to i32*
  store i32 %2711, i32* %2715
  store %struct.Memory* %loadMem_43ff5d, %struct.Memory** %MEMORY
  br label %block_.L_43ff60

block_.L_43ff60:                                  ; preds = %routine_sarl__cl___edx.exit652, %block_43ff5a
  %loadMem_43ff60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2717 = getelementptr inbounds %struct.GPR, %struct.GPR* %2716, i32 0, i32 33
  %2718 = getelementptr inbounds %struct.Reg, %struct.Reg* %2717, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %2718 to i64*
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 1
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %RAX.i759 = bitcast %union.anon* %2721 to i64*
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 15
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %2724 to i64*
  %2725 = load i64, i64* %RBP.i760
  %2726 = sub i64 %2725, 40
  %2727 = load i64, i64* %PC.i758
  %2728 = add i64 %2727, 3
  store i64 %2728, i64* %PC.i758
  %2729 = inttoptr i64 %2726 to i32*
  %2730 = load i32, i32* %2729
  %2731 = zext i32 %2730 to i64
  store i64 %2731, i64* %RAX.i759, align 8
  store %struct.Memory* %loadMem_43ff60, %struct.Memory** %MEMORY
  %loadMem_43ff63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2733 = getelementptr inbounds %struct.GPR, %struct.GPR* %2732, i32 0, i32 33
  %2734 = getelementptr inbounds %struct.Reg, %struct.Reg* %2733, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %2734 to i64*
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 1
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %EAX.i756 = bitcast %union.anon* %2737 to i32*
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2739 = getelementptr inbounds %struct.GPR, %struct.GPR* %2738, i32 0, i32 15
  %2740 = getelementptr inbounds %struct.Reg, %struct.Reg* %2739, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %2740 to i64*
  %2741 = load i32, i32* %EAX.i756
  %2742 = zext i32 %2741 to i64
  %2743 = load i64, i64* %RBP.i757
  %2744 = sub i64 %2743, 48
  %2745 = load i64, i64* %PC.i755
  %2746 = add i64 %2745, 3
  store i64 %2746, i64* %PC.i755
  %2747 = inttoptr i64 %2744 to i32*
  %2748 = load i32, i32* %2747
  %2749 = sub i32 %2741, %2748
  %2750 = icmp ult i32 %2741, %2748
  %2751 = zext i1 %2750 to i8
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2751, i8* %2752, align 1
  %2753 = and i32 %2749, 255
  %2754 = call i32 @llvm.ctpop.i32(i32 %2753)
  %2755 = trunc i32 %2754 to i8
  %2756 = and i8 %2755, 1
  %2757 = xor i8 %2756, 1
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2757, i8* %2758, align 1
  %2759 = xor i32 %2748, %2741
  %2760 = xor i32 %2759, %2749
  %2761 = lshr i32 %2760, 4
  %2762 = trunc i32 %2761 to i8
  %2763 = and i8 %2762, 1
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2763, i8* %2764, align 1
  %2765 = icmp eq i32 %2749, 0
  %2766 = zext i1 %2765 to i8
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2766, i8* %2767, align 1
  %2768 = lshr i32 %2749, 31
  %2769 = trunc i32 %2768 to i8
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2769, i8* %2770, align 1
  %2771 = lshr i32 %2741, 31
  %2772 = lshr i32 %2748, 31
  %2773 = xor i32 %2772, %2771
  %2774 = xor i32 %2768, %2771
  %2775 = add i32 %2774, %2773
  %2776 = icmp eq i32 %2775, 2
  %2777 = zext i1 %2776 to i8
  %2778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2777, i8* %2778, align 1
  store %struct.Memory* %loadMem_43ff63, %struct.Memory** %MEMORY
  %loadMem_43ff66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 33
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %2781 to i64*
  %2782 = load i64, i64* %PC.i754
  %2783 = add i64 %2782, 288
  %2784 = load i64, i64* %PC.i754
  %2785 = add i64 %2784, 6
  %2786 = load i64, i64* %PC.i754
  %2787 = add i64 %2786, 6
  store i64 %2787, i64* %PC.i754
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2789 = load i8, i8* %2788, align 1
  %2790 = icmp ne i8 %2789, 0
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2792 = load i8, i8* %2791, align 1
  %2793 = icmp ne i8 %2792, 0
  %2794 = xor i1 %2790, %2793
  %2795 = xor i1 %2794, true
  %2796 = zext i1 %2795 to i8
  store i8 %2796, i8* %BRANCH_TAKEN, align 1
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2798 = select i1 %2794, i64 %2785, i64 %2783
  store i64 %2798, i64* %2797, align 8
  store %struct.Memory* %loadMem_43ff66, %struct.Memory** %MEMORY
  %loadBr_43ff66 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff66 = icmp eq i8 %loadBr_43ff66, 1
  br i1 %cmpBr_43ff66, label %block_.L_440086, label %block_43ff6c

block_43ff6c:                                     ; preds = %block_.L_43ff60
  %loadMem_43ff6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2800 = getelementptr inbounds %struct.GPR, %struct.GPR* %2799, i32 0, i32 33
  %2801 = getelementptr inbounds %struct.Reg, %struct.Reg* %2800, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %2801 to i64*
  %2802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2803 = getelementptr inbounds %struct.GPR, %struct.GPR* %2802, i32 0, i32 1
  %2804 = getelementptr inbounds %struct.Reg, %struct.Reg* %2803, i32 0, i32 0
  %RAX.i753 = bitcast %union.anon* %2804 to i64*
  %2805 = load i64, i64* %PC.i752
  %2806 = add i64 %2805, 8
  store i64 %2806, i64* %PC.i752
  %2807 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %2807, i64* %RAX.i753, align 8
  store %struct.Memory* %loadMem_43ff6c, %struct.Memory** %MEMORY
  %loadMem_43ff74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2809 = getelementptr inbounds %struct.GPR, %struct.GPR* %2808, i32 0, i32 33
  %2810 = getelementptr inbounds %struct.Reg, %struct.Reg* %2809, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %2810 to i64*
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 1
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %2813 to i64*
  %2814 = load i64, i64* %RAX.i751
  %2815 = load i64, i64* %PC.i750
  %2816 = add i64 %2815, 3
  store i64 %2816, i64* %PC.i750
  %2817 = inttoptr i64 %2814 to i64*
  %2818 = load i64, i64* %2817
  store i64 %2818, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_43ff74, %struct.Memory** %MEMORY
  %loadMem_43ff77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 33
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %2821 to i64*
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 5
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %RCX.i748 = bitcast %union.anon* %2824 to i64*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 15
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %2827 to i64*
  %2828 = load i64, i64* %RBP.i749
  %2829 = sub i64 %2828, 34
  %2830 = load i64, i64* %PC.i747
  %2831 = add i64 %2830, 5
  store i64 %2831, i64* %PC.i747
  %2832 = inttoptr i64 %2829 to i16*
  %2833 = load i16, i16* %2832
  %2834 = sext i16 %2833 to i64
  store i64 %2834, i64* %RCX.i748, align 8
  store %struct.Memory* %loadMem_43ff77, %struct.Memory** %MEMORY
  %loadMem_43ff7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2836 = getelementptr inbounds %struct.GPR, %struct.GPR* %2835, i32 0, i32 33
  %2837 = getelementptr inbounds %struct.Reg, %struct.Reg* %2836, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %2837 to i64*
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2839 = getelementptr inbounds %struct.GPR, %struct.GPR* %2838, i32 0, i32 1
  %2840 = getelementptr inbounds %struct.Reg, %struct.Reg* %2839, i32 0, i32 0
  %RAX.i745 = bitcast %union.anon* %2840 to i64*
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2842 = getelementptr inbounds %struct.GPR, %struct.GPR* %2841, i32 0, i32 5
  %2843 = getelementptr inbounds %struct.Reg, %struct.Reg* %2842, i32 0, i32 0
  %RCX.i746 = bitcast %union.anon* %2843 to i64*
  %2844 = load i64, i64* %RAX.i745
  %2845 = load i64, i64* %RCX.i746
  %2846 = mul i64 %2845, 8
  %2847 = add i64 %2846, %2844
  %2848 = load i64, i64* %PC.i744
  %2849 = add i64 %2848, 4
  store i64 %2849, i64* %PC.i744
  %2850 = inttoptr i64 %2847 to i64*
  %2851 = load i64, i64* %2850
  store i64 %2851, i64* %RAX.i745, align 8
  store %struct.Memory* %loadMem_43ff7c, %struct.Memory** %MEMORY
  %loadMem_43ff80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %2854 to i64*
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 5
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %RCX.i742 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 15
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %2860 to i64*
  %2861 = load i64, i64* %RBP.i743
  %2862 = sub i64 %2861, 36
  %2863 = load i64, i64* %PC.i741
  %2864 = add i64 %2863, 5
  store i64 %2864, i64* %PC.i741
  %2865 = inttoptr i64 %2862 to i16*
  %2866 = load i16, i16* %2865
  %2867 = sext i16 %2866 to i64
  store i64 %2867, i64* %RCX.i742, align 8
  store %struct.Memory* %loadMem_43ff80, %struct.Memory** %MEMORY
  %loadMem_43ff85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2869 = getelementptr inbounds %struct.GPR, %struct.GPR* %2868, i32 0, i32 33
  %2870 = getelementptr inbounds %struct.Reg, %struct.Reg* %2869, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %2870 to i64*
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2872 = getelementptr inbounds %struct.GPR, %struct.GPR* %2871, i32 0, i32 1
  %2873 = getelementptr inbounds %struct.Reg, %struct.Reg* %2872, i32 0, i32 0
  %RAX.i739 = bitcast %union.anon* %2873 to i64*
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2875 = getelementptr inbounds %struct.GPR, %struct.GPR* %2874, i32 0, i32 5
  %2876 = getelementptr inbounds %struct.Reg, %struct.Reg* %2875, i32 0, i32 0
  %RCX.i740 = bitcast %union.anon* %2876 to i64*
  %2877 = load i64, i64* %RAX.i739
  %2878 = load i64, i64* %RCX.i740
  %2879 = mul i64 %2878, 8
  %2880 = add i64 %2879, %2877
  %2881 = load i64, i64* %PC.i738
  %2882 = add i64 %2881, 4
  store i64 %2882, i64* %PC.i738
  %2883 = inttoptr i64 %2880 to i64*
  %2884 = load i64, i64* %2883
  store i64 %2884, i64* %RAX.i739, align 8
  store %struct.Memory* %loadMem_43ff85, %struct.Memory** %MEMORY
  %loadMem_43ff89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2886 = getelementptr inbounds %struct.GPR, %struct.GPR* %2885, i32 0, i32 33
  %2887 = getelementptr inbounds %struct.Reg, %struct.Reg* %2886, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %2887 to i64*
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2889 = getelementptr inbounds %struct.GPR, %struct.GPR* %2888, i32 0, i32 7
  %2890 = getelementptr inbounds %struct.Reg, %struct.Reg* %2889, i32 0, i32 0
  %RDX.i736 = bitcast %union.anon* %2890 to i64*
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 15
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %2893 to i64*
  %2894 = load i64, i64* %RBP.i737
  %2895 = sub i64 %2894, 12
  %2896 = load i64, i64* %PC.i735
  %2897 = add i64 %2896, 3
  store i64 %2897, i64* %PC.i735
  %2898 = inttoptr i64 %2895 to i32*
  %2899 = load i32, i32* %2898
  %2900 = zext i32 %2899 to i64
  store i64 %2900, i64* %RDX.i736, align 8
  store %struct.Memory* %loadMem_43ff89, %struct.Memory** %MEMORY
  %loadMem_43ff8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2902 = getelementptr inbounds %struct.GPR, %struct.GPR* %2901, i32 0, i32 33
  %2903 = getelementptr inbounds %struct.Reg, %struct.Reg* %2902, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %2903 to i64*
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2905 = getelementptr inbounds %struct.GPR, %struct.GPR* %2904, i32 0, i32 7
  %2906 = getelementptr inbounds %struct.Reg, %struct.Reg* %2905, i32 0, i32 0
  %RDX.i734 = bitcast %union.anon* %2906 to i64*
  %2907 = load i64, i64* %RDX.i734
  %2908 = load i64, i64* %PC.i733
  %2909 = add i64 %2908, 3
  store i64 %2909, i64* %PC.i733
  %2910 = trunc i64 %2907 to i32
  %2911 = add i32 1, %2910
  %2912 = zext i32 %2911 to i64
  store i64 %2912, i64* %RDX.i734, align 8
  %2913 = icmp ult i32 %2911, %2910
  %2914 = icmp ult i32 %2911, 1
  %2915 = or i1 %2913, %2914
  %2916 = zext i1 %2915 to i8
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2916, i8* %2917, align 1
  %2918 = and i32 %2911, 255
  %2919 = call i32 @llvm.ctpop.i32(i32 %2918)
  %2920 = trunc i32 %2919 to i8
  %2921 = and i8 %2920, 1
  %2922 = xor i8 %2921, 1
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2922, i8* %2923, align 1
  %2924 = xor i64 1, %2907
  %2925 = trunc i64 %2924 to i32
  %2926 = xor i32 %2925, %2911
  %2927 = lshr i32 %2926, 4
  %2928 = trunc i32 %2927 to i8
  %2929 = and i8 %2928, 1
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2929, i8* %2930, align 1
  %2931 = icmp eq i32 %2911, 0
  %2932 = zext i1 %2931 to i8
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2932, i8* %2933, align 1
  %2934 = lshr i32 %2911, 31
  %2935 = trunc i32 %2934 to i8
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2935, i8* %2936, align 1
  %2937 = lshr i32 %2910, 31
  %2938 = xor i32 %2934, %2937
  %2939 = add i32 %2938, %2934
  %2940 = icmp eq i32 %2939, 2
  %2941 = zext i1 %2940 to i8
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2941, i8* %2942, align 1
  store %struct.Memory* %loadMem_43ff8c, %struct.Memory** %MEMORY
  %loadMem_43ff8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 33
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %2945 to i64*
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 7
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %EDX.i731 = bitcast %union.anon* %2948 to i32*
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 5
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %2951 to i64*
  %2952 = load i32, i32* %EDX.i731
  %2953 = zext i32 %2952 to i64
  %2954 = load i64, i64* %PC.i730
  %2955 = add i64 %2954, 3
  store i64 %2955, i64* %PC.i730
  %2956 = shl i64 %2953, 32
  %2957 = ashr exact i64 %2956, 32
  store i64 %2957, i64* %RCX.i732, align 8
  store %struct.Memory* %loadMem_43ff8f, %struct.Memory** %MEMORY
  %loadMem_43ff92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 1
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %2963 to i64*
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2965 = getelementptr inbounds %struct.GPR, %struct.GPR* %2964, i32 0, i32 5
  %2966 = getelementptr inbounds %struct.Reg, %struct.Reg* %2965, i32 0, i32 0
  %RCX.i728 = bitcast %union.anon* %2966 to i64*
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2968 = getelementptr inbounds %struct.GPR, %struct.GPR* %2967, i32 0, i32 7
  %2969 = getelementptr inbounds %struct.Reg, %struct.Reg* %2968, i32 0, i32 0
  %RDX.i729 = bitcast %union.anon* %2969 to i64*
  %2970 = load i64, i64* %RAX.i727
  %2971 = load i64, i64* %RCX.i728
  %2972 = mul i64 %2971, 4
  %2973 = add i64 %2972, %2970
  %2974 = load i64, i64* %PC.i726
  %2975 = add i64 %2974, 3
  store i64 %2975, i64* %PC.i726
  %2976 = inttoptr i64 %2973 to i32*
  %2977 = load i32, i32* %2976
  %2978 = zext i32 %2977 to i64
  store i64 %2978, i64* %RDX.i729, align 8
  store %struct.Memory* %loadMem_43ff92, %struct.Memory** %MEMORY
  %loadMem_43ff95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2980 = getelementptr inbounds %struct.GPR, %struct.GPR* %2979, i32 0, i32 33
  %2981 = getelementptr inbounds %struct.Reg, %struct.Reg* %2980, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %2981 to i64*
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2983 = getelementptr inbounds %struct.GPR, %struct.GPR* %2982, i32 0, i32 1
  %2984 = getelementptr inbounds %struct.Reg, %struct.Reg* %2983, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %2984 to i64*
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2986 = getelementptr inbounds %struct.GPR, %struct.GPR* %2985, i32 0, i32 15
  %2987 = getelementptr inbounds %struct.Reg, %struct.Reg* %2986, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %2987 to i64*
  %2988 = load i64, i64* %RBP.i725
  %2989 = sub i64 %2988, 64
  %2990 = load i64, i64* %PC.i723
  %2991 = add i64 %2990, 4
  store i64 %2991, i64* %PC.i723
  %2992 = inttoptr i64 %2989 to i64*
  %2993 = load i64, i64* %2992
  store i64 %2993, i64* %RAX.i724, align 8
  store %struct.Memory* %loadMem_43ff95, %struct.Memory** %MEMORY
  %loadMem_43ff99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 33
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %2996 to i64*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 1
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %2999 to i64*
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3001 = getelementptr inbounds %struct.GPR, %struct.GPR* %3000, i32 0, i32 5
  %3002 = getelementptr inbounds %struct.Reg, %struct.Reg* %3001, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %3002 to i64*
  %3003 = load i64, i64* %RAX.i721
  %3004 = load i64, i64* %PC.i720
  %3005 = add i64 %3004, 3
  store i64 %3005, i64* %PC.i720
  store i64 %3003, i64* %RCX.i722, align 8
  store %struct.Memory* %loadMem_43ff99, %struct.Memory** %MEMORY
  %loadMem_43ff9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3007 = getelementptr inbounds %struct.GPR, %struct.GPR* %3006, i32 0, i32 33
  %3008 = getelementptr inbounds %struct.Reg, %struct.Reg* %3007, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %3008 to i64*
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3010 = getelementptr inbounds %struct.GPR, %struct.GPR* %3009, i32 0, i32 5
  %3011 = getelementptr inbounds %struct.Reg, %struct.Reg* %3010, i32 0, i32 0
  %RCX.i719 = bitcast %union.anon* %3011 to i64*
  %3012 = load i64, i64* %RCX.i719
  %3013 = load i64, i64* %PC.i718
  %3014 = add i64 %3013, 4
  store i64 %3014, i64* %PC.i718
  %3015 = add i64 4, %3012
  store i64 %3015, i64* %RCX.i719, align 8
  %3016 = icmp ult i64 %3015, %3012
  %3017 = icmp ult i64 %3015, 4
  %3018 = or i1 %3016, %3017
  %3019 = zext i1 %3018 to i8
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3019, i8* %3020, align 1
  %3021 = trunc i64 %3015 to i32
  %3022 = and i32 %3021, 255
  %3023 = call i32 @llvm.ctpop.i32(i32 %3022)
  %3024 = trunc i32 %3023 to i8
  %3025 = and i8 %3024, 1
  %3026 = xor i8 %3025, 1
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3026, i8* %3027, align 1
  %3028 = xor i64 4, %3012
  %3029 = xor i64 %3028, %3015
  %3030 = lshr i64 %3029, 4
  %3031 = trunc i64 %3030 to i8
  %3032 = and i8 %3031, 1
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3032, i8* %3033, align 1
  %3034 = icmp eq i64 %3015, 0
  %3035 = zext i1 %3034 to i8
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3035, i8* %3036, align 1
  %3037 = lshr i64 %3015, 63
  %3038 = trunc i64 %3037 to i8
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3038, i8* %3039, align 1
  %3040 = lshr i64 %3012, 63
  %3041 = xor i64 %3037, %3040
  %3042 = add i64 %3041, %3037
  %3043 = icmp eq i64 %3042, 2
  %3044 = zext i1 %3043 to i8
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3044, i8* %3045, align 1
  store %struct.Memory* %loadMem_43ff9c, %struct.Memory** %MEMORY
  %loadMem_43ffa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %3048 to i64*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 5
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %RCX.i716 = bitcast %union.anon* %3051 to i64*
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3053 = getelementptr inbounds %struct.GPR, %struct.GPR* %3052, i32 0, i32 15
  %3054 = getelementptr inbounds %struct.Reg, %struct.Reg* %3053, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %3054 to i64*
  %3055 = load i64, i64* %RBP.i717
  %3056 = sub i64 %3055, 64
  %3057 = load i64, i64* %RCX.i716
  %3058 = load i64, i64* %PC.i715
  %3059 = add i64 %3058, 4
  store i64 %3059, i64* %PC.i715
  %3060 = inttoptr i64 %3056 to i64*
  store i64 %3057, i64* %3060
  store %struct.Memory* %loadMem_43ffa0, %struct.Memory** %MEMORY
  %loadMem_43ffa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 33
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %3063 to i64*
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 1
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %RAX.i713 = bitcast %union.anon* %3066 to i64*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 7
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %RDX.i714 = bitcast %union.anon* %3069 to i64*
  %3070 = load i64, i64* %RDX.i714
  %3071 = load i64, i64* %RAX.i713
  %3072 = load i64, i64* %PC.i712
  %3073 = add i64 %3072, 3
  store i64 %3073, i64* %PC.i712
  %3074 = inttoptr i64 %3071 to i32*
  %3075 = load i32, i32* %3074
  %3076 = shl i64 %3070, 32
  %3077 = ashr exact i64 %3076, 32
  %3078 = sext i32 %3075 to i64
  %3079 = mul i64 %3078, %3077
  %3080 = trunc i64 %3079 to i32
  %3081 = and i64 %3079, 4294967295
  store i64 %3081, i64* %RDX.i714, align 8
  %3082 = shl i64 %3079, 32
  %3083 = ashr exact i64 %3082, 32
  %3084 = icmp ne i64 %3083, %3079
  %3085 = zext i1 %3084 to i8
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3085, i8* %3086, align 1
  %3087 = and i32 %3080, 255
  %3088 = call i32 @llvm.ctpop.i32(i32 %3087)
  %3089 = trunc i32 %3088 to i8
  %3090 = and i8 %3089, 1
  %3091 = xor i8 %3090, 1
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3091, i8* %3092, align 1
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3093, align 1
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3094, align 1
  %3095 = lshr i32 %3080, 31
  %3096 = trunc i32 %3095 to i8
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3096, i8* %3097, align 1
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3085, i8* %3098, align 1
  store %struct.Memory* %loadMem_43ffa4, %struct.Memory** %MEMORY
  %loadMem_43ffa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 33
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %3101 to i64*
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 1
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %3104 to i64*
  %3105 = load i64, i64* %PC.i710
  %3106 = add i64 %3105, 8
  store i64 %3106, i64* %PC.i710
  %3107 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %3107, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_43ffa7, %struct.Memory** %MEMORY
  %loadMem_43ffaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3109 = getelementptr inbounds %struct.GPR, %struct.GPR* %3108, i32 0, i32 33
  %3110 = getelementptr inbounds %struct.Reg, %struct.Reg* %3109, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %3110 to i64*
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3112 = getelementptr inbounds %struct.GPR, %struct.GPR* %3111, i32 0, i32 1
  %3113 = getelementptr inbounds %struct.Reg, %struct.Reg* %3112, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %3113 to i64*
  %3114 = load i64, i64* %RAX.i709
  %3115 = add i64 %3114, 8
  %3116 = load i64, i64* %PC.i708
  %3117 = add i64 %3116, 4
  store i64 %3117, i64* %PC.i708
  %3118 = inttoptr i64 %3115 to i64*
  %3119 = load i64, i64* %3118
  store i64 %3119, i64* %RAX.i709, align 8
  store %struct.Memory* %loadMem_43ffaf, %struct.Memory** %MEMORY
  %loadMem_43ffb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3121 = getelementptr inbounds %struct.GPR, %struct.GPR* %3120, i32 0, i32 33
  %3122 = getelementptr inbounds %struct.Reg, %struct.Reg* %3121, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %3122 to i64*
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3124 = getelementptr inbounds %struct.GPR, %struct.GPR* %3123, i32 0, i32 5
  %3125 = getelementptr inbounds %struct.Reg, %struct.Reg* %3124, i32 0, i32 0
  %RCX.i706 = bitcast %union.anon* %3125 to i64*
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3127 = getelementptr inbounds %struct.GPR, %struct.GPR* %3126, i32 0, i32 15
  %3128 = getelementptr inbounds %struct.Reg, %struct.Reg* %3127, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %3128 to i64*
  %3129 = load i64, i64* %RBP.i707
  %3130 = sub i64 %3129, 34
  %3131 = load i64, i64* %PC.i705
  %3132 = add i64 %3131, 5
  store i64 %3132, i64* %PC.i705
  %3133 = inttoptr i64 %3130 to i16*
  %3134 = load i16, i16* %3133
  %3135 = sext i16 %3134 to i64
  store i64 %3135, i64* %RCX.i706, align 8
  store %struct.Memory* %loadMem_43ffb3, %struct.Memory** %MEMORY
  %loadMem_43ffb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 1
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 5
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %RCX.i704 = bitcast %union.anon* %3144 to i64*
  %3145 = load i64, i64* %RAX.i703
  %3146 = load i64, i64* %RCX.i704
  %3147 = mul i64 %3146, 8
  %3148 = add i64 %3147, %3145
  %3149 = load i64, i64* %PC.i702
  %3150 = add i64 %3149, 4
  store i64 %3150, i64* %PC.i702
  %3151 = inttoptr i64 %3148 to i64*
  %3152 = load i64, i64* %3151
  store i64 %3152, i64* %RAX.i703, align 8
  store %struct.Memory* %loadMem_43ffb8, %struct.Memory** %MEMORY
  %loadMem_43ffbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3154 = getelementptr inbounds %struct.GPR, %struct.GPR* %3153, i32 0, i32 33
  %3155 = getelementptr inbounds %struct.Reg, %struct.Reg* %3154, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %3155 to i64*
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3157 = getelementptr inbounds %struct.GPR, %struct.GPR* %3156, i32 0, i32 5
  %3158 = getelementptr inbounds %struct.Reg, %struct.Reg* %3157, i32 0, i32 0
  %RCX.i700 = bitcast %union.anon* %3158 to i64*
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3160 = getelementptr inbounds %struct.GPR, %struct.GPR* %3159, i32 0, i32 15
  %3161 = getelementptr inbounds %struct.Reg, %struct.Reg* %3160, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %3161 to i64*
  %3162 = load i64, i64* %RBP.i701
  %3163 = sub i64 %3162, 36
  %3164 = load i64, i64* %PC.i699
  %3165 = add i64 %3164, 5
  store i64 %3165, i64* %PC.i699
  %3166 = inttoptr i64 %3163 to i16*
  %3167 = load i16, i16* %3166
  %3168 = sext i16 %3167 to i64
  store i64 %3168, i64* %RCX.i700, align 8
  store %struct.Memory* %loadMem_43ffbc, %struct.Memory** %MEMORY
  %loadMem_43ffc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 33
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3173 = getelementptr inbounds %struct.GPR, %struct.GPR* %3172, i32 0, i32 1
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %RAX.i697 = bitcast %union.anon* %3174 to i64*
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3176 = getelementptr inbounds %struct.GPR, %struct.GPR* %3175, i32 0, i32 5
  %3177 = getelementptr inbounds %struct.Reg, %struct.Reg* %3176, i32 0, i32 0
  %RCX.i698 = bitcast %union.anon* %3177 to i64*
  %3178 = load i64, i64* %RAX.i697
  %3179 = load i64, i64* %RCX.i698
  %3180 = mul i64 %3179, 8
  %3181 = add i64 %3180, %3178
  %3182 = load i64, i64* %PC.i696
  %3183 = add i64 %3182, 4
  store i64 %3183, i64* %PC.i696
  %3184 = inttoptr i64 %3181 to i64*
  %3185 = load i64, i64* %3184
  store i64 %3185, i64* %RAX.i697, align 8
  store %struct.Memory* %loadMem_43ffc1, %struct.Memory** %MEMORY
  %loadMem_43ffc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3187 = getelementptr inbounds %struct.GPR, %struct.GPR* %3186, i32 0, i32 33
  %3188 = getelementptr inbounds %struct.Reg, %struct.Reg* %3187, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %3188 to i64*
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3190 = getelementptr inbounds %struct.GPR, %struct.GPR* %3189, i32 0, i32 9
  %3191 = getelementptr inbounds %struct.Reg, %struct.Reg* %3190, i32 0, i32 0
  %RSI.i694 = bitcast %union.anon* %3191 to i64*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 15
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %RBP.i695 = bitcast %union.anon* %3194 to i64*
  %3195 = load i64, i64* %RBP.i695
  %3196 = sub i64 %3195, 12
  %3197 = load i64, i64* %PC.i693
  %3198 = add i64 %3197, 3
  store i64 %3198, i64* %PC.i693
  %3199 = inttoptr i64 %3196 to i32*
  %3200 = load i32, i32* %3199
  %3201 = zext i32 %3200 to i64
  store i64 %3201, i64* %RSI.i694, align 8
  store %struct.Memory* %loadMem_43ffc5, %struct.Memory** %MEMORY
  %loadMem_43ffc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3203 = getelementptr inbounds %struct.GPR, %struct.GPR* %3202, i32 0, i32 33
  %3204 = getelementptr inbounds %struct.Reg, %struct.Reg* %3203, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %3204 to i64*
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 9
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %RSI.i692 = bitcast %union.anon* %3207 to i64*
  %3208 = load i64, i64* %RSI.i692
  %3209 = load i64, i64* %PC.i691
  %3210 = add i64 %3209, 3
  store i64 %3210, i64* %PC.i691
  %3211 = trunc i64 %3208 to i32
  %3212 = add i32 1, %3211
  %3213 = zext i32 %3212 to i64
  store i64 %3213, i64* %RSI.i692, align 8
  %3214 = icmp ult i32 %3212, %3211
  %3215 = icmp ult i32 %3212, 1
  %3216 = or i1 %3214, %3215
  %3217 = zext i1 %3216 to i8
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3217, i8* %3218, align 1
  %3219 = and i32 %3212, 255
  %3220 = call i32 @llvm.ctpop.i32(i32 %3219)
  %3221 = trunc i32 %3220 to i8
  %3222 = and i8 %3221, 1
  %3223 = xor i8 %3222, 1
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3223, i8* %3224, align 1
  %3225 = xor i64 1, %3208
  %3226 = trunc i64 %3225 to i32
  %3227 = xor i32 %3226, %3212
  %3228 = lshr i32 %3227, 4
  %3229 = trunc i32 %3228 to i8
  %3230 = and i8 %3229, 1
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3230, i8* %3231, align 1
  %3232 = icmp eq i32 %3212, 0
  %3233 = zext i1 %3232 to i8
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3233, i8* %3234, align 1
  %3235 = lshr i32 %3212, 31
  %3236 = trunc i32 %3235 to i8
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3236, i8* %3237, align 1
  %3238 = lshr i32 %3211, 31
  %3239 = xor i32 %3235, %3238
  %3240 = add i32 %3239, %3235
  %3241 = icmp eq i32 %3240, 2
  %3242 = zext i1 %3241 to i8
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3242, i8* %3243, align 1
  store %struct.Memory* %loadMem_43ffc8, %struct.Memory** %MEMORY
  %loadMem_43ffcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3245 = getelementptr inbounds %struct.GPR, %struct.GPR* %3244, i32 0, i32 33
  %3246 = getelementptr inbounds %struct.Reg, %struct.Reg* %3245, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %3246 to i64*
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3248 = getelementptr inbounds %struct.GPR, %struct.GPR* %3247, i32 0, i32 9
  %3249 = getelementptr inbounds %struct.Reg, %struct.Reg* %3248, i32 0, i32 0
  %ESI.i689 = bitcast %union.anon* %3249 to i32*
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3251 = getelementptr inbounds %struct.GPR, %struct.GPR* %3250, i32 0, i32 5
  %3252 = getelementptr inbounds %struct.Reg, %struct.Reg* %3251, i32 0, i32 0
  %RCX.i690 = bitcast %union.anon* %3252 to i64*
  %3253 = load i32, i32* %ESI.i689
  %3254 = zext i32 %3253 to i64
  %3255 = load i64, i64* %PC.i688
  %3256 = add i64 %3255, 3
  store i64 %3256, i64* %PC.i688
  %3257 = shl i64 %3254, 32
  %3258 = ashr exact i64 %3257, 32
  store i64 %3258, i64* %RCX.i690, align 8
  store %struct.Memory* %loadMem_43ffcb, %struct.Memory** %MEMORY
  %loadMem_43ffce = load %struct.Memory*, %struct.Memory** %MEMORY
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 33
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %3261 to i64*
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 1
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %3264 to i64*
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3266 = getelementptr inbounds %struct.GPR, %struct.GPR* %3265, i32 0, i32 5
  %3267 = getelementptr inbounds %struct.Reg, %struct.Reg* %3266, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %3267 to i64*
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3269 = getelementptr inbounds %struct.GPR, %struct.GPR* %3268, i32 0, i32 9
  %3270 = getelementptr inbounds %struct.Reg, %struct.Reg* %3269, i32 0, i32 0
  %RSI.i687 = bitcast %union.anon* %3270 to i64*
  %3271 = load i64, i64* %RAX.i685
  %3272 = load i64, i64* %RCX.i686
  %3273 = mul i64 %3272, 4
  %3274 = add i64 %3273, %3271
  %3275 = load i64, i64* %PC.i684
  %3276 = add i64 %3275, 3
  store i64 %3276, i64* %PC.i684
  %3277 = inttoptr i64 %3274 to i32*
  %3278 = load i32, i32* %3277
  %3279 = zext i32 %3278 to i64
  store i64 %3279, i64* %RSI.i687, align 8
  store %struct.Memory* %loadMem_43ffce, %struct.Memory** %MEMORY
  %loadMem_43ffd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3281 = getelementptr inbounds %struct.GPR, %struct.GPR* %3280, i32 0, i32 33
  %3282 = getelementptr inbounds %struct.Reg, %struct.Reg* %3281, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %3282 to i64*
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3284 = getelementptr inbounds %struct.GPR, %struct.GPR* %3283, i32 0, i32 1
  %3285 = getelementptr inbounds %struct.Reg, %struct.Reg* %3284, i32 0, i32 0
  %RAX.i682 = bitcast %union.anon* %3285 to i64*
  %3286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3287 = getelementptr inbounds %struct.GPR, %struct.GPR* %3286, i32 0, i32 15
  %3288 = getelementptr inbounds %struct.Reg, %struct.Reg* %3287, i32 0, i32 0
  %RBP.i683 = bitcast %union.anon* %3288 to i64*
  %3289 = load i64, i64* %RBP.i683
  %3290 = sub i64 %3289, 72
  %3291 = load i64, i64* %PC.i681
  %3292 = add i64 %3291, 4
  store i64 %3292, i64* %PC.i681
  %3293 = inttoptr i64 %3290 to i64*
  %3294 = load i64, i64* %3293
  store i64 %3294, i64* %RAX.i682, align 8
  store %struct.Memory* %loadMem_43ffd1, %struct.Memory** %MEMORY
  %loadMem_43ffd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3296 = getelementptr inbounds %struct.GPR, %struct.GPR* %3295, i32 0, i32 33
  %3297 = getelementptr inbounds %struct.Reg, %struct.Reg* %3296, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %3297 to i64*
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3299 = getelementptr inbounds %struct.GPR, %struct.GPR* %3298, i32 0, i32 1
  %3300 = getelementptr inbounds %struct.Reg, %struct.Reg* %3299, i32 0, i32 0
  %RAX.i679 = bitcast %union.anon* %3300 to i64*
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 5
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %RCX.i680 = bitcast %union.anon* %3303 to i64*
  %3304 = load i64, i64* %RAX.i679
  %3305 = load i64, i64* %PC.i678
  %3306 = add i64 %3305, 3
  store i64 %3306, i64* %PC.i678
  store i64 %3304, i64* %RCX.i680, align 8
  store %struct.Memory* %loadMem_43ffd5, %struct.Memory** %MEMORY
  %loadMem_43ffd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 33
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %3309 to i64*
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 5
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %RCX.i677 = bitcast %union.anon* %3312 to i64*
  %3313 = load i64, i64* %RCX.i677
  %3314 = load i64, i64* %PC.i676
  %3315 = add i64 %3314, 4
  store i64 %3315, i64* %PC.i676
  %3316 = add i64 4, %3313
  store i64 %3316, i64* %RCX.i677, align 8
  %3317 = icmp ult i64 %3316, %3313
  %3318 = icmp ult i64 %3316, 4
  %3319 = or i1 %3317, %3318
  %3320 = zext i1 %3319 to i8
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3320, i8* %3321, align 1
  %3322 = trunc i64 %3316 to i32
  %3323 = and i32 %3322, 255
  %3324 = call i32 @llvm.ctpop.i32(i32 %3323)
  %3325 = trunc i32 %3324 to i8
  %3326 = and i8 %3325, 1
  %3327 = xor i8 %3326, 1
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3327, i8* %3328, align 1
  %3329 = xor i64 4, %3313
  %3330 = xor i64 %3329, %3316
  %3331 = lshr i64 %3330, 4
  %3332 = trunc i64 %3331 to i8
  %3333 = and i8 %3332, 1
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3333, i8* %3334, align 1
  %3335 = icmp eq i64 %3316, 0
  %3336 = zext i1 %3335 to i8
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3336, i8* %3337, align 1
  %3338 = lshr i64 %3316, 63
  %3339 = trunc i64 %3338 to i8
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3339, i8* %3340, align 1
  %3341 = lshr i64 %3313, 63
  %3342 = xor i64 %3338, %3341
  %3343 = add i64 %3342, %3338
  %3344 = icmp eq i64 %3343, 2
  %3345 = zext i1 %3344 to i8
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3345, i8* %3346, align 1
  store %struct.Memory* %loadMem_43ffd8, %struct.Memory** %MEMORY
  %loadMem_43ffdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3348 = getelementptr inbounds %struct.GPR, %struct.GPR* %3347, i32 0, i32 33
  %3349 = getelementptr inbounds %struct.Reg, %struct.Reg* %3348, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %3349 to i64*
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 5
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %RCX.i674 = bitcast %union.anon* %3352 to i64*
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 15
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %3355 to i64*
  %3356 = load i64, i64* %RBP.i675
  %3357 = sub i64 %3356, 72
  %3358 = load i64, i64* %RCX.i674
  %3359 = load i64, i64* %PC.i673
  %3360 = add i64 %3359, 4
  store i64 %3360, i64* %PC.i673
  %3361 = inttoptr i64 %3357 to i64*
  store i64 %3358, i64* %3361
  store %struct.Memory* %loadMem_43ffdc, %struct.Memory** %MEMORY
  %loadMem_43ffe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3363 = getelementptr inbounds %struct.GPR, %struct.GPR* %3362, i32 0, i32 33
  %3364 = getelementptr inbounds %struct.Reg, %struct.Reg* %3363, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %3364 to i64*
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3366 = getelementptr inbounds %struct.GPR, %struct.GPR* %3365, i32 0, i32 1
  %3367 = getelementptr inbounds %struct.Reg, %struct.Reg* %3366, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %3367 to i64*
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 9
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %RSI.i672 = bitcast %union.anon* %3370 to i64*
  %3371 = load i64, i64* %RSI.i672
  %3372 = load i64, i64* %RAX.i671
  %3373 = load i64, i64* %PC.i670
  %3374 = add i64 %3373, 3
  store i64 %3374, i64* %PC.i670
  %3375 = inttoptr i64 %3372 to i32*
  %3376 = load i32, i32* %3375
  %3377 = shl i64 %3371, 32
  %3378 = ashr exact i64 %3377, 32
  %3379 = sext i32 %3376 to i64
  %3380 = mul i64 %3379, %3378
  %3381 = trunc i64 %3380 to i32
  %3382 = and i64 %3380, 4294967295
  store i64 %3382, i64* %RSI.i672, align 8
  %3383 = shl i64 %3380, 32
  %3384 = ashr exact i64 %3383, 32
  %3385 = icmp ne i64 %3384, %3380
  %3386 = zext i1 %3385 to i8
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3386, i8* %3387, align 1
  %3388 = and i32 %3381, 255
  %3389 = call i32 @llvm.ctpop.i32(i32 %3388)
  %3390 = trunc i32 %3389 to i8
  %3391 = and i8 %3390, 1
  %3392 = xor i8 %3391, 1
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3392, i8* %3393, align 1
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3394, align 1
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3395, align 1
  %3396 = lshr i32 %3381, 31
  %3397 = trunc i32 %3396 to i8
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3397, i8* %3398, align 1
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3386, i8* %3399, align 1
  store %struct.Memory* %loadMem_43ffe0, %struct.Memory** %MEMORY
  %loadMem_43ffe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 33
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %3402 to i64*
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 9
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %ESI.i668 = bitcast %union.anon* %3405 to i32*
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 7
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %RDX.i669 = bitcast %union.anon* %3408 to i64*
  %3409 = load i64, i64* %RDX.i669
  %3410 = load i32, i32* %ESI.i668
  %3411 = zext i32 %3410 to i64
  %3412 = load i64, i64* %PC.i667
  %3413 = add i64 %3412, 2
  store i64 %3413, i64* %PC.i667
  %3414 = trunc i64 %3409 to i32
  %3415 = add i32 %3410, %3414
  %3416 = zext i32 %3415 to i64
  store i64 %3416, i64* %RDX.i669, align 8
  %3417 = icmp ult i32 %3415, %3414
  %3418 = icmp ult i32 %3415, %3410
  %3419 = or i1 %3417, %3418
  %3420 = zext i1 %3419 to i8
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3420, i8* %3421, align 1
  %3422 = and i32 %3415, 255
  %3423 = call i32 @llvm.ctpop.i32(i32 %3422)
  %3424 = trunc i32 %3423 to i8
  %3425 = and i8 %3424, 1
  %3426 = xor i8 %3425, 1
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3426, i8* %3427, align 1
  %3428 = xor i64 %3411, %3409
  %3429 = trunc i64 %3428 to i32
  %3430 = xor i32 %3429, %3415
  %3431 = lshr i32 %3430, 4
  %3432 = trunc i32 %3431 to i8
  %3433 = and i8 %3432, 1
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3433, i8* %3434, align 1
  %3435 = icmp eq i32 %3415, 0
  %3436 = zext i1 %3435 to i8
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3436, i8* %3437, align 1
  %3438 = lshr i32 %3415, 31
  %3439 = trunc i32 %3438 to i8
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3439, i8* %3440, align 1
  %3441 = lshr i32 %3414, 31
  %3442 = lshr i32 %3410, 31
  %3443 = xor i32 %3438, %3441
  %3444 = xor i32 %3438, %3442
  %3445 = add i32 %3443, %3444
  %3446 = icmp eq i32 %3445, 2
  %3447 = zext i1 %3446 to i8
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3447, i8* %3448, align 1
  store %struct.Memory* %loadMem_43ffe3, %struct.Memory** %MEMORY
  %loadMem_43ffe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 33
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %3451 to i64*
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 9
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %RSI.i666 = bitcast %union.anon* %3454 to i64*
  %3455 = load i64, i64* %PC.i665
  %3456 = add i64 %3455, 7
  store i64 %3456, i64* %PC.i665
  %3457 = load i32, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  %3458 = zext i32 %3457 to i64
  store i64 %3458, i64* %RSI.i666, align 8
  store %struct.Memory* %loadMem_43ffe5, %struct.Memory** %MEMORY
  %loadMem_43ffec = load %struct.Memory*, %struct.Memory** %MEMORY
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3460 = getelementptr inbounds %struct.GPR, %struct.GPR* %3459, i32 0, i32 33
  %3461 = getelementptr inbounds %struct.Reg, %struct.Reg* %3460, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %3461 to i64*
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 9
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %RSI.i664 = bitcast %union.anon* %3464 to i64*
  %3465 = load i64, i64* %RSI.i664
  %3466 = load i64, i64* %PC.i663
  %3467 = add i64 %3466, 2
  store i64 %3467, i64* %PC.i663
  %3468 = trunc i64 %3465 to i32
  %3469 = shl i32 %3468, 1
  %3470 = icmp slt i32 %3468, 0
  %3471 = icmp slt i32 %3469, 0
  %3472 = xor i1 %3470, %3471
  %3473 = zext i32 %3469 to i64
  store i64 %3473, i64* %RSI.i664, align 8
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3475 = zext i1 %3470 to i8
  store i8 %3475, i8* %3474, align 1
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3477 = and i32 %3469, 254
  %3478 = call i32 @llvm.ctpop.i32(i32 %3477)
  %3479 = trunc i32 %3478 to i8
  %3480 = and i8 %3479, 1
  %3481 = xor i8 %3480, 1
  store i8 %3481, i8* %3476, align 1
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3482, align 1
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3484 = icmp eq i32 %3469, 0
  %3485 = zext i1 %3484 to i8
  store i8 %3485, i8* %3483, align 1
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3487 = lshr i32 %3469, 31
  %3488 = trunc i32 %3487 to i8
  store i8 %3488, i8* %3486, align 1
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3490 = zext i1 %3472 to i8
  store i8 %3490, i8* %3489, align 1
  store %struct.Memory* %loadMem_43ffec, %struct.Memory** %MEMORY
  %loadMem_43ffef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3492 = getelementptr inbounds %struct.GPR, %struct.GPR* %3491, i32 0, i32 33
  %3493 = getelementptr inbounds %struct.Reg, %struct.Reg* %3492, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %3493 to i64*
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 9
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %ESI.i661 = bitcast %union.anon* %3496 to i32*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 7
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %RDX.i662 = bitcast %union.anon* %3499 to i64*
  %3500 = load i64, i64* %RDX.i662
  %3501 = load i32, i32* %ESI.i661
  %3502 = zext i32 %3501 to i64
  %3503 = load i64, i64* %PC.i660
  %3504 = add i64 %3503, 2
  store i64 %3504, i64* %PC.i660
  %3505 = trunc i64 %3500 to i32
  %3506 = add i32 %3501, %3505
  %3507 = zext i32 %3506 to i64
  store i64 %3507, i64* %RDX.i662, align 8
  %3508 = icmp ult i32 %3506, %3505
  %3509 = icmp ult i32 %3506, %3501
  %3510 = or i1 %3508, %3509
  %3511 = zext i1 %3510 to i8
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3511, i8* %3512, align 1
  %3513 = and i32 %3506, 255
  %3514 = call i32 @llvm.ctpop.i32(i32 %3513)
  %3515 = trunc i32 %3514 to i8
  %3516 = and i8 %3515, 1
  %3517 = xor i8 %3516, 1
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3517, i8* %3518, align 1
  %3519 = xor i64 %3502, %3500
  %3520 = trunc i64 %3519 to i32
  %3521 = xor i32 %3520, %3506
  %3522 = lshr i32 %3521, 4
  %3523 = trunc i32 %3522 to i8
  %3524 = and i8 %3523, 1
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3524, i8* %3525, align 1
  %3526 = icmp eq i32 %3506, 0
  %3527 = zext i1 %3526 to i8
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3527, i8* %3528, align 1
  %3529 = lshr i32 %3506, 31
  %3530 = trunc i32 %3529 to i8
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3530, i8* %3531, align 1
  %3532 = lshr i32 %3505, 31
  %3533 = lshr i32 %3501, 31
  %3534 = xor i32 %3529, %3532
  %3535 = xor i32 %3529, %3533
  %3536 = add i32 %3534, %3535
  %3537 = icmp eq i32 %3536, 2
  %3538 = zext i1 %3537 to i8
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3538, i8* %3539, align 1
  store %struct.Memory* %loadMem_43ffef, %struct.Memory** %MEMORY
  %loadMem_43fff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3541 = getelementptr inbounds %struct.GPR, %struct.GPR* %3540, i32 0, i32 33
  %3542 = getelementptr inbounds %struct.Reg, %struct.Reg* %3541, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %3542 to i64*
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 9
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %RSI.i659 = bitcast %union.anon* %3545 to i64*
  %3546 = load i64, i64* %PC.i658
  %3547 = add i64 %3546, 7
  store i64 %3547, i64* %PC.i658
  %3548 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %3549 = zext i32 %3548 to i64
  store i64 %3549, i64* %RSI.i659, align 8
  store %struct.Memory* %loadMem_43fff1, %struct.Memory** %MEMORY
  %loadMem_43fff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3551 = getelementptr inbounds %struct.GPR, %struct.GPR* %3550, i32 0, i32 33
  %3552 = getelementptr inbounds %struct.Reg, %struct.Reg* %3551, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %3552 to i64*
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3554 = getelementptr inbounds %struct.GPR, %struct.GPR* %3553, i32 0, i32 9
  %3555 = getelementptr inbounds %struct.Reg, %struct.Reg* %3554, i32 0, i32 0
  %RSI.i657 = bitcast %union.anon* %3555 to i64*
  %3556 = load i64, i64* %RSI.i657
  %3557 = load i64, i64* %PC.i656
  %3558 = add i64 %3557, 3
  store i64 %3558, i64* %PC.i656
  %3559 = trunc i64 %3556 to i32
  %3560 = add i32 1, %3559
  %3561 = zext i32 %3560 to i64
  store i64 %3561, i64* %RSI.i657, align 8
  %3562 = icmp ult i32 %3560, %3559
  %3563 = icmp ult i32 %3560, 1
  %3564 = or i1 %3562, %3563
  %3565 = zext i1 %3564 to i8
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3565, i8* %3566, align 1
  %3567 = and i32 %3560, 255
  %3568 = call i32 @llvm.ctpop.i32(i32 %3567)
  %3569 = trunc i32 %3568 to i8
  %3570 = and i8 %3569, 1
  %3571 = xor i8 %3570, 1
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3571, i8* %3572, align 1
  %3573 = xor i64 1, %3556
  %3574 = trunc i64 %3573 to i32
  %3575 = xor i32 %3574, %3560
  %3576 = lshr i32 %3575, 4
  %3577 = trunc i32 %3576 to i8
  %3578 = and i8 %3577, 1
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3578, i8* %3579, align 1
  %3580 = icmp eq i32 %3560, 0
  %3581 = zext i1 %3580 to i8
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3581, i8* %3582, align 1
  %3583 = lshr i32 %3560, 31
  %3584 = trunc i32 %3583 to i8
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3584, i8* %3585, align 1
  %3586 = lshr i32 %3559, 31
  %3587 = xor i32 %3583, %3586
  %3588 = add i32 %3587, %3583
  %3589 = icmp eq i32 %3588, 2
  %3590 = zext i1 %3589 to i8
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3590, i8* %3591, align 1
  store %struct.Memory* %loadMem_43fff8, %struct.Memory** %MEMORY
  %loadMem_43fffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 33
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %3594 to i64*
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 9
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %ESI.i654 = bitcast %union.anon* %3597 to i32*
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3599 = getelementptr inbounds %struct.GPR, %struct.GPR* %3598, i32 0, i32 5
  %3600 = getelementptr inbounds %struct.Reg, %struct.Reg* %3599, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %3600 to i64*
  %3601 = load i32, i32* %ESI.i654
  %3602 = zext i32 %3601 to i64
  %3603 = load i64, i64* %PC.i653
  %3604 = add i64 %3603, 2
  store i64 %3604, i64* %PC.i653
  %3605 = and i64 %3602, 4294967295
  store i64 %3605, i64* %RCX.i655, align 8
  store %struct.Memory* %loadMem_43fffb, %struct.Memory** %MEMORY
  %loadMem_43fffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3607 = getelementptr inbounds %struct.GPR, %struct.GPR* %3606, i32 0, i32 33
  %3608 = getelementptr inbounds %struct.Reg, %struct.Reg* %3607, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %3608 to i64*
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 5
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %3612 = bitcast %union.anon* %3611 to %struct.anon.2*
  %CL.i650 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3612, i32 0, i32 0
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3614 = getelementptr inbounds %struct.GPR, %struct.GPR* %3613, i32 0, i32 7
  %3615 = getelementptr inbounds %struct.Reg, %struct.Reg* %3614, i32 0, i32 0
  %RDX.i651 = bitcast %union.anon* %3615 to i64*
  %3616 = load i64, i64* %RDX.i651
  %3617 = load i8, i8* %CL.i650
  %3618 = zext i8 %3617 to i64
  %3619 = load i64, i64* %PC.i649
  %3620 = add i64 %3619, 2
  store i64 %3620, i64* %PC.i649
  %3621 = trunc i64 %3618 to i5
  switch i5 %3621, label %3625 [
    i5 0, label %routine_sarl__cl___edx.exit652
    i5 1, label %3622
  ]

; <label>:3622:                                   ; preds = %block_43ff6c
  %3623 = shl i64 %3616, 32
  %3624 = ashr i64 %3623, 33
  br label %3632

; <label>:3625:                                   ; preds = %block_43ff6c
  %3626 = and i64 %3618, 31
  %3627 = add i64 %3626, -1
  %3628 = shl i64 %3616, 32
  %3629 = ashr exact i64 %3628, 32
  %3630 = ashr i64 %3629, %3627
  %3631 = lshr i64 %3630, 1
  br label %3632

; <label>:3632:                                   ; preds = %3625, %3622
  %3633 = phi i64 [ %3631, %3625 ], [ %3624, %3622 ]
  %3634 = phi i64 [ %3630, %3625 ], [ %3616, %3622 ]
  %3635 = trunc i64 %3634 to i8
  %3636 = and i8 %3635, 1
  %3637 = trunc i64 %3633 to i32
  %3638 = and i64 %3633, 4294967295
  store i64 %3638, i64* %RDX.i651, align 8
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3636, i8* %3639, align 1
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3641 = and i32 %3637, 255
  %3642 = call i32 @llvm.ctpop.i32(i32 %3641)
  %3643 = trunc i32 %3642 to i8
  %3644 = and i8 %3643, 1
  %3645 = xor i8 %3644, 1
  store i8 %3645, i8* %3640, align 1
  %3646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3646, align 1
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3648 = icmp eq i32 %3637, 0
  %3649 = zext i1 %3648 to i8
  store i8 %3649, i8* %3647, align 1
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3651 = lshr i32 %3637, 31
  %3652 = trunc i32 %3651 to i8
  store i8 %3652, i8* %3650, align 1
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3653, align 1
  br label %routine_sarl__cl___edx.exit652

routine_sarl__cl___edx.exit652:                   ; preds = %block_43ff6c, %3632
  store %struct.Memory* %loadMem_43fffd, %struct.Memory** %MEMORY
  %loadMem_43ffff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3655 = getelementptr inbounds %struct.GPR, %struct.GPR* %3654, i32 0, i32 33
  %3656 = getelementptr inbounds %struct.Reg, %struct.Reg* %3655, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %3656 to i64*
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 1
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %3659 to i64*
  %3660 = load i64, i64* %PC.i647
  %3661 = add i64 %3660, 8
  store i64 %3661, i64* %PC.i647
  %3662 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %3662, i64* %RAX.i648, align 8
  store %struct.Memory* %loadMem_43ffff, %struct.Memory** %MEMORY
  %loadMem_440007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 33
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %3665 to i64*
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 1
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %3668 to i64*
  %3669 = load i64, i64* %RAX.i646
  %3670 = load i64, i64* %PC.i645
  %3671 = add i64 %3670, 3
  store i64 %3671, i64* %PC.i645
  %3672 = inttoptr i64 %3669 to i64*
  %3673 = load i64, i64* %3672
  store i64 %3673, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_440007, %struct.Memory** %MEMORY
  %loadMem_44000a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 33
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %3676 to i64*
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3678 = getelementptr inbounds %struct.GPR, %struct.GPR* %3677, i32 0, i32 11
  %3679 = getelementptr inbounds %struct.Reg, %struct.Reg* %3678, i32 0, i32 0
  %RDI.i643 = bitcast %union.anon* %3679 to i64*
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3681 = getelementptr inbounds %struct.GPR, %struct.GPR* %3680, i32 0, i32 15
  %3682 = getelementptr inbounds %struct.Reg, %struct.Reg* %3681, i32 0, i32 0
  %RBP.i644 = bitcast %union.anon* %3682 to i64*
  %3683 = load i64, i64* %RBP.i644
  %3684 = sub i64 %3683, 34
  %3685 = load i64, i64* %PC.i642
  %3686 = add i64 %3685, 5
  store i64 %3686, i64* %PC.i642
  %3687 = inttoptr i64 %3684 to i16*
  %3688 = load i16, i16* %3687
  %3689 = sext i16 %3688 to i64
  store i64 %3689, i64* %RDI.i643, align 8
  store %struct.Memory* %loadMem_44000a, %struct.Memory** %MEMORY
  %loadMem_44000f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3691 = getelementptr inbounds %struct.GPR, %struct.GPR* %3690, i32 0, i32 33
  %3692 = getelementptr inbounds %struct.Reg, %struct.Reg* %3691, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %3692 to i64*
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3694 = getelementptr inbounds %struct.GPR, %struct.GPR* %3693, i32 0, i32 1
  %3695 = getelementptr inbounds %struct.Reg, %struct.Reg* %3694, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %3695 to i64*
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3697 = getelementptr inbounds %struct.GPR, %struct.GPR* %3696, i32 0, i32 11
  %3698 = getelementptr inbounds %struct.Reg, %struct.Reg* %3697, i32 0, i32 0
  %RDI.i641 = bitcast %union.anon* %3698 to i64*
  %3699 = load i64, i64* %RAX.i640
  %3700 = load i64, i64* %RDI.i641
  %3701 = mul i64 %3700, 8
  %3702 = add i64 %3701, %3699
  %3703 = load i64, i64* %PC.i639
  %3704 = add i64 %3703, 4
  store i64 %3704, i64* %PC.i639
  %3705 = inttoptr i64 %3702 to i64*
  %3706 = load i64, i64* %3705
  store i64 %3706, i64* %RAX.i640, align 8
  store %struct.Memory* %loadMem_44000f, %struct.Memory** %MEMORY
  %loadMem_440013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 33
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %3709 to i64*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 9
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %RSI.i637 = bitcast %union.anon* %3712 to i64*
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3714 = getelementptr inbounds %struct.GPR, %struct.GPR* %3713, i32 0, i32 15
  %3715 = getelementptr inbounds %struct.Reg, %struct.Reg* %3714, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %3715 to i64*
  %3716 = load i64, i64* %RBP.i638
  %3717 = sub i64 %3716, 12
  %3718 = load i64, i64* %PC.i636
  %3719 = add i64 %3718, 3
  store i64 %3719, i64* %PC.i636
  %3720 = inttoptr i64 %3717 to i32*
  %3721 = load i32, i32* %3720
  %3722 = zext i32 %3721 to i64
  store i64 %3722, i64* %RSI.i637, align 8
  store %struct.Memory* %loadMem_440013, %struct.Memory** %MEMORY
  %loadMem_440016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3724 = getelementptr inbounds %struct.GPR, %struct.GPR* %3723, i32 0, i32 33
  %3725 = getelementptr inbounds %struct.Reg, %struct.Reg* %3724, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %3725 to i64*
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3727 = getelementptr inbounds %struct.GPR, %struct.GPR* %3726, i32 0, i32 9
  %3728 = getelementptr inbounds %struct.Reg, %struct.Reg* %3727, i32 0, i32 0
  %RSI.i635 = bitcast %union.anon* %3728 to i64*
  %3729 = load i64, i64* %RSI.i635
  %3730 = load i64, i64* %PC.i634
  %3731 = add i64 %3730, 3
  store i64 %3731, i64* %PC.i634
  %3732 = trunc i64 %3729 to i32
  %3733 = add i32 1, %3732
  %3734 = zext i32 %3733 to i64
  store i64 %3734, i64* %RSI.i635, align 8
  %3735 = icmp ult i32 %3733, %3732
  %3736 = icmp ult i32 %3733, 1
  %3737 = or i1 %3735, %3736
  %3738 = zext i1 %3737 to i8
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3738, i8* %3739, align 1
  %3740 = and i32 %3733, 255
  %3741 = call i32 @llvm.ctpop.i32(i32 %3740)
  %3742 = trunc i32 %3741 to i8
  %3743 = and i8 %3742, 1
  %3744 = xor i8 %3743, 1
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3744, i8* %3745, align 1
  %3746 = xor i64 1, %3729
  %3747 = trunc i64 %3746 to i32
  %3748 = xor i32 %3747, %3733
  %3749 = lshr i32 %3748, 4
  %3750 = trunc i32 %3749 to i8
  %3751 = and i8 %3750, 1
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3751, i8* %3752, align 1
  %3753 = icmp eq i32 %3733, 0
  %3754 = zext i1 %3753 to i8
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3754, i8* %3755, align 1
  %3756 = lshr i32 %3733, 31
  %3757 = trunc i32 %3756 to i8
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3757, i8* %3758, align 1
  %3759 = lshr i32 %3732, 31
  %3760 = xor i32 %3756, %3759
  %3761 = add i32 %3760, %3756
  %3762 = icmp eq i32 %3761, 2
  %3763 = zext i1 %3762 to i8
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3763, i8* %3764, align 1
  store %struct.Memory* %loadMem_440016, %struct.Memory** %MEMORY
  %loadMem_440019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 33
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %3767 to i64*
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 9
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %ESI.i632 = bitcast %union.anon* %3770 to i32*
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 11
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %RDI.i633 = bitcast %union.anon* %3773 to i64*
  %3774 = load i32, i32* %ESI.i632
  %3775 = zext i32 %3774 to i64
  %3776 = load i64, i64* %PC.i631
  %3777 = add i64 %3776, 3
  store i64 %3777, i64* %PC.i631
  %3778 = shl i64 %3775, 32
  %3779 = ashr exact i64 %3778, 32
  store i64 %3779, i64* %RDI.i633, align 8
  store %struct.Memory* %loadMem_440019, %struct.Memory** %MEMORY
  %loadMem_44001c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 33
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %3782 to i64*
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 1
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %3785 to i64*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 9
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RSI.i629 = bitcast %union.anon* %3788 to i64*
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 11
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %RDI.i630 = bitcast %union.anon* %3791 to i64*
  %3792 = load i64, i64* %RAX.i628
  %3793 = load i64, i64* %RDI.i630
  %3794 = mul i64 %3793, 4
  %3795 = add i64 %3794, %3792
  %3796 = load i64, i64* %PC.i627
  %3797 = add i64 %3796, 3
  store i64 %3797, i64* %PC.i627
  %3798 = inttoptr i64 %3795 to i32*
  %3799 = load i32, i32* %3798
  %3800 = zext i32 %3799 to i64
  store i64 %3800, i64* %RSI.i629, align 8
  store %struct.Memory* %loadMem_44001c, %struct.Memory** %MEMORY
  %loadMem_44001f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3802 = getelementptr inbounds %struct.GPR, %struct.GPR* %3801, i32 0, i32 33
  %3803 = getelementptr inbounds %struct.Reg, %struct.Reg* %3802, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %3803 to i64*
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3805 = getelementptr inbounds %struct.GPR, %struct.GPR* %3804, i32 0, i32 1
  %3806 = getelementptr inbounds %struct.Reg, %struct.Reg* %3805, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %3806 to i64*
  %3807 = load i64, i64* %PC.i625
  %3808 = add i64 %3807, 8
  store i64 %3808, i64* %PC.i625
  %3809 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %3809, i64* %RAX.i626, align 8
  store %struct.Memory* %loadMem_44001f, %struct.Memory** %MEMORY
  %loadMem_440027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 33
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %3812 to i64*
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3814 = getelementptr inbounds %struct.GPR, %struct.GPR* %3813, i32 0, i32 1
  %3815 = getelementptr inbounds %struct.Reg, %struct.Reg* %3814, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %3815 to i64*
  %3816 = load i64, i64* %RAX.i624
  %3817 = add i64 %3816, 8
  %3818 = load i64, i64* %PC.i623
  %3819 = add i64 %3818, 4
  store i64 %3819, i64* %PC.i623
  %3820 = inttoptr i64 %3817 to i64*
  %3821 = load i64, i64* %3820
  store i64 %3821, i64* %RAX.i624, align 8
  store %struct.Memory* %loadMem_440027, %struct.Memory** %MEMORY
  %loadMem_44002b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 33
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %3824 to i64*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 11
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %RDI.i621 = bitcast %union.anon* %3827 to i64*
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 15
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %3830 to i64*
  %3831 = load i64, i64* %RBP.i622
  %3832 = sub i64 %3831, 36
  %3833 = load i64, i64* %PC.i620
  %3834 = add i64 %3833, 5
  store i64 %3834, i64* %PC.i620
  %3835 = inttoptr i64 %3832 to i16*
  %3836 = load i16, i16* %3835
  %3837 = sext i16 %3836 to i64
  store i64 %3837, i64* %RDI.i621, align 8
  store %struct.Memory* %loadMem_44002b, %struct.Memory** %MEMORY
  %loadMem_440030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3839 = getelementptr inbounds %struct.GPR, %struct.GPR* %3838, i32 0, i32 33
  %3840 = getelementptr inbounds %struct.Reg, %struct.Reg* %3839, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %3840 to i64*
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3842 = getelementptr inbounds %struct.GPR, %struct.GPR* %3841, i32 0, i32 1
  %3843 = getelementptr inbounds %struct.Reg, %struct.Reg* %3842, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %3843 to i64*
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3845 = getelementptr inbounds %struct.GPR, %struct.GPR* %3844, i32 0, i32 11
  %3846 = getelementptr inbounds %struct.Reg, %struct.Reg* %3845, i32 0, i32 0
  %RDI.i619 = bitcast %union.anon* %3846 to i64*
  %3847 = load i64, i64* %RAX.i618
  %3848 = load i64, i64* %RDI.i619
  %3849 = mul i64 %3848, 8
  %3850 = add i64 %3849, %3847
  %3851 = load i64, i64* %PC.i617
  %3852 = add i64 %3851, 4
  store i64 %3852, i64* %PC.i617
  %3853 = inttoptr i64 %3850 to i64*
  %3854 = load i64, i64* %3853
  store i64 %3854, i64* %RAX.i618, align 8
  store %struct.Memory* %loadMem_440030, %struct.Memory** %MEMORY
  %loadMem_440034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 33
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %3857 to i64*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 17
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %R8D.i615 = bitcast %union.anon* %3860 to i32*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3862 = getelementptr inbounds %struct.GPR, %struct.GPR* %3861, i32 0, i32 15
  %3863 = getelementptr inbounds %struct.Reg, %struct.Reg* %3862, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %3863 to i64*
  %3864 = bitcast i32* %R8D.i615 to i64*
  %3865 = load i64, i64* %RBP.i616
  %3866 = sub i64 %3865, 12
  %3867 = load i64, i64* %PC.i614
  %3868 = add i64 %3867, 4
  store i64 %3868, i64* %PC.i614
  %3869 = inttoptr i64 %3866 to i32*
  %3870 = load i32, i32* %3869
  %3871 = zext i32 %3870 to i64
  store i64 %3871, i64* %3864, align 8
  store %struct.Memory* %loadMem_440034, %struct.Memory** %MEMORY
  %loadMem_440038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3873 = getelementptr inbounds %struct.GPR, %struct.GPR* %3872, i32 0, i32 33
  %3874 = getelementptr inbounds %struct.Reg, %struct.Reg* %3873, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %3874 to i64*
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3876 = getelementptr inbounds %struct.GPR, %struct.GPR* %3875, i32 0, i32 17
  %3877 = getelementptr inbounds %struct.Reg, %struct.Reg* %3876, i32 0, i32 0
  %R8D.i613 = bitcast %union.anon* %3877 to i32*
  %3878 = bitcast i32* %R8D.i613 to i64*
  %3879 = load i32, i32* %R8D.i613
  %3880 = zext i32 %3879 to i64
  %3881 = load i64, i64* %PC.i612
  %3882 = add i64 %3881, 4
  store i64 %3882, i64* %PC.i612
  %3883 = add i32 1, %3879
  %3884 = zext i32 %3883 to i64
  store i64 %3884, i64* %3878, align 8
  %3885 = icmp ult i32 %3883, %3879
  %3886 = icmp ult i32 %3883, 1
  %3887 = or i1 %3885, %3886
  %3888 = zext i1 %3887 to i8
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3888, i8* %3889, align 1
  %3890 = and i32 %3883, 255
  %3891 = call i32 @llvm.ctpop.i32(i32 %3890)
  %3892 = trunc i32 %3891 to i8
  %3893 = and i8 %3892, 1
  %3894 = xor i8 %3893, 1
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3894, i8* %3895, align 1
  %3896 = xor i64 1, %3880
  %3897 = trunc i64 %3896 to i32
  %3898 = xor i32 %3897, %3883
  %3899 = lshr i32 %3898, 4
  %3900 = trunc i32 %3899 to i8
  %3901 = and i8 %3900, 1
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3901, i8* %3902, align 1
  %3903 = icmp eq i32 %3883, 0
  %3904 = zext i1 %3903 to i8
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3904, i8* %3905, align 1
  %3906 = lshr i32 %3883, 31
  %3907 = trunc i32 %3906 to i8
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3907, i8* %3908, align 1
  %3909 = lshr i32 %3879, 31
  %3910 = xor i32 %3906, %3909
  %3911 = add i32 %3910, %3906
  %3912 = icmp eq i32 %3911, 2
  %3913 = zext i1 %3912 to i8
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3913, i8* %3914, align 1
  store %struct.Memory* %loadMem_440038, %struct.Memory** %MEMORY
  %loadMem_44003c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 33
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %3917 to i64*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 17
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %3920 to i32*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 11
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %RDI.i611 = bitcast %union.anon* %3923 to i64*
  %3924 = load i32, i32* %R8D.i
  %3925 = zext i32 %3924 to i64
  %3926 = load i64, i64* %PC.i610
  %3927 = add i64 %3926, 3
  store i64 %3927, i64* %PC.i610
  %3928 = shl i64 %3925, 32
  %3929 = ashr exact i64 %3928, 32
  store i64 %3929, i64* %RDI.i611, align 8
  store %struct.Memory* %loadMem_44003c, %struct.Memory** %MEMORY
  %loadMem_44003f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3931 = getelementptr inbounds %struct.GPR, %struct.GPR* %3930, i32 0, i32 33
  %3932 = getelementptr inbounds %struct.Reg, %struct.Reg* %3931, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %3932 to i64*
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3934 = getelementptr inbounds %struct.GPR, %struct.GPR* %3933, i32 0, i32 1
  %3935 = getelementptr inbounds %struct.Reg, %struct.Reg* %3934, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %3935 to i64*
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3937 = getelementptr inbounds %struct.GPR, %struct.GPR* %3936, i32 0, i32 9
  %3938 = getelementptr inbounds %struct.Reg, %struct.Reg* %3937, i32 0, i32 0
  %RSI.i608 = bitcast %union.anon* %3938 to i64*
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3940 = getelementptr inbounds %struct.GPR, %struct.GPR* %3939, i32 0, i32 11
  %3941 = getelementptr inbounds %struct.Reg, %struct.Reg* %3940, i32 0, i32 0
  %RDI.i609 = bitcast %union.anon* %3941 to i64*
  %3942 = load i64, i64* %RSI.i608
  %3943 = load i64, i64* %RAX.i607
  %3944 = load i64, i64* %RDI.i609
  %3945 = mul i64 %3944, 4
  %3946 = add i64 %3945, %3943
  %3947 = load i64, i64* %PC.i606
  %3948 = add i64 %3947, 3
  store i64 %3948, i64* %PC.i606
  %3949 = trunc i64 %3942 to i32
  %3950 = inttoptr i64 %3946 to i32*
  %3951 = load i32, i32* %3950
  %3952 = add i32 %3951, %3949
  %3953 = zext i32 %3952 to i64
  store i64 %3953, i64* %RSI.i608, align 8
  %3954 = icmp ult i32 %3952, %3949
  %3955 = icmp ult i32 %3952, %3951
  %3956 = or i1 %3954, %3955
  %3957 = zext i1 %3956 to i8
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3957, i8* %3958, align 1
  %3959 = and i32 %3952, 255
  %3960 = call i32 @llvm.ctpop.i32(i32 %3959)
  %3961 = trunc i32 %3960 to i8
  %3962 = and i8 %3961, 1
  %3963 = xor i8 %3962, 1
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3963, i8* %3964, align 1
  %3965 = xor i32 %3951, %3949
  %3966 = xor i32 %3965, %3952
  %3967 = lshr i32 %3966, 4
  %3968 = trunc i32 %3967 to i8
  %3969 = and i8 %3968, 1
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3969, i8* %3970, align 1
  %3971 = icmp eq i32 %3952, 0
  %3972 = zext i1 %3971 to i8
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3972, i8* %3973, align 1
  %3974 = lshr i32 %3952, 31
  %3975 = trunc i32 %3974 to i8
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3975, i8* %3976, align 1
  %3977 = lshr i32 %3949, 31
  %3978 = lshr i32 %3951, 31
  %3979 = xor i32 %3974, %3977
  %3980 = xor i32 %3974, %3978
  %3981 = add i32 %3979, %3980
  %3982 = icmp eq i32 %3981, 2
  %3983 = zext i1 %3982 to i8
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3983, i8* %3984, align 1
  store %struct.Memory* %loadMem_44003f, %struct.Memory** %MEMORY
  %loadMem_440042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 9
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %RSI.i605 = bitcast %union.anon* %3990 to i64*
  %3991 = load i64, i64* %RSI.i605
  %3992 = load i64, i64* %PC.i604
  %3993 = add i64 %3992, 3
  store i64 %3993, i64* %PC.i604
  %3994 = trunc i64 %3991 to i32
  %3995 = add i32 1, %3994
  %3996 = zext i32 %3995 to i64
  store i64 %3996, i64* %RSI.i605, align 8
  %3997 = icmp ult i32 %3995, %3994
  %3998 = icmp ult i32 %3995, 1
  %3999 = or i1 %3997, %3998
  %4000 = zext i1 %3999 to i8
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4000, i8* %4001, align 1
  %4002 = and i32 %3995, 255
  %4003 = call i32 @llvm.ctpop.i32(i32 %4002)
  %4004 = trunc i32 %4003 to i8
  %4005 = and i8 %4004, 1
  %4006 = xor i8 %4005, 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4006, i8* %4007, align 1
  %4008 = xor i64 1, %3991
  %4009 = trunc i64 %4008 to i32
  %4010 = xor i32 %4009, %3995
  %4011 = lshr i32 %4010, 4
  %4012 = trunc i32 %4011 to i8
  %4013 = and i8 %4012, 1
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4013, i8* %4014, align 1
  %4015 = icmp eq i32 %3995, 0
  %4016 = zext i1 %4015 to i8
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4016, i8* %4017, align 1
  %4018 = lshr i32 %3995, 31
  %4019 = trunc i32 %4018 to i8
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4019, i8* %4020, align 1
  %4021 = lshr i32 %3994, 31
  %4022 = xor i32 %4018, %4021
  %4023 = add i32 %4022, %4018
  %4024 = icmp eq i32 %4023, 2
  %4025 = zext i1 %4024 to i8
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4025, i8* %4026, align 1
  store %struct.Memory* %loadMem_440042, %struct.Memory** %MEMORY
  %loadMem_440045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4028 = getelementptr inbounds %struct.GPR, %struct.GPR* %4027, i32 0, i32 33
  %4029 = getelementptr inbounds %struct.Reg, %struct.Reg* %4028, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %4029 to i64*
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 9
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %RSI.i603 = bitcast %union.anon* %4032 to i64*
  %4033 = load i64, i64* %RSI.i603
  %4034 = load i64, i64* %PC.i602
  %4035 = add i64 %4034, 2
  store i64 %4035, i64* %PC.i602
  %4036 = shl i64 %4033, 32
  %4037 = ashr i64 %4036, 33
  %4038 = trunc i64 %4033 to i8
  %4039 = and i8 %4038, 1
  %4040 = trunc i64 %4037 to i32
  %4041 = and i64 %4037, 4294967295
  store i64 %4041, i64* %RSI.i603, align 8
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4039, i8* %4042, align 1
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4044 = and i32 %4040, 255
  %4045 = call i32 @llvm.ctpop.i32(i32 %4044)
  %4046 = trunc i32 %4045 to i8
  %4047 = and i8 %4046, 1
  %4048 = xor i8 %4047, 1
  store i8 %4048, i8* %4043, align 1
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4049, align 1
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4051 = icmp eq i32 %4040, 0
  %4052 = zext i1 %4051 to i8
  store i8 %4052, i8* %4050, align 1
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4054 = lshr i32 %4040, 31
  %4055 = trunc i32 %4054 to i8
  store i8 %4055, i8* %4053, align 1
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4056, align 1
  store %struct.Memory* %loadMem_440045, %struct.Memory** %MEMORY
  %loadMem_440048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %4059 to i64*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 9
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %ESI.i600 = bitcast %union.anon* %4062 to i32*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 7
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %RDX.i601 = bitcast %union.anon* %4065 to i64*
  %4066 = load i64, i64* %RDX.i601
  %4067 = load i32, i32* %ESI.i600
  %4068 = zext i32 %4067 to i64
  %4069 = load i64, i64* %PC.i599
  %4070 = add i64 %4069, 2
  store i64 %4070, i64* %PC.i599
  %4071 = trunc i64 %4066 to i32
  %4072 = add i32 %4067, %4071
  %4073 = zext i32 %4072 to i64
  store i64 %4073, i64* %RDX.i601, align 8
  %4074 = icmp ult i32 %4072, %4071
  %4075 = icmp ult i32 %4072, %4067
  %4076 = or i1 %4074, %4075
  %4077 = zext i1 %4076 to i8
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4077, i8* %4078, align 1
  %4079 = and i32 %4072, 255
  %4080 = call i32 @llvm.ctpop.i32(i32 %4079)
  %4081 = trunc i32 %4080 to i8
  %4082 = and i8 %4081, 1
  %4083 = xor i8 %4082, 1
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4083, i8* %4084, align 1
  %4085 = xor i64 %4068, %4066
  %4086 = trunc i64 %4085 to i32
  %4087 = xor i32 %4086, %4072
  %4088 = lshr i32 %4087, 4
  %4089 = trunc i32 %4088 to i8
  %4090 = and i8 %4089, 1
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4090, i8* %4091, align 1
  %4092 = icmp eq i32 %4072, 0
  %4093 = zext i1 %4092 to i8
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4093, i8* %4094, align 1
  %4095 = lshr i32 %4072, 31
  %4096 = trunc i32 %4095 to i8
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4096, i8* %4097, align 1
  %4098 = lshr i32 %4071, 31
  %4099 = lshr i32 %4067, 31
  %4100 = xor i32 %4095, %4098
  %4101 = xor i32 %4095, %4099
  %4102 = add i32 %4100, %4101
  %4103 = icmp eq i32 %4102, 2
  %4104 = zext i1 %4103 to i8
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4104, i8* %4105, align 1
  store %struct.Memory* %loadMem_440048, %struct.Memory** %MEMORY
  %loadMem_44004a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 33
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 7
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %EDX.i597 = bitcast %union.anon* %4111 to i32*
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 11
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %RDI.i598 = bitcast %union.anon* %4114 to i64*
  %4115 = load i32, i32* %EDX.i597
  %4116 = zext i32 %4115 to i64
  %4117 = load i64, i64* %PC.i596
  %4118 = add i64 %4117, 2
  store i64 %4118, i64* %PC.i596
  %4119 = and i64 %4116, 4294967295
  store i64 %4119, i64* %RDI.i598, align 8
  store %struct.Memory* %loadMem_44004a, %struct.Memory** %MEMORY
  %loadMem1_44004c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4121 = getelementptr inbounds %struct.GPR, %struct.GPR* %4120, i32 0, i32 33
  %4122 = getelementptr inbounds %struct.Reg, %struct.Reg* %4121, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %4122 to i64*
  %4123 = load i64, i64* %PC.i595
  %4124 = add i64 %4123, -18748
  %4125 = load i64, i64* %PC.i595
  %4126 = add i64 %4125, 5
  %4127 = load i64, i64* %PC.i595
  %4128 = add i64 %4127, 5
  store i64 %4128, i64* %PC.i595
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4130 = load i64, i64* %4129, align 8
  %4131 = add i64 %4130, -8
  %4132 = inttoptr i64 %4131 to i64*
  store i64 %4126, i64* %4132
  store i64 %4131, i64* %4129, align 8
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4124, i64* %4133, align 8
  store %struct.Memory* %loadMem1_44004c, %struct.Memory** %MEMORY
  %loadMem2_44004c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44004c = load i64, i64* %3
  %call2_44004c = call %struct.Memory* @sub_43b710.clip1a_chr(%struct.State* %0, i64 %loadPC_44004c, %struct.Memory* %loadMem2_44004c)
  store %struct.Memory* %call2_44004c, %struct.Memory** %MEMORY
  %loadMem_440051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 33
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %4136 to i64*
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4138 = getelementptr inbounds %struct.GPR, %struct.GPR* %4137, i32 0, i32 1
  %4139 = getelementptr inbounds %struct.Reg, %struct.Reg* %4138, i32 0, i32 0
  %AX.i593 = bitcast %union.anon* %4139 to i16*
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 19
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %R9W.i594 = bitcast %union.anon* %4142 to i16*
  %4143 = load i16, i16* %AX.i593
  %4144 = zext i16 %4143 to i64
  %4145 = load i64, i64* %PC.i592
  %4146 = add i64 %4145, 4
  store i64 %4146, i64* %PC.i592
  store i16 %4143, i16* %R9W.i594, align 2
  store %struct.Memory* %loadMem_440051, %struct.Memory** %MEMORY
  %loadMem_440055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 33
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 21
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %R10.i591 = bitcast %union.anon* %4152 to i64*
  %4153 = load i64, i64* %PC.i590
  %4154 = add i64 %4153, 8
  store i64 %4154, i64* %PC.i590
  %4155 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4155, i64* %R10.i591, align 8
  store %struct.Memory* %loadMem_440055, %struct.Memory** %MEMORY
  %loadMem_44005d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4157 = getelementptr inbounds %struct.GPR, %struct.GPR* %4156, i32 0, i32 33
  %4158 = getelementptr inbounds %struct.Reg, %struct.Reg* %4157, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %4158 to i64*
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4160 = getelementptr inbounds %struct.GPR, %struct.GPR* %4159, i32 0, i32 21
  %4161 = getelementptr inbounds %struct.Reg, %struct.Reg* %4160, i32 0, i32 0
  %R10.i589 = bitcast %union.anon* %4161 to i64*
  %4162 = load i64, i64* %R10.i589
  %4163 = load i64, i64* %PC.i588
  %4164 = add i64 %4163, 7
  store i64 %4164, i64* %PC.i588
  %4165 = add i64 12600, %4162
  store i64 %4165, i64* %R10.i589, align 8
  %4166 = icmp ult i64 %4165, %4162
  %4167 = icmp ult i64 %4165, 12600
  %4168 = or i1 %4166, %4167
  %4169 = zext i1 %4168 to i8
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4169, i8* %4170, align 1
  %4171 = trunc i64 %4165 to i32
  %4172 = and i32 %4171, 255
  %4173 = call i32 @llvm.ctpop.i32(i32 %4172)
  %4174 = trunc i32 %4173 to i8
  %4175 = and i8 %4174, 1
  %4176 = xor i8 %4175, 1
  %4177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4176, i8* %4177, align 1
  %4178 = xor i64 12600, %4162
  %4179 = xor i64 %4178, %4165
  %4180 = lshr i64 %4179, 4
  %4181 = trunc i64 %4180 to i8
  %4182 = and i8 %4181, 1
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4182, i8* %4183, align 1
  %4184 = icmp eq i64 %4165, 0
  %4185 = zext i1 %4184 to i8
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4185, i8* %4186, align 1
  %4187 = lshr i64 %4165, 63
  %4188 = trunc i64 %4187 to i8
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4188, i8* %4189, align 1
  %4190 = lshr i64 %4162, 63
  %4191 = xor i64 %4187, %4190
  %4192 = add i64 %4191, %4187
  %4193 = icmp eq i64 %4192, 2
  %4194 = zext i1 %4193 to i8
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4194, i8* %4195, align 1
  store %struct.Memory* %loadMem_44005d, %struct.Memory** %MEMORY
  %loadMem_440064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 33
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %4198 to i64*
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 15
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %4201 to i64*
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 23
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %R11.i587 = bitcast %union.anon* %4204 to i64*
  %4205 = load i64, i64* %RBP.i586
  %4206 = sub i64 %4205, 40
  %4207 = load i64, i64* %PC.i585
  %4208 = add i64 %4207, 4
  store i64 %4208, i64* %PC.i585
  %4209 = inttoptr i64 %4206 to i32*
  %4210 = load i32, i32* %4209
  %4211 = sext i32 %4210 to i64
  store i64 %4211, i64* %R11.i587, align 8
  store %struct.Memory* %loadMem_440064, %struct.Memory** %MEMORY
  %loadMem_440068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 33
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %4214 to i64*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 23
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %R11.i584 = bitcast %union.anon* %4217 to i64*
  %4218 = load i64, i64* %R11.i584
  %4219 = load i64, i64* %PC.i583
  %4220 = add i64 %4219, 4
  store i64 %4220, i64* %PC.i583
  %4221 = shl i64 %4218, 4
  %4222 = icmp slt i64 %4221, 0
  %4223 = shl i64 %4221, 1
  store i64 %4223, i64* %R11.i584, align 8
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4225 = zext i1 %4222 to i8
  store i8 %4225, i8* %4224, align 1
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4227 = trunc i64 %4223 to i32
  %4228 = and i32 %4227, 254
  %4229 = call i32 @llvm.ctpop.i32(i32 %4228)
  %4230 = trunc i32 %4229 to i8
  %4231 = and i8 %4230, 1
  %4232 = xor i8 %4231, 1
  store i8 %4232, i8* %4226, align 1
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4233, align 1
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4235 = icmp eq i64 %4223, 0
  %4236 = zext i1 %4235 to i8
  store i8 %4236, i8* %4234, align 1
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4238 = lshr i64 %4223, 63
  %4239 = trunc i64 %4238 to i8
  store i8 %4239, i8* %4237, align 1
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4240, align 1
  store %struct.Memory* %loadMem_440068, %struct.Memory** %MEMORY
  %loadMem_44006c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 33
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %4243 to i64*
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 21
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %R10.i581 = bitcast %union.anon* %4246 to i64*
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 23
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %R11.i582 = bitcast %union.anon* %4249 to i64*
  %4250 = load i64, i64* %R10.i581
  %4251 = load i64, i64* %R11.i582
  %4252 = load i64, i64* %PC.i580
  %4253 = add i64 %4252, 3
  store i64 %4253, i64* %PC.i580
  %4254 = add i64 %4251, %4250
  store i64 %4254, i64* %R10.i581, align 8
  %4255 = icmp ult i64 %4254, %4250
  %4256 = icmp ult i64 %4254, %4251
  %4257 = or i1 %4255, %4256
  %4258 = zext i1 %4257 to i8
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4258, i8* %4259, align 1
  %4260 = trunc i64 %4254 to i32
  %4261 = and i32 %4260, 255
  %4262 = call i32 @llvm.ctpop.i32(i32 %4261)
  %4263 = trunc i32 %4262 to i8
  %4264 = and i8 %4263, 1
  %4265 = xor i8 %4264, 1
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4265, i8* %4266, align 1
  %4267 = xor i64 %4251, %4250
  %4268 = xor i64 %4267, %4254
  %4269 = lshr i64 %4268, 4
  %4270 = trunc i64 %4269 to i8
  %4271 = and i8 %4270, 1
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4271, i8* %4272, align 1
  %4273 = icmp eq i64 %4254, 0
  %4274 = zext i1 %4273 to i8
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4274, i8* %4275, align 1
  %4276 = lshr i64 %4254, 63
  %4277 = trunc i64 %4276 to i8
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4277, i8* %4278, align 1
  %4279 = lshr i64 %4250, 63
  %4280 = lshr i64 %4251, 63
  %4281 = xor i64 %4276, %4279
  %4282 = xor i64 %4276, %4280
  %4283 = add i64 %4281, %4282
  %4284 = icmp eq i64 %4283, 2
  %4285 = zext i1 %4284 to i8
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4285, i8* %4286, align 1
  store %struct.Memory* %loadMem_44006c, %struct.Memory** %MEMORY
  %loadMem_44006f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 33
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %4289 to i64*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 15
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %RBP.i578 = bitcast %union.anon* %4292 to i64*
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 23
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %R11.i579 = bitcast %union.anon* %4295 to i64*
  %4296 = load i64, i64* %RBP.i578
  %4297 = sub i64 %4296, 44
  %4298 = load i64, i64* %PC.i577
  %4299 = add i64 %4298, 4
  store i64 %4299, i64* %PC.i577
  %4300 = inttoptr i64 %4297 to i32*
  %4301 = load i32, i32* %4300
  %4302 = sext i32 %4301 to i64
  store i64 %4302, i64* %R11.i579, align 8
  store %struct.Memory* %loadMem_44006f, %struct.Memory** %MEMORY
  %loadMem_440073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4304 = getelementptr inbounds %struct.GPR, %struct.GPR* %4303, i32 0, i32 33
  %4305 = getelementptr inbounds %struct.Reg, %struct.Reg* %4304, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %4305 to i64*
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 19
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %4308 to i16*
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4310 = getelementptr inbounds %struct.GPR, %struct.GPR* %4309, i32 0, i32 21
  %4311 = getelementptr inbounds %struct.Reg, %struct.Reg* %4310, i32 0, i32 0
  %R10.i = bitcast %union.anon* %4311 to i64*
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4313 = getelementptr inbounds %struct.GPR, %struct.GPR* %4312, i32 0, i32 23
  %4314 = getelementptr inbounds %struct.Reg, %struct.Reg* %4313, i32 0, i32 0
  %R11.i = bitcast %union.anon* %4314 to i64*
  %4315 = load i64, i64* %R10.i
  %4316 = load i64, i64* %R11.i
  %4317 = mul i64 %4316, 2
  %4318 = add i64 %4317, %4315
  %4319 = load i16, i16* %R9W.i
  %4320 = zext i16 %4319 to i64
  %4321 = load i64, i64* %PC.i576
  %4322 = add i64 %4321, 5
  store i64 %4322, i64* %PC.i576
  %4323 = inttoptr i64 %4318 to i16*
  store i16 %4319, i16* %4323
  store %struct.Memory* %loadMem_440073, %struct.Memory** %MEMORY
  %loadMem_440078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4325 = getelementptr inbounds %struct.GPR, %struct.GPR* %4324, i32 0, i32 33
  %4326 = getelementptr inbounds %struct.Reg, %struct.Reg* %4325, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %4326 to i64*
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4328 = getelementptr inbounds %struct.GPR, %struct.GPR* %4327, i32 0, i32 1
  %4329 = getelementptr inbounds %struct.Reg, %struct.Reg* %4328, i32 0, i32 0
  %RAX.i574 = bitcast %union.anon* %4329 to i64*
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4331 = getelementptr inbounds %struct.GPR, %struct.GPR* %4330, i32 0, i32 15
  %4332 = getelementptr inbounds %struct.Reg, %struct.Reg* %4331, i32 0, i32 0
  %RBP.i575 = bitcast %union.anon* %4332 to i64*
  %4333 = load i64, i64* %RBP.i575
  %4334 = sub i64 %4333, 40
  %4335 = load i64, i64* %PC.i573
  %4336 = add i64 %4335, 3
  store i64 %4336, i64* %PC.i573
  %4337 = inttoptr i64 %4334 to i32*
  %4338 = load i32, i32* %4337
  %4339 = zext i32 %4338 to i64
  store i64 %4339, i64* %RAX.i574, align 8
  store %struct.Memory* %loadMem_440078, %struct.Memory** %MEMORY
  %loadMem_44007b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4341 = getelementptr inbounds %struct.GPR, %struct.GPR* %4340, i32 0, i32 33
  %4342 = getelementptr inbounds %struct.Reg, %struct.Reg* %4341, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %4342 to i64*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 1
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %RAX.i572 = bitcast %union.anon* %4345 to i64*
  %4346 = load i64, i64* %RAX.i572
  %4347 = load i64, i64* %PC.i571
  %4348 = add i64 %4347, 3
  store i64 %4348, i64* %PC.i571
  %4349 = trunc i64 %4346 to i32
  %4350 = add i32 1, %4349
  %4351 = zext i32 %4350 to i64
  store i64 %4351, i64* %RAX.i572, align 8
  %4352 = icmp ult i32 %4350, %4349
  %4353 = icmp ult i32 %4350, 1
  %4354 = or i1 %4352, %4353
  %4355 = zext i1 %4354 to i8
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4355, i8* %4356, align 1
  %4357 = and i32 %4350, 255
  %4358 = call i32 @llvm.ctpop.i32(i32 %4357)
  %4359 = trunc i32 %4358 to i8
  %4360 = and i8 %4359, 1
  %4361 = xor i8 %4360, 1
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4361, i8* %4362, align 1
  %4363 = xor i64 1, %4346
  %4364 = trunc i64 %4363 to i32
  %4365 = xor i32 %4364, %4350
  %4366 = lshr i32 %4365, 4
  %4367 = trunc i32 %4366 to i8
  %4368 = and i8 %4367, 1
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4368, i8* %4369, align 1
  %4370 = icmp eq i32 %4350, 0
  %4371 = zext i1 %4370 to i8
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4371, i8* %4372, align 1
  %4373 = lshr i32 %4350, 31
  %4374 = trunc i32 %4373 to i8
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4374, i8* %4375, align 1
  %4376 = lshr i32 %4349, 31
  %4377 = xor i32 %4373, %4376
  %4378 = add i32 %4377, %4373
  %4379 = icmp eq i32 %4378, 2
  %4380 = zext i1 %4379 to i8
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4380, i8* %4381, align 1
  store %struct.Memory* %loadMem_44007b, %struct.Memory** %MEMORY
  %loadMem_44007e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4383 = getelementptr inbounds %struct.GPR, %struct.GPR* %4382, i32 0, i32 33
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %4384 to i64*
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 1
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %EAX.i569 = bitcast %union.anon* %4387 to i32*
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4389 = getelementptr inbounds %struct.GPR, %struct.GPR* %4388, i32 0, i32 15
  %4390 = getelementptr inbounds %struct.Reg, %struct.Reg* %4389, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %4390 to i64*
  %4391 = load i64, i64* %RBP.i570
  %4392 = sub i64 %4391, 40
  %4393 = load i32, i32* %EAX.i569
  %4394 = zext i32 %4393 to i64
  %4395 = load i64, i64* %PC.i568
  %4396 = add i64 %4395, 3
  store i64 %4396, i64* %PC.i568
  %4397 = inttoptr i64 %4392 to i32*
  store i32 %4393, i32* %4397
  store %struct.Memory* %loadMem_44007e, %struct.Memory** %MEMORY
  %loadMem_440081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 33
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %4400 to i64*
  %4401 = load i64, i64* %PC.i567
  %4402 = add i64 %4401, -289
  %4403 = load i64, i64* %PC.i567
  %4404 = add i64 %4403, 5
  store i64 %4404, i64* %PC.i567
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4402, i64* %4405, align 8
  store %struct.Memory* %loadMem_440081, %struct.Memory** %MEMORY
  br label %block_.L_43ff60

block_.L_440086:                                  ; preds = %block_.L_43ff60
  %loadMem_440086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4407 = getelementptr inbounds %struct.GPR, %struct.GPR* %4406, i32 0, i32 33
  %4408 = getelementptr inbounds %struct.Reg, %struct.Reg* %4407, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %4408 to i64*
  %4409 = load i64, i64* %PC.i566
  %4410 = add i64 %4409, 5
  %4411 = load i64, i64* %PC.i566
  %4412 = add i64 %4411, 5
  store i64 %4412, i64* %PC.i566
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4410, i64* %4413, align 8
  store %struct.Memory* %loadMem_440086, %struct.Memory** %MEMORY
  br label %block_.L_44008b

block_.L_44008b:                                  ; preds = %block_.L_440086
  %loadMem_44008b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4415 = getelementptr inbounds %struct.GPR, %struct.GPR* %4414, i32 0, i32 33
  %4416 = getelementptr inbounds %struct.Reg, %struct.Reg* %4415, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %4416 to i64*
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4418 = getelementptr inbounds %struct.GPR, %struct.GPR* %4417, i32 0, i32 1
  %4419 = getelementptr inbounds %struct.Reg, %struct.Reg* %4418, i32 0, i32 0
  %RAX.i564 = bitcast %union.anon* %4419 to i64*
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4421 = getelementptr inbounds %struct.GPR, %struct.GPR* %4420, i32 0, i32 15
  %4422 = getelementptr inbounds %struct.Reg, %struct.Reg* %4421, i32 0, i32 0
  %RBP.i565 = bitcast %union.anon* %4422 to i64*
  %4423 = load i64, i64* %RBP.i565
  %4424 = sub i64 %4423, 44
  %4425 = load i64, i64* %PC.i563
  %4426 = add i64 %4425, 3
  store i64 %4426, i64* %PC.i563
  %4427 = inttoptr i64 %4424 to i32*
  %4428 = load i32, i32* %4427
  %4429 = zext i32 %4428 to i64
  store i64 %4429, i64* %RAX.i564, align 8
  store %struct.Memory* %loadMem_44008b, %struct.Memory** %MEMORY
  %loadMem_44008e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 33
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %4432 to i64*
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 1
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %4435 to i64*
  %4436 = load i64, i64* %RAX.i562
  %4437 = load i64, i64* %PC.i561
  %4438 = add i64 %4437, 3
  store i64 %4438, i64* %PC.i561
  %4439 = trunc i64 %4436 to i32
  %4440 = add i32 1, %4439
  %4441 = zext i32 %4440 to i64
  store i64 %4441, i64* %RAX.i562, align 8
  %4442 = icmp ult i32 %4440, %4439
  %4443 = icmp ult i32 %4440, 1
  %4444 = or i1 %4442, %4443
  %4445 = zext i1 %4444 to i8
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4445, i8* %4446, align 1
  %4447 = and i32 %4440, 255
  %4448 = call i32 @llvm.ctpop.i32(i32 %4447)
  %4449 = trunc i32 %4448 to i8
  %4450 = and i8 %4449, 1
  %4451 = xor i8 %4450, 1
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4451, i8* %4452, align 1
  %4453 = xor i64 1, %4436
  %4454 = trunc i64 %4453 to i32
  %4455 = xor i32 %4454, %4440
  %4456 = lshr i32 %4455, 4
  %4457 = trunc i32 %4456 to i8
  %4458 = and i8 %4457, 1
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4458, i8* %4459, align 1
  %4460 = icmp eq i32 %4440, 0
  %4461 = zext i1 %4460 to i8
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4461, i8* %4462, align 1
  %4463 = lshr i32 %4440, 31
  %4464 = trunc i32 %4463 to i8
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4464, i8* %4465, align 1
  %4466 = lshr i32 %4439, 31
  %4467 = xor i32 %4463, %4466
  %4468 = add i32 %4467, %4463
  %4469 = icmp eq i32 %4468, 2
  %4470 = zext i1 %4469 to i8
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4470, i8* %4471, align 1
  store %struct.Memory* %loadMem_44008e, %struct.Memory** %MEMORY
  %loadMem_440091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 33
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %4474 to i64*
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4476 = getelementptr inbounds %struct.GPR, %struct.GPR* %4475, i32 0, i32 1
  %4477 = getelementptr inbounds %struct.Reg, %struct.Reg* %4476, i32 0, i32 0
  %EAX.i559 = bitcast %union.anon* %4477 to i32*
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 15
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %4480 to i64*
  %4481 = load i64, i64* %RBP.i560
  %4482 = sub i64 %4481, 44
  %4483 = load i32, i32* %EAX.i559
  %4484 = zext i32 %4483 to i64
  %4485 = load i64, i64* %PC.i558
  %4486 = add i64 %4485, 3
  store i64 %4486, i64* %PC.i558
  %4487 = inttoptr i64 %4482 to i32*
  store i32 %4483, i32* %4487
  store %struct.Memory* %loadMem_440091, %struct.Memory** %MEMORY
  %loadMem_440094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 33
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %4490 to i64*
  %4491 = load i64, i64* %PC.i557
  %4492 = add i64 %4491, -326
  %4493 = load i64, i64* %PC.i557
  %4494 = add i64 %4493, 5
  store i64 %4494, i64* %PC.i557
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4492, i64* %4495, align 8
  store %struct.Memory* %loadMem_440094, %struct.Memory** %MEMORY
  br label %block_.L_43ff4e

block_.L_440099:                                  ; preds = %block_.L_43ff4e
  %loadMem_440099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4497 = getelementptr inbounds %struct.GPR, %struct.GPR* %4496, i32 0, i32 33
  %4498 = getelementptr inbounds %struct.Reg, %struct.Reg* %4497, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %4498 to i64*
  %4499 = load i64, i64* %PC.i556
  %4500 = add i64 %4499, 458
  %4501 = load i64, i64* %PC.i556
  %4502 = add i64 %4501, 5
  store i64 %4502, i64* %PC.i556
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4500, i64* %4503, align 8
  store %struct.Memory* %loadMem_440099, %struct.Memory** %MEMORY
  br label %block_.L_440263

block_.L_44009e:                                  ; preds = %block_43ff3e
  %loadMem_44009e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 33
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %4506 to i64*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 15
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %4509 to i64*
  %4510 = load i64, i64* %RBP.i555
  %4511 = sub i64 %4510, 24
  %4512 = load i64, i64* %PC.i554
  %4513 = add i64 %4512, 4
  store i64 %4513, i64* %PC.i554
  %4514 = inttoptr i64 %4511 to i32*
  %4515 = load i32, i32* %4514
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4516, align 1
  %4517 = and i32 %4515, 255
  %4518 = call i32 @llvm.ctpop.i32(i32 %4517)
  %4519 = trunc i32 %4518 to i8
  %4520 = and i8 %4519, 1
  %4521 = xor i8 %4520, 1
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4521, i8* %4522, align 1
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4523, align 1
  %4524 = icmp eq i32 %4515, 0
  %4525 = zext i1 %4524 to i8
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4525, i8* %4526, align 1
  %4527 = lshr i32 %4515, 31
  %4528 = trunc i32 %4527 to i8
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4528, i8* %4529, align 1
  %4530 = lshr i32 %4515, 31
  %4531 = xor i32 %4527, %4530
  %4532 = add i32 %4531, %4530
  %4533 = icmp eq i32 %4532, 2
  %4534 = zext i1 %4533 to i8
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4534, i8* %4535, align 1
  store %struct.Memory* %loadMem_44009e, %struct.Memory** %MEMORY
  %loadMem_4400a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4537 = getelementptr inbounds %struct.GPR, %struct.GPR* %4536, i32 0, i32 33
  %4538 = getelementptr inbounds %struct.Reg, %struct.Reg* %4537, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %4538 to i64*
  %4539 = load i64, i64* %PC.i553
  %4540 = add i64 %4539, 224
  %4541 = load i64, i64* %PC.i553
  %4542 = add i64 %4541, 6
  %4543 = load i64, i64* %PC.i553
  %4544 = add i64 %4543, 6
  store i64 %4544, i64* %PC.i553
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4546 = load i8, i8* %4545, align 1
  %4547 = icmp eq i8 %4546, 0
  %4548 = zext i1 %4547 to i8
  store i8 %4548, i8* %BRANCH_TAKEN, align 1
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4550 = select i1 %4547, i64 %4540, i64 %4542
  store i64 %4550, i64* %4549, align 8
  store %struct.Memory* %loadMem_4400a2, %struct.Memory** %MEMORY
  %loadBr_4400a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4400a2 = icmp eq i8 %loadBr_4400a2, 1
  br i1 %cmpBr_4400a2, label %block_.L_440182, label %block_4400a8

block_4400a8:                                     ; preds = %block_.L_44009e
  %loadMem_4400a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 33
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %4553 to i64*
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 1
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %4556 to i64*
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 15
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %4559 to i64*
  %4560 = load i64, i64* %RBP.i552
  %4561 = sub i64 %4560, 20
  %4562 = load i64, i64* %PC.i550
  %4563 = add i64 %4562, 3
  store i64 %4563, i64* %PC.i550
  %4564 = inttoptr i64 %4561 to i32*
  %4565 = load i32, i32* %4564
  %4566 = zext i32 %4565 to i64
  store i64 %4566, i64* %RAX.i551, align 8
  store %struct.Memory* %loadMem_4400a8, %struct.Memory** %MEMORY
  %loadMem_4400ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 33
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %4569 to i64*
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4571 = getelementptr inbounds %struct.GPR, %struct.GPR* %4570, i32 0, i32 1
  %4572 = getelementptr inbounds %struct.Reg, %struct.Reg* %4571, i32 0, i32 0
  %EAX.i548 = bitcast %union.anon* %4572 to i32*
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 15
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %4575 to i64*
  %4576 = load i64, i64* %RBP.i549
  %4577 = sub i64 %4576, 44
  %4578 = load i32, i32* %EAX.i548
  %4579 = zext i32 %4578 to i64
  %4580 = load i64, i64* %PC.i547
  %4581 = add i64 %4580, 3
  store i64 %4581, i64* %PC.i547
  %4582 = inttoptr i64 %4577 to i32*
  store i32 %4578, i32* %4582
  store %struct.Memory* %loadMem_4400ab, %struct.Memory** %MEMORY
  br label %block_.L_4400ae

block_.L_4400ae:                                  ; preds = %block_.L_44016f, %block_4400a8
  %loadMem_4400ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 33
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %4585 to i64*
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4587 = getelementptr inbounds %struct.GPR, %struct.GPR* %4586, i32 0, i32 1
  %4588 = getelementptr inbounds %struct.Reg, %struct.Reg* %4587, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %4588 to i64*
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4590 = getelementptr inbounds %struct.GPR, %struct.GPR* %4589, i32 0, i32 15
  %4591 = getelementptr inbounds %struct.Reg, %struct.Reg* %4590, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %4591 to i64*
  %4592 = load i64, i64* %RBP.i546
  %4593 = sub i64 %4592, 44
  %4594 = load i64, i64* %PC.i544
  %4595 = add i64 %4594, 3
  store i64 %4595, i64* %PC.i544
  %4596 = inttoptr i64 %4593 to i32*
  %4597 = load i32, i32* %4596
  %4598 = zext i32 %4597 to i64
  store i64 %4598, i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_4400ae, %struct.Memory** %MEMORY
  %loadMem_4400b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4600 = getelementptr inbounds %struct.GPR, %struct.GPR* %4599, i32 0, i32 33
  %4601 = getelementptr inbounds %struct.Reg, %struct.Reg* %4600, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %4601 to i64*
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4603 = getelementptr inbounds %struct.GPR, %struct.GPR* %4602, i32 0, i32 1
  %4604 = getelementptr inbounds %struct.Reg, %struct.Reg* %4603, i32 0, i32 0
  %EAX.i542 = bitcast %union.anon* %4604 to i32*
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4606 = getelementptr inbounds %struct.GPR, %struct.GPR* %4605, i32 0, i32 15
  %4607 = getelementptr inbounds %struct.Reg, %struct.Reg* %4606, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %4607 to i64*
  %4608 = load i32, i32* %EAX.i542
  %4609 = zext i32 %4608 to i64
  %4610 = load i64, i64* %RBP.i543
  %4611 = sub i64 %4610, 52
  %4612 = load i64, i64* %PC.i541
  %4613 = add i64 %4612, 3
  store i64 %4613, i64* %PC.i541
  %4614 = inttoptr i64 %4611 to i32*
  %4615 = load i32, i32* %4614
  %4616 = sub i32 %4608, %4615
  %4617 = icmp ult i32 %4608, %4615
  %4618 = zext i1 %4617 to i8
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4618, i8* %4619, align 1
  %4620 = and i32 %4616, 255
  %4621 = call i32 @llvm.ctpop.i32(i32 %4620)
  %4622 = trunc i32 %4621 to i8
  %4623 = and i8 %4622, 1
  %4624 = xor i8 %4623, 1
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4624, i8* %4625, align 1
  %4626 = xor i32 %4615, %4608
  %4627 = xor i32 %4626, %4616
  %4628 = lshr i32 %4627, 4
  %4629 = trunc i32 %4628 to i8
  %4630 = and i8 %4629, 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4630, i8* %4631, align 1
  %4632 = icmp eq i32 %4616, 0
  %4633 = zext i1 %4632 to i8
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4633, i8* %4634, align 1
  %4635 = lshr i32 %4616, 31
  %4636 = trunc i32 %4635 to i8
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4636, i8* %4637, align 1
  %4638 = lshr i32 %4608, 31
  %4639 = lshr i32 %4615, 31
  %4640 = xor i32 %4639, %4638
  %4641 = xor i32 %4635, %4638
  %4642 = add i32 %4641, %4640
  %4643 = icmp eq i32 %4642, 2
  %4644 = zext i1 %4643 to i8
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4644, i8* %4645, align 1
  store %struct.Memory* %loadMem_4400b1, %struct.Memory** %MEMORY
  %loadMem_4400b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 33
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %4648 to i64*
  %4649 = load i64, i64* %PC.i540
  %4650 = add i64 %4649, 201
  %4651 = load i64, i64* %PC.i540
  %4652 = add i64 %4651, 6
  %4653 = load i64, i64* %PC.i540
  %4654 = add i64 %4653, 6
  store i64 %4654, i64* %PC.i540
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4656 = load i8, i8* %4655, align 1
  %4657 = icmp ne i8 %4656, 0
  %4658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4659 = load i8, i8* %4658, align 1
  %4660 = icmp ne i8 %4659, 0
  %4661 = xor i1 %4657, %4660
  %4662 = xor i1 %4661, true
  %4663 = zext i1 %4662 to i8
  store i8 %4663, i8* %BRANCH_TAKEN, align 1
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4665 = select i1 %4661, i64 %4652, i64 %4650
  store i64 %4665, i64* %4664, align 8
  store %struct.Memory* %loadMem_4400b4, %struct.Memory** %MEMORY
  %loadBr_4400b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4400b4 = icmp eq i8 %loadBr_4400b4, 1
  br i1 %cmpBr_4400b4, label %block_.L_44017d, label %block_4400ba

block_4400ba:                                     ; preds = %block_.L_4400ae
  %loadMem_4400ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4667 = getelementptr inbounds %struct.GPR, %struct.GPR* %4666, i32 0, i32 33
  %4668 = getelementptr inbounds %struct.Reg, %struct.Reg* %4667, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %4668 to i64*
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4670 = getelementptr inbounds %struct.GPR, %struct.GPR* %4669, i32 0, i32 1
  %4671 = getelementptr inbounds %struct.Reg, %struct.Reg* %4670, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %4671 to i64*
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4673 = getelementptr inbounds %struct.GPR, %struct.GPR* %4672, i32 0, i32 15
  %4674 = getelementptr inbounds %struct.Reg, %struct.Reg* %4673, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %4674 to i64*
  %4675 = load i64, i64* %RBP.i539
  %4676 = sub i64 %4675, 16
  %4677 = load i64, i64* %PC.i537
  %4678 = add i64 %4677, 3
  store i64 %4678, i64* %PC.i537
  %4679 = inttoptr i64 %4676 to i32*
  %4680 = load i32, i32* %4679
  %4681 = zext i32 %4680 to i64
  store i64 %4681, i64* %RAX.i538, align 8
  store %struct.Memory* %loadMem_4400ba, %struct.Memory** %MEMORY
  %loadMem_4400bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4683 = getelementptr inbounds %struct.GPR, %struct.GPR* %4682, i32 0, i32 33
  %4684 = getelementptr inbounds %struct.Reg, %struct.Reg* %4683, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %4684 to i64*
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 1
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %EAX.i535 = bitcast %union.anon* %4687 to i32*
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4689 = getelementptr inbounds %struct.GPR, %struct.GPR* %4688, i32 0, i32 15
  %4690 = getelementptr inbounds %struct.Reg, %struct.Reg* %4689, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %4690 to i64*
  %4691 = load i64, i64* %RBP.i536
  %4692 = sub i64 %4691, 40
  %4693 = load i32, i32* %EAX.i535
  %4694 = zext i32 %4693 to i64
  %4695 = load i64, i64* %PC.i534
  %4696 = add i64 %4695, 3
  store i64 %4696, i64* %PC.i534
  %4697 = inttoptr i64 %4692 to i32*
  store i32 %4693, i32* %4697
  store %struct.Memory* %loadMem_4400bd, %struct.Memory** %MEMORY
  br label %block_.L_4400c0

block_.L_4400c0:                                  ; preds = %routine_sarl__cl___edx.exit486, %block_4400ba
  %loadMem_4400c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4699 = getelementptr inbounds %struct.GPR, %struct.GPR* %4698, i32 0, i32 33
  %4700 = getelementptr inbounds %struct.Reg, %struct.Reg* %4699, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %4700 to i64*
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 1
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %4703 to i64*
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4705 = getelementptr inbounds %struct.GPR, %struct.GPR* %4704, i32 0, i32 15
  %4706 = getelementptr inbounds %struct.Reg, %struct.Reg* %4705, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %4706 to i64*
  %4707 = load i64, i64* %RBP.i533
  %4708 = sub i64 %4707, 40
  %4709 = load i64, i64* %PC.i531
  %4710 = add i64 %4709, 3
  store i64 %4710, i64* %PC.i531
  %4711 = inttoptr i64 %4708 to i32*
  %4712 = load i32, i32* %4711
  %4713 = zext i32 %4712 to i64
  store i64 %4713, i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_4400c0, %struct.Memory** %MEMORY
  %loadMem_4400c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4715 = getelementptr inbounds %struct.GPR, %struct.GPR* %4714, i32 0, i32 33
  %4716 = getelementptr inbounds %struct.Reg, %struct.Reg* %4715, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %4716 to i64*
  %4717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4718 = getelementptr inbounds %struct.GPR, %struct.GPR* %4717, i32 0, i32 1
  %4719 = getelementptr inbounds %struct.Reg, %struct.Reg* %4718, i32 0, i32 0
  %EAX.i529 = bitcast %union.anon* %4719 to i32*
  %4720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4721 = getelementptr inbounds %struct.GPR, %struct.GPR* %4720, i32 0, i32 15
  %4722 = getelementptr inbounds %struct.Reg, %struct.Reg* %4721, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %4722 to i64*
  %4723 = load i32, i32* %EAX.i529
  %4724 = zext i32 %4723 to i64
  %4725 = load i64, i64* %RBP.i530
  %4726 = sub i64 %4725, 48
  %4727 = load i64, i64* %PC.i528
  %4728 = add i64 %4727, 3
  store i64 %4728, i64* %PC.i528
  %4729 = inttoptr i64 %4726 to i32*
  %4730 = load i32, i32* %4729
  %4731 = sub i32 %4723, %4730
  %4732 = icmp ult i32 %4723, %4730
  %4733 = zext i1 %4732 to i8
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4733, i8* %4734, align 1
  %4735 = and i32 %4731, 255
  %4736 = call i32 @llvm.ctpop.i32(i32 %4735)
  %4737 = trunc i32 %4736 to i8
  %4738 = and i8 %4737, 1
  %4739 = xor i8 %4738, 1
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4739, i8* %4740, align 1
  %4741 = xor i32 %4730, %4723
  %4742 = xor i32 %4741, %4731
  %4743 = lshr i32 %4742, 4
  %4744 = trunc i32 %4743 to i8
  %4745 = and i8 %4744, 1
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4745, i8* %4746, align 1
  %4747 = icmp eq i32 %4731, 0
  %4748 = zext i1 %4747 to i8
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4748, i8* %4749, align 1
  %4750 = lshr i32 %4731, 31
  %4751 = trunc i32 %4750 to i8
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4751, i8* %4752, align 1
  %4753 = lshr i32 %4723, 31
  %4754 = lshr i32 %4730, 31
  %4755 = xor i32 %4754, %4753
  %4756 = xor i32 %4750, %4753
  %4757 = add i32 %4756, %4755
  %4758 = icmp eq i32 %4757, 2
  %4759 = zext i1 %4758 to i8
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4759, i8* %4760, align 1
  store %struct.Memory* %loadMem_4400c3, %struct.Memory** %MEMORY
  %loadMem_4400c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %4763 to i64*
  %4764 = load i64, i64* %PC.i527
  %4765 = add i64 %4764, 164
  %4766 = load i64, i64* %PC.i527
  %4767 = add i64 %4766, 6
  %4768 = load i64, i64* %PC.i527
  %4769 = add i64 %4768, 6
  store i64 %4769, i64* %PC.i527
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4771 = load i8, i8* %4770, align 1
  %4772 = icmp ne i8 %4771, 0
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4774 = load i8, i8* %4773, align 1
  %4775 = icmp ne i8 %4774, 0
  %4776 = xor i1 %4772, %4775
  %4777 = xor i1 %4776, true
  %4778 = zext i1 %4777 to i8
  store i8 %4778, i8* %BRANCH_TAKEN, align 1
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4780 = select i1 %4776, i64 %4767, i64 %4765
  store i64 %4780, i64* %4779, align 8
  store %struct.Memory* %loadMem_4400c6, %struct.Memory** %MEMORY
  %loadBr_4400c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4400c6 = icmp eq i8 %loadBr_4400c6, 1
  br i1 %cmpBr_4400c6, label %block_.L_44016a, label %block_4400cc

block_4400cc:                                     ; preds = %block_.L_4400c0
  %loadMem_4400cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 33
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %4783 to i64*
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4785 = getelementptr inbounds %struct.GPR, %struct.GPR* %4784, i32 0, i32 1
  %4786 = getelementptr inbounds %struct.Reg, %struct.Reg* %4785, i32 0, i32 0
  %RAX.i526 = bitcast %union.anon* %4786 to i64*
  %4787 = load i64, i64* %PC.i525
  %4788 = add i64 %4787, 8
  store i64 %4788, i64* %PC.i525
  %4789 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %4789, i64* %RAX.i526, align 8
  store %struct.Memory* %loadMem_4400cc, %struct.Memory** %MEMORY
  %loadMem_4400d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 33
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %4792 to i64*
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4794 = getelementptr inbounds %struct.GPR, %struct.GPR* %4793, i32 0, i32 1
  %4795 = getelementptr inbounds %struct.Reg, %struct.Reg* %4794, i32 0, i32 0
  %RAX.i524 = bitcast %union.anon* %4795 to i64*
  %4796 = load i64, i64* %RAX.i524
  %4797 = load i64, i64* %PC.i523
  %4798 = add i64 %4797, 3
  store i64 %4798, i64* %PC.i523
  %4799 = inttoptr i64 %4796 to i64*
  %4800 = load i64, i64* %4799
  store i64 %4800, i64* %RAX.i524, align 8
  store %struct.Memory* %loadMem_4400d4, %struct.Memory** %MEMORY
  %loadMem_4400d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 33
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %4803 to i64*
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 5
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %RCX.i521 = bitcast %union.anon* %4806 to i64*
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4808 = getelementptr inbounds %struct.GPR, %struct.GPR* %4807, i32 0, i32 15
  %4809 = getelementptr inbounds %struct.Reg, %struct.Reg* %4808, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %4809 to i64*
  %4810 = load i64, i64* %RBP.i522
  %4811 = sub i64 %4810, 34
  %4812 = load i64, i64* %PC.i520
  %4813 = add i64 %4812, 5
  store i64 %4813, i64* %PC.i520
  %4814 = inttoptr i64 %4811 to i16*
  %4815 = load i16, i16* %4814
  %4816 = sext i16 %4815 to i64
  store i64 %4816, i64* %RCX.i521, align 8
  store %struct.Memory* %loadMem_4400d7, %struct.Memory** %MEMORY
  %loadMem_4400dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4818 = getelementptr inbounds %struct.GPR, %struct.GPR* %4817, i32 0, i32 33
  %4819 = getelementptr inbounds %struct.Reg, %struct.Reg* %4818, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %4819 to i64*
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4821 = getelementptr inbounds %struct.GPR, %struct.GPR* %4820, i32 0, i32 1
  %4822 = getelementptr inbounds %struct.Reg, %struct.Reg* %4821, i32 0, i32 0
  %RAX.i518 = bitcast %union.anon* %4822 to i64*
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 5
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %RCX.i519 = bitcast %union.anon* %4825 to i64*
  %4826 = load i64, i64* %RAX.i518
  %4827 = load i64, i64* %RCX.i519
  %4828 = mul i64 %4827, 8
  %4829 = add i64 %4828, %4826
  %4830 = load i64, i64* %PC.i517
  %4831 = add i64 %4830, 4
  store i64 %4831, i64* %PC.i517
  %4832 = inttoptr i64 %4829 to i64*
  %4833 = load i64, i64* %4832
  store i64 %4833, i64* %RAX.i518, align 8
  store %struct.Memory* %loadMem_4400dc, %struct.Memory** %MEMORY
  %loadMem_4400e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 33
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 7
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %RDX.i515 = bitcast %union.anon* %4839 to i64*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 15
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %4842 to i64*
  %4843 = load i64, i64* %RBP.i516
  %4844 = sub i64 %4843, 12
  %4845 = load i64, i64* %PC.i514
  %4846 = add i64 %4845, 3
  store i64 %4846, i64* %PC.i514
  %4847 = inttoptr i64 %4844 to i32*
  %4848 = load i32, i32* %4847
  %4849 = zext i32 %4848 to i64
  store i64 %4849, i64* %RDX.i515, align 8
  store %struct.Memory* %loadMem_4400e0, %struct.Memory** %MEMORY
  %loadMem_4400e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4851 = getelementptr inbounds %struct.GPR, %struct.GPR* %4850, i32 0, i32 33
  %4852 = getelementptr inbounds %struct.Reg, %struct.Reg* %4851, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %4852 to i64*
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4854 = getelementptr inbounds %struct.GPR, %struct.GPR* %4853, i32 0, i32 7
  %4855 = getelementptr inbounds %struct.Reg, %struct.Reg* %4854, i32 0, i32 0
  %RDX.i513 = bitcast %union.anon* %4855 to i64*
  %4856 = load i64, i64* %RDX.i513
  %4857 = load i64, i64* %PC.i512
  %4858 = add i64 %4857, 3
  store i64 %4858, i64* %PC.i512
  %4859 = trunc i64 %4856 to i32
  %4860 = add i32 1, %4859
  %4861 = zext i32 %4860 to i64
  store i64 %4861, i64* %RDX.i513, align 8
  %4862 = icmp ult i32 %4860, %4859
  %4863 = icmp ult i32 %4860, 1
  %4864 = or i1 %4862, %4863
  %4865 = zext i1 %4864 to i8
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4865, i8* %4866, align 1
  %4867 = and i32 %4860, 255
  %4868 = call i32 @llvm.ctpop.i32(i32 %4867)
  %4869 = trunc i32 %4868 to i8
  %4870 = and i8 %4869, 1
  %4871 = xor i8 %4870, 1
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4871, i8* %4872, align 1
  %4873 = xor i64 1, %4856
  %4874 = trunc i64 %4873 to i32
  %4875 = xor i32 %4874, %4860
  %4876 = lshr i32 %4875, 4
  %4877 = trunc i32 %4876 to i8
  %4878 = and i8 %4877, 1
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4878, i8* %4879, align 1
  %4880 = icmp eq i32 %4860, 0
  %4881 = zext i1 %4880 to i8
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4881, i8* %4882, align 1
  %4883 = lshr i32 %4860, 31
  %4884 = trunc i32 %4883 to i8
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4884, i8* %4885, align 1
  %4886 = lshr i32 %4859, 31
  %4887 = xor i32 %4883, %4886
  %4888 = add i32 %4887, %4883
  %4889 = icmp eq i32 %4888, 2
  %4890 = zext i1 %4889 to i8
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4890, i8* %4891, align 1
  store %struct.Memory* %loadMem_4400e3, %struct.Memory** %MEMORY
  %loadMem_4400e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4893 = getelementptr inbounds %struct.GPR, %struct.GPR* %4892, i32 0, i32 33
  %4894 = getelementptr inbounds %struct.Reg, %struct.Reg* %4893, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %4894 to i64*
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 7
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %EDX.i510 = bitcast %union.anon* %4897 to i32*
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4899 = getelementptr inbounds %struct.GPR, %struct.GPR* %4898, i32 0, i32 5
  %4900 = getelementptr inbounds %struct.Reg, %struct.Reg* %4899, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %4900 to i64*
  %4901 = load i32, i32* %EDX.i510
  %4902 = zext i32 %4901 to i64
  %4903 = load i64, i64* %PC.i509
  %4904 = add i64 %4903, 3
  store i64 %4904, i64* %PC.i509
  %4905 = shl i64 %4902, 32
  %4906 = ashr exact i64 %4905, 32
  store i64 %4906, i64* %RCX.i511, align 8
  store %struct.Memory* %loadMem_4400e6, %struct.Memory** %MEMORY
  %loadMem_4400e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 33
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %4909 to i64*
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4911 = getelementptr inbounds %struct.GPR, %struct.GPR* %4910, i32 0, i32 1
  %4912 = getelementptr inbounds %struct.Reg, %struct.Reg* %4911, i32 0, i32 0
  %RAX.i506 = bitcast %union.anon* %4912 to i64*
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4914 = getelementptr inbounds %struct.GPR, %struct.GPR* %4913, i32 0, i32 5
  %4915 = getelementptr inbounds %struct.Reg, %struct.Reg* %4914, i32 0, i32 0
  %RCX.i507 = bitcast %union.anon* %4915 to i64*
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4917 = getelementptr inbounds %struct.GPR, %struct.GPR* %4916, i32 0, i32 7
  %4918 = getelementptr inbounds %struct.Reg, %struct.Reg* %4917, i32 0, i32 0
  %RDX.i508 = bitcast %union.anon* %4918 to i64*
  %4919 = load i64, i64* %RAX.i506
  %4920 = load i64, i64* %RCX.i507
  %4921 = mul i64 %4920, 4
  %4922 = add i64 %4921, %4919
  %4923 = load i64, i64* %PC.i505
  %4924 = add i64 %4923, 3
  store i64 %4924, i64* %PC.i505
  %4925 = inttoptr i64 %4922 to i32*
  %4926 = load i32, i32* %4925
  %4927 = zext i32 %4926 to i64
  store i64 %4927, i64* %RDX.i508, align 8
  store %struct.Memory* %loadMem_4400e9, %struct.Memory** %MEMORY
  %loadMem_4400ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4929 = getelementptr inbounds %struct.GPR, %struct.GPR* %4928, i32 0, i32 33
  %4930 = getelementptr inbounds %struct.Reg, %struct.Reg* %4929, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %4930 to i64*
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 1
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %4933 to i64*
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4935 = getelementptr inbounds %struct.GPR, %struct.GPR* %4934, i32 0, i32 15
  %4936 = getelementptr inbounds %struct.Reg, %struct.Reg* %4935, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %4936 to i64*
  %4937 = load i64, i64* %RBP.i504
  %4938 = sub i64 %4937, 64
  %4939 = load i64, i64* %PC.i502
  %4940 = add i64 %4939, 4
  store i64 %4940, i64* %PC.i502
  %4941 = inttoptr i64 %4938 to i64*
  %4942 = load i64, i64* %4941
  store i64 %4942, i64* %RAX.i503, align 8
  store %struct.Memory* %loadMem_4400ec, %struct.Memory** %MEMORY
  %loadMem_4400f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 33
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %4945 to i64*
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 1
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %RAX.i500 = bitcast %union.anon* %4948 to i64*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 5
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %RAX.i500
  %4953 = load i64, i64* %PC.i499
  %4954 = add i64 %4953, 3
  store i64 %4954, i64* %PC.i499
  store i64 %4952, i64* %RCX.i501, align 8
  store %struct.Memory* %loadMem_4400f0, %struct.Memory** %MEMORY
  %loadMem_4400f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 33
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %4957 to i64*
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4959 = getelementptr inbounds %struct.GPR, %struct.GPR* %4958, i32 0, i32 5
  %4960 = getelementptr inbounds %struct.Reg, %struct.Reg* %4959, i32 0, i32 0
  %RCX.i498 = bitcast %union.anon* %4960 to i64*
  %4961 = load i64, i64* %RCX.i498
  %4962 = load i64, i64* %PC.i497
  %4963 = add i64 %4962, 4
  store i64 %4963, i64* %PC.i497
  %4964 = add i64 4, %4961
  store i64 %4964, i64* %RCX.i498, align 8
  %4965 = icmp ult i64 %4964, %4961
  %4966 = icmp ult i64 %4964, 4
  %4967 = or i1 %4965, %4966
  %4968 = zext i1 %4967 to i8
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4968, i8* %4969, align 1
  %4970 = trunc i64 %4964 to i32
  %4971 = and i32 %4970, 255
  %4972 = call i32 @llvm.ctpop.i32(i32 %4971)
  %4973 = trunc i32 %4972 to i8
  %4974 = and i8 %4973, 1
  %4975 = xor i8 %4974, 1
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4975, i8* %4976, align 1
  %4977 = xor i64 4, %4961
  %4978 = xor i64 %4977, %4964
  %4979 = lshr i64 %4978, 4
  %4980 = trunc i64 %4979 to i8
  %4981 = and i8 %4980, 1
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4981, i8* %4982, align 1
  %4983 = icmp eq i64 %4964, 0
  %4984 = zext i1 %4983 to i8
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4984, i8* %4985, align 1
  %4986 = lshr i64 %4964, 63
  %4987 = trunc i64 %4986 to i8
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4987, i8* %4988, align 1
  %4989 = lshr i64 %4961, 63
  %4990 = xor i64 %4986, %4989
  %4991 = add i64 %4990, %4986
  %4992 = icmp eq i64 %4991, 2
  %4993 = zext i1 %4992 to i8
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4993, i8* %4994, align 1
  store %struct.Memory* %loadMem_4400f3, %struct.Memory** %MEMORY
  %loadMem_4400f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 33
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %4997 to i64*
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4999 = getelementptr inbounds %struct.GPR, %struct.GPR* %4998, i32 0, i32 5
  %5000 = getelementptr inbounds %struct.Reg, %struct.Reg* %4999, i32 0, i32 0
  %RCX.i495 = bitcast %union.anon* %5000 to i64*
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5002 = getelementptr inbounds %struct.GPR, %struct.GPR* %5001, i32 0, i32 15
  %5003 = getelementptr inbounds %struct.Reg, %struct.Reg* %5002, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %5003 to i64*
  %5004 = load i64, i64* %RBP.i496
  %5005 = sub i64 %5004, 64
  %5006 = load i64, i64* %RCX.i495
  %5007 = load i64, i64* %PC.i494
  %5008 = add i64 %5007, 4
  store i64 %5008, i64* %PC.i494
  %5009 = inttoptr i64 %5005 to i64*
  store i64 %5006, i64* %5009
  store %struct.Memory* %loadMem_4400f7, %struct.Memory** %MEMORY
  %loadMem_4400fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5011 = getelementptr inbounds %struct.GPR, %struct.GPR* %5010, i32 0, i32 33
  %5012 = getelementptr inbounds %struct.Reg, %struct.Reg* %5011, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %5012 to i64*
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5014 = getelementptr inbounds %struct.GPR, %struct.GPR* %5013, i32 0, i32 1
  %5015 = getelementptr inbounds %struct.Reg, %struct.Reg* %5014, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %5015 to i64*
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5017 = getelementptr inbounds %struct.GPR, %struct.GPR* %5016, i32 0, i32 7
  %5018 = getelementptr inbounds %struct.Reg, %struct.Reg* %5017, i32 0, i32 0
  %RDX.i493 = bitcast %union.anon* %5018 to i64*
  %5019 = load i64, i64* %RDX.i493
  %5020 = load i64, i64* %RAX.i492
  %5021 = load i64, i64* %PC.i491
  %5022 = add i64 %5021, 3
  store i64 %5022, i64* %PC.i491
  %5023 = inttoptr i64 %5020 to i32*
  %5024 = load i32, i32* %5023
  %5025 = shl i64 %5019, 32
  %5026 = ashr exact i64 %5025, 32
  %5027 = sext i32 %5024 to i64
  %5028 = mul i64 %5027, %5026
  %5029 = trunc i64 %5028 to i32
  %5030 = and i64 %5028, 4294967295
  store i64 %5030, i64* %RDX.i493, align 8
  %5031 = shl i64 %5028, 32
  %5032 = ashr exact i64 %5031, 32
  %5033 = icmp ne i64 %5032, %5028
  %5034 = zext i1 %5033 to i8
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5034, i8* %5035, align 1
  %5036 = and i32 %5029, 255
  %5037 = call i32 @llvm.ctpop.i32(i32 %5036)
  %5038 = trunc i32 %5037 to i8
  %5039 = and i8 %5038, 1
  %5040 = xor i8 %5039, 1
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5040, i8* %5041, align 1
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5042, align 1
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5043, align 1
  %5044 = lshr i32 %5029, 31
  %5045 = trunc i32 %5044 to i8
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5045, i8* %5046, align 1
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5034, i8* %5047, align 1
  store %struct.Memory* %loadMem_4400fb, %struct.Memory** %MEMORY
  %loadMem_4400fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 33
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %5050 to i64*
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5052 = getelementptr inbounds %struct.GPR, %struct.GPR* %5051, i32 0, i32 7
  %5053 = getelementptr inbounds %struct.Reg, %struct.Reg* %5052, i32 0, i32 0
  %RDX.i490 = bitcast %union.anon* %5053 to i64*
  %5054 = load i64, i64* %RDX.i490
  %5055 = load i64, i64* %PC.i489
  %5056 = add i64 %5055, 7
  store i64 %5056, i64* %PC.i489
  %5057 = trunc i64 %5054 to i32
  %5058 = load i32, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  %5059 = add i32 %5058, %5057
  %5060 = zext i32 %5059 to i64
  store i64 %5060, i64* %RDX.i490, align 8
  %5061 = icmp ult i32 %5059, %5057
  %5062 = icmp ult i32 %5059, %5058
  %5063 = or i1 %5061, %5062
  %5064 = zext i1 %5063 to i8
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5064, i8* %5065, align 1
  %5066 = and i32 %5059, 255
  %5067 = call i32 @llvm.ctpop.i32(i32 %5066)
  %5068 = trunc i32 %5067 to i8
  %5069 = and i8 %5068, 1
  %5070 = xor i8 %5069, 1
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5070, i8* %5071, align 1
  %5072 = xor i32 %5058, %5057
  %5073 = xor i32 %5072, %5059
  %5074 = lshr i32 %5073, 4
  %5075 = trunc i32 %5074 to i8
  %5076 = and i8 %5075, 1
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5076, i8* %5077, align 1
  %5078 = icmp eq i32 %5059, 0
  %5079 = zext i1 %5078 to i8
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5079, i8* %5080, align 1
  %5081 = lshr i32 %5059, 31
  %5082 = trunc i32 %5081 to i8
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5082, i8* %5083, align 1
  %5084 = lshr i32 %5057, 31
  %5085 = lshr i32 %5058, 31
  %5086 = xor i32 %5081, %5084
  %5087 = xor i32 %5081, %5085
  %5088 = add i32 %5086, %5087
  %5089 = icmp eq i32 %5088, 2
  %5090 = zext i1 %5089 to i8
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5090, i8* %5091, align 1
  store %struct.Memory* %loadMem_4400fe, %struct.Memory** %MEMORY
  %loadMem_440105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 33
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %5094 to i64*
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 5
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %RCX.i488 = bitcast %union.anon* %5097 to i64*
  %5098 = load i64, i64* %PC.i487
  %5099 = add i64 %5098, 7
  store i64 %5099, i64* %PC.i487
  %5100 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %5101 = zext i32 %5100 to i64
  store i64 %5101, i64* %RCX.i488, align 8
  store %struct.Memory* %loadMem_440105, %struct.Memory** %MEMORY
  %loadMem_44010c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5103 = getelementptr inbounds %struct.GPR, %struct.GPR* %5102, i32 0, i32 33
  %5104 = getelementptr inbounds %struct.Reg, %struct.Reg* %5103, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %5104 to i64*
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5106 = getelementptr inbounds %struct.GPR, %struct.GPR* %5105, i32 0, i32 5
  %5107 = getelementptr inbounds %struct.Reg, %struct.Reg* %5106, i32 0, i32 0
  %5108 = bitcast %union.anon* %5107 to %struct.anon.2*
  %CL.i484 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5108, i32 0, i32 0
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 7
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %RDX.i485 = bitcast %union.anon* %5111 to i64*
  %5112 = load i64, i64* %RDX.i485
  %5113 = load i8, i8* %CL.i484
  %5114 = zext i8 %5113 to i64
  %5115 = load i64, i64* %PC.i483
  %5116 = add i64 %5115, 2
  store i64 %5116, i64* %PC.i483
  %5117 = trunc i64 %5114 to i5
  switch i5 %5117, label %5121 [
    i5 0, label %routine_sarl__cl___edx.exit486
    i5 1, label %5118
  ]

; <label>:5118:                                   ; preds = %block_4400cc
  %5119 = shl i64 %5112, 32
  %5120 = ashr i64 %5119, 33
  br label %5128

; <label>:5121:                                   ; preds = %block_4400cc
  %5122 = and i64 %5114, 31
  %5123 = add i64 %5122, -1
  %5124 = shl i64 %5112, 32
  %5125 = ashr exact i64 %5124, 32
  %5126 = ashr i64 %5125, %5123
  %5127 = lshr i64 %5126, 1
  br label %5128

; <label>:5128:                                   ; preds = %5121, %5118
  %5129 = phi i64 [ %5127, %5121 ], [ %5120, %5118 ]
  %5130 = phi i64 [ %5126, %5121 ], [ %5112, %5118 ]
  %5131 = trunc i64 %5130 to i8
  %5132 = and i8 %5131, 1
  %5133 = trunc i64 %5129 to i32
  %5134 = and i64 %5129, 4294967295
  store i64 %5134, i64* %RDX.i485, align 8
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5132, i8* %5135, align 1
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5137 = and i32 %5133, 255
  %5138 = call i32 @llvm.ctpop.i32(i32 %5137)
  %5139 = trunc i32 %5138 to i8
  %5140 = and i8 %5139, 1
  %5141 = xor i8 %5140, 1
  store i8 %5141, i8* %5136, align 1
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5142, align 1
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5144 = icmp eq i32 %5133, 0
  %5145 = zext i1 %5144 to i8
  store i8 %5145, i8* %5143, align 1
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5147 = lshr i32 %5133, 31
  %5148 = trunc i32 %5147 to i8
  store i8 %5148, i8* %5146, align 1
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5149, align 1
  br label %routine_sarl__cl___edx.exit486

routine_sarl__cl___edx.exit486:                   ; preds = %block_4400cc, %5128
  store %struct.Memory* %loadMem_44010c, %struct.Memory** %MEMORY
  %loadMem_44010e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 33
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 1
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RAX.i482 = bitcast %union.anon* %5155 to i64*
  %5156 = load i64, i64* %PC.i481
  %5157 = add i64 %5156, 8
  store i64 %5157, i64* %PC.i481
  %5158 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %5158, i64* %RAX.i482, align 8
  store %struct.Memory* %loadMem_44010e, %struct.Memory** %MEMORY
  %loadMem_440116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5160 = getelementptr inbounds %struct.GPR, %struct.GPR* %5159, i32 0, i32 33
  %5161 = getelementptr inbounds %struct.Reg, %struct.Reg* %5160, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %5161 to i64*
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5163 = getelementptr inbounds %struct.GPR, %struct.GPR* %5162, i32 0, i32 1
  %5164 = getelementptr inbounds %struct.Reg, %struct.Reg* %5163, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %5164 to i64*
  %5165 = load i64, i64* %RAX.i480
  %5166 = load i64, i64* %PC.i479
  %5167 = add i64 %5166, 3
  store i64 %5167, i64* %PC.i479
  %5168 = inttoptr i64 %5165 to i64*
  %5169 = load i64, i64* %5168
  store i64 %5169, i64* %RAX.i480, align 8
  store %struct.Memory* %loadMem_440116, %struct.Memory** %MEMORY
  %loadMem_440119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5171 = getelementptr inbounds %struct.GPR, %struct.GPR* %5170, i32 0, i32 33
  %5172 = getelementptr inbounds %struct.Reg, %struct.Reg* %5171, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %5172 to i64*
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5174 = getelementptr inbounds %struct.GPR, %struct.GPR* %5173, i32 0, i32 9
  %5175 = getelementptr inbounds %struct.Reg, %struct.Reg* %5174, i32 0, i32 0
  %RSI.i477 = bitcast %union.anon* %5175 to i64*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5177 = getelementptr inbounds %struct.GPR, %struct.GPR* %5176, i32 0, i32 15
  %5178 = getelementptr inbounds %struct.Reg, %struct.Reg* %5177, i32 0, i32 0
  %RBP.i478 = bitcast %union.anon* %5178 to i64*
  %5179 = load i64, i64* %RBP.i478
  %5180 = sub i64 %5179, 34
  %5181 = load i64, i64* %PC.i476
  %5182 = add i64 %5181, 5
  store i64 %5182, i64* %PC.i476
  %5183 = inttoptr i64 %5180 to i16*
  %5184 = load i16, i16* %5183
  %5185 = sext i16 %5184 to i64
  store i64 %5185, i64* %RSI.i477, align 8
  store %struct.Memory* %loadMem_440119, %struct.Memory** %MEMORY
  %loadMem_44011e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5187 = getelementptr inbounds %struct.GPR, %struct.GPR* %5186, i32 0, i32 33
  %5188 = getelementptr inbounds %struct.Reg, %struct.Reg* %5187, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %5188 to i64*
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5190 = getelementptr inbounds %struct.GPR, %struct.GPR* %5189, i32 0, i32 1
  %5191 = getelementptr inbounds %struct.Reg, %struct.Reg* %5190, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %5191 to i64*
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5193 = getelementptr inbounds %struct.GPR, %struct.GPR* %5192, i32 0, i32 9
  %5194 = getelementptr inbounds %struct.Reg, %struct.Reg* %5193, i32 0, i32 0
  %RSI.i475 = bitcast %union.anon* %5194 to i64*
  %5195 = load i64, i64* %RAX.i474
  %5196 = load i64, i64* %RSI.i475
  %5197 = mul i64 %5196, 8
  %5198 = add i64 %5197, %5195
  %5199 = load i64, i64* %PC.i473
  %5200 = add i64 %5199, 4
  store i64 %5200, i64* %PC.i473
  %5201 = inttoptr i64 %5198 to i64*
  %5202 = load i64, i64* %5201
  store i64 %5202, i64* %RAX.i474, align 8
  store %struct.Memory* %loadMem_44011e, %struct.Memory** %MEMORY
  %loadMem_440122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5204 = getelementptr inbounds %struct.GPR, %struct.GPR* %5203, i32 0, i32 33
  %5205 = getelementptr inbounds %struct.Reg, %struct.Reg* %5204, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %5205 to i64*
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5207 = getelementptr inbounds %struct.GPR, %struct.GPR* %5206, i32 0, i32 11
  %5208 = getelementptr inbounds %struct.Reg, %struct.Reg* %5207, i32 0, i32 0
  %RDI.i471 = bitcast %union.anon* %5208 to i64*
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5210 = getelementptr inbounds %struct.GPR, %struct.GPR* %5209, i32 0, i32 15
  %5211 = getelementptr inbounds %struct.Reg, %struct.Reg* %5210, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %5211 to i64*
  %5212 = load i64, i64* %RBP.i472
  %5213 = sub i64 %5212, 12
  %5214 = load i64, i64* %PC.i470
  %5215 = add i64 %5214, 3
  store i64 %5215, i64* %PC.i470
  %5216 = inttoptr i64 %5213 to i32*
  %5217 = load i32, i32* %5216
  %5218 = zext i32 %5217 to i64
  store i64 %5218, i64* %RDI.i471, align 8
  store %struct.Memory* %loadMem_440122, %struct.Memory** %MEMORY
  %loadMem_440125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5220 = getelementptr inbounds %struct.GPR, %struct.GPR* %5219, i32 0, i32 33
  %5221 = getelementptr inbounds %struct.Reg, %struct.Reg* %5220, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %5221 to i64*
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 11
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %RDI.i469 = bitcast %union.anon* %5224 to i64*
  %5225 = load i64, i64* %RDI.i469
  %5226 = load i64, i64* %PC.i468
  %5227 = add i64 %5226, 3
  store i64 %5227, i64* %PC.i468
  %5228 = trunc i64 %5225 to i32
  %5229 = add i32 1, %5228
  %5230 = zext i32 %5229 to i64
  store i64 %5230, i64* %RDI.i469, align 8
  %5231 = icmp ult i32 %5229, %5228
  %5232 = icmp ult i32 %5229, 1
  %5233 = or i1 %5231, %5232
  %5234 = zext i1 %5233 to i8
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5234, i8* %5235, align 1
  %5236 = and i32 %5229, 255
  %5237 = call i32 @llvm.ctpop.i32(i32 %5236)
  %5238 = trunc i32 %5237 to i8
  %5239 = and i8 %5238, 1
  %5240 = xor i8 %5239, 1
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5240, i8* %5241, align 1
  %5242 = xor i64 1, %5225
  %5243 = trunc i64 %5242 to i32
  %5244 = xor i32 %5243, %5229
  %5245 = lshr i32 %5244, 4
  %5246 = trunc i32 %5245 to i8
  %5247 = and i8 %5246, 1
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5247, i8* %5248, align 1
  %5249 = icmp eq i32 %5229, 0
  %5250 = zext i1 %5249 to i8
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5250, i8* %5251, align 1
  %5252 = lshr i32 %5229, 31
  %5253 = trunc i32 %5252 to i8
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5253, i8* %5254, align 1
  %5255 = lshr i32 %5228, 31
  %5256 = xor i32 %5252, %5255
  %5257 = add i32 %5256, %5252
  %5258 = icmp eq i32 %5257, 2
  %5259 = zext i1 %5258 to i8
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5259, i8* %5260, align 1
  store %struct.Memory* %loadMem_440125, %struct.Memory** %MEMORY
  %loadMem_440128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 33
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %5263 to i64*
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 11
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %EDI.i466 = bitcast %union.anon* %5266 to i32*
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 9
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %RSI.i467 = bitcast %union.anon* %5269 to i64*
  %5270 = load i32, i32* %EDI.i466
  %5271 = zext i32 %5270 to i64
  %5272 = load i64, i64* %PC.i465
  %5273 = add i64 %5272, 3
  store i64 %5273, i64* %PC.i465
  %5274 = shl i64 %5271, 32
  %5275 = ashr exact i64 %5274, 32
  store i64 %5275, i64* %RSI.i467, align 8
  store %struct.Memory* %loadMem_440128, %struct.Memory** %MEMORY
  %loadMem_44012b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5277 = getelementptr inbounds %struct.GPR, %struct.GPR* %5276, i32 0, i32 33
  %5278 = getelementptr inbounds %struct.Reg, %struct.Reg* %5277, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %5278 to i64*
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5280 = getelementptr inbounds %struct.GPR, %struct.GPR* %5279, i32 0, i32 1
  %5281 = getelementptr inbounds %struct.Reg, %struct.Reg* %5280, i32 0, i32 0
  %RAX.i462 = bitcast %union.anon* %5281 to i64*
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5283 = getelementptr inbounds %struct.GPR, %struct.GPR* %5282, i32 0, i32 7
  %5284 = getelementptr inbounds %struct.Reg, %struct.Reg* %5283, i32 0, i32 0
  %RDX.i463 = bitcast %union.anon* %5284 to i64*
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 9
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %RSI.i464 = bitcast %union.anon* %5287 to i64*
  %5288 = load i64, i64* %RDX.i463
  %5289 = load i64, i64* %RAX.i462
  %5290 = load i64, i64* %RSI.i464
  %5291 = mul i64 %5290, 4
  %5292 = add i64 %5291, %5289
  %5293 = load i64, i64* %PC.i461
  %5294 = add i64 %5293, 3
  store i64 %5294, i64* %PC.i461
  %5295 = trunc i64 %5288 to i32
  %5296 = inttoptr i64 %5292 to i32*
  %5297 = load i32, i32* %5296
  %5298 = add i32 %5297, %5295
  %5299 = zext i32 %5298 to i64
  store i64 %5299, i64* %RDX.i463, align 8
  %5300 = icmp ult i32 %5298, %5295
  %5301 = icmp ult i32 %5298, %5297
  %5302 = or i1 %5300, %5301
  %5303 = zext i1 %5302 to i8
  %5304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5303, i8* %5304, align 1
  %5305 = and i32 %5298, 255
  %5306 = call i32 @llvm.ctpop.i32(i32 %5305)
  %5307 = trunc i32 %5306 to i8
  %5308 = and i8 %5307, 1
  %5309 = xor i8 %5308, 1
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5309, i8* %5310, align 1
  %5311 = xor i32 %5297, %5295
  %5312 = xor i32 %5311, %5298
  %5313 = lshr i32 %5312, 4
  %5314 = trunc i32 %5313 to i8
  %5315 = and i8 %5314, 1
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5315, i8* %5316, align 1
  %5317 = icmp eq i32 %5298, 0
  %5318 = zext i1 %5317 to i8
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5318, i8* %5319, align 1
  %5320 = lshr i32 %5298, 31
  %5321 = trunc i32 %5320 to i8
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5321, i8* %5322, align 1
  %5323 = lshr i32 %5295, 31
  %5324 = lshr i32 %5297, 31
  %5325 = xor i32 %5320, %5323
  %5326 = xor i32 %5320, %5324
  %5327 = add i32 %5325, %5326
  %5328 = icmp eq i32 %5327, 2
  %5329 = zext i1 %5328 to i8
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5329, i8* %5330, align 1
  store %struct.Memory* %loadMem_44012b, %struct.Memory** %MEMORY
  %loadMem_44012e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 33
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %5333 to i64*
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 7
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %EDX.i459 = bitcast %union.anon* %5336 to i32*
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 11
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %RDI.i460 = bitcast %union.anon* %5339 to i64*
  %5340 = load i32, i32* %EDX.i459
  %5341 = zext i32 %5340 to i64
  %5342 = load i64, i64* %PC.i458
  %5343 = add i64 %5342, 2
  store i64 %5343, i64* %PC.i458
  %5344 = and i64 %5341, 4294967295
  store i64 %5344, i64* %RDI.i460, align 8
  store %struct.Memory* %loadMem_44012e, %struct.Memory** %MEMORY
  %loadMem1_440130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5346 = getelementptr inbounds %struct.GPR, %struct.GPR* %5345, i32 0, i32 33
  %5347 = getelementptr inbounds %struct.Reg, %struct.Reg* %5346, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %5347 to i64*
  %5348 = load i64, i64* %PC.i457
  %5349 = add i64 %5348, -18976
  %5350 = load i64, i64* %PC.i457
  %5351 = add i64 %5350, 5
  %5352 = load i64, i64* %PC.i457
  %5353 = add i64 %5352, 5
  store i64 %5353, i64* %PC.i457
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5355 = load i64, i64* %5354, align 8
  %5356 = add i64 %5355, -8
  %5357 = inttoptr i64 %5356 to i64*
  store i64 %5351, i64* %5357
  store i64 %5356, i64* %5354, align 8
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5349, i64* %5358, align 8
  store %struct.Memory* %loadMem1_440130, %struct.Memory** %MEMORY
  %loadMem2_440130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440130 = load i64, i64* %3
  %call2_440130 = call %struct.Memory* @sub_43b710.clip1a_chr(%struct.State* %0, i64 %loadPC_440130, %struct.Memory* %loadMem2_440130)
  store %struct.Memory* %call2_440130, %struct.Memory** %MEMORY
  %loadMem_440135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 33
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %5361 to i64*
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5363 = getelementptr inbounds %struct.GPR, %struct.GPR* %5362, i32 0, i32 1
  %5364 = getelementptr inbounds %struct.Reg, %struct.Reg* %5363, i32 0, i32 0
  %AX.i455 = bitcast %union.anon* %5364 to i16*
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5366 = getelementptr inbounds %struct.GPR, %struct.GPR* %5365, i32 0, i32 17
  %5367 = getelementptr inbounds %struct.Reg, %struct.Reg* %5366, i32 0, i32 0
  %R8W.i456 = bitcast %union.anon* %5367 to i16*
  %5368 = load i16, i16* %AX.i455
  %5369 = zext i16 %5368 to i64
  %5370 = load i64, i64* %PC.i454
  %5371 = add i64 %5370, 4
  store i64 %5371, i64* %PC.i454
  store i16 %5368, i16* %R8W.i456, align 2
  store %struct.Memory* %loadMem_440135, %struct.Memory** %MEMORY
  %loadMem_440139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 33
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %5374 to i64*
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5376 = getelementptr inbounds %struct.GPR, %struct.GPR* %5375, i32 0, i32 9
  %5377 = getelementptr inbounds %struct.Reg, %struct.Reg* %5376, i32 0, i32 0
  %RSI.i453 = bitcast %union.anon* %5377 to i64*
  %5378 = load i64, i64* %PC.i452
  %5379 = add i64 %5378, 8
  store i64 %5379, i64* %PC.i452
  %5380 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5380, i64* %RSI.i453, align 8
  store %struct.Memory* %loadMem_440139, %struct.Memory** %MEMORY
  %loadMem_440141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 33
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %5383 to i64*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 9
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %RSI.i451 = bitcast %union.anon* %5386 to i64*
  %5387 = load i64, i64* %RSI.i451
  %5388 = load i64, i64* %PC.i450
  %5389 = add i64 %5388, 7
  store i64 %5389, i64* %PC.i450
  %5390 = add i64 12600, %5387
  store i64 %5390, i64* %RSI.i451, align 8
  %5391 = icmp ult i64 %5390, %5387
  %5392 = icmp ult i64 %5390, 12600
  %5393 = or i1 %5391, %5392
  %5394 = zext i1 %5393 to i8
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5394, i8* %5395, align 1
  %5396 = trunc i64 %5390 to i32
  %5397 = and i32 %5396, 255
  %5398 = call i32 @llvm.ctpop.i32(i32 %5397)
  %5399 = trunc i32 %5398 to i8
  %5400 = and i8 %5399, 1
  %5401 = xor i8 %5400, 1
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5401, i8* %5402, align 1
  %5403 = xor i64 12600, %5387
  %5404 = xor i64 %5403, %5390
  %5405 = lshr i64 %5404, 4
  %5406 = trunc i64 %5405 to i8
  %5407 = and i8 %5406, 1
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5407, i8* %5408, align 1
  %5409 = icmp eq i64 %5390, 0
  %5410 = zext i1 %5409 to i8
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5410, i8* %5411, align 1
  %5412 = lshr i64 %5390, 63
  %5413 = trunc i64 %5412 to i8
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5413, i8* %5414, align 1
  %5415 = lshr i64 %5387, 63
  %5416 = xor i64 %5412, %5415
  %5417 = add i64 %5416, %5412
  %5418 = icmp eq i64 %5417, 2
  %5419 = zext i1 %5418 to i8
  %5420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5419, i8* %5420, align 1
  store %struct.Memory* %loadMem_440141, %struct.Memory** %MEMORY
  %loadMem_440148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 33
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %5423 to i64*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 15
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %5426 to i64*
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5428 = getelementptr inbounds %struct.GPR, %struct.GPR* %5427, i32 0, i32 19
  %5429 = getelementptr inbounds %struct.Reg, %struct.Reg* %5428, i32 0, i32 0
  %R9.i449 = bitcast %union.anon* %5429 to i64*
  %5430 = load i64, i64* %RBP.i448
  %5431 = sub i64 %5430, 40
  %5432 = load i64, i64* %PC.i447
  %5433 = add i64 %5432, 4
  store i64 %5433, i64* %PC.i447
  %5434 = inttoptr i64 %5431 to i32*
  %5435 = load i32, i32* %5434
  %5436 = sext i32 %5435 to i64
  store i64 %5436, i64* %R9.i449, align 8
  store %struct.Memory* %loadMem_440148, %struct.Memory** %MEMORY
  %loadMem_44014c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 33
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %5439 to i64*
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 19
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %R9.i446 = bitcast %union.anon* %5442 to i64*
  %5443 = load i64, i64* %R9.i446
  %5444 = load i64, i64* %PC.i445
  %5445 = add i64 %5444, 4
  store i64 %5445, i64* %PC.i445
  %5446 = shl i64 %5443, 4
  %5447 = icmp slt i64 %5446, 0
  %5448 = shl i64 %5446, 1
  store i64 %5448, i64* %R9.i446, align 8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5450 = zext i1 %5447 to i8
  store i8 %5450, i8* %5449, align 1
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5452 = trunc i64 %5448 to i32
  %5453 = and i32 %5452, 254
  %5454 = call i32 @llvm.ctpop.i32(i32 %5453)
  %5455 = trunc i32 %5454 to i8
  %5456 = and i8 %5455, 1
  %5457 = xor i8 %5456, 1
  store i8 %5457, i8* %5451, align 1
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5458, align 1
  %5459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5460 = icmp eq i64 %5448, 0
  %5461 = zext i1 %5460 to i8
  store i8 %5461, i8* %5459, align 1
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5463 = lshr i64 %5448, 63
  %5464 = trunc i64 %5463 to i8
  store i8 %5464, i8* %5462, align 1
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5465, align 1
  store %struct.Memory* %loadMem_44014c, %struct.Memory** %MEMORY
  %loadMem_440150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5467 = getelementptr inbounds %struct.GPR, %struct.GPR* %5466, i32 0, i32 33
  %5468 = getelementptr inbounds %struct.Reg, %struct.Reg* %5467, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %5468 to i64*
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 9
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %RSI.i443 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 19
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %R9.i444 = bitcast %union.anon* %5474 to i64*
  %5475 = load i64, i64* %RSI.i443
  %5476 = load i64, i64* %R9.i444
  %5477 = load i64, i64* %PC.i442
  %5478 = add i64 %5477, 3
  store i64 %5478, i64* %PC.i442
  %5479 = add i64 %5476, %5475
  store i64 %5479, i64* %RSI.i443, align 8
  %5480 = icmp ult i64 %5479, %5475
  %5481 = icmp ult i64 %5479, %5476
  %5482 = or i1 %5480, %5481
  %5483 = zext i1 %5482 to i8
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5483, i8* %5484, align 1
  %5485 = trunc i64 %5479 to i32
  %5486 = and i32 %5485, 255
  %5487 = call i32 @llvm.ctpop.i32(i32 %5486)
  %5488 = trunc i32 %5487 to i8
  %5489 = and i8 %5488, 1
  %5490 = xor i8 %5489, 1
  %5491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5490, i8* %5491, align 1
  %5492 = xor i64 %5476, %5475
  %5493 = xor i64 %5492, %5479
  %5494 = lshr i64 %5493, 4
  %5495 = trunc i64 %5494 to i8
  %5496 = and i8 %5495, 1
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5496, i8* %5497, align 1
  %5498 = icmp eq i64 %5479, 0
  %5499 = zext i1 %5498 to i8
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5499, i8* %5500, align 1
  %5501 = lshr i64 %5479, 63
  %5502 = trunc i64 %5501 to i8
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5502, i8* %5503, align 1
  %5504 = lshr i64 %5475, 63
  %5505 = lshr i64 %5476, 63
  %5506 = xor i64 %5501, %5504
  %5507 = xor i64 %5501, %5505
  %5508 = add i64 %5506, %5507
  %5509 = icmp eq i64 %5508, 2
  %5510 = zext i1 %5509 to i8
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5510, i8* %5511, align 1
  store %struct.Memory* %loadMem_440150, %struct.Memory** %MEMORY
  %loadMem_440153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5513 = getelementptr inbounds %struct.GPR, %struct.GPR* %5512, i32 0, i32 33
  %5514 = getelementptr inbounds %struct.Reg, %struct.Reg* %5513, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %5514 to i64*
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5516 = getelementptr inbounds %struct.GPR, %struct.GPR* %5515, i32 0, i32 15
  %5517 = getelementptr inbounds %struct.Reg, %struct.Reg* %5516, i32 0, i32 0
  %RBP.i440 = bitcast %union.anon* %5517 to i64*
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 19
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %R9.i441 = bitcast %union.anon* %5520 to i64*
  %5521 = load i64, i64* %RBP.i440
  %5522 = sub i64 %5521, 44
  %5523 = load i64, i64* %PC.i439
  %5524 = add i64 %5523, 4
  store i64 %5524, i64* %PC.i439
  %5525 = inttoptr i64 %5522 to i32*
  %5526 = load i32, i32* %5525
  %5527 = sext i32 %5526 to i64
  store i64 %5527, i64* %R9.i441, align 8
  store %struct.Memory* %loadMem_440153, %struct.Memory** %MEMORY
  %loadMem_440157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5529 = getelementptr inbounds %struct.GPR, %struct.GPR* %5528, i32 0, i32 33
  %5530 = getelementptr inbounds %struct.Reg, %struct.Reg* %5529, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %5530 to i64*
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 17
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %R8W.i436 = bitcast %union.anon* %5533 to i16*
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 9
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %RSI.i437 = bitcast %union.anon* %5536 to i64*
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 19
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %R9.i438 = bitcast %union.anon* %5539 to i64*
  %5540 = load i64, i64* %RSI.i437
  %5541 = load i64, i64* %R9.i438
  %5542 = mul i64 %5541, 2
  %5543 = add i64 %5542, %5540
  %5544 = load i16, i16* %R8W.i436
  %5545 = zext i16 %5544 to i64
  %5546 = load i64, i64* %PC.i435
  %5547 = add i64 %5546, 5
  store i64 %5547, i64* %PC.i435
  %5548 = inttoptr i64 %5543 to i16*
  store i16 %5544, i16* %5548
  store %struct.Memory* %loadMem_440157, %struct.Memory** %MEMORY
  %loadMem_44015c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 33
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 1
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %5554 to i64*
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 15
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %5557 to i64*
  %5558 = load i64, i64* %RBP.i434
  %5559 = sub i64 %5558, 40
  %5560 = load i64, i64* %PC.i432
  %5561 = add i64 %5560, 3
  store i64 %5561, i64* %PC.i432
  %5562 = inttoptr i64 %5559 to i32*
  %5563 = load i32, i32* %5562
  %5564 = zext i32 %5563 to i64
  store i64 %5564, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_44015c, %struct.Memory** %MEMORY
  %loadMem_44015f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 33
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %5567 to i64*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 1
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RAX.i431 = bitcast %union.anon* %5570 to i64*
  %5571 = load i64, i64* %RAX.i431
  %5572 = load i64, i64* %PC.i430
  %5573 = add i64 %5572, 3
  store i64 %5573, i64* %PC.i430
  %5574 = trunc i64 %5571 to i32
  %5575 = add i32 1, %5574
  %5576 = zext i32 %5575 to i64
  store i64 %5576, i64* %RAX.i431, align 8
  %5577 = icmp ult i32 %5575, %5574
  %5578 = icmp ult i32 %5575, 1
  %5579 = or i1 %5577, %5578
  %5580 = zext i1 %5579 to i8
  %5581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5580, i8* %5581, align 1
  %5582 = and i32 %5575, 255
  %5583 = call i32 @llvm.ctpop.i32(i32 %5582)
  %5584 = trunc i32 %5583 to i8
  %5585 = and i8 %5584, 1
  %5586 = xor i8 %5585, 1
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5586, i8* %5587, align 1
  %5588 = xor i64 1, %5571
  %5589 = trunc i64 %5588 to i32
  %5590 = xor i32 %5589, %5575
  %5591 = lshr i32 %5590, 4
  %5592 = trunc i32 %5591 to i8
  %5593 = and i8 %5592, 1
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5593, i8* %5594, align 1
  %5595 = icmp eq i32 %5575, 0
  %5596 = zext i1 %5595 to i8
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5596, i8* %5597, align 1
  %5598 = lshr i32 %5575, 31
  %5599 = trunc i32 %5598 to i8
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5599, i8* %5600, align 1
  %5601 = lshr i32 %5574, 31
  %5602 = xor i32 %5598, %5601
  %5603 = add i32 %5602, %5598
  %5604 = icmp eq i32 %5603, 2
  %5605 = zext i1 %5604 to i8
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5605, i8* %5606, align 1
  store %struct.Memory* %loadMem_44015f, %struct.Memory** %MEMORY
  %loadMem_440162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5608 = getelementptr inbounds %struct.GPR, %struct.GPR* %5607, i32 0, i32 33
  %5609 = getelementptr inbounds %struct.Reg, %struct.Reg* %5608, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %5609 to i64*
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5611 = getelementptr inbounds %struct.GPR, %struct.GPR* %5610, i32 0, i32 1
  %5612 = getelementptr inbounds %struct.Reg, %struct.Reg* %5611, i32 0, i32 0
  %EAX.i428 = bitcast %union.anon* %5612 to i32*
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5614 = getelementptr inbounds %struct.GPR, %struct.GPR* %5613, i32 0, i32 15
  %5615 = getelementptr inbounds %struct.Reg, %struct.Reg* %5614, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %5615 to i64*
  %5616 = load i64, i64* %RBP.i429
  %5617 = sub i64 %5616, 40
  %5618 = load i32, i32* %EAX.i428
  %5619 = zext i32 %5618 to i64
  %5620 = load i64, i64* %PC.i427
  %5621 = add i64 %5620, 3
  store i64 %5621, i64* %PC.i427
  %5622 = inttoptr i64 %5617 to i32*
  store i32 %5618, i32* %5622
  store %struct.Memory* %loadMem_440162, %struct.Memory** %MEMORY
  %loadMem_440165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 33
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %5625 to i64*
  %5626 = load i64, i64* %PC.i426
  %5627 = add i64 %5626, -165
  %5628 = load i64, i64* %PC.i426
  %5629 = add i64 %5628, 5
  store i64 %5629, i64* %PC.i426
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5627, i64* %5630, align 8
  store %struct.Memory* %loadMem_440165, %struct.Memory** %MEMORY
  br label %block_.L_4400c0

block_.L_44016a:                                  ; preds = %block_.L_4400c0
  %loadMem_44016a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5632 = getelementptr inbounds %struct.GPR, %struct.GPR* %5631, i32 0, i32 33
  %5633 = getelementptr inbounds %struct.Reg, %struct.Reg* %5632, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %5633 to i64*
  %5634 = load i64, i64* %PC.i425
  %5635 = add i64 %5634, 5
  %5636 = load i64, i64* %PC.i425
  %5637 = add i64 %5636, 5
  store i64 %5637, i64* %PC.i425
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5635, i64* %5638, align 8
  store %struct.Memory* %loadMem_44016a, %struct.Memory** %MEMORY
  br label %block_.L_44016f

block_.L_44016f:                                  ; preds = %block_.L_44016a
  %loadMem_44016f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 33
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %5641 to i64*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 1
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RAX.i423 = bitcast %union.anon* %5644 to i64*
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5646 = getelementptr inbounds %struct.GPR, %struct.GPR* %5645, i32 0, i32 15
  %5647 = getelementptr inbounds %struct.Reg, %struct.Reg* %5646, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %5647 to i64*
  %5648 = load i64, i64* %RBP.i424
  %5649 = sub i64 %5648, 44
  %5650 = load i64, i64* %PC.i422
  %5651 = add i64 %5650, 3
  store i64 %5651, i64* %PC.i422
  %5652 = inttoptr i64 %5649 to i32*
  %5653 = load i32, i32* %5652
  %5654 = zext i32 %5653 to i64
  store i64 %5654, i64* %RAX.i423, align 8
  store %struct.Memory* %loadMem_44016f, %struct.Memory** %MEMORY
  %loadMem_440172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5656 = getelementptr inbounds %struct.GPR, %struct.GPR* %5655, i32 0, i32 33
  %5657 = getelementptr inbounds %struct.Reg, %struct.Reg* %5656, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %5657 to i64*
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 1
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %RAX.i421 = bitcast %union.anon* %5660 to i64*
  %5661 = load i64, i64* %RAX.i421
  %5662 = load i64, i64* %PC.i420
  %5663 = add i64 %5662, 3
  store i64 %5663, i64* %PC.i420
  %5664 = trunc i64 %5661 to i32
  %5665 = add i32 1, %5664
  %5666 = zext i32 %5665 to i64
  store i64 %5666, i64* %RAX.i421, align 8
  %5667 = icmp ult i32 %5665, %5664
  %5668 = icmp ult i32 %5665, 1
  %5669 = or i1 %5667, %5668
  %5670 = zext i1 %5669 to i8
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5670, i8* %5671, align 1
  %5672 = and i32 %5665, 255
  %5673 = call i32 @llvm.ctpop.i32(i32 %5672)
  %5674 = trunc i32 %5673 to i8
  %5675 = and i8 %5674, 1
  %5676 = xor i8 %5675, 1
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5676, i8* %5677, align 1
  %5678 = xor i64 1, %5661
  %5679 = trunc i64 %5678 to i32
  %5680 = xor i32 %5679, %5665
  %5681 = lshr i32 %5680, 4
  %5682 = trunc i32 %5681 to i8
  %5683 = and i8 %5682, 1
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5683, i8* %5684, align 1
  %5685 = icmp eq i32 %5665, 0
  %5686 = zext i1 %5685 to i8
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5686, i8* %5687, align 1
  %5688 = lshr i32 %5665, 31
  %5689 = trunc i32 %5688 to i8
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5689, i8* %5690, align 1
  %5691 = lshr i32 %5664, 31
  %5692 = xor i32 %5688, %5691
  %5693 = add i32 %5692, %5688
  %5694 = icmp eq i32 %5693, 2
  %5695 = zext i1 %5694 to i8
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5695, i8* %5696, align 1
  store %struct.Memory* %loadMem_440172, %struct.Memory** %MEMORY
  %loadMem_440175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 33
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %5699 to i64*
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5701 = getelementptr inbounds %struct.GPR, %struct.GPR* %5700, i32 0, i32 1
  %5702 = getelementptr inbounds %struct.Reg, %struct.Reg* %5701, i32 0, i32 0
  %EAX.i418 = bitcast %union.anon* %5702 to i32*
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5704 = getelementptr inbounds %struct.GPR, %struct.GPR* %5703, i32 0, i32 15
  %5705 = getelementptr inbounds %struct.Reg, %struct.Reg* %5704, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %5705 to i64*
  %5706 = load i64, i64* %RBP.i419
  %5707 = sub i64 %5706, 44
  %5708 = load i32, i32* %EAX.i418
  %5709 = zext i32 %5708 to i64
  %5710 = load i64, i64* %PC.i417
  %5711 = add i64 %5710, 3
  store i64 %5711, i64* %PC.i417
  %5712 = inttoptr i64 %5707 to i32*
  store i32 %5708, i32* %5712
  store %struct.Memory* %loadMem_440175, %struct.Memory** %MEMORY
  %loadMem_440178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 33
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %5715 to i64*
  %5716 = load i64, i64* %PC.i416
  %5717 = add i64 %5716, -202
  %5718 = load i64, i64* %PC.i416
  %5719 = add i64 %5718, 5
  store i64 %5719, i64* %PC.i416
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5717, i64* %5720, align 8
  store %struct.Memory* %loadMem_440178, %struct.Memory** %MEMORY
  br label %block_.L_4400ae

block_.L_44017d:                                  ; preds = %block_.L_4400ae
  %loadMem_44017d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 33
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %5723 to i64*
  %5724 = load i64, i64* %PC.i415
  %5725 = add i64 %5724, 225
  %5726 = load i64, i64* %PC.i415
  %5727 = add i64 %5726, 5
  store i64 %5727, i64* %PC.i415
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5725, i64* %5728, align 8
  store %struct.Memory* %loadMem_44017d, %struct.Memory** %MEMORY
  br label %block_.L_44025e

block_.L_440182:                                  ; preds = %block_.L_44009e
  %loadMem_440182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 33
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %5731 to i64*
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5733 = getelementptr inbounds %struct.GPR, %struct.GPR* %5732, i32 0, i32 1
  %5734 = getelementptr inbounds %struct.Reg, %struct.Reg* %5733, i32 0, i32 0
  %RAX.i413 = bitcast %union.anon* %5734 to i64*
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 15
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %5737 to i64*
  %5738 = load i64, i64* %RBP.i414
  %5739 = sub i64 %5738, 20
  %5740 = load i64, i64* %PC.i412
  %5741 = add i64 %5740, 3
  store i64 %5741, i64* %PC.i412
  %5742 = inttoptr i64 %5739 to i32*
  %5743 = load i32, i32* %5742
  %5744 = zext i32 %5743 to i64
  store i64 %5744, i64* %RAX.i413, align 8
  store %struct.Memory* %loadMem_440182, %struct.Memory** %MEMORY
  %loadMem_440185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5746 = getelementptr inbounds %struct.GPR, %struct.GPR* %5745, i32 0, i32 33
  %5747 = getelementptr inbounds %struct.Reg, %struct.Reg* %5746, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %5747 to i64*
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5749 = getelementptr inbounds %struct.GPR, %struct.GPR* %5748, i32 0, i32 1
  %5750 = getelementptr inbounds %struct.Reg, %struct.Reg* %5749, i32 0, i32 0
  %EAX.i410 = bitcast %union.anon* %5750 to i32*
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5752 = getelementptr inbounds %struct.GPR, %struct.GPR* %5751, i32 0, i32 15
  %5753 = getelementptr inbounds %struct.Reg, %struct.Reg* %5752, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %5753 to i64*
  %5754 = load i64, i64* %RBP.i411
  %5755 = sub i64 %5754, 44
  %5756 = load i32, i32* %EAX.i410
  %5757 = zext i32 %5756 to i64
  %5758 = load i64, i64* %PC.i409
  %5759 = add i64 %5758, 3
  store i64 %5759, i64* %PC.i409
  %5760 = inttoptr i64 %5755 to i32*
  store i32 %5756, i32* %5760
  store %struct.Memory* %loadMem_440185, %struct.Memory** %MEMORY
  br label %block_.L_440188

block_.L_440188:                                  ; preds = %block_.L_44024b, %block_.L_440182
  %loadMem_440188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 33
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %5763 to i64*
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 1
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %5766 to i64*
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5768 = getelementptr inbounds %struct.GPR, %struct.GPR* %5767, i32 0, i32 15
  %5769 = getelementptr inbounds %struct.Reg, %struct.Reg* %5768, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %5769 to i64*
  %5770 = load i64, i64* %RBP.i408
  %5771 = sub i64 %5770, 44
  %5772 = load i64, i64* %PC.i406
  %5773 = add i64 %5772, 3
  store i64 %5773, i64* %PC.i406
  %5774 = inttoptr i64 %5771 to i32*
  %5775 = load i32, i32* %5774
  %5776 = zext i32 %5775 to i64
  store i64 %5776, i64* %RAX.i407, align 8
  store %struct.Memory* %loadMem_440188, %struct.Memory** %MEMORY
  %loadMem_44018b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 1
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %EAX.i404 = bitcast %union.anon* %5782 to i32*
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5784 = getelementptr inbounds %struct.GPR, %struct.GPR* %5783, i32 0, i32 15
  %5785 = getelementptr inbounds %struct.Reg, %struct.Reg* %5784, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %5785 to i64*
  %5786 = load i32, i32* %EAX.i404
  %5787 = zext i32 %5786 to i64
  %5788 = load i64, i64* %RBP.i405
  %5789 = sub i64 %5788, 52
  %5790 = load i64, i64* %PC.i403
  %5791 = add i64 %5790, 3
  store i64 %5791, i64* %PC.i403
  %5792 = inttoptr i64 %5789 to i32*
  %5793 = load i32, i32* %5792
  %5794 = sub i32 %5786, %5793
  %5795 = icmp ult i32 %5786, %5793
  %5796 = zext i1 %5795 to i8
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5796, i8* %5797, align 1
  %5798 = and i32 %5794, 255
  %5799 = call i32 @llvm.ctpop.i32(i32 %5798)
  %5800 = trunc i32 %5799 to i8
  %5801 = and i8 %5800, 1
  %5802 = xor i8 %5801, 1
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5802, i8* %5803, align 1
  %5804 = xor i32 %5793, %5786
  %5805 = xor i32 %5804, %5794
  %5806 = lshr i32 %5805, 4
  %5807 = trunc i32 %5806 to i8
  %5808 = and i8 %5807, 1
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5808, i8* %5809, align 1
  %5810 = icmp eq i32 %5794, 0
  %5811 = zext i1 %5810 to i8
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5811, i8* %5812, align 1
  %5813 = lshr i32 %5794, 31
  %5814 = trunc i32 %5813 to i8
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5814, i8* %5815, align 1
  %5816 = lshr i32 %5786, 31
  %5817 = lshr i32 %5793, 31
  %5818 = xor i32 %5817, %5816
  %5819 = xor i32 %5813, %5816
  %5820 = add i32 %5819, %5818
  %5821 = icmp eq i32 %5820, 2
  %5822 = zext i1 %5821 to i8
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5822, i8* %5823, align 1
  store %struct.Memory* %loadMem_44018b, %struct.Memory** %MEMORY
  %loadMem_44018e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5825 = getelementptr inbounds %struct.GPR, %struct.GPR* %5824, i32 0, i32 33
  %5826 = getelementptr inbounds %struct.Reg, %struct.Reg* %5825, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %5826 to i64*
  %5827 = load i64, i64* %PC.i402
  %5828 = add i64 %5827, 203
  %5829 = load i64, i64* %PC.i402
  %5830 = add i64 %5829, 6
  %5831 = load i64, i64* %PC.i402
  %5832 = add i64 %5831, 6
  store i64 %5832, i64* %PC.i402
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5834 = load i8, i8* %5833, align 1
  %5835 = icmp ne i8 %5834, 0
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5837 = load i8, i8* %5836, align 1
  %5838 = icmp ne i8 %5837, 0
  %5839 = xor i1 %5835, %5838
  %5840 = xor i1 %5839, true
  %5841 = zext i1 %5840 to i8
  store i8 %5841, i8* %BRANCH_TAKEN, align 1
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5843 = select i1 %5839, i64 %5830, i64 %5828
  store i64 %5843, i64* %5842, align 8
  store %struct.Memory* %loadMem_44018e, %struct.Memory** %MEMORY
  %loadBr_44018e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44018e = icmp eq i8 %loadBr_44018e, 1
  br i1 %cmpBr_44018e, label %block_.L_440259, label %block_440194

block_440194:                                     ; preds = %block_.L_440188
  %loadMem_440194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 33
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 1
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RAX.i400 = bitcast %union.anon* %5849 to i64*
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 15
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %RBP.i401 = bitcast %union.anon* %5852 to i64*
  %5853 = load i64, i64* %RBP.i401
  %5854 = sub i64 %5853, 16
  %5855 = load i64, i64* %PC.i399
  %5856 = add i64 %5855, 3
  store i64 %5856, i64* %PC.i399
  %5857 = inttoptr i64 %5854 to i32*
  %5858 = load i32, i32* %5857
  %5859 = zext i32 %5858 to i64
  store i64 %5859, i64* %RAX.i400, align 8
  store %struct.Memory* %loadMem_440194, %struct.Memory** %MEMORY
  %loadMem_440197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 33
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %5862 to i64*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 1
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %EAX.i397 = bitcast %union.anon* %5865 to i32*
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5867 = getelementptr inbounds %struct.GPR, %struct.GPR* %5866, i32 0, i32 15
  %5868 = getelementptr inbounds %struct.Reg, %struct.Reg* %5867, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %5868 to i64*
  %5869 = load i64, i64* %RBP.i398
  %5870 = sub i64 %5869, 40
  %5871 = load i32, i32* %EAX.i397
  %5872 = zext i32 %5871 to i64
  %5873 = load i64, i64* %PC.i396
  %5874 = add i64 %5873, 3
  store i64 %5874, i64* %PC.i396
  %5875 = inttoptr i64 %5870 to i32*
  store i32 %5871, i32* %5875
  store %struct.Memory* %loadMem_440197, %struct.Memory** %MEMORY
  br label %block_.L_44019a

block_.L_44019a:                                  ; preds = %routine_sarl__cl___edx.exit, %block_440194
  %loadMem_44019a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5877 = getelementptr inbounds %struct.GPR, %struct.GPR* %5876, i32 0, i32 33
  %5878 = getelementptr inbounds %struct.Reg, %struct.Reg* %5877, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %5878 to i64*
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5880 = getelementptr inbounds %struct.GPR, %struct.GPR* %5879, i32 0, i32 1
  %5881 = getelementptr inbounds %struct.Reg, %struct.Reg* %5880, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %5881 to i64*
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5883 = getelementptr inbounds %struct.GPR, %struct.GPR* %5882, i32 0, i32 15
  %5884 = getelementptr inbounds %struct.Reg, %struct.Reg* %5883, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %5884 to i64*
  %5885 = load i64, i64* %RBP.i395
  %5886 = sub i64 %5885, 40
  %5887 = load i64, i64* %PC.i393
  %5888 = add i64 %5887, 3
  store i64 %5888, i64* %PC.i393
  %5889 = inttoptr i64 %5886 to i32*
  %5890 = load i32, i32* %5889
  %5891 = zext i32 %5890 to i64
  store i64 %5891, i64* %RAX.i394, align 8
  store %struct.Memory* %loadMem_44019a, %struct.Memory** %MEMORY
  %loadMem_44019d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5893 = getelementptr inbounds %struct.GPR, %struct.GPR* %5892, i32 0, i32 33
  %5894 = getelementptr inbounds %struct.Reg, %struct.Reg* %5893, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %5894 to i64*
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5896 = getelementptr inbounds %struct.GPR, %struct.GPR* %5895, i32 0, i32 1
  %5897 = getelementptr inbounds %struct.Reg, %struct.Reg* %5896, i32 0, i32 0
  %EAX.i391 = bitcast %union.anon* %5897 to i32*
  %5898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5899 = getelementptr inbounds %struct.GPR, %struct.GPR* %5898, i32 0, i32 15
  %5900 = getelementptr inbounds %struct.Reg, %struct.Reg* %5899, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %5900 to i64*
  %5901 = load i32, i32* %EAX.i391
  %5902 = zext i32 %5901 to i64
  %5903 = load i64, i64* %RBP.i392
  %5904 = sub i64 %5903, 48
  %5905 = load i64, i64* %PC.i390
  %5906 = add i64 %5905, 3
  store i64 %5906, i64* %PC.i390
  %5907 = inttoptr i64 %5904 to i32*
  %5908 = load i32, i32* %5907
  %5909 = sub i32 %5901, %5908
  %5910 = icmp ult i32 %5901, %5908
  %5911 = zext i1 %5910 to i8
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5911, i8* %5912, align 1
  %5913 = and i32 %5909, 255
  %5914 = call i32 @llvm.ctpop.i32(i32 %5913)
  %5915 = trunc i32 %5914 to i8
  %5916 = and i8 %5915, 1
  %5917 = xor i8 %5916, 1
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5917, i8* %5918, align 1
  %5919 = xor i32 %5908, %5901
  %5920 = xor i32 %5919, %5909
  %5921 = lshr i32 %5920, 4
  %5922 = trunc i32 %5921 to i8
  %5923 = and i8 %5922, 1
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5923, i8* %5924, align 1
  %5925 = icmp eq i32 %5909, 0
  %5926 = zext i1 %5925 to i8
  %5927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5926, i8* %5927, align 1
  %5928 = lshr i32 %5909, 31
  %5929 = trunc i32 %5928 to i8
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5929, i8* %5930, align 1
  %5931 = lshr i32 %5901, 31
  %5932 = lshr i32 %5908, 31
  %5933 = xor i32 %5932, %5931
  %5934 = xor i32 %5928, %5931
  %5935 = add i32 %5934, %5933
  %5936 = icmp eq i32 %5935, 2
  %5937 = zext i1 %5936 to i8
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5937, i8* %5938, align 1
  store %struct.Memory* %loadMem_44019d, %struct.Memory** %MEMORY
  %loadMem_4401a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5940 = getelementptr inbounds %struct.GPR, %struct.GPR* %5939, i32 0, i32 33
  %5941 = getelementptr inbounds %struct.Reg, %struct.Reg* %5940, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %5941 to i64*
  %5942 = load i64, i64* %PC.i389
  %5943 = add i64 %5942, 166
  %5944 = load i64, i64* %PC.i389
  %5945 = add i64 %5944, 6
  %5946 = load i64, i64* %PC.i389
  %5947 = add i64 %5946, 6
  store i64 %5947, i64* %PC.i389
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5949 = load i8, i8* %5948, align 1
  %5950 = icmp ne i8 %5949, 0
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5952 = load i8, i8* %5951, align 1
  %5953 = icmp ne i8 %5952, 0
  %5954 = xor i1 %5950, %5953
  %5955 = xor i1 %5954, true
  %5956 = zext i1 %5955 to i8
  store i8 %5956, i8* %BRANCH_TAKEN, align 1
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5958 = select i1 %5954, i64 %5945, i64 %5943
  store i64 %5958, i64* %5957, align 8
  store %struct.Memory* %loadMem_4401a0, %struct.Memory** %MEMORY
  %loadBr_4401a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4401a0 = icmp eq i8 %loadBr_4401a0, 1
  br i1 %cmpBr_4401a0, label %block_.L_440246, label %block_4401a6

block_4401a6:                                     ; preds = %block_.L_44019a
  %loadMem_4401a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5960 = getelementptr inbounds %struct.GPR, %struct.GPR* %5959, i32 0, i32 33
  %5961 = getelementptr inbounds %struct.Reg, %struct.Reg* %5960, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %5961 to i64*
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5963 = getelementptr inbounds %struct.GPR, %struct.GPR* %5962, i32 0, i32 1
  %5964 = getelementptr inbounds %struct.Reg, %struct.Reg* %5963, i32 0, i32 0
  %RAX.i388 = bitcast %union.anon* %5964 to i64*
  %5965 = load i64, i64* %PC.i387
  %5966 = add i64 %5965, 8
  store i64 %5966, i64* %PC.i387
  %5967 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %5967, i64* %RAX.i388, align 8
  store %struct.Memory* %loadMem_4401a6, %struct.Memory** %MEMORY
  %loadMem_4401ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 33
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %5970 to i64*
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5972 = getelementptr inbounds %struct.GPR, %struct.GPR* %5971, i32 0, i32 1
  %5973 = getelementptr inbounds %struct.Reg, %struct.Reg* %5972, i32 0, i32 0
  %RAX.i386 = bitcast %union.anon* %5973 to i64*
  %5974 = load i64, i64* %RAX.i386
  %5975 = add i64 %5974, 8
  %5976 = load i64, i64* %PC.i385
  %5977 = add i64 %5976, 4
  store i64 %5977, i64* %PC.i385
  %5978 = inttoptr i64 %5975 to i64*
  %5979 = load i64, i64* %5978
  store i64 %5979, i64* %RAX.i386, align 8
  store %struct.Memory* %loadMem_4401ae, %struct.Memory** %MEMORY
  %loadMem_4401b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 33
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %5982 to i64*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 5
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %RCX.i383 = bitcast %union.anon* %5985 to i64*
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 15
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %5988 to i64*
  %5989 = load i64, i64* %RBP.i384
  %5990 = sub i64 %5989, 36
  %5991 = load i64, i64* %PC.i382
  %5992 = add i64 %5991, 5
  store i64 %5992, i64* %PC.i382
  %5993 = inttoptr i64 %5990 to i16*
  %5994 = load i16, i16* %5993
  %5995 = sext i16 %5994 to i64
  store i64 %5995, i64* %RCX.i383, align 8
  store %struct.Memory* %loadMem_4401b2, %struct.Memory** %MEMORY
  %loadMem_4401b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5997 = getelementptr inbounds %struct.GPR, %struct.GPR* %5996, i32 0, i32 33
  %5998 = getelementptr inbounds %struct.Reg, %struct.Reg* %5997, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %5998 to i64*
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6000 = getelementptr inbounds %struct.GPR, %struct.GPR* %5999, i32 0, i32 1
  %6001 = getelementptr inbounds %struct.Reg, %struct.Reg* %6000, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %6001 to i64*
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 5
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %RCX.i381 = bitcast %union.anon* %6004 to i64*
  %6005 = load i64, i64* %RAX.i380
  %6006 = load i64, i64* %RCX.i381
  %6007 = mul i64 %6006, 8
  %6008 = add i64 %6007, %6005
  %6009 = load i64, i64* %PC.i379
  %6010 = add i64 %6009, 4
  store i64 %6010, i64* %PC.i379
  %6011 = inttoptr i64 %6008 to i64*
  %6012 = load i64, i64* %6011
  store i64 %6012, i64* %RAX.i380, align 8
  store %struct.Memory* %loadMem_4401b7, %struct.Memory** %MEMORY
  %loadMem_4401bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 33
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %6015 to i64*
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6017 = getelementptr inbounds %struct.GPR, %struct.GPR* %6016, i32 0, i32 7
  %6018 = getelementptr inbounds %struct.Reg, %struct.Reg* %6017, i32 0, i32 0
  %RDX.i377 = bitcast %union.anon* %6018 to i64*
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6020 = getelementptr inbounds %struct.GPR, %struct.GPR* %6019, i32 0, i32 15
  %6021 = getelementptr inbounds %struct.Reg, %struct.Reg* %6020, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %6021 to i64*
  %6022 = load i64, i64* %RBP.i378
  %6023 = sub i64 %6022, 12
  %6024 = load i64, i64* %PC.i376
  %6025 = add i64 %6024, 3
  store i64 %6025, i64* %PC.i376
  %6026 = inttoptr i64 %6023 to i32*
  %6027 = load i32, i32* %6026
  %6028 = zext i32 %6027 to i64
  store i64 %6028, i64* %RDX.i377, align 8
  store %struct.Memory* %loadMem_4401bb, %struct.Memory** %MEMORY
  %loadMem_4401be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6030 = getelementptr inbounds %struct.GPR, %struct.GPR* %6029, i32 0, i32 33
  %6031 = getelementptr inbounds %struct.Reg, %struct.Reg* %6030, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %6031 to i64*
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6033 = getelementptr inbounds %struct.GPR, %struct.GPR* %6032, i32 0, i32 7
  %6034 = getelementptr inbounds %struct.Reg, %struct.Reg* %6033, i32 0, i32 0
  %RDX.i375 = bitcast %union.anon* %6034 to i64*
  %6035 = load i64, i64* %RDX.i375
  %6036 = load i64, i64* %PC.i374
  %6037 = add i64 %6036, 3
  store i64 %6037, i64* %PC.i374
  %6038 = trunc i64 %6035 to i32
  %6039 = add i32 1, %6038
  %6040 = zext i32 %6039 to i64
  store i64 %6040, i64* %RDX.i375, align 8
  %6041 = icmp ult i32 %6039, %6038
  %6042 = icmp ult i32 %6039, 1
  %6043 = or i1 %6041, %6042
  %6044 = zext i1 %6043 to i8
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6044, i8* %6045, align 1
  %6046 = and i32 %6039, 255
  %6047 = call i32 @llvm.ctpop.i32(i32 %6046)
  %6048 = trunc i32 %6047 to i8
  %6049 = and i8 %6048, 1
  %6050 = xor i8 %6049, 1
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6050, i8* %6051, align 1
  %6052 = xor i64 1, %6035
  %6053 = trunc i64 %6052 to i32
  %6054 = xor i32 %6053, %6039
  %6055 = lshr i32 %6054, 4
  %6056 = trunc i32 %6055 to i8
  %6057 = and i8 %6056, 1
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6057, i8* %6058, align 1
  %6059 = icmp eq i32 %6039, 0
  %6060 = zext i1 %6059 to i8
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6060, i8* %6061, align 1
  %6062 = lshr i32 %6039, 31
  %6063 = trunc i32 %6062 to i8
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6063, i8* %6064, align 1
  %6065 = lshr i32 %6038, 31
  %6066 = xor i32 %6062, %6065
  %6067 = add i32 %6066, %6062
  %6068 = icmp eq i32 %6067, 2
  %6069 = zext i1 %6068 to i8
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6069, i8* %6070, align 1
  store %struct.Memory* %loadMem_4401be, %struct.Memory** %MEMORY
  %loadMem_4401c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6072 = getelementptr inbounds %struct.GPR, %struct.GPR* %6071, i32 0, i32 33
  %6073 = getelementptr inbounds %struct.Reg, %struct.Reg* %6072, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %6073 to i64*
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 7
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %EDX.i372 = bitcast %union.anon* %6076 to i32*
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 5
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %RCX.i373 = bitcast %union.anon* %6079 to i64*
  %6080 = load i32, i32* %EDX.i372
  %6081 = zext i32 %6080 to i64
  %6082 = load i64, i64* %PC.i371
  %6083 = add i64 %6082, 3
  store i64 %6083, i64* %PC.i371
  %6084 = shl i64 %6081, 32
  %6085 = ashr exact i64 %6084, 32
  store i64 %6085, i64* %RCX.i373, align 8
  store %struct.Memory* %loadMem_4401c1, %struct.Memory** %MEMORY
  %loadMem_4401c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6087 = getelementptr inbounds %struct.GPR, %struct.GPR* %6086, i32 0, i32 33
  %6088 = getelementptr inbounds %struct.Reg, %struct.Reg* %6087, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %6088 to i64*
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6090 = getelementptr inbounds %struct.GPR, %struct.GPR* %6089, i32 0, i32 1
  %6091 = getelementptr inbounds %struct.Reg, %struct.Reg* %6090, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %6091 to i64*
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6093 = getelementptr inbounds %struct.GPR, %struct.GPR* %6092, i32 0, i32 5
  %6094 = getelementptr inbounds %struct.Reg, %struct.Reg* %6093, i32 0, i32 0
  %RCX.i369 = bitcast %union.anon* %6094 to i64*
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6096 = getelementptr inbounds %struct.GPR, %struct.GPR* %6095, i32 0, i32 7
  %6097 = getelementptr inbounds %struct.Reg, %struct.Reg* %6096, i32 0, i32 0
  %RDX.i370 = bitcast %union.anon* %6097 to i64*
  %6098 = load i64, i64* %RAX.i368
  %6099 = load i64, i64* %RCX.i369
  %6100 = mul i64 %6099, 4
  %6101 = add i64 %6100, %6098
  %6102 = load i64, i64* %PC.i367
  %6103 = add i64 %6102, 3
  store i64 %6103, i64* %PC.i367
  %6104 = inttoptr i64 %6101 to i32*
  %6105 = load i32, i32* %6104
  %6106 = zext i32 %6105 to i64
  store i64 %6106, i64* %RDX.i370, align 8
  store %struct.Memory* %loadMem_4401c4, %struct.Memory** %MEMORY
  %loadMem_4401c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6108 = getelementptr inbounds %struct.GPR, %struct.GPR* %6107, i32 0, i32 33
  %6109 = getelementptr inbounds %struct.Reg, %struct.Reg* %6108, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %6109 to i64*
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6111 = getelementptr inbounds %struct.GPR, %struct.GPR* %6110, i32 0, i32 1
  %6112 = getelementptr inbounds %struct.Reg, %struct.Reg* %6111, i32 0, i32 0
  %RAX.i365 = bitcast %union.anon* %6112 to i64*
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6114 = getelementptr inbounds %struct.GPR, %struct.GPR* %6113, i32 0, i32 15
  %6115 = getelementptr inbounds %struct.Reg, %struct.Reg* %6114, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %6115 to i64*
  %6116 = load i64, i64* %RBP.i366
  %6117 = sub i64 %6116, 72
  %6118 = load i64, i64* %PC.i364
  %6119 = add i64 %6118, 4
  store i64 %6119, i64* %PC.i364
  %6120 = inttoptr i64 %6117 to i64*
  %6121 = load i64, i64* %6120
  store i64 %6121, i64* %RAX.i365, align 8
  store %struct.Memory* %loadMem_4401c7, %struct.Memory** %MEMORY
  %loadMem_4401cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 33
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %6124 to i64*
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6126 = getelementptr inbounds %struct.GPR, %struct.GPR* %6125, i32 0, i32 1
  %6127 = getelementptr inbounds %struct.Reg, %struct.Reg* %6126, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %6127 to i64*
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6129 = getelementptr inbounds %struct.GPR, %struct.GPR* %6128, i32 0, i32 5
  %6130 = getelementptr inbounds %struct.Reg, %struct.Reg* %6129, i32 0, i32 0
  %RCX.i363 = bitcast %union.anon* %6130 to i64*
  %6131 = load i64, i64* %RAX.i362
  %6132 = load i64, i64* %PC.i361
  %6133 = add i64 %6132, 3
  store i64 %6133, i64* %PC.i361
  store i64 %6131, i64* %RCX.i363, align 8
  store %struct.Memory* %loadMem_4401cb, %struct.Memory** %MEMORY
  %loadMem_4401ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 33
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %6136 to i64*
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 5
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %RCX.i360 = bitcast %union.anon* %6139 to i64*
  %6140 = load i64, i64* %RCX.i360
  %6141 = load i64, i64* %PC.i359
  %6142 = add i64 %6141, 4
  store i64 %6142, i64* %PC.i359
  %6143 = add i64 4, %6140
  store i64 %6143, i64* %RCX.i360, align 8
  %6144 = icmp ult i64 %6143, %6140
  %6145 = icmp ult i64 %6143, 4
  %6146 = or i1 %6144, %6145
  %6147 = zext i1 %6146 to i8
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6147, i8* %6148, align 1
  %6149 = trunc i64 %6143 to i32
  %6150 = and i32 %6149, 255
  %6151 = call i32 @llvm.ctpop.i32(i32 %6150)
  %6152 = trunc i32 %6151 to i8
  %6153 = and i8 %6152, 1
  %6154 = xor i8 %6153, 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6154, i8* %6155, align 1
  %6156 = xor i64 4, %6140
  %6157 = xor i64 %6156, %6143
  %6158 = lshr i64 %6157, 4
  %6159 = trunc i64 %6158 to i8
  %6160 = and i8 %6159, 1
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6160, i8* %6161, align 1
  %6162 = icmp eq i64 %6143, 0
  %6163 = zext i1 %6162 to i8
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6163, i8* %6164, align 1
  %6165 = lshr i64 %6143, 63
  %6166 = trunc i64 %6165 to i8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6166, i8* %6167, align 1
  %6168 = lshr i64 %6140, 63
  %6169 = xor i64 %6165, %6168
  %6170 = add i64 %6169, %6165
  %6171 = icmp eq i64 %6170, 2
  %6172 = zext i1 %6171 to i8
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6172, i8* %6173, align 1
  store %struct.Memory* %loadMem_4401ce, %struct.Memory** %MEMORY
  %loadMem_4401d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 33
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %6176 to i64*
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 5
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %RCX.i357 = bitcast %union.anon* %6179 to i64*
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 15
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %6182 to i64*
  %6183 = load i64, i64* %RBP.i358
  %6184 = sub i64 %6183, 72
  %6185 = load i64, i64* %RCX.i357
  %6186 = load i64, i64* %PC.i356
  %6187 = add i64 %6186, 4
  store i64 %6187, i64* %PC.i356
  %6188 = inttoptr i64 %6184 to i64*
  store i64 %6185, i64* %6188
  store %struct.Memory* %loadMem_4401d2, %struct.Memory** %MEMORY
  %loadMem_4401d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6190 = getelementptr inbounds %struct.GPR, %struct.GPR* %6189, i32 0, i32 33
  %6191 = getelementptr inbounds %struct.Reg, %struct.Reg* %6190, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %6191 to i64*
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 1
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 7
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %RDX.i355 = bitcast %union.anon* %6197 to i64*
  %6198 = load i64, i64* %RDX.i355
  %6199 = load i64, i64* %RAX.i354
  %6200 = load i64, i64* %PC.i353
  %6201 = add i64 %6200, 3
  store i64 %6201, i64* %PC.i353
  %6202 = inttoptr i64 %6199 to i32*
  %6203 = load i32, i32* %6202
  %6204 = shl i64 %6198, 32
  %6205 = ashr exact i64 %6204, 32
  %6206 = sext i32 %6203 to i64
  %6207 = mul i64 %6206, %6205
  %6208 = trunc i64 %6207 to i32
  %6209 = and i64 %6207, 4294967295
  store i64 %6209, i64* %RDX.i355, align 8
  %6210 = shl i64 %6207, 32
  %6211 = ashr exact i64 %6210, 32
  %6212 = icmp ne i64 %6211, %6207
  %6213 = zext i1 %6212 to i8
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6213, i8* %6214, align 1
  %6215 = and i32 %6208, 255
  %6216 = call i32 @llvm.ctpop.i32(i32 %6215)
  %6217 = trunc i32 %6216 to i8
  %6218 = and i8 %6217, 1
  %6219 = xor i8 %6218, 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6219, i8* %6220, align 1
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6221, align 1
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6222, align 1
  %6223 = lshr i32 %6208, 31
  %6224 = trunc i32 %6223 to i8
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6224, i8* %6225, align 1
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6213, i8* %6226, align 1
  store %struct.Memory* %loadMem_4401d6, %struct.Memory** %MEMORY
  %loadMem_4401d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 33
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %6229 to i64*
  %6230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6231 = getelementptr inbounds %struct.GPR, %struct.GPR* %6230, i32 0, i32 7
  %6232 = getelementptr inbounds %struct.Reg, %struct.Reg* %6231, i32 0, i32 0
  %RDX.i352 = bitcast %union.anon* %6232 to i64*
  %6233 = load i64, i64* %RDX.i352
  %6234 = load i64, i64* %PC.i351
  %6235 = add i64 %6234, 7
  store i64 %6235, i64* %PC.i351
  %6236 = trunc i64 %6233 to i32
  %6237 = load i32, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  %6238 = add i32 %6237, %6236
  %6239 = zext i32 %6238 to i64
  store i64 %6239, i64* %RDX.i352, align 8
  %6240 = icmp ult i32 %6238, %6236
  %6241 = icmp ult i32 %6238, %6237
  %6242 = or i1 %6240, %6241
  %6243 = zext i1 %6242 to i8
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6243, i8* %6244, align 1
  %6245 = and i32 %6238, 255
  %6246 = call i32 @llvm.ctpop.i32(i32 %6245)
  %6247 = trunc i32 %6246 to i8
  %6248 = and i8 %6247, 1
  %6249 = xor i8 %6248, 1
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6249, i8* %6250, align 1
  %6251 = xor i32 %6237, %6236
  %6252 = xor i32 %6251, %6238
  %6253 = lshr i32 %6252, 4
  %6254 = trunc i32 %6253 to i8
  %6255 = and i8 %6254, 1
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6255, i8* %6256, align 1
  %6257 = icmp eq i32 %6238, 0
  %6258 = zext i1 %6257 to i8
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6258, i8* %6259, align 1
  %6260 = lshr i32 %6238, 31
  %6261 = trunc i32 %6260 to i8
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6261, i8* %6262, align 1
  %6263 = lshr i32 %6236, 31
  %6264 = lshr i32 %6237, 31
  %6265 = xor i32 %6260, %6263
  %6266 = xor i32 %6260, %6264
  %6267 = add i32 %6265, %6266
  %6268 = icmp eq i32 %6267, 2
  %6269 = zext i1 %6268 to i8
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6269, i8* %6270, align 1
  store %struct.Memory* %loadMem_4401d9, %struct.Memory** %MEMORY
  %loadMem_4401e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 33
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 5
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RCX.i350 = bitcast %union.anon* %6276 to i64*
  %6277 = load i64, i64* %PC.i349
  %6278 = add i64 %6277, 7
  store i64 %6278, i64* %PC.i349
  %6279 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %6280 = zext i32 %6279 to i64
  store i64 %6280, i64* %RCX.i350, align 8
  store %struct.Memory* %loadMem_4401e0, %struct.Memory** %MEMORY
  %loadMem_4401e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6282 = getelementptr inbounds %struct.GPR, %struct.GPR* %6281, i32 0, i32 33
  %6283 = getelementptr inbounds %struct.Reg, %struct.Reg* %6282, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %6283 to i64*
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 5
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %6287 = bitcast %union.anon* %6286 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6287, i32 0, i32 0
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 7
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %RDX.i348 = bitcast %union.anon* %6290 to i64*
  %6291 = load i64, i64* %RDX.i348
  %6292 = load i8, i8* %CL.i
  %6293 = zext i8 %6292 to i64
  %6294 = load i64, i64* %PC.i347
  %6295 = add i64 %6294, 2
  store i64 %6295, i64* %PC.i347
  %6296 = trunc i64 %6293 to i5
  switch i5 %6296, label %6300 [
    i5 0, label %routine_sarl__cl___edx.exit
    i5 1, label %6297
  ]

; <label>:6297:                                   ; preds = %block_4401a6
  %6298 = shl i64 %6291, 32
  %6299 = ashr i64 %6298, 33
  br label %6307

; <label>:6300:                                   ; preds = %block_4401a6
  %6301 = and i64 %6293, 31
  %6302 = add i64 %6301, -1
  %6303 = shl i64 %6291, 32
  %6304 = ashr exact i64 %6303, 32
  %6305 = ashr i64 %6304, %6302
  %6306 = lshr i64 %6305, 1
  br label %6307

; <label>:6307:                                   ; preds = %6300, %6297
  %6308 = phi i64 [ %6306, %6300 ], [ %6299, %6297 ]
  %6309 = phi i64 [ %6305, %6300 ], [ %6291, %6297 ]
  %6310 = trunc i64 %6309 to i8
  %6311 = and i8 %6310, 1
  %6312 = trunc i64 %6308 to i32
  %6313 = and i64 %6308, 4294967295
  store i64 %6313, i64* %RDX.i348, align 8
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6311, i8* %6314, align 1
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6316 = and i32 %6312, 255
  %6317 = call i32 @llvm.ctpop.i32(i32 %6316)
  %6318 = trunc i32 %6317 to i8
  %6319 = and i8 %6318, 1
  %6320 = xor i8 %6319, 1
  store i8 %6320, i8* %6315, align 1
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6321, align 1
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6323 = icmp eq i32 %6312, 0
  %6324 = zext i1 %6323 to i8
  store i8 %6324, i8* %6322, align 1
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6326 = lshr i32 %6312, 31
  %6327 = trunc i32 %6326 to i8
  store i8 %6327, i8* %6325, align 1
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6328, align 1
  br label %routine_sarl__cl___edx.exit

routine_sarl__cl___edx.exit:                      ; preds = %block_4401a6, %6307
  store %struct.Memory* %loadMem_4401e7, %struct.Memory** %MEMORY
  %loadMem_4401e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 33
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %6331 to i64*
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 1
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %RAX.i346 = bitcast %union.anon* %6334 to i64*
  %6335 = load i64, i64* %PC.i345
  %6336 = add i64 %6335, 8
  store i64 %6336, i64* %PC.i345
  %6337 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %6337, i64* %RAX.i346, align 8
  store %struct.Memory* %loadMem_4401e9, %struct.Memory** %MEMORY
  %loadMem_4401f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 33
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %6340 to i64*
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 1
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %RAX.i344 = bitcast %union.anon* %6343 to i64*
  %6344 = load i64, i64* %RAX.i344
  %6345 = add i64 %6344, 8
  %6346 = load i64, i64* %PC.i343
  %6347 = add i64 %6346, 4
  store i64 %6347, i64* %PC.i343
  %6348 = inttoptr i64 %6345 to i64*
  %6349 = load i64, i64* %6348
  store i64 %6349, i64* %RAX.i344, align 8
  store %struct.Memory* %loadMem_4401f1, %struct.Memory** %MEMORY
  %loadMem_4401f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6351 = getelementptr inbounds %struct.GPR, %struct.GPR* %6350, i32 0, i32 33
  %6352 = getelementptr inbounds %struct.Reg, %struct.Reg* %6351, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %6352 to i64*
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6354 = getelementptr inbounds %struct.GPR, %struct.GPR* %6353, i32 0, i32 9
  %6355 = getelementptr inbounds %struct.Reg, %struct.Reg* %6354, i32 0, i32 0
  %RSI.i341 = bitcast %union.anon* %6355 to i64*
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6357 = getelementptr inbounds %struct.GPR, %struct.GPR* %6356, i32 0, i32 15
  %6358 = getelementptr inbounds %struct.Reg, %struct.Reg* %6357, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %6358 to i64*
  %6359 = load i64, i64* %RBP.i342
  %6360 = sub i64 %6359, 36
  %6361 = load i64, i64* %PC.i340
  %6362 = add i64 %6361, 5
  store i64 %6362, i64* %PC.i340
  %6363 = inttoptr i64 %6360 to i16*
  %6364 = load i16, i16* %6363
  %6365 = sext i16 %6364 to i64
  store i64 %6365, i64* %RSI.i341, align 8
  store %struct.Memory* %loadMem_4401f5, %struct.Memory** %MEMORY
  %loadMem_4401fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6367 = getelementptr inbounds %struct.GPR, %struct.GPR* %6366, i32 0, i32 33
  %6368 = getelementptr inbounds %struct.Reg, %struct.Reg* %6367, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %6368 to i64*
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 1
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %RAX.i338 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 9
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %RSI.i339 = bitcast %union.anon* %6374 to i64*
  %6375 = load i64, i64* %RAX.i338
  %6376 = load i64, i64* %RSI.i339
  %6377 = mul i64 %6376, 8
  %6378 = add i64 %6377, %6375
  %6379 = load i64, i64* %PC.i337
  %6380 = add i64 %6379, 4
  store i64 %6380, i64* %PC.i337
  %6381 = inttoptr i64 %6378 to i64*
  %6382 = load i64, i64* %6381
  store i64 %6382, i64* %RAX.i338, align 8
  store %struct.Memory* %loadMem_4401fa, %struct.Memory** %MEMORY
  %loadMem_4401fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 33
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %6385 to i64*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 11
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %RDI.i335 = bitcast %union.anon* %6388 to i64*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 15
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %6391 to i64*
  %6392 = load i64, i64* %RBP.i336
  %6393 = sub i64 %6392, 12
  %6394 = load i64, i64* %PC.i334
  %6395 = add i64 %6394, 3
  store i64 %6395, i64* %PC.i334
  %6396 = inttoptr i64 %6393 to i32*
  %6397 = load i32, i32* %6396
  %6398 = zext i32 %6397 to i64
  store i64 %6398, i64* %RDI.i335, align 8
  store %struct.Memory* %loadMem_4401fe, %struct.Memory** %MEMORY
  %loadMem_440201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6400 = getelementptr inbounds %struct.GPR, %struct.GPR* %6399, i32 0, i32 33
  %6401 = getelementptr inbounds %struct.Reg, %struct.Reg* %6400, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %6401 to i64*
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6403 = getelementptr inbounds %struct.GPR, %struct.GPR* %6402, i32 0, i32 11
  %6404 = getelementptr inbounds %struct.Reg, %struct.Reg* %6403, i32 0, i32 0
  %RDI.i333 = bitcast %union.anon* %6404 to i64*
  %6405 = load i64, i64* %RDI.i333
  %6406 = load i64, i64* %PC.i332
  %6407 = add i64 %6406, 3
  store i64 %6407, i64* %PC.i332
  %6408 = trunc i64 %6405 to i32
  %6409 = add i32 1, %6408
  %6410 = zext i32 %6409 to i64
  store i64 %6410, i64* %RDI.i333, align 8
  %6411 = icmp ult i32 %6409, %6408
  %6412 = icmp ult i32 %6409, 1
  %6413 = or i1 %6411, %6412
  %6414 = zext i1 %6413 to i8
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6414, i8* %6415, align 1
  %6416 = and i32 %6409, 255
  %6417 = call i32 @llvm.ctpop.i32(i32 %6416)
  %6418 = trunc i32 %6417 to i8
  %6419 = and i8 %6418, 1
  %6420 = xor i8 %6419, 1
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6420, i8* %6421, align 1
  %6422 = xor i64 1, %6405
  %6423 = trunc i64 %6422 to i32
  %6424 = xor i32 %6423, %6409
  %6425 = lshr i32 %6424, 4
  %6426 = trunc i32 %6425 to i8
  %6427 = and i8 %6426, 1
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6427, i8* %6428, align 1
  %6429 = icmp eq i32 %6409, 0
  %6430 = zext i1 %6429 to i8
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6430, i8* %6431, align 1
  %6432 = lshr i32 %6409, 31
  %6433 = trunc i32 %6432 to i8
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6433, i8* %6434, align 1
  %6435 = lshr i32 %6408, 31
  %6436 = xor i32 %6432, %6435
  %6437 = add i32 %6436, %6432
  %6438 = icmp eq i32 %6437, 2
  %6439 = zext i1 %6438 to i8
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6439, i8* %6440, align 1
  store %struct.Memory* %loadMem_440201, %struct.Memory** %MEMORY
  %loadMem_440204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 33
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %6443 to i64*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 11
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %6446 to i32*
  %6447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6448 = getelementptr inbounds %struct.GPR, %struct.GPR* %6447, i32 0, i32 9
  %6449 = getelementptr inbounds %struct.Reg, %struct.Reg* %6448, i32 0, i32 0
  %RSI.i331 = bitcast %union.anon* %6449 to i64*
  %6450 = load i32, i32* %EDI.i
  %6451 = zext i32 %6450 to i64
  %6452 = load i64, i64* %PC.i330
  %6453 = add i64 %6452, 3
  store i64 %6453, i64* %PC.i330
  %6454 = shl i64 %6451, 32
  %6455 = ashr exact i64 %6454, 32
  store i64 %6455, i64* %RSI.i331, align 8
  store %struct.Memory* %loadMem_440204, %struct.Memory** %MEMORY
  %loadMem_440207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 33
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %6458 to i64*
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6460 = getelementptr inbounds %struct.GPR, %struct.GPR* %6459, i32 0, i32 1
  %6461 = getelementptr inbounds %struct.Reg, %struct.Reg* %6460, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %6461 to i64*
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6463 = getelementptr inbounds %struct.GPR, %struct.GPR* %6462, i32 0, i32 7
  %6464 = getelementptr inbounds %struct.Reg, %struct.Reg* %6463, i32 0, i32 0
  %RDX.i328 = bitcast %union.anon* %6464 to i64*
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6466 = getelementptr inbounds %struct.GPR, %struct.GPR* %6465, i32 0, i32 9
  %6467 = getelementptr inbounds %struct.Reg, %struct.Reg* %6466, i32 0, i32 0
  %RSI.i329 = bitcast %union.anon* %6467 to i64*
  %6468 = load i64, i64* %RDX.i328
  %6469 = load i64, i64* %RAX.i327
  %6470 = load i64, i64* %RSI.i329
  %6471 = mul i64 %6470, 4
  %6472 = add i64 %6471, %6469
  %6473 = load i64, i64* %PC.i326
  %6474 = add i64 %6473, 3
  store i64 %6474, i64* %PC.i326
  %6475 = trunc i64 %6468 to i32
  %6476 = inttoptr i64 %6472 to i32*
  %6477 = load i32, i32* %6476
  %6478 = add i32 %6477, %6475
  %6479 = zext i32 %6478 to i64
  store i64 %6479, i64* %RDX.i328, align 8
  %6480 = icmp ult i32 %6478, %6475
  %6481 = icmp ult i32 %6478, %6477
  %6482 = or i1 %6480, %6481
  %6483 = zext i1 %6482 to i8
  %6484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6483, i8* %6484, align 1
  %6485 = and i32 %6478, 255
  %6486 = call i32 @llvm.ctpop.i32(i32 %6485)
  %6487 = trunc i32 %6486 to i8
  %6488 = and i8 %6487, 1
  %6489 = xor i8 %6488, 1
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6489, i8* %6490, align 1
  %6491 = xor i32 %6477, %6475
  %6492 = xor i32 %6491, %6478
  %6493 = lshr i32 %6492, 4
  %6494 = trunc i32 %6493 to i8
  %6495 = and i8 %6494, 1
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6495, i8* %6496, align 1
  %6497 = icmp eq i32 %6478, 0
  %6498 = zext i1 %6497 to i8
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6498, i8* %6499, align 1
  %6500 = lshr i32 %6478, 31
  %6501 = trunc i32 %6500 to i8
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6501, i8* %6502, align 1
  %6503 = lshr i32 %6475, 31
  %6504 = lshr i32 %6477, 31
  %6505 = xor i32 %6500, %6503
  %6506 = xor i32 %6500, %6504
  %6507 = add i32 %6505, %6506
  %6508 = icmp eq i32 %6507, 2
  %6509 = zext i1 %6508 to i8
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6509, i8* %6510, align 1
  store %struct.Memory* %loadMem_440207, %struct.Memory** %MEMORY
  %loadMem_44020a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6512 = getelementptr inbounds %struct.GPR, %struct.GPR* %6511, i32 0, i32 33
  %6513 = getelementptr inbounds %struct.Reg, %struct.Reg* %6512, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %6513 to i64*
  %6514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6515 = getelementptr inbounds %struct.GPR, %struct.GPR* %6514, i32 0, i32 7
  %6516 = getelementptr inbounds %struct.Reg, %struct.Reg* %6515, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %6516 to i32*
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6518 = getelementptr inbounds %struct.GPR, %struct.GPR* %6517, i32 0, i32 11
  %6519 = getelementptr inbounds %struct.Reg, %struct.Reg* %6518, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %6519 to i64*
  %6520 = load i32, i32* %EDX.i
  %6521 = zext i32 %6520 to i64
  %6522 = load i64, i64* %PC.i325
  %6523 = add i64 %6522, 2
  store i64 %6523, i64* %PC.i325
  %6524 = and i64 %6521, 4294967295
  store i64 %6524, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_44020a, %struct.Memory** %MEMORY
  %loadMem1_44020c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6526 = getelementptr inbounds %struct.GPR, %struct.GPR* %6525, i32 0, i32 33
  %6527 = getelementptr inbounds %struct.Reg, %struct.Reg* %6526, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %6527 to i64*
  %6528 = load i64, i64* %PC.i324
  %6529 = add i64 %6528, -19196
  %6530 = load i64, i64* %PC.i324
  %6531 = add i64 %6530, 5
  %6532 = load i64, i64* %PC.i324
  %6533 = add i64 %6532, 5
  store i64 %6533, i64* %PC.i324
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6535 = load i64, i64* %6534, align 8
  %6536 = add i64 %6535, -8
  %6537 = inttoptr i64 %6536 to i64*
  store i64 %6531, i64* %6537
  store i64 %6536, i64* %6534, align 8
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6529, i64* %6538, align 8
  store %struct.Memory* %loadMem1_44020c, %struct.Memory** %MEMORY
  %loadMem2_44020c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44020c = load i64, i64* %3
  %call2_44020c = call %struct.Memory* @sub_43b710.clip1a_chr(%struct.State* %0, i64 %loadPC_44020c, %struct.Memory* %loadMem2_44020c)
  store %struct.Memory* %call2_44020c, %struct.Memory** %MEMORY
  %loadMem_440211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 33
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %6541 to i64*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 1
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %AX.i322 = bitcast %union.anon* %6544 to i16*
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6546 = getelementptr inbounds %struct.GPR, %struct.GPR* %6545, i32 0, i32 17
  %6547 = getelementptr inbounds %struct.Reg, %struct.Reg* %6546, i32 0, i32 0
  %R8W.i323 = bitcast %union.anon* %6547 to i16*
  %6548 = load i16, i16* %AX.i322
  %6549 = zext i16 %6548 to i64
  %6550 = load i64, i64* %PC.i321
  %6551 = add i64 %6550, 4
  store i64 %6551, i64* %PC.i321
  store i16 %6548, i16* %R8W.i323, align 2
  store %struct.Memory* %loadMem_440211, %struct.Memory** %MEMORY
  %loadMem_440215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 33
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %6554 to i64*
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6556 = getelementptr inbounds %struct.GPR, %struct.GPR* %6555, i32 0, i32 9
  %6557 = getelementptr inbounds %struct.Reg, %struct.Reg* %6556, i32 0, i32 0
  %RSI.i320 = bitcast %union.anon* %6557 to i64*
  %6558 = load i64, i64* %PC.i319
  %6559 = add i64 %6558, 8
  store i64 %6559, i64* %PC.i319
  %6560 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6560, i64* %RSI.i320, align 8
  store %struct.Memory* %loadMem_440215, %struct.Memory** %MEMORY
  %loadMem_44021d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6562 = getelementptr inbounds %struct.GPR, %struct.GPR* %6561, i32 0, i32 33
  %6563 = getelementptr inbounds %struct.Reg, %struct.Reg* %6562, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %6563 to i64*
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6565 = getelementptr inbounds %struct.GPR, %struct.GPR* %6564, i32 0, i32 9
  %6566 = getelementptr inbounds %struct.Reg, %struct.Reg* %6565, i32 0, i32 0
  %RSI.i318 = bitcast %union.anon* %6566 to i64*
  %6567 = load i64, i64* %RSI.i318
  %6568 = load i64, i64* %PC.i317
  %6569 = add i64 %6568, 7
  store i64 %6569, i64* %PC.i317
  %6570 = add i64 12600, %6567
  store i64 %6570, i64* %RSI.i318, align 8
  %6571 = icmp ult i64 %6570, %6567
  %6572 = icmp ult i64 %6570, 12600
  %6573 = or i1 %6571, %6572
  %6574 = zext i1 %6573 to i8
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6574, i8* %6575, align 1
  %6576 = trunc i64 %6570 to i32
  %6577 = and i32 %6576, 255
  %6578 = call i32 @llvm.ctpop.i32(i32 %6577)
  %6579 = trunc i32 %6578 to i8
  %6580 = and i8 %6579, 1
  %6581 = xor i8 %6580, 1
  %6582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6581, i8* %6582, align 1
  %6583 = xor i64 12600, %6567
  %6584 = xor i64 %6583, %6570
  %6585 = lshr i64 %6584, 4
  %6586 = trunc i64 %6585 to i8
  %6587 = and i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6587, i8* %6588, align 1
  %6589 = icmp eq i64 %6570, 0
  %6590 = zext i1 %6589 to i8
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6590, i8* %6591, align 1
  %6592 = lshr i64 %6570, 63
  %6593 = trunc i64 %6592 to i8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6593, i8* %6594, align 1
  %6595 = lshr i64 %6567, 63
  %6596 = xor i64 %6592, %6595
  %6597 = add i64 %6596, %6592
  %6598 = icmp eq i64 %6597, 2
  %6599 = zext i1 %6598 to i8
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6599, i8* %6600, align 1
  store %struct.Memory* %loadMem_44021d, %struct.Memory** %MEMORY
  %loadMem_440224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %6603 to i64*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 15
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %6606 to i64*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 19
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %R9.i316 = bitcast %union.anon* %6609 to i64*
  %6610 = load i64, i64* %RBP.i315
  %6611 = sub i64 %6610, 40
  %6612 = load i64, i64* %PC.i314
  %6613 = add i64 %6612, 4
  store i64 %6613, i64* %PC.i314
  %6614 = inttoptr i64 %6611 to i32*
  %6615 = load i32, i32* %6614
  %6616 = sext i32 %6615 to i64
  store i64 %6616, i64* %R9.i316, align 8
  store %struct.Memory* %loadMem_440224, %struct.Memory** %MEMORY
  %loadMem_440228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 33
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %6619 to i64*
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6621 = getelementptr inbounds %struct.GPR, %struct.GPR* %6620, i32 0, i32 19
  %6622 = getelementptr inbounds %struct.Reg, %struct.Reg* %6621, i32 0, i32 0
  %R9.i313 = bitcast %union.anon* %6622 to i64*
  %6623 = load i64, i64* %R9.i313
  %6624 = load i64, i64* %PC.i312
  %6625 = add i64 %6624, 4
  store i64 %6625, i64* %PC.i312
  %6626 = shl i64 %6623, 4
  %6627 = icmp slt i64 %6626, 0
  %6628 = shl i64 %6626, 1
  store i64 %6628, i64* %R9.i313, align 8
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6630 = zext i1 %6627 to i8
  store i8 %6630, i8* %6629, align 1
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6632 = trunc i64 %6628 to i32
  %6633 = and i32 %6632, 254
  %6634 = call i32 @llvm.ctpop.i32(i32 %6633)
  %6635 = trunc i32 %6634 to i8
  %6636 = and i8 %6635, 1
  %6637 = xor i8 %6636, 1
  store i8 %6637, i8* %6631, align 1
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6638, align 1
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6640 = icmp eq i64 %6628, 0
  %6641 = zext i1 %6640 to i8
  store i8 %6641, i8* %6639, align 1
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6643 = lshr i64 %6628, 63
  %6644 = trunc i64 %6643 to i8
  store i8 %6644, i8* %6642, align 1
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6645, align 1
  store %struct.Memory* %loadMem_440228, %struct.Memory** %MEMORY
  %loadMem_44022c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 33
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %6648 to i64*
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 9
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %RSI.i310 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 19
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %R9.i311 = bitcast %union.anon* %6654 to i64*
  %6655 = load i64, i64* %RSI.i310
  %6656 = load i64, i64* %R9.i311
  %6657 = load i64, i64* %PC.i309
  %6658 = add i64 %6657, 3
  store i64 %6658, i64* %PC.i309
  %6659 = add i64 %6656, %6655
  store i64 %6659, i64* %RSI.i310, align 8
  %6660 = icmp ult i64 %6659, %6655
  %6661 = icmp ult i64 %6659, %6656
  %6662 = or i1 %6660, %6661
  %6663 = zext i1 %6662 to i8
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6663, i8* %6664, align 1
  %6665 = trunc i64 %6659 to i32
  %6666 = and i32 %6665, 255
  %6667 = call i32 @llvm.ctpop.i32(i32 %6666)
  %6668 = trunc i32 %6667 to i8
  %6669 = and i8 %6668, 1
  %6670 = xor i8 %6669, 1
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6670, i8* %6671, align 1
  %6672 = xor i64 %6656, %6655
  %6673 = xor i64 %6672, %6659
  %6674 = lshr i64 %6673, 4
  %6675 = trunc i64 %6674 to i8
  %6676 = and i8 %6675, 1
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6676, i8* %6677, align 1
  %6678 = icmp eq i64 %6659, 0
  %6679 = zext i1 %6678 to i8
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6679, i8* %6680, align 1
  %6681 = lshr i64 %6659, 63
  %6682 = trunc i64 %6681 to i8
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6682, i8* %6683, align 1
  %6684 = lshr i64 %6655, 63
  %6685 = lshr i64 %6656, 63
  %6686 = xor i64 %6681, %6684
  %6687 = xor i64 %6681, %6685
  %6688 = add i64 %6686, %6687
  %6689 = icmp eq i64 %6688, 2
  %6690 = zext i1 %6689 to i8
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6690, i8* %6691, align 1
  store %struct.Memory* %loadMem_44022c, %struct.Memory** %MEMORY
  %loadMem_44022f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6693 = getelementptr inbounds %struct.GPR, %struct.GPR* %6692, i32 0, i32 33
  %6694 = getelementptr inbounds %struct.Reg, %struct.Reg* %6693, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %6694 to i64*
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6696 = getelementptr inbounds %struct.GPR, %struct.GPR* %6695, i32 0, i32 15
  %6697 = getelementptr inbounds %struct.Reg, %struct.Reg* %6696, i32 0, i32 0
  %RBP.i307 = bitcast %union.anon* %6697 to i64*
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 19
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %R9.i308 = bitcast %union.anon* %6700 to i64*
  %6701 = load i64, i64* %RBP.i307
  %6702 = sub i64 %6701, 44
  %6703 = load i64, i64* %PC.i306
  %6704 = add i64 %6703, 4
  store i64 %6704, i64* %PC.i306
  %6705 = inttoptr i64 %6702 to i32*
  %6706 = load i32, i32* %6705
  %6707 = sext i32 %6706 to i64
  store i64 %6707, i64* %R9.i308, align 8
  store %struct.Memory* %loadMem_44022f, %struct.Memory** %MEMORY
  %loadMem_440233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 33
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %6710 to i64*
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6712 = getelementptr inbounds %struct.GPR, %struct.GPR* %6711, i32 0, i32 17
  %6713 = getelementptr inbounds %struct.Reg, %struct.Reg* %6712, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %6713 to i16*
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6715 = getelementptr inbounds %struct.GPR, %struct.GPR* %6714, i32 0, i32 9
  %6716 = getelementptr inbounds %struct.Reg, %struct.Reg* %6715, i32 0, i32 0
  %RSI.i305 = bitcast %union.anon* %6716 to i64*
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6718 = getelementptr inbounds %struct.GPR, %struct.GPR* %6717, i32 0, i32 19
  %6719 = getelementptr inbounds %struct.Reg, %struct.Reg* %6718, i32 0, i32 0
  %R9.i = bitcast %union.anon* %6719 to i64*
  %6720 = load i64, i64* %RSI.i305
  %6721 = load i64, i64* %R9.i
  %6722 = mul i64 %6721, 2
  %6723 = add i64 %6722, %6720
  %6724 = load i16, i16* %R8W.i
  %6725 = zext i16 %6724 to i64
  %6726 = load i64, i64* %PC.i304
  %6727 = add i64 %6726, 5
  store i64 %6727, i64* %PC.i304
  %6728 = inttoptr i64 %6723 to i16*
  store i16 %6724, i16* %6728
  store %struct.Memory* %loadMem_440233, %struct.Memory** %MEMORY
  %loadMem_440238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 33
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %6731 to i64*
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6733 = getelementptr inbounds %struct.GPR, %struct.GPR* %6732, i32 0, i32 1
  %6734 = getelementptr inbounds %struct.Reg, %struct.Reg* %6733, i32 0, i32 0
  %RAX.i302 = bitcast %union.anon* %6734 to i64*
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6736 = getelementptr inbounds %struct.GPR, %struct.GPR* %6735, i32 0, i32 15
  %6737 = getelementptr inbounds %struct.Reg, %struct.Reg* %6736, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %6737 to i64*
  %6738 = load i64, i64* %RBP.i303
  %6739 = sub i64 %6738, 40
  %6740 = load i64, i64* %PC.i301
  %6741 = add i64 %6740, 3
  store i64 %6741, i64* %PC.i301
  %6742 = inttoptr i64 %6739 to i32*
  %6743 = load i32, i32* %6742
  %6744 = zext i32 %6743 to i64
  store i64 %6744, i64* %RAX.i302, align 8
  store %struct.Memory* %loadMem_440238, %struct.Memory** %MEMORY
  %loadMem_44023b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6746 = getelementptr inbounds %struct.GPR, %struct.GPR* %6745, i32 0, i32 33
  %6747 = getelementptr inbounds %struct.Reg, %struct.Reg* %6746, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %6747 to i64*
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6749 = getelementptr inbounds %struct.GPR, %struct.GPR* %6748, i32 0, i32 1
  %6750 = getelementptr inbounds %struct.Reg, %struct.Reg* %6749, i32 0, i32 0
  %RAX.i300 = bitcast %union.anon* %6750 to i64*
  %6751 = load i64, i64* %RAX.i300
  %6752 = load i64, i64* %PC.i299
  %6753 = add i64 %6752, 3
  store i64 %6753, i64* %PC.i299
  %6754 = trunc i64 %6751 to i32
  %6755 = add i32 1, %6754
  %6756 = zext i32 %6755 to i64
  store i64 %6756, i64* %RAX.i300, align 8
  %6757 = icmp ult i32 %6755, %6754
  %6758 = icmp ult i32 %6755, 1
  %6759 = or i1 %6757, %6758
  %6760 = zext i1 %6759 to i8
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6760, i8* %6761, align 1
  %6762 = and i32 %6755, 255
  %6763 = call i32 @llvm.ctpop.i32(i32 %6762)
  %6764 = trunc i32 %6763 to i8
  %6765 = and i8 %6764, 1
  %6766 = xor i8 %6765, 1
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6766, i8* %6767, align 1
  %6768 = xor i64 1, %6751
  %6769 = trunc i64 %6768 to i32
  %6770 = xor i32 %6769, %6755
  %6771 = lshr i32 %6770, 4
  %6772 = trunc i32 %6771 to i8
  %6773 = and i8 %6772, 1
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6773, i8* %6774, align 1
  %6775 = icmp eq i32 %6755, 0
  %6776 = zext i1 %6775 to i8
  %6777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6776, i8* %6777, align 1
  %6778 = lshr i32 %6755, 31
  %6779 = trunc i32 %6778 to i8
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6779, i8* %6780, align 1
  %6781 = lshr i32 %6754, 31
  %6782 = xor i32 %6778, %6781
  %6783 = add i32 %6782, %6778
  %6784 = icmp eq i32 %6783, 2
  %6785 = zext i1 %6784 to i8
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6785, i8* %6786, align 1
  store %struct.Memory* %loadMem_44023b, %struct.Memory** %MEMORY
  %loadMem_44023e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6788 = getelementptr inbounds %struct.GPR, %struct.GPR* %6787, i32 0, i32 33
  %6789 = getelementptr inbounds %struct.Reg, %struct.Reg* %6788, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %6789 to i64*
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 1
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %EAX.i297 = bitcast %union.anon* %6792 to i32*
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6794 = getelementptr inbounds %struct.GPR, %struct.GPR* %6793, i32 0, i32 15
  %6795 = getelementptr inbounds %struct.Reg, %struct.Reg* %6794, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %6795 to i64*
  %6796 = load i64, i64* %RBP.i298
  %6797 = sub i64 %6796, 40
  %6798 = load i32, i32* %EAX.i297
  %6799 = zext i32 %6798 to i64
  %6800 = load i64, i64* %PC.i296
  %6801 = add i64 %6800, 3
  store i64 %6801, i64* %PC.i296
  %6802 = inttoptr i64 %6797 to i32*
  store i32 %6798, i32* %6802
  store %struct.Memory* %loadMem_44023e, %struct.Memory** %MEMORY
  %loadMem_440241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6804 = getelementptr inbounds %struct.GPR, %struct.GPR* %6803, i32 0, i32 33
  %6805 = getelementptr inbounds %struct.Reg, %struct.Reg* %6804, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %6805 to i64*
  %6806 = load i64, i64* %PC.i295
  %6807 = add i64 %6806, -167
  %6808 = load i64, i64* %PC.i295
  %6809 = add i64 %6808, 5
  store i64 %6809, i64* %PC.i295
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6807, i64* %6810, align 8
  store %struct.Memory* %loadMem_440241, %struct.Memory** %MEMORY
  br label %block_.L_44019a

block_.L_440246:                                  ; preds = %block_.L_44019a
  %loadMem_440246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 33
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %6813 to i64*
  %6814 = load i64, i64* %PC.i294
  %6815 = add i64 %6814, 5
  %6816 = load i64, i64* %PC.i294
  %6817 = add i64 %6816, 5
  store i64 %6817, i64* %PC.i294
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6815, i64* %6818, align 8
  store %struct.Memory* %loadMem_440246, %struct.Memory** %MEMORY
  br label %block_.L_44024b

block_.L_44024b:                                  ; preds = %block_.L_440246
  %loadMem_44024b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6820 = getelementptr inbounds %struct.GPR, %struct.GPR* %6819, i32 0, i32 33
  %6821 = getelementptr inbounds %struct.Reg, %struct.Reg* %6820, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %6821 to i64*
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6823 = getelementptr inbounds %struct.GPR, %struct.GPR* %6822, i32 0, i32 1
  %6824 = getelementptr inbounds %struct.Reg, %struct.Reg* %6823, i32 0, i32 0
  %RAX.i292 = bitcast %union.anon* %6824 to i64*
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 15
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %6827 to i64*
  %6828 = load i64, i64* %RBP.i293
  %6829 = sub i64 %6828, 44
  %6830 = load i64, i64* %PC.i291
  %6831 = add i64 %6830, 3
  store i64 %6831, i64* %PC.i291
  %6832 = inttoptr i64 %6829 to i32*
  %6833 = load i32, i32* %6832
  %6834 = zext i32 %6833 to i64
  store i64 %6834, i64* %RAX.i292, align 8
  store %struct.Memory* %loadMem_44024b, %struct.Memory** %MEMORY
  %loadMem_44024e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 33
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %6837 to i64*
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 1
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %6840 to i64*
  %6841 = load i64, i64* %RAX.i290
  %6842 = load i64, i64* %PC.i289
  %6843 = add i64 %6842, 3
  store i64 %6843, i64* %PC.i289
  %6844 = trunc i64 %6841 to i32
  %6845 = add i32 1, %6844
  %6846 = zext i32 %6845 to i64
  store i64 %6846, i64* %RAX.i290, align 8
  %6847 = icmp ult i32 %6845, %6844
  %6848 = icmp ult i32 %6845, 1
  %6849 = or i1 %6847, %6848
  %6850 = zext i1 %6849 to i8
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6850, i8* %6851, align 1
  %6852 = and i32 %6845, 255
  %6853 = call i32 @llvm.ctpop.i32(i32 %6852)
  %6854 = trunc i32 %6853 to i8
  %6855 = and i8 %6854, 1
  %6856 = xor i8 %6855, 1
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6856, i8* %6857, align 1
  %6858 = xor i64 1, %6841
  %6859 = trunc i64 %6858 to i32
  %6860 = xor i32 %6859, %6845
  %6861 = lshr i32 %6860, 4
  %6862 = trunc i32 %6861 to i8
  %6863 = and i8 %6862, 1
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6863, i8* %6864, align 1
  %6865 = icmp eq i32 %6845, 0
  %6866 = zext i1 %6865 to i8
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6866, i8* %6867, align 1
  %6868 = lshr i32 %6845, 31
  %6869 = trunc i32 %6868 to i8
  %6870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6869, i8* %6870, align 1
  %6871 = lshr i32 %6844, 31
  %6872 = xor i32 %6868, %6871
  %6873 = add i32 %6872, %6868
  %6874 = icmp eq i32 %6873, 2
  %6875 = zext i1 %6874 to i8
  %6876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6875, i8* %6876, align 1
  store %struct.Memory* %loadMem_44024e, %struct.Memory** %MEMORY
  %loadMem_440251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6878 = getelementptr inbounds %struct.GPR, %struct.GPR* %6877, i32 0, i32 33
  %6879 = getelementptr inbounds %struct.Reg, %struct.Reg* %6878, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %6879 to i64*
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6881 = getelementptr inbounds %struct.GPR, %struct.GPR* %6880, i32 0, i32 1
  %6882 = getelementptr inbounds %struct.Reg, %struct.Reg* %6881, i32 0, i32 0
  %EAX.i287 = bitcast %union.anon* %6882 to i32*
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6884 = getelementptr inbounds %struct.GPR, %struct.GPR* %6883, i32 0, i32 15
  %6885 = getelementptr inbounds %struct.Reg, %struct.Reg* %6884, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %6885 to i64*
  %6886 = load i64, i64* %RBP.i288
  %6887 = sub i64 %6886, 44
  %6888 = load i32, i32* %EAX.i287
  %6889 = zext i32 %6888 to i64
  %6890 = load i64, i64* %PC.i286
  %6891 = add i64 %6890, 3
  store i64 %6891, i64* %PC.i286
  %6892 = inttoptr i64 %6887 to i32*
  store i32 %6888, i32* %6892
  store %struct.Memory* %loadMem_440251, %struct.Memory** %MEMORY
  %loadMem_440254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 33
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %6895 to i64*
  %6896 = load i64, i64* %PC.i285
  %6897 = add i64 %6896, -204
  %6898 = load i64, i64* %PC.i285
  %6899 = add i64 %6898, 5
  store i64 %6899, i64* %PC.i285
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6897, i64* %6900, align 8
  store %struct.Memory* %loadMem_440254, %struct.Memory** %MEMORY
  br label %block_.L_440188

block_.L_440259:                                  ; preds = %block_.L_440188
  %loadMem_440259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6902 = getelementptr inbounds %struct.GPR, %struct.GPR* %6901, i32 0, i32 33
  %6903 = getelementptr inbounds %struct.Reg, %struct.Reg* %6902, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %6903 to i64*
  %6904 = load i64, i64* %PC.i284
  %6905 = add i64 %6904, 5
  %6906 = load i64, i64* %PC.i284
  %6907 = add i64 %6906, 5
  store i64 %6907, i64* %PC.i284
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6905, i64* %6908, align 8
  store %struct.Memory* %loadMem_440259, %struct.Memory** %MEMORY
  br label %block_.L_44025e

block_.L_44025e:                                  ; preds = %block_.L_440259, %block_.L_44017d
  %loadMem_44025e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 33
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %6911 to i64*
  %6912 = load i64, i64* %PC.i283
  %6913 = add i64 %6912, 5
  %6914 = load i64, i64* %PC.i283
  %6915 = add i64 %6914, 5
  store i64 %6915, i64* %PC.i283
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6913, i64* %6916, align 8
  store %struct.Memory* %loadMem_44025e, %struct.Memory** %MEMORY
  br label %block_.L_440263

block_.L_440263:                                  ; preds = %block_.L_44025e, %block_.L_440099
  %loadMem_440263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6918 = getelementptr inbounds %struct.GPR, %struct.GPR* %6917, i32 0, i32 33
  %6919 = getelementptr inbounds %struct.Reg, %struct.Reg* %6918, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %6919 to i64*
  %6920 = load i64, i64* %PC.i282
  %6921 = add i64 %6920, 454
  %6922 = load i64, i64* %PC.i282
  %6923 = add i64 %6922, 5
  store i64 %6923, i64* %PC.i282
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6921, i64* %6924, align 8
  store %struct.Memory* %loadMem_440263, %struct.Memory** %MEMORY
  br label %block_.L_440429

block_.L_440268:                                  ; preds = %block_.L_43ff34
  %loadMem_440268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6926 = getelementptr inbounds %struct.GPR, %struct.GPR* %6925, i32 0, i32 33
  %6927 = getelementptr inbounds %struct.Reg, %struct.Reg* %6926, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %6927 to i64*
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6929 = getelementptr inbounds %struct.GPR, %struct.GPR* %6928, i32 0, i32 15
  %6930 = getelementptr inbounds %struct.Reg, %struct.Reg* %6929, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %6930 to i64*
  %6931 = load i64, i64* %RBP.i281
  %6932 = sub i64 %6931, 24
  %6933 = load i64, i64* %PC.i280
  %6934 = add i64 %6933, 4
  store i64 %6934, i64* %PC.i280
  %6935 = inttoptr i64 %6932 to i32*
  %6936 = load i32, i32* %6935
  %6937 = sub i32 %6936, 2
  %6938 = icmp ult i32 %6936, 2
  %6939 = zext i1 %6938 to i8
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6939, i8* %6940, align 1
  %6941 = and i32 %6937, 255
  %6942 = call i32 @llvm.ctpop.i32(i32 %6941)
  %6943 = trunc i32 %6942 to i8
  %6944 = and i8 %6943, 1
  %6945 = xor i8 %6944, 1
  %6946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6945, i8* %6946, align 1
  %6947 = xor i32 %6936, 2
  %6948 = xor i32 %6947, %6937
  %6949 = lshr i32 %6948, 4
  %6950 = trunc i32 %6949 to i8
  %6951 = and i8 %6950, 1
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6951, i8* %6952, align 1
  %6953 = icmp eq i32 %6937, 0
  %6954 = zext i1 %6953 to i8
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6954, i8* %6955, align 1
  %6956 = lshr i32 %6937, 31
  %6957 = trunc i32 %6956 to i8
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6957, i8* %6958, align 1
  %6959 = lshr i32 %6936, 31
  %6960 = xor i32 %6956, %6959
  %6961 = add i32 %6960, %6959
  %6962 = icmp eq i32 %6961, 2
  %6963 = zext i1 %6962 to i8
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6963, i8* %6964, align 1
  store %struct.Memory* %loadMem_440268, %struct.Memory** %MEMORY
  %loadMem_44026c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6966 = getelementptr inbounds %struct.GPR, %struct.GPR* %6965, i32 0, i32 33
  %6967 = getelementptr inbounds %struct.Reg, %struct.Reg* %6966, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %6967 to i64*
  %6968 = load i64, i64* %PC.i279
  %6969 = add i64 %6968, 171
  %6970 = load i64, i64* %PC.i279
  %6971 = add i64 %6970, 6
  %6972 = load i64, i64* %PC.i279
  %6973 = add i64 %6972, 6
  store i64 %6973, i64* %PC.i279
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6975 = load i8, i8* %6974, align 1
  %6976 = icmp eq i8 %6975, 0
  %6977 = zext i1 %6976 to i8
  store i8 %6977, i8* %BRANCH_TAKEN, align 1
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6979 = select i1 %6976, i64 %6969, i64 %6971
  store i64 %6979, i64* %6978, align 8
  store %struct.Memory* %loadMem_44026c, %struct.Memory** %MEMORY
  %loadBr_44026c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44026c = icmp eq i8 %loadBr_44026c, 1
  br i1 %cmpBr_44026c, label %block_.L_440317, label %block_440272

block_440272:                                     ; preds = %block_.L_440268
  %loadMem_440272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 33
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %6982 to i64*
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6984 = getelementptr inbounds %struct.GPR, %struct.GPR* %6983, i32 0, i32 1
  %6985 = getelementptr inbounds %struct.Reg, %struct.Reg* %6984, i32 0, i32 0
  %RAX.i277 = bitcast %union.anon* %6985 to i64*
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6987 = getelementptr inbounds %struct.GPR, %struct.GPR* %6986, i32 0, i32 15
  %6988 = getelementptr inbounds %struct.Reg, %struct.Reg* %6987, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %6988 to i64*
  %6989 = load i64, i64* %RBP.i278
  %6990 = sub i64 %6989, 20
  %6991 = load i64, i64* %PC.i276
  %6992 = add i64 %6991, 3
  store i64 %6992, i64* %PC.i276
  %6993 = inttoptr i64 %6990 to i32*
  %6994 = load i32, i32* %6993
  %6995 = zext i32 %6994 to i64
  store i64 %6995, i64* %RAX.i277, align 8
  store %struct.Memory* %loadMem_440272, %struct.Memory** %MEMORY
  %loadMem_440275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 33
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 1
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %EAX.i274 = bitcast %union.anon* %7001 to i32*
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7003 = getelementptr inbounds %struct.GPR, %struct.GPR* %7002, i32 0, i32 15
  %7004 = getelementptr inbounds %struct.Reg, %struct.Reg* %7003, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %7004 to i64*
  %7005 = load i64, i64* %RBP.i275
  %7006 = sub i64 %7005, 44
  %7007 = load i32, i32* %EAX.i274
  %7008 = zext i32 %7007 to i64
  %7009 = load i64, i64* %PC.i273
  %7010 = add i64 %7009, 3
  store i64 %7010, i64* %PC.i273
  %7011 = inttoptr i64 %7006 to i32*
  store i32 %7007, i32* %7011
  store %struct.Memory* %loadMem_440275, %struct.Memory** %MEMORY
  br label %block_.L_440278

block_.L_440278:                                  ; preds = %block_.L_440304, %block_440272
  %loadMem_440278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 33
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %7014 to i64*
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7016 = getelementptr inbounds %struct.GPR, %struct.GPR* %7015, i32 0, i32 1
  %7017 = getelementptr inbounds %struct.Reg, %struct.Reg* %7016, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %7017 to i64*
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7019 = getelementptr inbounds %struct.GPR, %struct.GPR* %7018, i32 0, i32 15
  %7020 = getelementptr inbounds %struct.Reg, %struct.Reg* %7019, i32 0, i32 0
  %RBP.i272 = bitcast %union.anon* %7020 to i64*
  %7021 = load i64, i64* %RBP.i272
  %7022 = sub i64 %7021, 44
  %7023 = load i64, i64* %PC.i270
  %7024 = add i64 %7023, 3
  store i64 %7024, i64* %PC.i270
  %7025 = inttoptr i64 %7022 to i32*
  %7026 = load i32, i32* %7025
  %7027 = zext i32 %7026 to i64
  store i64 %7027, i64* %RAX.i271, align 8
  store %struct.Memory* %loadMem_440278, %struct.Memory** %MEMORY
  %loadMem_44027b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 33
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %7030 to i64*
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 1
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %EAX.i268 = bitcast %union.anon* %7033 to i32*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 15
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %7036 to i64*
  %7037 = load i32, i32* %EAX.i268
  %7038 = zext i32 %7037 to i64
  %7039 = load i64, i64* %RBP.i269
  %7040 = sub i64 %7039, 52
  %7041 = load i64, i64* %PC.i267
  %7042 = add i64 %7041, 3
  store i64 %7042, i64* %PC.i267
  %7043 = inttoptr i64 %7040 to i32*
  %7044 = load i32, i32* %7043
  %7045 = sub i32 %7037, %7044
  %7046 = icmp ult i32 %7037, %7044
  %7047 = zext i1 %7046 to i8
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7047, i8* %7048, align 1
  %7049 = and i32 %7045, 255
  %7050 = call i32 @llvm.ctpop.i32(i32 %7049)
  %7051 = trunc i32 %7050 to i8
  %7052 = and i8 %7051, 1
  %7053 = xor i8 %7052, 1
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7053, i8* %7054, align 1
  %7055 = xor i32 %7044, %7037
  %7056 = xor i32 %7055, %7045
  %7057 = lshr i32 %7056, 4
  %7058 = trunc i32 %7057 to i8
  %7059 = and i8 %7058, 1
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7059, i8* %7060, align 1
  %7061 = icmp eq i32 %7045, 0
  %7062 = zext i1 %7061 to i8
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7062, i8* %7063, align 1
  %7064 = lshr i32 %7045, 31
  %7065 = trunc i32 %7064 to i8
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7065, i8* %7066, align 1
  %7067 = lshr i32 %7037, 31
  %7068 = lshr i32 %7044, 31
  %7069 = xor i32 %7068, %7067
  %7070 = xor i32 %7064, %7067
  %7071 = add i32 %7070, %7069
  %7072 = icmp eq i32 %7071, 2
  %7073 = zext i1 %7072 to i8
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7073, i8* %7074, align 1
  store %struct.Memory* %loadMem_44027b, %struct.Memory** %MEMORY
  %loadMem_44027e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 33
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %7077 to i64*
  %7078 = load i64, i64* %PC.i266
  %7079 = add i64 %7078, 148
  %7080 = load i64, i64* %PC.i266
  %7081 = add i64 %7080, 6
  %7082 = load i64, i64* %PC.i266
  %7083 = add i64 %7082, 6
  store i64 %7083, i64* %PC.i266
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7085 = load i8, i8* %7084, align 1
  %7086 = icmp ne i8 %7085, 0
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7088 = load i8, i8* %7087, align 1
  %7089 = icmp ne i8 %7088, 0
  %7090 = xor i1 %7086, %7089
  %7091 = xor i1 %7090, true
  %7092 = zext i1 %7091 to i8
  store i8 %7092, i8* %BRANCH_TAKEN, align 1
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7094 = select i1 %7090, i64 %7081, i64 %7079
  store i64 %7094, i64* %7093, align 8
  store %struct.Memory* %loadMem_44027e, %struct.Memory** %MEMORY
  %loadBr_44027e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44027e = icmp eq i8 %loadBr_44027e, 1
  br i1 %cmpBr_44027e, label %block_.L_440312, label %block_440284

block_440284:                                     ; preds = %block_.L_440278
  %loadMem_440284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 33
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7097 to i64*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 1
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %7100 to i64*
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 15
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %RBP.i265 = bitcast %union.anon* %7103 to i64*
  %7104 = load i64, i64* %RBP.i265
  %7105 = sub i64 %7104, 16
  %7106 = load i64, i64* %PC.i263
  %7107 = add i64 %7106, 3
  store i64 %7107, i64* %PC.i263
  %7108 = inttoptr i64 %7105 to i32*
  %7109 = load i32, i32* %7108
  %7110 = zext i32 %7109 to i64
  store i64 %7110, i64* %RAX.i264, align 8
  store %struct.Memory* %loadMem_440284, %struct.Memory** %MEMORY
  %loadMem_440287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7112 = getelementptr inbounds %struct.GPR, %struct.GPR* %7111, i32 0, i32 33
  %7113 = getelementptr inbounds %struct.Reg, %struct.Reg* %7112, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7113 to i64*
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 1
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %EAX.i261 = bitcast %union.anon* %7116 to i32*
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 15
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %7119 to i64*
  %7120 = load i64, i64* %RBP.i262
  %7121 = sub i64 %7120, 40
  %7122 = load i32, i32* %EAX.i261
  %7123 = zext i32 %7122 to i64
  %7124 = load i64, i64* %PC.i260
  %7125 = add i64 %7124, 3
  store i64 %7125, i64* %PC.i260
  %7126 = inttoptr i64 %7121 to i32*
  store i32 %7122, i32* %7126
  store %struct.Memory* %loadMem_440287, %struct.Memory** %MEMORY
  br label %block_.L_44028a

block_.L_44028a:                                  ; preds = %routine_idivl__esi.exit, %block_440284
  %loadMem_44028a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7128 = getelementptr inbounds %struct.GPR, %struct.GPR* %7127, i32 0, i32 33
  %7129 = getelementptr inbounds %struct.Reg, %struct.Reg* %7128, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %7129 to i64*
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7131 = getelementptr inbounds %struct.GPR, %struct.GPR* %7130, i32 0, i32 1
  %7132 = getelementptr inbounds %struct.Reg, %struct.Reg* %7131, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %7132 to i64*
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7134 = getelementptr inbounds %struct.GPR, %struct.GPR* %7133, i32 0, i32 15
  %7135 = getelementptr inbounds %struct.Reg, %struct.Reg* %7134, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %7135 to i64*
  %7136 = load i64, i64* %RBP.i259
  %7137 = sub i64 %7136, 40
  %7138 = load i64, i64* %PC.i257
  %7139 = add i64 %7138, 3
  store i64 %7139, i64* %PC.i257
  %7140 = inttoptr i64 %7137 to i32*
  %7141 = load i32, i32* %7140
  %7142 = zext i32 %7141 to i64
  store i64 %7142, i64* %RAX.i258, align 8
  store %struct.Memory* %loadMem_44028a, %struct.Memory** %MEMORY
  %loadMem_44028d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7144 = getelementptr inbounds %struct.GPR, %struct.GPR* %7143, i32 0, i32 33
  %7145 = getelementptr inbounds %struct.Reg, %struct.Reg* %7144, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %7145 to i64*
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7147 = getelementptr inbounds %struct.GPR, %struct.GPR* %7146, i32 0, i32 1
  %7148 = getelementptr inbounds %struct.Reg, %struct.Reg* %7147, i32 0, i32 0
  %EAX.i255 = bitcast %union.anon* %7148 to i32*
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 15
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %7151 to i64*
  %7152 = load i32, i32* %EAX.i255
  %7153 = zext i32 %7152 to i64
  %7154 = load i64, i64* %RBP.i256
  %7155 = sub i64 %7154, 48
  %7156 = load i64, i64* %PC.i254
  %7157 = add i64 %7156, 3
  store i64 %7157, i64* %PC.i254
  %7158 = inttoptr i64 %7155 to i32*
  %7159 = load i32, i32* %7158
  %7160 = sub i32 %7152, %7159
  %7161 = icmp ult i32 %7152, %7159
  %7162 = zext i1 %7161 to i8
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7162, i8* %7163, align 1
  %7164 = and i32 %7160, 255
  %7165 = call i32 @llvm.ctpop.i32(i32 %7164)
  %7166 = trunc i32 %7165 to i8
  %7167 = and i8 %7166, 1
  %7168 = xor i8 %7167, 1
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7168, i8* %7169, align 1
  %7170 = xor i32 %7159, %7152
  %7171 = xor i32 %7170, %7160
  %7172 = lshr i32 %7171, 4
  %7173 = trunc i32 %7172 to i8
  %7174 = and i8 %7173, 1
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7174, i8* %7175, align 1
  %7176 = icmp eq i32 %7160, 0
  %7177 = zext i1 %7176 to i8
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7177, i8* %7178, align 1
  %7179 = lshr i32 %7160, 31
  %7180 = trunc i32 %7179 to i8
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7180, i8* %7181, align 1
  %7182 = lshr i32 %7152, 31
  %7183 = lshr i32 %7159, 31
  %7184 = xor i32 %7183, %7182
  %7185 = xor i32 %7179, %7182
  %7186 = add i32 %7185, %7184
  %7187 = icmp eq i32 %7186, 2
  %7188 = zext i1 %7187 to i8
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7188, i8* %7189, align 1
  store %struct.Memory* %loadMem_44028d, %struct.Memory** %MEMORY
  %loadMem_440290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7191 = getelementptr inbounds %struct.GPR, %struct.GPR* %7190, i32 0, i32 33
  %7192 = getelementptr inbounds %struct.Reg, %struct.Reg* %7191, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %7192 to i64*
  %7193 = load i64, i64* %PC.i253
  %7194 = add i64 %7193, 111
  %7195 = load i64, i64* %PC.i253
  %7196 = add i64 %7195, 6
  %7197 = load i64, i64* %PC.i253
  %7198 = add i64 %7197, 6
  store i64 %7198, i64* %PC.i253
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7200 = load i8, i8* %7199, align 1
  %7201 = icmp ne i8 %7200, 0
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7203 = load i8, i8* %7202, align 1
  %7204 = icmp ne i8 %7203, 0
  %7205 = xor i1 %7201, %7204
  %7206 = xor i1 %7205, true
  %7207 = zext i1 %7206 to i8
  store i8 %7207, i8* %BRANCH_TAKEN, align 1
  %7208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7209 = select i1 %7205, i64 %7196, i64 %7194
  store i64 %7209, i64* %7208, align 8
  store %struct.Memory* %loadMem_440290, %struct.Memory** %MEMORY
  %loadBr_440290 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440290 = icmp eq i8 %loadBr_440290, 1
  br i1 %cmpBr_440290, label %block_.L_4402ff, label %block_440296

block_440296:                                     ; preds = %block_.L_44028a
  %loadMem_440296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 1
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %7215 to i64*
  %7216 = load i64, i64* %PC.i251
  %7217 = add i64 %7216, 5
  store i64 %7217, i64* %PC.i251
  store i64 2, i64* %RAX.i252, align 8
  store %struct.Memory* %loadMem_440296, %struct.Memory** %MEMORY
  %loadMem_44029b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7219 = getelementptr inbounds %struct.GPR, %struct.GPR* %7218, i32 0, i32 33
  %7220 = getelementptr inbounds %struct.Reg, %struct.Reg* %7219, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %7220 to i64*
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7222 = getelementptr inbounds %struct.GPR, %struct.GPR* %7221, i32 0, i32 5
  %7223 = getelementptr inbounds %struct.Reg, %struct.Reg* %7222, i32 0, i32 0
  %RCX.i249 = bitcast %union.anon* %7223 to i64*
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7225 = getelementptr inbounds %struct.GPR, %struct.GPR* %7224, i32 0, i32 15
  %7226 = getelementptr inbounds %struct.Reg, %struct.Reg* %7225, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %7226 to i64*
  %7227 = load i64, i64* %RBP.i250
  %7228 = sub i64 %7227, 64
  %7229 = load i64, i64* %PC.i248
  %7230 = add i64 %7229, 4
  store i64 %7230, i64* %PC.i248
  %7231 = inttoptr i64 %7228 to i64*
  %7232 = load i64, i64* %7231
  store i64 %7232, i64* %RCX.i249, align 8
  store %struct.Memory* %loadMem_44029b, %struct.Memory** %MEMORY
  %loadMem_44029f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7234 = getelementptr inbounds %struct.GPR, %struct.GPR* %7233, i32 0, i32 33
  %7235 = getelementptr inbounds %struct.Reg, %struct.Reg* %7234, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %7235 to i64*
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7237 = getelementptr inbounds %struct.GPR, %struct.GPR* %7236, i32 0, i32 5
  %7238 = getelementptr inbounds %struct.Reg, %struct.Reg* %7237, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %7238 to i64*
  %7239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7240 = getelementptr inbounds %struct.GPR, %struct.GPR* %7239, i32 0, i32 7
  %7241 = getelementptr inbounds %struct.Reg, %struct.Reg* %7240, i32 0, i32 0
  %RDX.i247 = bitcast %union.anon* %7241 to i64*
  %7242 = load i64, i64* %RCX.i246
  %7243 = load i64, i64* %PC.i245
  %7244 = add i64 %7243, 3
  store i64 %7244, i64* %PC.i245
  store i64 %7242, i64* %RDX.i247, align 8
  store %struct.Memory* %loadMem_44029f, %struct.Memory** %MEMORY
  %loadMem_4402a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7246 = getelementptr inbounds %struct.GPR, %struct.GPR* %7245, i32 0, i32 33
  %7247 = getelementptr inbounds %struct.Reg, %struct.Reg* %7246, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %7247 to i64*
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 7
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %RDX.i244 = bitcast %union.anon* %7250 to i64*
  %7251 = load i64, i64* %RDX.i244
  %7252 = load i64, i64* %PC.i243
  %7253 = add i64 %7252, 4
  store i64 %7253, i64* %PC.i243
  %7254 = add i64 4, %7251
  store i64 %7254, i64* %RDX.i244, align 8
  %7255 = icmp ult i64 %7254, %7251
  %7256 = icmp ult i64 %7254, 4
  %7257 = or i1 %7255, %7256
  %7258 = zext i1 %7257 to i8
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7258, i8* %7259, align 1
  %7260 = trunc i64 %7254 to i32
  %7261 = and i32 %7260, 255
  %7262 = call i32 @llvm.ctpop.i32(i32 %7261)
  %7263 = trunc i32 %7262 to i8
  %7264 = and i8 %7263, 1
  %7265 = xor i8 %7264, 1
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7265, i8* %7266, align 1
  %7267 = xor i64 4, %7251
  %7268 = xor i64 %7267, %7254
  %7269 = lshr i64 %7268, 4
  %7270 = trunc i64 %7269 to i8
  %7271 = and i8 %7270, 1
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7271, i8* %7272, align 1
  %7273 = icmp eq i64 %7254, 0
  %7274 = zext i1 %7273 to i8
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7274, i8* %7275, align 1
  %7276 = lshr i64 %7254, 63
  %7277 = trunc i64 %7276 to i8
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7277, i8* %7278, align 1
  %7279 = lshr i64 %7251, 63
  %7280 = xor i64 %7276, %7279
  %7281 = add i64 %7280, %7276
  %7282 = icmp eq i64 %7281, 2
  %7283 = zext i1 %7282 to i8
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7283, i8* %7284, align 1
  store %struct.Memory* %loadMem_4402a2, %struct.Memory** %MEMORY
  %loadMem_4402a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7286 = getelementptr inbounds %struct.GPR, %struct.GPR* %7285, i32 0, i32 33
  %7287 = getelementptr inbounds %struct.Reg, %struct.Reg* %7286, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %7287 to i64*
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7289 = getelementptr inbounds %struct.GPR, %struct.GPR* %7288, i32 0, i32 7
  %7290 = getelementptr inbounds %struct.Reg, %struct.Reg* %7289, i32 0, i32 0
  %RDX.i241 = bitcast %union.anon* %7290 to i64*
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7292 = getelementptr inbounds %struct.GPR, %struct.GPR* %7291, i32 0, i32 15
  %7293 = getelementptr inbounds %struct.Reg, %struct.Reg* %7292, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %7293 to i64*
  %7294 = load i64, i64* %RBP.i242
  %7295 = sub i64 %7294, 64
  %7296 = load i64, i64* %RDX.i241
  %7297 = load i64, i64* %PC.i240
  %7298 = add i64 %7297, 4
  store i64 %7298, i64* %PC.i240
  %7299 = inttoptr i64 %7295 to i64*
  store i64 %7296, i64* %7299
  store %struct.Memory* %loadMem_4402a6, %struct.Memory** %MEMORY
  %loadMem_4402aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7301 = getelementptr inbounds %struct.GPR, %struct.GPR* %7300, i32 0, i32 33
  %7302 = getelementptr inbounds %struct.Reg, %struct.Reg* %7301, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %7302 to i64*
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7304 = getelementptr inbounds %struct.GPR, %struct.GPR* %7303, i32 0, i32 5
  %7305 = getelementptr inbounds %struct.Reg, %struct.Reg* %7304, i32 0, i32 0
  %RCX.i238 = bitcast %union.anon* %7305 to i64*
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 9
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %RSI.i239 = bitcast %union.anon* %7308 to i64*
  %7309 = load i64, i64* %RCX.i238
  %7310 = load i64, i64* %PC.i237
  %7311 = add i64 %7310, 2
  store i64 %7311, i64* %PC.i237
  %7312 = inttoptr i64 %7309 to i32*
  %7313 = load i32, i32* %7312
  %7314 = zext i32 %7313 to i64
  store i64 %7314, i64* %RSI.i239, align 8
  store %struct.Memory* %loadMem_4402aa, %struct.Memory** %MEMORY
  %loadMem_4402ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 33
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %7317 to i64*
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7319 = getelementptr inbounds %struct.GPR, %struct.GPR* %7318, i32 0, i32 5
  %7320 = getelementptr inbounds %struct.Reg, %struct.Reg* %7319, i32 0, i32 0
  %RCX.i235 = bitcast %union.anon* %7320 to i64*
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7322 = getelementptr inbounds %struct.GPR, %struct.GPR* %7321, i32 0, i32 15
  %7323 = getelementptr inbounds %struct.Reg, %struct.Reg* %7322, i32 0, i32 0
  %RBP.i236 = bitcast %union.anon* %7323 to i64*
  %7324 = load i64, i64* %RBP.i236
  %7325 = sub i64 %7324, 72
  %7326 = load i64, i64* %PC.i234
  %7327 = add i64 %7326, 4
  store i64 %7327, i64* %PC.i234
  %7328 = inttoptr i64 %7325 to i64*
  %7329 = load i64, i64* %7328
  store i64 %7329, i64* %RCX.i235, align 8
  store %struct.Memory* %loadMem_4402ac, %struct.Memory** %MEMORY
  %loadMem_4402b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7331 = getelementptr inbounds %struct.GPR, %struct.GPR* %7330, i32 0, i32 33
  %7332 = getelementptr inbounds %struct.Reg, %struct.Reg* %7331, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %7332 to i64*
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7334 = getelementptr inbounds %struct.GPR, %struct.GPR* %7333, i32 0, i32 5
  %7335 = getelementptr inbounds %struct.Reg, %struct.Reg* %7334, i32 0, i32 0
  %RCX.i232 = bitcast %union.anon* %7335 to i64*
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 7
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %RDX.i233 = bitcast %union.anon* %7338 to i64*
  %7339 = load i64, i64* %RCX.i232
  %7340 = load i64, i64* %PC.i231
  %7341 = add i64 %7340, 3
  store i64 %7341, i64* %PC.i231
  store i64 %7339, i64* %RDX.i233, align 8
  store %struct.Memory* %loadMem_4402b0, %struct.Memory** %MEMORY
  %loadMem_4402b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7343 = getelementptr inbounds %struct.GPR, %struct.GPR* %7342, i32 0, i32 33
  %7344 = getelementptr inbounds %struct.Reg, %struct.Reg* %7343, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %7344 to i64*
  %7345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7346 = getelementptr inbounds %struct.GPR, %struct.GPR* %7345, i32 0, i32 7
  %7347 = getelementptr inbounds %struct.Reg, %struct.Reg* %7346, i32 0, i32 0
  %RDX.i230 = bitcast %union.anon* %7347 to i64*
  %7348 = load i64, i64* %RDX.i230
  %7349 = load i64, i64* %PC.i229
  %7350 = add i64 %7349, 4
  store i64 %7350, i64* %PC.i229
  %7351 = add i64 4, %7348
  store i64 %7351, i64* %RDX.i230, align 8
  %7352 = icmp ult i64 %7351, %7348
  %7353 = icmp ult i64 %7351, 4
  %7354 = or i1 %7352, %7353
  %7355 = zext i1 %7354 to i8
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7355, i8* %7356, align 1
  %7357 = trunc i64 %7351 to i32
  %7358 = and i32 %7357, 255
  %7359 = call i32 @llvm.ctpop.i32(i32 %7358)
  %7360 = trunc i32 %7359 to i8
  %7361 = and i8 %7360, 1
  %7362 = xor i8 %7361, 1
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7362, i8* %7363, align 1
  %7364 = xor i64 4, %7348
  %7365 = xor i64 %7364, %7351
  %7366 = lshr i64 %7365, 4
  %7367 = trunc i64 %7366 to i8
  %7368 = and i8 %7367, 1
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7368, i8* %7369, align 1
  %7370 = icmp eq i64 %7351, 0
  %7371 = zext i1 %7370 to i8
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7371, i8* %7372, align 1
  %7373 = lshr i64 %7351, 63
  %7374 = trunc i64 %7373 to i8
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7374, i8* %7375, align 1
  %7376 = lshr i64 %7348, 63
  %7377 = xor i64 %7373, %7376
  %7378 = add i64 %7377, %7373
  %7379 = icmp eq i64 %7378, 2
  %7380 = zext i1 %7379 to i8
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7380, i8* %7381, align 1
  store %struct.Memory* %loadMem_4402b3, %struct.Memory** %MEMORY
  %loadMem_4402b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 33
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %7384 to i64*
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7386 = getelementptr inbounds %struct.GPR, %struct.GPR* %7385, i32 0, i32 7
  %7387 = getelementptr inbounds %struct.Reg, %struct.Reg* %7386, i32 0, i32 0
  %RDX.i227 = bitcast %union.anon* %7387 to i64*
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 15
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %7390 to i64*
  %7391 = load i64, i64* %RBP.i228
  %7392 = sub i64 %7391, 72
  %7393 = load i64, i64* %RDX.i227
  %7394 = load i64, i64* %PC.i226
  %7395 = add i64 %7394, 4
  store i64 %7395, i64* %PC.i226
  %7396 = inttoptr i64 %7392 to i64*
  store i64 %7393, i64* %7396
  store %struct.Memory* %loadMem_4402b7, %struct.Memory** %MEMORY
  %loadMem_4402bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7398 = getelementptr inbounds %struct.GPR, %struct.GPR* %7397, i32 0, i32 33
  %7399 = getelementptr inbounds %struct.Reg, %struct.Reg* %7398, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %7399 to i64*
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 5
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %RCX.i224 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 9
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RSI.i225 = bitcast %union.anon* %7405 to i64*
  %7406 = load i64, i64* %RSI.i225
  %7407 = load i64, i64* %RCX.i224
  %7408 = load i64, i64* %PC.i223
  %7409 = add i64 %7408, 2
  store i64 %7409, i64* %PC.i223
  %7410 = trunc i64 %7406 to i32
  %7411 = inttoptr i64 %7407 to i32*
  %7412 = load i32, i32* %7411
  %7413 = add i32 %7412, %7410
  %7414 = zext i32 %7413 to i64
  store i64 %7414, i64* %RSI.i225, align 8
  %7415 = icmp ult i32 %7413, %7410
  %7416 = icmp ult i32 %7413, %7412
  %7417 = or i1 %7415, %7416
  %7418 = zext i1 %7417 to i8
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7418, i8* %7419, align 1
  %7420 = and i32 %7413, 255
  %7421 = call i32 @llvm.ctpop.i32(i32 %7420)
  %7422 = trunc i32 %7421 to i8
  %7423 = and i8 %7422, 1
  %7424 = xor i8 %7423, 1
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7424, i8* %7425, align 1
  %7426 = xor i32 %7412, %7410
  %7427 = xor i32 %7426, %7413
  %7428 = lshr i32 %7427, 4
  %7429 = trunc i32 %7428 to i8
  %7430 = and i8 %7429, 1
  %7431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7430, i8* %7431, align 1
  %7432 = icmp eq i32 %7413, 0
  %7433 = zext i1 %7432 to i8
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7433, i8* %7434, align 1
  %7435 = lshr i32 %7413, 31
  %7436 = trunc i32 %7435 to i8
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7436, i8* %7437, align 1
  %7438 = lshr i32 %7410, 31
  %7439 = lshr i32 %7412, 31
  %7440 = xor i32 %7435, %7438
  %7441 = xor i32 %7435, %7439
  %7442 = add i32 %7440, %7441
  %7443 = icmp eq i32 %7442, 2
  %7444 = zext i1 %7443 to i8
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7444, i8* %7445, align 1
  store %struct.Memory* %loadMem_4402bb, %struct.Memory** %MEMORY
  %loadMem_4402bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 33
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %7448 to i64*
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 9
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %RSI.i222 = bitcast %union.anon* %7451 to i64*
  %7452 = load i64, i64* %RSI.i222
  %7453 = load i64, i64* %PC.i221
  %7454 = add i64 %7453, 3
  store i64 %7454, i64* %PC.i221
  %7455 = trunc i64 %7452 to i32
  %7456 = add i32 1, %7455
  %7457 = zext i32 %7456 to i64
  store i64 %7457, i64* %RSI.i222, align 8
  %7458 = icmp ult i32 %7456, %7455
  %7459 = icmp ult i32 %7456, 1
  %7460 = or i1 %7458, %7459
  %7461 = zext i1 %7460 to i8
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7461, i8* %7462, align 1
  %7463 = and i32 %7456, 255
  %7464 = call i32 @llvm.ctpop.i32(i32 %7463)
  %7465 = trunc i32 %7464 to i8
  %7466 = and i8 %7465, 1
  %7467 = xor i8 %7466, 1
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7467, i8* %7468, align 1
  %7469 = xor i64 1, %7452
  %7470 = trunc i64 %7469 to i32
  %7471 = xor i32 %7470, %7456
  %7472 = lshr i32 %7471, 4
  %7473 = trunc i32 %7472 to i8
  %7474 = and i8 %7473, 1
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7474, i8* %7475, align 1
  %7476 = icmp eq i32 %7456, 0
  %7477 = zext i1 %7476 to i8
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7477, i8* %7478, align 1
  %7479 = lshr i32 %7456, 31
  %7480 = trunc i32 %7479 to i8
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7480, i8* %7481, align 1
  %7482 = lshr i32 %7455, 31
  %7483 = xor i32 %7479, %7482
  %7484 = add i32 %7483, %7479
  %7485 = icmp eq i32 %7484, 2
  %7486 = zext i1 %7485 to i8
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7486, i8* %7487, align 1
  store %struct.Memory* %loadMem_4402bd, %struct.Memory** %MEMORY
  %loadMem_4402c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7489 = getelementptr inbounds %struct.GPR, %struct.GPR* %7488, i32 0, i32 33
  %7490 = getelementptr inbounds %struct.Reg, %struct.Reg* %7489, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %7490 to i64*
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 1
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %7493 to i32*
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7495 = getelementptr inbounds %struct.GPR, %struct.GPR* %7494, i32 0, i32 15
  %7496 = getelementptr inbounds %struct.Reg, %struct.Reg* %7495, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %7496 to i64*
  %7497 = load i64, i64* %RBP.i220
  %7498 = sub i64 %7497, 116
  %7499 = load i32, i32* %EAX.i219
  %7500 = zext i32 %7499 to i64
  %7501 = load i64, i64* %PC.i218
  %7502 = add i64 %7501, 3
  store i64 %7502, i64* %PC.i218
  %7503 = inttoptr i64 %7498 to i32*
  store i32 %7499, i32* %7503
  store %struct.Memory* %loadMem_4402c0, %struct.Memory** %MEMORY
  %loadMem_4402c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7505 = getelementptr inbounds %struct.GPR, %struct.GPR* %7504, i32 0, i32 33
  %7506 = getelementptr inbounds %struct.Reg, %struct.Reg* %7505, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %7506 to i64*
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 9
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %ESI.i216 = bitcast %union.anon* %7509 to i32*
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 1
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %RAX.i217 = bitcast %union.anon* %7512 to i64*
  %7513 = load i32, i32* %ESI.i216
  %7514 = zext i32 %7513 to i64
  %7515 = load i64, i64* %PC.i215
  %7516 = add i64 %7515, 2
  store i64 %7516, i64* %PC.i215
  %7517 = and i64 %7514, 4294967295
  store i64 %7517, i64* %RAX.i217, align 8
  store %struct.Memory* %loadMem_4402c3, %struct.Memory** %MEMORY
  %loadMem_4402c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 33
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %7520 to i64*
  %7521 = load i64, i64* %PC.i214
  %7522 = add i64 %7521, 1
  store i64 %7522, i64* %PC.i214
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7525 = bitcast %union.anon* %7524 to i32*
  %7526 = load i32, i32* %7525, align 8
  %7527 = sext i32 %7526 to i64
  %7528 = lshr i64 %7527, 32
  store i64 %7528, i64* %7523, align 8
  store %struct.Memory* %loadMem_4402c5, %struct.Memory** %MEMORY
  %loadMem_4402c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7530 = getelementptr inbounds %struct.GPR, %struct.GPR* %7529, i32 0, i32 33
  %7531 = getelementptr inbounds %struct.Reg, %struct.Reg* %7530, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %7531 to i64*
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 9
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %7534 to i64*
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7536 = getelementptr inbounds %struct.GPR, %struct.GPR* %7535, i32 0, i32 15
  %7537 = getelementptr inbounds %struct.Reg, %struct.Reg* %7536, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %7537 to i64*
  %7538 = load i64, i64* %RBP.i213
  %7539 = sub i64 %7538, 116
  %7540 = load i64, i64* %PC.i212
  %7541 = add i64 %7540, 3
  store i64 %7541, i64* %PC.i212
  %7542 = inttoptr i64 %7539 to i32*
  %7543 = load i32, i32* %7542
  %7544 = zext i32 %7543 to i64
  store i64 %7544, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4402c6, %struct.Memory** %MEMORY
  %loadMem_4402c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7546 = getelementptr inbounds %struct.GPR, %struct.GPR* %7545, i32 0, i32 33
  %7547 = getelementptr inbounds %struct.Reg, %struct.Reg* %7546, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %7547 to i64*
  %7548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7549 = getelementptr inbounds %struct.GPR, %struct.GPR* %7548, i32 0, i32 9
  %7550 = getelementptr inbounds %struct.Reg, %struct.Reg* %7549, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %7550 to i32*
  %7551 = load i32, i32* %ESI.i
  %7552 = zext i32 %7551 to i64
  %7553 = load i64, i64* %PC.i208
  %7554 = add i64 %7553, 2
  store i64 %7554, i64* %PC.i208
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7556 = bitcast %union.anon* %7555 to i32*
  %7557 = load i32, i32* %7556, align 8
  %7558 = zext i32 %7557 to i64
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7560 = bitcast %union.anon* %7559 to i32*
  %7561 = load i32, i32* %7560, align 8
  %7562 = zext i32 %7561 to i64
  %7563 = shl i64 %7552, 32
  %7564 = ashr exact i64 %7563, 32
  %7565 = shl i64 %7562, 32
  %7566 = or i64 %7565, %7558
  %7567 = sdiv i64 %7566, %7564
  %7568 = shl i64 %7567, 32
  %7569 = ashr exact i64 %7568, 32
  %7570 = icmp eq i64 %7567, %7569
  br i1 %7570, label %7575, label %7571

; <label>:7571:                                   ; preds = %block_440296
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7573 = load i64, i64* %7572, align 8
  %7574 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7573, %struct.Memory* %loadMem_4402c9)
  br label %routine_idivl__esi.exit

; <label>:7575:                                   ; preds = %block_440296
  %7576 = srem i64 %7566, %7564
  %7577 = getelementptr inbounds %union.anon, %union.anon* %7555, i64 0, i32 0
  %7578 = and i64 %7567, 4294967295
  store i64 %7578, i64* %7577, align 8
  %7579 = getelementptr inbounds %union.anon, %union.anon* %7559, i64 0, i32 0
  %7580 = and i64 %7576, 4294967295
  store i64 %7580, i64* %7579, align 8
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7581, align 1
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7582, align 1
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7583, align 1
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7584, align 1
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7585, align 1
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7586, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %7571, %7575
  %7587 = phi %struct.Memory* [ %7574, %7571 ], [ %loadMem_4402c9, %7575 ]
  store %struct.Memory* %7587, %struct.Memory** %MEMORY
  %loadMem_4402cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 33
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %7590 to i64*
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 1
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %AX.i = bitcast %union.anon* %7593 to i16*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 11
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %DI.i207 = bitcast %union.anon* %7596 to i16*
  %7597 = load i16, i16* %AX.i
  %7598 = zext i16 %7597 to i64
  %7599 = load i64, i64* %PC.i206
  %7600 = add i64 %7599, 3
  store i64 %7600, i64* %PC.i206
  store i16 %7597, i16* %DI.i207, align 2
  store %struct.Memory* %loadMem_4402cb, %struct.Memory** %MEMORY
  %loadMem_4402ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 33
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %7603 to i64*
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 5
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %RCX.i205 = bitcast %union.anon* %7606 to i64*
  %7607 = load i64, i64* %PC.i204
  %7608 = add i64 %7607, 8
  store i64 %7608, i64* %PC.i204
  %7609 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7609, i64* %RCX.i205, align 8
  store %struct.Memory* %loadMem_4402ce, %struct.Memory** %MEMORY
  %loadMem_4402d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 33
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %7612 to i64*
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 5
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %RCX.i203 = bitcast %union.anon* %7615 to i64*
  %7616 = load i64, i64* %RCX.i203
  %7617 = load i64, i64* %PC.i202
  %7618 = add i64 %7617, 7
  store i64 %7618, i64* %PC.i202
  %7619 = add i64 12600, %7616
  store i64 %7619, i64* %RCX.i203, align 8
  %7620 = icmp ult i64 %7619, %7616
  %7621 = icmp ult i64 %7619, 12600
  %7622 = or i1 %7620, %7621
  %7623 = zext i1 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7623, i8* %7624, align 1
  %7625 = trunc i64 %7619 to i32
  %7626 = and i32 %7625, 255
  %7627 = call i32 @llvm.ctpop.i32(i32 %7626)
  %7628 = trunc i32 %7627 to i8
  %7629 = and i8 %7628, 1
  %7630 = xor i8 %7629, 1
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7630, i8* %7631, align 1
  %7632 = xor i64 12600, %7616
  %7633 = xor i64 %7632, %7619
  %7634 = lshr i64 %7633, 4
  %7635 = trunc i64 %7634 to i8
  %7636 = and i8 %7635, 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7636, i8* %7637, align 1
  %7638 = icmp eq i64 %7619, 0
  %7639 = zext i1 %7638 to i8
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7639, i8* %7640, align 1
  %7641 = lshr i64 %7619, 63
  %7642 = trunc i64 %7641 to i8
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7642, i8* %7643, align 1
  %7644 = lshr i64 %7616, 63
  %7645 = xor i64 %7641, %7644
  %7646 = add i64 %7645, %7641
  %7647 = icmp eq i64 %7646, 2
  %7648 = zext i1 %7647 to i8
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7648, i8* %7649, align 1
  store %struct.Memory* %loadMem_4402d6, %struct.Memory** %MEMORY
  %loadMem_4402dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7651 = getelementptr inbounds %struct.GPR, %struct.GPR* %7650, i32 0, i32 33
  %7652 = getelementptr inbounds %struct.Reg, %struct.Reg* %7651, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %7652 to i64*
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7654 = getelementptr inbounds %struct.GPR, %struct.GPR* %7653, i32 0, i32 15
  %7655 = getelementptr inbounds %struct.Reg, %struct.Reg* %7654, i32 0, i32 0
  %RBP.i200 = bitcast %union.anon* %7655 to i64*
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7657 = getelementptr inbounds %struct.GPR, %struct.GPR* %7656, i32 0, i32 17
  %7658 = getelementptr inbounds %struct.Reg, %struct.Reg* %7657, i32 0, i32 0
  %R8.i201 = bitcast %union.anon* %7658 to i64*
  %7659 = load i64, i64* %RBP.i200
  %7660 = sub i64 %7659, 40
  %7661 = load i64, i64* %PC.i199
  %7662 = add i64 %7661, 4
  store i64 %7662, i64* %PC.i199
  %7663 = inttoptr i64 %7660 to i32*
  %7664 = load i32, i32* %7663
  %7665 = sext i32 %7664 to i64
  store i64 %7665, i64* %R8.i201, align 8
  store %struct.Memory* %loadMem_4402dd, %struct.Memory** %MEMORY
  %loadMem_4402e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 33
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %7668 to i64*
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 17
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %R8.i198 = bitcast %union.anon* %7671 to i64*
  %7672 = load i64, i64* %R8.i198
  %7673 = load i64, i64* %PC.i197
  %7674 = add i64 %7673, 4
  store i64 %7674, i64* %PC.i197
  %7675 = shl i64 %7672, 4
  %7676 = icmp slt i64 %7675, 0
  %7677 = shl i64 %7675, 1
  store i64 %7677, i64* %R8.i198, align 8
  %7678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7679 = zext i1 %7676 to i8
  store i8 %7679, i8* %7678, align 1
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7681 = trunc i64 %7677 to i32
  %7682 = and i32 %7681, 254
  %7683 = call i32 @llvm.ctpop.i32(i32 %7682)
  %7684 = trunc i32 %7683 to i8
  %7685 = and i8 %7684, 1
  %7686 = xor i8 %7685, 1
  store i8 %7686, i8* %7680, align 1
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7687, align 1
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7689 = icmp eq i64 %7677, 0
  %7690 = zext i1 %7689 to i8
  store i8 %7690, i8* %7688, align 1
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7692 = lshr i64 %7677, 63
  %7693 = trunc i64 %7692 to i8
  store i8 %7693, i8* %7691, align 1
  %7694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7694, align 1
  store %struct.Memory* %loadMem_4402e1, %struct.Memory** %MEMORY
  %loadMem_4402e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 33
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %7697 to i64*
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 5
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %RCX.i195 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 17
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %R8.i196 = bitcast %union.anon* %7703 to i64*
  %7704 = load i64, i64* %RCX.i195
  %7705 = load i64, i64* %R8.i196
  %7706 = load i64, i64* %PC.i194
  %7707 = add i64 %7706, 3
  store i64 %7707, i64* %PC.i194
  %7708 = add i64 %7705, %7704
  store i64 %7708, i64* %RCX.i195, align 8
  %7709 = icmp ult i64 %7708, %7704
  %7710 = icmp ult i64 %7708, %7705
  %7711 = or i1 %7709, %7710
  %7712 = zext i1 %7711 to i8
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7712, i8* %7713, align 1
  %7714 = trunc i64 %7708 to i32
  %7715 = and i32 %7714, 255
  %7716 = call i32 @llvm.ctpop.i32(i32 %7715)
  %7717 = trunc i32 %7716 to i8
  %7718 = and i8 %7717, 1
  %7719 = xor i8 %7718, 1
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7719, i8* %7720, align 1
  %7721 = xor i64 %7705, %7704
  %7722 = xor i64 %7721, %7708
  %7723 = lshr i64 %7722, 4
  %7724 = trunc i64 %7723 to i8
  %7725 = and i8 %7724, 1
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7725, i8* %7726, align 1
  %7727 = icmp eq i64 %7708, 0
  %7728 = zext i1 %7727 to i8
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7728, i8* %7729, align 1
  %7730 = lshr i64 %7708, 63
  %7731 = trunc i64 %7730 to i8
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7731, i8* %7732, align 1
  %7733 = lshr i64 %7704, 63
  %7734 = lshr i64 %7705, 63
  %7735 = xor i64 %7730, %7733
  %7736 = xor i64 %7730, %7734
  %7737 = add i64 %7735, %7736
  %7738 = icmp eq i64 %7737, 2
  %7739 = zext i1 %7738 to i8
  %7740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7739, i8* %7740, align 1
  store %struct.Memory* %loadMem_4402e5, %struct.Memory** %MEMORY
  %loadMem_4402e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 33
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %7743 to i64*
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 15
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %7746 to i64*
  %7747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7748 = getelementptr inbounds %struct.GPR, %struct.GPR* %7747, i32 0, i32 17
  %7749 = getelementptr inbounds %struct.Reg, %struct.Reg* %7748, i32 0, i32 0
  %R8.i193 = bitcast %union.anon* %7749 to i64*
  %7750 = load i64, i64* %RBP.i192
  %7751 = sub i64 %7750, 44
  %7752 = load i64, i64* %PC.i191
  %7753 = add i64 %7752, 4
  store i64 %7753, i64* %PC.i191
  %7754 = inttoptr i64 %7751 to i32*
  %7755 = load i32, i32* %7754
  %7756 = sext i32 %7755 to i64
  store i64 %7756, i64* %R8.i193, align 8
  store %struct.Memory* %loadMem_4402e8, %struct.Memory** %MEMORY
  %loadMem_4402ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %7757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7758 = getelementptr inbounds %struct.GPR, %struct.GPR* %7757, i32 0, i32 33
  %7759 = getelementptr inbounds %struct.Reg, %struct.Reg* %7758, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %7759 to i64*
  %7760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7761 = getelementptr inbounds %struct.GPR, %struct.GPR* %7760, i32 0, i32 11
  %7762 = getelementptr inbounds %struct.Reg, %struct.Reg* %7761, i32 0, i32 0
  %DI.i = bitcast %union.anon* %7762 to i16*
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7764 = getelementptr inbounds %struct.GPR, %struct.GPR* %7763, i32 0, i32 5
  %7765 = getelementptr inbounds %struct.Reg, %struct.Reg* %7764, i32 0, i32 0
  %RCX.i190 = bitcast %union.anon* %7765 to i64*
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7767 = getelementptr inbounds %struct.GPR, %struct.GPR* %7766, i32 0, i32 17
  %7768 = getelementptr inbounds %struct.Reg, %struct.Reg* %7767, i32 0, i32 0
  %R8.i = bitcast %union.anon* %7768 to i64*
  %7769 = load i64, i64* %RCX.i190
  %7770 = load i64, i64* %R8.i
  %7771 = mul i64 %7770, 2
  %7772 = add i64 %7771, %7769
  %7773 = load i16, i16* %DI.i
  %7774 = zext i16 %7773 to i64
  %7775 = load i64, i64* %PC.i189
  %7776 = add i64 %7775, 5
  store i64 %7776, i64* %PC.i189
  %7777 = inttoptr i64 %7772 to i16*
  store i16 %7773, i16* %7777
  store %struct.Memory* %loadMem_4402ec, %struct.Memory** %MEMORY
  %loadMem_4402f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 33
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %7780 to i64*
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7782 = getelementptr inbounds %struct.GPR, %struct.GPR* %7781, i32 0, i32 1
  %7783 = getelementptr inbounds %struct.Reg, %struct.Reg* %7782, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %7783 to i64*
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7785 = getelementptr inbounds %struct.GPR, %struct.GPR* %7784, i32 0, i32 15
  %7786 = getelementptr inbounds %struct.Reg, %struct.Reg* %7785, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %7786 to i64*
  %7787 = load i64, i64* %RBP.i188
  %7788 = sub i64 %7787, 40
  %7789 = load i64, i64* %PC.i186
  %7790 = add i64 %7789, 3
  store i64 %7790, i64* %PC.i186
  %7791 = inttoptr i64 %7788 to i32*
  %7792 = load i32, i32* %7791
  %7793 = zext i32 %7792 to i64
  store i64 %7793, i64* %RAX.i187, align 8
  store %struct.Memory* %loadMem_4402f1, %struct.Memory** %MEMORY
  %loadMem_4402f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7795 = getelementptr inbounds %struct.GPR, %struct.GPR* %7794, i32 0, i32 33
  %7796 = getelementptr inbounds %struct.Reg, %struct.Reg* %7795, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %7796 to i64*
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7798 = getelementptr inbounds %struct.GPR, %struct.GPR* %7797, i32 0, i32 1
  %7799 = getelementptr inbounds %struct.Reg, %struct.Reg* %7798, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %7799 to i64*
  %7800 = load i64, i64* %RAX.i185
  %7801 = load i64, i64* %PC.i184
  %7802 = add i64 %7801, 3
  store i64 %7802, i64* %PC.i184
  %7803 = trunc i64 %7800 to i32
  %7804 = add i32 1, %7803
  %7805 = zext i32 %7804 to i64
  store i64 %7805, i64* %RAX.i185, align 8
  %7806 = icmp ult i32 %7804, %7803
  %7807 = icmp ult i32 %7804, 1
  %7808 = or i1 %7806, %7807
  %7809 = zext i1 %7808 to i8
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7809, i8* %7810, align 1
  %7811 = and i32 %7804, 255
  %7812 = call i32 @llvm.ctpop.i32(i32 %7811)
  %7813 = trunc i32 %7812 to i8
  %7814 = and i8 %7813, 1
  %7815 = xor i8 %7814, 1
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7815, i8* %7816, align 1
  %7817 = xor i64 1, %7800
  %7818 = trunc i64 %7817 to i32
  %7819 = xor i32 %7818, %7804
  %7820 = lshr i32 %7819, 4
  %7821 = trunc i32 %7820 to i8
  %7822 = and i8 %7821, 1
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7822, i8* %7823, align 1
  %7824 = icmp eq i32 %7804, 0
  %7825 = zext i1 %7824 to i8
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7825, i8* %7826, align 1
  %7827 = lshr i32 %7804, 31
  %7828 = trunc i32 %7827 to i8
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7828, i8* %7829, align 1
  %7830 = lshr i32 %7803, 31
  %7831 = xor i32 %7827, %7830
  %7832 = add i32 %7831, %7827
  %7833 = icmp eq i32 %7832, 2
  %7834 = zext i1 %7833 to i8
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7834, i8* %7835, align 1
  store %struct.Memory* %loadMem_4402f4, %struct.Memory** %MEMORY
  %loadMem_4402f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7837 = getelementptr inbounds %struct.GPR, %struct.GPR* %7836, i32 0, i32 33
  %7838 = getelementptr inbounds %struct.Reg, %struct.Reg* %7837, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %7838 to i64*
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 1
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %EAX.i182 = bitcast %union.anon* %7841 to i32*
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 15
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %7844 to i64*
  %7845 = load i64, i64* %RBP.i183
  %7846 = sub i64 %7845, 40
  %7847 = load i32, i32* %EAX.i182
  %7848 = zext i32 %7847 to i64
  %7849 = load i64, i64* %PC.i181
  %7850 = add i64 %7849, 3
  store i64 %7850, i64* %PC.i181
  %7851 = inttoptr i64 %7846 to i32*
  store i32 %7847, i32* %7851
  store %struct.Memory* %loadMem_4402f7, %struct.Memory** %MEMORY
  %loadMem_4402fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7853 = getelementptr inbounds %struct.GPR, %struct.GPR* %7852, i32 0, i32 33
  %7854 = getelementptr inbounds %struct.Reg, %struct.Reg* %7853, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %7854 to i64*
  %7855 = load i64, i64* %PC.i180
  %7856 = add i64 %7855, -112
  %7857 = load i64, i64* %PC.i180
  %7858 = add i64 %7857, 5
  store i64 %7858, i64* %PC.i180
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7856, i64* %7859, align 8
  store %struct.Memory* %loadMem_4402fa, %struct.Memory** %MEMORY
  br label %block_.L_44028a

block_.L_4402ff:                                  ; preds = %block_.L_44028a
  %loadMem_4402ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 33
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %7862 to i64*
  %7863 = load i64, i64* %PC.i179
  %7864 = add i64 %7863, 5
  %7865 = load i64, i64* %PC.i179
  %7866 = add i64 %7865, 5
  store i64 %7866, i64* %PC.i179
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7864, i64* %7867, align 8
  store %struct.Memory* %loadMem_4402ff, %struct.Memory** %MEMORY
  br label %block_.L_440304

block_.L_440304:                                  ; preds = %block_.L_4402ff
  %loadMem_440304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7869 = getelementptr inbounds %struct.GPR, %struct.GPR* %7868, i32 0, i32 33
  %7870 = getelementptr inbounds %struct.Reg, %struct.Reg* %7869, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %7870 to i64*
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7872 = getelementptr inbounds %struct.GPR, %struct.GPR* %7871, i32 0, i32 1
  %7873 = getelementptr inbounds %struct.Reg, %struct.Reg* %7872, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %7873 to i64*
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7875 = getelementptr inbounds %struct.GPR, %struct.GPR* %7874, i32 0, i32 15
  %7876 = getelementptr inbounds %struct.Reg, %struct.Reg* %7875, i32 0, i32 0
  %RBP.i178 = bitcast %union.anon* %7876 to i64*
  %7877 = load i64, i64* %RBP.i178
  %7878 = sub i64 %7877, 44
  %7879 = load i64, i64* %PC.i176
  %7880 = add i64 %7879, 3
  store i64 %7880, i64* %PC.i176
  %7881 = inttoptr i64 %7878 to i32*
  %7882 = load i32, i32* %7881
  %7883 = zext i32 %7882 to i64
  store i64 %7883, i64* %RAX.i177, align 8
  store %struct.Memory* %loadMem_440304, %struct.Memory** %MEMORY
  %loadMem_440307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 33
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %7886 to i64*
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 1
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %RAX.i175 = bitcast %union.anon* %7889 to i64*
  %7890 = load i64, i64* %RAX.i175
  %7891 = load i64, i64* %PC.i174
  %7892 = add i64 %7891, 3
  store i64 %7892, i64* %PC.i174
  %7893 = trunc i64 %7890 to i32
  %7894 = add i32 1, %7893
  %7895 = zext i32 %7894 to i64
  store i64 %7895, i64* %RAX.i175, align 8
  %7896 = icmp ult i32 %7894, %7893
  %7897 = icmp ult i32 %7894, 1
  %7898 = or i1 %7896, %7897
  %7899 = zext i1 %7898 to i8
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7899, i8* %7900, align 1
  %7901 = and i32 %7894, 255
  %7902 = call i32 @llvm.ctpop.i32(i32 %7901)
  %7903 = trunc i32 %7902 to i8
  %7904 = and i8 %7903, 1
  %7905 = xor i8 %7904, 1
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7905, i8* %7906, align 1
  %7907 = xor i64 1, %7890
  %7908 = trunc i64 %7907 to i32
  %7909 = xor i32 %7908, %7894
  %7910 = lshr i32 %7909, 4
  %7911 = trunc i32 %7910 to i8
  %7912 = and i8 %7911, 1
  %7913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7912, i8* %7913, align 1
  %7914 = icmp eq i32 %7894, 0
  %7915 = zext i1 %7914 to i8
  %7916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7915, i8* %7916, align 1
  %7917 = lshr i32 %7894, 31
  %7918 = trunc i32 %7917 to i8
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7918, i8* %7919, align 1
  %7920 = lshr i32 %7893, 31
  %7921 = xor i32 %7917, %7920
  %7922 = add i32 %7921, %7917
  %7923 = icmp eq i32 %7922, 2
  %7924 = zext i1 %7923 to i8
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7924, i8* %7925, align 1
  store %struct.Memory* %loadMem_440307, %struct.Memory** %MEMORY
  %loadMem_44030a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 33
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 1
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %EAX.i172 = bitcast %union.anon* %7931 to i32*
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7933 = getelementptr inbounds %struct.GPR, %struct.GPR* %7932, i32 0, i32 15
  %7934 = getelementptr inbounds %struct.Reg, %struct.Reg* %7933, i32 0, i32 0
  %RBP.i173 = bitcast %union.anon* %7934 to i64*
  %7935 = load i64, i64* %RBP.i173
  %7936 = sub i64 %7935, 44
  %7937 = load i32, i32* %EAX.i172
  %7938 = zext i32 %7937 to i64
  %7939 = load i64, i64* %PC.i171
  %7940 = add i64 %7939, 3
  store i64 %7940, i64* %PC.i171
  %7941 = inttoptr i64 %7936 to i32*
  store i32 %7937, i32* %7941
  store %struct.Memory* %loadMem_44030a, %struct.Memory** %MEMORY
  %loadMem_44030d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 33
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %7944 to i64*
  %7945 = load i64, i64* %PC.i170
  %7946 = add i64 %7945, -149
  %7947 = load i64, i64* %PC.i170
  %7948 = add i64 %7947, 5
  store i64 %7948, i64* %PC.i170
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7946, i64* %7949, align 8
  store %struct.Memory* %loadMem_44030d, %struct.Memory** %MEMORY
  br label %block_.L_440278

block_.L_440312:                                  ; preds = %block_.L_440278
  %loadMem_440312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 33
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %7952 to i64*
  %7953 = load i64, i64* %PC.i169
  %7954 = add i64 %7953, 274
  %7955 = load i64, i64* %PC.i169
  %7956 = add i64 %7955, 5
  store i64 %7956, i64* %PC.i169
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7954, i64* %7957, align 8
  store %struct.Memory* %loadMem_440312, %struct.Memory** %MEMORY
  br label %block_.L_440424

block_.L_440317:                                  ; preds = %block_.L_440268
  %loadMem_440317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 33
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %7960 to i64*
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7962 = getelementptr inbounds %struct.GPR, %struct.GPR* %7961, i32 0, i32 15
  %7963 = getelementptr inbounds %struct.Reg, %struct.Reg* %7962, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %7963 to i64*
  %7964 = load i64, i64* %RBP.i168
  %7965 = sub i64 %7964, 24
  %7966 = load i64, i64* %PC.i167
  %7967 = add i64 %7966, 4
  store i64 %7967, i64* %PC.i167
  %7968 = inttoptr i64 %7965 to i32*
  %7969 = load i32, i32* %7968
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7970, align 1
  %7971 = and i32 %7969, 255
  %7972 = call i32 @llvm.ctpop.i32(i32 %7971)
  %7973 = trunc i32 %7972 to i8
  %7974 = and i8 %7973, 1
  %7975 = xor i8 %7974, 1
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7975, i8* %7976, align 1
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7977, align 1
  %7978 = icmp eq i32 %7969, 0
  %7979 = zext i1 %7978 to i8
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7979, i8* %7980, align 1
  %7981 = lshr i32 %7969, 31
  %7982 = trunc i32 %7981 to i8
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7982, i8* %7983, align 1
  %7984 = lshr i32 %7969, 31
  %7985 = xor i32 %7981, %7984
  %7986 = add i32 %7985, %7984
  %7987 = icmp eq i32 %7986, 2
  %7988 = zext i1 %7987 to i8
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7988, i8* %7989, align 1
  store %struct.Memory* %loadMem_440317, %struct.Memory** %MEMORY
  %loadMem_44031b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7991 = getelementptr inbounds %struct.GPR, %struct.GPR* %7990, i32 0, i32 33
  %7992 = getelementptr inbounds %struct.Reg, %struct.Reg* %7991, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %7992 to i64*
  %7993 = load i64, i64* %PC.i166
  %7994 = add i64 %7993, 133
  %7995 = load i64, i64* %PC.i166
  %7996 = add i64 %7995, 6
  %7997 = load i64, i64* %PC.i166
  %7998 = add i64 %7997, 6
  store i64 %7998, i64* %PC.i166
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8000 = load i8, i8* %7999, align 1
  %8001 = icmp eq i8 %8000, 0
  %8002 = zext i1 %8001 to i8
  store i8 %8002, i8* %BRANCH_TAKEN, align 1
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8004 = select i1 %8001, i64 %7994, i64 %7996
  store i64 %8004, i64* %8003, align 8
  store %struct.Memory* %loadMem_44031b, %struct.Memory** %MEMORY
  %loadBr_44031b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44031b = icmp eq i8 %loadBr_44031b, 1
  br i1 %cmpBr_44031b, label %block_.L_4403a0, label %block_440321

block_440321:                                     ; preds = %block_.L_440317
  %loadMem_440321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8006 = getelementptr inbounds %struct.GPR, %struct.GPR* %8005, i32 0, i32 33
  %8007 = getelementptr inbounds %struct.Reg, %struct.Reg* %8006, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %8007 to i64*
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8009 = getelementptr inbounds %struct.GPR, %struct.GPR* %8008, i32 0, i32 1
  %8010 = getelementptr inbounds %struct.Reg, %struct.Reg* %8009, i32 0, i32 0
  %RAX.i164 = bitcast %union.anon* %8010 to i64*
  %8011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8012 = getelementptr inbounds %struct.GPR, %struct.GPR* %8011, i32 0, i32 15
  %8013 = getelementptr inbounds %struct.Reg, %struct.Reg* %8012, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %8013 to i64*
  %8014 = load i64, i64* %RBP.i165
  %8015 = sub i64 %8014, 20
  %8016 = load i64, i64* %PC.i163
  %8017 = add i64 %8016, 3
  store i64 %8017, i64* %PC.i163
  %8018 = inttoptr i64 %8015 to i32*
  %8019 = load i32, i32* %8018
  %8020 = zext i32 %8019 to i64
  store i64 %8020, i64* %RAX.i164, align 8
  store %struct.Memory* %loadMem_440321, %struct.Memory** %MEMORY
  %loadMem_440324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8022 = getelementptr inbounds %struct.GPR, %struct.GPR* %8021, i32 0, i32 33
  %8023 = getelementptr inbounds %struct.Reg, %struct.Reg* %8022, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %8023 to i64*
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8025 = getelementptr inbounds %struct.GPR, %struct.GPR* %8024, i32 0, i32 1
  %8026 = getelementptr inbounds %struct.Reg, %struct.Reg* %8025, i32 0, i32 0
  %EAX.i161 = bitcast %union.anon* %8026 to i32*
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8028 = getelementptr inbounds %struct.GPR, %struct.GPR* %8027, i32 0, i32 15
  %8029 = getelementptr inbounds %struct.Reg, %struct.Reg* %8028, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %8029 to i64*
  %8030 = load i64, i64* %RBP.i162
  %8031 = sub i64 %8030, 44
  %8032 = load i32, i32* %EAX.i161
  %8033 = zext i32 %8032 to i64
  %8034 = load i64, i64* %PC.i160
  %8035 = add i64 %8034, 3
  store i64 %8035, i64* %PC.i160
  %8036 = inttoptr i64 %8031 to i32*
  store i32 %8032, i32* %8036
  store %struct.Memory* %loadMem_440324, %struct.Memory** %MEMORY
  br label %block_.L_440327

block_.L_440327:                                  ; preds = %block_.L_44038d, %block_440321
  %loadMem_440327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8038 = getelementptr inbounds %struct.GPR, %struct.GPR* %8037, i32 0, i32 33
  %8039 = getelementptr inbounds %struct.Reg, %struct.Reg* %8038, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %8039 to i64*
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 1
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %8042 to i64*
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 15
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %8045 to i64*
  %8046 = load i64, i64* %RBP.i159
  %8047 = sub i64 %8046, 44
  %8048 = load i64, i64* %PC.i157
  %8049 = add i64 %8048, 3
  store i64 %8049, i64* %PC.i157
  %8050 = inttoptr i64 %8047 to i32*
  %8051 = load i32, i32* %8050
  %8052 = zext i32 %8051 to i64
  store i64 %8052, i64* %RAX.i158, align 8
  store %struct.Memory* %loadMem_440327, %struct.Memory** %MEMORY
  %loadMem_44032a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8054 = getelementptr inbounds %struct.GPR, %struct.GPR* %8053, i32 0, i32 33
  %8055 = getelementptr inbounds %struct.Reg, %struct.Reg* %8054, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %8055 to i64*
  %8056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8057 = getelementptr inbounds %struct.GPR, %struct.GPR* %8056, i32 0, i32 1
  %8058 = getelementptr inbounds %struct.Reg, %struct.Reg* %8057, i32 0, i32 0
  %EAX.i155 = bitcast %union.anon* %8058 to i32*
  %8059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8060 = getelementptr inbounds %struct.GPR, %struct.GPR* %8059, i32 0, i32 15
  %8061 = getelementptr inbounds %struct.Reg, %struct.Reg* %8060, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %8061 to i64*
  %8062 = load i32, i32* %EAX.i155
  %8063 = zext i32 %8062 to i64
  %8064 = load i64, i64* %RBP.i156
  %8065 = sub i64 %8064, 52
  %8066 = load i64, i64* %PC.i154
  %8067 = add i64 %8066, 3
  store i64 %8067, i64* %PC.i154
  %8068 = inttoptr i64 %8065 to i32*
  %8069 = load i32, i32* %8068
  %8070 = sub i32 %8062, %8069
  %8071 = icmp ult i32 %8062, %8069
  %8072 = zext i1 %8071 to i8
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8072, i8* %8073, align 1
  %8074 = and i32 %8070, 255
  %8075 = call i32 @llvm.ctpop.i32(i32 %8074)
  %8076 = trunc i32 %8075 to i8
  %8077 = and i8 %8076, 1
  %8078 = xor i8 %8077, 1
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8078, i8* %8079, align 1
  %8080 = xor i32 %8069, %8062
  %8081 = xor i32 %8080, %8070
  %8082 = lshr i32 %8081, 4
  %8083 = trunc i32 %8082 to i8
  %8084 = and i8 %8083, 1
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8084, i8* %8085, align 1
  %8086 = icmp eq i32 %8070, 0
  %8087 = zext i1 %8086 to i8
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8087, i8* %8088, align 1
  %8089 = lshr i32 %8070, 31
  %8090 = trunc i32 %8089 to i8
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8090, i8* %8091, align 1
  %8092 = lshr i32 %8062, 31
  %8093 = lshr i32 %8069, 31
  %8094 = xor i32 %8093, %8092
  %8095 = xor i32 %8089, %8092
  %8096 = add i32 %8095, %8094
  %8097 = icmp eq i32 %8096, 2
  %8098 = zext i1 %8097 to i8
  %8099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8098, i8* %8099, align 1
  store %struct.Memory* %loadMem_44032a, %struct.Memory** %MEMORY
  %loadMem_44032d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 33
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %8102 to i64*
  %8103 = load i64, i64* %PC.i153
  %8104 = add i64 %8103, 110
  %8105 = load i64, i64* %PC.i153
  %8106 = add i64 %8105, 6
  %8107 = load i64, i64* %PC.i153
  %8108 = add i64 %8107, 6
  store i64 %8108, i64* %PC.i153
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8110 = load i8, i8* %8109, align 1
  %8111 = icmp ne i8 %8110, 0
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8113 = load i8, i8* %8112, align 1
  %8114 = icmp ne i8 %8113, 0
  %8115 = xor i1 %8111, %8114
  %8116 = xor i1 %8115, true
  %8117 = zext i1 %8116 to i8
  store i8 %8117, i8* %BRANCH_TAKEN, align 1
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8119 = select i1 %8115, i64 %8106, i64 %8104
  store i64 %8119, i64* %8118, align 8
  store %struct.Memory* %loadMem_44032d, %struct.Memory** %MEMORY
  %loadBr_44032d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44032d = icmp eq i8 %loadBr_44032d, 1
  br i1 %cmpBr_44032d, label %block_.L_44039b, label %block_440333

block_440333:                                     ; preds = %block_.L_440327
  %loadMem_440333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8121 = getelementptr inbounds %struct.GPR, %struct.GPR* %8120, i32 0, i32 33
  %8122 = getelementptr inbounds %struct.Reg, %struct.Reg* %8121, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %8122 to i64*
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8124 = getelementptr inbounds %struct.GPR, %struct.GPR* %8123, i32 0, i32 1
  %8125 = getelementptr inbounds %struct.Reg, %struct.Reg* %8124, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %8125 to i64*
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8127 = getelementptr inbounds %struct.GPR, %struct.GPR* %8126, i32 0, i32 15
  %8128 = getelementptr inbounds %struct.Reg, %struct.Reg* %8127, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %8128 to i64*
  %8129 = load i64, i64* %RBP.i152
  %8130 = sub i64 %8129, 16
  %8131 = load i64, i64* %PC.i150
  %8132 = add i64 %8131, 3
  store i64 %8132, i64* %PC.i150
  %8133 = inttoptr i64 %8130 to i32*
  %8134 = load i32, i32* %8133
  %8135 = zext i32 %8134 to i64
  store i64 %8135, i64* %RAX.i151, align 8
  store %struct.Memory* %loadMem_440333, %struct.Memory** %MEMORY
  %loadMem_440336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8137 = getelementptr inbounds %struct.GPR, %struct.GPR* %8136, i32 0, i32 33
  %8138 = getelementptr inbounds %struct.Reg, %struct.Reg* %8137, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %8138 to i64*
  %8139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8140 = getelementptr inbounds %struct.GPR, %struct.GPR* %8139, i32 0, i32 1
  %8141 = getelementptr inbounds %struct.Reg, %struct.Reg* %8140, i32 0, i32 0
  %EAX.i148 = bitcast %union.anon* %8141 to i32*
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8143 = getelementptr inbounds %struct.GPR, %struct.GPR* %8142, i32 0, i32 15
  %8144 = getelementptr inbounds %struct.Reg, %struct.Reg* %8143, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %8144 to i64*
  %8145 = load i64, i64* %RBP.i149
  %8146 = sub i64 %8145, 40
  %8147 = load i32, i32* %EAX.i148
  %8148 = zext i32 %8147 to i64
  %8149 = load i64, i64* %PC.i147
  %8150 = add i64 %8149, 3
  store i64 %8150, i64* %PC.i147
  %8151 = inttoptr i64 %8146 to i32*
  store i32 %8147, i32* %8151
  store %struct.Memory* %loadMem_440336, %struct.Memory** %MEMORY
  br label %block_.L_440339

block_.L_440339:                                  ; preds = %block_440345, %block_440333
  %loadMem_440339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8153 = getelementptr inbounds %struct.GPR, %struct.GPR* %8152, i32 0, i32 33
  %8154 = getelementptr inbounds %struct.Reg, %struct.Reg* %8153, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %8154 to i64*
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8156 = getelementptr inbounds %struct.GPR, %struct.GPR* %8155, i32 0, i32 1
  %8157 = getelementptr inbounds %struct.Reg, %struct.Reg* %8156, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %8157 to i64*
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 15
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %RBP.i146 = bitcast %union.anon* %8160 to i64*
  %8161 = load i64, i64* %RBP.i146
  %8162 = sub i64 %8161, 40
  %8163 = load i64, i64* %PC.i144
  %8164 = add i64 %8163, 3
  store i64 %8164, i64* %PC.i144
  %8165 = inttoptr i64 %8162 to i32*
  %8166 = load i32, i32* %8165
  %8167 = zext i32 %8166 to i64
  store i64 %8167, i64* %RAX.i145, align 8
  store %struct.Memory* %loadMem_440339, %struct.Memory** %MEMORY
  %loadMem_44033c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 33
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %8170 to i64*
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8172 = getelementptr inbounds %struct.GPR, %struct.GPR* %8171, i32 0, i32 1
  %8173 = getelementptr inbounds %struct.Reg, %struct.Reg* %8172, i32 0, i32 0
  %EAX.i142 = bitcast %union.anon* %8173 to i32*
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8175 = getelementptr inbounds %struct.GPR, %struct.GPR* %8174, i32 0, i32 15
  %8176 = getelementptr inbounds %struct.Reg, %struct.Reg* %8175, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %8176 to i64*
  %8177 = load i32, i32* %EAX.i142
  %8178 = zext i32 %8177 to i64
  %8179 = load i64, i64* %RBP.i143
  %8180 = sub i64 %8179, 48
  %8181 = load i64, i64* %PC.i141
  %8182 = add i64 %8181, 3
  store i64 %8182, i64* %PC.i141
  %8183 = inttoptr i64 %8180 to i32*
  %8184 = load i32, i32* %8183
  %8185 = sub i32 %8177, %8184
  %8186 = icmp ult i32 %8177, %8184
  %8187 = zext i1 %8186 to i8
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8187, i8* %8188, align 1
  %8189 = and i32 %8185, 255
  %8190 = call i32 @llvm.ctpop.i32(i32 %8189)
  %8191 = trunc i32 %8190 to i8
  %8192 = and i8 %8191, 1
  %8193 = xor i8 %8192, 1
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8193, i8* %8194, align 1
  %8195 = xor i32 %8184, %8177
  %8196 = xor i32 %8195, %8185
  %8197 = lshr i32 %8196, 4
  %8198 = trunc i32 %8197 to i8
  %8199 = and i8 %8198, 1
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8199, i8* %8200, align 1
  %8201 = icmp eq i32 %8185, 0
  %8202 = zext i1 %8201 to i8
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8202, i8* %8203, align 1
  %8204 = lshr i32 %8185, 31
  %8205 = trunc i32 %8204 to i8
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8205, i8* %8206, align 1
  %8207 = lshr i32 %8177, 31
  %8208 = lshr i32 %8184, 31
  %8209 = xor i32 %8208, %8207
  %8210 = xor i32 %8204, %8207
  %8211 = add i32 %8210, %8209
  %8212 = icmp eq i32 %8211, 2
  %8213 = zext i1 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8213, i8* %8214, align 1
  store %struct.Memory* %loadMem_44033c, %struct.Memory** %MEMORY
  %loadMem_44033f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8216 = getelementptr inbounds %struct.GPR, %struct.GPR* %8215, i32 0, i32 33
  %8217 = getelementptr inbounds %struct.Reg, %struct.Reg* %8216, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %8217 to i64*
  %8218 = load i64, i64* %PC.i140
  %8219 = add i64 %8218, 73
  %8220 = load i64, i64* %PC.i140
  %8221 = add i64 %8220, 6
  %8222 = load i64, i64* %PC.i140
  %8223 = add i64 %8222, 6
  store i64 %8223, i64* %PC.i140
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8225 = load i8, i8* %8224, align 1
  %8226 = icmp ne i8 %8225, 0
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8228 = load i8, i8* %8227, align 1
  %8229 = icmp ne i8 %8228, 0
  %8230 = xor i1 %8226, %8229
  %8231 = xor i1 %8230, true
  %8232 = zext i1 %8231 to i8
  store i8 %8232, i8* %BRANCH_TAKEN, align 1
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8234 = select i1 %8230, i64 %8221, i64 %8219
  store i64 %8234, i64* %8233, align 8
  store %struct.Memory* %loadMem_44033f, %struct.Memory** %MEMORY
  %loadBr_44033f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44033f = icmp eq i8 %loadBr_44033f, 1
  br i1 %cmpBr_44033f, label %block_.L_440388, label %block_440345

block_440345:                                     ; preds = %block_.L_440339
  %loadMem_440345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 33
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %8237 to i64*
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8239 = getelementptr inbounds %struct.GPR, %struct.GPR* %8238, i32 0, i32 1
  %8240 = getelementptr inbounds %struct.Reg, %struct.Reg* %8239, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %8240 to i64*
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8242 = getelementptr inbounds %struct.GPR, %struct.GPR* %8241, i32 0, i32 15
  %8243 = getelementptr inbounds %struct.Reg, %struct.Reg* %8242, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %8243 to i64*
  %8244 = load i64, i64* %RBP.i139
  %8245 = sub i64 %8244, 64
  %8246 = load i64, i64* %PC.i137
  %8247 = add i64 %8246, 4
  store i64 %8247, i64* %PC.i137
  %8248 = inttoptr i64 %8245 to i64*
  %8249 = load i64, i64* %8248
  store i64 %8249, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_440345, %struct.Memory** %MEMORY
  %loadMem_440349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8251 = getelementptr inbounds %struct.GPR, %struct.GPR* %8250, i32 0, i32 33
  %8252 = getelementptr inbounds %struct.Reg, %struct.Reg* %8251, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %8252 to i64*
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8254 = getelementptr inbounds %struct.GPR, %struct.GPR* %8253, i32 0, i32 1
  %8255 = getelementptr inbounds %struct.Reg, %struct.Reg* %8254, i32 0, i32 0
  %RAX.i135 = bitcast %union.anon* %8255 to i64*
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 5
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %RCX.i136 = bitcast %union.anon* %8258 to i64*
  %8259 = load i64, i64* %RAX.i135
  %8260 = load i64, i64* %PC.i134
  %8261 = add i64 %8260, 3
  store i64 %8261, i64* %PC.i134
  store i64 %8259, i64* %RCX.i136, align 8
  store %struct.Memory* %loadMem_440349, %struct.Memory** %MEMORY
  %loadMem_44034c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 33
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %8264 to i64*
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8266 = getelementptr inbounds %struct.GPR, %struct.GPR* %8265, i32 0, i32 5
  %8267 = getelementptr inbounds %struct.Reg, %struct.Reg* %8266, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %8267 to i64*
  %8268 = load i64, i64* %RCX.i133
  %8269 = load i64, i64* %PC.i132
  %8270 = add i64 %8269, 4
  store i64 %8270, i64* %PC.i132
  %8271 = add i64 4, %8268
  store i64 %8271, i64* %RCX.i133, align 8
  %8272 = icmp ult i64 %8271, %8268
  %8273 = icmp ult i64 %8271, 4
  %8274 = or i1 %8272, %8273
  %8275 = zext i1 %8274 to i8
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8275, i8* %8276, align 1
  %8277 = trunc i64 %8271 to i32
  %8278 = and i32 %8277, 255
  %8279 = call i32 @llvm.ctpop.i32(i32 %8278)
  %8280 = trunc i32 %8279 to i8
  %8281 = and i8 %8280, 1
  %8282 = xor i8 %8281, 1
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8282, i8* %8283, align 1
  %8284 = xor i64 4, %8268
  %8285 = xor i64 %8284, %8271
  %8286 = lshr i64 %8285, 4
  %8287 = trunc i64 %8286 to i8
  %8288 = and i8 %8287, 1
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8288, i8* %8289, align 1
  %8290 = icmp eq i64 %8271, 0
  %8291 = zext i1 %8290 to i8
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8291, i8* %8292, align 1
  %8293 = lshr i64 %8271, 63
  %8294 = trunc i64 %8293 to i8
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8294, i8* %8295, align 1
  %8296 = lshr i64 %8268, 63
  %8297 = xor i64 %8293, %8296
  %8298 = add i64 %8297, %8293
  %8299 = icmp eq i64 %8298, 2
  %8300 = zext i1 %8299 to i8
  %8301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8300, i8* %8301, align 1
  store %struct.Memory* %loadMem_44034c, %struct.Memory** %MEMORY
  %loadMem_440350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8303 = getelementptr inbounds %struct.GPR, %struct.GPR* %8302, i32 0, i32 33
  %8304 = getelementptr inbounds %struct.Reg, %struct.Reg* %8303, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %8304 to i64*
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8306 = getelementptr inbounds %struct.GPR, %struct.GPR* %8305, i32 0, i32 5
  %8307 = getelementptr inbounds %struct.Reg, %struct.Reg* %8306, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %8307 to i64*
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8309 = getelementptr inbounds %struct.GPR, %struct.GPR* %8308, i32 0, i32 15
  %8310 = getelementptr inbounds %struct.Reg, %struct.Reg* %8309, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %8310 to i64*
  %8311 = load i64, i64* %RBP.i131
  %8312 = sub i64 %8311, 64
  %8313 = load i64, i64* %RCX.i130
  %8314 = load i64, i64* %PC.i129
  %8315 = add i64 %8314, 4
  store i64 %8315, i64* %PC.i129
  %8316 = inttoptr i64 %8312 to i64*
  store i64 %8313, i64* %8316
  store %struct.Memory* %loadMem_440350, %struct.Memory** %MEMORY
  %loadMem_440354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8318 = getelementptr inbounds %struct.GPR, %struct.GPR* %8317, i32 0, i32 33
  %8319 = getelementptr inbounds %struct.Reg, %struct.Reg* %8318, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %8319 to i64*
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8321 = getelementptr inbounds %struct.GPR, %struct.GPR* %8320, i32 0, i32 1
  %8322 = getelementptr inbounds %struct.Reg, %struct.Reg* %8321, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %8322 to i64*
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 7
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %RDX.i128 = bitcast %union.anon* %8325 to i64*
  %8326 = load i64, i64* %RAX.i127
  %8327 = load i64, i64* %PC.i126
  %8328 = add i64 %8327, 2
  store i64 %8328, i64* %PC.i126
  %8329 = inttoptr i64 %8326 to i32*
  %8330 = load i32, i32* %8329
  %8331 = zext i32 %8330 to i64
  store i64 %8331, i64* %RDX.i128, align 8
  store %struct.Memory* %loadMem_440354, %struct.Memory** %MEMORY
  %loadMem_440356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8333 = getelementptr inbounds %struct.GPR, %struct.GPR* %8332, i32 0, i32 33
  %8334 = getelementptr inbounds %struct.Reg, %struct.Reg* %8333, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %8334 to i64*
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8336 = getelementptr inbounds %struct.GPR, %struct.GPR* %8335, i32 0, i32 7
  %8337 = getelementptr inbounds %struct.Reg, %struct.Reg* %8336, i32 0, i32 0
  %DX.i124 = bitcast %union.anon* %8337 to i16*
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8339 = getelementptr inbounds %struct.GPR, %struct.GPR* %8338, i32 0, i32 9
  %8340 = getelementptr inbounds %struct.Reg, %struct.Reg* %8339, i32 0, i32 0
  %SI.i125 = bitcast %union.anon* %8340 to i16*
  %8341 = load i16, i16* %DX.i124
  %8342 = zext i16 %8341 to i64
  %8343 = load i64, i64* %PC.i123
  %8344 = add i64 %8343, 3
  store i64 %8344, i64* %PC.i123
  store i16 %8341, i16* %SI.i125, align 2
  store %struct.Memory* %loadMem_440356, %struct.Memory** %MEMORY
  %loadMem_440359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 33
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %8347 to i64*
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8349 = getelementptr inbounds %struct.GPR, %struct.GPR* %8348, i32 0, i32 1
  %8350 = getelementptr inbounds %struct.Reg, %struct.Reg* %8349, i32 0, i32 0
  %RAX.i122 = bitcast %union.anon* %8350 to i64*
  %8351 = load i64, i64* %PC.i121
  %8352 = add i64 %8351, 8
  store i64 %8352, i64* %PC.i121
  %8353 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8353, i64* %RAX.i122, align 8
  store %struct.Memory* %loadMem_440359, %struct.Memory** %MEMORY
  %loadMem_440361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 33
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %8356 to i64*
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8358 = getelementptr inbounds %struct.GPR, %struct.GPR* %8357, i32 0, i32 1
  %8359 = getelementptr inbounds %struct.Reg, %struct.Reg* %8358, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %8359 to i64*
  %8360 = load i64, i64* %RAX.i120
  %8361 = load i64, i64* %PC.i119
  %8362 = add i64 %8361, 6
  store i64 %8362, i64* %PC.i119
  %8363 = add i64 12600, %8360
  store i64 %8363, i64* %RAX.i120, align 8
  %8364 = icmp ult i64 %8363, %8360
  %8365 = icmp ult i64 %8363, 12600
  %8366 = or i1 %8364, %8365
  %8367 = zext i1 %8366 to i8
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8367, i8* %8368, align 1
  %8369 = trunc i64 %8363 to i32
  %8370 = and i32 %8369, 255
  %8371 = call i32 @llvm.ctpop.i32(i32 %8370)
  %8372 = trunc i32 %8371 to i8
  %8373 = and i8 %8372, 1
  %8374 = xor i8 %8373, 1
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8374, i8* %8375, align 1
  %8376 = xor i64 12600, %8360
  %8377 = xor i64 %8376, %8363
  %8378 = lshr i64 %8377, 4
  %8379 = trunc i64 %8378 to i8
  %8380 = and i8 %8379, 1
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8380, i8* %8381, align 1
  %8382 = icmp eq i64 %8363, 0
  %8383 = zext i1 %8382 to i8
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8383, i8* %8384, align 1
  %8385 = lshr i64 %8363, 63
  %8386 = trunc i64 %8385 to i8
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8386, i8* %8387, align 1
  %8388 = lshr i64 %8360, 63
  %8389 = xor i64 %8385, %8388
  %8390 = add i64 %8389, %8385
  %8391 = icmp eq i64 %8390, 2
  %8392 = zext i1 %8391 to i8
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8392, i8* %8393, align 1
  store %struct.Memory* %loadMem_440361, %struct.Memory** %MEMORY
  %loadMem_440367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 33
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %8396 to i64*
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8398 = getelementptr inbounds %struct.GPR, %struct.GPR* %8397, i32 0, i32 5
  %8399 = getelementptr inbounds %struct.Reg, %struct.Reg* %8398, i32 0, i32 0
  %RCX.i117 = bitcast %union.anon* %8399 to i64*
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 15
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %8402 to i64*
  %8403 = load i64, i64* %RBP.i118
  %8404 = sub i64 %8403, 40
  %8405 = load i64, i64* %PC.i116
  %8406 = add i64 %8405, 4
  store i64 %8406, i64* %PC.i116
  %8407 = inttoptr i64 %8404 to i32*
  %8408 = load i32, i32* %8407
  %8409 = sext i32 %8408 to i64
  store i64 %8409, i64* %RCX.i117, align 8
  store %struct.Memory* %loadMem_440367, %struct.Memory** %MEMORY
  %loadMem_44036b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8411 = getelementptr inbounds %struct.GPR, %struct.GPR* %8410, i32 0, i32 33
  %8412 = getelementptr inbounds %struct.Reg, %struct.Reg* %8411, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %8412 to i64*
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8414 = getelementptr inbounds %struct.GPR, %struct.GPR* %8413, i32 0, i32 5
  %8415 = getelementptr inbounds %struct.Reg, %struct.Reg* %8414, i32 0, i32 0
  %RCX.i115 = bitcast %union.anon* %8415 to i64*
  %8416 = load i64, i64* %RCX.i115
  %8417 = load i64, i64* %PC.i114
  %8418 = add i64 %8417, 4
  store i64 %8418, i64* %PC.i114
  %8419 = shl i64 %8416, 4
  %8420 = icmp slt i64 %8419, 0
  %8421 = shl i64 %8419, 1
  store i64 %8421, i64* %RCX.i115, align 8
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8423 = zext i1 %8420 to i8
  store i8 %8423, i8* %8422, align 1
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8425 = trunc i64 %8421 to i32
  %8426 = and i32 %8425, 254
  %8427 = call i32 @llvm.ctpop.i32(i32 %8426)
  %8428 = trunc i32 %8427 to i8
  %8429 = and i8 %8428, 1
  %8430 = xor i8 %8429, 1
  store i8 %8430, i8* %8424, align 1
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8431, align 1
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8433 = icmp eq i64 %8421, 0
  %8434 = zext i1 %8433 to i8
  store i8 %8434, i8* %8432, align 1
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8436 = lshr i64 %8421, 63
  %8437 = trunc i64 %8436 to i8
  store i8 %8437, i8* %8435, align 1
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8438, align 1
  store %struct.Memory* %loadMem_44036b, %struct.Memory** %MEMORY
  %loadMem_44036f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8440 = getelementptr inbounds %struct.GPR, %struct.GPR* %8439, i32 0, i32 33
  %8441 = getelementptr inbounds %struct.Reg, %struct.Reg* %8440, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %8441 to i64*
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8443 = getelementptr inbounds %struct.GPR, %struct.GPR* %8442, i32 0, i32 1
  %8444 = getelementptr inbounds %struct.Reg, %struct.Reg* %8443, i32 0, i32 0
  %RAX.i112 = bitcast %union.anon* %8444 to i64*
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 5
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %RCX.i113 = bitcast %union.anon* %8447 to i64*
  %8448 = load i64, i64* %RAX.i112
  %8449 = load i64, i64* %RCX.i113
  %8450 = load i64, i64* %PC.i111
  %8451 = add i64 %8450, 3
  store i64 %8451, i64* %PC.i111
  %8452 = add i64 %8449, %8448
  store i64 %8452, i64* %RAX.i112, align 8
  %8453 = icmp ult i64 %8452, %8448
  %8454 = icmp ult i64 %8452, %8449
  %8455 = or i1 %8453, %8454
  %8456 = zext i1 %8455 to i8
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8456, i8* %8457, align 1
  %8458 = trunc i64 %8452 to i32
  %8459 = and i32 %8458, 255
  %8460 = call i32 @llvm.ctpop.i32(i32 %8459)
  %8461 = trunc i32 %8460 to i8
  %8462 = and i8 %8461, 1
  %8463 = xor i8 %8462, 1
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8463, i8* %8464, align 1
  %8465 = xor i64 %8449, %8448
  %8466 = xor i64 %8465, %8452
  %8467 = lshr i64 %8466, 4
  %8468 = trunc i64 %8467 to i8
  %8469 = and i8 %8468, 1
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8469, i8* %8470, align 1
  %8471 = icmp eq i64 %8452, 0
  %8472 = zext i1 %8471 to i8
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8472, i8* %8473, align 1
  %8474 = lshr i64 %8452, 63
  %8475 = trunc i64 %8474 to i8
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8475, i8* %8476, align 1
  %8477 = lshr i64 %8448, 63
  %8478 = lshr i64 %8449, 63
  %8479 = xor i64 %8474, %8477
  %8480 = xor i64 %8474, %8478
  %8481 = add i64 %8479, %8480
  %8482 = icmp eq i64 %8481, 2
  %8483 = zext i1 %8482 to i8
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8483, i8* %8484, align 1
  store %struct.Memory* %loadMem_44036f, %struct.Memory** %MEMORY
  %loadMem_440372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8486 = getelementptr inbounds %struct.GPR, %struct.GPR* %8485, i32 0, i32 33
  %8487 = getelementptr inbounds %struct.Reg, %struct.Reg* %8486, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %8487 to i64*
  %8488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8489 = getelementptr inbounds %struct.GPR, %struct.GPR* %8488, i32 0, i32 5
  %8490 = getelementptr inbounds %struct.Reg, %struct.Reg* %8489, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %8490 to i64*
  %8491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8492 = getelementptr inbounds %struct.GPR, %struct.GPR* %8491, i32 0, i32 15
  %8493 = getelementptr inbounds %struct.Reg, %struct.Reg* %8492, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %8493 to i64*
  %8494 = load i64, i64* %RBP.i110
  %8495 = sub i64 %8494, 44
  %8496 = load i64, i64* %PC.i108
  %8497 = add i64 %8496, 4
  store i64 %8497, i64* %PC.i108
  %8498 = inttoptr i64 %8495 to i32*
  %8499 = load i32, i32* %8498
  %8500 = sext i32 %8499 to i64
  store i64 %8500, i64* %RCX.i109, align 8
  store %struct.Memory* %loadMem_440372, %struct.Memory** %MEMORY
  %loadMem_440376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 33
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %8503 to i64*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 9
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %SI.i105 = bitcast %union.anon* %8506 to i16*
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8508 = getelementptr inbounds %struct.GPR, %struct.GPR* %8507, i32 0, i32 1
  %8509 = getelementptr inbounds %struct.Reg, %struct.Reg* %8508, i32 0, i32 0
  %RAX.i106 = bitcast %union.anon* %8509 to i64*
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8511 = getelementptr inbounds %struct.GPR, %struct.GPR* %8510, i32 0, i32 5
  %8512 = getelementptr inbounds %struct.Reg, %struct.Reg* %8511, i32 0, i32 0
  %RCX.i107 = bitcast %union.anon* %8512 to i64*
  %8513 = load i64, i64* %RAX.i106
  %8514 = load i64, i64* %RCX.i107
  %8515 = mul i64 %8514, 2
  %8516 = add i64 %8515, %8513
  %8517 = load i16, i16* %SI.i105
  %8518 = zext i16 %8517 to i64
  %8519 = load i64, i64* %PC.i104
  %8520 = add i64 %8519, 4
  store i64 %8520, i64* %PC.i104
  %8521 = inttoptr i64 %8516 to i16*
  store i16 %8517, i16* %8521
  store %struct.Memory* %loadMem_440376, %struct.Memory** %MEMORY
  %loadMem_44037a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8523 = getelementptr inbounds %struct.GPR, %struct.GPR* %8522, i32 0, i32 33
  %8524 = getelementptr inbounds %struct.Reg, %struct.Reg* %8523, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %8524 to i64*
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 1
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %8527 to i64*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 15
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %8530 to i64*
  %8531 = load i64, i64* %RBP.i103
  %8532 = sub i64 %8531, 40
  %8533 = load i64, i64* %PC.i101
  %8534 = add i64 %8533, 3
  store i64 %8534, i64* %PC.i101
  %8535 = inttoptr i64 %8532 to i32*
  %8536 = load i32, i32* %8535
  %8537 = zext i32 %8536 to i64
  store i64 %8537, i64* %RAX.i102, align 8
  store %struct.Memory* %loadMem_44037a, %struct.Memory** %MEMORY
  %loadMem_44037d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8539 = getelementptr inbounds %struct.GPR, %struct.GPR* %8538, i32 0, i32 33
  %8540 = getelementptr inbounds %struct.Reg, %struct.Reg* %8539, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %8540 to i64*
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8542 = getelementptr inbounds %struct.GPR, %struct.GPR* %8541, i32 0, i32 1
  %8543 = getelementptr inbounds %struct.Reg, %struct.Reg* %8542, i32 0, i32 0
  %RAX.i100 = bitcast %union.anon* %8543 to i64*
  %8544 = load i64, i64* %RAX.i100
  %8545 = load i64, i64* %PC.i99
  %8546 = add i64 %8545, 3
  store i64 %8546, i64* %PC.i99
  %8547 = trunc i64 %8544 to i32
  %8548 = add i32 1, %8547
  %8549 = zext i32 %8548 to i64
  store i64 %8549, i64* %RAX.i100, align 8
  %8550 = icmp ult i32 %8548, %8547
  %8551 = icmp ult i32 %8548, 1
  %8552 = or i1 %8550, %8551
  %8553 = zext i1 %8552 to i8
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8553, i8* %8554, align 1
  %8555 = and i32 %8548, 255
  %8556 = call i32 @llvm.ctpop.i32(i32 %8555)
  %8557 = trunc i32 %8556 to i8
  %8558 = and i8 %8557, 1
  %8559 = xor i8 %8558, 1
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8559, i8* %8560, align 1
  %8561 = xor i64 1, %8544
  %8562 = trunc i64 %8561 to i32
  %8563 = xor i32 %8562, %8548
  %8564 = lshr i32 %8563, 4
  %8565 = trunc i32 %8564 to i8
  %8566 = and i8 %8565, 1
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8566, i8* %8567, align 1
  %8568 = icmp eq i32 %8548, 0
  %8569 = zext i1 %8568 to i8
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8569, i8* %8570, align 1
  %8571 = lshr i32 %8548, 31
  %8572 = trunc i32 %8571 to i8
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8572, i8* %8573, align 1
  %8574 = lshr i32 %8547, 31
  %8575 = xor i32 %8571, %8574
  %8576 = add i32 %8575, %8571
  %8577 = icmp eq i32 %8576, 2
  %8578 = zext i1 %8577 to i8
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8578, i8* %8579, align 1
  store %struct.Memory* %loadMem_44037d, %struct.Memory** %MEMORY
  %loadMem_440380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8581 = getelementptr inbounds %struct.GPR, %struct.GPR* %8580, i32 0, i32 33
  %8582 = getelementptr inbounds %struct.Reg, %struct.Reg* %8581, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %8582 to i64*
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 1
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %EAX.i97 = bitcast %union.anon* %8585 to i32*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 15
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %8588 to i64*
  %8589 = load i64, i64* %RBP.i98
  %8590 = sub i64 %8589, 40
  %8591 = load i32, i32* %EAX.i97
  %8592 = zext i32 %8591 to i64
  %8593 = load i64, i64* %PC.i96
  %8594 = add i64 %8593, 3
  store i64 %8594, i64* %PC.i96
  %8595 = inttoptr i64 %8590 to i32*
  store i32 %8591, i32* %8595
  store %struct.Memory* %loadMem_440380, %struct.Memory** %MEMORY
  %loadMem_440383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8597 = getelementptr inbounds %struct.GPR, %struct.GPR* %8596, i32 0, i32 33
  %8598 = getelementptr inbounds %struct.Reg, %struct.Reg* %8597, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %8598 to i64*
  %8599 = load i64, i64* %PC.i95
  %8600 = add i64 %8599, -74
  %8601 = load i64, i64* %PC.i95
  %8602 = add i64 %8601, 5
  store i64 %8602, i64* %PC.i95
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8600, i64* %8603, align 8
  store %struct.Memory* %loadMem_440383, %struct.Memory** %MEMORY
  br label %block_.L_440339

block_.L_440388:                                  ; preds = %block_.L_440339
  %loadMem_440388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8605 = getelementptr inbounds %struct.GPR, %struct.GPR* %8604, i32 0, i32 33
  %8606 = getelementptr inbounds %struct.Reg, %struct.Reg* %8605, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %8606 to i64*
  %8607 = load i64, i64* %PC.i94
  %8608 = add i64 %8607, 5
  %8609 = load i64, i64* %PC.i94
  %8610 = add i64 %8609, 5
  store i64 %8610, i64* %PC.i94
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8608, i64* %8611, align 8
  store %struct.Memory* %loadMem_440388, %struct.Memory** %MEMORY
  br label %block_.L_44038d

block_.L_44038d:                                  ; preds = %block_.L_440388
  %loadMem_44038d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 33
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 1
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %RAX.i92 = bitcast %union.anon* %8617 to i64*
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 15
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %8620 to i64*
  %8621 = load i64, i64* %RBP.i93
  %8622 = sub i64 %8621, 44
  %8623 = load i64, i64* %PC.i91
  %8624 = add i64 %8623, 3
  store i64 %8624, i64* %PC.i91
  %8625 = inttoptr i64 %8622 to i32*
  %8626 = load i32, i32* %8625
  %8627 = zext i32 %8626 to i64
  store i64 %8627, i64* %RAX.i92, align 8
  store %struct.Memory* %loadMem_44038d, %struct.Memory** %MEMORY
  %loadMem_440390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8629 = getelementptr inbounds %struct.GPR, %struct.GPR* %8628, i32 0, i32 33
  %8630 = getelementptr inbounds %struct.Reg, %struct.Reg* %8629, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %8630 to i64*
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8632 = getelementptr inbounds %struct.GPR, %struct.GPR* %8631, i32 0, i32 1
  %8633 = getelementptr inbounds %struct.Reg, %struct.Reg* %8632, i32 0, i32 0
  %RAX.i90 = bitcast %union.anon* %8633 to i64*
  %8634 = load i64, i64* %RAX.i90
  %8635 = load i64, i64* %PC.i89
  %8636 = add i64 %8635, 3
  store i64 %8636, i64* %PC.i89
  %8637 = trunc i64 %8634 to i32
  %8638 = add i32 1, %8637
  %8639 = zext i32 %8638 to i64
  store i64 %8639, i64* %RAX.i90, align 8
  %8640 = icmp ult i32 %8638, %8637
  %8641 = icmp ult i32 %8638, 1
  %8642 = or i1 %8640, %8641
  %8643 = zext i1 %8642 to i8
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8643, i8* %8644, align 1
  %8645 = and i32 %8638, 255
  %8646 = call i32 @llvm.ctpop.i32(i32 %8645)
  %8647 = trunc i32 %8646 to i8
  %8648 = and i8 %8647, 1
  %8649 = xor i8 %8648, 1
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8649, i8* %8650, align 1
  %8651 = xor i64 1, %8634
  %8652 = trunc i64 %8651 to i32
  %8653 = xor i32 %8652, %8638
  %8654 = lshr i32 %8653, 4
  %8655 = trunc i32 %8654 to i8
  %8656 = and i8 %8655, 1
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8656, i8* %8657, align 1
  %8658 = icmp eq i32 %8638, 0
  %8659 = zext i1 %8658 to i8
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8659, i8* %8660, align 1
  %8661 = lshr i32 %8638, 31
  %8662 = trunc i32 %8661 to i8
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8662, i8* %8663, align 1
  %8664 = lshr i32 %8637, 31
  %8665 = xor i32 %8661, %8664
  %8666 = add i32 %8665, %8661
  %8667 = icmp eq i32 %8666, 2
  %8668 = zext i1 %8667 to i8
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8668, i8* %8669, align 1
  store %struct.Memory* %loadMem_440390, %struct.Memory** %MEMORY
  %loadMem_440393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8671 = getelementptr inbounds %struct.GPR, %struct.GPR* %8670, i32 0, i32 33
  %8672 = getelementptr inbounds %struct.Reg, %struct.Reg* %8671, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %8672 to i64*
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8674 = getelementptr inbounds %struct.GPR, %struct.GPR* %8673, i32 0, i32 1
  %8675 = getelementptr inbounds %struct.Reg, %struct.Reg* %8674, i32 0, i32 0
  %EAX.i87 = bitcast %union.anon* %8675 to i32*
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8677 = getelementptr inbounds %struct.GPR, %struct.GPR* %8676, i32 0, i32 15
  %8678 = getelementptr inbounds %struct.Reg, %struct.Reg* %8677, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %8678 to i64*
  %8679 = load i64, i64* %RBP.i88
  %8680 = sub i64 %8679, 44
  %8681 = load i32, i32* %EAX.i87
  %8682 = zext i32 %8681 to i64
  %8683 = load i64, i64* %PC.i86
  %8684 = add i64 %8683, 3
  store i64 %8684, i64* %PC.i86
  %8685 = inttoptr i64 %8680 to i32*
  store i32 %8681, i32* %8685
  store %struct.Memory* %loadMem_440393, %struct.Memory** %MEMORY
  %loadMem_440396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 33
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %8688 to i64*
  %8689 = load i64, i64* %PC.i85
  %8690 = add i64 %8689, -111
  %8691 = load i64, i64* %PC.i85
  %8692 = add i64 %8691, 5
  store i64 %8692, i64* %PC.i85
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8690, i64* %8693, align 8
  store %struct.Memory* %loadMem_440396, %struct.Memory** %MEMORY
  br label %block_.L_440327

block_.L_44039b:                                  ; preds = %block_.L_440327
  %loadMem_44039b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 33
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %8696 to i64*
  %8697 = load i64, i64* %PC.i84
  %8698 = add i64 %8697, 132
  %8699 = load i64, i64* %PC.i84
  %8700 = add i64 %8699, 5
  store i64 %8700, i64* %PC.i84
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8698, i64* %8701, align 8
  store %struct.Memory* %loadMem_44039b, %struct.Memory** %MEMORY
  br label %block_.L_44041f

block_.L_4403a0:                                  ; preds = %block_.L_440317
  %loadMem_4403a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8703 = getelementptr inbounds %struct.GPR, %struct.GPR* %8702, i32 0, i32 33
  %8704 = getelementptr inbounds %struct.Reg, %struct.Reg* %8703, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %8704 to i64*
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8706 = getelementptr inbounds %struct.GPR, %struct.GPR* %8705, i32 0, i32 1
  %8707 = getelementptr inbounds %struct.Reg, %struct.Reg* %8706, i32 0, i32 0
  %RAX.i82 = bitcast %union.anon* %8707 to i64*
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 15
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %8710 to i64*
  %8711 = load i64, i64* %RBP.i83
  %8712 = sub i64 %8711, 20
  %8713 = load i64, i64* %PC.i81
  %8714 = add i64 %8713, 3
  store i64 %8714, i64* %PC.i81
  %8715 = inttoptr i64 %8712 to i32*
  %8716 = load i32, i32* %8715
  %8717 = zext i32 %8716 to i64
  store i64 %8717, i64* %RAX.i82, align 8
  store %struct.Memory* %loadMem_4403a0, %struct.Memory** %MEMORY
  %loadMem_4403a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8719 = getelementptr inbounds %struct.GPR, %struct.GPR* %8718, i32 0, i32 33
  %8720 = getelementptr inbounds %struct.Reg, %struct.Reg* %8719, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %8720 to i64*
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8722 = getelementptr inbounds %struct.GPR, %struct.GPR* %8721, i32 0, i32 1
  %8723 = getelementptr inbounds %struct.Reg, %struct.Reg* %8722, i32 0, i32 0
  %EAX.i79 = bitcast %union.anon* %8723 to i32*
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 15
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %8726 to i64*
  %8727 = load i64, i64* %RBP.i80
  %8728 = sub i64 %8727, 44
  %8729 = load i32, i32* %EAX.i79
  %8730 = zext i32 %8729 to i64
  %8731 = load i64, i64* %PC.i78
  %8732 = add i64 %8731, 3
  store i64 %8732, i64* %PC.i78
  %8733 = inttoptr i64 %8728 to i32*
  store i32 %8729, i32* %8733
  store %struct.Memory* %loadMem_4403a3, %struct.Memory** %MEMORY
  br label %block_.L_4403a6

block_.L_4403a6:                                  ; preds = %block_.L_44040c, %block_.L_4403a0
  %loadMem_4403a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 33
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %8736 to i64*
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 1
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %RAX.i76 = bitcast %union.anon* %8739 to i64*
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8741 = getelementptr inbounds %struct.GPR, %struct.GPR* %8740, i32 0, i32 15
  %8742 = getelementptr inbounds %struct.Reg, %struct.Reg* %8741, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %8742 to i64*
  %8743 = load i64, i64* %RBP.i77
  %8744 = sub i64 %8743, 44
  %8745 = load i64, i64* %PC.i75
  %8746 = add i64 %8745, 3
  store i64 %8746, i64* %PC.i75
  %8747 = inttoptr i64 %8744 to i32*
  %8748 = load i32, i32* %8747
  %8749 = zext i32 %8748 to i64
  store i64 %8749, i64* %RAX.i76, align 8
  store %struct.Memory* %loadMem_4403a6, %struct.Memory** %MEMORY
  %loadMem_4403a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 33
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %8752 to i64*
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 1
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %EAX.i73 = bitcast %union.anon* %8755 to i32*
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8757 = getelementptr inbounds %struct.GPR, %struct.GPR* %8756, i32 0, i32 15
  %8758 = getelementptr inbounds %struct.Reg, %struct.Reg* %8757, i32 0, i32 0
  %RBP.i74 = bitcast %union.anon* %8758 to i64*
  %8759 = load i32, i32* %EAX.i73
  %8760 = zext i32 %8759 to i64
  %8761 = load i64, i64* %RBP.i74
  %8762 = sub i64 %8761, 52
  %8763 = load i64, i64* %PC.i72
  %8764 = add i64 %8763, 3
  store i64 %8764, i64* %PC.i72
  %8765 = inttoptr i64 %8762 to i32*
  %8766 = load i32, i32* %8765
  %8767 = sub i32 %8759, %8766
  %8768 = icmp ult i32 %8759, %8766
  %8769 = zext i1 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8769, i8* %8770, align 1
  %8771 = and i32 %8767, 255
  %8772 = call i32 @llvm.ctpop.i32(i32 %8771)
  %8773 = trunc i32 %8772 to i8
  %8774 = and i8 %8773, 1
  %8775 = xor i8 %8774, 1
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8775, i8* %8776, align 1
  %8777 = xor i32 %8766, %8759
  %8778 = xor i32 %8777, %8767
  %8779 = lshr i32 %8778, 4
  %8780 = trunc i32 %8779 to i8
  %8781 = and i8 %8780, 1
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8781, i8* %8782, align 1
  %8783 = icmp eq i32 %8767, 0
  %8784 = zext i1 %8783 to i8
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8784, i8* %8785, align 1
  %8786 = lshr i32 %8767, 31
  %8787 = trunc i32 %8786 to i8
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8787, i8* %8788, align 1
  %8789 = lshr i32 %8759, 31
  %8790 = lshr i32 %8766, 31
  %8791 = xor i32 %8790, %8789
  %8792 = xor i32 %8786, %8789
  %8793 = add i32 %8792, %8791
  %8794 = icmp eq i32 %8793, 2
  %8795 = zext i1 %8794 to i8
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8795, i8* %8796, align 1
  store %struct.Memory* %loadMem_4403a9, %struct.Memory** %MEMORY
  %loadMem_4403ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 33
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %8799 to i64*
  %8800 = load i64, i64* %PC.i71
  %8801 = add i64 %8800, 110
  %8802 = load i64, i64* %PC.i71
  %8803 = add i64 %8802, 6
  %8804 = load i64, i64* %PC.i71
  %8805 = add i64 %8804, 6
  store i64 %8805, i64* %PC.i71
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8807 = load i8, i8* %8806, align 1
  %8808 = icmp ne i8 %8807, 0
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8810 = load i8, i8* %8809, align 1
  %8811 = icmp ne i8 %8810, 0
  %8812 = xor i1 %8808, %8811
  %8813 = xor i1 %8812, true
  %8814 = zext i1 %8813 to i8
  store i8 %8814, i8* %BRANCH_TAKEN, align 1
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8816 = select i1 %8812, i64 %8803, i64 %8801
  store i64 %8816, i64* %8815, align 8
  store %struct.Memory* %loadMem_4403ac, %struct.Memory** %MEMORY
  %loadBr_4403ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4403ac = icmp eq i8 %loadBr_4403ac, 1
  br i1 %cmpBr_4403ac, label %block_.L_44041a, label %block_4403b2

block_4403b2:                                     ; preds = %block_.L_4403a6
  %loadMem_4403b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8818 = getelementptr inbounds %struct.GPR, %struct.GPR* %8817, i32 0, i32 33
  %8819 = getelementptr inbounds %struct.Reg, %struct.Reg* %8818, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %8819 to i64*
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8821 = getelementptr inbounds %struct.GPR, %struct.GPR* %8820, i32 0, i32 1
  %8822 = getelementptr inbounds %struct.Reg, %struct.Reg* %8821, i32 0, i32 0
  %RAX.i69 = bitcast %union.anon* %8822 to i64*
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8824 = getelementptr inbounds %struct.GPR, %struct.GPR* %8823, i32 0, i32 15
  %8825 = getelementptr inbounds %struct.Reg, %struct.Reg* %8824, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %8825 to i64*
  %8826 = load i64, i64* %RBP.i70
  %8827 = sub i64 %8826, 16
  %8828 = load i64, i64* %PC.i68
  %8829 = add i64 %8828, 3
  store i64 %8829, i64* %PC.i68
  %8830 = inttoptr i64 %8827 to i32*
  %8831 = load i32, i32* %8830
  %8832 = zext i32 %8831 to i64
  store i64 %8832, i64* %RAX.i69, align 8
  store %struct.Memory* %loadMem_4403b2, %struct.Memory** %MEMORY
  %loadMem_4403b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 33
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %8835 to i64*
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 1
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %EAX.i66 = bitcast %union.anon* %8838 to i32*
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 15
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %8841 to i64*
  %8842 = load i64, i64* %RBP.i67
  %8843 = sub i64 %8842, 40
  %8844 = load i32, i32* %EAX.i66
  %8845 = zext i32 %8844 to i64
  %8846 = load i64, i64* %PC.i65
  %8847 = add i64 %8846, 3
  store i64 %8847, i64* %PC.i65
  %8848 = inttoptr i64 %8843 to i32*
  store i32 %8844, i32* %8848
  store %struct.Memory* %loadMem_4403b5, %struct.Memory** %MEMORY
  br label %block_.L_4403b8

block_.L_4403b8:                                  ; preds = %block_4403c4, %block_4403b2
  %loadMem_4403b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 33
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %8851 to i64*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 1
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %RAX.i63 = bitcast %union.anon* %8854 to i64*
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 15
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %8857 to i64*
  %8858 = load i64, i64* %RBP.i64
  %8859 = sub i64 %8858, 40
  %8860 = load i64, i64* %PC.i62
  %8861 = add i64 %8860, 3
  store i64 %8861, i64* %PC.i62
  %8862 = inttoptr i64 %8859 to i32*
  %8863 = load i32, i32* %8862
  %8864 = zext i32 %8863 to i64
  store i64 %8864, i64* %RAX.i63, align 8
  store %struct.Memory* %loadMem_4403b8, %struct.Memory** %MEMORY
  %loadMem_4403bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8866 = getelementptr inbounds %struct.GPR, %struct.GPR* %8865, i32 0, i32 33
  %8867 = getelementptr inbounds %struct.Reg, %struct.Reg* %8866, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %8867 to i64*
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8869 = getelementptr inbounds %struct.GPR, %struct.GPR* %8868, i32 0, i32 1
  %8870 = getelementptr inbounds %struct.Reg, %struct.Reg* %8869, i32 0, i32 0
  %EAX.i60 = bitcast %union.anon* %8870 to i32*
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 15
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %8873 to i64*
  %8874 = load i32, i32* %EAX.i60
  %8875 = zext i32 %8874 to i64
  %8876 = load i64, i64* %RBP.i61
  %8877 = sub i64 %8876, 48
  %8878 = load i64, i64* %PC.i59
  %8879 = add i64 %8878, 3
  store i64 %8879, i64* %PC.i59
  %8880 = inttoptr i64 %8877 to i32*
  %8881 = load i32, i32* %8880
  %8882 = sub i32 %8874, %8881
  %8883 = icmp ult i32 %8874, %8881
  %8884 = zext i1 %8883 to i8
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8884, i8* %8885, align 1
  %8886 = and i32 %8882, 255
  %8887 = call i32 @llvm.ctpop.i32(i32 %8886)
  %8888 = trunc i32 %8887 to i8
  %8889 = and i8 %8888, 1
  %8890 = xor i8 %8889, 1
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8890, i8* %8891, align 1
  %8892 = xor i32 %8881, %8874
  %8893 = xor i32 %8892, %8882
  %8894 = lshr i32 %8893, 4
  %8895 = trunc i32 %8894 to i8
  %8896 = and i8 %8895, 1
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8896, i8* %8897, align 1
  %8898 = icmp eq i32 %8882, 0
  %8899 = zext i1 %8898 to i8
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8899, i8* %8900, align 1
  %8901 = lshr i32 %8882, 31
  %8902 = trunc i32 %8901 to i8
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8902, i8* %8903, align 1
  %8904 = lshr i32 %8874, 31
  %8905 = lshr i32 %8881, 31
  %8906 = xor i32 %8905, %8904
  %8907 = xor i32 %8901, %8904
  %8908 = add i32 %8907, %8906
  %8909 = icmp eq i32 %8908, 2
  %8910 = zext i1 %8909 to i8
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8910, i8* %8911, align 1
  store %struct.Memory* %loadMem_4403bb, %struct.Memory** %MEMORY
  %loadMem_4403be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8913 = getelementptr inbounds %struct.GPR, %struct.GPR* %8912, i32 0, i32 33
  %8914 = getelementptr inbounds %struct.Reg, %struct.Reg* %8913, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %8914 to i64*
  %8915 = load i64, i64* %PC.i58
  %8916 = add i64 %8915, 73
  %8917 = load i64, i64* %PC.i58
  %8918 = add i64 %8917, 6
  %8919 = load i64, i64* %PC.i58
  %8920 = add i64 %8919, 6
  store i64 %8920, i64* %PC.i58
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8922 = load i8, i8* %8921, align 1
  %8923 = icmp ne i8 %8922, 0
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8925 = load i8, i8* %8924, align 1
  %8926 = icmp ne i8 %8925, 0
  %8927 = xor i1 %8923, %8926
  %8928 = xor i1 %8927, true
  %8929 = zext i1 %8928 to i8
  store i8 %8929, i8* %BRANCH_TAKEN, align 1
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8931 = select i1 %8927, i64 %8918, i64 %8916
  store i64 %8931, i64* %8930, align 8
  store %struct.Memory* %loadMem_4403be, %struct.Memory** %MEMORY
  %loadBr_4403be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4403be = icmp eq i8 %loadBr_4403be, 1
  br i1 %cmpBr_4403be, label %block_.L_440407, label %block_4403c4

block_4403c4:                                     ; preds = %block_.L_4403b8
  %loadMem_4403c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 33
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %8934 to i64*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 1
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %8937 to i64*
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8939 = getelementptr inbounds %struct.GPR, %struct.GPR* %8938, i32 0, i32 15
  %8940 = getelementptr inbounds %struct.Reg, %struct.Reg* %8939, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %8940 to i64*
  %8941 = load i64, i64* %RBP.i57
  %8942 = sub i64 %8941, 72
  %8943 = load i64, i64* %PC.i55
  %8944 = add i64 %8943, 4
  store i64 %8944, i64* %PC.i55
  %8945 = inttoptr i64 %8942 to i64*
  %8946 = load i64, i64* %8945
  store i64 %8946, i64* %RAX.i56, align 8
  store %struct.Memory* %loadMem_4403c4, %struct.Memory** %MEMORY
  %loadMem_4403c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 33
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %8949 to i64*
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8951 = getelementptr inbounds %struct.GPR, %struct.GPR* %8950, i32 0, i32 1
  %8952 = getelementptr inbounds %struct.Reg, %struct.Reg* %8951, i32 0, i32 0
  %RAX.i53 = bitcast %union.anon* %8952 to i64*
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8954 = getelementptr inbounds %struct.GPR, %struct.GPR* %8953, i32 0, i32 5
  %8955 = getelementptr inbounds %struct.Reg, %struct.Reg* %8954, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %8955 to i64*
  %8956 = load i64, i64* %RAX.i53
  %8957 = load i64, i64* %PC.i52
  %8958 = add i64 %8957, 3
  store i64 %8958, i64* %PC.i52
  store i64 %8956, i64* %RCX.i54, align 8
  store %struct.Memory* %loadMem_4403c8, %struct.Memory** %MEMORY
  %loadMem_4403cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8960 = getelementptr inbounds %struct.GPR, %struct.GPR* %8959, i32 0, i32 33
  %8961 = getelementptr inbounds %struct.Reg, %struct.Reg* %8960, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %8961 to i64*
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8963 = getelementptr inbounds %struct.GPR, %struct.GPR* %8962, i32 0, i32 5
  %8964 = getelementptr inbounds %struct.Reg, %struct.Reg* %8963, i32 0, i32 0
  %RCX.i51 = bitcast %union.anon* %8964 to i64*
  %8965 = load i64, i64* %RCX.i51
  %8966 = load i64, i64* %PC.i50
  %8967 = add i64 %8966, 4
  store i64 %8967, i64* %PC.i50
  %8968 = add i64 4, %8965
  store i64 %8968, i64* %RCX.i51, align 8
  %8969 = icmp ult i64 %8968, %8965
  %8970 = icmp ult i64 %8968, 4
  %8971 = or i1 %8969, %8970
  %8972 = zext i1 %8971 to i8
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8972, i8* %8973, align 1
  %8974 = trunc i64 %8968 to i32
  %8975 = and i32 %8974, 255
  %8976 = call i32 @llvm.ctpop.i32(i32 %8975)
  %8977 = trunc i32 %8976 to i8
  %8978 = and i8 %8977, 1
  %8979 = xor i8 %8978, 1
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8979, i8* %8980, align 1
  %8981 = xor i64 4, %8965
  %8982 = xor i64 %8981, %8968
  %8983 = lshr i64 %8982, 4
  %8984 = trunc i64 %8983 to i8
  %8985 = and i8 %8984, 1
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8985, i8* %8986, align 1
  %8987 = icmp eq i64 %8968, 0
  %8988 = zext i1 %8987 to i8
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8988, i8* %8989, align 1
  %8990 = lshr i64 %8968, 63
  %8991 = trunc i64 %8990 to i8
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8991, i8* %8992, align 1
  %8993 = lshr i64 %8965, 63
  %8994 = xor i64 %8990, %8993
  %8995 = add i64 %8994, %8990
  %8996 = icmp eq i64 %8995, 2
  %8997 = zext i1 %8996 to i8
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8997, i8* %8998, align 1
  store %struct.Memory* %loadMem_4403cb, %struct.Memory** %MEMORY
  %loadMem_4403cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9000 = getelementptr inbounds %struct.GPR, %struct.GPR* %8999, i32 0, i32 33
  %9001 = getelementptr inbounds %struct.Reg, %struct.Reg* %9000, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %9001 to i64*
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9003 = getelementptr inbounds %struct.GPR, %struct.GPR* %9002, i32 0, i32 5
  %9004 = getelementptr inbounds %struct.Reg, %struct.Reg* %9003, i32 0, i32 0
  %RCX.i48 = bitcast %union.anon* %9004 to i64*
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9006 = getelementptr inbounds %struct.GPR, %struct.GPR* %9005, i32 0, i32 15
  %9007 = getelementptr inbounds %struct.Reg, %struct.Reg* %9006, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %9007 to i64*
  %9008 = load i64, i64* %RBP.i49
  %9009 = sub i64 %9008, 72
  %9010 = load i64, i64* %RCX.i48
  %9011 = load i64, i64* %PC.i47
  %9012 = add i64 %9011, 4
  store i64 %9012, i64* %PC.i47
  %9013 = inttoptr i64 %9009 to i64*
  store i64 %9010, i64* %9013
  store %struct.Memory* %loadMem_4403cf, %struct.Memory** %MEMORY
  %loadMem_4403d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 33
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %9016 to i64*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 1
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %RAX.i46 = bitcast %union.anon* %9019 to i64*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9021 = getelementptr inbounds %struct.GPR, %struct.GPR* %9020, i32 0, i32 7
  %9022 = getelementptr inbounds %struct.Reg, %struct.Reg* %9021, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9022 to i64*
  %9023 = load i64, i64* %RAX.i46
  %9024 = load i64, i64* %PC.i45
  %9025 = add i64 %9024, 2
  store i64 %9025, i64* %PC.i45
  %9026 = inttoptr i64 %9023 to i32*
  %9027 = load i32, i32* %9026
  %9028 = zext i32 %9027 to i64
  store i64 %9028, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_4403d3, %struct.Memory** %MEMORY
  %loadMem_4403d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 33
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 7
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %DX.i = bitcast %union.anon* %9034 to i16*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 9
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %SI.i44 = bitcast %union.anon* %9037 to i16*
  %9038 = load i16, i16* %DX.i
  %9039 = zext i16 %9038 to i64
  %9040 = load i64, i64* %PC.i43
  %9041 = add i64 %9040, 3
  store i64 %9041, i64* %PC.i43
  store i16 %9038, i16* %SI.i44, align 2
  store %struct.Memory* %loadMem_4403d5, %struct.Memory** %MEMORY
  %loadMem_4403d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 33
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9044 to i64*
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 1
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %9047 to i64*
  %9048 = load i64, i64* %PC.i41
  %9049 = add i64 %9048, 8
  store i64 %9049, i64* %PC.i41
  %9050 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9050, i64* %RAX.i42, align 8
  store %struct.Memory* %loadMem_4403d8, %struct.Memory** %MEMORY
  %loadMem_4403e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9052 = getelementptr inbounds %struct.GPR, %struct.GPR* %9051, i32 0, i32 33
  %9053 = getelementptr inbounds %struct.Reg, %struct.Reg* %9052, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %9053 to i64*
  %9054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9055 = getelementptr inbounds %struct.GPR, %struct.GPR* %9054, i32 0, i32 1
  %9056 = getelementptr inbounds %struct.Reg, %struct.Reg* %9055, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %9056 to i64*
  %9057 = load i64, i64* %RAX.i40
  %9058 = load i64, i64* %PC.i39
  %9059 = add i64 %9058, 6
  store i64 %9059, i64* %PC.i39
  %9060 = add i64 12600, %9057
  store i64 %9060, i64* %RAX.i40, align 8
  %9061 = icmp ult i64 %9060, %9057
  %9062 = icmp ult i64 %9060, 12600
  %9063 = or i1 %9061, %9062
  %9064 = zext i1 %9063 to i8
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9064, i8* %9065, align 1
  %9066 = trunc i64 %9060 to i32
  %9067 = and i32 %9066, 255
  %9068 = call i32 @llvm.ctpop.i32(i32 %9067)
  %9069 = trunc i32 %9068 to i8
  %9070 = and i8 %9069, 1
  %9071 = xor i8 %9070, 1
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9071, i8* %9072, align 1
  %9073 = xor i64 12600, %9057
  %9074 = xor i64 %9073, %9060
  %9075 = lshr i64 %9074, 4
  %9076 = trunc i64 %9075 to i8
  %9077 = and i8 %9076, 1
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9077, i8* %9078, align 1
  %9079 = icmp eq i64 %9060, 0
  %9080 = zext i1 %9079 to i8
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9080, i8* %9081, align 1
  %9082 = lshr i64 %9060, 63
  %9083 = trunc i64 %9082 to i8
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9083, i8* %9084, align 1
  %9085 = lshr i64 %9057, 63
  %9086 = xor i64 %9082, %9085
  %9087 = add i64 %9086, %9082
  %9088 = icmp eq i64 %9087, 2
  %9089 = zext i1 %9088 to i8
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9089, i8* %9090, align 1
  store %struct.Memory* %loadMem_4403e0, %struct.Memory** %MEMORY
  %loadMem_4403e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 33
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 5
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %9096 to i64*
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9098 = getelementptr inbounds %struct.GPR, %struct.GPR* %9097, i32 0, i32 15
  %9099 = getelementptr inbounds %struct.Reg, %struct.Reg* %9098, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %9099 to i64*
  %9100 = load i64, i64* %RBP.i38
  %9101 = sub i64 %9100, 40
  %9102 = load i64, i64* %PC.i36
  %9103 = add i64 %9102, 4
  store i64 %9103, i64* %PC.i36
  %9104 = inttoptr i64 %9101 to i32*
  %9105 = load i32, i32* %9104
  %9106 = sext i32 %9105 to i64
  store i64 %9106, i64* %RCX.i37, align 8
  store %struct.Memory* %loadMem_4403e6, %struct.Memory** %MEMORY
  %loadMem_4403ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9108 = getelementptr inbounds %struct.GPR, %struct.GPR* %9107, i32 0, i32 33
  %9109 = getelementptr inbounds %struct.Reg, %struct.Reg* %9108, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %9109 to i64*
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9111 = getelementptr inbounds %struct.GPR, %struct.GPR* %9110, i32 0, i32 5
  %9112 = getelementptr inbounds %struct.Reg, %struct.Reg* %9111, i32 0, i32 0
  %RCX.i35 = bitcast %union.anon* %9112 to i64*
  %9113 = load i64, i64* %RCX.i35
  %9114 = load i64, i64* %PC.i34
  %9115 = add i64 %9114, 4
  store i64 %9115, i64* %PC.i34
  %9116 = shl i64 %9113, 4
  %9117 = icmp slt i64 %9116, 0
  %9118 = shl i64 %9116, 1
  store i64 %9118, i64* %RCX.i35, align 8
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9120 = zext i1 %9117 to i8
  store i8 %9120, i8* %9119, align 1
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9122 = trunc i64 %9118 to i32
  %9123 = and i32 %9122, 254
  %9124 = call i32 @llvm.ctpop.i32(i32 %9123)
  %9125 = trunc i32 %9124 to i8
  %9126 = and i8 %9125, 1
  %9127 = xor i8 %9126, 1
  store i8 %9127, i8* %9121, align 1
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9128, align 1
  %9129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9130 = icmp eq i64 %9118, 0
  %9131 = zext i1 %9130 to i8
  store i8 %9131, i8* %9129, align 1
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9133 = lshr i64 %9118, 63
  %9134 = trunc i64 %9133 to i8
  store i8 %9134, i8* %9132, align 1
  %9135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9135, align 1
  store %struct.Memory* %loadMem_4403ea, %struct.Memory** %MEMORY
  %loadMem_4403ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %9136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9137 = getelementptr inbounds %struct.GPR, %struct.GPR* %9136, i32 0, i32 33
  %9138 = getelementptr inbounds %struct.Reg, %struct.Reg* %9137, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %9138 to i64*
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9140 = getelementptr inbounds %struct.GPR, %struct.GPR* %9139, i32 0, i32 1
  %9141 = getelementptr inbounds %struct.Reg, %struct.Reg* %9140, i32 0, i32 0
  %RAX.i32 = bitcast %union.anon* %9141 to i64*
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9143 = getelementptr inbounds %struct.GPR, %struct.GPR* %9142, i32 0, i32 5
  %9144 = getelementptr inbounds %struct.Reg, %struct.Reg* %9143, i32 0, i32 0
  %RCX.i33 = bitcast %union.anon* %9144 to i64*
  %9145 = load i64, i64* %RAX.i32
  %9146 = load i64, i64* %RCX.i33
  %9147 = load i64, i64* %PC.i31
  %9148 = add i64 %9147, 3
  store i64 %9148, i64* %PC.i31
  %9149 = add i64 %9146, %9145
  store i64 %9149, i64* %RAX.i32, align 8
  %9150 = icmp ult i64 %9149, %9145
  %9151 = icmp ult i64 %9149, %9146
  %9152 = or i1 %9150, %9151
  %9153 = zext i1 %9152 to i8
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9153, i8* %9154, align 1
  %9155 = trunc i64 %9149 to i32
  %9156 = and i32 %9155, 255
  %9157 = call i32 @llvm.ctpop.i32(i32 %9156)
  %9158 = trunc i32 %9157 to i8
  %9159 = and i8 %9158, 1
  %9160 = xor i8 %9159, 1
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9160, i8* %9161, align 1
  %9162 = xor i64 %9146, %9145
  %9163 = xor i64 %9162, %9149
  %9164 = lshr i64 %9163, 4
  %9165 = trunc i64 %9164 to i8
  %9166 = and i8 %9165, 1
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9166, i8* %9167, align 1
  %9168 = icmp eq i64 %9149, 0
  %9169 = zext i1 %9168 to i8
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9169, i8* %9170, align 1
  %9171 = lshr i64 %9149, 63
  %9172 = trunc i64 %9171 to i8
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9172, i8* %9173, align 1
  %9174 = lshr i64 %9145, 63
  %9175 = lshr i64 %9146, 63
  %9176 = xor i64 %9171, %9174
  %9177 = xor i64 %9171, %9175
  %9178 = add i64 %9176, %9177
  %9179 = icmp eq i64 %9178, 2
  %9180 = zext i1 %9179 to i8
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9180, i8* %9181, align 1
  store %struct.Memory* %loadMem_4403ee, %struct.Memory** %MEMORY
  %loadMem_4403f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 33
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %9184 to i64*
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 5
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %RCX.i29 = bitcast %union.anon* %9187 to i64*
  %9188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9189 = getelementptr inbounds %struct.GPR, %struct.GPR* %9188, i32 0, i32 15
  %9190 = getelementptr inbounds %struct.Reg, %struct.Reg* %9189, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %9190 to i64*
  %9191 = load i64, i64* %RBP.i30
  %9192 = sub i64 %9191, 44
  %9193 = load i64, i64* %PC.i28
  %9194 = add i64 %9193, 4
  store i64 %9194, i64* %PC.i28
  %9195 = inttoptr i64 %9192 to i32*
  %9196 = load i32, i32* %9195
  %9197 = sext i32 %9196 to i64
  store i64 %9197, i64* %RCX.i29, align 8
  store %struct.Memory* %loadMem_4403f1, %struct.Memory** %MEMORY
  %loadMem_4403f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9199 = getelementptr inbounds %struct.GPR, %struct.GPR* %9198, i32 0, i32 33
  %9200 = getelementptr inbounds %struct.Reg, %struct.Reg* %9199, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %9200 to i64*
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9202 = getelementptr inbounds %struct.GPR, %struct.GPR* %9201, i32 0, i32 9
  %9203 = getelementptr inbounds %struct.Reg, %struct.Reg* %9202, i32 0, i32 0
  %SI.i = bitcast %union.anon* %9203 to i16*
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9205 = getelementptr inbounds %struct.GPR, %struct.GPR* %9204, i32 0, i32 1
  %9206 = getelementptr inbounds %struct.Reg, %struct.Reg* %9205, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %9206 to i64*
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9208 = getelementptr inbounds %struct.GPR, %struct.GPR* %9207, i32 0, i32 5
  %9209 = getelementptr inbounds %struct.Reg, %struct.Reg* %9208, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9209 to i64*
  %9210 = load i64, i64* %RAX.i27
  %9211 = load i64, i64* %RCX.i
  %9212 = mul i64 %9211, 2
  %9213 = add i64 %9212, %9210
  %9214 = load i16, i16* %SI.i
  %9215 = zext i16 %9214 to i64
  %9216 = load i64, i64* %PC.i26
  %9217 = add i64 %9216, 4
  store i64 %9217, i64* %PC.i26
  %9218 = inttoptr i64 %9213 to i16*
  store i16 %9214, i16* %9218
  store %struct.Memory* %loadMem_4403f5, %struct.Memory** %MEMORY
  %loadMem_4403f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9220 = getelementptr inbounds %struct.GPR, %struct.GPR* %9219, i32 0, i32 33
  %9221 = getelementptr inbounds %struct.Reg, %struct.Reg* %9220, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %9221 to i64*
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9223 = getelementptr inbounds %struct.GPR, %struct.GPR* %9222, i32 0, i32 1
  %9224 = getelementptr inbounds %struct.Reg, %struct.Reg* %9223, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %9224 to i64*
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 15
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %9227 to i64*
  %9228 = load i64, i64* %RBP.i25
  %9229 = sub i64 %9228, 40
  %9230 = load i64, i64* %PC.i23
  %9231 = add i64 %9230, 3
  store i64 %9231, i64* %PC.i23
  %9232 = inttoptr i64 %9229 to i32*
  %9233 = load i32, i32* %9232
  %9234 = zext i32 %9233 to i64
  store i64 %9234, i64* %RAX.i24, align 8
  store %struct.Memory* %loadMem_4403f9, %struct.Memory** %MEMORY
  %loadMem_4403fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 33
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %9237 to i64*
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9239 = getelementptr inbounds %struct.GPR, %struct.GPR* %9238, i32 0, i32 1
  %9240 = getelementptr inbounds %struct.Reg, %struct.Reg* %9239, i32 0, i32 0
  %RAX.i22 = bitcast %union.anon* %9240 to i64*
  %9241 = load i64, i64* %RAX.i22
  %9242 = load i64, i64* %PC.i21
  %9243 = add i64 %9242, 3
  store i64 %9243, i64* %PC.i21
  %9244 = trunc i64 %9241 to i32
  %9245 = add i32 1, %9244
  %9246 = zext i32 %9245 to i64
  store i64 %9246, i64* %RAX.i22, align 8
  %9247 = icmp ult i32 %9245, %9244
  %9248 = icmp ult i32 %9245, 1
  %9249 = or i1 %9247, %9248
  %9250 = zext i1 %9249 to i8
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9250, i8* %9251, align 1
  %9252 = and i32 %9245, 255
  %9253 = call i32 @llvm.ctpop.i32(i32 %9252)
  %9254 = trunc i32 %9253 to i8
  %9255 = and i8 %9254, 1
  %9256 = xor i8 %9255, 1
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9256, i8* %9257, align 1
  %9258 = xor i64 1, %9241
  %9259 = trunc i64 %9258 to i32
  %9260 = xor i32 %9259, %9245
  %9261 = lshr i32 %9260, 4
  %9262 = trunc i32 %9261 to i8
  %9263 = and i8 %9262, 1
  %9264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9263, i8* %9264, align 1
  %9265 = icmp eq i32 %9245, 0
  %9266 = zext i1 %9265 to i8
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9266, i8* %9267, align 1
  %9268 = lshr i32 %9245, 31
  %9269 = trunc i32 %9268 to i8
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9269, i8* %9270, align 1
  %9271 = lshr i32 %9244, 31
  %9272 = xor i32 %9268, %9271
  %9273 = add i32 %9272, %9268
  %9274 = icmp eq i32 %9273, 2
  %9275 = zext i1 %9274 to i8
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9275, i8* %9276, align 1
  store %struct.Memory* %loadMem_4403fc, %struct.Memory** %MEMORY
  %loadMem_4403ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9278 = getelementptr inbounds %struct.GPR, %struct.GPR* %9277, i32 0, i32 33
  %9279 = getelementptr inbounds %struct.Reg, %struct.Reg* %9278, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %9279 to i64*
  %9280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9281 = getelementptr inbounds %struct.GPR, %struct.GPR* %9280, i32 0, i32 1
  %9282 = getelementptr inbounds %struct.Reg, %struct.Reg* %9281, i32 0, i32 0
  %EAX.i19 = bitcast %union.anon* %9282 to i32*
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9284 = getelementptr inbounds %struct.GPR, %struct.GPR* %9283, i32 0, i32 15
  %9285 = getelementptr inbounds %struct.Reg, %struct.Reg* %9284, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %9285 to i64*
  %9286 = load i64, i64* %RBP.i20
  %9287 = sub i64 %9286, 40
  %9288 = load i32, i32* %EAX.i19
  %9289 = zext i32 %9288 to i64
  %9290 = load i64, i64* %PC.i18
  %9291 = add i64 %9290, 3
  store i64 %9291, i64* %PC.i18
  %9292 = inttoptr i64 %9287 to i32*
  store i32 %9288, i32* %9292
  store %struct.Memory* %loadMem_4403ff, %struct.Memory** %MEMORY
  %loadMem_440402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 33
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %9295 to i64*
  %9296 = load i64, i64* %PC.i17
  %9297 = add i64 %9296, -74
  %9298 = load i64, i64* %PC.i17
  %9299 = add i64 %9298, 5
  store i64 %9299, i64* %PC.i17
  %9300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9297, i64* %9300, align 8
  store %struct.Memory* %loadMem_440402, %struct.Memory** %MEMORY
  br label %block_.L_4403b8

block_.L_440407:                                  ; preds = %block_.L_4403b8
  %loadMem_440407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9302 = getelementptr inbounds %struct.GPR, %struct.GPR* %9301, i32 0, i32 33
  %9303 = getelementptr inbounds %struct.Reg, %struct.Reg* %9302, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %9303 to i64*
  %9304 = load i64, i64* %PC.i16
  %9305 = add i64 %9304, 5
  %9306 = load i64, i64* %PC.i16
  %9307 = add i64 %9306, 5
  store i64 %9307, i64* %PC.i16
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9305, i64* %9308, align 8
  store %struct.Memory* %loadMem_440407, %struct.Memory** %MEMORY
  br label %block_.L_44040c

block_.L_44040c:                                  ; preds = %block_.L_440407
  %loadMem_44040c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9310 = getelementptr inbounds %struct.GPR, %struct.GPR* %9309, i32 0, i32 33
  %9311 = getelementptr inbounds %struct.Reg, %struct.Reg* %9310, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9311 to i64*
  %9312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9313 = getelementptr inbounds %struct.GPR, %struct.GPR* %9312, i32 0, i32 1
  %9314 = getelementptr inbounds %struct.Reg, %struct.Reg* %9313, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %9314 to i64*
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9316 = getelementptr inbounds %struct.GPR, %struct.GPR* %9315, i32 0, i32 15
  %9317 = getelementptr inbounds %struct.Reg, %struct.Reg* %9316, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %9317 to i64*
  %9318 = load i64, i64* %RBP.i15
  %9319 = sub i64 %9318, 44
  %9320 = load i64, i64* %PC.i13
  %9321 = add i64 %9320, 3
  store i64 %9321, i64* %PC.i13
  %9322 = inttoptr i64 %9319 to i32*
  %9323 = load i32, i32* %9322
  %9324 = zext i32 %9323 to i64
  store i64 %9324, i64* %RAX.i14, align 8
  store %struct.Memory* %loadMem_44040c, %struct.Memory** %MEMORY
  %loadMem_44040f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9326 = getelementptr inbounds %struct.GPR, %struct.GPR* %9325, i32 0, i32 33
  %9327 = getelementptr inbounds %struct.Reg, %struct.Reg* %9326, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %9327 to i64*
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 1
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9330 to i64*
  %9331 = load i64, i64* %RAX.i
  %9332 = load i64, i64* %PC.i12
  %9333 = add i64 %9332, 3
  store i64 %9333, i64* %PC.i12
  %9334 = trunc i64 %9331 to i32
  %9335 = add i32 1, %9334
  %9336 = zext i32 %9335 to i64
  store i64 %9336, i64* %RAX.i, align 8
  %9337 = icmp ult i32 %9335, %9334
  %9338 = icmp ult i32 %9335, 1
  %9339 = or i1 %9337, %9338
  %9340 = zext i1 %9339 to i8
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9340, i8* %9341, align 1
  %9342 = and i32 %9335, 255
  %9343 = call i32 @llvm.ctpop.i32(i32 %9342)
  %9344 = trunc i32 %9343 to i8
  %9345 = and i8 %9344, 1
  %9346 = xor i8 %9345, 1
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9346, i8* %9347, align 1
  %9348 = xor i64 1, %9331
  %9349 = trunc i64 %9348 to i32
  %9350 = xor i32 %9349, %9335
  %9351 = lshr i32 %9350, 4
  %9352 = trunc i32 %9351 to i8
  %9353 = and i8 %9352, 1
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9353, i8* %9354, align 1
  %9355 = icmp eq i32 %9335, 0
  %9356 = zext i1 %9355 to i8
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9356, i8* %9357, align 1
  %9358 = lshr i32 %9335, 31
  %9359 = trunc i32 %9358 to i8
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9359, i8* %9360, align 1
  %9361 = lshr i32 %9334, 31
  %9362 = xor i32 %9358, %9361
  %9363 = add i32 %9362, %9358
  %9364 = icmp eq i32 %9363, 2
  %9365 = zext i1 %9364 to i8
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9365, i8* %9366, align 1
  store %struct.Memory* %loadMem_44040f, %struct.Memory** %MEMORY
  %loadMem_440412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9368 = getelementptr inbounds %struct.GPR, %struct.GPR* %9367, i32 0, i32 33
  %9369 = getelementptr inbounds %struct.Reg, %struct.Reg* %9368, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %9369 to i64*
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9371 = getelementptr inbounds %struct.GPR, %struct.GPR* %9370, i32 0, i32 1
  %9372 = getelementptr inbounds %struct.Reg, %struct.Reg* %9371, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9372 to i32*
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9374 = getelementptr inbounds %struct.GPR, %struct.GPR* %9373, i32 0, i32 15
  %9375 = getelementptr inbounds %struct.Reg, %struct.Reg* %9374, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %9375 to i64*
  %9376 = load i64, i64* %RBP.i11
  %9377 = sub i64 %9376, 44
  %9378 = load i32, i32* %EAX.i
  %9379 = zext i32 %9378 to i64
  %9380 = load i64, i64* %PC.i10
  %9381 = add i64 %9380, 3
  store i64 %9381, i64* %PC.i10
  %9382 = inttoptr i64 %9377 to i32*
  store i32 %9378, i32* %9382
  store %struct.Memory* %loadMem_440412, %struct.Memory** %MEMORY
  %loadMem_440415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9384 = getelementptr inbounds %struct.GPR, %struct.GPR* %9383, i32 0, i32 33
  %9385 = getelementptr inbounds %struct.Reg, %struct.Reg* %9384, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9385 to i64*
  %9386 = load i64, i64* %PC.i9
  %9387 = add i64 %9386, -111
  %9388 = load i64, i64* %PC.i9
  %9389 = add i64 %9388, 5
  store i64 %9389, i64* %PC.i9
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9387, i64* %9390, align 8
  store %struct.Memory* %loadMem_440415, %struct.Memory** %MEMORY
  br label %block_.L_4403a6

block_.L_44041a:                                  ; preds = %block_.L_4403a6
  %loadMem_44041a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9392 = getelementptr inbounds %struct.GPR, %struct.GPR* %9391, i32 0, i32 33
  %9393 = getelementptr inbounds %struct.Reg, %struct.Reg* %9392, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %9393 to i64*
  %9394 = load i64, i64* %PC.i8
  %9395 = add i64 %9394, 5
  %9396 = load i64, i64* %PC.i8
  %9397 = add i64 %9396, 5
  store i64 %9397, i64* %PC.i8
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9395, i64* %9398, align 8
  store %struct.Memory* %loadMem_44041a, %struct.Memory** %MEMORY
  br label %block_.L_44041f

block_.L_44041f:                                  ; preds = %block_.L_44041a, %block_.L_44039b
  %loadMem_44041f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9400 = getelementptr inbounds %struct.GPR, %struct.GPR* %9399, i32 0, i32 33
  %9401 = getelementptr inbounds %struct.Reg, %struct.Reg* %9400, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9401 to i64*
  %9402 = load i64, i64* %PC.i7
  %9403 = add i64 %9402, 5
  %9404 = load i64, i64* %PC.i7
  %9405 = add i64 %9404, 5
  store i64 %9405, i64* %PC.i7
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9403, i64* %9406, align 8
  store %struct.Memory* %loadMem_44041f, %struct.Memory** %MEMORY
  br label %block_.L_440424

block_.L_440424:                                  ; preds = %block_.L_44041f, %block_.L_440312
  %loadMem_440424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 33
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %PC.i6
  %9411 = add i64 %9410, 5
  %9412 = load i64, i64* %PC.i6
  %9413 = add i64 %9412, 5
  store i64 %9413, i64* %PC.i6
  %9414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9411, i64* %9414, align 8
  store %struct.Memory* %loadMem_440424, %struct.Memory** %MEMORY
  br label %block_.L_440429

block_.L_440429:                                  ; preds = %block_.L_440424, %block_.L_440263, %block_43fe76
  %loadMem_440429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 33
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 13
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9420 to i64*
  %9421 = load i64, i64* %RSP.i
  %9422 = load i64, i64* %PC.i5
  %9423 = add i64 %9422, 7
  store i64 %9423, i64* %PC.i5
  %9424 = add i64 136, %9421
  store i64 %9424, i64* %RSP.i, align 8
  %9425 = icmp ult i64 %9424, %9421
  %9426 = icmp ult i64 %9424, 136
  %9427 = or i1 %9425, %9426
  %9428 = zext i1 %9427 to i8
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9428, i8* %9429, align 1
  %9430 = trunc i64 %9424 to i32
  %9431 = and i32 %9430, 255
  %9432 = call i32 @llvm.ctpop.i32(i32 %9431)
  %9433 = trunc i32 %9432 to i8
  %9434 = and i8 %9433, 1
  %9435 = xor i8 %9434, 1
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9435, i8* %9436, align 1
  %9437 = xor i64 136, %9421
  %9438 = xor i64 %9437, %9424
  %9439 = lshr i64 %9438, 4
  %9440 = trunc i64 %9439 to i8
  %9441 = and i8 %9440, 1
  %9442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9441, i8* %9442, align 1
  %9443 = icmp eq i64 %9424, 0
  %9444 = zext i1 %9443 to i8
  %9445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9444, i8* %9445, align 1
  %9446 = lshr i64 %9424, 63
  %9447 = trunc i64 %9446 to i8
  %9448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9447, i8* %9448, align 1
  %9449 = lshr i64 %9421, 63
  %9450 = xor i64 %9446, %9449
  %9451 = add i64 %9450, %9446
  %9452 = icmp eq i64 %9451, 2
  %9453 = zext i1 %9452 to i8
  %9454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9453, i8* %9454, align 1
  store %struct.Memory* %loadMem_440429, %struct.Memory** %MEMORY
  %loadMem_440430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9456 = getelementptr inbounds %struct.GPR, %struct.GPR* %9455, i32 0, i32 33
  %9457 = getelementptr inbounds %struct.Reg, %struct.Reg* %9456, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9457 to i64*
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9459 = getelementptr inbounds %struct.GPR, %struct.GPR* %9458, i32 0, i32 3
  %9460 = getelementptr inbounds %struct.Reg, %struct.Reg* %9459, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %9460 to i64*
  %9461 = load i64, i64* %PC.i4
  %9462 = add i64 %9461, 1
  store i64 %9462, i64* %PC.i4
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9464 = load i64, i64* %9463, align 8
  %9465 = add i64 %9464, 8
  %9466 = inttoptr i64 %9464 to i64*
  %9467 = load i64, i64* %9466
  store i64 %9467, i64* %RBX.i, align 8
  store i64 %9465, i64* %9463, align 8
  store %struct.Memory* %loadMem_440430, %struct.Memory** %MEMORY
  %loadMem_440431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9469 = getelementptr inbounds %struct.GPR, %struct.GPR* %9468, i32 0, i32 33
  %9470 = getelementptr inbounds %struct.Reg, %struct.Reg* %9469, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9470 to i64*
  %9471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9472 = getelementptr inbounds %struct.GPR, %struct.GPR* %9471, i32 0, i32 15
  %9473 = getelementptr inbounds %struct.Reg, %struct.Reg* %9472, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9473 to i64*
  %9474 = load i64, i64* %PC.i2
  %9475 = add i64 %9474, 1
  store i64 %9475, i64* %PC.i2
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9477 = load i64, i64* %9476, align 8
  %9478 = add i64 %9477, 8
  %9479 = inttoptr i64 %9477 to i64*
  %9480 = load i64, i64* %9479
  store i64 %9480, i64* %RBP.i3, align 8
  store i64 %9478, i64* %9476, align 8
  store %struct.Memory* %loadMem_440431, %struct.Memory** %MEMORY
  %loadMem_440432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9482 = getelementptr inbounds %struct.GPR, %struct.GPR* %9481, i32 0, i32 33
  %9483 = getelementptr inbounds %struct.Reg, %struct.Reg* %9482, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9483 to i64*
  %9484 = load i64, i64* %PC.i1
  %9485 = add i64 %9484, 1
  store i64 %9485, i64* %PC.i1
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9488 = load i64, i64* %9487, align 8
  %9489 = inttoptr i64 %9488 to i64*
  %9490 = load i64, i64* %9489
  store i64 %9490, i64* %9486, align 8
  %9491 = add i64 %9488, 8
  store i64 %9491, i64* %9487, align 8
  store %struct.Memory* %loadMem_440432, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_440432
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x88___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 136
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 136
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 136, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x18__rbp____ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_0x10__rbp____r10w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %R10W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc2f0___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc2f0_type* @G__0x6cc2f0 to i64), i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc2b0___rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc2b0_type* @G__0x6cc2b0 to i64), i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r10w__MINUS0x22__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i16, i16* %R10W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i16, i16* %AX
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i16*
  store i16 %14, i16* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rbx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x118f8__r11____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 71928
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__r11____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rbx____rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rbx___rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RBX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rbx___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = load i64, i64* %RBX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R11, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc0__r11_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fda0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x5d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 93
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fdd4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x18__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xc4__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x5e__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 94
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fdce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x5e__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 94
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x5d__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 93
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x244__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 580
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fe6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x22__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fe6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  %19 = and i64 %18, 4294967295
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x244__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 580
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fe51(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11900__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71936
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43fe64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x11908__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71944
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -1
  %16 = icmp ult i32 %14, -1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fe89(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.IntraChromaPrediction4x4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440429(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fe9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43fedd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc2b0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc2b0_type* @G__0x6cc2b0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = xor i64 %13, %11
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %9, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = and i32 %17, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %17, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %17, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_MINUS0x22__rbp____ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__ax___r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i16, i16* %AX
  %14 = zext i16 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = trunc i64 %14 to i32
  %18 = shl i32 %17, 16
  %19 = ashr exact i32 %18, 16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d___r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 4294967295
  store i64 %17, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 108
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r11d____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.OneComponentChromaPrediction4x4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_43fef1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_43ff34(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6cc2f0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6cc2f0_type* @G__0x6cc2f0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 1, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw_MINUS0x24__rbp____ax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  store i16 %17, i16* %AX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_440268(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_44009e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440099(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 48
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440086(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x22__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 4, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RSI, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x710790___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RDX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x22__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdi_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x24__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 1, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 1
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 1, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax__rdi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RSI, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.clip1a_chr(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___r9w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i16 %12, i16* %R9W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %R10, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R11, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r11___r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R10, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r9w____r10__r11_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 23
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R11 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R10
  %16 = load i64, i64* %R11
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %R9W
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ff60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44008b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_43ff4e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440263(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_440182(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44017d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44016a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x710790___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x22__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 34
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rsi_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax__rsi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___r8w(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i16 %12, i16* %R8W, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R9, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r9___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__r8w____rsi__r9_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R9
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %R8W
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4400c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44016f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4400ae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44025e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440259(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440246(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswq_MINUS0x24__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i16*
  %17 = load i16, i16* %16
  %18 = sext i16 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44019a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44024b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440188(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_440317(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440312(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4402ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 4, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 4
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 4, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movw__ax___di(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %DI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__di____rcx__r8_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44028a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440304(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440278(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440424(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4403a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44039b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440388(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__dx___si(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %SI, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3138___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 12600, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12600
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12600, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i16*
  store i16 %19, i16* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440339(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44038d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_440327(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44041f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_44041a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_440407(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4403b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_44040c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4403a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x88___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 136, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 136
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 136, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
