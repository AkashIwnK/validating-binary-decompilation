; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G__0x6d4600_type = type <{ [8 x i8] }>
%G__0x6f73a0_type = type <{ [8 x i8] }>
%G__0x70d1b0_type = type <{ [8 x i8] }>
%G__0x722cd0_type = type <{ [8 x i8] }>
%G__0x723b20_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G__0x6d4600 = global %G__0x6d4600_type zeroinitializer
@G__0x6f73a0 = global %G__0x6f73a0_type zeroinitializer
@G__0x70d1b0 = global %G__0x70d1b0_type zeroinitializer
@G__0x722cd0 = global %G__0x722cd0_type zeroinitializer
@G__0x723b20 = global %G__0x723b20_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @dct_chroma4x4(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40acc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40acc0, %struct.Memory** %MEMORY
  %loadMem_40acc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i882 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i882
  %27 = load i64, i64* %PC.i881
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i881
  store i64 %26, i64* %RBP.i883, align 8
  store %struct.Memory* %loadMem_40acc1, %struct.Memory** %MEMORY
  %loadMem_40acc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i982 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i982
  %36 = load i64, i64* %PC.i981
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i981
  %38 = sub i64 %35, 208
  store i64 %38, i64* %RSP.i982, align 8
  %39 = icmp ult i64 %35, 208
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 208, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40acc4, %struct.Memory** %MEMORY
  %loadMem_40accb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %73 = bitcast %union.anon* %72 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %73, i32 0, i32 0
  %74 = load i64, i64* %PC.i1010
  %75 = add i64 %74, 2
  store i64 %75, i64* %PC.i1010
  store i8 1, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_40accb, %struct.Memory** %MEMORY
  %loadMem_40accd = load %struct.Memory*, %struct.Memory** %MEMORY
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %77 = getelementptr inbounds %struct.GPR, %struct.GPR* %76, i32 0, i32 33
  %78 = getelementptr inbounds %struct.Reg, %struct.Reg* %77, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %78 to i64*
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 11
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %EDI.i1379 = bitcast %union.anon* %81 to i32*
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 15
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %84 to i64*
  %85 = load i64, i64* %RBP.i1380
  %86 = sub i64 %85, 4
  %87 = load i32, i32* %EDI.i1379
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* %PC.i1378
  %90 = add i64 %89, 3
  store i64 %90, i64* %PC.i1378
  %91 = inttoptr i64 %86 to i32*
  store i32 %87, i32* %91
  store %struct.Memory* %loadMem_40accd, %struct.Memory** %MEMORY
  %loadMem_40acd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %93 = getelementptr inbounds %struct.GPR, %struct.GPR* %92, i32 0, i32 33
  %94 = getelementptr inbounds %struct.Reg, %struct.Reg* %93, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %94 to i64*
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %96 = getelementptr inbounds %struct.GPR, %struct.GPR* %95, i32 0, i32 9
  %97 = getelementptr inbounds %struct.Reg, %struct.Reg* %96, i32 0, i32 0
  %ESI.i1397 = bitcast %union.anon* %97 to i32*
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %99 = getelementptr inbounds %struct.GPR, %struct.GPR* %98, i32 0, i32 15
  %100 = getelementptr inbounds %struct.Reg, %struct.Reg* %99, i32 0, i32 0
  %RBP.i1398 = bitcast %union.anon* %100 to i64*
  %101 = load i64, i64* %RBP.i1398
  %102 = sub i64 %101, 8
  %103 = load i32, i32* %ESI.i1397
  %104 = zext i32 %103 to i64
  %105 = load i64, i64* %PC.i1396
  %106 = add i64 %105, 3
  store i64 %106, i64* %PC.i1396
  %107 = inttoptr i64 %102 to i32*
  store i32 %103, i32* %107
  store %struct.Memory* %loadMem_40acd0, %struct.Memory** %MEMORY
  %loadMem_40acd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 33
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %110 to i64*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 7
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %EDX.i1427 = bitcast %union.anon* %113 to i32*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 15
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %RBP.i1428 = bitcast %union.anon* %116 to i64*
  %117 = load i64, i64* %RBP.i1428
  %118 = sub i64 %117, 12
  %119 = load i32, i32* %EDX.i1427
  %120 = zext i32 %119 to i64
  %121 = load i64, i64* %PC.i1426
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC.i1426
  %123 = inttoptr i64 %118 to i32*
  store i32 %119, i32* %123
  store %struct.Memory* %loadMem_40acd3, %struct.Memory** %MEMORY
  %loadMem_40acd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 33
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %126 to i64*
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.GPR, %struct.GPR* %127, i32 0, i32 5
  %129 = getelementptr inbounds %struct.Reg, %struct.Reg* %128, i32 0, i32 0
  %RCX.i1445 = bitcast %union.anon* %129 to i64*
  %130 = load i64, i64* %PC.i1444
  %131 = add i64 %130, 8
  store i64 %131, i64* %PC.i1444
  %132 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %132, i64* %RCX.i1445, align 8
  store %struct.Memory* %loadMem_40acd6, %struct.Memory** %MEMORY
  %loadMem_40acde = load %struct.Memory*, %struct.Memory** %MEMORY
  %133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %134 = getelementptr inbounds %struct.GPR, %struct.GPR* %133, i32 0, i32 33
  %135 = getelementptr inbounds %struct.Reg, %struct.Reg* %134, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %135 to i64*
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %137 = getelementptr inbounds %struct.GPR, %struct.GPR* %136, i32 0, i32 5
  %138 = getelementptr inbounds %struct.Reg, %struct.Reg* %137, i32 0, i32 0
  %RCX.i1550 = bitcast %union.anon* %138 to i64*
  %139 = load i64, i64* %RCX.i1550
  %140 = add i64 %139, 14168
  %141 = load i64, i64* %PC.i1549
  %142 = add i64 %141, 7
  store i64 %142, i64* %PC.i1549
  %143 = inttoptr i64 %140 to i64*
  %144 = load i64, i64* %143
  store i64 %144, i64* %RCX.i1550, align 8
  store %struct.Memory* %loadMem_40acde, %struct.Memory** %MEMORY
  %loadMem_40ace5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 33
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %PC.i1610 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 17
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %R8.i1611 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %PC.i1610
  %152 = add i64 %151, 8
  store i64 %152, i64* %PC.i1610
  %153 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %153, i64* %R8.i1611, align 8
  store %struct.Memory* %loadMem_40ace5, %struct.Memory** %MEMORY
  %loadMem_40aced = load %struct.Memory*, %struct.Memory** %MEMORY
  %154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %155 = getelementptr inbounds %struct.GPR, %struct.GPR* %154, i32 0, i32 33
  %156 = getelementptr inbounds %struct.Reg, %struct.Reg* %155, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %156 to i64*
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %158 = getelementptr inbounds %struct.GPR, %struct.GPR* %157, i32 0, i32 17
  %159 = getelementptr inbounds %struct.Reg, %struct.Reg* %158, i32 0, i32 0
  %R8.i1626 = bitcast %union.anon* %159 to i64*
  %160 = load i64, i64* %R8.i1626
  %161 = add i64 %160, 12
  %162 = load i64, i64* %PC.i1625
  %163 = add i64 %162, 4
  store i64 %163, i64* %PC.i1625
  %164 = inttoptr i64 %161 to i32*
  %165 = load i32, i32* %164
  %166 = sext i32 %165 to i64
  store i64 %166, i64* %R8.i1626, align 8
  store %struct.Memory* %loadMem_40aced, %struct.Memory** %MEMORY
  %loadMem_40acf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %168 = getelementptr inbounds %struct.GPR, %struct.GPR* %167, i32 0, i32 33
  %169 = getelementptr inbounds %struct.Reg, %struct.Reg* %168, i32 0, i32 0
  %PC.i2074 = bitcast %union.anon* %169 to i64*
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 17
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %R8.i2075 = bitcast %union.anon* %172 to i64*
  %173 = load i64, i64* %R8.i2075
  %174 = load i64, i64* %PC.i2074
  %175 = add i64 %174, 7
  store i64 %175, i64* %PC.i2074
  %176 = sext i64 %173 to i128
  %177 = and i128 %176, -18446744073709551616
  %178 = zext i64 %173 to i128
  %179 = or i128 %177, %178
  %180 = mul i128 632, %179
  %181 = trunc i128 %180 to i64
  store i64 %181, i64* %R8.i2075, align 8
  %182 = sext i64 %181 to i128
  %183 = icmp ne i128 %182, %180
  %184 = zext i1 %183 to i8
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %184, i8* %185, align 1
  %186 = trunc i128 %180 to i32
  %187 = and i32 %186, 255
  %188 = call i32 @llvm.ctpop.i32(i32 %187)
  %189 = trunc i32 %188 to i8
  %190 = and i8 %189, 1
  %191 = xor i8 %190, 1
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %191, i8* %192, align 1
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %193, align 1
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %194, align 1
  %195 = lshr i64 %181, 63
  %196 = trunc i64 %195 to i8
  %197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %196, i8* %197, align 1
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %184, i8* %198, align 1
  store %struct.Memory* %loadMem_40acf1, %struct.Memory** %MEMORY
  %loadMem_40acf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %200 = getelementptr inbounds %struct.GPR, %struct.GPR* %199, i32 0, i32 33
  %201 = getelementptr inbounds %struct.Reg, %struct.Reg* %200, i32 0, i32 0
  %PC.i2091 = bitcast %union.anon* %201 to i64*
  %202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %203 = getelementptr inbounds %struct.GPR, %struct.GPR* %202, i32 0, i32 5
  %204 = getelementptr inbounds %struct.Reg, %struct.Reg* %203, i32 0, i32 0
  %RCX.i2092 = bitcast %union.anon* %204 to i64*
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %206 = getelementptr inbounds %struct.GPR, %struct.GPR* %205, i32 0, i32 17
  %207 = getelementptr inbounds %struct.Reg, %struct.Reg* %206, i32 0, i32 0
  %R8.i2093 = bitcast %union.anon* %207 to i64*
  %208 = load i64, i64* %RCX.i2092
  %209 = load i64, i64* %R8.i2093
  %210 = load i64, i64* %PC.i2091
  %211 = add i64 %210, 3
  store i64 %211, i64* %PC.i2091
  %212 = add i64 %209, %208
  store i64 %212, i64* %RCX.i2092, align 8
  %213 = icmp ult i64 %212, %208
  %214 = icmp ult i64 %212, %209
  %215 = or i1 %213, %214
  %216 = zext i1 %215 to i8
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %216, i8* %217, align 1
  %218 = trunc i64 %212 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219)
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1
  %225 = xor i64 %209, %208
  %226 = xor i64 %225, %212
  %227 = lshr i64 %226, 4
  %228 = trunc i64 %227 to i8
  %229 = and i8 %228, 1
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %229, i8* %230, align 1
  %231 = icmp eq i64 %212, 0
  %232 = zext i1 %231 to i8
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %232, i8* %233, align 1
  %234 = lshr i64 %212, 63
  %235 = trunc i64 %234 to i8
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %235, i8* %236, align 1
  %237 = lshr i64 %208, 63
  %238 = lshr i64 %209, 63
  %239 = xor i64 %234, %237
  %240 = xor i64 %234, %238
  %241 = add i64 %239, %240
  %242 = icmp eq i64 %241, 2
  %243 = zext i1 %242 to i8
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %243, i8* %244, align 1
  store %struct.Memory* %loadMem_40acf8, %struct.Memory** %MEMORY
  %loadMem_40acfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %246 = getelementptr inbounds %struct.GPR, %struct.GPR* %245, i32 0, i32 33
  %247 = getelementptr inbounds %struct.Reg, %struct.Reg* %246, i32 0, i32 0
  %PC.i2277 = bitcast %union.anon* %247 to i64*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 5
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %RCX.i2278 = bitcast %union.anon* %250 to i64*
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %252 = getelementptr inbounds %struct.GPR, %struct.GPR* %251, i32 0, i32 15
  %253 = getelementptr inbounds %struct.Reg, %struct.Reg* %252, i32 0, i32 0
  %RBP.i2279 = bitcast %union.anon* %253 to i64*
  %254 = load i64, i64* %RBP.i2279
  %255 = sub i64 %254, 96
  %256 = load i64, i64* %RCX.i2278
  %257 = load i64, i64* %PC.i2277
  %258 = add i64 %257, 4
  store i64 %258, i64* %PC.i2277
  %259 = inttoptr i64 %255 to i64*
  store i64 %256, i64* %259
  store %struct.Memory* %loadMem_40acfb, %struct.Memory** %MEMORY
  %loadMem_40acff = load %struct.Memory*, %struct.Memory** %MEMORY
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %261 = getelementptr inbounds %struct.GPR, %struct.GPR* %260, i32 0, i32 33
  %262 = getelementptr inbounds %struct.Reg, %struct.Reg* %261, i32 0, i32 0
  %PC.i2274 = bitcast %union.anon* %262 to i64*
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 5
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %RCX.i2275 = bitcast %union.anon* %265 to i64*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 15
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %RBP.i2276 = bitcast %union.anon* %268 to i64*
  %269 = load i64, i64* %RBP.i2276
  %270 = sub i64 %269, 96
  %271 = load i64, i64* %PC.i2274
  %272 = add i64 %271, 4
  store i64 %272, i64* %PC.i2274
  %273 = inttoptr i64 %270 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %RCX.i2275, align 8
  store %struct.Memory* %loadMem_40acff, %struct.Memory** %MEMORY
  %loadMem_40ad03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i2272 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 5
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %RCX.i2273 = bitcast %union.anon* %280 to i64*
  %281 = load i64, i64* %RCX.i2273
  %282 = add i64 %281, 72
  %283 = load i64, i64* %PC.i2272
  %284 = add i64 %283, 4
  store i64 %284, i64* %PC.i2272
  %285 = inttoptr i64 %282 to i32*
  %286 = load i32, i32* %285
  %287 = sub i32 %286, 9
  %288 = icmp ult i32 %286, 9
  %289 = zext i1 %288 to i8
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %289, i8* %290, align 1
  %291 = and i32 %287, 255
  %292 = call i32 @llvm.ctpop.i32(i32 %291)
  %293 = trunc i32 %292 to i8
  %294 = and i8 %293, 1
  %295 = xor i8 %294, 1
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %295, i8* %296, align 1
  %297 = xor i32 %286, 9
  %298 = xor i32 %297, %287
  %299 = lshr i32 %298, 4
  %300 = trunc i32 %299 to i8
  %301 = and i8 %300, 1
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %301, i8* %302, align 1
  %303 = icmp eq i32 %287, 0
  %304 = zext i1 %303 to i8
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %304, i8* %305, align 1
  %306 = lshr i32 %287, 31
  %307 = trunc i32 %306 to i8
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %307, i8* %308, align 1
  %309 = lshr i32 %286, 31
  %310 = xor i32 %306, %309
  %311 = add i32 %310, %309
  %312 = icmp eq i32 %311, 2
  %313 = zext i1 %312 to i8
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %313, i8* %314, align 1
  store %struct.Memory* %loadMem_40ad03, %struct.Memory** %MEMORY
  %loadMem_40ad07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %316 = getelementptr inbounds %struct.GPR, %struct.GPR* %315, i32 0, i32 33
  %317 = getelementptr inbounds %struct.Reg, %struct.Reg* %316, i32 0, i32 0
  %PC.i2269 = bitcast %union.anon* %317 to i64*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 1
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %321 = bitcast %union.anon* %320 to %struct.anon.2*
  %AL.i2270 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %321, i32 0, i32 0
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %323 = getelementptr inbounds %struct.GPR, %struct.GPR* %322, i32 0, i32 15
  %324 = getelementptr inbounds %struct.Reg, %struct.Reg* %323, i32 0, i32 0
  %RBP.i2271 = bitcast %union.anon* %324 to i64*
  %325 = load i64, i64* %RBP.i2271
  %326 = sub i64 %325, 141
  %327 = load i8, i8* %AL.i2270
  %328 = zext i8 %327 to i64
  %329 = load i64, i64* %PC.i2269
  %330 = add i64 %329, 6
  store i64 %330, i64* %PC.i2269
  %331 = inttoptr i64 %326 to i8*
  store i8 %327, i8* %331
  store %struct.Memory* %loadMem_40ad07, %struct.Memory** %MEMORY
  %loadMem_40ad0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 33
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %PC.i2268 = bitcast %union.anon* %334 to i64*
  %335 = load i64, i64* %PC.i2268
  %336 = add i64 %335, 45
  %337 = load i64, i64* %PC.i2268
  %338 = add i64 %337, 6
  %339 = load i64, i64* %PC.i2268
  %340 = add i64 %339, 6
  store i64 %340, i64* %PC.i2268
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %342 = load i8, i8* %341, align 1
  store i8 %342, i8* %BRANCH_TAKEN, align 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %344 = icmp ne i8 %342, 0
  %345 = select i1 %344, i64 %336, i64 %338
  store i64 %345, i64* %343, align 8
  store %struct.Memory* %loadMem_40ad0d, %struct.Memory** %MEMORY
  %loadBr_40ad0d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ad0d = icmp eq i8 %loadBr_40ad0d, 1
  br i1 %cmpBr_40ad0d, label %block_.L_40ad3a, label %block_40ad13

block_40ad13:                                     ; preds = %entry
  %loadMem_40ad13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 33
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %PC.i2266 = bitcast %union.anon* %348 to i64*
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %350 = getelementptr inbounds %struct.GPR, %struct.GPR* %349, i32 0, i32 1
  %351 = getelementptr inbounds %struct.Reg, %struct.Reg* %350, i32 0, i32 0
  %352 = bitcast %union.anon* %351 to %struct.anon.2*
  %AL.i2267 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %352, i32 0, i32 0
  %353 = load i64, i64* %PC.i2266
  %354 = add i64 %353, 2
  store i64 %354, i64* %PC.i2266
  store i8 1, i8* %AL.i2267, align 1
  store %struct.Memory* %loadMem_40ad13, %struct.Memory** %MEMORY
  %loadMem_40ad15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %356 = getelementptr inbounds %struct.GPR, %struct.GPR* %355, i32 0, i32 33
  %357 = getelementptr inbounds %struct.Reg, %struct.Reg* %356, i32 0, i32 0
  %PC.i2263 = bitcast %union.anon* %357 to i64*
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 5
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %RCX.i2264 = bitcast %union.anon* %360 to i64*
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 15
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %RBP.i2265 = bitcast %union.anon* %363 to i64*
  %364 = load i64, i64* %RBP.i2265
  %365 = sub i64 %364, 96
  %366 = load i64, i64* %PC.i2263
  %367 = add i64 %366, 4
  store i64 %367, i64* %PC.i2263
  %368 = inttoptr i64 %365 to i64*
  %369 = load i64, i64* %368
  store i64 %369, i64* %RCX.i2264, align 8
  store %struct.Memory* %loadMem_40ad15, %struct.Memory** %MEMORY
  %loadMem_40ad19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %371 = getelementptr inbounds %struct.GPR, %struct.GPR* %370, i32 0, i32 33
  %372 = getelementptr inbounds %struct.Reg, %struct.Reg* %371, i32 0, i32 0
  %PC.i2261 = bitcast %union.anon* %372 to i64*
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %374 = getelementptr inbounds %struct.GPR, %struct.GPR* %373, i32 0, i32 5
  %375 = getelementptr inbounds %struct.Reg, %struct.Reg* %374, i32 0, i32 0
  %RCX.i2262 = bitcast %union.anon* %375 to i64*
  %376 = load i64, i64* %RCX.i2262
  %377 = add i64 %376, 72
  %378 = load i64, i64* %PC.i2261
  %379 = add i64 %378, 4
  store i64 %379, i64* %PC.i2261
  %380 = inttoptr i64 %377 to i32*
  %381 = load i32, i32* %380
  %382 = sub i32 %381, 10
  %383 = icmp ult i32 %381, 10
  %384 = zext i1 %383 to i8
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %384, i8* %385, align 1
  %386 = and i32 %382, 255
  %387 = call i32 @llvm.ctpop.i32(i32 %386)
  %388 = trunc i32 %387 to i8
  %389 = and i8 %388, 1
  %390 = xor i8 %389, 1
  %391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %390, i8* %391, align 1
  %392 = xor i32 %381, 10
  %393 = xor i32 %392, %382
  %394 = lshr i32 %393, 4
  %395 = trunc i32 %394 to i8
  %396 = and i8 %395, 1
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %396, i8* %397, align 1
  %398 = icmp eq i32 %382, 0
  %399 = zext i1 %398 to i8
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %399, i8* %400, align 1
  %401 = lshr i32 %382, 31
  %402 = trunc i32 %401 to i8
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %402, i8* %403, align 1
  %404 = lshr i32 %381, 31
  %405 = xor i32 %401, %404
  %406 = add i32 %405, %404
  %407 = icmp eq i32 %406, 2
  %408 = zext i1 %407 to i8
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %408, i8* %409, align 1
  store %struct.Memory* %loadMem_40ad19, %struct.Memory** %MEMORY
  %loadMem_40ad1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %411 = getelementptr inbounds %struct.GPR, %struct.GPR* %410, i32 0, i32 33
  %412 = getelementptr inbounds %struct.Reg, %struct.Reg* %411, i32 0, i32 0
  %PC.i2258 = bitcast %union.anon* %412 to i64*
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 1
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %416 = bitcast %union.anon* %415 to %struct.anon.2*
  %AL.i2259 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %416, i32 0, i32 0
  %417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %418 = getelementptr inbounds %struct.GPR, %struct.GPR* %417, i32 0, i32 15
  %419 = getelementptr inbounds %struct.Reg, %struct.Reg* %418, i32 0, i32 0
  %RBP.i2260 = bitcast %union.anon* %419 to i64*
  %420 = load i64, i64* %RBP.i2260
  %421 = sub i64 %420, 141
  %422 = load i8, i8* %AL.i2259
  %423 = zext i8 %422 to i64
  %424 = load i64, i64* %PC.i2258
  %425 = add i64 %424, 6
  store i64 %425, i64* %PC.i2258
  %426 = inttoptr i64 %421 to i8*
  store i8 %422, i8* %426
  store %struct.Memory* %loadMem_40ad1d, %struct.Memory** %MEMORY
  %loadMem_40ad23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 33
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %PC.i2257 = bitcast %union.anon* %429 to i64*
  %430 = load i64, i64* %PC.i2257
  %431 = add i64 %430, 23
  %432 = load i64, i64* %PC.i2257
  %433 = add i64 %432, 6
  %434 = load i64, i64* %PC.i2257
  %435 = add i64 %434, 6
  store i64 %435, i64* %PC.i2257
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %437 = load i8, i8* %436, align 1
  store i8 %437, i8* %BRANCH_TAKEN, align 1
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %439 = icmp ne i8 %437, 0
  %440 = select i1 %439, i64 %431, i64 %433
  store i64 %440, i64* %438, align 8
  store %struct.Memory* %loadMem_40ad23, %struct.Memory** %MEMORY
  %loadBr_40ad23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ad23 = icmp eq i8 %loadBr_40ad23, 1
  br i1 %cmpBr_40ad23, label %block_.L_40ad3a, label %block_40ad29

block_40ad29:                                     ; preds = %block_40ad13
  %loadMem_40ad29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 33
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %PC.i2254 = bitcast %union.anon* %443 to i64*
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %445 = getelementptr inbounds %struct.GPR, %struct.GPR* %444, i32 0, i32 1
  %446 = getelementptr inbounds %struct.Reg, %struct.Reg* %445, i32 0, i32 0
  %RAX.i2255 = bitcast %union.anon* %446 to i64*
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %448 = getelementptr inbounds %struct.GPR, %struct.GPR* %447, i32 0, i32 15
  %449 = getelementptr inbounds %struct.Reg, %struct.Reg* %448, i32 0, i32 0
  %RBP.i2256 = bitcast %union.anon* %449 to i64*
  %450 = load i64, i64* %RBP.i2256
  %451 = sub i64 %450, 96
  %452 = load i64, i64* %PC.i2254
  %453 = add i64 %452, 4
  store i64 %453, i64* %PC.i2254
  %454 = inttoptr i64 %451 to i64*
  %455 = load i64, i64* %454
  store i64 %455, i64* %RAX.i2255, align 8
  store %struct.Memory* %loadMem_40ad29, %struct.Memory** %MEMORY
  %loadMem_40ad2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 33
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %PC.i2252 = bitcast %union.anon* %458 to i64*
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 1
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %RAX.i2253 = bitcast %union.anon* %461 to i64*
  %462 = load i64, i64* %RAX.i2253
  %463 = add i64 %462, 72
  %464 = load i64, i64* %PC.i2252
  %465 = add i64 %464, 4
  store i64 %465, i64* %PC.i2252
  %466 = inttoptr i64 %463 to i32*
  %467 = load i32, i32* %466
  %468 = sub i32 %467, 13
  %469 = icmp ult i32 %467, 13
  %470 = zext i1 %469 to i8
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %470, i8* %471, align 1
  %472 = and i32 %468, 255
  %473 = call i32 @llvm.ctpop.i32(i32 %472)
  %474 = trunc i32 %473 to i8
  %475 = and i8 %474, 1
  %476 = xor i8 %475, 1
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %476, i8* %477, align 1
  %478 = xor i32 %467, 13
  %479 = xor i32 %478, %468
  %480 = lshr i32 %479, 4
  %481 = trunc i32 %480 to i8
  %482 = and i8 %481, 1
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %482, i8* %483, align 1
  %484 = icmp eq i32 %468, 0
  %485 = zext i1 %484 to i8
  %486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %485, i8* %486, align 1
  %487 = lshr i32 %468, 31
  %488 = trunc i32 %487 to i8
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %488, i8* %489, align 1
  %490 = lshr i32 %467, 31
  %491 = xor i32 %487, %490
  %492 = add i32 %491, %490
  %493 = icmp eq i32 %492, 2
  %494 = zext i1 %493 to i8
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %494, i8* %495, align 1
  store %struct.Memory* %loadMem_40ad2d, %struct.Memory** %MEMORY
  %loadMem_40ad31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 33
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %PC.i2250 = bitcast %union.anon* %498 to i64*
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 5
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %502 = bitcast %union.anon* %501 to %struct.anon.2*
  %CL.i2251 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %502, i32 0, i32 0
  %503 = load i64, i64* %PC.i2250
  %504 = add i64 %503, 3
  store i64 %504, i64* %PC.i2250
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %506 = load i8, i8* %505, align 1
  store i8 %506, i8* %CL.i2251, align 1
  store %struct.Memory* %loadMem_40ad31, %struct.Memory** %MEMORY
  %loadMem_40ad34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 33
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %PC.i2247 = bitcast %union.anon* %509 to i64*
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %511 = getelementptr inbounds %struct.GPR, %struct.GPR* %510, i32 0, i32 5
  %512 = getelementptr inbounds %struct.Reg, %struct.Reg* %511, i32 0, i32 0
  %513 = bitcast %union.anon* %512 to %struct.anon.2*
  %CL.i2248 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %513, i32 0, i32 0
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 15
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %RBP.i2249 = bitcast %union.anon* %516 to i64*
  %517 = load i64, i64* %RBP.i2249
  %518 = sub i64 %517, 141
  %519 = load i8, i8* %CL.i2248
  %520 = zext i8 %519 to i64
  %521 = load i64, i64* %PC.i2247
  %522 = add i64 %521, 6
  store i64 %522, i64* %PC.i2247
  %523 = inttoptr i64 %518 to i8*
  store i8 %519, i8* %523
  store %struct.Memory* %loadMem_40ad34, %struct.Memory** %MEMORY
  br label %block_.L_40ad3a

block_.L_40ad3a:                                  ; preds = %block_40ad29, %block_40ad13, %entry
  %loadMem_40ad3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %525 = getelementptr inbounds %struct.GPR, %struct.GPR* %524, i32 0, i32 33
  %526 = getelementptr inbounds %struct.Reg, %struct.Reg* %525, i32 0, i32 0
  %PC.i2244 = bitcast %union.anon* %526 to i64*
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %528 = getelementptr inbounds %struct.GPR, %struct.GPR* %527, i32 0, i32 1
  %529 = getelementptr inbounds %struct.Reg, %struct.Reg* %528, i32 0, i32 0
  %530 = bitcast %union.anon* %529 to %struct.anon.2*
  %AL.i2245 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %530, i32 0, i32 0
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %532 = getelementptr inbounds %struct.GPR, %struct.GPR* %531, i32 0, i32 15
  %533 = getelementptr inbounds %struct.Reg, %struct.Reg* %532, i32 0, i32 0
  %RBP.i2246 = bitcast %union.anon* %533 to i64*
  %534 = load i64, i64* %RBP.i2246
  %535 = sub i64 %534, 141
  %536 = load i64, i64* %PC.i2244
  %537 = add i64 %536, 6
  store i64 %537, i64* %PC.i2244
  %538 = inttoptr i64 %535 to i8*
  %539 = load i8, i8* %538
  store i8 %539, i8* %AL.i2245, align 1
  store %struct.Memory* %loadMem_40ad3a, %struct.Memory** %MEMORY
  %loadMem_40ad40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %541 = getelementptr inbounds %struct.GPR, %struct.GPR* %540, i32 0, i32 33
  %542 = getelementptr inbounds %struct.Reg, %struct.Reg* %541, i32 0, i32 0
  %PC.i2241 = bitcast %union.anon* %542 to i64*
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 5
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %ECX.i2242 = bitcast %union.anon* %545 to i32*
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 5
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %RCX.i2243 = bitcast %union.anon* %548 to i64*
  %549 = load i64, i64* %RCX.i2243
  %550 = load i32, i32* %ECX.i2242
  %551 = zext i32 %550 to i64
  %552 = load i64, i64* %PC.i2241
  %553 = add i64 %552, 2
  store i64 %553, i64* %PC.i2241
  %554 = xor i64 %551, %549
  %555 = trunc i64 %554 to i32
  %556 = and i64 %554, 4294967295
  store i64 %556, i64* %RCX.i2243, align 8
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %557, align 1
  %558 = and i32 %555, 255
  %559 = call i32 @llvm.ctpop.i32(i32 %558)
  %560 = trunc i32 %559 to i8
  %561 = and i8 %560, 1
  %562 = xor i8 %561, 1
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %562, i8* %563, align 1
  %564 = icmp eq i32 %555, 0
  %565 = zext i1 %564 to i8
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %565, i8* %566, align 1
  %567 = lshr i32 %555, 31
  %568 = trunc i32 %567 to i8
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %568, i8* %569, align 1
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %570, align 1
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %571, align 1
  store %struct.Memory* %loadMem_40ad40, %struct.Memory** %MEMORY
  %loadMem_40ad42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 33
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %PC.i2238 = bitcast %union.anon* %574 to i64*
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %576 = getelementptr inbounds %struct.GPR, %struct.GPR* %575, i32 0, i32 5
  %577 = getelementptr inbounds %struct.Reg, %struct.Reg* %576, i32 0, i32 0
  %578 = bitcast %union.anon* %577 to %struct.anon.2*
  %CL.i2239 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %578, i32 0, i32 0
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 7
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %582 = bitcast %union.anon* %581 to %struct.anon.2*
  %DL.i2240 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %582, i32 0, i32 0
  %583 = load i8, i8* %CL.i2239
  %584 = zext i8 %583 to i64
  %585 = load i64, i64* %PC.i2238
  %586 = add i64 %585, 2
  store i64 %586, i64* %PC.i2238
  store i8 %583, i8* %DL.i2240, align 1
  store %struct.Memory* %loadMem_40ad42, %struct.Memory** %MEMORY
  %loadMem_40ad44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 33
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %PC.i2236 = bitcast %union.anon* %589 to i64*
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %591 = getelementptr inbounds %struct.GPR, %struct.GPR* %590, i32 0, i32 1
  %592 = getelementptr inbounds %struct.Reg, %struct.Reg* %591, i32 0, i32 0
  %593 = bitcast %union.anon* %592 to %struct.anon.2*
  %AL.i2237 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %593, i32 0, i32 0
  %594 = load i8, i8* %AL.i2237
  %595 = zext i8 %594 to i64
  %596 = load i64, i64* %PC.i2236
  %597 = add i64 %596, 2
  store i64 %597, i64* %PC.i2236
  %598 = and i64 1, %595
  %599 = trunc i64 %598 to i8
  store i8 %599, i8* %AL.i2237, align 1
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %600, align 1
  %601 = trunc i64 %598 to i32
  %602 = and i32 %601, 255
  %603 = call i32 @llvm.ctpop.i32(i32 %602)
  %604 = trunc i32 %603 to i8
  %605 = and i8 %604, 1
  %606 = xor i8 %605, 1
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %606, i8* %607, align 1
  %608 = icmp eq i8 %599, 0
  %609 = zext i1 %608 to i8
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %609, i8* %610, align 1
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %611, align 1
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %612, align 1
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %613, align 1
  store %struct.Memory* %loadMem_40ad44, %struct.Memory** %MEMORY
  %loadMem_40ad46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 33
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %PC.i2233 = bitcast %union.anon* %616 to i64*
  %617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %618 = getelementptr inbounds %struct.GPR, %struct.GPR* %617, i32 0, i32 1
  %619 = getelementptr inbounds %struct.Reg, %struct.Reg* %618, i32 0, i32 0
  %620 = bitcast %union.anon* %619 to %struct.anon.2*
  %AL.i2234 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %620, i32 0, i32 0
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 5
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %RCX.i2235 = bitcast %union.anon* %623 to i64*
  %624 = load i8, i8* %AL.i2234
  %625 = zext i8 %624 to i64
  %626 = load i64, i64* %PC.i2233
  %627 = add i64 %626, 3
  store i64 %627, i64* %PC.i2233
  %628 = and i64 %625, 255
  store i64 %628, i64* %RCX.i2235, align 8
  store %struct.Memory* %loadMem_40ad46, %struct.Memory** %MEMORY
  %loadMem_40ad49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %630 = getelementptr inbounds %struct.GPR, %struct.GPR* %629, i32 0, i32 33
  %631 = getelementptr inbounds %struct.Reg, %struct.Reg* %630, i32 0, i32 0
  %PC.i2230 = bitcast %union.anon* %631 to i64*
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 5
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %ECX.i2231 = bitcast %union.anon* %634 to i32*
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %636 = getelementptr inbounds %struct.GPR, %struct.GPR* %635, i32 0, i32 15
  %637 = getelementptr inbounds %struct.Reg, %struct.Reg* %636, i32 0, i32 0
  %RBP.i2232 = bitcast %union.anon* %637 to i64*
  %638 = load i64, i64* %RBP.i2232
  %639 = sub i64 %638, 100
  %640 = load i32, i32* %ECX.i2231
  %641 = zext i32 %640 to i64
  %642 = load i64, i64* %PC.i2230
  %643 = add i64 %642, 3
  store i64 %643, i64* %PC.i2230
  %644 = inttoptr i64 %639 to i32*
  store i32 %640, i32* %644
  store %struct.Memory* %loadMem_40ad49, %struct.Memory** %MEMORY
  %loadMem_40ad4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %646 = getelementptr inbounds %struct.GPR, %struct.GPR* %645, i32 0, i32 33
  %647 = getelementptr inbounds %struct.Reg, %struct.Reg* %646, i32 0, i32 0
  %PC.i2228 = bitcast %union.anon* %647 to i64*
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 9
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %RSI.i2229 = bitcast %union.anon* %650 to i64*
  %651 = load i64, i64* %PC.i2228
  %652 = add i64 %651, 8
  store i64 %652, i64* %PC.i2228
  %653 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %653, i64* %RSI.i2229, align 8
  store %struct.Memory* %loadMem_40ad4c, %struct.Memory** %MEMORY
  %loadMem_40ad54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %655 = getelementptr inbounds %struct.GPR, %struct.GPR* %654, i32 0, i32 33
  %656 = getelementptr inbounds %struct.Reg, %struct.Reg* %655, i32 0, i32 0
  %PC.i2226 = bitcast %union.anon* %656 to i64*
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %658 = getelementptr inbounds %struct.GPR, %struct.GPR* %657, i32 0, i32 9
  %659 = getelementptr inbounds %struct.Reg, %struct.Reg* %658, i32 0, i32 0
  %RSI.i2227 = bitcast %union.anon* %659 to i64*
  %660 = load i64, i64* %RSI.i2227
  %661 = add i64 %660, 14136
  %662 = load i64, i64* %PC.i2226
  %663 = add i64 %662, 7
  store i64 %663, i64* %PC.i2226
  %664 = inttoptr i64 %661 to i64*
  %665 = load i64, i64* %664
  store i64 %665, i64* %RSI.i2227, align 8
  store %struct.Memory* %loadMem_40ad54, %struct.Memory** %MEMORY
  %loadMem_40ad5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %667 = getelementptr inbounds %struct.GPR, %struct.GPR* %666, i32 0, i32 33
  %668 = getelementptr inbounds %struct.Reg, %struct.Reg* %667, i32 0, i32 0
  %PC.i2223 = bitcast %union.anon* %668 to i64*
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 11
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %RDI.i2224 = bitcast %union.anon* %671 to i64*
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 15
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %RBP.i2225 = bitcast %union.anon* %674 to i64*
  %675 = load i64, i64* %RBP.i2225
  %676 = sub i64 %675, 8
  %677 = load i64, i64* %PC.i2223
  %678 = add i64 %677, 4
  store i64 %678, i64* %PC.i2223
  %679 = inttoptr i64 %676 to i32*
  %680 = load i32, i32* %679
  %681 = sext i32 %680 to i64
  store i64 %681, i64* %RDI.i2224, align 8
  store %struct.Memory* %loadMem_40ad5b, %struct.Memory** %MEMORY
  %loadMem_40ad5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %683 = getelementptr inbounds %struct.GPR, %struct.GPR* %682, i32 0, i32 33
  %684 = getelementptr inbounds %struct.Reg, %struct.Reg* %683, i32 0, i32 0
  %PC.i2220 = bitcast %union.anon* %684 to i64*
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 9
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %RSI.i2221 = bitcast %union.anon* %687 to i64*
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 11
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %RDI.i2222 = bitcast %union.anon* %690 to i64*
  %691 = load i64, i64* %RSI.i2221
  %692 = load i64, i64* %RDI.i2222
  %693 = mul i64 %692, 8
  %694 = add i64 %693, %691
  %695 = load i64, i64* %PC.i2220
  %696 = add i64 %695, 4
  store i64 %696, i64* %PC.i2220
  %697 = inttoptr i64 %694 to i64*
  %698 = load i64, i64* %697
  store i64 %698, i64* %RSI.i2221, align 8
  store %struct.Memory* %loadMem_40ad5f, %struct.Memory** %MEMORY
  %loadMem_40ad63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 33
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %PC.i2217 = bitcast %union.anon* %701 to i64*
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %703 = getelementptr inbounds %struct.GPR, %struct.GPR* %702, i32 0, i32 11
  %704 = getelementptr inbounds %struct.Reg, %struct.Reg* %703, i32 0, i32 0
  %RDI.i2218 = bitcast %union.anon* %704 to i64*
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %706 = getelementptr inbounds %struct.GPR, %struct.GPR* %705, i32 0, i32 15
  %707 = getelementptr inbounds %struct.Reg, %struct.Reg* %706, i32 0, i32 0
  %RBP.i2219 = bitcast %union.anon* %707 to i64*
  %708 = load i64, i64* %RBP.i2219
  %709 = sub i64 %708, 12
  %710 = load i64, i64* %PC.i2217
  %711 = add i64 %710, 4
  store i64 %711, i64* %PC.i2217
  %712 = inttoptr i64 %709 to i32*
  %713 = load i32, i32* %712
  %714 = sext i32 %713 to i64
  store i64 %714, i64* %RDI.i2218, align 8
  store %struct.Memory* %loadMem_40ad63, %struct.Memory** %MEMORY
  %loadMem_40ad67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 33
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %PC.i2214 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 9
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RSI.i2215 = bitcast %union.anon* %720 to i64*
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %722 = getelementptr inbounds %struct.GPR, %struct.GPR* %721, i32 0, i32 11
  %723 = getelementptr inbounds %struct.Reg, %struct.Reg* %722, i32 0, i32 0
  %RDI.i2216 = bitcast %union.anon* %723 to i64*
  %724 = load i64, i64* %RSI.i2215
  %725 = load i64, i64* %RDI.i2216
  %726 = mul i64 %725, 8
  %727 = add i64 %726, %724
  %728 = load i64, i64* %PC.i2214
  %729 = add i64 %728, 4
  store i64 %729, i64* %PC.i2214
  %730 = inttoptr i64 %727 to i64*
  %731 = load i64, i64* %730
  store i64 %731, i64* %RSI.i2215, align 8
  store %struct.Memory* %loadMem_40ad67, %struct.Memory** %MEMORY
  %loadMem_40ad6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 33
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %PC.i2212 = bitcast %union.anon* %734 to i64*
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 9
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %RSI.i2213 = bitcast %union.anon* %737 to i64*
  %738 = load i64, i64* %RSI.i2213
  %739 = load i64, i64* %PC.i2212
  %740 = add i64 %739, 3
  store i64 %740, i64* %PC.i2212
  %741 = inttoptr i64 %738 to i64*
  %742 = load i64, i64* %741
  store i64 %742, i64* %RSI.i2213, align 8
  store %struct.Memory* %loadMem_40ad6b, %struct.Memory** %MEMORY
  %loadMem_40ad6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 33
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %PC.i2209 = bitcast %union.anon* %745 to i64*
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 9
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %RSI.i2210 = bitcast %union.anon* %748 to i64*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 15
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %RBP.i2211 = bitcast %union.anon* %751 to i64*
  %752 = load i64, i64* %RBP.i2211
  %753 = sub i64 %752, 128
  %754 = load i64, i64* %RSI.i2210
  %755 = load i64, i64* %PC.i2209
  %756 = add i64 %755, 4
  store i64 %756, i64* %PC.i2209
  %757 = inttoptr i64 %753 to i64*
  store i64 %754, i64* %757
  store %struct.Memory* %loadMem_40ad6e, %struct.Memory** %MEMORY
  %loadMem_40ad72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 33
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %PC.i2207 = bitcast %union.anon* %760 to i64*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 9
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RSI.i2208 = bitcast %union.anon* %763 to i64*
  %764 = load i64, i64* %PC.i2207
  %765 = add i64 %764, 8
  store i64 %765, i64* %PC.i2207
  %766 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %766, i64* %RSI.i2208, align 8
  store %struct.Memory* %loadMem_40ad72, %struct.Memory** %MEMORY
  %loadMem_40ad7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 33
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %PC.i2205 = bitcast %union.anon* %769 to i64*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 9
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %RSI.i2206 = bitcast %union.anon* %772 to i64*
  %773 = load i64, i64* %RSI.i2206
  %774 = add i64 %773, 14136
  %775 = load i64, i64* %PC.i2205
  %776 = add i64 %775, 7
  store i64 %776, i64* %PC.i2205
  %777 = inttoptr i64 %774 to i64*
  %778 = load i64, i64* %777
  store i64 %778, i64* %RSI.i2206, align 8
  store %struct.Memory* %loadMem_40ad7a, %struct.Memory** %MEMORY
  %loadMem_40ad81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %PC.i2202 = bitcast %union.anon* %781 to i64*
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 11
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %RDI.i2203 = bitcast %union.anon* %784 to i64*
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 15
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %RBP.i2204 = bitcast %union.anon* %787 to i64*
  %788 = load i64, i64* %RBP.i2204
  %789 = sub i64 %788, 8
  %790 = load i64, i64* %PC.i2202
  %791 = add i64 %790, 4
  store i64 %791, i64* %PC.i2202
  %792 = inttoptr i64 %789 to i32*
  %793 = load i32, i32* %792
  %794 = sext i32 %793 to i64
  store i64 %794, i64* %RDI.i2203, align 8
  store %struct.Memory* %loadMem_40ad81, %struct.Memory** %MEMORY
  %loadMem_40ad85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %796 = getelementptr inbounds %struct.GPR, %struct.GPR* %795, i32 0, i32 33
  %797 = getelementptr inbounds %struct.Reg, %struct.Reg* %796, i32 0, i32 0
  %PC.i2199 = bitcast %union.anon* %797 to i64*
  %798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %799 = getelementptr inbounds %struct.GPR, %struct.GPR* %798, i32 0, i32 9
  %800 = getelementptr inbounds %struct.Reg, %struct.Reg* %799, i32 0, i32 0
  %RSI.i2200 = bitcast %union.anon* %800 to i64*
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 11
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %RDI.i2201 = bitcast %union.anon* %803 to i64*
  %804 = load i64, i64* %RSI.i2200
  %805 = load i64, i64* %RDI.i2201
  %806 = mul i64 %805, 8
  %807 = add i64 %806, %804
  %808 = load i64, i64* %PC.i2199
  %809 = add i64 %808, 4
  store i64 %809, i64* %PC.i2199
  %810 = inttoptr i64 %807 to i64*
  %811 = load i64, i64* %810
  store i64 %811, i64* %RSI.i2200, align 8
  store %struct.Memory* %loadMem_40ad85, %struct.Memory** %MEMORY
  %loadMem_40ad89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 33
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %PC.i2196 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 11
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RDI.i2197 = bitcast %union.anon* %817 to i64*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 15
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %RBP.i2198 = bitcast %union.anon* %820 to i64*
  %821 = load i64, i64* %RBP.i2198
  %822 = sub i64 %821, 12
  %823 = load i64, i64* %PC.i2196
  %824 = add i64 %823, 4
  store i64 %824, i64* %PC.i2196
  %825 = inttoptr i64 %822 to i32*
  %826 = load i32, i32* %825
  %827 = sext i32 %826 to i64
  store i64 %827, i64* %RDI.i2197, align 8
  store %struct.Memory* %loadMem_40ad89, %struct.Memory** %MEMORY
  %loadMem_40ad8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 33
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %PC.i2193 = bitcast %union.anon* %830 to i64*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 9
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %RSI.i2194 = bitcast %union.anon* %833 to i64*
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %835 = getelementptr inbounds %struct.GPR, %struct.GPR* %834, i32 0, i32 11
  %836 = getelementptr inbounds %struct.Reg, %struct.Reg* %835, i32 0, i32 0
  %RDI.i2195 = bitcast %union.anon* %836 to i64*
  %837 = load i64, i64* %RSI.i2194
  %838 = load i64, i64* %RDI.i2195
  %839 = mul i64 %838, 8
  %840 = add i64 %839, %837
  %841 = load i64, i64* %PC.i2193
  %842 = add i64 %841, 4
  store i64 %842, i64* %PC.i2193
  %843 = inttoptr i64 %840 to i64*
  %844 = load i64, i64* %843
  store i64 %844, i64* %RSI.i2194, align 8
  store %struct.Memory* %loadMem_40ad8d, %struct.Memory** %MEMORY
  %loadMem_40ad91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 33
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %PC.i2191 = bitcast %union.anon* %847 to i64*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 9
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %RSI.i2192 = bitcast %union.anon* %850 to i64*
  %851 = load i64, i64* %RSI.i2192
  %852 = add i64 %851, 8
  %853 = load i64, i64* %PC.i2191
  %854 = add i64 %853, 4
  store i64 %854, i64* %PC.i2191
  %855 = inttoptr i64 %852 to i64*
  %856 = load i64, i64* %855
  store i64 %856, i64* %RSI.i2192, align 8
  store %struct.Memory* %loadMem_40ad91, %struct.Memory** %MEMORY
  %loadMem_40ad95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 33
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %PC.i2188 = bitcast %union.anon* %859 to i64*
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %861 = getelementptr inbounds %struct.GPR, %struct.GPR* %860, i32 0, i32 9
  %862 = getelementptr inbounds %struct.Reg, %struct.Reg* %861, i32 0, i32 0
  %RSI.i2189 = bitcast %union.anon* %862 to i64*
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 15
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %RBP.i2190 = bitcast %union.anon* %865 to i64*
  %866 = load i64, i64* %RBP.i2190
  %867 = sub i64 %866, 136
  %868 = load i64, i64* %RSI.i2189
  %869 = load i64, i64* %PC.i2188
  %870 = add i64 %869, 7
  store i64 %870, i64* %PC.i2188
  %871 = inttoptr i64 %867 to i64*
  store i64 %868, i64* %871
  store %struct.Memory* %loadMem_40ad95, %struct.Memory** %MEMORY
  %loadMem_40ad9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 33
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %PC.i2186 = bitcast %union.anon* %874 to i64*
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 9
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %RSI.i2187 = bitcast %union.anon* %877 to i64*
  %878 = load i64, i64* %PC.i2186
  %879 = add i64 %878, 8
  store i64 %879, i64* %PC.i2186
  %880 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %880, i64* %RSI.i2187, align 8
  store %struct.Memory* %loadMem_40ad9c, %struct.Memory** %MEMORY
  %loadMem_40ada4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 33
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %PC.i2183 = bitcast %union.anon* %883 to i64*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 5
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %RCX.i2184 = bitcast %union.anon* %886 to i64*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 9
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %RSI.i2185 = bitcast %union.anon* %889 to i64*
  %890 = load i64, i64* %RSI.i2185
  %891 = add i64 %890, 40
  %892 = load i64, i64* %PC.i2183
  %893 = add i64 %892, 3
  store i64 %893, i64* %PC.i2183
  %894 = inttoptr i64 %891 to i32*
  %895 = load i32, i32* %894
  %896 = zext i32 %895 to i64
  store i64 %896, i64* %RCX.i2184, align 8
  store %struct.Memory* %loadMem_40ada4, %struct.Memory** %MEMORY
  %loadMem_40ada7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 33
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %PC.i2181 = bitcast %union.anon* %899 to i64*
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 9
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %RSI.i2182 = bitcast %union.anon* %902 to i64*
  %903 = load i64, i64* %PC.i2181
  %904 = add i64 %903, 8
  store i64 %904, i64* %PC.i2181
  %905 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %905, i64* %RSI.i2182, align 8
  store %struct.Memory* %loadMem_40ada7, %struct.Memory** %MEMORY
  %loadMem_40adaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %907 = getelementptr inbounds %struct.GPR, %struct.GPR* %906, i32 0, i32 33
  %908 = getelementptr inbounds %struct.Reg, %struct.Reg* %907, i32 0, i32 0
  %PC.i2178 = bitcast %union.anon* %908 to i64*
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %910 = getelementptr inbounds %struct.GPR, %struct.GPR* %909, i32 0, i32 5
  %911 = getelementptr inbounds %struct.Reg, %struct.Reg* %910, i32 0, i32 0
  %RCX.i2179 = bitcast %union.anon* %911 to i64*
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 9
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %RSI.i2180 = bitcast %union.anon* %914 to i64*
  %915 = load i64, i64* %RCX.i2179
  %916 = load i64, i64* %RSI.i2180
  %917 = add i64 %916, 72668
  %918 = load i64, i64* %PC.i2178
  %919 = add i64 %918, 6
  store i64 %919, i64* %PC.i2178
  %920 = trunc i64 %915 to i32
  %921 = inttoptr i64 %917 to i32*
  %922 = load i32, i32* %921
  %923 = add i32 %922, %920
  %924 = zext i32 %923 to i64
  store i64 %924, i64* %RCX.i2179, align 8
  %925 = icmp ult i32 %923, %920
  %926 = icmp ult i32 %923, %922
  %927 = or i1 %925, %926
  %928 = zext i1 %927 to i8
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %928, i8* %929, align 1
  %930 = and i32 %923, 255
  %931 = call i32 @llvm.ctpop.i32(i32 %930)
  %932 = trunc i32 %931 to i8
  %933 = and i8 %932, 1
  %934 = xor i8 %933, 1
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %934, i8* %935, align 1
  %936 = xor i32 %922, %920
  %937 = xor i32 %936, %923
  %938 = lshr i32 %937, 4
  %939 = trunc i32 %938 to i8
  %940 = and i8 %939, 1
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %940, i8* %941, align 1
  %942 = icmp eq i32 %923, 0
  %943 = zext i1 %942 to i8
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %943, i8* %944, align 1
  %945 = lshr i32 %923, 31
  %946 = trunc i32 %945 to i8
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %946, i8* %947, align 1
  %948 = lshr i32 %920, 31
  %949 = lshr i32 %922, 31
  %950 = xor i32 %945, %948
  %951 = xor i32 %945, %949
  %952 = add i32 %950, %951
  %953 = icmp eq i32 %952, 2
  %954 = zext i1 %953 to i8
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %954, i8* %955, align 1
  store %struct.Memory* %loadMem_40adaf, %struct.Memory** %MEMORY
  %loadMem_40adb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 33
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %PC.i2176 = bitcast %union.anon* %958 to i64*
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %960 = getelementptr inbounds %struct.GPR, %struct.GPR* %959, i32 0, i32 5
  %961 = getelementptr inbounds %struct.Reg, %struct.Reg* %960, i32 0, i32 0
  %ECX.i2177 = bitcast %union.anon* %961 to i32*
  %962 = load i32, i32* %ECX.i2177
  %963 = zext i32 %962 to i64
  %964 = load i64, i64* %PC.i2176
  %965 = add i64 %964, 3
  store i64 %965, i64* %PC.i2176
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %966, align 1
  %967 = and i32 %962, 255
  %968 = call i32 @llvm.ctpop.i32(i32 %967)
  %969 = trunc i32 %968 to i8
  %970 = and i8 %969, 1
  %971 = xor i8 %970, 1
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %971, i8* %972, align 1
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %973, align 1
  %974 = icmp eq i32 %962, 0
  %975 = zext i1 %974 to i8
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %975, i8* %976, align 1
  %977 = lshr i32 %962, 31
  %978 = trunc i32 %977 to i8
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %978, i8* %979, align 1
  %980 = lshr i32 %962, 31
  %981 = xor i32 %977, %980
  %982 = add i32 %981, %980
  %983 = icmp eq i32 %982, 2
  %984 = zext i1 %983 to i8
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %984, i8* %985, align 1
  store %struct.Memory* %loadMem_40adb5, %struct.Memory** %MEMORY
  %loadMem_40adb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %987 = getelementptr inbounds %struct.GPR, %struct.GPR* %986, i32 0, i32 33
  %988 = getelementptr inbounds %struct.Reg, %struct.Reg* %987, i32 0, i32 0
  %PC.i2174 = bitcast %union.anon* %988 to i64*
  %989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %990 = getelementptr inbounds %struct.GPR, %struct.GPR* %989, i32 0, i32 7
  %991 = getelementptr inbounds %struct.Reg, %struct.Reg* %990, i32 0, i32 0
  %992 = bitcast %union.anon* %991 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %992, i32 0, i32 0
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 15
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %RBP.i2175 = bitcast %union.anon* %995 to i64*
  %996 = load i64, i64* %RBP.i2175
  %997 = sub i64 %996, 142
  %998 = load i8, i8* %DL.i
  %999 = zext i8 %998 to i64
  %1000 = load i64, i64* %PC.i2174
  %1001 = add i64 %1000, 6
  store i64 %1001, i64* %PC.i2174
  %1002 = inttoptr i64 %997 to i8*
  store i8 %998, i8* %1002
  store %struct.Memory* %loadMem_40adb8, %struct.Memory** %MEMORY
  %loadMem_40adbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1004 = getelementptr inbounds %struct.GPR, %struct.GPR* %1003, i32 0, i32 33
  %1005 = getelementptr inbounds %struct.Reg, %struct.Reg* %1004, i32 0, i32 0
  %PC.i2173 = bitcast %union.anon* %1005 to i64*
  %1006 = load i64, i64* %PC.i2173
  %1007 = add i64 %1006, 30
  %1008 = load i64, i64* %PC.i2173
  %1009 = add i64 %1008, 6
  %1010 = load i64, i64* %PC.i2173
  %1011 = add i64 %1010, 6
  store i64 %1011, i64* %PC.i2173
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1013 = load i8, i8* %1012, align 1
  %1014 = icmp eq i8 %1013, 0
  %1015 = zext i1 %1014 to i8
  store i8 %1015, i8* %BRANCH_TAKEN, align 1
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1017 = select i1 %1014, i64 %1007, i64 %1009
  store i64 %1017, i64* %1016, align 8
  store %struct.Memory* %loadMem_40adbe, %struct.Memory** %MEMORY
  %loadBr_40adbe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40adbe = icmp eq i8 %loadBr_40adbe, 1
  br i1 %cmpBr_40adbe, label %block_.L_40addc, label %block_40adc4

block_40adc4:                                     ; preds = %block_.L_40ad3a
  %loadMem_40adc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 33
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %PC.i2171 = bitcast %union.anon* %1020 to i64*
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 1
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %RAX.i2172 = bitcast %union.anon* %1023 to i64*
  %1024 = load i64, i64* %PC.i2171
  %1025 = add i64 %1024, 8
  store i64 %1025, i64* %PC.i2171
  %1026 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1026, i64* %RAX.i2172, align 8
  store %struct.Memory* %loadMem_40adc4, %struct.Memory** %MEMORY
  %loadMem_40adcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 33
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %PC.i2169 = bitcast %union.anon* %1029 to i64*
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1031 = getelementptr inbounds %struct.GPR, %struct.GPR* %1030, i32 0, i32 1
  %1032 = getelementptr inbounds %struct.Reg, %struct.Reg* %1031, i32 0, i32 0
  %RAX.i2170 = bitcast %union.anon* %1032 to i64*
  %1033 = load i64, i64* %RAX.i2170
  %1034 = add i64 %1033, 72704
  %1035 = load i64, i64* %PC.i2169
  %1036 = add i64 %1035, 7
  store i64 %1036, i64* %PC.i2169
  %1037 = inttoptr i64 %1034 to i32*
  %1038 = load i32, i32* %1037
  %1039 = sub i32 %1038, 1
  %1040 = icmp ult i32 %1038, 1
  %1041 = zext i1 %1040 to i8
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1041, i8* %1042, align 1
  %1043 = and i32 %1039, 255
  %1044 = call i32 @llvm.ctpop.i32(i32 %1043)
  %1045 = trunc i32 %1044 to i8
  %1046 = and i8 %1045, 1
  %1047 = xor i8 %1046, 1
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1047, i8* %1048, align 1
  %1049 = xor i32 %1038, 1
  %1050 = xor i32 %1049, %1039
  %1051 = lshr i32 %1050, 4
  %1052 = trunc i32 %1051 to i8
  %1053 = and i8 %1052, 1
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1053, i8* %1054, align 1
  %1055 = icmp eq i32 %1039, 0
  %1056 = zext i1 %1055 to i8
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1056, i8* %1057, align 1
  %1058 = lshr i32 %1039, 31
  %1059 = trunc i32 %1058 to i8
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1059, i8* %1060, align 1
  %1061 = lshr i32 %1038, 31
  %1062 = xor i32 %1058, %1061
  %1063 = add i32 %1062, %1061
  %1064 = icmp eq i32 %1063, 2
  %1065 = zext i1 %1064 to i8
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1065, i8* %1066, align 1
  store %struct.Memory* %loadMem_40adcc, %struct.Memory** %MEMORY
  %loadMem_40add3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i2167 = bitcast %union.anon* %1069 to i64*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 5
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %1073 = bitcast %union.anon* %1072 to %struct.anon.2*
  %CL.i2168 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1073, i32 0, i32 0
  %1074 = load i64, i64* %PC.i2167
  %1075 = add i64 %1074, 3
  store i64 %1075, i64* %PC.i2167
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1077 = load i8, i8* %1076, align 1
  store i8 %1077, i8* %CL.i2168, align 1
  store %struct.Memory* %loadMem_40add3, %struct.Memory** %MEMORY
  %loadMem_40add6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i2164 = bitcast %union.anon* %1080 to i64*
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1082 = getelementptr inbounds %struct.GPR, %struct.GPR* %1081, i32 0, i32 5
  %1083 = getelementptr inbounds %struct.Reg, %struct.Reg* %1082, i32 0, i32 0
  %1084 = bitcast %union.anon* %1083 to %struct.anon.2*
  %CL.i2165 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1084, i32 0, i32 0
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1086 = getelementptr inbounds %struct.GPR, %struct.GPR* %1085, i32 0, i32 15
  %1087 = getelementptr inbounds %struct.Reg, %struct.Reg* %1086, i32 0, i32 0
  %RBP.i2166 = bitcast %union.anon* %1087 to i64*
  %1088 = load i64, i64* %RBP.i2166
  %1089 = sub i64 %1088, 142
  %1090 = load i8, i8* %CL.i2165
  %1091 = zext i8 %1090 to i64
  %1092 = load i64, i64* %PC.i2164
  %1093 = add i64 %1092, 6
  store i64 %1093, i64* %PC.i2164
  %1094 = inttoptr i64 %1089 to i8*
  store i8 %1090, i8* %1094
  store %struct.Memory* %loadMem_40add6, %struct.Memory** %MEMORY
  br label %block_.L_40addc

block_.L_40addc:                                  ; preds = %block_40adc4, %block_.L_40ad3a
  %loadMem_40addc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 33
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %PC.i2161 = bitcast %union.anon* %1097 to i64*
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 1
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %1101 = bitcast %union.anon* %1100 to %struct.anon.2*
  %AL.i2162 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1101, i32 0, i32 0
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 15
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %RBP.i2163 = bitcast %union.anon* %1104 to i64*
  %1105 = load i64, i64* %RBP.i2163
  %1106 = sub i64 %1105, 142
  %1107 = load i64, i64* %PC.i2161
  %1108 = add i64 %1107, 6
  store i64 %1108, i64* %PC.i2161
  %1109 = inttoptr i64 %1106 to i8*
  %1110 = load i8, i8* %1109
  store i8 %1110, i8* %AL.i2162, align 1
  store %struct.Memory* %loadMem_40addc, %struct.Memory** %MEMORY
  %loadMem_40ade2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 33
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %PC.i2159 = bitcast %union.anon* %1113 to i64*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 1
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %1117 = bitcast %union.anon* %1116 to %struct.anon.2*
  %AL.i2160 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1117, i32 0, i32 0
  %1118 = load i8, i8* %AL.i2160
  %1119 = zext i8 %1118 to i64
  %1120 = load i64, i64* %PC.i2159
  %1121 = add i64 %1120, 2
  store i64 %1121, i64* %PC.i2159
  %1122 = and i64 1, %1119
  %1123 = trunc i64 %1122 to i8
  store i8 %1123, i8* %AL.i2160, align 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1124, align 1
  %1125 = trunc i64 %1122 to i32
  %1126 = and i32 %1125, 255
  %1127 = call i32 @llvm.ctpop.i32(i32 %1126)
  %1128 = trunc i32 %1127 to i8
  %1129 = and i8 %1128, 1
  %1130 = xor i8 %1129, 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1130, i8* %1131, align 1
  %1132 = icmp eq i8 %1123, 0
  %1133 = zext i1 %1132 to i8
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1133, i8* %1134, align 1
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1135, align 1
  %1136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1136, align 1
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1137, align 1
  store %struct.Memory* %loadMem_40ade2, %struct.Memory** %MEMORY
  %loadMem_40ade4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 33
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %PC.i2156 = bitcast %union.anon* %1140 to i64*
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1142 = getelementptr inbounds %struct.GPR, %struct.GPR* %1141, i32 0, i32 1
  %1143 = getelementptr inbounds %struct.Reg, %struct.Reg* %1142, i32 0, i32 0
  %1144 = bitcast %union.anon* %1143 to %struct.anon.2*
  %AL.i2157 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1144, i32 0, i32 0
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 5
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %RCX.i2158 = bitcast %union.anon* %1147 to i64*
  %1148 = load i8, i8* %AL.i2157
  %1149 = zext i8 %1148 to i64
  %1150 = load i64, i64* %PC.i2156
  %1151 = add i64 %1150, 3
  store i64 %1151, i64* %PC.i2156
  %1152 = and i64 %1149, 255
  store i64 %1152, i64* %RCX.i2158, align 8
  store %struct.Memory* %loadMem_40ade4, %struct.Memory** %MEMORY
  %loadMem_40ade7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 33
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %PC.i2153 = bitcast %union.anon* %1155 to i64*
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 5
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %ECX.i2154 = bitcast %union.anon* %1158 to i32*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 15
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %RBP.i2155 = bitcast %union.anon* %1161 to i64*
  %1162 = load i64, i64* %RBP.i2155
  %1163 = sub i64 %1162, 140
  %1164 = load i32, i32* %ECX.i2154
  %1165 = zext i32 %1164 to i64
  %1166 = load i64, i64* %PC.i2153
  %1167 = add i64 %1166, 6
  store i64 %1167, i64* %PC.i2153
  %1168 = inttoptr i64 %1163 to i32*
  store i32 %1164, i32* %1168
  store %struct.Memory* %loadMem_40ade7, %struct.Memory** %MEMORY
  %loadMem_40aded = load %struct.Memory*, %struct.Memory** %MEMORY
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1170 = getelementptr inbounds %struct.GPR, %struct.GPR* %1169, i32 0, i32 33
  %1171 = getelementptr inbounds %struct.Reg, %struct.Reg* %1170, i32 0, i32 0
  %PC.i2150 = bitcast %union.anon* %1171 to i64*
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 7
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %RDX.i2151 = bitcast %union.anon* %1174 to i64*
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 15
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %RBP.i2152 = bitcast %union.anon* %1177 to i64*
  %1178 = load i64, i64* %RBP.i2152
  %1179 = sub i64 %1178, 96
  %1180 = load i64, i64* %PC.i2150
  %1181 = add i64 %1180, 4
  store i64 %1181, i64* %PC.i2150
  %1182 = inttoptr i64 %1179 to i64*
  %1183 = load i64, i64* %1182
  store i64 %1183, i64* %RDX.i2151, align 8
  store %struct.Memory* %loadMem_40aded, %struct.Memory** %MEMORY
  %loadMem_40adf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1185 = getelementptr inbounds %struct.GPR, %struct.GPR* %1184, i32 0, i32 33
  %1186 = getelementptr inbounds %struct.Reg, %struct.Reg* %1185, i32 0, i32 0
  %PC.i2147 = bitcast %union.anon* %1186 to i64*
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1188 = getelementptr inbounds %struct.GPR, %struct.GPR* %1187, i32 0, i32 5
  %1189 = getelementptr inbounds %struct.Reg, %struct.Reg* %1188, i32 0, i32 0
  %RCX.i2148 = bitcast %union.anon* %1189 to i64*
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1191 = getelementptr inbounds %struct.GPR, %struct.GPR* %1190, i32 0, i32 7
  %1192 = getelementptr inbounds %struct.Reg, %struct.Reg* %1191, i32 0, i32 0
  %RDX.i2149 = bitcast %union.anon* %1192 to i64*
  %1193 = load i64, i64* %RDX.i2149
  %1194 = add i64 %1193, 12
  %1195 = load i64, i64* %PC.i2147
  %1196 = add i64 %1195, 3
  store i64 %1196, i64* %PC.i2147
  %1197 = inttoptr i64 %1194 to i32*
  %1198 = load i32, i32* %1197
  %1199 = zext i32 %1198 to i64
  store i64 %1199, i64* %RCX.i2148, align 8
  store %struct.Memory* %loadMem_40adf1, %struct.Memory** %MEMORY
  %loadMem_40adf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1201 = getelementptr inbounds %struct.GPR, %struct.GPR* %1200, i32 0, i32 33
  %1202 = getelementptr inbounds %struct.Reg, %struct.Reg* %1201, i32 0, i32 0
  %PC.i2145 = bitcast %union.anon* %1202 to i64*
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1204 = getelementptr inbounds %struct.GPR, %struct.GPR* %1203, i32 0, i32 7
  %1205 = getelementptr inbounds %struct.Reg, %struct.Reg* %1204, i32 0, i32 0
  %RDX.i2146 = bitcast %union.anon* %1205 to i64*
  %1206 = load i64, i64* %PC.i2145
  %1207 = add i64 %1206, 8
  store i64 %1207, i64* %PC.i2145
  %1208 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1208, i64* %RDX.i2146, align 8
  store %struct.Memory* %loadMem_40adf4, %struct.Memory** %MEMORY
  %loadMem_40adfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 33
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %PC.i2142 = bitcast %union.anon* %1211 to i64*
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1213 = getelementptr inbounds %struct.GPR, %struct.GPR* %1212, i32 0, i32 9
  %1214 = getelementptr inbounds %struct.Reg, %struct.Reg* %1213, i32 0, i32 0
  %RSI.i2143 = bitcast %union.anon* %1214 to i64*
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1216 = getelementptr inbounds %struct.GPR, %struct.GPR* %1215, i32 0, i32 15
  %1217 = getelementptr inbounds %struct.Reg, %struct.Reg* %1216, i32 0, i32 0
  %RBP.i2144 = bitcast %union.anon* %1217 to i64*
  %1218 = load i64, i64* %RBP.i2144
  %1219 = sub i64 %1218, 4
  %1220 = load i64, i64* %PC.i2142
  %1221 = add i64 %1220, 4
  store i64 %1221, i64* %PC.i2142
  %1222 = inttoptr i64 %1219 to i32*
  %1223 = load i32, i32* %1222
  %1224 = sext i32 %1223 to i64
  store i64 %1224, i64* %RSI.i2143, align 8
  store %struct.Memory* %loadMem_40adfc, %struct.Memory** %MEMORY
  %loadMem_40ae00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 33
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %PC.i2138 = bitcast %union.anon* %1227 to i64*
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 5
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %RCX.i2139 = bitcast %union.anon* %1230 to i64*
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 7
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %RDX.i2140 = bitcast %union.anon* %1233 to i64*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 9
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %RSI.i2141 = bitcast %union.anon* %1236 to i64*
  %1237 = load i64, i64* %RCX.i2139
  %1238 = load i64, i64* %RDX.i2140
  %1239 = load i64, i64* %RSI.i2141
  %1240 = mul i64 %1239, 4
  %1241 = add i64 %1238, 72716
  %1242 = add i64 %1241, %1240
  %1243 = load i64, i64* %PC.i2138
  %1244 = add i64 %1243, 7
  store i64 %1244, i64* %PC.i2138
  %1245 = trunc i64 %1237 to i32
  %1246 = inttoptr i64 %1242 to i32*
  %1247 = load i32, i32* %1246
  %1248 = add i32 %1247, %1245
  %1249 = zext i32 %1248 to i64
  store i64 %1249, i64* %RCX.i2139, align 8
  %1250 = icmp ult i32 %1248, %1245
  %1251 = icmp ult i32 %1248, %1247
  %1252 = or i1 %1250, %1251
  %1253 = zext i1 %1252 to i8
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1253, i8* %1254, align 1
  %1255 = and i32 %1248, 255
  %1256 = call i32 @llvm.ctpop.i32(i32 %1255)
  %1257 = trunc i32 %1256 to i8
  %1258 = and i8 %1257, 1
  %1259 = xor i8 %1258, 1
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1259, i8* %1260, align 1
  %1261 = xor i32 %1247, %1245
  %1262 = xor i32 %1261, %1248
  %1263 = lshr i32 %1262, 4
  %1264 = trunc i32 %1263 to i8
  %1265 = and i8 %1264, 1
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1265, i8* %1266, align 1
  %1267 = icmp eq i32 %1248, 0
  %1268 = zext i1 %1267 to i8
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1268, i8* %1269, align 1
  %1270 = lshr i32 %1248, 31
  %1271 = trunc i32 %1270 to i8
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1271, i8* %1272, align 1
  %1273 = lshr i32 %1245, 31
  %1274 = lshr i32 %1247, 31
  %1275 = xor i32 %1270, %1273
  %1276 = xor i32 %1270, %1274
  %1277 = add i32 %1275, %1276
  %1278 = icmp eq i32 %1277, 2
  %1279 = zext i1 %1278 to i8
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1279, i8* %1280, align 1
  store %struct.Memory* %loadMem_40ae00, %struct.Memory** %MEMORY
  %loadMem_40ae07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1282 = getelementptr inbounds %struct.GPR, %struct.GPR* %1281, i32 0, i32 33
  %1283 = getelementptr inbounds %struct.Reg, %struct.Reg* %1282, i32 0, i32 0
  %PC.i2135 = bitcast %union.anon* %1283 to i64*
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 5
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %ECX.i2136 = bitcast %union.anon* %1286 to i32*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 15
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %RBP.i2137 = bitcast %union.anon* %1289 to i64*
  %1290 = load i64, i64* %RBP.i2137
  %1291 = sub i64 %1290, 116
  %1292 = load i32, i32* %ECX.i2136
  %1293 = zext i32 %1292 to i64
  %1294 = load i64, i64* %PC.i2135
  %1295 = add i64 %1294, 3
  store i64 %1295, i64* %PC.i2135
  %1296 = inttoptr i64 %1291 to i32*
  store i32 %1292, i32* %1296
  store %struct.Memory* %loadMem_40ae07, %struct.Memory** %MEMORY
  %loadMem_40ae0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 33
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %PC.i2133 = bitcast %union.anon* %1299 to i64*
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1301 = getelementptr inbounds %struct.GPR, %struct.GPR* %1300, i32 0, i32 15
  %1302 = getelementptr inbounds %struct.Reg, %struct.Reg* %1301, i32 0, i32 0
  %RBP.i2134 = bitcast %union.anon* %1302 to i64*
  %1303 = load i64, i64* %RBP.i2134
  %1304 = sub i64 %1303, 116
  %1305 = load i64, i64* %PC.i2133
  %1306 = add i64 %1305, 4
  store i64 %1306, i64* %PC.i2133
  %1307 = inttoptr i64 %1304 to i32*
  %1308 = load i32, i32* %1307
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1309, align 1
  %1310 = and i32 %1308, 255
  %1311 = call i32 @llvm.ctpop.i32(i32 %1310)
  %1312 = trunc i32 %1311 to i8
  %1313 = and i8 %1312, 1
  %1314 = xor i8 %1313, 1
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1314, i8* %1315, align 1
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1316, align 1
  %1317 = icmp eq i32 %1308, 0
  %1318 = zext i1 %1317 to i8
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1318, i8* %1319, align 1
  %1320 = lshr i32 %1308, 31
  %1321 = trunc i32 %1320 to i8
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1321, i8* %1322, align 1
  %1323 = lshr i32 %1308, 31
  %1324 = xor i32 %1320, %1323
  %1325 = add i32 %1324, %1323
  %1326 = icmp eq i32 %1325, 2
  %1327 = zext i1 %1326 to i8
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1327, i8* %1328, align 1
  store %struct.Memory* %loadMem_40ae0a, %struct.Memory** %MEMORY
  %loadMem_40ae0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1330 = getelementptr inbounds %struct.GPR, %struct.GPR* %1329, i32 0, i32 33
  %1331 = getelementptr inbounds %struct.Reg, %struct.Reg* %1330, i32 0, i32 0
  %PC.i2132 = bitcast %union.anon* %1331 to i64*
  %1332 = load i64, i64* %PC.i2132
  %1333 = add i64 %1332, 20
  %1334 = load i64, i64* %PC.i2132
  %1335 = add i64 %1334, 6
  %1336 = load i64, i64* %PC.i2132
  %1337 = add i64 %1336, 6
  store i64 %1337, i64* %PC.i2132
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1339 = load i8, i8* %1338, align 1
  %1340 = icmp ne i8 %1339, 0
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1342 = load i8, i8* %1341, align 1
  %1343 = icmp ne i8 %1342, 0
  %1344 = xor i1 %1340, %1343
  %1345 = xor i1 %1344, true
  %1346 = zext i1 %1345 to i8
  store i8 %1346, i8* %BRANCH_TAKEN, align 1
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1348 = select i1 %1344, i64 %1335, i64 %1333
  store i64 %1348, i64* %1347, align 8
  store %struct.Memory* %loadMem_40ae0e, %struct.Memory** %MEMORY
  %loadBr_40ae0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ae0e = icmp eq i8 %loadBr_40ae0e, 1
  br i1 %cmpBr_40ae0e, label %block_.L_40ae22, label %block_40ae14

block_40ae14:                                     ; preds = %block_.L_40addc
  %loadMem_40ae14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 33
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %PC.i2129 = bitcast %union.anon* %1351 to i64*
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 1
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %RAX.i2130 = bitcast %union.anon* %1354 to i64*
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1356 = getelementptr inbounds %struct.GPR, %struct.GPR* %1355, i32 0, i32 15
  %1357 = getelementptr inbounds %struct.Reg, %struct.Reg* %1356, i32 0, i32 0
  %RBP.i2131 = bitcast %union.anon* %1357 to i64*
  %1358 = load i64, i64* %RBP.i2131
  %1359 = sub i64 %1358, 116
  %1360 = load i64, i64* %PC.i2129
  %1361 = add i64 %1360, 3
  store i64 %1361, i64* %PC.i2129
  %1362 = inttoptr i64 %1359 to i32*
  %1363 = load i32, i32* %1362
  %1364 = zext i32 %1363 to i64
  store i64 %1364, i64* %RAX.i2130, align 8
  store %struct.Memory* %loadMem_40ae14, %struct.Memory** %MEMORY
  %loadMem_40ae17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 33
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %PC.i2126 = bitcast %union.anon* %1367 to i64*
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 1
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %EAX.i2127 = bitcast %union.anon* %1370 to i32*
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 15
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %RBP.i2128 = bitcast %union.anon* %1373 to i64*
  %1374 = load i64, i64* %RBP.i2128
  %1375 = sub i64 %1374, 148
  %1376 = load i32, i32* %EAX.i2127
  %1377 = zext i32 %1376 to i64
  %1378 = load i64, i64* %PC.i2126
  %1379 = add i64 %1378, 6
  store i64 %1379, i64* %PC.i2126
  %1380 = inttoptr i64 %1375 to i32*
  store i32 %1376, i32* %1380
  store %struct.Memory* %loadMem_40ae17, %struct.Memory** %MEMORY
  %loadMem_40ae1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 33
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %PC.i2125 = bitcast %union.anon* %1383 to i64*
  %1384 = load i64, i64* %PC.i2125
  %1385 = add i64 %1384, 28
  %1386 = load i64, i64* %PC.i2125
  %1387 = add i64 %1386, 5
  store i64 %1387, i64* %PC.i2125
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1385, i64* %1388, align 8
  store %struct.Memory* %loadMem_40ae1d, %struct.Memory** %MEMORY
  br label %block_.L_40ae39

block_.L_40ae22:                                  ; preds = %block_.L_40addc
  %loadMem_40ae22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 33
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %PC.i2122 = bitcast %union.anon* %1391 to i64*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 1
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %RAX.i2123 = bitcast %union.anon* %1394 to i64*
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 15
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %RBP.i2124 = bitcast %union.anon* %1397 to i64*
  %1398 = load i64, i64* %RBP.i2124
  %1399 = sub i64 %1398, 116
  %1400 = load i64, i64* %PC.i2122
  %1401 = add i64 %1400, 3
  store i64 %1401, i64* %PC.i2122
  %1402 = inttoptr i64 %1399 to i32*
  %1403 = load i32, i32* %1402
  %1404 = zext i32 %1403 to i64
  store i64 %1404, i64* %RAX.i2123, align 8
  store %struct.Memory* %loadMem_40ae22, %struct.Memory** %MEMORY
  %loadMem_40ae25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 33
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %PC.i2120 = bitcast %union.anon* %1407 to i64*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 1
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %RAX.i2121 = bitcast %union.anon* %1410 to i64*
  %1411 = load i64, i64* %RAX.i2121
  %1412 = load i64, i64* %PC.i2120
  %1413 = add i64 %1412, 3
  store i64 %1413, i64* %PC.i2120
  %1414 = trunc i64 %1411 to i32
  %1415 = zext i32 %1414 to i64
  store i64 %1415, i64* %RAX.i2121, align 8
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1416, align 1
  %1417 = and i32 %1414, 255
  %1418 = call i32 @llvm.ctpop.i32(i32 %1417)
  %1419 = trunc i32 %1418 to i8
  %1420 = and i8 %1419, 1
  %1421 = xor i8 %1420, 1
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1421, i8* %1422, align 1
  %1423 = trunc i64 %1411 to i32
  %1424 = xor i32 %1423, %1414
  %1425 = lshr i32 %1424, 4
  %1426 = trunc i32 %1425 to i8
  %1427 = and i8 %1426, 1
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1427, i8* %1428, align 1
  %1429 = icmp eq i32 %1414, 0
  %1430 = zext i1 %1429 to i8
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1430, i8* %1431, align 1
  %1432 = lshr i32 %1414, 31
  %1433 = trunc i32 %1432 to i8
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1433, i8* %1434, align 1
  %1435 = lshr i32 %1414, 31
  %1436 = xor i32 %1432, %1435
  %1437 = add i32 %1436, %1435
  %1438 = icmp eq i32 %1437, 2
  %1439 = zext i1 %1438 to i8
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1439, i8* %1440, align 1
  store %struct.Memory* %loadMem_40ae25, %struct.Memory** %MEMORY
  %loadMem_40ae28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1442 = getelementptr inbounds %struct.GPR, %struct.GPR* %1441, i32 0, i32 33
  %1443 = getelementptr inbounds %struct.Reg, %struct.Reg* %1442, i32 0, i32 0
  %PC.i2117 = bitcast %union.anon* %1443 to i64*
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1445 = getelementptr inbounds %struct.GPR, %struct.GPR* %1444, i32 0, i32 1
  %1446 = getelementptr inbounds %struct.Reg, %struct.Reg* %1445, i32 0, i32 0
  %EAX.i2118 = bitcast %union.anon* %1446 to i32*
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1448 = getelementptr inbounds %struct.GPR, %struct.GPR* %1447, i32 0, i32 5
  %1449 = getelementptr inbounds %struct.Reg, %struct.Reg* %1448, i32 0, i32 0
  %RCX.i2119 = bitcast %union.anon* %1449 to i64*
  %1450 = load i32, i32* %EAX.i2118
  %1451 = zext i32 %1450 to i64
  %1452 = load i64, i64* %PC.i2117
  %1453 = add i64 %1452, 3
  store i64 %1453, i64* %PC.i2117
  %1454 = shl i64 %1451, 32
  %1455 = ashr exact i64 %1454, 32
  store i64 %1455, i64* %RCX.i2119, align 8
  store %struct.Memory* %loadMem_40ae28, %struct.Memory** %MEMORY
  %loadMem_40ae2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1457 = getelementptr inbounds %struct.GPR, %struct.GPR* %1456, i32 0, i32 33
  %1458 = getelementptr inbounds %struct.Reg, %struct.Reg* %1457, i32 0, i32 0
  %PC.i2114 = bitcast %union.anon* %1458 to i64*
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1460 = getelementptr inbounds %struct.GPR, %struct.GPR* %1459, i32 0, i32 1
  %1461 = getelementptr inbounds %struct.Reg, %struct.Reg* %1460, i32 0, i32 0
  %RAX.i2115 = bitcast %union.anon* %1461 to i64*
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1463 = getelementptr inbounds %struct.GPR, %struct.GPR* %1462, i32 0, i32 5
  %1464 = getelementptr inbounds %struct.Reg, %struct.Reg* %1463, i32 0, i32 0
  %RCX.i2116 = bitcast %union.anon* %1464 to i64*
  %1465 = load i64, i64* %RCX.i2116
  %1466 = add i64 %1465, 4924192
  %1467 = load i64, i64* %PC.i2114
  %1468 = add i64 %1467, 8
  store i64 %1468, i64* %PC.i2114
  %1469 = inttoptr i64 %1466 to i8*
  %1470 = load i8, i8* %1469
  %1471 = zext i8 %1470 to i64
  store i64 %1471, i64* %RAX.i2115, align 8
  store %struct.Memory* %loadMem_40ae2b, %struct.Memory** %MEMORY
  %loadMem_40ae33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1473 = getelementptr inbounds %struct.GPR, %struct.GPR* %1472, i32 0, i32 33
  %1474 = getelementptr inbounds %struct.Reg, %struct.Reg* %1473, i32 0, i32 0
  %PC.i2111 = bitcast %union.anon* %1474 to i64*
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 1
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %EAX.i2112 = bitcast %union.anon* %1477 to i32*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 15
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %RBP.i2113 = bitcast %union.anon* %1480 to i64*
  %1481 = load i64, i64* %RBP.i2113
  %1482 = sub i64 %1481, 148
  %1483 = load i32, i32* %EAX.i2112
  %1484 = zext i32 %1483 to i64
  %1485 = load i64, i64* %PC.i2111
  %1486 = add i64 %1485, 6
  store i64 %1486, i64* %PC.i2111
  %1487 = inttoptr i64 %1482 to i32*
  store i32 %1483, i32* %1487
  store %struct.Memory* %loadMem_40ae33, %struct.Memory** %MEMORY
  br label %block_.L_40ae39

block_.L_40ae39:                                  ; preds = %block_.L_40ae22, %block_40ae14
  %loadMem_40ae39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 33
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %PC.i2108 = bitcast %union.anon* %1490 to i64*
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 1
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %RAX.i2109 = bitcast %union.anon* %1493 to i64*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 15
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %RBP.i2110 = bitcast %union.anon* %1496 to i64*
  %1497 = load i64, i64* %RBP.i2110
  %1498 = sub i64 %1497, 148
  %1499 = load i64, i64* %PC.i2108
  %1500 = add i64 %1499, 6
  store i64 %1500, i64* %PC.i2108
  %1501 = inttoptr i64 %1498 to i32*
  %1502 = load i32, i32* %1501
  %1503 = zext i32 %1502 to i64
  store i64 %1503, i64* %RAX.i2109, align 8
  store %struct.Memory* %loadMem_40ae39, %struct.Memory** %MEMORY
  %loadMem_40ae3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1505 = getelementptr inbounds %struct.GPR, %struct.GPR* %1504, i32 0, i32 33
  %1506 = getelementptr inbounds %struct.Reg, %struct.Reg* %1505, i32 0, i32 0
  %PC.i2106 = bitcast %union.anon* %1506 to i64*
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1508 = getelementptr inbounds %struct.GPR, %struct.GPR* %1507, i32 0, i32 5
  %1509 = getelementptr inbounds %struct.Reg, %struct.Reg* %1508, i32 0, i32 0
  %RCX.i2107 = bitcast %union.anon* %1509 to i64*
  %1510 = load i64, i64* %PC.i2106
  %1511 = add i64 %1510, 5
  store i64 %1511, i64* %PC.i2106
  store i64 6, i64* %RCX.i2107, align 8
  store %struct.Memory* %loadMem_40ae3f, %struct.Memory** %MEMORY
  %loadMem_40ae44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1513 = getelementptr inbounds %struct.GPR, %struct.GPR* %1512, i32 0, i32 33
  %1514 = getelementptr inbounds %struct.Reg, %struct.Reg* %1513, i32 0, i32 0
  %PC.i2103 = bitcast %union.anon* %1514 to i64*
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1516 = getelementptr inbounds %struct.GPR, %struct.GPR* %1515, i32 0, i32 1
  %1517 = getelementptr inbounds %struct.Reg, %struct.Reg* %1516, i32 0, i32 0
  %EAX.i2104 = bitcast %union.anon* %1517 to i32*
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 15
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %RBP.i2105 = bitcast %union.anon* %1520 to i64*
  %1521 = load i64, i64* %RBP.i2105
  %1522 = sub i64 %1521, 116
  %1523 = load i32, i32* %EAX.i2104
  %1524 = zext i32 %1523 to i64
  %1525 = load i64, i64* %PC.i2103
  %1526 = add i64 %1525, 3
  store i64 %1526, i64* %PC.i2103
  %1527 = inttoptr i64 %1522 to i32*
  store i32 %1523, i32* %1527
  store %struct.Memory* %loadMem_40ae44, %struct.Memory** %MEMORY
  %loadMem_40ae47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 33
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %PC.i2100 = bitcast %union.anon* %1530 to i64*
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1532 = getelementptr inbounds %struct.GPR, %struct.GPR* %1531, i32 0, i32 1
  %1533 = getelementptr inbounds %struct.Reg, %struct.Reg* %1532, i32 0, i32 0
  %RAX.i2101 = bitcast %union.anon* %1533 to i64*
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1535 = getelementptr inbounds %struct.GPR, %struct.GPR* %1534, i32 0, i32 15
  %1536 = getelementptr inbounds %struct.Reg, %struct.Reg* %1535, i32 0, i32 0
  %RBP.i2102 = bitcast %union.anon* %1536 to i64*
  %1537 = load i64, i64* %RBP.i2102
  %1538 = sub i64 %1537, 116
  %1539 = load i64, i64* %PC.i2100
  %1540 = add i64 %1539, 3
  store i64 %1540, i64* %PC.i2100
  %1541 = inttoptr i64 %1538 to i32*
  %1542 = load i32, i32* %1541
  %1543 = zext i32 %1542 to i64
  store i64 %1543, i64* %RAX.i2101, align 8
  store %struct.Memory* %loadMem_40ae47, %struct.Memory** %MEMORY
  %loadMem_40ae4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1545 = getelementptr inbounds %struct.GPR, %struct.GPR* %1544, i32 0, i32 33
  %1546 = getelementptr inbounds %struct.Reg, %struct.Reg* %1545, i32 0, i32 0
  %PC.i2098 = bitcast %union.anon* %1546 to i64*
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1548 = getelementptr inbounds %struct.GPR, %struct.GPR* %1547, i32 0, i32 7
  %1549 = getelementptr inbounds %struct.Reg, %struct.Reg* %1548, i32 0, i32 0
  %RDX.i2099 = bitcast %union.anon* %1549 to i64*
  %1550 = load i64, i64* %PC.i2098
  %1551 = add i64 %1550, 8
  store i64 %1551, i64* %PC.i2098
  %1552 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1552, i64* %RDX.i2099, align 8
  store %struct.Memory* %loadMem_40ae4a, %struct.Memory** %MEMORY
  %loadMem_40ae52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1554 = getelementptr inbounds %struct.GPR, %struct.GPR* %1553, i32 0, i32 33
  %1555 = getelementptr inbounds %struct.Reg, %struct.Reg* %1554, i32 0, i32 0
  %PC.i2095 = bitcast %union.anon* %1555 to i64*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 1
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %RAX.i2096 = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1560 = getelementptr inbounds %struct.GPR, %struct.GPR* %1559, i32 0, i32 7
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %RDX.i2097 = bitcast %union.anon* %1561 to i64*
  %1562 = load i64, i64* %RAX.i2096
  %1563 = load i64, i64* %RDX.i2097
  %1564 = add i64 %1563, 72672
  %1565 = load i64, i64* %PC.i2095
  %1566 = add i64 %1565, 6
  store i64 %1566, i64* %PC.i2095
  %1567 = trunc i64 %1562 to i32
  %1568 = inttoptr i64 %1564 to i32*
  %1569 = load i32, i32* %1568
  %1570 = add i32 %1569, %1567
  %1571 = zext i32 %1570 to i64
  store i64 %1571, i64* %RAX.i2096, align 8
  %1572 = icmp ult i32 %1570, %1567
  %1573 = icmp ult i32 %1570, %1569
  %1574 = or i1 %1572, %1573
  %1575 = zext i1 %1574 to i8
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1575, i8* %1576, align 1
  %1577 = and i32 %1570, 255
  %1578 = call i32 @llvm.ctpop.i32(i32 %1577)
  %1579 = trunc i32 %1578 to i8
  %1580 = and i8 %1579, 1
  %1581 = xor i8 %1580, 1
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1581, i8* %1582, align 1
  %1583 = xor i32 %1569, %1567
  %1584 = xor i32 %1583, %1570
  %1585 = lshr i32 %1584, 4
  %1586 = trunc i32 %1585 to i8
  %1587 = and i8 %1586, 1
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1587, i8* %1588, align 1
  %1589 = icmp eq i32 %1570, 0
  %1590 = zext i1 %1589 to i8
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1590, i8* %1591, align 1
  %1592 = lshr i32 %1570, 31
  %1593 = trunc i32 %1592 to i8
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1593, i8* %1594, align 1
  %1595 = lshr i32 %1567, 31
  %1596 = lshr i32 %1569, 31
  %1597 = xor i32 %1592, %1595
  %1598 = xor i32 %1592, %1596
  %1599 = add i32 %1597, %1598
  %1600 = icmp eq i32 %1599, 2
  %1601 = zext i1 %1600 to i8
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1601, i8* %1602, align 1
  store %struct.Memory* %loadMem_40ae52, %struct.Memory** %MEMORY
  %loadMem_40ae58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1604 = getelementptr inbounds %struct.GPR, %struct.GPR* %1603, i32 0, i32 33
  %1605 = getelementptr inbounds %struct.Reg, %struct.Reg* %1604, i32 0, i32 0
  %PC.i2094 = bitcast %union.anon* %1605 to i64*
  %1606 = load i64, i64* %PC.i2094
  %1607 = add i64 %1606, 1
  store i64 %1607, i64* %PC.i2094
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1610 = bitcast %union.anon* %1609 to i32*
  %1611 = load i32, i32* %1610, align 8
  %1612 = sext i32 %1611 to i64
  %1613 = lshr i64 %1612, 32
  store i64 %1613, i64* %1608, align 8
  store %struct.Memory* %loadMem_40ae58, %struct.Memory** %MEMORY
  %loadMem_40ae59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 33
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %PC.i2088 = bitcast %union.anon* %1616 to i64*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 5
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %ECX.i2089 = bitcast %union.anon* %1619 to i32*
  %1620 = load i32, i32* %ECX.i2089
  %1621 = zext i32 %1620 to i64
  %1622 = load i64, i64* %PC.i2088
  %1623 = add i64 %1622, 2
  store i64 %1623, i64* %PC.i2088
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1625 = bitcast %union.anon* %1624 to i32*
  %1626 = load i32, i32* %1625, align 8
  %1627 = zext i32 %1626 to i64
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1629 = bitcast %union.anon* %1628 to i32*
  %1630 = load i32, i32* %1629, align 8
  %1631 = zext i32 %1630 to i64
  %1632 = shl i64 %1621, 32
  %1633 = ashr exact i64 %1632, 32
  %1634 = shl i64 %1631, 32
  %1635 = or i64 %1634, %1627
  %1636 = sdiv i64 %1635, %1633
  %1637 = shl i64 %1636, 32
  %1638 = ashr exact i64 %1637, 32
  %1639 = icmp eq i64 %1636, %1638
  br i1 %1639, label %1644, label %1640

; <label>:1640:                                   ; preds = %block_.L_40ae39
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1642 = load i64, i64* %1641, align 8
  %1643 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1642, %struct.Memory* %loadMem_40ae59)
  br label %routine_idivl__ecx.exit2090

; <label>:1644:                                   ; preds = %block_.L_40ae39
  %1645 = srem i64 %1635, %1633
  %1646 = getelementptr inbounds %union.anon, %union.anon* %1624, i64 0, i32 0
  %1647 = and i64 %1636, 4294967295
  store i64 %1647, i64* %1646, align 8
  %1648 = getelementptr inbounds %union.anon, %union.anon* %1628, i64 0, i32 0
  %1649 = and i64 %1645, 4294967295
  store i64 %1649, i64* %1648, align 8
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1650, align 1
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1651, align 1
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1652, align 1
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1653, align 1
  %1654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1654, align 1
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1655, align 1
  br label %routine_idivl__ecx.exit2090

routine_idivl__ecx.exit2090:                      ; preds = %1640, %1644
  %1656 = phi %struct.Memory* [ %1643, %1640 ], [ %loadMem_40ae59, %1644 ]
  store %struct.Memory* %1656, %struct.Memory** %MEMORY
  %loadMem_40ae5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1658 = getelementptr inbounds %struct.GPR, %struct.GPR* %1657, i32 0, i32 33
  %1659 = getelementptr inbounds %struct.Reg, %struct.Reg* %1658, i32 0, i32 0
  %PC.i2085 = bitcast %union.anon* %1659 to i64*
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1661 = getelementptr inbounds %struct.GPR, %struct.GPR* %1660, i32 0, i32 1
  %1662 = getelementptr inbounds %struct.Reg, %struct.Reg* %1661, i32 0, i32 0
  %EAX.i2086 = bitcast %union.anon* %1662 to i32*
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1664 = getelementptr inbounds %struct.GPR, %struct.GPR* %1663, i32 0, i32 15
  %1665 = getelementptr inbounds %struct.Reg, %struct.Reg* %1664, i32 0, i32 0
  %RBP.i2087 = bitcast %union.anon* %1665 to i64*
  %1666 = load i64, i64* %RBP.i2087
  %1667 = sub i64 %1666, 104
  %1668 = load i32, i32* %EAX.i2086
  %1669 = zext i32 %1668 to i64
  %1670 = load i64, i64* %PC.i2085
  %1671 = add i64 %1670, 3
  store i64 %1671, i64* %PC.i2085
  %1672 = inttoptr i64 %1667 to i32*
  store i32 %1668, i32* %1672
  store %struct.Memory* %loadMem_40ae5b, %struct.Memory** %MEMORY
  %loadMem_40ae5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1674 = getelementptr inbounds %struct.GPR, %struct.GPR* %1673, i32 0, i32 33
  %1675 = getelementptr inbounds %struct.Reg, %struct.Reg* %1674, i32 0, i32 0
  %PC.i2082 = bitcast %union.anon* %1675 to i64*
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1677 = getelementptr inbounds %struct.GPR, %struct.GPR* %1676, i32 0, i32 1
  %1678 = getelementptr inbounds %struct.Reg, %struct.Reg* %1677, i32 0, i32 0
  %RAX.i2083 = bitcast %union.anon* %1678 to i64*
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1680 = getelementptr inbounds %struct.GPR, %struct.GPR* %1679, i32 0, i32 15
  %1681 = getelementptr inbounds %struct.Reg, %struct.Reg* %1680, i32 0, i32 0
  %RBP.i2084 = bitcast %union.anon* %1681 to i64*
  %1682 = load i64, i64* %RBP.i2084
  %1683 = sub i64 %1682, 116
  %1684 = load i64, i64* %PC.i2082
  %1685 = add i64 %1684, 3
  store i64 %1685, i64* %PC.i2082
  %1686 = inttoptr i64 %1683 to i32*
  %1687 = load i32, i32* %1686
  %1688 = zext i32 %1687 to i64
  store i64 %1688, i64* %RAX.i2083, align 8
  store %struct.Memory* %loadMem_40ae5e, %struct.Memory** %MEMORY
  %loadMem_40ae61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1690 = getelementptr inbounds %struct.GPR, %struct.GPR* %1689, i32 0, i32 33
  %1691 = getelementptr inbounds %struct.Reg, %struct.Reg* %1690, i32 0, i32 0
  %PC.i2080 = bitcast %union.anon* %1691 to i64*
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1693 = getelementptr inbounds %struct.GPR, %struct.GPR* %1692, i32 0, i32 9
  %1694 = getelementptr inbounds %struct.Reg, %struct.Reg* %1693, i32 0, i32 0
  %RSI.i2081 = bitcast %union.anon* %1694 to i64*
  %1695 = load i64, i64* %PC.i2080
  %1696 = add i64 %1695, 8
  store i64 %1696, i64* %PC.i2080
  %1697 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1697, i64* %RSI.i2081, align 8
  store %struct.Memory* %loadMem_40ae61, %struct.Memory** %MEMORY
  %loadMem_40ae69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1699 = getelementptr inbounds %struct.GPR, %struct.GPR* %1698, i32 0, i32 33
  %1700 = getelementptr inbounds %struct.Reg, %struct.Reg* %1699, i32 0, i32 0
  %PC.i2077 = bitcast %union.anon* %1700 to i64*
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 1
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %RAX.i2078 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 9
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %RSI.i2079 = bitcast %union.anon* %1706 to i64*
  %1707 = load i64, i64* %RAX.i2078
  %1708 = load i64, i64* %RSI.i2079
  %1709 = add i64 %1708, 72672
  %1710 = load i64, i64* %PC.i2077
  %1711 = add i64 %1710, 6
  store i64 %1711, i64* %PC.i2077
  %1712 = trunc i64 %1707 to i32
  %1713 = inttoptr i64 %1709 to i32*
  %1714 = load i32, i32* %1713
  %1715 = add i32 %1714, %1712
  %1716 = zext i32 %1715 to i64
  store i64 %1716, i64* %RAX.i2078, align 8
  %1717 = icmp ult i32 %1715, %1712
  %1718 = icmp ult i32 %1715, %1714
  %1719 = or i1 %1717, %1718
  %1720 = zext i1 %1719 to i8
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1720, i8* %1721, align 1
  %1722 = and i32 %1715, 255
  %1723 = call i32 @llvm.ctpop.i32(i32 %1722)
  %1724 = trunc i32 %1723 to i8
  %1725 = and i8 %1724, 1
  %1726 = xor i8 %1725, 1
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1726, i8* %1727, align 1
  %1728 = xor i32 %1714, %1712
  %1729 = xor i32 %1728, %1715
  %1730 = lshr i32 %1729, 4
  %1731 = trunc i32 %1730 to i8
  %1732 = and i8 %1731, 1
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1732, i8* %1733, align 1
  %1734 = icmp eq i32 %1715, 0
  %1735 = zext i1 %1734 to i8
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1735, i8* %1736, align 1
  %1737 = lshr i32 %1715, 31
  %1738 = trunc i32 %1737 to i8
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1738, i8* %1739, align 1
  %1740 = lshr i32 %1712, 31
  %1741 = lshr i32 %1714, 31
  %1742 = xor i32 %1737, %1740
  %1743 = xor i32 %1737, %1741
  %1744 = add i32 %1742, %1743
  %1745 = icmp eq i32 %1744, 2
  %1746 = zext i1 %1745 to i8
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1746, i8* %1747, align 1
  store %struct.Memory* %loadMem_40ae69, %struct.Memory** %MEMORY
  %loadMem_40ae6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1749 = getelementptr inbounds %struct.GPR, %struct.GPR* %1748, i32 0, i32 33
  %1750 = getelementptr inbounds %struct.Reg, %struct.Reg* %1749, i32 0, i32 0
  %PC.i2076 = bitcast %union.anon* %1750 to i64*
  %1751 = load i64, i64* %PC.i2076
  %1752 = add i64 %1751, 1
  store i64 %1752, i64* %PC.i2076
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1755 = bitcast %union.anon* %1754 to i32*
  %1756 = load i32, i32* %1755, align 8
  %1757 = sext i32 %1756 to i64
  %1758 = lshr i64 %1757, 32
  store i64 %1758, i64* %1753, align 8
  store %struct.Memory* %loadMem_40ae6f, %struct.Memory** %MEMORY
  %loadMem_40ae70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i2071 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 5
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %ECX.i2072 = bitcast %union.anon* %1764 to i32*
  %1765 = load i32, i32* %ECX.i2072
  %1766 = zext i32 %1765 to i64
  %1767 = load i64, i64* %PC.i2071
  %1768 = add i64 %1767, 2
  store i64 %1768, i64* %PC.i2071
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %1770 = bitcast %union.anon* %1769 to i32*
  %1771 = load i32, i32* %1770, align 8
  %1772 = zext i32 %1771 to i64
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %1774 = bitcast %union.anon* %1773 to i32*
  %1775 = load i32, i32* %1774, align 8
  %1776 = zext i32 %1775 to i64
  %1777 = shl i64 %1766, 32
  %1778 = ashr exact i64 %1777, 32
  %1779 = shl i64 %1776, 32
  %1780 = or i64 %1779, %1772
  %1781 = sdiv i64 %1780, %1778
  %1782 = shl i64 %1781, 32
  %1783 = ashr exact i64 %1782, 32
  %1784 = icmp eq i64 %1781, %1783
  br i1 %1784, label %1789, label %1785

; <label>:1785:                                   ; preds = %routine_idivl__ecx.exit2090
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1787 = load i64, i64* %1786, align 8
  %1788 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1787, %struct.Memory* %loadMem_40ae70)
  br label %routine_idivl__ecx.exit2073

; <label>:1789:                                   ; preds = %routine_idivl__ecx.exit2090
  %1790 = srem i64 %1780, %1778
  %1791 = getelementptr inbounds %union.anon, %union.anon* %1769, i64 0, i32 0
  %1792 = and i64 %1781, 4294967295
  store i64 %1792, i64* %1791, align 8
  %1793 = getelementptr inbounds %union.anon, %union.anon* %1773, i64 0, i32 0
  %1794 = and i64 %1790, 4294967295
  store i64 %1794, i64* %1793, align 8
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1795, align 1
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %1796, align 1
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1797, align 1
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1798, align 1
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1799, align 1
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1800, align 1
  br label %routine_idivl__ecx.exit2073

routine_idivl__ecx.exit2073:                      ; preds = %1785, %1789
  %1801 = phi %struct.Memory* [ %1788, %1785 ], [ %loadMem_40ae70, %1789 ]
  store %struct.Memory* %1801, %struct.Memory** %MEMORY
  %loadMem_40ae72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 33
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %1804 to i64*
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1806 = getelementptr inbounds %struct.GPR, %struct.GPR* %1805, i32 0, i32 7
  %1807 = getelementptr inbounds %struct.Reg, %struct.Reg* %1806, i32 0, i32 0
  %EDX.i2069 = bitcast %union.anon* %1807 to i32*
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 15
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %RBP.i2070 = bitcast %union.anon* %1810 to i64*
  %1811 = load i64, i64* %RBP.i2070
  %1812 = sub i64 %1811, 108
  %1813 = load i32, i32* %EDX.i2069
  %1814 = zext i32 %1813 to i64
  %1815 = load i64, i64* %PC.i2068
  %1816 = add i64 %1815, 3
  store i64 %1816, i64* %PC.i2068
  %1817 = inttoptr i64 %1812 to i32*
  store i32 %1813, i32* %1817
  store %struct.Memory* %loadMem_40ae72, %struct.Memory** %MEMORY
  %loadMem_40ae75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1819 = getelementptr inbounds %struct.GPR, %struct.GPR* %1818, i32 0, i32 33
  %1820 = getelementptr inbounds %struct.Reg, %struct.Reg* %1819, i32 0, i32 0
  %PC.i2065 = bitcast %union.anon* %1820 to i64*
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1822 = getelementptr inbounds %struct.GPR, %struct.GPR* %1821, i32 0, i32 5
  %1823 = getelementptr inbounds %struct.Reg, %struct.Reg* %1822, i32 0, i32 0
  %RCX.i2066 = bitcast %union.anon* %1823 to i64*
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1825 = getelementptr inbounds %struct.GPR, %struct.GPR* %1824, i32 0, i32 15
  %1826 = getelementptr inbounds %struct.Reg, %struct.Reg* %1825, i32 0, i32 0
  %RBP.i2067 = bitcast %union.anon* %1826 to i64*
  %1827 = load i64, i64* %RBP.i2067
  %1828 = sub i64 %1827, 104
  %1829 = load i64, i64* %PC.i2065
  %1830 = add i64 %1829, 3
  store i64 %1830, i64* %PC.i2065
  %1831 = inttoptr i64 %1828 to i32*
  %1832 = load i32, i32* %1831
  %1833 = zext i32 %1832 to i64
  store i64 %1833, i64* %RCX.i2066, align 8
  store %struct.Memory* %loadMem_40ae75, %struct.Memory** %MEMORY
  %loadMem_40ae78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 33
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %PC.i2063 = bitcast %union.anon* %1836 to i64*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 5
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RCX.i2064 = bitcast %union.anon* %1839 to i64*
  %1840 = load i64, i64* %RCX.i2064
  %1841 = load i64, i64* %PC.i2063
  %1842 = add i64 %1841, 3
  store i64 %1842, i64* %PC.i2063
  %1843 = trunc i64 %1840 to i32
  %1844 = add i32 15, %1843
  %1845 = zext i32 %1844 to i64
  store i64 %1845, i64* %RCX.i2064, align 8
  %1846 = icmp ult i32 %1844, %1843
  %1847 = icmp ult i32 %1844, 15
  %1848 = or i1 %1846, %1847
  %1849 = zext i1 %1848 to i8
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1849, i8* %1850, align 1
  %1851 = and i32 %1844, 255
  %1852 = call i32 @llvm.ctpop.i32(i32 %1851)
  %1853 = trunc i32 %1852 to i8
  %1854 = and i8 %1853, 1
  %1855 = xor i8 %1854, 1
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1855, i8* %1856, align 1
  %1857 = xor i64 15, %1840
  %1858 = trunc i64 %1857 to i32
  %1859 = xor i32 %1858, %1844
  %1860 = lshr i32 %1859, 4
  %1861 = trunc i32 %1860 to i8
  %1862 = and i8 %1861, 1
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1862, i8* %1863, align 1
  %1864 = icmp eq i32 %1844, 0
  %1865 = zext i1 %1864 to i8
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1865, i8* %1866, align 1
  %1867 = lshr i32 %1844, 31
  %1868 = trunc i32 %1867 to i8
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1868, i8* %1869, align 1
  %1870 = lshr i32 %1843, 31
  %1871 = xor i32 %1867, %1870
  %1872 = add i32 %1871, %1867
  %1873 = icmp eq i32 %1872, 2
  %1874 = zext i1 %1873 to i8
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1874, i8* %1875, align 1
  store %struct.Memory* %loadMem_40ae78, %struct.Memory** %MEMORY
  %loadMem_40ae7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 33
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %PC.i2060 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 5
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %ECX.i2061 = bitcast %union.anon* %1881 to i32*
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1883 = getelementptr inbounds %struct.GPR, %struct.GPR* %1882, i32 0, i32 15
  %1884 = getelementptr inbounds %struct.Reg, %struct.Reg* %1883, i32 0, i32 0
  %RBP.i2062 = bitcast %union.anon* %1884 to i64*
  %1885 = load i64, i64* %RBP.i2062
  %1886 = sub i64 %1885, 112
  %1887 = load i32, i32* %ECX.i2061
  %1888 = zext i32 %1887 to i64
  %1889 = load i64, i64* %PC.i2060
  %1890 = add i64 %1889, 3
  store i64 %1890, i64* %PC.i2060
  %1891 = inttoptr i64 %1886 to i32*
  store i32 %1887, i32* %1891
  store %struct.Memory* %loadMem_40ae7b, %struct.Memory** %MEMORY
  %loadMem_40ae7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 33
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %PC.i2058 = bitcast %union.anon* %1894 to i64*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 15
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %RBP.i2059 = bitcast %union.anon* %1897 to i64*
  %1898 = load i64, i64* %RBP.i2059
  %1899 = sub i64 %1898, 140
  %1900 = load i64, i64* %PC.i2058
  %1901 = add i64 %1900, 7
  store i64 %1901, i64* %PC.i2058
  %1902 = inttoptr i64 %1899 to i32*
  %1903 = load i32, i32* %1902
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1904, align 1
  %1905 = and i32 %1903, 255
  %1906 = call i32 @llvm.ctpop.i32(i32 %1905)
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = xor i8 %1908, 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1909, i8* %1910, align 1
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1911, align 1
  %1912 = icmp eq i32 %1903, 0
  %1913 = zext i1 %1912 to i8
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1913, i8* %1914, align 1
  %1915 = lshr i32 %1903, 31
  %1916 = trunc i32 %1915 to i8
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1916, i8* %1917, align 1
  %1918 = lshr i32 %1903, 31
  %1919 = xor i32 %1915, %1918
  %1920 = add i32 %1919, %1918
  %1921 = icmp eq i32 %1920, 2
  %1922 = zext i1 %1921 to i8
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1922, i8* %1923, align 1
  store %struct.Memory* %loadMem_40ae7e, %struct.Memory** %MEMORY
  %loadMem_40ae85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 33
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %1926 to i64*
  %1927 = load i64, i64* %PC.i2057
  %1928 = add i64 %1927, 340
  %1929 = load i64, i64* %PC.i2057
  %1930 = add i64 %1929, 6
  %1931 = load i64, i64* %PC.i2057
  %1932 = add i64 %1931, 6
  store i64 %1932, i64* %PC.i2057
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1934 = load i8, i8* %1933, align 1
  %1935 = icmp eq i8 %1934, 0
  %1936 = zext i1 %1935 to i8
  store i8 %1936, i8* %BRANCH_TAKEN, align 1
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1938 = select i1 %1935, i64 %1928, i64 %1930
  store i64 %1938, i64* %1937, align 8
  store %struct.Memory* %loadMem_40ae85, %struct.Memory** %MEMORY
  %loadBr_40ae85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ae85 = icmp eq i8 %loadBr_40ae85, 1
  br i1 %cmpBr_40ae85, label %block_.L_40afd9, label %block_40ae8b

block_40ae8b:                                     ; preds = %routine_idivl__ecx.exit2073
  %loadMem_40ae8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i2055 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 15
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RBP.i2056 = bitcast %union.anon* %1944 to i64*
  %1945 = load i64, i64* %RBP.i2056
  %1946 = sub i64 %1945, 20
  %1947 = load i64, i64* %PC.i2055
  %1948 = add i64 %1947, 7
  store i64 %1948, i64* %PC.i2055
  %1949 = inttoptr i64 %1946 to i32*
  store i32 0, i32* %1949
  store %struct.Memory* %loadMem_40ae8b, %struct.Memory** %MEMORY
  br label %block_.L_40ae92

block_.L_40ae92:                                  ; preds = %block_.L_40af5a, %block_40ae8b
  %loadMem_40ae92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1951 = getelementptr inbounds %struct.GPR, %struct.GPR* %1950, i32 0, i32 33
  %1952 = getelementptr inbounds %struct.Reg, %struct.Reg* %1951, i32 0, i32 0
  %PC.i2053 = bitcast %union.anon* %1952 to i64*
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1954 = getelementptr inbounds %struct.GPR, %struct.GPR* %1953, i32 0, i32 15
  %1955 = getelementptr inbounds %struct.Reg, %struct.Reg* %1954, i32 0, i32 0
  %RBP.i2054 = bitcast %union.anon* %1955 to i64*
  %1956 = load i64, i64* %RBP.i2054
  %1957 = sub i64 %1956, 20
  %1958 = load i64, i64* %PC.i2053
  %1959 = add i64 %1958, 4
  store i64 %1959, i64* %PC.i2053
  %1960 = inttoptr i64 %1957 to i32*
  %1961 = load i32, i32* %1960
  %1962 = sub i32 %1961, 4
  %1963 = icmp ult i32 %1961, 4
  %1964 = zext i1 %1963 to i8
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1964, i8* %1965, align 1
  %1966 = and i32 %1962, 255
  %1967 = call i32 @llvm.ctpop.i32(i32 %1966)
  %1968 = trunc i32 %1967 to i8
  %1969 = and i8 %1968, 1
  %1970 = xor i8 %1969, 1
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1970, i8* %1971, align 1
  %1972 = xor i32 %1961, 4
  %1973 = xor i32 %1972, %1962
  %1974 = lshr i32 %1973, 4
  %1975 = trunc i32 %1974 to i8
  %1976 = and i8 %1975, 1
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1976, i8* %1977, align 1
  %1978 = icmp eq i32 %1962, 0
  %1979 = zext i1 %1978 to i8
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1979, i8* %1980, align 1
  %1981 = lshr i32 %1962, 31
  %1982 = trunc i32 %1981 to i8
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1982, i8* %1983, align 1
  %1984 = lshr i32 %1961, 31
  %1985 = xor i32 %1981, %1984
  %1986 = add i32 %1985, %1984
  %1987 = icmp eq i32 %1986, 2
  %1988 = zext i1 %1987 to i8
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1988, i8* %1989, align 1
  store %struct.Memory* %loadMem_40ae92, %struct.Memory** %MEMORY
  %loadMem_40ae96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1991 = getelementptr inbounds %struct.GPR, %struct.GPR* %1990, i32 0, i32 33
  %1992 = getelementptr inbounds %struct.Reg, %struct.Reg* %1991, i32 0, i32 0
  %PC.i2052 = bitcast %union.anon* %1992 to i64*
  %1993 = load i64, i64* %PC.i2052
  %1994 = add i64 %1993, 318
  %1995 = load i64, i64* %PC.i2052
  %1996 = add i64 %1995, 6
  %1997 = load i64, i64* %PC.i2052
  %1998 = add i64 %1997, 6
  store i64 %1998, i64* %PC.i2052
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2000 = load i8, i8* %1999, align 1
  %2001 = icmp ne i8 %2000, 0
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2003 = load i8, i8* %2002, align 1
  %2004 = icmp ne i8 %2003, 0
  %2005 = xor i1 %2001, %2004
  %2006 = xor i1 %2005, true
  %2007 = zext i1 %2006 to i8
  store i8 %2007, i8* %BRANCH_TAKEN, align 1
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2009 = select i1 %2005, i64 %1996, i64 %1994
  store i64 %2009, i64* %2008, align 8
  store %struct.Memory* %loadMem_40ae96, %struct.Memory** %MEMORY
  %loadBr_40ae96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ae96 = icmp eq i8 %loadBr_40ae96, 1
  br i1 %cmpBr_40ae96, label %block_.L_40afd4, label %block_40ae9c

block_40ae9c:                                     ; preds = %block_.L_40ae92
  %loadMem_40ae9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2011 = getelementptr inbounds %struct.GPR, %struct.GPR* %2010, i32 0, i32 33
  %2012 = getelementptr inbounds %struct.Reg, %struct.Reg* %2011, i32 0, i32 0
  %PC.i2050 = bitcast %union.anon* %2012 to i64*
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 15
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %RBP.i2051 = bitcast %union.anon* %2015 to i64*
  %2016 = load i64, i64* %RBP.i2051
  %2017 = sub i64 %2016, 16
  %2018 = load i64, i64* %PC.i2050
  %2019 = add i64 %2018, 7
  store i64 %2019, i64* %PC.i2050
  %2020 = inttoptr i64 %2017 to i32*
  store i32 0, i32* %2020
  store %struct.Memory* %loadMem_40ae9c, %struct.Memory** %MEMORY
  br label %block_.L_40aea3

block_.L_40aea3:                                  ; preds = %block_40aead, %block_40ae9c
  %loadMem_40aea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2022 = getelementptr inbounds %struct.GPR, %struct.GPR* %2021, i32 0, i32 33
  %2023 = getelementptr inbounds %struct.Reg, %struct.Reg* %2022, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %2023 to i64*
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2025 = getelementptr inbounds %struct.GPR, %struct.GPR* %2024, i32 0, i32 15
  %2026 = getelementptr inbounds %struct.Reg, %struct.Reg* %2025, i32 0, i32 0
  %RBP.i2049 = bitcast %union.anon* %2026 to i64*
  %2027 = load i64, i64* %RBP.i2049
  %2028 = sub i64 %2027, 16
  %2029 = load i64, i64* %PC.i2048
  %2030 = add i64 %2029, 4
  store i64 %2030, i64* %PC.i2048
  %2031 = inttoptr i64 %2028 to i32*
  %2032 = load i32, i32* %2031
  %2033 = sub i32 %2032, 2
  %2034 = icmp ult i32 %2032, 2
  %2035 = zext i1 %2034 to i8
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2035, i8* %2036, align 1
  %2037 = and i32 %2033, 255
  %2038 = call i32 @llvm.ctpop.i32(i32 %2037)
  %2039 = trunc i32 %2038 to i8
  %2040 = and i8 %2039, 1
  %2041 = xor i8 %2040, 1
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2041, i8* %2042, align 1
  %2043 = xor i32 %2032, 2
  %2044 = xor i32 %2043, %2033
  %2045 = lshr i32 %2044, 4
  %2046 = trunc i32 %2045 to i8
  %2047 = and i8 %2046, 1
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2047, i8* %2048, align 1
  %2049 = icmp eq i32 %2033, 0
  %2050 = zext i1 %2049 to i8
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2050, i8* %2051, align 1
  %2052 = lshr i32 %2033, 31
  %2053 = trunc i32 %2052 to i8
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2053, i8* %2054, align 1
  %2055 = lshr i32 %2032, 31
  %2056 = xor i32 %2052, %2055
  %2057 = add i32 %2056, %2055
  %2058 = icmp eq i32 %2057, 2
  %2059 = zext i1 %2058 to i8
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2059, i8* %2060, align 1
  store %struct.Memory* %loadMem_40aea3, %struct.Memory** %MEMORY
  %loadMem_40aea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 33
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %PC.i2047 = bitcast %union.anon* %2063 to i64*
  %2064 = load i64, i64* %PC.i2047
  %2065 = add i64 %2064, 179
  %2066 = load i64, i64* %PC.i2047
  %2067 = add i64 %2066, 6
  %2068 = load i64, i64* %PC.i2047
  %2069 = add i64 %2068, 6
  store i64 %2069, i64* %PC.i2047
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2071 = load i8, i8* %2070, align 1
  %2072 = icmp ne i8 %2071, 0
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2074 = load i8, i8* %2073, align 1
  %2075 = icmp ne i8 %2074, 0
  %2076 = xor i1 %2072, %2075
  %2077 = xor i1 %2076, true
  %2078 = zext i1 %2077 to i8
  store i8 %2078, i8* %BRANCH_TAKEN, align 1
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2080 = select i1 %2076, i64 %2067, i64 %2065
  store i64 %2080, i64* %2079, align 8
  store %struct.Memory* %loadMem_40aea7, %struct.Memory** %MEMORY
  %loadBr_40aea7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40aea7 = icmp eq i8 %loadBr_40aea7, 1
  br i1 %cmpBr_40aea7, label %block_.L_40af5a, label %block_40aead

block_40aead:                                     ; preds = %block_.L_40aea3
  %loadMem_40aead = load %struct.Memory*, %struct.Memory** %MEMORY
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2082 = getelementptr inbounds %struct.GPR, %struct.GPR* %2081, i32 0, i32 33
  %2083 = getelementptr inbounds %struct.Reg, %struct.Reg* %2082, i32 0, i32 0
  %PC.i2045 = bitcast %union.anon* %2083 to i64*
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2085 = getelementptr inbounds %struct.GPR, %struct.GPR* %2084, i32 0, i32 1
  %2086 = getelementptr inbounds %struct.Reg, %struct.Reg* %2085, i32 0, i32 0
  %RAX.i2046 = bitcast %union.anon* %2086 to i64*
  %2087 = load i64, i64* %PC.i2045
  %2088 = add i64 %2087, 5
  store i64 %2088, i64* %PC.i2045
  store i64 3, i64* %RAX.i2046, align 8
  store %struct.Memory* %loadMem_40aead, %struct.Memory** %MEMORY
  %loadMem_40aeb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2090 = getelementptr inbounds %struct.GPR, %struct.GPR* %2089, i32 0, i32 33
  %2091 = getelementptr inbounds %struct.Reg, %struct.Reg* %2090, i32 0, i32 0
  %PC.i2042 = bitcast %union.anon* %2091 to i64*
  %2092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2093 = getelementptr inbounds %struct.GPR, %struct.GPR* %2092, i32 0, i32 1
  %2094 = getelementptr inbounds %struct.Reg, %struct.Reg* %2093, i32 0, i32 0
  %RAX.i2043 = bitcast %union.anon* %2094 to i64*
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2096 = getelementptr inbounds %struct.GPR, %struct.GPR* %2095, i32 0, i32 15
  %2097 = getelementptr inbounds %struct.Reg, %struct.Reg* %2096, i32 0, i32 0
  %RBP.i2044 = bitcast %union.anon* %2097 to i64*
  %2098 = load i64, i64* %RAX.i2043
  %2099 = load i64, i64* %RBP.i2044
  %2100 = sub i64 %2099, 16
  %2101 = load i64, i64* %PC.i2042
  %2102 = add i64 %2101, 3
  store i64 %2102, i64* %PC.i2042
  %2103 = trunc i64 %2098 to i32
  %2104 = inttoptr i64 %2100 to i32*
  %2105 = load i32, i32* %2104
  %2106 = sub i32 %2103, %2105
  %2107 = zext i32 %2106 to i64
  store i64 %2107, i64* %RAX.i2043, align 8
  %2108 = icmp ult i32 %2103, %2105
  %2109 = zext i1 %2108 to i8
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2109, i8* %2110, align 1
  %2111 = and i32 %2106, 255
  %2112 = call i32 @llvm.ctpop.i32(i32 %2111)
  %2113 = trunc i32 %2112 to i8
  %2114 = and i8 %2113, 1
  %2115 = xor i8 %2114, 1
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2115, i8* %2116, align 1
  %2117 = xor i32 %2105, %2103
  %2118 = xor i32 %2117, %2106
  %2119 = lshr i32 %2118, 4
  %2120 = trunc i32 %2119 to i8
  %2121 = and i8 %2120, 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2121, i8* %2122, align 1
  %2123 = icmp eq i32 %2106, 0
  %2124 = zext i1 %2123 to i8
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2124, i8* %2125, align 1
  %2126 = lshr i32 %2106, 31
  %2127 = trunc i32 %2126 to i8
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2127, i8* %2128, align 1
  %2129 = lshr i32 %2103, 31
  %2130 = lshr i32 %2105, 31
  %2131 = xor i32 %2130, %2129
  %2132 = xor i32 %2126, %2129
  %2133 = add i32 %2132, %2131
  %2134 = icmp eq i32 %2133, 2
  %2135 = zext i1 %2134 to i8
  %2136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2135, i8* %2136, align 1
  store %struct.Memory* %loadMem_40aeb2, %struct.Memory** %MEMORY
  %loadMem_40aeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2138 = getelementptr inbounds %struct.GPR, %struct.GPR* %2137, i32 0, i32 33
  %2139 = getelementptr inbounds %struct.Reg, %struct.Reg* %2138, i32 0, i32 0
  %PC.i2039 = bitcast %union.anon* %2139 to i64*
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2141 = getelementptr inbounds %struct.GPR, %struct.GPR* %2140, i32 0, i32 1
  %2142 = getelementptr inbounds %struct.Reg, %struct.Reg* %2141, i32 0, i32 0
  %EAX.i2040 = bitcast %union.anon* %2142 to i32*
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2144 = getelementptr inbounds %struct.GPR, %struct.GPR* %2143, i32 0, i32 15
  %2145 = getelementptr inbounds %struct.Reg, %struct.Reg* %2144, i32 0, i32 0
  %RBP.i2041 = bitcast %union.anon* %2145 to i64*
  %2146 = load i64, i64* %RBP.i2041
  %2147 = sub i64 %2146, 24
  %2148 = load i32, i32* %EAX.i2040
  %2149 = zext i32 %2148 to i64
  %2150 = load i64, i64* %PC.i2039
  %2151 = add i64 %2150, 3
  store i64 %2151, i64* %PC.i2039
  %2152 = inttoptr i64 %2147 to i32*
  store i32 %2148, i32* %2152
  store %struct.Memory* %loadMem_40aeb5, %struct.Memory** %MEMORY
  %loadMem_40aeb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 33
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %PC.i2037 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 5
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %RCX.i2038 = bitcast %union.anon* %2158 to i64*
  %2159 = load i64, i64* %PC.i2037
  %2160 = add i64 %2159, 8
  store i64 %2160, i64* %PC.i2037
  %2161 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2161, i64* %RCX.i2038, align 8
  store %struct.Memory* %loadMem_40aeb8, %struct.Memory** %MEMORY
  %loadMem_40aec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2163 = getelementptr inbounds %struct.GPR, %struct.GPR* %2162, i32 0, i32 33
  %2164 = getelementptr inbounds %struct.Reg, %struct.Reg* %2163, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %2164 to i64*
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2166 = getelementptr inbounds %struct.GPR, %struct.GPR* %2165, i32 0, i32 5
  %2167 = getelementptr inbounds %struct.Reg, %struct.Reg* %2166, i32 0, i32 0
  %RCX.i2036 = bitcast %union.anon* %2167 to i64*
  %2168 = load i64, i64* %RCX.i2036
  %2169 = load i64, i64* %PC.i2035
  %2170 = add i64 %2169, 7
  store i64 %2170, i64* %PC.i2035
  %2171 = add i64 13112, %2168
  store i64 %2171, i64* %RCX.i2036, align 8
  %2172 = icmp ult i64 %2171, %2168
  %2173 = icmp ult i64 %2171, 13112
  %2174 = or i1 %2172, %2173
  %2175 = zext i1 %2174 to i8
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2175, i8* %2176, align 1
  %2177 = trunc i64 %2171 to i32
  %2178 = and i32 %2177, 255
  %2179 = call i32 @llvm.ctpop.i32(i32 %2178)
  %2180 = trunc i32 %2179 to i8
  %2181 = and i8 %2180, 1
  %2182 = xor i8 %2181, 1
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2182, i8* %2183, align 1
  %2184 = xor i64 13112, %2168
  %2185 = xor i64 %2184, %2171
  %2186 = lshr i64 %2185, 4
  %2187 = trunc i64 %2186 to i8
  %2188 = and i8 %2187, 1
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2188, i8* %2189, align 1
  %2190 = icmp eq i64 %2171, 0
  %2191 = zext i1 %2190 to i8
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2191, i8* %2192, align 1
  %2193 = lshr i64 %2171, 63
  %2194 = trunc i64 %2193 to i8
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2194, i8* %2195, align 1
  %2196 = lshr i64 %2168, 63
  %2197 = xor i64 %2193, %2196
  %2198 = add i64 %2197, %2193
  %2199 = icmp eq i64 %2198, 2
  %2200 = zext i1 %2199 to i8
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2200, i8* %2201, align 1
  store %struct.Memory* %loadMem_40aec0, %struct.Memory** %MEMORY
  %loadMem_40aec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2203 = getelementptr inbounds %struct.GPR, %struct.GPR* %2202, i32 0, i32 33
  %2204 = getelementptr inbounds %struct.Reg, %struct.Reg* %2203, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %2204 to i64*
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2206 = getelementptr inbounds %struct.GPR, %struct.GPR* %2205, i32 0, i32 7
  %2207 = getelementptr inbounds %struct.Reg, %struct.Reg* %2206, i32 0, i32 0
  %RDX.i2033 = bitcast %union.anon* %2207 to i64*
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2209 = getelementptr inbounds %struct.GPR, %struct.GPR* %2208, i32 0, i32 15
  %2210 = getelementptr inbounds %struct.Reg, %struct.Reg* %2209, i32 0, i32 0
  %RBP.i2034 = bitcast %union.anon* %2210 to i64*
  %2211 = load i64, i64* %RBP.i2034
  %2212 = sub i64 %2211, 16
  %2213 = load i64, i64* %PC.i2032
  %2214 = add i64 %2213, 4
  store i64 %2214, i64* %PC.i2032
  %2215 = inttoptr i64 %2212 to i32*
  %2216 = load i32, i32* %2215
  %2217 = sext i32 %2216 to i64
  store i64 %2217, i64* %RDX.i2033, align 8
  store %struct.Memory* %loadMem_40aec7, %struct.Memory** %MEMORY
  %loadMem_40aecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 33
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %2220 to i64*
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 7
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %RDX.i2031 = bitcast %union.anon* %2223 to i64*
  %2224 = load i64, i64* %RDX.i2031
  %2225 = load i64, i64* %PC.i2030
  %2226 = add i64 %2225, 4
  store i64 %2226, i64* %PC.i2030
  %2227 = shl i64 %2224, 5
  %2228 = icmp slt i64 %2227, 0
  %2229 = shl i64 %2227, 1
  store i64 %2229, i64* %RDX.i2031, align 8
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2231 = zext i1 %2228 to i8
  store i8 %2231, i8* %2230, align 1
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2233 = trunc i64 %2229 to i32
  %2234 = and i32 %2233, 254
  %2235 = call i32 @llvm.ctpop.i32(i32 %2234)
  %2236 = trunc i32 %2235 to i8
  %2237 = and i8 %2236, 1
  %2238 = xor i8 %2237, 1
  store i8 %2238, i8* %2232, align 1
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2239, align 1
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2241 = icmp eq i64 %2229, 0
  %2242 = zext i1 %2241 to i8
  store i8 %2242, i8* %2240, align 1
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2244 = lshr i64 %2229, 63
  %2245 = trunc i64 %2244 to i8
  store i8 %2245, i8* %2243, align 1
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2246, align 1
  store %struct.Memory* %loadMem_40aecb, %struct.Memory** %MEMORY
  %loadMem_40aecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 33
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %PC.i2027 = bitcast %union.anon* %2249 to i64*
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 5
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %RCX.i2028 = bitcast %union.anon* %2252 to i64*
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 7
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %RDX.i2029 = bitcast %union.anon* %2255 to i64*
  %2256 = load i64, i64* %RCX.i2028
  %2257 = load i64, i64* %RDX.i2029
  %2258 = load i64, i64* %PC.i2027
  %2259 = add i64 %2258, 3
  store i64 %2259, i64* %PC.i2027
  %2260 = add i64 %2257, %2256
  store i64 %2260, i64* %RCX.i2028, align 8
  %2261 = icmp ult i64 %2260, %2256
  %2262 = icmp ult i64 %2260, %2257
  %2263 = or i1 %2261, %2262
  %2264 = zext i1 %2263 to i8
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2264, i8* %2265, align 1
  %2266 = trunc i64 %2260 to i32
  %2267 = and i32 %2266, 255
  %2268 = call i32 @llvm.ctpop.i32(i32 %2267)
  %2269 = trunc i32 %2268 to i8
  %2270 = and i8 %2269, 1
  %2271 = xor i8 %2270, 1
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2271, i8* %2272, align 1
  %2273 = xor i64 %2257, %2256
  %2274 = xor i64 %2273, %2260
  %2275 = lshr i64 %2274, 4
  %2276 = trunc i64 %2275 to i8
  %2277 = and i8 %2276, 1
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2277, i8* %2278, align 1
  %2279 = icmp eq i64 %2260, 0
  %2280 = zext i1 %2279 to i8
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2280, i8* %2281, align 1
  %2282 = lshr i64 %2260, 63
  %2283 = trunc i64 %2282 to i8
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2283, i8* %2284, align 1
  %2285 = lshr i64 %2256, 63
  %2286 = lshr i64 %2257, 63
  %2287 = xor i64 %2282, %2285
  %2288 = xor i64 %2282, %2286
  %2289 = add i64 %2287, %2288
  %2290 = icmp eq i64 %2289, 2
  %2291 = zext i1 %2290 to i8
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2291, i8* %2292, align 1
  store %struct.Memory* %loadMem_40aecf, %struct.Memory** %MEMORY
  %loadMem_40aed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 33
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %PC.i2024 = bitcast %union.anon* %2295 to i64*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 7
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RDX.i2025 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 15
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RBP.i2026 = bitcast %union.anon* %2301 to i64*
  %2302 = load i64, i64* %RBP.i2026
  %2303 = sub i64 %2302, 20
  %2304 = load i64, i64* %PC.i2024
  %2305 = add i64 %2304, 4
  store i64 %2305, i64* %PC.i2024
  %2306 = inttoptr i64 %2303 to i32*
  %2307 = load i32, i32* %2306
  %2308 = sext i32 %2307 to i64
  store i64 %2308, i64* %RDX.i2025, align 8
  store %struct.Memory* %loadMem_40aed2, %struct.Memory** %MEMORY
  %loadMem_40aed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 33
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %PC.i2020 = bitcast %union.anon* %2311 to i64*
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2313 = getelementptr inbounds %struct.GPR, %struct.GPR* %2312, i32 0, i32 1
  %2314 = getelementptr inbounds %struct.Reg, %struct.Reg* %2313, i32 0, i32 0
  %RAX.i2021 = bitcast %union.anon* %2314 to i64*
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 5
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %RCX.i2022 = bitcast %union.anon* %2317 to i64*
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2319 = getelementptr inbounds %struct.GPR, %struct.GPR* %2318, i32 0, i32 7
  %2320 = getelementptr inbounds %struct.Reg, %struct.Reg* %2319, i32 0, i32 0
  %RDX.i2023 = bitcast %union.anon* %2320 to i64*
  %2321 = load i64, i64* %RCX.i2022
  %2322 = load i64, i64* %RDX.i2023
  %2323 = mul i64 %2322, 4
  %2324 = add i64 %2323, %2321
  %2325 = load i64, i64* %PC.i2020
  %2326 = add i64 %2325, 3
  store i64 %2326, i64* %PC.i2020
  %2327 = inttoptr i64 %2324 to i32*
  %2328 = load i32, i32* %2327
  %2329 = zext i32 %2328 to i64
  store i64 %2329, i64* %RAX.i2021, align 8
  store %struct.Memory* %loadMem_40aed6, %struct.Memory** %MEMORY
  %loadMem_40aed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 33
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %PC.i2018 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 5
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %RCX.i2019 = bitcast %union.anon* %2335 to i64*
  %2336 = load i64, i64* %PC.i2018
  %2337 = add i64 %2336, 8
  store i64 %2337, i64* %PC.i2018
  %2338 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2338, i64* %RCX.i2019, align 8
  store %struct.Memory* %loadMem_40aed9, %struct.Memory** %MEMORY
  %loadMem_40aee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 33
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %PC.i2016 = bitcast %union.anon* %2341 to i64*
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 5
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %RCX.i2017 = bitcast %union.anon* %2344 to i64*
  %2345 = load i64, i64* %RCX.i2017
  %2346 = load i64, i64* %PC.i2016
  %2347 = add i64 %2346, 7
  store i64 %2347, i64* %PC.i2016
  %2348 = add i64 13112, %2345
  store i64 %2348, i64* %RCX.i2017, align 8
  %2349 = icmp ult i64 %2348, %2345
  %2350 = icmp ult i64 %2348, 13112
  %2351 = or i1 %2349, %2350
  %2352 = zext i1 %2351 to i8
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2352, i8* %2353, align 1
  %2354 = trunc i64 %2348 to i32
  %2355 = and i32 %2354, 255
  %2356 = call i32 @llvm.ctpop.i32(i32 %2355)
  %2357 = trunc i32 %2356 to i8
  %2358 = and i8 %2357, 1
  %2359 = xor i8 %2358, 1
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2359, i8* %2360, align 1
  %2361 = xor i64 13112, %2345
  %2362 = xor i64 %2361, %2348
  %2363 = lshr i64 %2362, 4
  %2364 = trunc i64 %2363 to i8
  %2365 = and i8 %2364, 1
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2365, i8* %2366, align 1
  %2367 = icmp eq i64 %2348, 0
  %2368 = zext i1 %2367 to i8
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2368, i8* %2369, align 1
  %2370 = lshr i64 %2348, 63
  %2371 = trunc i64 %2370 to i8
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2371, i8* %2372, align 1
  %2373 = lshr i64 %2345, 63
  %2374 = xor i64 %2370, %2373
  %2375 = add i64 %2374, %2370
  %2376 = icmp eq i64 %2375, 2
  %2377 = zext i1 %2376 to i8
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2377, i8* %2378, align 1
  store %struct.Memory* %loadMem_40aee1, %struct.Memory** %MEMORY
  %loadMem_40aee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 33
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %PC.i2013 = bitcast %union.anon* %2381 to i64*
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 7
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %RDX.i2014 = bitcast %union.anon* %2384 to i64*
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2386 = getelementptr inbounds %struct.GPR, %struct.GPR* %2385, i32 0, i32 15
  %2387 = getelementptr inbounds %struct.Reg, %struct.Reg* %2386, i32 0, i32 0
  %RBP.i2015 = bitcast %union.anon* %2387 to i64*
  %2388 = load i64, i64* %RBP.i2015
  %2389 = sub i64 %2388, 24
  %2390 = load i64, i64* %PC.i2013
  %2391 = add i64 %2390, 4
  store i64 %2391, i64* %PC.i2013
  %2392 = inttoptr i64 %2389 to i32*
  %2393 = load i32, i32* %2392
  %2394 = sext i32 %2393 to i64
  store i64 %2394, i64* %RDX.i2014, align 8
  store %struct.Memory* %loadMem_40aee8, %struct.Memory** %MEMORY
  %loadMem_40aeec = load %struct.Memory*, %struct.Memory** %MEMORY
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 33
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %PC.i2011 = bitcast %union.anon* %2397 to i64*
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 7
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %RDX.i2012 = bitcast %union.anon* %2400 to i64*
  %2401 = load i64, i64* %RDX.i2012
  %2402 = load i64, i64* %PC.i2011
  %2403 = add i64 %2402, 4
  store i64 %2403, i64* %PC.i2011
  %2404 = shl i64 %2401, 5
  %2405 = icmp slt i64 %2404, 0
  %2406 = shl i64 %2404, 1
  store i64 %2406, i64* %RDX.i2012, align 8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2408 = zext i1 %2405 to i8
  store i8 %2408, i8* %2407, align 1
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2410 = trunc i64 %2406 to i32
  %2411 = and i32 %2410, 254
  %2412 = call i32 @llvm.ctpop.i32(i32 %2411)
  %2413 = trunc i32 %2412 to i8
  %2414 = and i8 %2413, 1
  %2415 = xor i8 %2414, 1
  store i8 %2415, i8* %2409, align 1
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2416, align 1
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2418 = icmp eq i64 %2406, 0
  %2419 = zext i1 %2418 to i8
  store i8 %2419, i8* %2417, align 1
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2421 = lshr i64 %2406, 63
  %2422 = trunc i64 %2421 to i8
  store i8 %2422, i8* %2420, align 1
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2423, align 1
  store %struct.Memory* %loadMem_40aeec, %struct.Memory** %MEMORY
  %loadMem_40aef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 33
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %PC.i2008 = bitcast %union.anon* %2426 to i64*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 5
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %RCX.i2009 = bitcast %union.anon* %2429 to i64*
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2431 = getelementptr inbounds %struct.GPR, %struct.GPR* %2430, i32 0, i32 7
  %2432 = getelementptr inbounds %struct.Reg, %struct.Reg* %2431, i32 0, i32 0
  %RDX.i2010 = bitcast %union.anon* %2432 to i64*
  %2433 = load i64, i64* %RCX.i2009
  %2434 = load i64, i64* %RDX.i2010
  %2435 = load i64, i64* %PC.i2008
  %2436 = add i64 %2435, 3
  store i64 %2436, i64* %PC.i2008
  %2437 = add i64 %2434, %2433
  store i64 %2437, i64* %RCX.i2009, align 8
  %2438 = icmp ult i64 %2437, %2433
  %2439 = icmp ult i64 %2437, %2434
  %2440 = or i1 %2438, %2439
  %2441 = zext i1 %2440 to i8
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2441, i8* %2442, align 1
  %2443 = trunc i64 %2437 to i32
  %2444 = and i32 %2443, 255
  %2445 = call i32 @llvm.ctpop.i32(i32 %2444)
  %2446 = trunc i32 %2445 to i8
  %2447 = and i8 %2446, 1
  %2448 = xor i8 %2447, 1
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2448, i8* %2449, align 1
  %2450 = xor i64 %2434, %2433
  %2451 = xor i64 %2450, %2437
  %2452 = lshr i64 %2451, 4
  %2453 = trunc i64 %2452 to i8
  %2454 = and i8 %2453, 1
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2454, i8* %2455, align 1
  %2456 = icmp eq i64 %2437, 0
  %2457 = zext i1 %2456 to i8
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2457, i8* %2458, align 1
  %2459 = lshr i64 %2437, 63
  %2460 = trunc i64 %2459 to i8
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2460, i8* %2461, align 1
  %2462 = lshr i64 %2433, 63
  %2463 = lshr i64 %2434, 63
  %2464 = xor i64 %2459, %2462
  %2465 = xor i64 %2459, %2463
  %2466 = add i64 %2464, %2465
  %2467 = icmp eq i64 %2466, 2
  %2468 = zext i1 %2467 to i8
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2468, i8* %2469, align 1
  store %struct.Memory* %loadMem_40aef0, %struct.Memory** %MEMORY
  %loadMem_40aef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2471 = getelementptr inbounds %struct.GPR, %struct.GPR* %2470, i32 0, i32 33
  %2472 = getelementptr inbounds %struct.Reg, %struct.Reg* %2471, i32 0, i32 0
  %PC.i2005 = bitcast %union.anon* %2472 to i64*
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2474 = getelementptr inbounds %struct.GPR, %struct.GPR* %2473, i32 0, i32 7
  %2475 = getelementptr inbounds %struct.Reg, %struct.Reg* %2474, i32 0, i32 0
  %RDX.i2006 = bitcast %union.anon* %2475 to i64*
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2477 = getelementptr inbounds %struct.GPR, %struct.GPR* %2476, i32 0, i32 15
  %2478 = getelementptr inbounds %struct.Reg, %struct.Reg* %2477, i32 0, i32 0
  %RBP.i2007 = bitcast %union.anon* %2478 to i64*
  %2479 = load i64, i64* %RBP.i2007
  %2480 = sub i64 %2479, 20
  %2481 = load i64, i64* %PC.i2005
  %2482 = add i64 %2481, 4
  store i64 %2482, i64* %PC.i2005
  %2483 = inttoptr i64 %2480 to i32*
  %2484 = load i32, i32* %2483
  %2485 = sext i32 %2484 to i64
  store i64 %2485, i64* %RDX.i2006, align 8
  store %struct.Memory* %loadMem_40aef3, %struct.Memory** %MEMORY
  %loadMem_40aef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2487 = getelementptr inbounds %struct.GPR, %struct.GPR* %2486, i32 0, i32 33
  %2488 = getelementptr inbounds %struct.Reg, %struct.Reg* %2487, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %2488 to i64*
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 1
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %RAX.i2002 = bitcast %union.anon* %2491 to i64*
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2493 = getelementptr inbounds %struct.GPR, %struct.GPR* %2492, i32 0, i32 5
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %RCX.i2003 = bitcast %union.anon* %2494 to i64*
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2496 = getelementptr inbounds %struct.GPR, %struct.GPR* %2495, i32 0, i32 7
  %2497 = getelementptr inbounds %struct.Reg, %struct.Reg* %2496, i32 0, i32 0
  %RDX.i2004 = bitcast %union.anon* %2497 to i64*
  %2498 = load i64, i64* %RAX.i2002
  %2499 = load i64, i64* %RCX.i2003
  %2500 = load i64, i64* %RDX.i2004
  %2501 = mul i64 %2500, 4
  %2502 = add i64 %2501, %2499
  %2503 = load i64, i64* %PC.i2001
  %2504 = add i64 %2503, 3
  store i64 %2504, i64* %PC.i2001
  %2505 = trunc i64 %2498 to i32
  %2506 = inttoptr i64 %2502 to i32*
  %2507 = load i32, i32* %2506
  %2508 = add i32 %2507, %2505
  %2509 = zext i32 %2508 to i64
  store i64 %2509, i64* %RAX.i2002, align 8
  %2510 = icmp ult i32 %2508, %2505
  %2511 = icmp ult i32 %2508, %2507
  %2512 = or i1 %2510, %2511
  %2513 = zext i1 %2512 to i8
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2513, i8* %2514, align 1
  %2515 = and i32 %2508, 255
  %2516 = call i32 @llvm.ctpop.i32(i32 %2515)
  %2517 = trunc i32 %2516 to i8
  %2518 = and i8 %2517, 1
  %2519 = xor i8 %2518, 1
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2519, i8* %2520, align 1
  %2521 = xor i32 %2507, %2505
  %2522 = xor i32 %2521, %2508
  %2523 = lshr i32 %2522, 4
  %2524 = trunc i32 %2523 to i8
  %2525 = and i8 %2524, 1
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2525, i8* %2526, align 1
  %2527 = icmp eq i32 %2508, 0
  %2528 = zext i1 %2527 to i8
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2528, i8* %2529, align 1
  %2530 = lshr i32 %2508, 31
  %2531 = trunc i32 %2530 to i8
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2531, i8* %2532, align 1
  %2533 = lshr i32 %2505, 31
  %2534 = lshr i32 %2507, 31
  %2535 = xor i32 %2530, %2533
  %2536 = xor i32 %2530, %2534
  %2537 = add i32 %2535, %2536
  %2538 = icmp eq i32 %2537, 2
  %2539 = zext i1 %2538 to i8
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2539, i8* %2540, align 1
  store %struct.Memory* %loadMem_40aef7, %struct.Memory** %MEMORY
  %loadMem_40aefa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2542 = getelementptr inbounds %struct.GPR, %struct.GPR* %2541, i32 0, i32 33
  %2543 = getelementptr inbounds %struct.Reg, %struct.Reg* %2542, i32 0, i32 0
  %PC.i1998 = bitcast %union.anon* %2543 to i64*
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2545 = getelementptr inbounds %struct.GPR, %struct.GPR* %2544, i32 0, i32 5
  %2546 = getelementptr inbounds %struct.Reg, %struct.Reg* %2545, i32 0, i32 0
  %RCX.i1999 = bitcast %union.anon* %2546 to i64*
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2548 = getelementptr inbounds %struct.GPR, %struct.GPR* %2547, i32 0, i32 15
  %2549 = getelementptr inbounds %struct.Reg, %struct.Reg* %2548, i32 0, i32 0
  %RBP.i2000 = bitcast %union.anon* %2549 to i64*
  %2550 = load i64, i64* %RBP.i2000
  %2551 = sub i64 %2550, 16
  %2552 = load i64, i64* %PC.i1998
  %2553 = add i64 %2552, 4
  store i64 %2553, i64* %PC.i1998
  %2554 = inttoptr i64 %2551 to i32*
  %2555 = load i32, i32* %2554
  %2556 = sext i32 %2555 to i64
  store i64 %2556, i64* %RCX.i1999, align 8
  store %struct.Memory* %loadMem_40aefa, %struct.Memory** %MEMORY
  %loadMem_40aefe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 33
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %PC.i1994 = bitcast %union.anon* %2559 to i64*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 1
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %EAX.i1995 = bitcast %union.anon* %2562 to i32*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 5
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %RCX.i1996 = bitcast %union.anon* %2565 to i64*
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 15
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %RBP.i1997 = bitcast %union.anon* %2568 to i64*
  %2569 = load i64, i64* %RBP.i1997
  %2570 = load i64, i64* %RCX.i1996
  %2571 = mul i64 %2570, 4
  %2572 = add i64 %2569, -48
  %2573 = add i64 %2572, %2571
  %2574 = load i32, i32* %EAX.i1995
  %2575 = zext i32 %2574 to i64
  %2576 = load i64, i64* %PC.i1994
  %2577 = add i64 %2576, 4
  store i64 %2577, i64* %PC.i1994
  %2578 = inttoptr i64 %2573 to i32*
  store i32 %2574, i32* %2578
  store %struct.Memory* %loadMem_40aefe, %struct.Memory** %MEMORY
  %loadMem_40af02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2580 = getelementptr inbounds %struct.GPR, %struct.GPR* %2579, i32 0, i32 33
  %2581 = getelementptr inbounds %struct.Reg, %struct.Reg* %2580, i32 0, i32 0
  %PC.i1992 = bitcast %union.anon* %2581 to i64*
  %2582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2583 = getelementptr inbounds %struct.GPR, %struct.GPR* %2582, i32 0, i32 5
  %2584 = getelementptr inbounds %struct.Reg, %struct.Reg* %2583, i32 0, i32 0
  %RCX.i1993 = bitcast %union.anon* %2584 to i64*
  %2585 = load i64, i64* %PC.i1992
  %2586 = add i64 %2585, 8
  store i64 %2586, i64* %PC.i1992
  %2587 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2587, i64* %RCX.i1993, align 8
  store %struct.Memory* %loadMem_40af02, %struct.Memory** %MEMORY
  %loadMem_40af0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2589 = getelementptr inbounds %struct.GPR, %struct.GPR* %2588, i32 0, i32 33
  %2590 = getelementptr inbounds %struct.Reg, %struct.Reg* %2589, i32 0, i32 0
  %PC.i1990 = bitcast %union.anon* %2590 to i64*
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2592 = getelementptr inbounds %struct.GPR, %struct.GPR* %2591, i32 0, i32 5
  %2593 = getelementptr inbounds %struct.Reg, %struct.Reg* %2592, i32 0, i32 0
  %RCX.i1991 = bitcast %union.anon* %2593 to i64*
  %2594 = load i64, i64* %RCX.i1991
  %2595 = load i64, i64* %PC.i1990
  %2596 = add i64 %2595, 7
  store i64 %2596, i64* %PC.i1990
  %2597 = add i64 13112, %2594
  store i64 %2597, i64* %RCX.i1991, align 8
  %2598 = icmp ult i64 %2597, %2594
  %2599 = icmp ult i64 %2597, 13112
  %2600 = or i1 %2598, %2599
  %2601 = zext i1 %2600 to i8
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2601, i8* %2602, align 1
  %2603 = trunc i64 %2597 to i32
  %2604 = and i32 %2603, 255
  %2605 = call i32 @llvm.ctpop.i32(i32 %2604)
  %2606 = trunc i32 %2605 to i8
  %2607 = and i8 %2606, 1
  %2608 = xor i8 %2607, 1
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2608, i8* %2609, align 1
  %2610 = xor i64 13112, %2594
  %2611 = xor i64 %2610, %2597
  %2612 = lshr i64 %2611, 4
  %2613 = trunc i64 %2612 to i8
  %2614 = and i8 %2613, 1
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2614, i8* %2615, align 1
  %2616 = icmp eq i64 %2597, 0
  %2617 = zext i1 %2616 to i8
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2617, i8* %2618, align 1
  %2619 = lshr i64 %2597, 63
  %2620 = trunc i64 %2619 to i8
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2620, i8* %2621, align 1
  %2622 = lshr i64 %2594, 63
  %2623 = xor i64 %2619, %2622
  %2624 = add i64 %2623, %2619
  %2625 = icmp eq i64 %2624, 2
  %2626 = zext i1 %2625 to i8
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2626, i8* %2627, align 1
  store %struct.Memory* %loadMem_40af0a, %struct.Memory** %MEMORY
  %loadMem_40af11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 33
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %PC.i1987 = bitcast %union.anon* %2630 to i64*
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2632 = getelementptr inbounds %struct.GPR, %struct.GPR* %2631, i32 0, i32 7
  %2633 = getelementptr inbounds %struct.Reg, %struct.Reg* %2632, i32 0, i32 0
  %RDX.i1988 = bitcast %union.anon* %2633 to i64*
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 15
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %RBP.i1989 = bitcast %union.anon* %2636 to i64*
  %2637 = load i64, i64* %RBP.i1989
  %2638 = sub i64 %2637, 16
  %2639 = load i64, i64* %PC.i1987
  %2640 = add i64 %2639, 4
  store i64 %2640, i64* %PC.i1987
  %2641 = inttoptr i64 %2638 to i32*
  %2642 = load i32, i32* %2641
  %2643 = sext i32 %2642 to i64
  store i64 %2643, i64* %RDX.i1988, align 8
  store %struct.Memory* %loadMem_40af11, %struct.Memory** %MEMORY
  %loadMem_40af15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2645 = getelementptr inbounds %struct.GPR, %struct.GPR* %2644, i32 0, i32 33
  %2646 = getelementptr inbounds %struct.Reg, %struct.Reg* %2645, i32 0, i32 0
  %PC.i1985 = bitcast %union.anon* %2646 to i64*
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 7
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %RDX.i1986 = bitcast %union.anon* %2649 to i64*
  %2650 = load i64, i64* %RDX.i1986
  %2651 = load i64, i64* %PC.i1985
  %2652 = add i64 %2651, 4
  store i64 %2652, i64* %PC.i1985
  %2653 = shl i64 %2650, 5
  %2654 = icmp slt i64 %2653, 0
  %2655 = shl i64 %2653, 1
  store i64 %2655, i64* %RDX.i1986, align 8
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2657 = zext i1 %2654 to i8
  store i8 %2657, i8* %2656, align 1
  %2658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2659 = trunc i64 %2655 to i32
  %2660 = and i32 %2659, 254
  %2661 = call i32 @llvm.ctpop.i32(i32 %2660)
  %2662 = trunc i32 %2661 to i8
  %2663 = and i8 %2662, 1
  %2664 = xor i8 %2663, 1
  store i8 %2664, i8* %2658, align 1
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2665, align 1
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2667 = icmp eq i64 %2655, 0
  %2668 = zext i1 %2667 to i8
  store i8 %2668, i8* %2666, align 1
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2670 = lshr i64 %2655, 63
  %2671 = trunc i64 %2670 to i8
  store i8 %2671, i8* %2669, align 1
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2672, align 1
  store %struct.Memory* %loadMem_40af15, %struct.Memory** %MEMORY
  %loadMem_40af19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2674 = getelementptr inbounds %struct.GPR, %struct.GPR* %2673, i32 0, i32 33
  %2675 = getelementptr inbounds %struct.Reg, %struct.Reg* %2674, i32 0, i32 0
  %PC.i1982 = bitcast %union.anon* %2675 to i64*
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2677 = getelementptr inbounds %struct.GPR, %struct.GPR* %2676, i32 0, i32 5
  %2678 = getelementptr inbounds %struct.Reg, %struct.Reg* %2677, i32 0, i32 0
  %RCX.i1983 = bitcast %union.anon* %2678 to i64*
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 7
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %RDX.i1984 = bitcast %union.anon* %2681 to i64*
  %2682 = load i64, i64* %RCX.i1983
  %2683 = load i64, i64* %RDX.i1984
  %2684 = load i64, i64* %PC.i1982
  %2685 = add i64 %2684, 3
  store i64 %2685, i64* %PC.i1982
  %2686 = add i64 %2683, %2682
  store i64 %2686, i64* %RCX.i1983, align 8
  %2687 = icmp ult i64 %2686, %2682
  %2688 = icmp ult i64 %2686, %2683
  %2689 = or i1 %2687, %2688
  %2690 = zext i1 %2689 to i8
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2690, i8* %2691, align 1
  %2692 = trunc i64 %2686 to i32
  %2693 = and i32 %2692, 255
  %2694 = call i32 @llvm.ctpop.i32(i32 %2693)
  %2695 = trunc i32 %2694 to i8
  %2696 = and i8 %2695, 1
  %2697 = xor i8 %2696, 1
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2697, i8* %2698, align 1
  %2699 = xor i64 %2683, %2682
  %2700 = xor i64 %2699, %2686
  %2701 = lshr i64 %2700, 4
  %2702 = trunc i64 %2701 to i8
  %2703 = and i8 %2702, 1
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2703, i8* %2704, align 1
  %2705 = icmp eq i64 %2686, 0
  %2706 = zext i1 %2705 to i8
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2706, i8* %2707, align 1
  %2708 = lshr i64 %2686, 63
  %2709 = trunc i64 %2708 to i8
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2709, i8* %2710, align 1
  %2711 = lshr i64 %2682, 63
  %2712 = lshr i64 %2683, 63
  %2713 = xor i64 %2708, %2711
  %2714 = xor i64 %2708, %2712
  %2715 = add i64 %2713, %2714
  %2716 = icmp eq i64 %2715, 2
  %2717 = zext i1 %2716 to i8
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2717, i8* %2718, align 1
  store %struct.Memory* %loadMem_40af19, %struct.Memory** %MEMORY
  %loadMem_40af1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 33
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %PC.i1979 = bitcast %union.anon* %2721 to i64*
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 7
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %RDX.i1980 = bitcast %union.anon* %2724 to i64*
  %2725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2726 = getelementptr inbounds %struct.GPR, %struct.GPR* %2725, i32 0, i32 15
  %2727 = getelementptr inbounds %struct.Reg, %struct.Reg* %2726, i32 0, i32 0
  %RBP.i1981 = bitcast %union.anon* %2727 to i64*
  %2728 = load i64, i64* %RBP.i1981
  %2729 = sub i64 %2728, 20
  %2730 = load i64, i64* %PC.i1979
  %2731 = add i64 %2730, 4
  store i64 %2731, i64* %PC.i1979
  %2732 = inttoptr i64 %2729 to i32*
  %2733 = load i32, i32* %2732
  %2734 = sext i32 %2733 to i64
  store i64 %2734, i64* %RDX.i1980, align 8
  store %struct.Memory* %loadMem_40af1c, %struct.Memory** %MEMORY
  %loadMem_40af20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 33
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %PC.i1975 = bitcast %union.anon* %2737 to i64*
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2739 = getelementptr inbounds %struct.GPR, %struct.GPR* %2738, i32 0, i32 1
  %2740 = getelementptr inbounds %struct.Reg, %struct.Reg* %2739, i32 0, i32 0
  %RAX.i1976 = bitcast %union.anon* %2740 to i64*
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 5
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %RCX.i1977 = bitcast %union.anon* %2743 to i64*
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2745 = getelementptr inbounds %struct.GPR, %struct.GPR* %2744, i32 0, i32 7
  %2746 = getelementptr inbounds %struct.Reg, %struct.Reg* %2745, i32 0, i32 0
  %RDX.i1978 = bitcast %union.anon* %2746 to i64*
  %2747 = load i64, i64* %RCX.i1977
  %2748 = load i64, i64* %RDX.i1978
  %2749 = mul i64 %2748, 4
  %2750 = add i64 %2749, %2747
  %2751 = load i64, i64* %PC.i1975
  %2752 = add i64 %2751, 3
  store i64 %2752, i64* %PC.i1975
  %2753 = inttoptr i64 %2750 to i32*
  %2754 = load i32, i32* %2753
  %2755 = zext i32 %2754 to i64
  store i64 %2755, i64* %RAX.i1976, align 8
  store %struct.Memory* %loadMem_40af20, %struct.Memory** %MEMORY
  %loadMem_40af23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2757 = getelementptr inbounds %struct.GPR, %struct.GPR* %2756, i32 0, i32 33
  %2758 = getelementptr inbounds %struct.Reg, %struct.Reg* %2757, i32 0, i32 0
  %PC.i1973 = bitcast %union.anon* %2758 to i64*
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2760 = getelementptr inbounds %struct.GPR, %struct.GPR* %2759, i32 0, i32 5
  %2761 = getelementptr inbounds %struct.Reg, %struct.Reg* %2760, i32 0, i32 0
  %RCX.i1974 = bitcast %union.anon* %2761 to i64*
  %2762 = load i64, i64* %PC.i1973
  %2763 = add i64 %2762, 8
  store i64 %2763, i64* %PC.i1973
  %2764 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2764, i64* %RCX.i1974, align 8
  store %struct.Memory* %loadMem_40af23, %struct.Memory** %MEMORY
  %loadMem_40af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 33
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %2767 to i64*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 5
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %RCX.i1972 = bitcast %union.anon* %2770 to i64*
  %2771 = load i64, i64* %RCX.i1972
  %2772 = load i64, i64* %PC.i1971
  %2773 = add i64 %2772, 7
  store i64 %2773, i64* %PC.i1971
  %2774 = add i64 13112, %2771
  store i64 %2774, i64* %RCX.i1972, align 8
  %2775 = icmp ult i64 %2774, %2771
  %2776 = icmp ult i64 %2774, 13112
  %2777 = or i1 %2775, %2776
  %2778 = zext i1 %2777 to i8
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2778, i8* %2779, align 1
  %2780 = trunc i64 %2774 to i32
  %2781 = and i32 %2780, 255
  %2782 = call i32 @llvm.ctpop.i32(i32 %2781)
  %2783 = trunc i32 %2782 to i8
  %2784 = and i8 %2783, 1
  %2785 = xor i8 %2784, 1
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2785, i8* %2786, align 1
  %2787 = xor i64 13112, %2771
  %2788 = xor i64 %2787, %2774
  %2789 = lshr i64 %2788, 4
  %2790 = trunc i64 %2789 to i8
  %2791 = and i8 %2790, 1
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2791, i8* %2792, align 1
  %2793 = icmp eq i64 %2774, 0
  %2794 = zext i1 %2793 to i8
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2794, i8* %2795, align 1
  %2796 = lshr i64 %2774, 63
  %2797 = trunc i64 %2796 to i8
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2797, i8* %2798, align 1
  %2799 = lshr i64 %2771, 63
  %2800 = xor i64 %2796, %2799
  %2801 = add i64 %2800, %2796
  %2802 = icmp eq i64 %2801, 2
  %2803 = zext i1 %2802 to i8
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2803, i8* %2804, align 1
  store %struct.Memory* %loadMem_40af2b, %struct.Memory** %MEMORY
  %loadMem_40af32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2806 = getelementptr inbounds %struct.GPR, %struct.GPR* %2805, i32 0, i32 33
  %2807 = getelementptr inbounds %struct.Reg, %struct.Reg* %2806, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %2807 to i64*
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2809 = getelementptr inbounds %struct.GPR, %struct.GPR* %2808, i32 0, i32 7
  %2810 = getelementptr inbounds %struct.Reg, %struct.Reg* %2809, i32 0, i32 0
  %RDX.i1969 = bitcast %union.anon* %2810 to i64*
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 15
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %RBP.i1970 = bitcast %union.anon* %2813 to i64*
  %2814 = load i64, i64* %RBP.i1970
  %2815 = sub i64 %2814, 24
  %2816 = load i64, i64* %PC.i1968
  %2817 = add i64 %2816, 4
  store i64 %2817, i64* %PC.i1968
  %2818 = inttoptr i64 %2815 to i32*
  %2819 = load i32, i32* %2818
  %2820 = sext i32 %2819 to i64
  store i64 %2820, i64* %RDX.i1969, align 8
  store %struct.Memory* %loadMem_40af32, %struct.Memory** %MEMORY
  %loadMem_40af36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2822 = getelementptr inbounds %struct.GPR, %struct.GPR* %2821, i32 0, i32 33
  %2823 = getelementptr inbounds %struct.Reg, %struct.Reg* %2822, i32 0, i32 0
  %PC.i1966 = bitcast %union.anon* %2823 to i64*
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2825 = getelementptr inbounds %struct.GPR, %struct.GPR* %2824, i32 0, i32 7
  %2826 = getelementptr inbounds %struct.Reg, %struct.Reg* %2825, i32 0, i32 0
  %RDX.i1967 = bitcast %union.anon* %2826 to i64*
  %2827 = load i64, i64* %RDX.i1967
  %2828 = load i64, i64* %PC.i1966
  %2829 = add i64 %2828, 4
  store i64 %2829, i64* %PC.i1966
  %2830 = shl i64 %2827, 5
  %2831 = icmp slt i64 %2830, 0
  %2832 = shl i64 %2830, 1
  store i64 %2832, i64* %RDX.i1967, align 8
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2834 = zext i1 %2831 to i8
  store i8 %2834, i8* %2833, align 1
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2836 = trunc i64 %2832 to i32
  %2837 = and i32 %2836, 254
  %2838 = call i32 @llvm.ctpop.i32(i32 %2837)
  %2839 = trunc i32 %2838 to i8
  %2840 = and i8 %2839, 1
  %2841 = xor i8 %2840, 1
  store i8 %2841, i8* %2835, align 1
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2842, align 1
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2844 = icmp eq i64 %2832, 0
  %2845 = zext i1 %2844 to i8
  store i8 %2845, i8* %2843, align 1
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2847 = lshr i64 %2832, 63
  %2848 = trunc i64 %2847 to i8
  store i8 %2848, i8* %2846, align 1
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2849, align 1
  store %struct.Memory* %loadMem_40af36, %struct.Memory** %MEMORY
  %loadMem_40af3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 33
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %PC.i1963 = bitcast %union.anon* %2852 to i64*
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2854 = getelementptr inbounds %struct.GPR, %struct.GPR* %2853, i32 0, i32 5
  %2855 = getelementptr inbounds %struct.Reg, %struct.Reg* %2854, i32 0, i32 0
  %RCX.i1964 = bitcast %union.anon* %2855 to i64*
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 7
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %RDX.i1965 = bitcast %union.anon* %2858 to i64*
  %2859 = load i64, i64* %RCX.i1964
  %2860 = load i64, i64* %RDX.i1965
  %2861 = load i64, i64* %PC.i1963
  %2862 = add i64 %2861, 3
  store i64 %2862, i64* %PC.i1963
  %2863 = add i64 %2860, %2859
  store i64 %2863, i64* %RCX.i1964, align 8
  %2864 = icmp ult i64 %2863, %2859
  %2865 = icmp ult i64 %2863, %2860
  %2866 = or i1 %2864, %2865
  %2867 = zext i1 %2866 to i8
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2867, i8* %2868, align 1
  %2869 = trunc i64 %2863 to i32
  %2870 = and i32 %2869, 255
  %2871 = call i32 @llvm.ctpop.i32(i32 %2870)
  %2872 = trunc i32 %2871 to i8
  %2873 = and i8 %2872, 1
  %2874 = xor i8 %2873, 1
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2874, i8* %2875, align 1
  %2876 = xor i64 %2860, %2859
  %2877 = xor i64 %2876, %2863
  %2878 = lshr i64 %2877, 4
  %2879 = trunc i64 %2878 to i8
  %2880 = and i8 %2879, 1
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2880, i8* %2881, align 1
  %2882 = icmp eq i64 %2863, 0
  %2883 = zext i1 %2882 to i8
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2883, i8* %2884, align 1
  %2885 = lshr i64 %2863, 63
  %2886 = trunc i64 %2885 to i8
  %2887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2886, i8* %2887, align 1
  %2888 = lshr i64 %2859, 63
  %2889 = lshr i64 %2860, 63
  %2890 = xor i64 %2885, %2888
  %2891 = xor i64 %2885, %2889
  %2892 = add i64 %2890, %2891
  %2893 = icmp eq i64 %2892, 2
  %2894 = zext i1 %2893 to i8
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2894, i8* %2895, align 1
  store %struct.Memory* %loadMem_40af3a, %struct.Memory** %MEMORY
  %loadMem_40af3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2897 = getelementptr inbounds %struct.GPR, %struct.GPR* %2896, i32 0, i32 33
  %2898 = getelementptr inbounds %struct.Reg, %struct.Reg* %2897, i32 0, i32 0
  %PC.i1960 = bitcast %union.anon* %2898 to i64*
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2900 = getelementptr inbounds %struct.GPR, %struct.GPR* %2899, i32 0, i32 7
  %2901 = getelementptr inbounds %struct.Reg, %struct.Reg* %2900, i32 0, i32 0
  %RDX.i1961 = bitcast %union.anon* %2901 to i64*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 15
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %RBP.i1962 = bitcast %union.anon* %2904 to i64*
  %2905 = load i64, i64* %RBP.i1962
  %2906 = sub i64 %2905, 20
  %2907 = load i64, i64* %PC.i1960
  %2908 = add i64 %2907, 4
  store i64 %2908, i64* %PC.i1960
  %2909 = inttoptr i64 %2906 to i32*
  %2910 = load i32, i32* %2909
  %2911 = sext i32 %2910 to i64
  store i64 %2911, i64* %RDX.i1961, align 8
  store %struct.Memory* %loadMem_40af3d, %struct.Memory** %MEMORY
  %loadMem_40af41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2913 = getelementptr inbounds %struct.GPR, %struct.GPR* %2912, i32 0, i32 33
  %2914 = getelementptr inbounds %struct.Reg, %struct.Reg* %2913, i32 0, i32 0
  %PC.i1956 = bitcast %union.anon* %2914 to i64*
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 1
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %RAX.i1957 = bitcast %union.anon* %2917 to i64*
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2919 = getelementptr inbounds %struct.GPR, %struct.GPR* %2918, i32 0, i32 5
  %2920 = getelementptr inbounds %struct.Reg, %struct.Reg* %2919, i32 0, i32 0
  %RCX.i1958 = bitcast %union.anon* %2920 to i64*
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 7
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %RDX.i1959 = bitcast %union.anon* %2923 to i64*
  %2924 = load i64, i64* %RAX.i1957
  %2925 = load i64, i64* %RCX.i1958
  %2926 = load i64, i64* %RDX.i1959
  %2927 = mul i64 %2926, 4
  %2928 = add i64 %2927, %2925
  %2929 = load i64, i64* %PC.i1956
  %2930 = add i64 %2929, 3
  store i64 %2930, i64* %PC.i1956
  %2931 = trunc i64 %2924 to i32
  %2932 = inttoptr i64 %2928 to i32*
  %2933 = load i32, i32* %2932
  %2934 = sub i32 %2931, %2933
  %2935 = zext i32 %2934 to i64
  store i64 %2935, i64* %RAX.i1957, align 8
  %2936 = icmp ult i32 %2931, %2933
  %2937 = zext i1 %2936 to i8
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2937, i8* %2938, align 1
  %2939 = and i32 %2934, 255
  %2940 = call i32 @llvm.ctpop.i32(i32 %2939)
  %2941 = trunc i32 %2940 to i8
  %2942 = and i8 %2941, 1
  %2943 = xor i8 %2942, 1
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2943, i8* %2944, align 1
  %2945 = xor i32 %2933, %2931
  %2946 = xor i32 %2945, %2934
  %2947 = lshr i32 %2946, 4
  %2948 = trunc i32 %2947 to i8
  %2949 = and i8 %2948, 1
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2949, i8* %2950, align 1
  %2951 = icmp eq i32 %2934, 0
  %2952 = zext i1 %2951 to i8
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2952, i8* %2953, align 1
  %2954 = lshr i32 %2934, 31
  %2955 = trunc i32 %2954 to i8
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2955, i8* %2956, align 1
  %2957 = lshr i32 %2931, 31
  %2958 = lshr i32 %2933, 31
  %2959 = xor i32 %2958, %2957
  %2960 = xor i32 %2954, %2957
  %2961 = add i32 %2960, %2959
  %2962 = icmp eq i32 %2961, 2
  %2963 = zext i1 %2962 to i8
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2963, i8* %2964, align 1
  store %struct.Memory* %loadMem_40af41, %struct.Memory** %MEMORY
  %loadMem_40af44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i1953 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 5
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %RCX.i1954 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 15
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %RBP.i1955 = bitcast %union.anon* %2973 to i64*
  %2974 = load i64, i64* %RBP.i1955
  %2975 = sub i64 %2974, 24
  %2976 = load i64, i64* %PC.i1953
  %2977 = add i64 %2976, 4
  store i64 %2977, i64* %PC.i1953
  %2978 = inttoptr i64 %2975 to i32*
  %2979 = load i32, i32* %2978
  %2980 = sext i32 %2979 to i64
  store i64 %2980, i64* %RCX.i1954, align 8
  store %struct.Memory* %loadMem_40af44, %struct.Memory** %MEMORY
  %loadMem_40af48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 33
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %PC.i1949 = bitcast %union.anon* %2983 to i64*
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 1
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %EAX.i1950 = bitcast %union.anon* %2986 to i32*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 5
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %RCX.i1951 = bitcast %union.anon* %2989 to i64*
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 15
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %RBP.i1952 = bitcast %union.anon* %2992 to i64*
  %2993 = load i64, i64* %RBP.i1952
  %2994 = load i64, i64* %RCX.i1951
  %2995 = mul i64 %2994, 4
  %2996 = add i64 %2993, -48
  %2997 = add i64 %2996, %2995
  %2998 = load i32, i32* %EAX.i1950
  %2999 = zext i32 %2998 to i64
  %3000 = load i64, i64* %PC.i1949
  %3001 = add i64 %3000, 4
  store i64 %3001, i64* %PC.i1949
  %3002 = inttoptr i64 %2997 to i32*
  store i32 %2998, i32* %3002
  store %struct.Memory* %loadMem_40af48, %struct.Memory** %MEMORY
  %loadMem_40af4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3004 = getelementptr inbounds %struct.GPR, %struct.GPR* %3003, i32 0, i32 33
  %3005 = getelementptr inbounds %struct.Reg, %struct.Reg* %3004, i32 0, i32 0
  %PC.i1946 = bitcast %union.anon* %3005 to i64*
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3007 = getelementptr inbounds %struct.GPR, %struct.GPR* %3006, i32 0, i32 1
  %3008 = getelementptr inbounds %struct.Reg, %struct.Reg* %3007, i32 0, i32 0
  %RAX.i1947 = bitcast %union.anon* %3008 to i64*
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3010 = getelementptr inbounds %struct.GPR, %struct.GPR* %3009, i32 0, i32 15
  %3011 = getelementptr inbounds %struct.Reg, %struct.Reg* %3010, i32 0, i32 0
  %RBP.i1948 = bitcast %union.anon* %3011 to i64*
  %3012 = load i64, i64* %RBP.i1948
  %3013 = sub i64 %3012, 16
  %3014 = load i64, i64* %PC.i1946
  %3015 = add i64 %3014, 3
  store i64 %3015, i64* %PC.i1946
  %3016 = inttoptr i64 %3013 to i32*
  %3017 = load i32, i32* %3016
  %3018 = zext i32 %3017 to i64
  store i64 %3018, i64* %RAX.i1947, align 8
  store %struct.Memory* %loadMem_40af4c, %struct.Memory** %MEMORY
  %loadMem_40af4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3020 = getelementptr inbounds %struct.GPR, %struct.GPR* %3019, i32 0, i32 33
  %3021 = getelementptr inbounds %struct.Reg, %struct.Reg* %3020, i32 0, i32 0
  %PC.i1944 = bitcast %union.anon* %3021 to i64*
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 1
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %RAX.i1945 = bitcast %union.anon* %3024 to i64*
  %3025 = load i64, i64* %RAX.i1945
  %3026 = load i64, i64* %PC.i1944
  %3027 = add i64 %3026, 3
  store i64 %3027, i64* %PC.i1944
  %3028 = trunc i64 %3025 to i32
  %3029 = add i32 1, %3028
  %3030 = zext i32 %3029 to i64
  store i64 %3030, i64* %RAX.i1945, align 8
  %3031 = icmp ult i32 %3029, %3028
  %3032 = icmp ult i32 %3029, 1
  %3033 = or i1 %3031, %3032
  %3034 = zext i1 %3033 to i8
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3034, i8* %3035, align 1
  %3036 = and i32 %3029, 255
  %3037 = call i32 @llvm.ctpop.i32(i32 %3036)
  %3038 = trunc i32 %3037 to i8
  %3039 = and i8 %3038, 1
  %3040 = xor i8 %3039, 1
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3040, i8* %3041, align 1
  %3042 = xor i64 1, %3025
  %3043 = trunc i64 %3042 to i32
  %3044 = xor i32 %3043, %3029
  %3045 = lshr i32 %3044, 4
  %3046 = trunc i32 %3045 to i8
  %3047 = and i8 %3046, 1
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3047, i8* %3048, align 1
  %3049 = icmp eq i32 %3029, 0
  %3050 = zext i1 %3049 to i8
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3050, i8* %3051, align 1
  %3052 = lshr i32 %3029, 31
  %3053 = trunc i32 %3052 to i8
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3053, i8* %3054, align 1
  %3055 = lshr i32 %3028, 31
  %3056 = xor i32 %3052, %3055
  %3057 = add i32 %3056, %3052
  %3058 = icmp eq i32 %3057, 2
  %3059 = zext i1 %3058 to i8
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3059, i8* %3060, align 1
  store %struct.Memory* %loadMem_40af4f, %struct.Memory** %MEMORY
  %loadMem_40af52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 33
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %PC.i1941 = bitcast %union.anon* %3063 to i64*
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 1
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %EAX.i1942 = bitcast %union.anon* %3066 to i32*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 15
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %RBP.i1943 = bitcast %union.anon* %3069 to i64*
  %3070 = load i64, i64* %RBP.i1943
  %3071 = sub i64 %3070, 16
  %3072 = load i32, i32* %EAX.i1942
  %3073 = zext i32 %3072 to i64
  %3074 = load i64, i64* %PC.i1941
  %3075 = add i64 %3074, 3
  store i64 %3075, i64* %PC.i1941
  %3076 = inttoptr i64 %3071 to i32*
  store i32 %3072, i32* %3076
  store %struct.Memory* %loadMem_40af52, %struct.Memory** %MEMORY
  %loadMem_40af55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i1940 = bitcast %union.anon* %3079 to i64*
  %3080 = load i64, i64* %PC.i1940
  %3081 = add i64 %3080, -178
  %3082 = load i64, i64* %PC.i1940
  %3083 = add i64 %3082, 5
  store i64 %3083, i64* %PC.i1940
  %3084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3081, i64* %3084, align 8
  store %struct.Memory* %loadMem_40af55, %struct.Memory** %MEMORY
  br label %block_.L_40aea3

block_.L_40af5a:                                  ; preds = %block_.L_40aea3
  %loadMem_40af5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 33
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %PC.i1937 = bitcast %union.anon* %3087 to i64*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 1
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %RAX.i1938 = bitcast %union.anon* %3090 to i64*
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 15
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %RBP.i1939 = bitcast %union.anon* %3093 to i64*
  %3094 = load i64, i64* %RBP.i1939
  %3095 = sub i64 %3094, 48
  %3096 = load i64, i64* %PC.i1937
  %3097 = add i64 %3096, 3
  store i64 %3097, i64* %PC.i1937
  %3098 = inttoptr i64 %3095 to i32*
  %3099 = load i32, i32* %3098
  %3100 = zext i32 %3099 to i64
  store i64 %3100, i64* %RAX.i1938, align 8
  store %struct.Memory* %loadMem_40af5a, %struct.Memory** %MEMORY
  %loadMem_40af5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 33
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %PC.i1934 = bitcast %union.anon* %3103 to i64*
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3105 = getelementptr inbounds %struct.GPR, %struct.GPR* %3104, i32 0, i32 1
  %3106 = getelementptr inbounds %struct.Reg, %struct.Reg* %3105, i32 0, i32 0
  %RAX.i1935 = bitcast %union.anon* %3106 to i64*
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3108 = getelementptr inbounds %struct.GPR, %struct.GPR* %3107, i32 0, i32 15
  %3109 = getelementptr inbounds %struct.Reg, %struct.Reg* %3108, i32 0, i32 0
  %RBP.i1936 = bitcast %union.anon* %3109 to i64*
  %3110 = load i64, i64* %RAX.i1935
  %3111 = load i64, i64* %RBP.i1936
  %3112 = sub i64 %3111, 44
  %3113 = load i64, i64* %PC.i1934
  %3114 = add i64 %3113, 3
  store i64 %3114, i64* %PC.i1934
  %3115 = trunc i64 %3110 to i32
  %3116 = inttoptr i64 %3112 to i32*
  %3117 = load i32, i32* %3116
  %3118 = add i32 %3117, %3115
  %3119 = zext i32 %3118 to i64
  store i64 %3119, i64* %RAX.i1935, align 8
  %3120 = icmp ult i32 %3118, %3115
  %3121 = icmp ult i32 %3118, %3117
  %3122 = or i1 %3120, %3121
  %3123 = zext i1 %3122 to i8
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3123, i8* %3124, align 1
  %3125 = and i32 %3118, 255
  %3126 = call i32 @llvm.ctpop.i32(i32 %3125)
  %3127 = trunc i32 %3126 to i8
  %3128 = and i8 %3127, 1
  %3129 = xor i8 %3128, 1
  %3130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3129, i8* %3130, align 1
  %3131 = xor i32 %3117, %3115
  %3132 = xor i32 %3131, %3118
  %3133 = lshr i32 %3132, 4
  %3134 = trunc i32 %3133 to i8
  %3135 = and i8 %3134, 1
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3135, i8* %3136, align 1
  %3137 = icmp eq i32 %3118, 0
  %3138 = zext i1 %3137 to i8
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3138, i8* %3139, align 1
  %3140 = lshr i32 %3118, 31
  %3141 = trunc i32 %3140 to i8
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3141, i8* %3142, align 1
  %3143 = lshr i32 %3115, 31
  %3144 = lshr i32 %3117, 31
  %3145 = xor i32 %3140, %3143
  %3146 = xor i32 %3140, %3144
  %3147 = add i32 %3145, %3146
  %3148 = icmp eq i32 %3147, 2
  %3149 = zext i1 %3148 to i8
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3149, i8* %3150, align 1
  store %struct.Memory* %loadMem_40af5d, %struct.Memory** %MEMORY
  %loadMem_40af60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 33
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %PC.i1932 = bitcast %union.anon* %3153 to i64*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 5
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %RCX.i1933 = bitcast %union.anon* %3156 to i64*
  %3157 = load i64, i64* %PC.i1932
  %3158 = add i64 %3157, 8
  store i64 %3158, i64* %PC.i1932
  %3159 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3159, i64* %RCX.i1933, align 8
  store %struct.Memory* %loadMem_40af60, %struct.Memory** %MEMORY
  %loadMem_40af68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 33
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %PC.i1929 = bitcast %union.anon* %3162 to i64*
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 7
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %RDX.i1930 = bitcast %union.anon* %3165 to i64*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3167 = getelementptr inbounds %struct.GPR, %struct.GPR* %3166, i32 0, i32 15
  %3168 = getelementptr inbounds %struct.Reg, %struct.Reg* %3167, i32 0, i32 0
  %RBP.i1931 = bitcast %union.anon* %3168 to i64*
  %3169 = load i64, i64* %RBP.i1931
  %3170 = sub i64 %3169, 20
  %3171 = load i64, i64* %PC.i1929
  %3172 = add i64 %3171, 4
  store i64 %3172, i64* %PC.i1929
  %3173 = inttoptr i64 %3170 to i32*
  %3174 = load i32, i32* %3173
  %3175 = sext i32 %3174 to i64
  store i64 %3175, i64* %RDX.i1930, align 8
  store %struct.Memory* %loadMem_40af68, %struct.Memory** %MEMORY
  %loadMem_40af6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3177 = getelementptr inbounds %struct.GPR, %struct.GPR* %3176, i32 0, i32 33
  %3178 = getelementptr inbounds %struct.Reg, %struct.Reg* %3177, i32 0, i32 0
  %PC.i1925 = bitcast %union.anon* %3178 to i64*
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3180 = getelementptr inbounds %struct.GPR, %struct.GPR* %3179, i32 0, i32 1
  %3181 = getelementptr inbounds %struct.Reg, %struct.Reg* %3180, i32 0, i32 0
  %EAX.i1926 = bitcast %union.anon* %3181 to i32*
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 5
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %RCX.i1927 = bitcast %union.anon* %3184 to i64*
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 7
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %RDX.i1928 = bitcast %union.anon* %3187 to i64*
  %3188 = load i64, i64* %RCX.i1927
  %3189 = load i64, i64* %RDX.i1928
  %3190 = mul i64 %3189, 4
  %3191 = add i64 %3188, 13112
  %3192 = add i64 %3191, %3190
  %3193 = load i32, i32* %EAX.i1926
  %3194 = zext i32 %3193 to i64
  %3195 = load i64, i64* %PC.i1925
  %3196 = add i64 %3195, 7
  store i64 %3196, i64* %PC.i1925
  %3197 = inttoptr i64 %3192 to i32*
  store i32 %3193, i32* %3197
  store %struct.Memory* %loadMem_40af6c, %struct.Memory** %MEMORY
  %loadMem_40af73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 33
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %PC.i1922 = bitcast %union.anon* %3200 to i64*
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 1
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %RAX.i1923 = bitcast %union.anon* %3203 to i64*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 15
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %RBP.i1924 = bitcast %union.anon* %3206 to i64*
  %3207 = load i64, i64* %RBP.i1924
  %3208 = sub i64 %3207, 48
  %3209 = load i64, i64* %PC.i1922
  %3210 = add i64 %3209, 3
  store i64 %3210, i64* %PC.i1922
  %3211 = inttoptr i64 %3208 to i32*
  %3212 = load i32, i32* %3211
  %3213 = zext i32 %3212 to i64
  store i64 %3213, i64* %RAX.i1923, align 8
  store %struct.Memory* %loadMem_40af73, %struct.Memory** %MEMORY
  %loadMem_40af76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 33
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %PC.i1919 = bitcast %union.anon* %3216 to i64*
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3218 = getelementptr inbounds %struct.GPR, %struct.GPR* %3217, i32 0, i32 1
  %3219 = getelementptr inbounds %struct.Reg, %struct.Reg* %3218, i32 0, i32 0
  %RAX.i1920 = bitcast %union.anon* %3219 to i64*
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3221 = getelementptr inbounds %struct.GPR, %struct.GPR* %3220, i32 0, i32 15
  %3222 = getelementptr inbounds %struct.Reg, %struct.Reg* %3221, i32 0, i32 0
  %RBP.i1921 = bitcast %union.anon* %3222 to i64*
  %3223 = load i64, i64* %RAX.i1920
  %3224 = load i64, i64* %RBP.i1921
  %3225 = sub i64 %3224, 44
  %3226 = load i64, i64* %PC.i1919
  %3227 = add i64 %3226, 3
  store i64 %3227, i64* %PC.i1919
  %3228 = trunc i64 %3223 to i32
  %3229 = inttoptr i64 %3225 to i32*
  %3230 = load i32, i32* %3229
  %3231 = sub i32 %3228, %3230
  %3232 = zext i32 %3231 to i64
  store i64 %3232, i64* %RAX.i1920, align 8
  %3233 = icmp ult i32 %3228, %3230
  %3234 = zext i1 %3233 to i8
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3234, i8* %3235, align 1
  %3236 = and i32 %3231, 255
  %3237 = call i32 @llvm.ctpop.i32(i32 %3236)
  %3238 = trunc i32 %3237 to i8
  %3239 = and i8 %3238, 1
  %3240 = xor i8 %3239, 1
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3240, i8* %3241, align 1
  %3242 = xor i32 %3230, %3228
  %3243 = xor i32 %3242, %3231
  %3244 = lshr i32 %3243, 4
  %3245 = trunc i32 %3244 to i8
  %3246 = and i8 %3245, 1
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3246, i8* %3247, align 1
  %3248 = icmp eq i32 %3231, 0
  %3249 = zext i1 %3248 to i8
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3249, i8* %3250, align 1
  %3251 = lshr i32 %3231, 31
  %3252 = trunc i32 %3251 to i8
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3252, i8* %3253, align 1
  %3254 = lshr i32 %3228, 31
  %3255 = lshr i32 %3230, 31
  %3256 = xor i32 %3255, %3254
  %3257 = xor i32 %3251, %3254
  %3258 = add i32 %3257, %3256
  %3259 = icmp eq i32 %3258, 2
  %3260 = zext i1 %3259 to i8
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3260, i8* %3261, align 1
  store %struct.Memory* %loadMem_40af76, %struct.Memory** %MEMORY
  %loadMem_40af79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 33
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %PC.i1917 = bitcast %union.anon* %3264 to i64*
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3266 = getelementptr inbounds %struct.GPR, %struct.GPR* %3265, i32 0, i32 5
  %3267 = getelementptr inbounds %struct.Reg, %struct.Reg* %3266, i32 0, i32 0
  %RCX.i1918 = bitcast %union.anon* %3267 to i64*
  %3268 = load i64, i64* %PC.i1917
  %3269 = add i64 %3268, 8
  store i64 %3269, i64* %PC.i1917
  %3270 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3270, i64* %RCX.i1918, align 8
  store %struct.Memory* %loadMem_40af79, %struct.Memory** %MEMORY
  %loadMem_40af81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3272 = getelementptr inbounds %struct.GPR, %struct.GPR* %3271, i32 0, i32 33
  %3273 = getelementptr inbounds %struct.Reg, %struct.Reg* %3272, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %3273 to i64*
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3275 = getelementptr inbounds %struct.GPR, %struct.GPR* %3274, i32 0, i32 7
  %3276 = getelementptr inbounds %struct.Reg, %struct.Reg* %3275, i32 0, i32 0
  %RDX.i1915 = bitcast %union.anon* %3276 to i64*
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3278 = getelementptr inbounds %struct.GPR, %struct.GPR* %3277, i32 0, i32 15
  %3279 = getelementptr inbounds %struct.Reg, %struct.Reg* %3278, i32 0, i32 0
  %RBP.i1916 = bitcast %union.anon* %3279 to i64*
  %3280 = load i64, i64* %RBP.i1916
  %3281 = sub i64 %3280, 20
  %3282 = load i64, i64* %PC.i1914
  %3283 = add i64 %3282, 4
  store i64 %3283, i64* %PC.i1914
  %3284 = inttoptr i64 %3281 to i32*
  %3285 = load i32, i32* %3284
  %3286 = sext i32 %3285 to i64
  store i64 %3286, i64* %RDX.i1915, align 8
  store %struct.Memory* %loadMem_40af81, %struct.Memory** %MEMORY
  %loadMem_40af85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 33
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %PC.i1910 = bitcast %union.anon* %3289 to i64*
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3291 = getelementptr inbounds %struct.GPR, %struct.GPR* %3290, i32 0, i32 1
  %3292 = getelementptr inbounds %struct.Reg, %struct.Reg* %3291, i32 0, i32 0
  %EAX.i1911 = bitcast %union.anon* %3292 to i32*
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3294 = getelementptr inbounds %struct.GPR, %struct.GPR* %3293, i32 0, i32 5
  %3295 = getelementptr inbounds %struct.Reg, %struct.Reg* %3294, i32 0, i32 0
  %RCX.i1912 = bitcast %union.anon* %3295 to i64*
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3297 = getelementptr inbounds %struct.GPR, %struct.GPR* %3296, i32 0, i32 7
  %3298 = getelementptr inbounds %struct.Reg, %struct.Reg* %3297, i32 0, i32 0
  %RDX.i1913 = bitcast %union.anon* %3298 to i64*
  %3299 = load i64, i64* %RCX.i1912
  %3300 = load i64, i64* %RDX.i1913
  %3301 = mul i64 %3300, 4
  %3302 = add i64 %3299, 13240
  %3303 = add i64 %3302, %3301
  %3304 = load i32, i32* %EAX.i1911
  %3305 = zext i32 %3304 to i64
  %3306 = load i64, i64* %PC.i1910
  %3307 = add i64 %3306, 7
  store i64 %3307, i64* %PC.i1910
  %3308 = inttoptr i64 %3303 to i32*
  store i32 %3304, i32* %3308
  store %struct.Memory* %loadMem_40af85, %struct.Memory** %MEMORY
  %loadMem_40af8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3310 = getelementptr inbounds %struct.GPR, %struct.GPR* %3309, i32 0, i32 33
  %3311 = getelementptr inbounds %struct.Reg, %struct.Reg* %3310, i32 0, i32 0
  %PC.i1907 = bitcast %union.anon* %3311 to i64*
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3313 = getelementptr inbounds %struct.GPR, %struct.GPR* %3312, i32 0, i32 1
  %3314 = getelementptr inbounds %struct.Reg, %struct.Reg* %3313, i32 0, i32 0
  %RAX.i1908 = bitcast %union.anon* %3314 to i64*
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 15
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %RBP.i1909 = bitcast %union.anon* %3317 to i64*
  %3318 = load i64, i64* %RBP.i1909
  %3319 = sub i64 %3318, 36
  %3320 = load i64, i64* %PC.i1907
  %3321 = add i64 %3320, 3
  store i64 %3321, i64* %PC.i1907
  %3322 = inttoptr i64 %3319 to i32*
  %3323 = load i32, i32* %3322
  %3324 = zext i32 %3323 to i64
  store i64 %3324, i64* %RAX.i1908, align 8
  store %struct.Memory* %loadMem_40af8c, %struct.Memory** %MEMORY
  %loadMem_40af8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 33
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %PC.i1905 = bitcast %union.anon* %3327 to i64*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 1
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %RAX.i1906 = bitcast %union.anon* %3330 to i64*
  %3331 = load i64, i64* %RAX.i1906
  %3332 = load i64, i64* %PC.i1905
  %3333 = add i64 %3332, 2
  store i64 %3333, i64* %PC.i1905
  %3334 = trunc i64 %3331 to i32
  %3335 = shl i32 %3334, 1
  %3336 = icmp slt i32 %3334, 0
  %3337 = icmp slt i32 %3335, 0
  %3338 = xor i1 %3336, %3337
  %3339 = zext i32 %3335 to i64
  store i64 %3339, i64* %RAX.i1906, align 8
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3341 = zext i1 %3336 to i8
  store i8 %3341, i8* %3340, align 1
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3343 = and i32 %3335, 254
  %3344 = call i32 @llvm.ctpop.i32(i32 %3343)
  %3345 = trunc i32 %3344 to i8
  %3346 = and i8 %3345, 1
  %3347 = xor i8 %3346, 1
  store i8 %3347, i8* %3342, align 1
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3348, align 1
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3350 = icmp eq i32 %3335, 0
  %3351 = zext i1 %3350 to i8
  store i8 %3351, i8* %3349, align 1
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3353 = lshr i32 %3335, 31
  %3354 = trunc i32 %3353 to i8
  store i8 %3354, i8* %3352, align 1
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3356 = zext i1 %3338 to i8
  store i8 %3356, i8* %3355, align 1
  store %struct.Memory* %loadMem_40af8f, %struct.Memory** %MEMORY
  %loadMem_40af92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3358 = getelementptr inbounds %struct.GPR, %struct.GPR* %3357, i32 0, i32 33
  %3359 = getelementptr inbounds %struct.Reg, %struct.Reg* %3358, i32 0, i32 0
  %PC.i1902 = bitcast %union.anon* %3359 to i64*
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 1
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %RAX.i1903 = bitcast %union.anon* %3362 to i64*
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 15
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %RBP.i1904 = bitcast %union.anon* %3365 to i64*
  %3366 = load i64, i64* %RAX.i1903
  %3367 = load i64, i64* %RBP.i1904
  %3368 = sub i64 %3367, 40
  %3369 = load i64, i64* %PC.i1902
  %3370 = add i64 %3369, 3
  store i64 %3370, i64* %PC.i1902
  %3371 = trunc i64 %3366 to i32
  %3372 = inttoptr i64 %3368 to i32*
  %3373 = load i32, i32* %3372
  %3374 = add i32 %3373, %3371
  %3375 = zext i32 %3374 to i64
  store i64 %3375, i64* %RAX.i1903, align 8
  %3376 = icmp ult i32 %3374, %3371
  %3377 = icmp ult i32 %3374, %3373
  %3378 = or i1 %3376, %3377
  %3379 = zext i1 %3378 to i8
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3379, i8* %3380, align 1
  %3381 = and i32 %3374, 255
  %3382 = call i32 @llvm.ctpop.i32(i32 %3381)
  %3383 = trunc i32 %3382 to i8
  %3384 = and i8 %3383, 1
  %3385 = xor i8 %3384, 1
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3385, i8* %3386, align 1
  %3387 = xor i32 %3373, %3371
  %3388 = xor i32 %3387, %3374
  %3389 = lshr i32 %3388, 4
  %3390 = trunc i32 %3389 to i8
  %3391 = and i8 %3390, 1
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3391, i8* %3392, align 1
  %3393 = icmp eq i32 %3374, 0
  %3394 = zext i1 %3393 to i8
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3394, i8* %3395, align 1
  %3396 = lshr i32 %3374, 31
  %3397 = trunc i32 %3396 to i8
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3397, i8* %3398, align 1
  %3399 = lshr i32 %3371, 31
  %3400 = lshr i32 %3373, 31
  %3401 = xor i32 %3396, %3399
  %3402 = xor i32 %3396, %3400
  %3403 = add i32 %3401, %3402
  %3404 = icmp eq i32 %3403, 2
  %3405 = zext i1 %3404 to i8
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3405, i8* %3406, align 1
  store %struct.Memory* %loadMem_40af92, %struct.Memory** %MEMORY
  %loadMem_40af95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3408 = getelementptr inbounds %struct.GPR, %struct.GPR* %3407, i32 0, i32 33
  %3409 = getelementptr inbounds %struct.Reg, %struct.Reg* %3408, i32 0, i32 0
  %PC.i1900 = bitcast %union.anon* %3409 to i64*
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3411 = getelementptr inbounds %struct.GPR, %struct.GPR* %3410, i32 0, i32 5
  %3412 = getelementptr inbounds %struct.Reg, %struct.Reg* %3411, i32 0, i32 0
  %RCX.i1901 = bitcast %union.anon* %3412 to i64*
  %3413 = load i64, i64* %PC.i1900
  %3414 = add i64 %3413, 8
  store i64 %3414, i64* %PC.i1900
  %3415 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3415, i64* %RCX.i1901, align 8
  store %struct.Memory* %loadMem_40af95, %struct.Memory** %MEMORY
  %loadMem_40af9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 33
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %PC.i1897 = bitcast %union.anon* %3418 to i64*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3420 = getelementptr inbounds %struct.GPR, %struct.GPR* %3419, i32 0, i32 7
  %3421 = getelementptr inbounds %struct.Reg, %struct.Reg* %3420, i32 0, i32 0
  %RDX.i1898 = bitcast %union.anon* %3421 to i64*
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3423 = getelementptr inbounds %struct.GPR, %struct.GPR* %3422, i32 0, i32 15
  %3424 = getelementptr inbounds %struct.Reg, %struct.Reg* %3423, i32 0, i32 0
  %RBP.i1899 = bitcast %union.anon* %3424 to i64*
  %3425 = load i64, i64* %RBP.i1899
  %3426 = sub i64 %3425, 20
  %3427 = load i64, i64* %PC.i1897
  %3428 = add i64 %3427, 4
  store i64 %3428, i64* %PC.i1897
  %3429 = inttoptr i64 %3426 to i32*
  %3430 = load i32, i32* %3429
  %3431 = sext i32 %3430 to i64
  store i64 %3431, i64* %RDX.i1898, align 8
  store %struct.Memory* %loadMem_40af9d, %struct.Memory** %MEMORY
  %loadMem_40afa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3433 = getelementptr inbounds %struct.GPR, %struct.GPR* %3432, i32 0, i32 33
  %3434 = getelementptr inbounds %struct.Reg, %struct.Reg* %3433, i32 0, i32 0
  %PC.i1893 = bitcast %union.anon* %3434 to i64*
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3436 = getelementptr inbounds %struct.GPR, %struct.GPR* %3435, i32 0, i32 1
  %3437 = getelementptr inbounds %struct.Reg, %struct.Reg* %3436, i32 0, i32 0
  %EAX.i1894 = bitcast %union.anon* %3437 to i32*
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 5
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %RCX.i1895 = bitcast %union.anon* %3440 to i64*
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 7
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %RDX.i1896 = bitcast %union.anon* %3443 to i64*
  %3444 = load i64, i64* %RCX.i1895
  %3445 = load i64, i64* %RDX.i1896
  %3446 = mul i64 %3445, 4
  %3447 = add i64 %3444, 13176
  %3448 = add i64 %3447, %3446
  %3449 = load i32, i32* %EAX.i1894
  %3450 = zext i32 %3449 to i64
  %3451 = load i64, i64* %PC.i1893
  %3452 = add i64 %3451, 7
  store i64 %3452, i64* %PC.i1893
  %3453 = inttoptr i64 %3448 to i32*
  store i32 %3449, i32* %3453
  store %struct.Memory* %loadMem_40afa1, %struct.Memory** %MEMORY
  %loadMem_40afa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3455 = getelementptr inbounds %struct.GPR, %struct.GPR* %3454, i32 0, i32 33
  %3456 = getelementptr inbounds %struct.Reg, %struct.Reg* %3455, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %3456 to i64*
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3458 = getelementptr inbounds %struct.GPR, %struct.GPR* %3457, i32 0, i32 1
  %3459 = getelementptr inbounds %struct.Reg, %struct.Reg* %3458, i32 0, i32 0
  %RAX.i1891 = bitcast %union.anon* %3459 to i64*
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3461 = getelementptr inbounds %struct.GPR, %struct.GPR* %3460, i32 0, i32 15
  %3462 = getelementptr inbounds %struct.Reg, %struct.Reg* %3461, i32 0, i32 0
  %RBP.i1892 = bitcast %union.anon* %3462 to i64*
  %3463 = load i64, i64* %RBP.i1892
  %3464 = sub i64 %3463, 36
  %3465 = load i64, i64* %PC.i1890
  %3466 = add i64 %3465, 3
  store i64 %3466, i64* %PC.i1890
  %3467 = inttoptr i64 %3464 to i32*
  %3468 = load i32, i32* %3467
  %3469 = zext i32 %3468 to i64
  store i64 %3469, i64* %RAX.i1891, align 8
  store %struct.Memory* %loadMem_40afa8, %struct.Memory** %MEMORY
  %loadMem_40afab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 33
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %3472 to i64*
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 9
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %RSI.i1888 = bitcast %union.anon* %3475 to i64*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 15
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RBP.i1889 = bitcast %union.anon* %3478 to i64*
  %3479 = load i64, i64* %RBP.i1889
  %3480 = sub i64 %3479, 40
  %3481 = load i64, i64* %PC.i1887
  %3482 = add i64 %3481, 3
  store i64 %3482, i64* %PC.i1887
  %3483 = inttoptr i64 %3480 to i32*
  %3484 = load i32, i32* %3483
  %3485 = zext i32 %3484 to i64
  store i64 %3485, i64* %RSI.i1888, align 8
  store %struct.Memory* %loadMem_40afab, %struct.Memory** %MEMORY
  %loadMem_40afae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 33
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %PC.i1885 = bitcast %union.anon* %3488 to i64*
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 9
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %RSI.i1886 = bitcast %union.anon* %3491 to i64*
  %3492 = load i64, i64* %RSI.i1886
  %3493 = load i64, i64* %PC.i1885
  %3494 = add i64 %3493, 2
  store i64 %3494, i64* %PC.i1885
  %3495 = trunc i64 %3492 to i32
  %3496 = shl i32 %3495, 1
  %3497 = icmp slt i32 %3495, 0
  %3498 = icmp slt i32 %3496, 0
  %3499 = xor i1 %3497, %3498
  %3500 = zext i32 %3496 to i64
  store i64 %3500, i64* %RSI.i1886, align 8
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3502 = zext i1 %3497 to i8
  store i8 %3502, i8* %3501, align 1
  %3503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3504 = and i32 %3496, 254
  %3505 = call i32 @llvm.ctpop.i32(i32 %3504)
  %3506 = trunc i32 %3505 to i8
  %3507 = and i8 %3506, 1
  %3508 = xor i8 %3507, 1
  store i8 %3508, i8* %3503, align 1
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3509, align 1
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3511 = icmp eq i32 %3496, 0
  %3512 = zext i1 %3511 to i8
  store i8 %3512, i8* %3510, align 1
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3514 = lshr i32 %3496, 31
  %3515 = trunc i32 %3514 to i8
  store i8 %3515, i8* %3513, align 1
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3517 = zext i1 %3499 to i8
  store i8 %3517, i8* %3516, align 1
  store %struct.Memory* %loadMem_40afae, %struct.Memory** %MEMORY
  %loadMem_40afb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 33
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %PC.i1882 = bitcast %union.anon* %3520 to i64*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 9
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %ESI.i1883 = bitcast %union.anon* %3523 to i32*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 1
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %RAX.i1884 = bitcast %union.anon* %3526 to i64*
  %3527 = load i64, i64* %RAX.i1884
  %3528 = load i32, i32* %ESI.i1883
  %3529 = zext i32 %3528 to i64
  %3530 = load i64, i64* %PC.i1882
  %3531 = add i64 %3530, 2
  store i64 %3531, i64* %PC.i1882
  %3532 = trunc i64 %3527 to i32
  %3533 = sub i32 %3532, %3528
  %3534 = zext i32 %3533 to i64
  store i64 %3534, i64* %RAX.i1884, align 8
  %3535 = icmp ult i32 %3532, %3528
  %3536 = zext i1 %3535 to i8
  %3537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3536, i8* %3537, align 1
  %3538 = and i32 %3533, 255
  %3539 = call i32 @llvm.ctpop.i32(i32 %3538)
  %3540 = trunc i32 %3539 to i8
  %3541 = and i8 %3540, 1
  %3542 = xor i8 %3541, 1
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3542, i8* %3543, align 1
  %3544 = xor i64 %3529, %3527
  %3545 = trunc i64 %3544 to i32
  %3546 = xor i32 %3545, %3533
  %3547 = lshr i32 %3546, 4
  %3548 = trunc i32 %3547 to i8
  %3549 = and i8 %3548, 1
  %3550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3549, i8* %3550, align 1
  %3551 = icmp eq i32 %3533, 0
  %3552 = zext i1 %3551 to i8
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3552, i8* %3553, align 1
  %3554 = lshr i32 %3533, 31
  %3555 = trunc i32 %3554 to i8
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3555, i8* %3556, align 1
  %3557 = lshr i32 %3532, 31
  %3558 = lshr i32 %3528, 31
  %3559 = xor i32 %3558, %3557
  %3560 = xor i32 %3554, %3557
  %3561 = add i32 %3560, %3559
  %3562 = icmp eq i32 %3561, 2
  %3563 = zext i1 %3562 to i8
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3563, i8* %3564, align 1
  store %struct.Memory* %loadMem_40afb1, %struct.Memory** %MEMORY
  %loadMem_40afb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3566 = getelementptr inbounds %struct.GPR, %struct.GPR* %3565, i32 0, i32 33
  %3567 = getelementptr inbounds %struct.Reg, %struct.Reg* %3566, i32 0, i32 0
  %PC.i1880 = bitcast %union.anon* %3567 to i64*
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3569 = getelementptr inbounds %struct.GPR, %struct.GPR* %3568, i32 0, i32 5
  %3570 = getelementptr inbounds %struct.Reg, %struct.Reg* %3569, i32 0, i32 0
  %RCX.i1881 = bitcast %union.anon* %3570 to i64*
  %3571 = load i64, i64* %PC.i1880
  %3572 = add i64 %3571, 8
  store i64 %3572, i64* %PC.i1880
  %3573 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3573, i64* %RCX.i1881, align 8
  store %struct.Memory* %loadMem_40afb3, %struct.Memory** %MEMORY
  %loadMem_40afbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3575 = getelementptr inbounds %struct.GPR, %struct.GPR* %3574, i32 0, i32 33
  %3576 = getelementptr inbounds %struct.Reg, %struct.Reg* %3575, i32 0, i32 0
  %PC.i1877 = bitcast %union.anon* %3576 to i64*
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 7
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %RDX.i1878 = bitcast %union.anon* %3579 to i64*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 15
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RBP.i1879 = bitcast %union.anon* %3582 to i64*
  %3583 = load i64, i64* %RBP.i1879
  %3584 = sub i64 %3583, 20
  %3585 = load i64, i64* %PC.i1877
  %3586 = add i64 %3585, 4
  store i64 %3586, i64* %PC.i1877
  %3587 = inttoptr i64 %3584 to i32*
  %3588 = load i32, i32* %3587
  %3589 = sext i32 %3588 to i64
  store i64 %3589, i64* %RDX.i1878, align 8
  store %struct.Memory* %loadMem_40afbb, %struct.Memory** %MEMORY
  %loadMem_40afbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 33
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %PC.i1873 = bitcast %union.anon* %3592 to i64*
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 1
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %EAX.i1874 = bitcast %union.anon* %3595 to i32*
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 5
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %RCX.i1875 = bitcast %union.anon* %3598 to i64*
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 7
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %RDX.i1876 = bitcast %union.anon* %3601 to i64*
  %3602 = load i64, i64* %RCX.i1875
  %3603 = load i64, i64* %RDX.i1876
  %3604 = mul i64 %3603, 4
  %3605 = add i64 %3602, 13304
  %3606 = add i64 %3605, %3604
  %3607 = load i32, i32* %EAX.i1874
  %3608 = zext i32 %3607 to i64
  %3609 = load i64, i64* %PC.i1873
  %3610 = add i64 %3609, 7
  store i64 %3610, i64* %PC.i1873
  %3611 = inttoptr i64 %3606 to i32*
  store i32 %3607, i32* %3611
  store %struct.Memory* %loadMem_40afbf, %struct.Memory** %MEMORY
  %loadMem_40afc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3613 = getelementptr inbounds %struct.GPR, %struct.GPR* %3612, i32 0, i32 33
  %3614 = getelementptr inbounds %struct.Reg, %struct.Reg* %3613, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %3614 to i64*
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3616 = getelementptr inbounds %struct.GPR, %struct.GPR* %3615, i32 0, i32 1
  %3617 = getelementptr inbounds %struct.Reg, %struct.Reg* %3616, i32 0, i32 0
  %RAX.i1871 = bitcast %union.anon* %3617 to i64*
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3619 = getelementptr inbounds %struct.GPR, %struct.GPR* %3618, i32 0, i32 15
  %3620 = getelementptr inbounds %struct.Reg, %struct.Reg* %3619, i32 0, i32 0
  %RBP.i1872 = bitcast %union.anon* %3620 to i64*
  %3621 = load i64, i64* %RBP.i1872
  %3622 = sub i64 %3621, 20
  %3623 = load i64, i64* %PC.i1870
  %3624 = add i64 %3623, 3
  store i64 %3624, i64* %PC.i1870
  %3625 = inttoptr i64 %3622 to i32*
  %3626 = load i32, i32* %3625
  %3627 = zext i32 %3626 to i64
  store i64 %3627, i64* %RAX.i1871, align 8
  store %struct.Memory* %loadMem_40afc6, %struct.Memory** %MEMORY
  %loadMem_40afc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3629 = getelementptr inbounds %struct.GPR, %struct.GPR* %3628, i32 0, i32 33
  %3630 = getelementptr inbounds %struct.Reg, %struct.Reg* %3629, i32 0, i32 0
  %PC.i1868 = bitcast %union.anon* %3630 to i64*
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3632 = getelementptr inbounds %struct.GPR, %struct.GPR* %3631, i32 0, i32 1
  %3633 = getelementptr inbounds %struct.Reg, %struct.Reg* %3632, i32 0, i32 0
  %RAX.i1869 = bitcast %union.anon* %3633 to i64*
  %3634 = load i64, i64* %RAX.i1869
  %3635 = load i64, i64* %PC.i1868
  %3636 = add i64 %3635, 3
  store i64 %3636, i64* %PC.i1868
  %3637 = trunc i64 %3634 to i32
  %3638 = add i32 1, %3637
  %3639 = zext i32 %3638 to i64
  store i64 %3639, i64* %RAX.i1869, align 8
  %3640 = icmp ult i32 %3638, %3637
  %3641 = icmp ult i32 %3638, 1
  %3642 = or i1 %3640, %3641
  %3643 = zext i1 %3642 to i8
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3643, i8* %3644, align 1
  %3645 = and i32 %3638, 255
  %3646 = call i32 @llvm.ctpop.i32(i32 %3645)
  %3647 = trunc i32 %3646 to i8
  %3648 = and i8 %3647, 1
  %3649 = xor i8 %3648, 1
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3649, i8* %3650, align 1
  %3651 = xor i64 1, %3634
  %3652 = trunc i64 %3651 to i32
  %3653 = xor i32 %3652, %3638
  %3654 = lshr i32 %3653, 4
  %3655 = trunc i32 %3654 to i8
  %3656 = and i8 %3655, 1
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3656, i8* %3657, align 1
  %3658 = icmp eq i32 %3638, 0
  %3659 = zext i1 %3658 to i8
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3659, i8* %3660, align 1
  %3661 = lshr i32 %3638, 31
  %3662 = trunc i32 %3661 to i8
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3662, i8* %3663, align 1
  %3664 = lshr i32 %3637, 31
  %3665 = xor i32 %3661, %3664
  %3666 = add i32 %3665, %3661
  %3667 = icmp eq i32 %3666, 2
  %3668 = zext i1 %3667 to i8
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3668, i8* %3669, align 1
  store %struct.Memory* %loadMem_40afc9, %struct.Memory** %MEMORY
  %loadMem_40afcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3671 = getelementptr inbounds %struct.GPR, %struct.GPR* %3670, i32 0, i32 33
  %3672 = getelementptr inbounds %struct.Reg, %struct.Reg* %3671, i32 0, i32 0
  %PC.i1865 = bitcast %union.anon* %3672 to i64*
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 1
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %EAX.i1866 = bitcast %union.anon* %3675 to i32*
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 15
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %RBP.i1867 = bitcast %union.anon* %3678 to i64*
  %3679 = load i64, i64* %RBP.i1867
  %3680 = sub i64 %3679, 20
  %3681 = load i32, i32* %EAX.i1866
  %3682 = zext i32 %3681 to i64
  %3683 = load i64, i64* %PC.i1865
  %3684 = add i64 %3683, 3
  store i64 %3684, i64* %PC.i1865
  %3685 = inttoptr i64 %3680 to i32*
  store i32 %3681, i32* %3685
  store %struct.Memory* %loadMem_40afcc, %struct.Memory** %MEMORY
  %loadMem_40afcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3687 = getelementptr inbounds %struct.GPR, %struct.GPR* %3686, i32 0, i32 33
  %3688 = getelementptr inbounds %struct.Reg, %struct.Reg* %3687, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %3688 to i64*
  %3689 = load i64, i64* %PC.i1864
  %3690 = add i64 %3689, -317
  %3691 = load i64, i64* %PC.i1864
  %3692 = add i64 %3691, 5
  store i64 %3692, i64* %PC.i1864
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3690, i64* %3693, align 8
  store %struct.Memory* %loadMem_40afcf, %struct.Memory** %MEMORY
  br label %block_.L_40ae92

block_.L_40afd4:                                  ; preds = %block_.L_40ae92
  %loadMem_40afd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 33
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %PC.i1863 = bitcast %union.anon* %3696 to i64*
  %3697 = load i64, i64* %PC.i1863
  %3698 = add i64 %3697, 5
  %3699 = load i64, i64* %PC.i1863
  %3700 = add i64 %3699, 5
  store i64 %3700, i64* %PC.i1863
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3698, i64* %3701, align 8
  store %struct.Memory* %loadMem_40afd4, %struct.Memory** %MEMORY
  br label %block_.L_40afd9

block_.L_40afd9:                                  ; preds = %block_.L_40afd4, %routine_idivl__ecx.exit2073
  %loadMem_40afd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3703 = getelementptr inbounds %struct.GPR, %struct.GPR* %3702, i32 0, i32 33
  %3704 = getelementptr inbounds %struct.Reg, %struct.Reg* %3703, i32 0, i32 0
  %PC.i1861 = bitcast %union.anon* %3704 to i64*
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3706 = getelementptr inbounds %struct.GPR, %struct.GPR* %3705, i32 0, i32 15
  %3707 = getelementptr inbounds %struct.Reg, %struct.Reg* %3706, i32 0, i32 0
  %RBP.i1862 = bitcast %union.anon* %3707 to i64*
  %3708 = load i64, i64* %RBP.i1862
  %3709 = sub i64 %3708, 140
  %3710 = load i64, i64* %PC.i1861
  %3711 = add i64 %3710, 7
  store i64 %3711, i64* %PC.i1861
  %3712 = inttoptr i64 %3709 to i32*
  %3713 = load i32, i32* %3712
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3714, align 1
  %3715 = and i32 %3713, 255
  %3716 = call i32 @llvm.ctpop.i32(i32 %3715)
  %3717 = trunc i32 %3716 to i8
  %3718 = and i8 %3717, 1
  %3719 = xor i8 %3718, 1
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3719, i8* %3720, align 1
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3721, align 1
  %3722 = icmp eq i32 %3713, 0
  %3723 = zext i1 %3722 to i8
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3723, i8* %3724, align 1
  %3725 = lshr i32 %3713, 31
  %3726 = trunc i32 %3725 to i8
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3726, i8* %3727, align 1
  %3728 = lshr i32 %3713, 31
  %3729 = xor i32 %3725, %3728
  %3730 = add i32 %3729, %3728
  %3731 = icmp eq i32 %3730, 2
  %3732 = zext i1 %3731 to i8
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3732, i8* %3733, align 1
  store %struct.Memory* %loadMem_40afd9, %struct.Memory** %MEMORY
  %loadMem_40afe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 33
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %PC.i1860 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %PC.i1860
  %3738 = add i64 %3737, 379
  %3739 = load i64, i64* %PC.i1860
  %3740 = add i64 %3739, 6
  %3741 = load i64, i64* %PC.i1860
  %3742 = add i64 %3741, 6
  store i64 %3742, i64* %PC.i1860
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3744 = load i8, i8* %3743, align 1
  %3745 = icmp eq i8 %3744, 0
  %3746 = zext i1 %3745 to i8
  store i8 %3746, i8* %BRANCH_TAKEN, align 1
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3748 = select i1 %3745, i64 %3738, i64 %3740
  store i64 %3748, i64* %3747, align 8
  store %struct.Memory* %loadMem_40afe0, %struct.Memory** %MEMORY
  %loadBr_40afe0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40afe0 = icmp eq i8 %loadBr_40afe0, 1
  br i1 %cmpBr_40afe0, label %block_.L_40b15b, label %block_40afe6

block_40afe6:                                     ; preds = %block_.L_40afd9
  %loadMem_40afe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 33
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %PC.i1858 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 15
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %RBP.i1859 = bitcast %union.anon* %3754 to i64*
  %3755 = load i64, i64* %RBP.i1859
  %3756 = sub i64 %3755, 16
  %3757 = load i64, i64* %PC.i1858
  %3758 = add i64 %3757, 7
  store i64 %3758, i64* %PC.i1858
  %3759 = inttoptr i64 %3756 to i32*
  store i32 0, i32* %3759
  store %struct.Memory* %loadMem_40afe6, %struct.Memory** %MEMORY
  br label %block_.L_40afed

block_.L_40afed:                                  ; preds = %block_.L_40b0b5, %block_40afe6
  %loadMem_40afed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 33
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %PC.i1856 = bitcast %union.anon* %3762 to i64*
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3764 = getelementptr inbounds %struct.GPR, %struct.GPR* %3763, i32 0, i32 15
  %3765 = getelementptr inbounds %struct.Reg, %struct.Reg* %3764, i32 0, i32 0
  %RBP.i1857 = bitcast %union.anon* %3765 to i64*
  %3766 = load i64, i64* %RBP.i1857
  %3767 = sub i64 %3766, 16
  %3768 = load i64, i64* %PC.i1856
  %3769 = add i64 %3768, 4
  store i64 %3769, i64* %PC.i1856
  %3770 = inttoptr i64 %3767 to i32*
  %3771 = load i32, i32* %3770
  %3772 = sub i32 %3771, 4
  %3773 = icmp ult i32 %3771, 4
  %3774 = zext i1 %3773 to i8
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3774, i8* %3775, align 1
  %3776 = and i32 %3772, 255
  %3777 = call i32 @llvm.ctpop.i32(i32 %3776)
  %3778 = trunc i32 %3777 to i8
  %3779 = and i8 %3778, 1
  %3780 = xor i8 %3779, 1
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3780, i8* %3781, align 1
  %3782 = xor i32 %3771, 4
  %3783 = xor i32 %3782, %3772
  %3784 = lshr i32 %3783, 4
  %3785 = trunc i32 %3784 to i8
  %3786 = and i8 %3785, 1
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3786, i8* %3787, align 1
  %3788 = icmp eq i32 %3772, 0
  %3789 = zext i1 %3788 to i8
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3789, i8* %3790, align 1
  %3791 = lshr i32 %3772, 31
  %3792 = trunc i32 %3791 to i8
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3792, i8* %3793, align 1
  %3794 = lshr i32 %3771, 31
  %3795 = xor i32 %3791, %3794
  %3796 = add i32 %3795, %3794
  %3797 = icmp eq i32 %3796, 2
  %3798 = zext i1 %3797 to i8
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3798, i8* %3799, align 1
  store %struct.Memory* %loadMem_40afed, %struct.Memory** %MEMORY
  %loadMem_40aff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 33
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %PC.i1855 = bitcast %union.anon* %3802 to i64*
  %3803 = load i64, i64* %PC.i1855
  %3804 = add i64 %3803, 357
  %3805 = load i64, i64* %PC.i1855
  %3806 = add i64 %3805, 6
  %3807 = load i64, i64* %PC.i1855
  %3808 = add i64 %3807, 6
  store i64 %3808, i64* %PC.i1855
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3810 = load i8, i8* %3809, align 1
  %3811 = icmp ne i8 %3810, 0
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3813 = load i8, i8* %3812, align 1
  %3814 = icmp ne i8 %3813, 0
  %3815 = xor i1 %3811, %3814
  %3816 = xor i1 %3815, true
  %3817 = zext i1 %3816 to i8
  store i8 %3817, i8* %BRANCH_TAKEN, align 1
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3819 = select i1 %3815, i64 %3806, i64 %3804
  store i64 %3819, i64* %3818, align 8
  store %struct.Memory* %loadMem_40aff1, %struct.Memory** %MEMORY
  %loadBr_40aff1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40aff1 = icmp eq i8 %loadBr_40aff1, 1
  br i1 %cmpBr_40aff1, label %block_.L_40b156, label %block_40aff7

block_40aff7:                                     ; preds = %block_.L_40afed
  %loadMem_40aff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 33
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %PC.i1853 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 15
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RBP.i1854 = bitcast %union.anon* %3825 to i64*
  %3826 = load i64, i64* %RBP.i1854
  %3827 = sub i64 %3826, 20
  %3828 = load i64, i64* %PC.i1853
  %3829 = add i64 %3828, 7
  store i64 %3829, i64* %PC.i1853
  %3830 = inttoptr i64 %3827 to i32*
  store i32 0, i32* %3830
  store %struct.Memory* %loadMem_40aff7, %struct.Memory** %MEMORY
  br label %block_.L_40affe

block_.L_40affe:                                  ; preds = %block_40b008, %block_40aff7
  %loadMem_40affe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3832 = getelementptr inbounds %struct.GPR, %struct.GPR* %3831, i32 0, i32 33
  %3833 = getelementptr inbounds %struct.Reg, %struct.Reg* %3832, i32 0, i32 0
  %PC.i1851 = bitcast %union.anon* %3833 to i64*
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 15
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %RBP.i1852 = bitcast %union.anon* %3836 to i64*
  %3837 = load i64, i64* %RBP.i1852
  %3838 = sub i64 %3837, 20
  %3839 = load i64, i64* %PC.i1851
  %3840 = add i64 %3839, 4
  store i64 %3840, i64* %PC.i1851
  %3841 = inttoptr i64 %3838 to i32*
  %3842 = load i32, i32* %3841
  %3843 = sub i32 %3842, 2
  %3844 = icmp ult i32 %3842, 2
  %3845 = zext i1 %3844 to i8
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3845, i8* %3846, align 1
  %3847 = and i32 %3843, 255
  %3848 = call i32 @llvm.ctpop.i32(i32 %3847)
  %3849 = trunc i32 %3848 to i8
  %3850 = and i8 %3849, 1
  %3851 = xor i8 %3850, 1
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3851, i8* %3852, align 1
  %3853 = xor i32 %3842, 2
  %3854 = xor i32 %3853, %3843
  %3855 = lshr i32 %3854, 4
  %3856 = trunc i32 %3855 to i8
  %3857 = and i8 %3856, 1
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3857, i8* %3858, align 1
  %3859 = icmp eq i32 %3843, 0
  %3860 = zext i1 %3859 to i8
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3860, i8* %3861, align 1
  %3862 = lshr i32 %3843, 31
  %3863 = trunc i32 %3862 to i8
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3863, i8* %3864, align 1
  %3865 = lshr i32 %3842, 31
  %3866 = xor i32 %3862, %3865
  %3867 = add i32 %3866, %3865
  %3868 = icmp eq i32 %3867, 2
  %3869 = zext i1 %3868 to i8
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3869, i8* %3870, align 1
  store %struct.Memory* %loadMem_40affe, %struct.Memory** %MEMORY
  %loadMem_40b002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 33
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %PC.i1850 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %PC.i1850
  %3875 = add i64 %3874, 179
  %3876 = load i64, i64* %PC.i1850
  %3877 = add i64 %3876, 6
  %3878 = load i64, i64* %PC.i1850
  %3879 = add i64 %3878, 6
  store i64 %3879, i64* %PC.i1850
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3881 = load i8, i8* %3880, align 1
  %3882 = icmp ne i8 %3881, 0
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3884 = load i8, i8* %3883, align 1
  %3885 = icmp ne i8 %3884, 0
  %3886 = xor i1 %3882, %3885
  %3887 = xor i1 %3886, true
  %3888 = zext i1 %3887 to i8
  store i8 %3888, i8* %BRANCH_TAKEN, align 1
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3890 = select i1 %3886, i64 %3877, i64 %3875
  store i64 %3890, i64* %3889, align 8
  store %struct.Memory* %loadMem_40b002, %struct.Memory** %MEMORY
  %loadBr_40b002 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b002 = icmp eq i8 %loadBr_40b002, 1
  br i1 %cmpBr_40b002, label %block_.L_40b0b5, label %block_40b008

block_40b008:                                     ; preds = %block_.L_40affe
  %loadMem_40b008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 33
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %3893 to i64*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 1
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %RAX.i1849 = bitcast %union.anon* %3896 to i64*
  %3897 = load i64, i64* %PC.i1848
  %3898 = add i64 %3897, 5
  store i64 %3898, i64* %PC.i1848
  store i64 3, i64* %RAX.i1849, align 8
  store %struct.Memory* %loadMem_40b008, %struct.Memory** %MEMORY
  %loadMem_40b00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 33
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %3901 to i64*
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 1
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %RAX.i1846 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 15
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RBP.i1847 = bitcast %union.anon* %3907 to i64*
  %3908 = load i64, i64* %RAX.i1846
  %3909 = load i64, i64* %RBP.i1847
  %3910 = sub i64 %3909, 20
  %3911 = load i64, i64* %PC.i1845
  %3912 = add i64 %3911, 3
  store i64 %3912, i64* %PC.i1845
  %3913 = trunc i64 %3908 to i32
  %3914 = inttoptr i64 %3910 to i32*
  %3915 = load i32, i32* %3914
  %3916 = sub i32 %3913, %3915
  %3917 = zext i32 %3916 to i64
  store i64 %3917, i64* %RAX.i1846, align 8
  %3918 = icmp ult i32 %3913, %3915
  %3919 = zext i1 %3918 to i8
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3919, i8* %3920, align 1
  %3921 = and i32 %3916, 255
  %3922 = call i32 @llvm.ctpop.i32(i32 %3921)
  %3923 = trunc i32 %3922 to i8
  %3924 = and i8 %3923, 1
  %3925 = xor i8 %3924, 1
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3925, i8* %3926, align 1
  %3927 = xor i32 %3915, %3913
  %3928 = xor i32 %3927, %3916
  %3929 = lshr i32 %3928, 4
  %3930 = trunc i32 %3929 to i8
  %3931 = and i8 %3930, 1
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3931, i8* %3932, align 1
  %3933 = icmp eq i32 %3916, 0
  %3934 = zext i1 %3933 to i8
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3934, i8* %3935, align 1
  %3936 = lshr i32 %3916, 31
  %3937 = trunc i32 %3936 to i8
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3937, i8* %3938, align 1
  %3939 = lshr i32 %3913, 31
  %3940 = lshr i32 %3915, 31
  %3941 = xor i32 %3940, %3939
  %3942 = xor i32 %3936, %3939
  %3943 = add i32 %3942, %3941
  %3944 = icmp eq i32 %3943, 2
  %3945 = zext i1 %3944 to i8
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3945, i8* %3946, align 1
  store %struct.Memory* %loadMem_40b00d, %struct.Memory** %MEMORY
  %loadMem_40b010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 33
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %PC.i1842 = bitcast %union.anon* %3949 to i64*
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3951 = getelementptr inbounds %struct.GPR, %struct.GPR* %3950, i32 0, i32 1
  %3952 = getelementptr inbounds %struct.Reg, %struct.Reg* %3951, i32 0, i32 0
  %EAX.i1843 = bitcast %union.anon* %3952 to i32*
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 15
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %RBP.i1844 = bitcast %union.anon* %3955 to i64*
  %3956 = load i64, i64* %RBP.i1844
  %3957 = sub i64 %3956, 28
  %3958 = load i32, i32* %EAX.i1843
  %3959 = zext i32 %3958 to i64
  %3960 = load i64, i64* %PC.i1842
  %3961 = add i64 %3960, 3
  store i64 %3961, i64* %PC.i1842
  %3962 = inttoptr i64 %3957 to i32*
  store i32 %3958, i32* %3962
  store %struct.Memory* %loadMem_40b010, %struct.Memory** %MEMORY
  %loadMem_40b013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3964 = getelementptr inbounds %struct.GPR, %struct.GPR* %3963, i32 0, i32 33
  %3965 = getelementptr inbounds %struct.Reg, %struct.Reg* %3964, i32 0, i32 0
  %PC.i1840 = bitcast %union.anon* %3965 to i64*
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3967 = getelementptr inbounds %struct.GPR, %struct.GPR* %3966, i32 0, i32 5
  %3968 = getelementptr inbounds %struct.Reg, %struct.Reg* %3967, i32 0, i32 0
  %RCX.i1841 = bitcast %union.anon* %3968 to i64*
  %3969 = load i64, i64* %PC.i1840
  %3970 = add i64 %3969, 8
  store i64 %3970, i64* %PC.i1840
  %3971 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3971, i64* %RCX.i1841, align 8
  store %struct.Memory* %loadMem_40b013, %struct.Memory** %MEMORY
  %loadMem_40b01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3973 = getelementptr inbounds %struct.GPR, %struct.GPR* %3972, i32 0, i32 33
  %3974 = getelementptr inbounds %struct.Reg, %struct.Reg* %3973, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %3974 to i64*
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3976 = getelementptr inbounds %struct.GPR, %struct.GPR* %3975, i32 0, i32 5
  %3977 = getelementptr inbounds %struct.Reg, %struct.Reg* %3976, i32 0, i32 0
  %RCX.i1839 = bitcast %union.anon* %3977 to i64*
  %3978 = load i64, i64* %RCX.i1839
  %3979 = load i64, i64* %PC.i1838
  %3980 = add i64 %3979, 7
  store i64 %3980, i64* %PC.i1838
  %3981 = add i64 13112, %3978
  store i64 %3981, i64* %RCX.i1839, align 8
  %3982 = icmp ult i64 %3981, %3978
  %3983 = icmp ult i64 %3981, 13112
  %3984 = or i1 %3982, %3983
  %3985 = zext i1 %3984 to i8
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3985, i8* %3986, align 1
  %3987 = trunc i64 %3981 to i32
  %3988 = and i32 %3987, 255
  %3989 = call i32 @llvm.ctpop.i32(i32 %3988)
  %3990 = trunc i32 %3989 to i8
  %3991 = and i8 %3990, 1
  %3992 = xor i8 %3991, 1
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3992, i8* %3993, align 1
  %3994 = xor i64 13112, %3978
  %3995 = xor i64 %3994, %3981
  %3996 = lshr i64 %3995, 4
  %3997 = trunc i64 %3996 to i8
  %3998 = and i8 %3997, 1
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3998, i8* %3999, align 1
  %4000 = icmp eq i64 %3981, 0
  %4001 = zext i1 %4000 to i8
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4001, i8* %4002, align 1
  %4003 = lshr i64 %3981, 63
  %4004 = trunc i64 %4003 to i8
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4004, i8* %4005, align 1
  %4006 = lshr i64 %3978, 63
  %4007 = xor i64 %4003, %4006
  %4008 = add i64 %4007, %4003
  %4009 = icmp eq i64 %4008, 2
  %4010 = zext i1 %4009 to i8
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4010, i8* %4011, align 1
  store %struct.Memory* %loadMem_40b01b, %struct.Memory** %MEMORY
  %loadMem_40b022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4013 = getelementptr inbounds %struct.GPR, %struct.GPR* %4012, i32 0, i32 33
  %4014 = getelementptr inbounds %struct.Reg, %struct.Reg* %4013, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %4014 to i64*
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4016 = getelementptr inbounds %struct.GPR, %struct.GPR* %4015, i32 0, i32 7
  %4017 = getelementptr inbounds %struct.Reg, %struct.Reg* %4016, i32 0, i32 0
  %RDX.i1836 = bitcast %union.anon* %4017 to i64*
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 15
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %RBP.i1837 = bitcast %union.anon* %4020 to i64*
  %4021 = load i64, i64* %RBP.i1837
  %4022 = sub i64 %4021, 16
  %4023 = load i64, i64* %PC.i1835
  %4024 = add i64 %4023, 4
  store i64 %4024, i64* %PC.i1835
  %4025 = inttoptr i64 %4022 to i32*
  %4026 = load i32, i32* %4025
  %4027 = sext i32 %4026 to i64
  store i64 %4027, i64* %RDX.i1836, align 8
  store %struct.Memory* %loadMem_40b022, %struct.Memory** %MEMORY
  %loadMem_40b026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 33
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %PC.i1833 = bitcast %union.anon* %4030 to i64*
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 7
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %RDX.i1834 = bitcast %union.anon* %4033 to i64*
  %4034 = load i64, i64* %RDX.i1834
  %4035 = load i64, i64* %PC.i1833
  %4036 = add i64 %4035, 4
  store i64 %4036, i64* %PC.i1833
  %4037 = shl i64 %4034, 5
  %4038 = icmp slt i64 %4037, 0
  %4039 = shl i64 %4037, 1
  store i64 %4039, i64* %RDX.i1834, align 8
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4041 = zext i1 %4038 to i8
  store i8 %4041, i8* %4040, align 1
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4043 = trunc i64 %4039 to i32
  %4044 = and i32 %4043, 254
  %4045 = call i32 @llvm.ctpop.i32(i32 %4044)
  %4046 = trunc i32 %4045 to i8
  %4047 = and i8 %4046, 1
  %4048 = xor i8 %4047, 1
  store i8 %4048, i8* %4042, align 1
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4049, align 1
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4051 = icmp eq i64 %4039, 0
  %4052 = zext i1 %4051 to i8
  store i8 %4052, i8* %4050, align 1
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4054 = lshr i64 %4039, 63
  %4055 = trunc i64 %4054 to i8
  store i8 %4055, i8* %4053, align 1
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4056, align 1
  store %struct.Memory* %loadMem_40b026, %struct.Memory** %MEMORY
  %loadMem_40b02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i1830 = bitcast %union.anon* %4059 to i64*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 5
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %RCX.i1831 = bitcast %union.anon* %4062 to i64*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 7
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %RDX.i1832 = bitcast %union.anon* %4065 to i64*
  %4066 = load i64, i64* %RCX.i1831
  %4067 = load i64, i64* %RDX.i1832
  %4068 = load i64, i64* %PC.i1830
  %4069 = add i64 %4068, 3
  store i64 %4069, i64* %PC.i1830
  %4070 = add i64 %4067, %4066
  store i64 %4070, i64* %RCX.i1831, align 8
  %4071 = icmp ult i64 %4070, %4066
  %4072 = icmp ult i64 %4070, %4067
  %4073 = or i1 %4071, %4072
  %4074 = zext i1 %4073 to i8
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4074, i8* %4075, align 1
  %4076 = trunc i64 %4070 to i32
  %4077 = and i32 %4076, 255
  %4078 = call i32 @llvm.ctpop.i32(i32 %4077)
  %4079 = trunc i32 %4078 to i8
  %4080 = and i8 %4079, 1
  %4081 = xor i8 %4080, 1
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4081, i8* %4082, align 1
  %4083 = xor i64 %4067, %4066
  %4084 = xor i64 %4083, %4070
  %4085 = lshr i64 %4084, 4
  %4086 = trunc i64 %4085 to i8
  %4087 = and i8 %4086, 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4087, i8* %4088, align 1
  %4089 = icmp eq i64 %4070, 0
  %4090 = zext i1 %4089 to i8
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4090, i8* %4091, align 1
  %4092 = lshr i64 %4070, 63
  %4093 = trunc i64 %4092 to i8
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4093, i8* %4094, align 1
  %4095 = lshr i64 %4066, 63
  %4096 = lshr i64 %4067, 63
  %4097 = xor i64 %4092, %4095
  %4098 = xor i64 %4092, %4096
  %4099 = add i64 %4097, %4098
  %4100 = icmp eq i64 %4099, 2
  %4101 = zext i1 %4100 to i8
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4101, i8* %4102, align 1
  store %struct.Memory* %loadMem_40b02a, %struct.Memory** %MEMORY
  %loadMem_40b02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 33
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %PC.i1827 = bitcast %union.anon* %4105 to i64*
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 7
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %RDX.i1828 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 15
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %RBP.i1829 = bitcast %union.anon* %4111 to i64*
  %4112 = load i64, i64* %RBP.i1829
  %4113 = sub i64 %4112, 20
  %4114 = load i64, i64* %PC.i1827
  %4115 = add i64 %4114, 4
  store i64 %4115, i64* %PC.i1827
  %4116 = inttoptr i64 %4113 to i32*
  %4117 = load i32, i32* %4116
  %4118 = sext i32 %4117 to i64
  store i64 %4118, i64* %RDX.i1828, align 8
  store %struct.Memory* %loadMem_40b02d, %struct.Memory** %MEMORY
  %loadMem_40b031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 33
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %PC.i1823 = bitcast %union.anon* %4121 to i64*
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 1
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %RAX.i1824 = bitcast %union.anon* %4124 to i64*
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 5
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %RCX.i1825 = bitcast %union.anon* %4127 to i64*
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 7
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %RDX.i1826 = bitcast %union.anon* %4130 to i64*
  %4131 = load i64, i64* %RCX.i1825
  %4132 = load i64, i64* %RDX.i1826
  %4133 = mul i64 %4132, 4
  %4134 = add i64 %4133, %4131
  %4135 = load i64, i64* %PC.i1823
  %4136 = add i64 %4135, 3
  store i64 %4136, i64* %PC.i1823
  %4137 = inttoptr i64 %4134 to i32*
  %4138 = load i32, i32* %4137
  %4139 = zext i32 %4138 to i64
  store i64 %4139, i64* %RAX.i1824, align 8
  store %struct.Memory* %loadMem_40b031, %struct.Memory** %MEMORY
  %loadMem_40b034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 33
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %PC.i1821 = bitcast %union.anon* %4142 to i64*
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4144 = getelementptr inbounds %struct.GPR, %struct.GPR* %4143, i32 0, i32 5
  %4145 = getelementptr inbounds %struct.Reg, %struct.Reg* %4144, i32 0, i32 0
  %RCX.i1822 = bitcast %union.anon* %4145 to i64*
  %4146 = load i64, i64* %PC.i1821
  %4147 = add i64 %4146, 8
  store i64 %4147, i64* %PC.i1821
  %4148 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4148, i64* %RCX.i1822, align 8
  store %struct.Memory* %loadMem_40b034, %struct.Memory** %MEMORY
  %loadMem_40b03c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4150 = getelementptr inbounds %struct.GPR, %struct.GPR* %4149, i32 0, i32 33
  %4151 = getelementptr inbounds %struct.Reg, %struct.Reg* %4150, i32 0, i32 0
  %PC.i1819 = bitcast %union.anon* %4151 to i64*
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4153 = getelementptr inbounds %struct.GPR, %struct.GPR* %4152, i32 0, i32 5
  %4154 = getelementptr inbounds %struct.Reg, %struct.Reg* %4153, i32 0, i32 0
  %RCX.i1820 = bitcast %union.anon* %4154 to i64*
  %4155 = load i64, i64* %RCX.i1820
  %4156 = load i64, i64* %PC.i1819
  %4157 = add i64 %4156, 7
  store i64 %4157, i64* %PC.i1819
  %4158 = add i64 13112, %4155
  store i64 %4158, i64* %RCX.i1820, align 8
  %4159 = icmp ult i64 %4158, %4155
  %4160 = icmp ult i64 %4158, 13112
  %4161 = or i1 %4159, %4160
  %4162 = zext i1 %4161 to i8
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4162, i8* %4163, align 1
  %4164 = trunc i64 %4158 to i32
  %4165 = and i32 %4164, 255
  %4166 = call i32 @llvm.ctpop.i32(i32 %4165)
  %4167 = trunc i32 %4166 to i8
  %4168 = and i8 %4167, 1
  %4169 = xor i8 %4168, 1
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4169, i8* %4170, align 1
  %4171 = xor i64 13112, %4155
  %4172 = xor i64 %4171, %4158
  %4173 = lshr i64 %4172, 4
  %4174 = trunc i64 %4173 to i8
  %4175 = and i8 %4174, 1
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4175, i8* %4176, align 1
  %4177 = icmp eq i64 %4158, 0
  %4178 = zext i1 %4177 to i8
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4178, i8* %4179, align 1
  %4180 = lshr i64 %4158, 63
  %4181 = trunc i64 %4180 to i8
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4181, i8* %4182, align 1
  %4183 = lshr i64 %4155, 63
  %4184 = xor i64 %4180, %4183
  %4185 = add i64 %4184, %4180
  %4186 = icmp eq i64 %4185, 2
  %4187 = zext i1 %4186 to i8
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4187, i8* %4188, align 1
  store %struct.Memory* %loadMem_40b03c, %struct.Memory** %MEMORY
  %loadMem_40b043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 33
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %PC.i1816 = bitcast %union.anon* %4191 to i64*
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4193 = getelementptr inbounds %struct.GPR, %struct.GPR* %4192, i32 0, i32 7
  %4194 = getelementptr inbounds %struct.Reg, %struct.Reg* %4193, i32 0, i32 0
  %RDX.i1817 = bitcast %union.anon* %4194 to i64*
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 15
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %RBP.i1818 = bitcast %union.anon* %4197 to i64*
  %4198 = load i64, i64* %RBP.i1818
  %4199 = sub i64 %4198, 16
  %4200 = load i64, i64* %PC.i1816
  %4201 = add i64 %4200, 4
  store i64 %4201, i64* %PC.i1816
  %4202 = inttoptr i64 %4199 to i32*
  %4203 = load i32, i32* %4202
  %4204 = sext i32 %4203 to i64
  store i64 %4204, i64* %RDX.i1817, align 8
  store %struct.Memory* %loadMem_40b043, %struct.Memory** %MEMORY
  %loadMem_40b047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i1814 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 7
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %RDX.i1815 = bitcast %union.anon* %4210 to i64*
  %4211 = load i64, i64* %RDX.i1815
  %4212 = load i64, i64* %PC.i1814
  %4213 = add i64 %4212, 4
  store i64 %4213, i64* %PC.i1814
  %4214 = shl i64 %4211, 5
  %4215 = icmp slt i64 %4214, 0
  %4216 = shl i64 %4214, 1
  store i64 %4216, i64* %RDX.i1815, align 8
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4218 = zext i1 %4215 to i8
  store i8 %4218, i8* %4217, align 1
  %4219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4220 = trunc i64 %4216 to i32
  %4221 = and i32 %4220, 254
  %4222 = call i32 @llvm.ctpop.i32(i32 %4221)
  %4223 = trunc i32 %4222 to i8
  %4224 = and i8 %4223, 1
  %4225 = xor i8 %4224, 1
  store i8 %4225, i8* %4219, align 1
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4226, align 1
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4228 = icmp eq i64 %4216, 0
  %4229 = zext i1 %4228 to i8
  store i8 %4229, i8* %4227, align 1
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4231 = lshr i64 %4216, 63
  %4232 = trunc i64 %4231 to i8
  store i8 %4232, i8* %4230, align 1
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4233, align 1
  store %struct.Memory* %loadMem_40b047, %struct.Memory** %MEMORY
  %loadMem_40b04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4235 = getelementptr inbounds %struct.GPR, %struct.GPR* %4234, i32 0, i32 33
  %4236 = getelementptr inbounds %struct.Reg, %struct.Reg* %4235, i32 0, i32 0
  %PC.i1811 = bitcast %union.anon* %4236 to i64*
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4238 = getelementptr inbounds %struct.GPR, %struct.GPR* %4237, i32 0, i32 5
  %4239 = getelementptr inbounds %struct.Reg, %struct.Reg* %4238, i32 0, i32 0
  %RCX.i1812 = bitcast %union.anon* %4239 to i64*
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4241 = getelementptr inbounds %struct.GPR, %struct.GPR* %4240, i32 0, i32 7
  %4242 = getelementptr inbounds %struct.Reg, %struct.Reg* %4241, i32 0, i32 0
  %RDX.i1813 = bitcast %union.anon* %4242 to i64*
  %4243 = load i64, i64* %RCX.i1812
  %4244 = load i64, i64* %RDX.i1813
  %4245 = load i64, i64* %PC.i1811
  %4246 = add i64 %4245, 3
  store i64 %4246, i64* %PC.i1811
  %4247 = add i64 %4244, %4243
  store i64 %4247, i64* %RCX.i1812, align 8
  %4248 = icmp ult i64 %4247, %4243
  %4249 = icmp ult i64 %4247, %4244
  %4250 = or i1 %4248, %4249
  %4251 = zext i1 %4250 to i8
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4251, i8* %4252, align 1
  %4253 = trunc i64 %4247 to i32
  %4254 = and i32 %4253, 255
  %4255 = call i32 @llvm.ctpop.i32(i32 %4254)
  %4256 = trunc i32 %4255 to i8
  %4257 = and i8 %4256, 1
  %4258 = xor i8 %4257, 1
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4258, i8* %4259, align 1
  %4260 = xor i64 %4244, %4243
  %4261 = xor i64 %4260, %4247
  %4262 = lshr i64 %4261, 4
  %4263 = trunc i64 %4262 to i8
  %4264 = and i8 %4263, 1
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4264, i8* %4265, align 1
  %4266 = icmp eq i64 %4247, 0
  %4267 = zext i1 %4266 to i8
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4267, i8* %4268, align 1
  %4269 = lshr i64 %4247, 63
  %4270 = trunc i64 %4269 to i8
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4270, i8* %4271, align 1
  %4272 = lshr i64 %4243, 63
  %4273 = lshr i64 %4244, 63
  %4274 = xor i64 %4269, %4272
  %4275 = xor i64 %4269, %4273
  %4276 = add i64 %4274, %4275
  %4277 = icmp eq i64 %4276, 2
  %4278 = zext i1 %4277 to i8
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4278, i8* %4279, align 1
  store %struct.Memory* %loadMem_40b04b, %struct.Memory** %MEMORY
  %loadMem_40b04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 33
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %PC.i1808 = bitcast %union.anon* %4282 to i64*
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 7
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %RDX.i1809 = bitcast %union.anon* %4285 to i64*
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 15
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %RBP.i1810 = bitcast %union.anon* %4288 to i64*
  %4289 = load i64, i64* %RBP.i1810
  %4290 = sub i64 %4289, 28
  %4291 = load i64, i64* %PC.i1808
  %4292 = add i64 %4291, 4
  store i64 %4292, i64* %PC.i1808
  %4293 = inttoptr i64 %4290 to i32*
  %4294 = load i32, i32* %4293
  %4295 = sext i32 %4294 to i64
  store i64 %4295, i64* %RDX.i1809, align 8
  store %struct.Memory* %loadMem_40b04e, %struct.Memory** %MEMORY
  %loadMem_40b052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 33
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %PC.i1804 = bitcast %union.anon* %4298 to i64*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 1
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %RAX.i1805 = bitcast %union.anon* %4301 to i64*
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 5
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %RCX.i1806 = bitcast %union.anon* %4304 to i64*
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 7
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %RDX.i1807 = bitcast %union.anon* %4307 to i64*
  %4308 = load i64, i64* %RAX.i1805
  %4309 = load i64, i64* %RCX.i1806
  %4310 = load i64, i64* %RDX.i1807
  %4311 = mul i64 %4310, 4
  %4312 = add i64 %4311, %4309
  %4313 = load i64, i64* %PC.i1804
  %4314 = add i64 %4313, 3
  store i64 %4314, i64* %PC.i1804
  %4315 = trunc i64 %4308 to i32
  %4316 = inttoptr i64 %4312 to i32*
  %4317 = load i32, i32* %4316
  %4318 = add i32 %4317, %4315
  %4319 = zext i32 %4318 to i64
  store i64 %4319, i64* %RAX.i1805, align 8
  %4320 = icmp ult i32 %4318, %4315
  %4321 = icmp ult i32 %4318, %4317
  %4322 = or i1 %4320, %4321
  %4323 = zext i1 %4322 to i8
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4323, i8* %4324, align 1
  %4325 = and i32 %4318, 255
  %4326 = call i32 @llvm.ctpop.i32(i32 %4325)
  %4327 = trunc i32 %4326 to i8
  %4328 = and i8 %4327, 1
  %4329 = xor i8 %4328, 1
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4329, i8* %4330, align 1
  %4331 = xor i32 %4317, %4315
  %4332 = xor i32 %4331, %4318
  %4333 = lshr i32 %4332, 4
  %4334 = trunc i32 %4333 to i8
  %4335 = and i8 %4334, 1
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4335, i8* %4336, align 1
  %4337 = icmp eq i32 %4318, 0
  %4338 = zext i1 %4337 to i8
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4338, i8* %4339, align 1
  %4340 = lshr i32 %4318, 31
  %4341 = trunc i32 %4340 to i8
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4341, i8* %4342, align 1
  %4343 = lshr i32 %4315, 31
  %4344 = lshr i32 %4317, 31
  %4345 = xor i32 %4340, %4343
  %4346 = xor i32 %4340, %4344
  %4347 = add i32 %4345, %4346
  %4348 = icmp eq i32 %4347, 2
  %4349 = zext i1 %4348 to i8
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4349, i8* %4350, align 1
  store %struct.Memory* %loadMem_40b052, %struct.Memory** %MEMORY
  %loadMem_40b055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4352 = getelementptr inbounds %struct.GPR, %struct.GPR* %4351, i32 0, i32 33
  %4353 = getelementptr inbounds %struct.Reg, %struct.Reg* %4352, i32 0, i32 0
  %PC.i1801 = bitcast %union.anon* %4353 to i64*
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4355 = getelementptr inbounds %struct.GPR, %struct.GPR* %4354, i32 0, i32 5
  %4356 = getelementptr inbounds %struct.Reg, %struct.Reg* %4355, i32 0, i32 0
  %RCX.i1802 = bitcast %union.anon* %4356 to i64*
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4358 = getelementptr inbounds %struct.GPR, %struct.GPR* %4357, i32 0, i32 15
  %4359 = getelementptr inbounds %struct.Reg, %struct.Reg* %4358, i32 0, i32 0
  %RBP.i1803 = bitcast %union.anon* %4359 to i64*
  %4360 = load i64, i64* %RBP.i1803
  %4361 = sub i64 %4360, 20
  %4362 = load i64, i64* %PC.i1801
  %4363 = add i64 %4362, 4
  store i64 %4363, i64* %PC.i1801
  %4364 = inttoptr i64 %4361 to i32*
  %4365 = load i32, i32* %4364
  %4366 = sext i32 %4365 to i64
  store i64 %4366, i64* %RCX.i1802, align 8
  store %struct.Memory* %loadMem_40b055, %struct.Memory** %MEMORY
  %loadMem_40b059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4368 = getelementptr inbounds %struct.GPR, %struct.GPR* %4367, i32 0, i32 33
  %4369 = getelementptr inbounds %struct.Reg, %struct.Reg* %4368, i32 0, i32 0
  %PC.i1797 = bitcast %union.anon* %4369 to i64*
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 1
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %EAX.i1798 = bitcast %union.anon* %4372 to i32*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 5
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %RCX.i1799 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 15
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RBP.i1800 = bitcast %union.anon* %4378 to i64*
  %4379 = load i64, i64* %RBP.i1800
  %4380 = load i64, i64* %RCX.i1799
  %4381 = mul i64 %4380, 4
  %4382 = add i64 %4379, -48
  %4383 = add i64 %4382, %4381
  %4384 = load i32, i32* %EAX.i1798
  %4385 = zext i32 %4384 to i64
  %4386 = load i64, i64* %PC.i1797
  %4387 = add i64 %4386, 4
  store i64 %4387, i64* %PC.i1797
  %4388 = inttoptr i64 %4383 to i32*
  store i32 %4384, i32* %4388
  store %struct.Memory* %loadMem_40b059, %struct.Memory** %MEMORY
  %loadMem_40b05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4390 = getelementptr inbounds %struct.GPR, %struct.GPR* %4389, i32 0, i32 33
  %4391 = getelementptr inbounds %struct.Reg, %struct.Reg* %4390, i32 0, i32 0
  %PC.i1795 = bitcast %union.anon* %4391 to i64*
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 5
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %RCX.i1796 = bitcast %union.anon* %4394 to i64*
  %4395 = load i64, i64* %PC.i1795
  %4396 = add i64 %4395, 8
  store i64 %4396, i64* %PC.i1795
  %4397 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4397, i64* %RCX.i1796, align 8
  store %struct.Memory* %loadMem_40b05d, %struct.Memory** %MEMORY
  %loadMem_40b065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 33
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %PC.i1793 = bitcast %union.anon* %4400 to i64*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4402 = getelementptr inbounds %struct.GPR, %struct.GPR* %4401, i32 0, i32 5
  %4403 = getelementptr inbounds %struct.Reg, %struct.Reg* %4402, i32 0, i32 0
  %RCX.i1794 = bitcast %union.anon* %4403 to i64*
  %4404 = load i64, i64* %RCX.i1794
  %4405 = load i64, i64* %PC.i1793
  %4406 = add i64 %4405, 7
  store i64 %4406, i64* %PC.i1793
  %4407 = add i64 13112, %4404
  store i64 %4407, i64* %RCX.i1794, align 8
  %4408 = icmp ult i64 %4407, %4404
  %4409 = icmp ult i64 %4407, 13112
  %4410 = or i1 %4408, %4409
  %4411 = zext i1 %4410 to i8
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4411, i8* %4412, align 1
  %4413 = trunc i64 %4407 to i32
  %4414 = and i32 %4413, 255
  %4415 = call i32 @llvm.ctpop.i32(i32 %4414)
  %4416 = trunc i32 %4415 to i8
  %4417 = and i8 %4416, 1
  %4418 = xor i8 %4417, 1
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4418, i8* %4419, align 1
  %4420 = xor i64 13112, %4404
  %4421 = xor i64 %4420, %4407
  %4422 = lshr i64 %4421, 4
  %4423 = trunc i64 %4422 to i8
  %4424 = and i8 %4423, 1
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4424, i8* %4425, align 1
  %4426 = icmp eq i64 %4407, 0
  %4427 = zext i1 %4426 to i8
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4427, i8* %4428, align 1
  %4429 = lshr i64 %4407, 63
  %4430 = trunc i64 %4429 to i8
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4430, i8* %4431, align 1
  %4432 = lshr i64 %4404, 63
  %4433 = xor i64 %4429, %4432
  %4434 = add i64 %4433, %4429
  %4435 = icmp eq i64 %4434, 2
  %4436 = zext i1 %4435 to i8
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4436, i8* %4437, align 1
  store %struct.Memory* %loadMem_40b065, %struct.Memory** %MEMORY
  %loadMem_40b06c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4439 = getelementptr inbounds %struct.GPR, %struct.GPR* %4438, i32 0, i32 33
  %4440 = getelementptr inbounds %struct.Reg, %struct.Reg* %4439, i32 0, i32 0
  %PC.i1790 = bitcast %union.anon* %4440 to i64*
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 7
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %RDX.i1791 = bitcast %union.anon* %4443 to i64*
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 15
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %RBP.i1792 = bitcast %union.anon* %4446 to i64*
  %4447 = load i64, i64* %RBP.i1792
  %4448 = sub i64 %4447, 16
  %4449 = load i64, i64* %PC.i1790
  %4450 = add i64 %4449, 4
  store i64 %4450, i64* %PC.i1790
  %4451 = inttoptr i64 %4448 to i32*
  %4452 = load i32, i32* %4451
  %4453 = sext i32 %4452 to i64
  store i64 %4453, i64* %RDX.i1791, align 8
  store %struct.Memory* %loadMem_40b06c, %struct.Memory** %MEMORY
  %loadMem_40b070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 33
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %PC.i1788 = bitcast %union.anon* %4456 to i64*
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4458 = getelementptr inbounds %struct.GPR, %struct.GPR* %4457, i32 0, i32 7
  %4459 = getelementptr inbounds %struct.Reg, %struct.Reg* %4458, i32 0, i32 0
  %RDX.i1789 = bitcast %union.anon* %4459 to i64*
  %4460 = load i64, i64* %RDX.i1789
  %4461 = load i64, i64* %PC.i1788
  %4462 = add i64 %4461, 4
  store i64 %4462, i64* %PC.i1788
  %4463 = shl i64 %4460, 5
  %4464 = icmp slt i64 %4463, 0
  %4465 = shl i64 %4463, 1
  store i64 %4465, i64* %RDX.i1789, align 8
  %4466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4467 = zext i1 %4464 to i8
  store i8 %4467, i8* %4466, align 1
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4469 = trunc i64 %4465 to i32
  %4470 = and i32 %4469, 254
  %4471 = call i32 @llvm.ctpop.i32(i32 %4470)
  %4472 = trunc i32 %4471 to i8
  %4473 = and i8 %4472, 1
  %4474 = xor i8 %4473, 1
  store i8 %4474, i8* %4468, align 1
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4475, align 1
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4477 = icmp eq i64 %4465, 0
  %4478 = zext i1 %4477 to i8
  store i8 %4478, i8* %4476, align 1
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4480 = lshr i64 %4465, 63
  %4481 = trunc i64 %4480 to i8
  store i8 %4481, i8* %4479, align 1
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4482, align 1
  store %struct.Memory* %loadMem_40b070, %struct.Memory** %MEMORY
  %loadMem_40b074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 33
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %PC.i1785 = bitcast %union.anon* %4485 to i64*
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 5
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %RCX.i1786 = bitcast %union.anon* %4488 to i64*
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4490 = getelementptr inbounds %struct.GPR, %struct.GPR* %4489, i32 0, i32 7
  %4491 = getelementptr inbounds %struct.Reg, %struct.Reg* %4490, i32 0, i32 0
  %RDX.i1787 = bitcast %union.anon* %4491 to i64*
  %4492 = load i64, i64* %RCX.i1786
  %4493 = load i64, i64* %RDX.i1787
  %4494 = load i64, i64* %PC.i1785
  %4495 = add i64 %4494, 3
  store i64 %4495, i64* %PC.i1785
  %4496 = add i64 %4493, %4492
  store i64 %4496, i64* %RCX.i1786, align 8
  %4497 = icmp ult i64 %4496, %4492
  %4498 = icmp ult i64 %4496, %4493
  %4499 = or i1 %4497, %4498
  %4500 = zext i1 %4499 to i8
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4500, i8* %4501, align 1
  %4502 = trunc i64 %4496 to i32
  %4503 = and i32 %4502, 255
  %4504 = call i32 @llvm.ctpop.i32(i32 %4503)
  %4505 = trunc i32 %4504 to i8
  %4506 = and i8 %4505, 1
  %4507 = xor i8 %4506, 1
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4507, i8* %4508, align 1
  %4509 = xor i64 %4493, %4492
  %4510 = xor i64 %4509, %4496
  %4511 = lshr i64 %4510, 4
  %4512 = trunc i64 %4511 to i8
  %4513 = and i8 %4512, 1
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4513, i8* %4514, align 1
  %4515 = icmp eq i64 %4496, 0
  %4516 = zext i1 %4515 to i8
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4516, i8* %4517, align 1
  %4518 = lshr i64 %4496, 63
  %4519 = trunc i64 %4518 to i8
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4519, i8* %4520, align 1
  %4521 = lshr i64 %4492, 63
  %4522 = lshr i64 %4493, 63
  %4523 = xor i64 %4518, %4521
  %4524 = xor i64 %4518, %4522
  %4525 = add i64 %4523, %4524
  %4526 = icmp eq i64 %4525, 2
  %4527 = zext i1 %4526 to i8
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4527, i8* %4528, align 1
  store %struct.Memory* %loadMem_40b074, %struct.Memory** %MEMORY
  %loadMem_40b077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4530 = getelementptr inbounds %struct.GPR, %struct.GPR* %4529, i32 0, i32 33
  %4531 = getelementptr inbounds %struct.Reg, %struct.Reg* %4530, i32 0, i32 0
  %PC.i1782 = bitcast %union.anon* %4531 to i64*
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4533 = getelementptr inbounds %struct.GPR, %struct.GPR* %4532, i32 0, i32 7
  %4534 = getelementptr inbounds %struct.Reg, %struct.Reg* %4533, i32 0, i32 0
  %RDX.i1783 = bitcast %union.anon* %4534 to i64*
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 15
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %RBP.i1784 = bitcast %union.anon* %4537 to i64*
  %4538 = load i64, i64* %RBP.i1784
  %4539 = sub i64 %4538, 20
  %4540 = load i64, i64* %PC.i1782
  %4541 = add i64 %4540, 4
  store i64 %4541, i64* %PC.i1782
  %4542 = inttoptr i64 %4539 to i32*
  %4543 = load i32, i32* %4542
  %4544 = sext i32 %4543 to i64
  store i64 %4544, i64* %RDX.i1783, align 8
  store %struct.Memory* %loadMem_40b077, %struct.Memory** %MEMORY
  %loadMem_40b07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4546 = getelementptr inbounds %struct.GPR, %struct.GPR* %4545, i32 0, i32 33
  %4547 = getelementptr inbounds %struct.Reg, %struct.Reg* %4546, i32 0, i32 0
  %PC.i1778 = bitcast %union.anon* %4547 to i64*
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4549 = getelementptr inbounds %struct.GPR, %struct.GPR* %4548, i32 0, i32 1
  %4550 = getelementptr inbounds %struct.Reg, %struct.Reg* %4549, i32 0, i32 0
  %RAX.i1779 = bitcast %union.anon* %4550 to i64*
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 5
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %RCX.i1780 = bitcast %union.anon* %4553 to i64*
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 7
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %RDX.i1781 = bitcast %union.anon* %4556 to i64*
  %4557 = load i64, i64* %RCX.i1780
  %4558 = load i64, i64* %RDX.i1781
  %4559 = mul i64 %4558, 4
  %4560 = add i64 %4559, %4557
  %4561 = load i64, i64* %PC.i1778
  %4562 = add i64 %4561, 3
  store i64 %4562, i64* %PC.i1778
  %4563 = inttoptr i64 %4560 to i32*
  %4564 = load i32, i32* %4563
  %4565 = zext i32 %4564 to i64
  store i64 %4565, i64* %RAX.i1779, align 8
  store %struct.Memory* %loadMem_40b07b, %struct.Memory** %MEMORY
  %loadMem_40b07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 33
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %PC.i1776 = bitcast %union.anon* %4568 to i64*
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4570 = getelementptr inbounds %struct.GPR, %struct.GPR* %4569, i32 0, i32 5
  %4571 = getelementptr inbounds %struct.Reg, %struct.Reg* %4570, i32 0, i32 0
  %RCX.i1777 = bitcast %union.anon* %4571 to i64*
  %4572 = load i64, i64* %PC.i1776
  %4573 = add i64 %4572, 8
  store i64 %4573, i64* %PC.i1776
  %4574 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4574, i64* %RCX.i1777, align 8
  store %struct.Memory* %loadMem_40b07e, %struct.Memory** %MEMORY
  %loadMem_40b086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4576 = getelementptr inbounds %struct.GPR, %struct.GPR* %4575, i32 0, i32 33
  %4577 = getelementptr inbounds %struct.Reg, %struct.Reg* %4576, i32 0, i32 0
  %PC.i1774 = bitcast %union.anon* %4577 to i64*
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4579 = getelementptr inbounds %struct.GPR, %struct.GPR* %4578, i32 0, i32 5
  %4580 = getelementptr inbounds %struct.Reg, %struct.Reg* %4579, i32 0, i32 0
  %RCX.i1775 = bitcast %union.anon* %4580 to i64*
  %4581 = load i64, i64* %RCX.i1775
  %4582 = load i64, i64* %PC.i1774
  %4583 = add i64 %4582, 7
  store i64 %4583, i64* %PC.i1774
  %4584 = add i64 13112, %4581
  store i64 %4584, i64* %RCX.i1775, align 8
  %4585 = icmp ult i64 %4584, %4581
  %4586 = icmp ult i64 %4584, 13112
  %4587 = or i1 %4585, %4586
  %4588 = zext i1 %4587 to i8
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4588, i8* %4589, align 1
  %4590 = trunc i64 %4584 to i32
  %4591 = and i32 %4590, 255
  %4592 = call i32 @llvm.ctpop.i32(i32 %4591)
  %4593 = trunc i32 %4592 to i8
  %4594 = and i8 %4593, 1
  %4595 = xor i8 %4594, 1
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4595, i8* %4596, align 1
  %4597 = xor i64 13112, %4581
  %4598 = xor i64 %4597, %4584
  %4599 = lshr i64 %4598, 4
  %4600 = trunc i64 %4599 to i8
  %4601 = and i8 %4600, 1
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4601, i8* %4602, align 1
  %4603 = icmp eq i64 %4584, 0
  %4604 = zext i1 %4603 to i8
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4604, i8* %4605, align 1
  %4606 = lshr i64 %4584, 63
  %4607 = trunc i64 %4606 to i8
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4607, i8* %4608, align 1
  %4609 = lshr i64 %4581, 63
  %4610 = xor i64 %4606, %4609
  %4611 = add i64 %4610, %4606
  %4612 = icmp eq i64 %4611, 2
  %4613 = zext i1 %4612 to i8
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4613, i8* %4614, align 1
  store %struct.Memory* %loadMem_40b086, %struct.Memory** %MEMORY
  %loadMem_40b08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 33
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %4617 to i64*
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4619 = getelementptr inbounds %struct.GPR, %struct.GPR* %4618, i32 0, i32 7
  %4620 = getelementptr inbounds %struct.Reg, %struct.Reg* %4619, i32 0, i32 0
  %RDX.i1772 = bitcast %union.anon* %4620 to i64*
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4622 = getelementptr inbounds %struct.GPR, %struct.GPR* %4621, i32 0, i32 15
  %4623 = getelementptr inbounds %struct.Reg, %struct.Reg* %4622, i32 0, i32 0
  %RBP.i1773 = bitcast %union.anon* %4623 to i64*
  %4624 = load i64, i64* %RBP.i1773
  %4625 = sub i64 %4624, 16
  %4626 = load i64, i64* %PC.i1771
  %4627 = add i64 %4626, 4
  store i64 %4627, i64* %PC.i1771
  %4628 = inttoptr i64 %4625 to i32*
  %4629 = load i32, i32* %4628
  %4630 = sext i32 %4629 to i64
  store i64 %4630, i64* %RDX.i1772, align 8
  store %struct.Memory* %loadMem_40b08d, %struct.Memory** %MEMORY
  %loadMem_40b091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 33
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %PC.i1769 = bitcast %union.anon* %4633 to i64*
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 7
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %4636 to i64*
  %4637 = load i64, i64* %RDX.i1770
  %4638 = load i64, i64* %PC.i1769
  %4639 = add i64 %4638, 4
  store i64 %4639, i64* %PC.i1769
  %4640 = shl i64 %4637, 5
  %4641 = icmp slt i64 %4640, 0
  %4642 = shl i64 %4640, 1
  store i64 %4642, i64* %RDX.i1770, align 8
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4644 = zext i1 %4641 to i8
  store i8 %4644, i8* %4643, align 1
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4646 = trunc i64 %4642 to i32
  %4647 = and i32 %4646, 254
  %4648 = call i32 @llvm.ctpop.i32(i32 %4647)
  %4649 = trunc i32 %4648 to i8
  %4650 = and i8 %4649, 1
  %4651 = xor i8 %4650, 1
  store i8 %4651, i8* %4645, align 1
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4652, align 1
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4654 = icmp eq i64 %4642, 0
  %4655 = zext i1 %4654 to i8
  store i8 %4655, i8* %4653, align 1
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4657 = lshr i64 %4642, 63
  %4658 = trunc i64 %4657 to i8
  store i8 %4658, i8* %4656, align 1
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4659, align 1
  store %struct.Memory* %loadMem_40b091, %struct.Memory** %MEMORY
  %loadMem_40b095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4661 = getelementptr inbounds %struct.GPR, %struct.GPR* %4660, i32 0, i32 33
  %4662 = getelementptr inbounds %struct.Reg, %struct.Reg* %4661, i32 0, i32 0
  %PC.i1766 = bitcast %union.anon* %4662 to i64*
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 5
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %RCX.i1767 = bitcast %union.anon* %4665 to i64*
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4667 = getelementptr inbounds %struct.GPR, %struct.GPR* %4666, i32 0, i32 7
  %4668 = getelementptr inbounds %struct.Reg, %struct.Reg* %4667, i32 0, i32 0
  %RDX.i1768 = bitcast %union.anon* %4668 to i64*
  %4669 = load i64, i64* %RCX.i1767
  %4670 = load i64, i64* %RDX.i1768
  %4671 = load i64, i64* %PC.i1766
  %4672 = add i64 %4671, 3
  store i64 %4672, i64* %PC.i1766
  %4673 = add i64 %4670, %4669
  store i64 %4673, i64* %RCX.i1767, align 8
  %4674 = icmp ult i64 %4673, %4669
  %4675 = icmp ult i64 %4673, %4670
  %4676 = or i1 %4674, %4675
  %4677 = zext i1 %4676 to i8
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4677, i8* %4678, align 1
  %4679 = trunc i64 %4673 to i32
  %4680 = and i32 %4679, 255
  %4681 = call i32 @llvm.ctpop.i32(i32 %4680)
  %4682 = trunc i32 %4681 to i8
  %4683 = and i8 %4682, 1
  %4684 = xor i8 %4683, 1
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4684, i8* %4685, align 1
  %4686 = xor i64 %4670, %4669
  %4687 = xor i64 %4686, %4673
  %4688 = lshr i64 %4687, 4
  %4689 = trunc i64 %4688 to i8
  %4690 = and i8 %4689, 1
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4690, i8* %4691, align 1
  %4692 = icmp eq i64 %4673, 0
  %4693 = zext i1 %4692 to i8
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4693, i8* %4694, align 1
  %4695 = lshr i64 %4673, 63
  %4696 = trunc i64 %4695 to i8
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4696, i8* %4697, align 1
  %4698 = lshr i64 %4669, 63
  %4699 = lshr i64 %4670, 63
  %4700 = xor i64 %4695, %4698
  %4701 = xor i64 %4695, %4699
  %4702 = add i64 %4700, %4701
  %4703 = icmp eq i64 %4702, 2
  %4704 = zext i1 %4703 to i8
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4704, i8* %4705, align 1
  store %struct.Memory* %loadMem_40b095, %struct.Memory** %MEMORY
  %loadMem_40b098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4707 = getelementptr inbounds %struct.GPR, %struct.GPR* %4706, i32 0, i32 33
  %4708 = getelementptr inbounds %struct.Reg, %struct.Reg* %4707, i32 0, i32 0
  %PC.i1763 = bitcast %union.anon* %4708 to i64*
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4710 = getelementptr inbounds %struct.GPR, %struct.GPR* %4709, i32 0, i32 7
  %4711 = getelementptr inbounds %struct.Reg, %struct.Reg* %4710, i32 0, i32 0
  %RDX.i1764 = bitcast %union.anon* %4711 to i64*
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4713 = getelementptr inbounds %struct.GPR, %struct.GPR* %4712, i32 0, i32 15
  %4714 = getelementptr inbounds %struct.Reg, %struct.Reg* %4713, i32 0, i32 0
  %RBP.i1765 = bitcast %union.anon* %4714 to i64*
  %4715 = load i64, i64* %RBP.i1765
  %4716 = sub i64 %4715, 28
  %4717 = load i64, i64* %PC.i1763
  %4718 = add i64 %4717, 4
  store i64 %4718, i64* %PC.i1763
  %4719 = inttoptr i64 %4716 to i32*
  %4720 = load i32, i32* %4719
  %4721 = sext i32 %4720 to i64
  store i64 %4721, i64* %RDX.i1764, align 8
  store %struct.Memory* %loadMem_40b098, %struct.Memory** %MEMORY
  %loadMem_40b09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4723 = getelementptr inbounds %struct.GPR, %struct.GPR* %4722, i32 0, i32 33
  %4724 = getelementptr inbounds %struct.Reg, %struct.Reg* %4723, i32 0, i32 0
  %PC.i1759 = bitcast %union.anon* %4724 to i64*
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 1
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %RAX.i1760 = bitcast %union.anon* %4727 to i64*
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4729 = getelementptr inbounds %struct.GPR, %struct.GPR* %4728, i32 0, i32 5
  %4730 = getelementptr inbounds %struct.Reg, %struct.Reg* %4729, i32 0, i32 0
  %RCX.i1761 = bitcast %union.anon* %4730 to i64*
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 7
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %RDX.i1762 = bitcast %union.anon* %4733 to i64*
  %4734 = load i64, i64* %RAX.i1760
  %4735 = load i64, i64* %RCX.i1761
  %4736 = load i64, i64* %RDX.i1762
  %4737 = mul i64 %4736, 4
  %4738 = add i64 %4737, %4735
  %4739 = load i64, i64* %PC.i1759
  %4740 = add i64 %4739, 3
  store i64 %4740, i64* %PC.i1759
  %4741 = trunc i64 %4734 to i32
  %4742 = inttoptr i64 %4738 to i32*
  %4743 = load i32, i32* %4742
  %4744 = sub i32 %4741, %4743
  %4745 = zext i32 %4744 to i64
  store i64 %4745, i64* %RAX.i1760, align 8
  %4746 = icmp ult i32 %4741, %4743
  %4747 = zext i1 %4746 to i8
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4747, i8* %4748, align 1
  %4749 = and i32 %4744, 255
  %4750 = call i32 @llvm.ctpop.i32(i32 %4749)
  %4751 = trunc i32 %4750 to i8
  %4752 = and i8 %4751, 1
  %4753 = xor i8 %4752, 1
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4753, i8* %4754, align 1
  %4755 = xor i32 %4743, %4741
  %4756 = xor i32 %4755, %4744
  %4757 = lshr i32 %4756, 4
  %4758 = trunc i32 %4757 to i8
  %4759 = and i8 %4758, 1
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4759, i8* %4760, align 1
  %4761 = icmp eq i32 %4744, 0
  %4762 = zext i1 %4761 to i8
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4762, i8* %4763, align 1
  %4764 = lshr i32 %4744, 31
  %4765 = trunc i32 %4764 to i8
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4765, i8* %4766, align 1
  %4767 = lshr i32 %4741, 31
  %4768 = lshr i32 %4743, 31
  %4769 = xor i32 %4768, %4767
  %4770 = xor i32 %4764, %4767
  %4771 = add i32 %4770, %4769
  %4772 = icmp eq i32 %4771, 2
  %4773 = zext i1 %4772 to i8
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4773, i8* %4774, align 1
  store %struct.Memory* %loadMem_40b09c, %struct.Memory** %MEMORY
  %loadMem_40b09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 33
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %PC.i1756 = bitcast %union.anon* %4777 to i64*
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 5
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %RCX.i1757 = bitcast %union.anon* %4780 to i64*
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 15
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %RBP.i1758 = bitcast %union.anon* %4783 to i64*
  %4784 = load i64, i64* %RBP.i1758
  %4785 = sub i64 %4784, 28
  %4786 = load i64, i64* %PC.i1756
  %4787 = add i64 %4786, 4
  store i64 %4787, i64* %PC.i1756
  %4788 = inttoptr i64 %4785 to i32*
  %4789 = load i32, i32* %4788
  %4790 = sext i32 %4789 to i64
  store i64 %4790, i64* %RCX.i1757, align 8
  store %struct.Memory* %loadMem_40b09f, %struct.Memory** %MEMORY
  %loadMem_40b0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4792 = getelementptr inbounds %struct.GPR, %struct.GPR* %4791, i32 0, i32 33
  %4793 = getelementptr inbounds %struct.Reg, %struct.Reg* %4792, i32 0, i32 0
  %PC.i1752 = bitcast %union.anon* %4793 to i64*
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 1
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %EAX.i1753 = bitcast %union.anon* %4796 to i32*
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4798 = getelementptr inbounds %struct.GPR, %struct.GPR* %4797, i32 0, i32 5
  %4799 = getelementptr inbounds %struct.Reg, %struct.Reg* %4798, i32 0, i32 0
  %RCX.i1754 = bitcast %union.anon* %4799 to i64*
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4801 = getelementptr inbounds %struct.GPR, %struct.GPR* %4800, i32 0, i32 15
  %4802 = getelementptr inbounds %struct.Reg, %struct.Reg* %4801, i32 0, i32 0
  %RBP.i1755 = bitcast %union.anon* %4802 to i64*
  %4803 = load i64, i64* %RBP.i1755
  %4804 = load i64, i64* %RCX.i1754
  %4805 = mul i64 %4804, 4
  %4806 = add i64 %4803, -48
  %4807 = add i64 %4806, %4805
  %4808 = load i32, i32* %EAX.i1753
  %4809 = zext i32 %4808 to i64
  %4810 = load i64, i64* %PC.i1752
  %4811 = add i64 %4810, 4
  store i64 %4811, i64* %PC.i1752
  %4812 = inttoptr i64 %4807 to i32*
  store i32 %4808, i32* %4812
  store %struct.Memory* %loadMem_40b0a3, %struct.Memory** %MEMORY
  %loadMem_40b0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 33
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %PC.i1749 = bitcast %union.anon* %4815 to i64*
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 1
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %RAX.i1750 = bitcast %union.anon* %4818 to i64*
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4820 = getelementptr inbounds %struct.GPR, %struct.GPR* %4819, i32 0, i32 15
  %4821 = getelementptr inbounds %struct.Reg, %struct.Reg* %4820, i32 0, i32 0
  %RBP.i1751 = bitcast %union.anon* %4821 to i64*
  %4822 = load i64, i64* %RBP.i1751
  %4823 = sub i64 %4822, 20
  %4824 = load i64, i64* %PC.i1749
  %4825 = add i64 %4824, 3
  store i64 %4825, i64* %PC.i1749
  %4826 = inttoptr i64 %4823 to i32*
  %4827 = load i32, i32* %4826
  %4828 = zext i32 %4827 to i64
  store i64 %4828, i64* %RAX.i1750, align 8
  store %struct.Memory* %loadMem_40b0a7, %struct.Memory** %MEMORY
  %loadMem_40b0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4830 = getelementptr inbounds %struct.GPR, %struct.GPR* %4829, i32 0, i32 33
  %4831 = getelementptr inbounds %struct.Reg, %struct.Reg* %4830, i32 0, i32 0
  %PC.i1747 = bitcast %union.anon* %4831 to i64*
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4833 = getelementptr inbounds %struct.GPR, %struct.GPR* %4832, i32 0, i32 1
  %4834 = getelementptr inbounds %struct.Reg, %struct.Reg* %4833, i32 0, i32 0
  %RAX.i1748 = bitcast %union.anon* %4834 to i64*
  %4835 = load i64, i64* %RAX.i1748
  %4836 = load i64, i64* %PC.i1747
  %4837 = add i64 %4836, 3
  store i64 %4837, i64* %PC.i1747
  %4838 = trunc i64 %4835 to i32
  %4839 = add i32 1, %4838
  %4840 = zext i32 %4839 to i64
  store i64 %4840, i64* %RAX.i1748, align 8
  %4841 = icmp ult i32 %4839, %4838
  %4842 = icmp ult i32 %4839, 1
  %4843 = or i1 %4841, %4842
  %4844 = zext i1 %4843 to i8
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4844, i8* %4845, align 1
  %4846 = and i32 %4839, 255
  %4847 = call i32 @llvm.ctpop.i32(i32 %4846)
  %4848 = trunc i32 %4847 to i8
  %4849 = and i8 %4848, 1
  %4850 = xor i8 %4849, 1
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4850, i8* %4851, align 1
  %4852 = xor i64 1, %4835
  %4853 = trunc i64 %4852 to i32
  %4854 = xor i32 %4853, %4839
  %4855 = lshr i32 %4854, 4
  %4856 = trunc i32 %4855 to i8
  %4857 = and i8 %4856, 1
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4857, i8* %4858, align 1
  %4859 = icmp eq i32 %4839, 0
  %4860 = zext i1 %4859 to i8
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4860, i8* %4861, align 1
  %4862 = lshr i32 %4839, 31
  %4863 = trunc i32 %4862 to i8
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4863, i8* %4864, align 1
  %4865 = lshr i32 %4838, 31
  %4866 = xor i32 %4862, %4865
  %4867 = add i32 %4866, %4862
  %4868 = icmp eq i32 %4867, 2
  %4869 = zext i1 %4868 to i8
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4869, i8* %4870, align 1
  store %struct.Memory* %loadMem_40b0aa, %struct.Memory** %MEMORY
  %loadMem_40b0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 33
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %4873 to i64*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 1
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %EAX.i1745 = bitcast %union.anon* %4876 to i32*
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4878 = getelementptr inbounds %struct.GPR, %struct.GPR* %4877, i32 0, i32 15
  %4879 = getelementptr inbounds %struct.Reg, %struct.Reg* %4878, i32 0, i32 0
  %RBP.i1746 = bitcast %union.anon* %4879 to i64*
  %4880 = load i64, i64* %RBP.i1746
  %4881 = sub i64 %4880, 20
  %4882 = load i32, i32* %EAX.i1745
  %4883 = zext i32 %4882 to i64
  %4884 = load i64, i64* %PC.i1744
  %4885 = add i64 %4884, 3
  store i64 %4885, i64* %PC.i1744
  %4886 = inttoptr i64 %4881 to i32*
  store i32 %4882, i32* %4886
  store %struct.Memory* %loadMem_40b0ad, %struct.Memory** %MEMORY
  %loadMem_40b0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 33
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %4889 to i64*
  %4890 = load i64, i64* %PC.i1743
  %4891 = add i64 %4890, -178
  %4892 = load i64, i64* %PC.i1743
  %4893 = add i64 %4892, 5
  store i64 %4893, i64* %PC.i1743
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4891, i64* %4894, align 8
  store %struct.Memory* %loadMem_40b0b0, %struct.Memory** %MEMORY
  br label %block_.L_40affe

block_.L_40b0b5:                                  ; preds = %block_.L_40affe
  %loadMem_40b0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 33
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %4897 to i64*
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4899 = getelementptr inbounds %struct.GPR, %struct.GPR* %4898, i32 0, i32 1
  %4900 = getelementptr inbounds %struct.Reg, %struct.Reg* %4899, i32 0, i32 0
  %RAX.i1741 = bitcast %union.anon* %4900 to i64*
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4902 = getelementptr inbounds %struct.GPR, %struct.GPR* %4901, i32 0, i32 15
  %4903 = getelementptr inbounds %struct.Reg, %struct.Reg* %4902, i32 0, i32 0
  %RBP.i1742 = bitcast %union.anon* %4903 to i64*
  %4904 = load i64, i64* %RBP.i1742
  %4905 = sub i64 %4904, 48
  %4906 = load i64, i64* %PC.i1740
  %4907 = add i64 %4906, 3
  store i64 %4907, i64* %PC.i1740
  %4908 = inttoptr i64 %4905 to i32*
  %4909 = load i32, i32* %4908
  %4910 = zext i32 %4909 to i64
  store i64 %4910, i64* %RAX.i1741, align 8
  store %struct.Memory* %loadMem_40b0b5, %struct.Memory** %MEMORY
  %loadMem_40b0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4912 = getelementptr inbounds %struct.GPR, %struct.GPR* %4911, i32 0, i32 33
  %4913 = getelementptr inbounds %struct.Reg, %struct.Reg* %4912, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %4913 to i64*
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4915 = getelementptr inbounds %struct.GPR, %struct.GPR* %4914, i32 0, i32 1
  %4916 = getelementptr inbounds %struct.Reg, %struct.Reg* %4915, i32 0, i32 0
  %RAX.i1738 = bitcast %union.anon* %4916 to i64*
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 15
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %RBP.i1739 = bitcast %union.anon* %4919 to i64*
  %4920 = load i64, i64* %RAX.i1738
  %4921 = load i64, i64* %RBP.i1739
  %4922 = sub i64 %4921, 44
  %4923 = load i64, i64* %PC.i1737
  %4924 = add i64 %4923, 3
  store i64 %4924, i64* %PC.i1737
  %4925 = trunc i64 %4920 to i32
  %4926 = inttoptr i64 %4922 to i32*
  %4927 = load i32, i32* %4926
  %4928 = add i32 %4927, %4925
  %4929 = zext i32 %4928 to i64
  store i64 %4929, i64* %RAX.i1738, align 8
  %4930 = icmp ult i32 %4928, %4925
  %4931 = icmp ult i32 %4928, %4927
  %4932 = or i1 %4930, %4931
  %4933 = zext i1 %4932 to i8
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4933, i8* %4934, align 1
  %4935 = and i32 %4928, 255
  %4936 = call i32 @llvm.ctpop.i32(i32 %4935)
  %4937 = trunc i32 %4936 to i8
  %4938 = and i8 %4937, 1
  %4939 = xor i8 %4938, 1
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4939, i8* %4940, align 1
  %4941 = xor i32 %4927, %4925
  %4942 = xor i32 %4941, %4928
  %4943 = lshr i32 %4942, 4
  %4944 = trunc i32 %4943 to i8
  %4945 = and i8 %4944, 1
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4945, i8* %4946, align 1
  %4947 = icmp eq i32 %4928, 0
  %4948 = zext i1 %4947 to i8
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4948, i8* %4949, align 1
  %4950 = lshr i32 %4928, 31
  %4951 = trunc i32 %4950 to i8
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4951, i8* %4952, align 1
  %4953 = lshr i32 %4925, 31
  %4954 = lshr i32 %4927, 31
  %4955 = xor i32 %4950, %4953
  %4956 = xor i32 %4950, %4954
  %4957 = add i32 %4955, %4956
  %4958 = icmp eq i32 %4957, 2
  %4959 = zext i1 %4958 to i8
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4959, i8* %4960, align 1
  store %struct.Memory* %loadMem_40b0b8, %struct.Memory** %MEMORY
  %loadMem_40b0bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4962 = getelementptr inbounds %struct.GPR, %struct.GPR* %4961, i32 0, i32 33
  %4963 = getelementptr inbounds %struct.Reg, %struct.Reg* %4962, i32 0, i32 0
  %PC.i1735 = bitcast %union.anon* %4963 to i64*
  %4964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4965 = getelementptr inbounds %struct.GPR, %struct.GPR* %4964, i32 0, i32 5
  %4966 = getelementptr inbounds %struct.Reg, %struct.Reg* %4965, i32 0, i32 0
  %RCX.i1736 = bitcast %union.anon* %4966 to i64*
  %4967 = load i64, i64* %PC.i1735
  %4968 = add i64 %4967, 8
  store i64 %4968, i64* %PC.i1735
  %4969 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4969, i64* %RCX.i1736, align 8
  store %struct.Memory* %loadMem_40b0bb, %struct.Memory** %MEMORY
  %loadMem_40b0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4971 = getelementptr inbounds %struct.GPR, %struct.GPR* %4970, i32 0, i32 33
  %4972 = getelementptr inbounds %struct.Reg, %struct.Reg* %4971, i32 0, i32 0
  %PC.i1733 = bitcast %union.anon* %4972 to i64*
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 5
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %RCX.i1734 = bitcast %union.anon* %4975 to i64*
  %4976 = load i64, i64* %RCX.i1734
  %4977 = load i64, i64* %PC.i1733
  %4978 = add i64 %4977, 7
  store i64 %4978, i64* %PC.i1733
  %4979 = add i64 13112, %4976
  store i64 %4979, i64* %RCX.i1734, align 8
  %4980 = icmp ult i64 %4979, %4976
  %4981 = icmp ult i64 %4979, 13112
  %4982 = or i1 %4980, %4981
  %4983 = zext i1 %4982 to i8
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4983, i8* %4984, align 1
  %4985 = trunc i64 %4979 to i32
  %4986 = and i32 %4985, 255
  %4987 = call i32 @llvm.ctpop.i32(i32 %4986)
  %4988 = trunc i32 %4987 to i8
  %4989 = and i8 %4988, 1
  %4990 = xor i8 %4989, 1
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4990, i8* %4991, align 1
  %4992 = xor i64 13112, %4976
  %4993 = xor i64 %4992, %4979
  %4994 = lshr i64 %4993, 4
  %4995 = trunc i64 %4994 to i8
  %4996 = and i8 %4995, 1
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4996, i8* %4997, align 1
  %4998 = icmp eq i64 %4979, 0
  %4999 = zext i1 %4998 to i8
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4999, i8* %5000, align 1
  %5001 = lshr i64 %4979, 63
  %5002 = trunc i64 %5001 to i8
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5002, i8* %5003, align 1
  %5004 = lshr i64 %4976, 63
  %5005 = xor i64 %5001, %5004
  %5006 = add i64 %5005, %5001
  %5007 = icmp eq i64 %5006, 2
  %5008 = zext i1 %5007 to i8
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5008, i8* %5009, align 1
  store %struct.Memory* %loadMem_40b0c3, %struct.Memory** %MEMORY
  %loadMem_40b0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5011 = getelementptr inbounds %struct.GPR, %struct.GPR* %5010, i32 0, i32 33
  %5012 = getelementptr inbounds %struct.Reg, %struct.Reg* %5011, i32 0, i32 0
  %PC.i1730 = bitcast %union.anon* %5012 to i64*
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5014 = getelementptr inbounds %struct.GPR, %struct.GPR* %5013, i32 0, i32 7
  %5015 = getelementptr inbounds %struct.Reg, %struct.Reg* %5014, i32 0, i32 0
  %RDX.i1731 = bitcast %union.anon* %5015 to i64*
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5017 = getelementptr inbounds %struct.GPR, %struct.GPR* %5016, i32 0, i32 15
  %5018 = getelementptr inbounds %struct.Reg, %struct.Reg* %5017, i32 0, i32 0
  %RBP.i1732 = bitcast %union.anon* %5018 to i64*
  %5019 = load i64, i64* %RBP.i1732
  %5020 = sub i64 %5019, 16
  %5021 = load i64, i64* %PC.i1730
  %5022 = add i64 %5021, 4
  store i64 %5022, i64* %PC.i1730
  %5023 = inttoptr i64 %5020 to i32*
  %5024 = load i32, i32* %5023
  %5025 = sext i32 %5024 to i64
  store i64 %5025, i64* %RDX.i1731, align 8
  store %struct.Memory* %loadMem_40b0ca, %struct.Memory** %MEMORY
  %loadMem_40b0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5027 = getelementptr inbounds %struct.GPR, %struct.GPR* %5026, i32 0, i32 33
  %5028 = getelementptr inbounds %struct.Reg, %struct.Reg* %5027, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %5028 to i64*
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5030 = getelementptr inbounds %struct.GPR, %struct.GPR* %5029, i32 0, i32 7
  %5031 = getelementptr inbounds %struct.Reg, %struct.Reg* %5030, i32 0, i32 0
  %RDX.i1729 = bitcast %union.anon* %5031 to i64*
  %5032 = load i64, i64* %RDX.i1729
  %5033 = load i64, i64* %PC.i1728
  %5034 = add i64 %5033, 4
  store i64 %5034, i64* %PC.i1728
  %5035 = shl i64 %5032, 5
  %5036 = icmp slt i64 %5035, 0
  %5037 = shl i64 %5035, 1
  store i64 %5037, i64* %RDX.i1729, align 8
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5039 = zext i1 %5036 to i8
  store i8 %5039, i8* %5038, align 1
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5041 = trunc i64 %5037 to i32
  %5042 = and i32 %5041, 254
  %5043 = call i32 @llvm.ctpop.i32(i32 %5042)
  %5044 = trunc i32 %5043 to i8
  %5045 = and i8 %5044, 1
  %5046 = xor i8 %5045, 1
  store i8 %5046, i8* %5040, align 1
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5047, align 1
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5049 = icmp eq i64 %5037, 0
  %5050 = zext i1 %5049 to i8
  store i8 %5050, i8* %5048, align 1
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5052 = lshr i64 %5037, 63
  %5053 = trunc i64 %5052 to i8
  store i8 %5053, i8* %5051, align 1
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5054, align 1
  store %struct.Memory* %loadMem_40b0ce, %struct.Memory** %MEMORY
  %loadMem_40b0d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 33
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %PC.i1725 = bitcast %union.anon* %5057 to i64*
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 5
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %RCX.i1726 = bitcast %union.anon* %5060 to i64*
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 7
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %RDX.i1727 = bitcast %union.anon* %5063 to i64*
  %5064 = load i64, i64* %RCX.i1726
  %5065 = load i64, i64* %RDX.i1727
  %5066 = load i64, i64* %PC.i1725
  %5067 = add i64 %5066, 3
  store i64 %5067, i64* %PC.i1725
  %5068 = add i64 %5065, %5064
  store i64 %5068, i64* %RCX.i1726, align 8
  %5069 = icmp ult i64 %5068, %5064
  %5070 = icmp ult i64 %5068, %5065
  %5071 = or i1 %5069, %5070
  %5072 = zext i1 %5071 to i8
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5072, i8* %5073, align 1
  %5074 = trunc i64 %5068 to i32
  %5075 = and i32 %5074, 255
  %5076 = call i32 @llvm.ctpop.i32(i32 %5075)
  %5077 = trunc i32 %5076 to i8
  %5078 = and i8 %5077, 1
  %5079 = xor i8 %5078, 1
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5079, i8* %5080, align 1
  %5081 = xor i64 %5065, %5064
  %5082 = xor i64 %5081, %5068
  %5083 = lshr i64 %5082, 4
  %5084 = trunc i64 %5083 to i8
  %5085 = and i8 %5084, 1
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5085, i8* %5086, align 1
  %5087 = icmp eq i64 %5068, 0
  %5088 = zext i1 %5087 to i8
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5088, i8* %5089, align 1
  %5090 = lshr i64 %5068, 63
  %5091 = trunc i64 %5090 to i8
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5091, i8* %5092, align 1
  %5093 = lshr i64 %5064, 63
  %5094 = lshr i64 %5065, 63
  %5095 = xor i64 %5090, %5093
  %5096 = xor i64 %5090, %5094
  %5097 = add i64 %5095, %5096
  %5098 = icmp eq i64 %5097, 2
  %5099 = zext i1 %5098 to i8
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5099, i8* %5100, align 1
  store %struct.Memory* %loadMem_40b0d2, %struct.Memory** %MEMORY
  %loadMem_40b0d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 33
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %5103 to i64*
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5105 = getelementptr inbounds %struct.GPR, %struct.GPR* %5104, i32 0, i32 1
  %5106 = getelementptr inbounds %struct.Reg, %struct.Reg* %5105, i32 0, i32 0
  %EAX.i1723 = bitcast %union.anon* %5106 to i32*
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 5
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %RCX.i1724 = bitcast %union.anon* %5109 to i64*
  %5110 = load i64, i64* %RCX.i1724
  %5111 = load i32, i32* %EAX.i1723
  %5112 = zext i32 %5111 to i64
  %5113 = load i64, i64* %PC.i1722
  %5114 = add i64 %5113, 2
  store i64 %5114, i64* %PC.i1722
  %5115 = inttoptr i64 %5110 to i32*
  store i32 %5111, i32* %5115
  store %struct.Memory* %loadMem_40b0d5, %struct.Memory** %MEMORY
  %loadMem_40b0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5117 = getelementptr inbounds %struct.GPR, %struct.GPR* %5116, i32 0, i32 33
  %5118 = getelementptr inbounds %struct.Reg, %struct.Reg* %5117, i32 0, i32 0
  %PC.i1719 = bitcast %union.anon* %5118 to i64*
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 1
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %RAX.i1720 = bitcast %union.anon* %5121 to i64*
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5123 = getelementptr inbounds %struct.GPR, %struct.GPR* %5122, i32 0, i32 15
  %5124 = getelementptr inbounds %struct.Reg, %struct.Reg* %5123, i32 0, i32 0
  %RBP.i1721 = bitcast %union.anon* %5124 to i64*
  %5125 = load i64, i64* %RBP.i1721
  %5126 = sub i64 %5125, 48
  %5127 = load i64, i64* %PC.i1719
  %5128 = add i64 %5127, 3
  store i64 %5128, i64* %PC.i1719
  %5129 = inttoptr i64 %5126 to i32*
  %5130 = load i32, i32* %5129
  %5131 = zext i32 %5130 to i64
  store i64 %5131, i64* %RAX.i1720, align 8
  store %struct.Memory* %loadMem_40b0d7, %struct.Memory** %MEMORY
  %loadMem_40b0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 33
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %5134 to i64*
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 1
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %RAX.i1717 = bitcast %union.anon* %5137 to i64*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 15
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %RBP.i1718 = bitcast %union.anon* %5140 to i64*
  %5141 = load i64, i64* %RAX.i1717
  %5142 = load i64, i64* %RBP.i1718
  %5143 = sub i64 %5142, 44
  %5144 = load i64, i64* %PC.i1716
  %5145 = add i64 %5144, 3
  store i64 %5145, i64* %PC.i1716
  %5146 = trunc i64 %5141 to i32
  %5147 = inttoptr i64 %5143 to i32*
  %5148 = load i32, i32* %5147
  %5149 = sub i32 %5146, %5148
  %5150 = zext i32 %5149 to i64
  store i64 %5150, i64* %RAX.i1717, align 8
  %5151 = icmp ult i32 %5146, %5148
  %5152 = zext i1 %5151 to i8
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5152, i8* %5153, align 1
  %5154 = and i32 %5149, 255
  %5155 = call i32 @llvm.ctpop.i32(i32 %5154)
  %5156 = trunc i32 %5155 to i8
  %5157 = and i8 %5156, 1
  %5158 = xor i8 %5157, 1
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5158, i8* %5159, align 1
  %5160 = xor i32 %5148, %5146
  %5161 = xor i32 %5160, %5149
  %5162 = lshr i32 %5161, 4
  %5163 = trunc i32 %5162 to i8
  %5164 = and i8 %5163, 1
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5164, i8* %5165, align 1
  %5166 = icmp eq i32 %5149, 0
  %5167 = zext i1 %5166 to i8
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5167, i8* %5168, align 1
  %5169 = lshr i32 %5149, 31
  %5170 = trunc i32 %5169 to i8
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5170, i8* %5171, align 1
  %5172 = lshr i32 %5146, 31
  %5173 = lshr i32 %5148, 31
  %5174 = xor i32 %5173, %5172
  %5175 = xor i32 %5169, %5172
  %5176 = add i32 %5175, %5174
  %5177 = icmp eq i32 %5176, 2
  %5178 = zext i1 %5177 to i8
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5178, i8* %5179, align 1
  store %struct.Memory* %loadMem_40b0da, %struct.Memory** %MEMORY
  %loadMem_40b0dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 33
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %5182 to i64*
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 5
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %RCX.i1715 = bitcast %union.anon* %5185 to i64*
  %5186 = load i64, i64* %PC.i1714
  %5187 = add i64 %5186, 8
  store i64 %5187, i64* %PC.i1714
  %5188 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5188, i64* %RCX.i1715, align 8
  store %struct.Memory* %loadMem_40b0dd, %struct.Memory** %MEMORY
  %loadMem_40b0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5190 = getelementptr inbounds %struct.GPR, %struct.GPR* %5189, i32 0, i32 33
  %5191 = getelementptr inbounds %struct.Reg, %struct.Reg* %5190, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %5191 to i64*
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5193 = getelementptr inbounds %struct.GPR, %struct.GPR* %5192, i32 0, i32 5
  %5194 = getelementptr inbounds %struct.Reg, %struct.Reg* %5193, i32 0, i32 0
  %RCX.i1713 = bitcast %union.anon* %5194 to i64*
  %5195 = load i64, i64* %RCX.i1713
  %5196 = load i64, i64* %PC.i1712
  %5197 = add i64 %5196, 7
  store i64 %5197, i64* %PC.i1712
  %5198 = add i64 13112, %5195
  store i64 %5198, i64* %RCX.i1713, align 8
  %5199 = icmp ult i64 %5198, %5195
  %5200 = icmp ult i64 %5198, 13112
  %5201 = or i1 %5199, %5200
  %5202 = zext i1 %5201 to i8
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5202, i8* %5203, align 1
  %5204 = trunc i64 %5198 to i32
  %5205 = and i32 %5204, 255
  %5206 = call i32 @llvm.ctpop.i32(i32 %5205)
  %5207 = trunc i32 %5206 to i8
  %5208 = and i8 %5207, 1
  %5209 = xor i8 %5208, 1
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5209, i8* %5210, align 1
  %5211 = xor i64 13112, %5195
  %5212 = xor i64 %5211, %5198
  %5213 = lshr i64 %5212, 4
  %5214 = trunc i64 %5213 to i8
  %5215 = and i8 %5214, 1
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5215, i8* %5216, align 1
  %5217 = icmp eq i64 %5198, 0
  %5218 = zext i1 %5217 to i8
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5218, i8* %5219, align 1
  %5220 = lshr i64 %5198, 63
  %5221 = trunc i64 %5220 to i8
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5221, i8* %5222, align 1
  %5223 = lshr i64 %5195, 63
  %5224 = xor i64 %5220, %5223
  %5225 = add i64 %5224, %5220
  %5226 = icmp eq i64 %5225, 2
  %5227 = zext i1 %5226 to i8
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5227, i8* %5228, align 1
  store %struct.Memory* %loadMem_40b0e5, %struct.Memory** %MEMORY
  %loadMem_40b0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 33
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %5231 to i64*
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 7
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %RDX.i1710 = bitcast %union.anon* %5234 to i64*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 15
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %RBP.i1711 = bitcast %union.anon* %5237 to i64*
  %5238 = load i64, i64* %RBP.i1711
  %5239 = sub i64 %5238, 16
  %5240 = load i64, i64* %PC.i1709
  %5241 = add i64 %5240, 4
  store i64 %5241, i64* %PC.i1709
  %5242 = inttoptr i64 %5239 to i32*
  %5243 = load i32, i32* %5242
  %5244 = sext i32 %5243 to i64
  store i64 %5244, i64* %RDX.i1710, align 8
  store %struct.Memory* %loadMem_40b0ec, %struct.Memory** %MEMORY
  %loadMem_40b0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5246 = getelementptr inbounds %struct.GPR, %struct.GPR* %5245, i32 0, i32 33
  %5247 = getelementptr inbounds %struct.Reg, %struct.Reg* %5246, i32 0, i32 0
  %PC.i1707 = bitcast %union.anon* %5247 to i64*
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 7
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %RDX.i1708 = bitcast %union.anon* %5250 to i64*
  %5251 = load i64, i64* %RDX.i1708
  %5252 = load i64, i64* %PC.i1707
  %5253 = add i64 %5252, 4
  store i64 %5253, i64* %PC.i1707
  %5254 = shl i64 %5251, 5
  %5255 = icmp slt i64 %5254, 0
  %5256 = shl i64 %5254, 1
  store i64 %5256, i64* %RDX.i1708, align 8
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5258 = zext i1 %5255 to i8
  store i8 %5258, i8* %5257, align 1
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5260 = trunc i64 %5256 to i32
  %5261 = and i32 %5260, 254
  %5262 = call i32 @llvm.ctpop.i32(i32 %5261)
  %5263 = trunc i32 %5262 to i8
  %5264 = and i8 %5263, 1
  %5265 = xor i8 %5264, 1
  store i8 %5265, i8* %5259, align 1
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5266, align 1
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5268 = icmp eq i64 %5256, 0
  %5269 = zext i1 %5268 to i8
  store i8 %5269, i8* %5267, align 1
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5271 = lshr i64 %5256, 63
  %5272 = trunc i64 %5271 to i8
  store i8 %5272, i8* %5270, align 1
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5273, align 1
  store %struct.Memory* %loadMem_40b0f0, %struct.Memory** %MEMORY
  %loadMem_40b0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5275 = getelementptr inbounds %struct.GPR, %struct.GPR* %5274, i32 0, i32 33
  %5276 = getelementptr inbounds %struct.Reg, %struct.Reg* %5275, i32 0, i32 0
  %PC.i1704 = bitcast %union.anon* %5276 to i64*
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5278 = getelementptr inbounds %struct.GPR, %struct.GPR* %5277, i32 0, i32 5
  %5279 = getelementptr inbounds %struct.Reg, %struct.Reg* %5278, i32 0, i32 0
  %RCX.i1705 = bitcast %union.anon* %5279 to i64*
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 7
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %RDX.i1706 = bitcast %union.anon* %5282 to i64*
  %5283 = load i64, i64* %RCX.i1705
  %5284 = load i64, i64* %RDX.i1706
  %5285 = load i64, i64* %PC.i1704
  %5286 = add i64 %5285, 3
  store i64 %5286, i64* %PC.i1704
  %5287 = add i64 %5284, %5283
  store i64 %5287, i64* %RCX.i1705, align 8
  %5288 = icmp ult i64 %5287, %5283
  %5289 = icmp ult i64 %5287, %5284
  %5290 = or i1 %5288, %5289
  %5291 = zext i1 %5290 to i8
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5291, i8* %5292, align 1
  %5293 = trunc i64 %5287 to i32
  %5294 = and i32 %5293, 255
  %5295 = call i32 @llvm.ctpop.i32(i32 %5294)
  %5296 = trunc i32 %5295 to i8
  %5297 = and i8 %5296, 1
  %5298 = xor i8 %5297, 1
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5298, i8* %5299, align 1
  %5300 = xor i64 %5284, %5283
  %5301 = xor i64 %5300, %5287
  %5302 = lshr i64 %5301, 4
  %5303 = trunc i64 %5302 to i8
  %5304 = and i8 %5303, 1
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5304, i8* %5305, align 1
  %5306 = icmp eq i64 %5287, 0
  %5307 = zext i1 %5306 to i8
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5307, i8* %5308, align 1
  %5309 = lshr i64 %5287, 63
  %5310 = trunc i64 %5309 to i8
  %5311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5310, i8* %5311, align 1
  %5312 = lshr i64 %5283, 63
  %5313 = lshr i64 %5284, 63
  %5314 = xor i64 %5309, %5312
  %5315 = xor i64 %5309, %5313
  %5316 = add i64 %5314, %5315
  %5317 = icmp eq i64 %5316, 2
  %5318 = zext i1 %5317 to i8
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5318, i8* %5319, align 1
  store %struct.Memory* %loadMem_40b0f4, %struct.Memory** %MEMORY
  %loadMem_40b0f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5321 = getelementptr inbounds %struct.GPR, %struct.GPR* %5320, i32 0, i32 33
  %5322 = getelementptr inbounds %struct.Reg, %struct.Reg* %5321, i32 0, i32 0
  %PC.i1701 = bitcast %union.anon* %5322 to i64*
  %5323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5324 = getelementptr inbounds %struct.GPR, %struct.GPR* %5323, i32 0, i32 1
  %5325 = getelementptr inbounds %struct.Reg, %struct.Reg* %5324, i32 0, i32 0
  %EAX.i1702 = bitcast %union.anon* %5325 to i32*
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 5
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %RCX.i1703 = bitcast %union.anon* %5328 to i64*
  %5329 = load i64, i64* %RCX.i1703
  %5330 = add i64 %5329, 8
  %5331 = load i32, i32* %EAX.i1702
  %5332 = zext i32 %5331 to i64
  %5333 = load i64, i64* %PC.i1701
  %5334 = add i64 %5333, 3
  store i64 %5334, i64* %PC.i1701
  %5335 = inttoptr i64 %5330 to i32*
  store i32 %5331, i32* %5335
  store %struct.Memory* %loadMem_40b0f7, %struct.Memory** %MEMORY
  %loadMem_40b0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 33
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %PC.i1698 = bitcast %union.anon* %5338 to i64*
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5340 = getelementptr inbounds %struct.GPR, %struct.GPR* %5339, i32 0, i32 1
  %5341 = getelementptr inbounds %struct.Reg, %struct.Reg* %5340, i32 0, i32 0
  %RAX.i1699 = bitcast %union.anon* %5341 to i64*
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5343 = getelementptr inbounds %struct.GPR, %struct.GPR* %5342, i32 0, i32 15
  %5344 = getelementptr inbounds %struct.Reg, %struct.Reg* %5343, i32 0, i32 0
  %RBP.i1700 = bitcast %union.anon* %5344 to i64*
  %5345 = load i64, i64* %RBP.i1700
  %5346 = sub i64 %5345, 36
  %5347 = load i64, i64* %PC.i1698
  %5348 = add i64 %5347, 3
  store i64 %5348, i64* %PC.i1698
  %5349 = inttoptr i64 %5346 to i32*
  %5350 = load i32, i32* %5349
  %5351 = zext i32 %5350 to i64
  store i64 %5351, i64* %RAX.i1699, align 8
  store %struct.Memory* %loadMem_40b0fa, %struct.Memory** %MEMORY
  %loadMem_40b0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5353 = getelementptr inbounds %struct.GPR, %struct.GPR* %5352, i32 0, i32 33
  %5354 = getelementptr inbounds %struct.Reg, %struct.Reg* %5353, i32 0, i32 0
  %PC.i1696 = bitcast %union.anon* %5354 to i64*
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5356 = getelementptr inbounds %struct.GPR, %struct.GPR* %5355, i32 0, i32 1
  %5357 = getelementptr inbounds %struct.Reg, %struct.Reg* %5356, i32 0, i32 0
  %RAX.i1697 = bitcast %union.anon* %5357 to i64*
  %5358 = load i64, i64* %RAX.i1697
  %5359 = load i64, i64* %PC.i1696
  %5360 = add i64 %5359, 2
  store i64 %5360, i64* %PC.i1696
  %5361 = trunc i64 %5358 to i32
  %5362 = shl i32 %5361, 1
  %5363 = icmp slt i32 %5361, 0
  %5364 = icmp slt i32 %5362, 0
  %5365 = xor i1 %5363, %5364
  %5366 = zext i32 %5362 to i64
  store i64 %5366, i64* %RAX.i1697, align 8
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5368 = zext i1 %5363 to i8
  store i8 %5368, i8* %5367, align 1
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5370 = and i32 %5362, 254
  %5371 = call i32 @llvm.ctpop.i32(i32 %5370)
  %5372 = trunc i32 %5371 to i8
  %5373 = and i8 %5372, 1
  %5374 = xor i8 %5373, 1
  store i8 %5374, i8* %5369, align 1
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5375, align 1
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5377 = icmp eq i32 %5362, 0
  %5378 = zext i1 %5377 to i8
  store i8 %5378, i8* %5376, align 1
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5380 = lshr i32 %5362, 31
  %5381 = trunc i32 %5380 to i8
  store i8 %5381, i8* %5379, align 1
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5383 = zext i1 %5365 to i8
  store i8 %5383, i8* %5382, align 1
  store %struct.Memory* %loadMem_40b0fd, %struct.Memory** %MEMORY
  %loadMem_40b100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 33
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 1
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RAX.i1694 = bitcast %union.anon* %5389 to i64*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 15
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %RBP.i1695 = bitcast %union.anon* %5392 to i64*
  %5393 = load i64, i64* %RAX.i1694
  %5394 = load i64, i64* %RBP.i1695
  %5395 = sub i64 %5394, 40
  %5396 = load i64, i64* %PC.i1693
  %5397 = add i64 %5396, 3
  store i64 %5397, i64* %PC.i1693
  %5398 = trunc i64 %5393 to i32
  %5399 = inttoptr i64 %5395 to i32*
  %5400 = load i32, i32* %5399
  %5401 = add i32 %5400, %5398
  %5402 = zext i32 %5401 to i64
  store i64 %5402, i64* %RAX.i1694, align 8
  %5403 = icmp ult i32 %5401, %5398
  %5404 = icmp ult i32 %5401, %5400
  %5405 = or i1 %5403, %5404
  %5406 = zext i1 %5405 to i8
  %5407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5406, i8* %5407, align 1
  %5408 = and i32 %5401, 255
  %5409 = call i32 @llvm.ctpop.i32(i32 %5408)
  %5410 = trunc i32 %5409 to i8
  %5411 = and i8 %5410, 1
  %5412 = xor i8 %5411, 1
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5412, i8* %5413, align 1
  %5414 = xor i32 %5400, %5398
  %5415 = xor i32 %5414, %5401
  %5416 = lshr i32 %5415, 4
  %5417 = trunc i32 %5416 to i8
  %5418 = and i8 %5417, 1
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5418, i8* %5419, align 1
  %5420 = icmp eq i32 %5401, 0
  %5421 = zext i1 %5420 to i8
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5421, i8* %5422, align 1
  %5423 = lshr i32 %5401, 31
  %5424 = trunc i32 %5423 to i8
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5424, i8* %5425, align 1
  %5426 = lshr i32 %5398, 31
  %5427 = lshr i32 %5400, 31
  %5428 = xor i32 %5423, %5426
  %5429 = xor i32 %5423, %5427
  %5430 = add i32 %5428, %5429
  %5431 = icmp eq i32 %5430, 2
  %5432 = zext i1 %5431 to i8
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5432, i8* %5433, align 1
  store %struct.Memory* %loadMem_40b100, %struct.Memory** %MEMORY
  %loadMem_40b103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5435 = getelementptr inbounds %struct.GPR, %struct.GPR* %5434, i32 0, i32 33
  %5436 = getelementptr inbounds %struct.Reg, %struct.Reg* %5435, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %5436 to i64*
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 5
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %RCX.i1692 = bitcast %union.anon* %5439 to i64*
  %5440 = load i64, i64* %PC.i1691
  %5441 = add i64 %5440, 8
  store i64 %5441, i64* %PC.i1691
  %5442 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5442, i64* %RCX.i1692, align 8
  store %struct.Memory* %loadMem_40b103, %struct.Memory** %MEMORY
  %loadMem_40b10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5444 = getelementptr inbounds %struct.GPR, %struct.GPR* %5443, i32 0, i32 33
  %5445 = getelementptr inbounds %struct.Reg, %struct.Reg* %5444, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %5445 to i64*
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5447 = getelementptr inbounds %struct.GPR, %struct.GPR* %5446, i32 0, i32 5
  %5448 = getelementptr inbounds %struct.Reg, %struct.Reg* %5447, i32 0, i32 0
  %RCX.i1690 = bitcast %union.anon* %5448 to i64*
  %5449 = load i64, i64* %RCX.i1690
  %5450 = load i64, i64* %PC.i1689
  %5451 = add i64 %5450, 7
  store i64 %5451, i64* %PC.i1689
  %5452 = add i64 13112, %5449
  store i64 %5452, i64* %RCX.i1690, align 8
  %5453 = icmp ult i64 %5452, %5449
  %5454 = icmp ult i64 %5452, 13112
  %5455 = or i1 %5453, %5454
  %5456 = zext i1 %5455 to i8
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5456, i8* %5457, align 1
  %5458 = trunc i64 %5452 to i32
  %5459 = and i32 %5458, 255
  %5460 = call i32 @llvm.ctpop.i32(i32 %5459)
  %5461 = trunc i32 %5460 to i8
  %5462 = and i8 %5461, 1
  %5463 = xor i8 %5462, 1
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5463, i8* %5464, align 1
  %5465 = xor i64 13112, %5449
  %5466 = xor i64 %5465, %5452
  %5467 = lshr i64 %5466, 4
  %5468 = trunc i64 %5467 to i8
  %5469 = and i8 %5468, 1
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5469, i8* %5470, align 1
  %5471 = icmp eq i64 %5452, 0
  %5472 = zext i1 %5471 to i8
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5472, i8* %5473, align 1
  %5474 = lshr i64 %5452, 63
  %5475 = trunc i64 %5474 to i8
  %5476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5475, i8* %5476, align 1
  %5477 = lshr i64 %5449, 63
  %5478 = xor i64 %5474, %5477
  %5479 = add i64 %5478, %5474
  %5480 = icmp eq i64 %5479, 2
  %5481 = zext i1 %5480 to i8
  %5482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5481, i8* %5482, align 1
  store %struct.Memory* %loadMem_40b10b, %struct.Memory** %MEMORY
  %loadMem_40b112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5484 = getelementptr inbounds %struct.GPR, %struct.GPR* %5483, i32 0, i32 33
  %5485 = getelementptr inbounds %struct.Reg, %struct.Reg* %5484, i32 0, i32 0
  %PC.i1686 = bitcast %union.anon* %5485 to i64*
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 7
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %RDX.i1687 = bitcast %union.anon* %5488 to i64*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 15
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RBP.i1688 = bitcast %union.anon* %5491 to i64*
  %5492 = load i64, i64* %RBP.i1688
  %5493 = sub i64 %5492, 16
  %5494 = load i64, i64* %PC.i1686
  %5495 = add i64 %5494, 4
  store i64 %5495, i64* %PC.i1686
  %5496 = inttoptr i64 %5493 to i32*
  %5497 = load i32, i32* %5496
  %5498 = sext i32 %5497 to i64
  store i64 %5498, i64* %RDX.i1687, align 8
  store %struct.Memory* %loadMem_40b112, %struct.Memory** %MEMORY
  %loadMem_40b116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5500 = getelementptr inbounds %struct.GPR, %struct.GPR* %5499, i32 0, i32 33
  %5501 = getelementptr inbounds %struct.Reg, %struct.Reg* %5500, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %5501 to i64*
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5503 = getelementptr inbounds %struct.GPR, %struct.GPR* %5502, i32 0, i32 7
  %5504 = getelementptr inbounds %struct.Reg, %struct.Reg* %5503, i32 0, i32 0
  %RDX.i1685 = bitcast %union.anon* %5504 to i64*
  %5505 = load i64, i64* %RDX.i1685
  %5506 = load i64, i64* %PC.i1684
  %5507 = add i64 %5506, 4
  store i64 %5507, i64* %PC.i1684
  %5508 = shl i64 %5505, 5
  %5509 = icmp slt i64 %5508, 0
  %5510 = shl i64 %5508, 1
  store i64 %5510, i64* %RDX.i1685, align 8
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5512 = zext i1 %5509 to i8
  store i8 %5512, i8* %5511, align 1
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5514 = trunc i64 %5510 to i32
  %5515 = and i32 %5514, 254
  %5516 = call i32 @llvm.ctpop.i32(i32 %5515)
  %5517 = trunc i32 %5516 to i8
  %5518 = and i8 %5517, 1
  %5519 = xor i8 %5518, 1
  store i8 %5519, i8* %5513, align 1
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5520, align 1
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5522 = icmp eq i64 %5510, 0
  %5523 = zext i1 %5522 to i8
  store i8 %5523, i8* %5521, align 1
  %5524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5525 = lshr i64 %5510, 63
  %5526 = trunc i64 %5525 to i8
  store i8 %5526, i8* %5524, align 1
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5527, align 1
  store %struct.Memory* %loadMem_40b116, %struct.Memory** %MEMORY
  %loadMem_40b11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5529 = getelementptr inbounds %struct.GPR, %struct.GPR* %5528, i32 0, i32 33
  %5530 = getelementptr inbounds %struct.Reg, %struct.Reg* %5529, i32 0, i32 0
  %PC.i1681 = bitcast %union.anon* %5530 to i64*
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 5
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %RCX.i1682 = bitcast %union.anon* %5533 to i64*
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 7
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %RDX.i1683 = bitcast %union.anon* %5536 to i64*
  %5537 = load i64, i64* %RCX.i1682
  %5538 = load i64, i64* %RDX.i1683
  %5539 = load i64, i64* %PC.i1681
  %5540 = add i64 %5539, 3
  store i64 %5540, i64* %PC.i1681
  %5541 = add i64 %5538, %5537
  store i64 %5541, i64* %RCX.i1682, align 8
  %5542 = icmp ult i64 %5541, %5537
  %5543 = icmp ult i64 %5541, %5538
  %5544 = or i1 %5542, %5543
  %5545 = zext i1 %5544 to i8
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5545, i8* %5546, align 1
  %5547 = trunc i64 %5541 to i32
  %5548 = and i32 %5547, 255
  %5549 = call i32 @llvm.ctpop.i32(i32 %5548)
  %5550 = trunc i32 %5549 to i8
  %5551 = and i8 %5550, 1
  %5552 = xor i8 %5551, 1
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5552, i8* %5553, align 1
  %5554 = xor i64 %5538, %5537
  %5555 = xor i64 %5554, %5541
  %5556 = lshr i64 %5555, 4
  %5557 = trunc i64 %5556 to i8
  %5558 = and i8 %5557, 1
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5558, i8* %5559, align 1
  %5560 = icmp eq i64 %5541, 0
  %5561 = zext i1 %5560 to i8
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5561, i8* %5562, align 1
  %5563 = lshr i64 %5541, 63
  %5564 = trunc i64 %5563 to i8
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5564, i8* %5565, align 1
  %5566 = lshr i64 %5537, 63
  %5567 = lshr i64 %5538, 63
  %5568 = xor i64 %5563, %5566
  %5569 = xor i64 %5563, %5567
  %5570 = add i64 %5568, %5569
  %5571 = icmp eq i64 %5570, 2
  %5572 = zext i1 %5571 to i8
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5572, i8* %5573, align 1
  store %struct.Memory* %loadMem_40b11a, %struct.Memory** %MEMORY
  %loadMem_40b11d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5575 = getelementptr inbounds %struct.GPR, %struct.GPR* %5574, i32 0, i32 33
  %5576 = getelementptr inbounds %struct.Reg, %struct.Reg* %5575, i32 0, i32 0
  %PC.i1678 = bitcast %union.anon* %5576 to i64*
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5578 = getelementptr inbounds %struct.GPR, %struct.GPR* %5577, i32 0, i32 1
  %5579 = getelementptr inbounds %struct.Reg, %struct.Reg* %5578, i32 0, i32 0
  %EAX.i1679 = bitcast %union.anon* %5579 to i32*
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5581 = getelementptr inbounds %struct.GPR, %struct.GPR* %5580, i32 0, i32 5
  %5582 = getelementptr inbounds %struct.Reg, %struct.Reg* %5581, i32 0, i32 0
  %RCX.i1680 = bitcast %union.anon* %5582 to i64*
  %5583 = load i64, i64* %RCX.i1680
  %5584 = add i64 %5583, 4
  %5585 = load i32, i32* %EAX.i1679
  %5586 = zext i32 %5585 to i64
  %5587 = load i64, i64* %PC.i1678
  %5588 = add i64 %5587, 3
  store i64 %5588, i64* %PC.i1678
  %5589 = inttoptr i64 %5584 to i32*
  store i32 %5585, i32* %5589
  store %struct.Memory* %loadMem_40b11d, %struct.Memory** %MEMORY
  %loadMem_40b120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5591 = getelementptr inbounds %struct.GPR, %struct.GPR* %5590, i32 0, i32 33
  %5592 = getelementptr inbounds %struct.Reg, %struct.Reg* %5591, i32 0, i32 0
  %PC.i1675 = bitcast %union.anon* %5592 to i64*
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 1
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %RAX.i1676 = bitcast %union.anon* %5595 to i64*
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5597 = getelementptr inbounds %struct.GPR, %struct.GPR* %5596, i32 0, i32 15
  %5598 = getelementptr inbounds %struct.Reg, %struct.Reg* %5597, i32 0, i32 0
  %RBP.i1677 = bitcast %union.anon* %5598 to i64*
  %5599 = load i64, i64* %RBP.i1677
  %5600 = sub i64 %5599, 36
  %5601 = load i64, i64* %PC.i1675
  %5602 = add i64 %5601, 3
  store i64 %5602, i64* %PC.i1675
  %5603 = inttoptr i64 %5600 to i32*
  %5604 = load i32, i32* %5603
  %5605 = zext i32 %5604 to i64
  store i64 %5605, i64* %RAX.i1676, align 8
  store %struct.Memory* %loadMem_40b120, %struct.Memory** %MEMORY
  %loadMem_40b123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 33
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %5608 to i64*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 9
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %RSI.i1673 = bitcast %union.anon* %5611 to i64*
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5613 = getelementptr inbounds %struct.GPR, %struct.GPR* %5612, i32 0, i32 15
  %5614 = getelementptr inbounds %struct.Reg, %struct.Reg* %5613, i32 0, i32 0
  %RBP.i1674 = bitcast %union.anon* %5614 to i64*
  %5615 = load i64, i64* %RBP.i1674
  %5616 = sub i64 %5615, 40
  %5617 = load i64, i64* %PC.i1672
  %5618 = add i64 %5617, 3
  store i64 %5618, i64* %PC.i1672
  %5619 = inttoptr i64 %5616 to i32*
  %5620 = load i32, i32* %5619
  %5621 = zext i32 %5620 to i64
  store i64 %5621, i64* %RSI.i1673, align 8
  store %struct.Memory* %loadMem_40b123, %struct.Memory** %MEMORY
  %loadMem_40b126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 33
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %5624 to i64*
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5626 = getelementptr inbounds %struct.GPR, %struct.GPR* %5625, i32 0, i32 9
  %5627 = getelementptr inbounds %struct.Reg, %struct.Reg* %5626, i32 0, i32 0
  %RSI.i1671 = bitcast %union.anon* %5627 to i64*
  %5628 = load i64, i64* %RSI.i1671
  %5629 = load i64, i64* %PC.i1670
  %5630 = add i64 %5629, 2
  store i64 %5630, i64* %PC.i1670
  %5631 = trunc i64 %5628 to i32
  %5632 = shl i32 %5631, 1
  %5633 = icmp slt i32 %5631, 0
  %5634 = icmp slt i32 %5632, 0
  %5635 = xor i1 %5633, %5634
  %5636 = zext i32 %5632 to i64
  store i64 %5636, i64* %RSI.i1671, align 8
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5638 = zext i1 %5633 to i8
  store i8 %5638, i8* %5637, align 1
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5640 = and i32 %5632, 254
  %5641 = call i32 @llvm.ctpop.i32(i32 %5640)
  %5642 = trunc i32 %5641 to i8
  %5643 = and i8 %5642, 1
  %5644 = xor i8 %5643, 1
  store i8 %5644, i8* %5639, align 1
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5645, align 1
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5647 = icmp eq i32 %5632, 0
  %5648 = zext i1 %5647 to i8
  store i8 %5648, i8* %5646, align 1
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5650 = lshr i32 %5632, 31
  %5651 = trunc i32 %5650 to i8
  store i8 %5651, i8* %5649, align 1
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5653 = zext i1 %5635 to i8
  store i8 %5653, i8* %5652, align 1
  store %struct.Memory* %loadMem_40b126, %struct.Memory** %MEMORY
  %loadMem_40b129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 33
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %5656 to i64*
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 9
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %ESI.i1668 = bitcast %union.anon* %5659 to i32*
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 1
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %RAX.i1669 = bitcast %union.anon* %5662 to i64*
  %5663 = load i64, i64* %RAX.i1669
  %5664 = load i32, i32* %ESI.i1668
  %5665 = zext i32 %5664 to i64
  %5666 = load i64, i64* %PC.i1667
  %5667 = add i64 %5666, 2
  store i64 %5667, i64* %PC.i1667
  %5668 = trunc i64 %5663 to i32
  %5669 = sub i32 %5668, %5664
  %5670 = zext i32 %5669 to i64
  store i64 %5670, i64* %RAX.i1669, align 8
  %5671 = icmp ult i32 %5668, %5664
  %5672 = zext i1 %5671 to i8
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5672, i8* %5673, align 1
  %5674 = and i32 %5669, 255
  %5675 = call i32 @llvm.ctpop.i32(i32 %5674)
  %5676 = trunc i32 %5675 to i8
  %5677 = and i8 %5676, 1
  %5678 = xor i8 %5677, 1
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5678, i8* %5679, align 1
  %5680 = xor i64 %5665, %5663
  %5681 = trunc i64 %5680 to i32
  %5682 = xor i32 %5681, %5669
  %5683 = lshr i32 %5682, 4
  %5684 = trunc i32 %5683 to i8
  %5685 = and i8 %5684, 1
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5685, i8* %5686, align 1
  %5687 = icmp eq i32 %5669, 0
  %5688 = zext i1 %5687 to i8
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5688, i8* %5689, align 1
  %5690 = lshr i32 %5669, 31
  %5691 = trunc i32 %5690 to i8
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5691, i8* %5692, align 1
  %5693 = lshr i32 %5668, 31
  %5694 = lshr i32 %5664, 31
  %5695 = xor i32 %5694, %5693
  %5696 = xor i32 %5690, %5693
  %5697 = add i32 %5696, %5695
  %5698 = icmp eq i32 %5697, 2
  %5699 = zext i1 %5698 to i8
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5699, i8* %5700, align 1
  store %struct.Memory* %loadMem_40b129, %struct.Memory** %MEMORY
  %loadMem_40b12b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5702 = getelementptr inbounds %struct.GPR, %struct.GPR* %5701, i32 0, i32 33
  %5703 = getelementptr inbounds %struct.Reg, %struct.Reg* %5702, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %5703 to i64*
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 5
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %RCX.i1666 = bitcast %union.anon* %5706 to i64*
  %5707 = load i64, i64* %PC.i1665
  %5708 = add i64 %5707, 8
  store i64 %5708, i64* %PC.i1665
  %5709 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5709, i64* %RCX.i1666, align 8
  store %struct.Memory* %loadMem_40b12b, %struct.Memory** %MEMORY
  %loadMem_40b133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 33
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %PC.i1663 = bitcast %union.anon* %5712 to i64*
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 5
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %RCX.i1664 = bitcast %union.anon* %5715 to i64*
  %5716 = load i64, i64* %RCX.i1664
  %5717 = load i64, i64* %PC.i1663
  %5718 = add i64 %5717, 7
  store i64 %5718, i64* %PC.i1663
  %5719 = add i64 13112, %5716
  store i64 %5719, i64* %RCX.i1664, align 8
  %5720 = icmp ult i64 %5719, %5716
  %5721 = icmp ult i64 %5719, 13112
  %5722 = or i1 %5720, %5721
  %5723 = zext i1 %5722 to i8
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5723, i8* %5724, align 1
  %5725 = trunc i64 %5719 to i32
  %5726 = and i32 %5725, 255
  %5727 = call i32 @llvm.ctpop.i32(i32 %5726)
  %5728 = trunc i32 %5727 to i8
  %5729 = and i8 %5728, 1
  %5730 = xor i8 %5729, 1
  %5731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5730, i8* %5731, align 1
  %5732 = xor i64 13112, %5716
  %5733 = xor i64 %5732, %5719
  %5734 = lshr i64 %5733, 4
  %5735 = trunc i64 %5734 to i8
  %5736 = and i8 %5735, 1
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5736, i8* %5737, align 1
  %5738 = icmp eq i64 %5719, 0
  %5739 = zext i1 %5738 to i8
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5739, i8* %5740, align 1
  %5741 = lshr i64 %5719, 63
  %5742 = trunc i64 %5741 to i8
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5742, i8* %5743, align 1
  %5744 = lshr i64 %5716, 63
  %5745 = xor i64 %5741, %5744
  %5746 = add i64 %5745, %5741
  %5747 = icmp eq i64 %5746, 2
  %5748 = zext i1 %5747 to i8
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5748, i8* %5749, align 1
  store %struct.Memory* %loadMem_40b133, %struct.Memory** %MEMORY
  %loadMem_40b13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 7
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RDX.i1661 = bitcast %union.anon* %5755 to i64*
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 15
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %RBP.i1662 = bitcast %union.anon* %5758 to i64*
  %5759 = load i64, i64* %RBP.i1662
  %5760 = sub i64 %5759, 16
  %5761 = load i64, i64* %PC.i1660
  %5762 = add i64 %5761, 4
  store i64 %5762, i64* %PC.i1660
  %5763 = inttoptr i64 %5760 to i32*
  %5764 = load i32, i32* %5763
  %5765 = sext i32 %5764 to i64
  store i64 %5765, i64* %RDX.i1661, align 8
  store %struct.Memory* %loadMem_40b13a, %struct.Memory** %MEMORY
  %loadMem_40b13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i1658 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 7
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %RDX.i1659 = bitcast %union.anon* %5771 to i64*
  %5772 = load i64, i64* %RDX.i1659
  %5773 = load i64, i64* %PC.i1658
  %5774 = add i64 %5773, 4
  store i64 %5774, i64* %PC.i1658
  %5775 = shl i64 %5772, 5
  %5776 = icmp slt i64 %5775, 0
  %5777 = shl i64 %5775, 1
  store i64 %5777, i64* %RDX.i1659, align 8
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5779 = zext i1 %5776 to i8
  store i8 %5779, i8* %5778, align 1
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5781 = trunc i64 %5777 to i32
  %5782 = and i32 %5781, 254
  %5783 = call i32 @llvm.ctpop.i32(i32 %5782)
  %5784 = trunc i32 %5783 to i8
  %5785 = and i8 %5784, 1
  %5786 = xor i8 %5785, 1
  store i8 %5786, i8* %5780, align 1
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5787, align 1
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5789 = icmp eq i64 %5777, 0
  %5790 = zext i1 %5789 to i8
  store i8 %5790, i8* %5788, align 1
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5792 = lshr i64 %5777, 63
  %5793 = trunc i64 %5792 to i8
  store i8 %5793, i8* %5791, align 1
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5794, align 1
  store %struct.Memory* %loadMem_40b13e, %struct.Memory** %MEMORY
  %loadMem_40b142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 33
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %PC.i1655 = bitcast %union.anon* %5797 to i64*
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5799 = getelementptr inbounds %struct.GPR, %struct.GPR* %5798, i32 0, i32 5
  %5800 = getelementptr inbounds %struct.Reg, %struct.Reg* %5799, i32 0, i32 0
  %RCX.i1656 = bitcast %union.anon* %5800 to i64*
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 7
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %RDX.i1657 = bitcast %union.anon* %5803 to i64*
  %5804 = load i64, i64* %RCX.i1656
  %5805 = load i64, i64* %RDX.i1657
  %5806 = load i64, i64* %PC.i1655
  %5807 = add i64 %5806, 3
  store i64 %5807, i64* %PC.i1655
  %5808 = add i64 %5805, %5804
  store i64 %5808, i64* %RCX.i1656, align 8
  %5809 = icmp ult i64 %5808, %5804
  %5810 = icmp ult i64 %5808, %5805
  %5811 = or i1 %5809, %5810
  %5812 = zext i1 %5811 to i8
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5812, i8* %5813, align 1
  %5814 = trunc i64 %5808 to i32
  %5815 = and i32 %5814, 255
  %5816 = call i32 @llvm.ctpop.i32(i32 %5815)
  %5817 = trunc i32 %5816 to i8
  %5818 = and i8 %5817, 1
  %5819 = xor i8 %5818, 1
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5819, i8* %5820, align 1
  %5821 = xor i64 %5805, %5804
  %5822 = xor i64 %5821, %5808
  %5823 = lshr i64 %5822, 4
  %5824 = trunc i64 %5823 to i8
  %5825 = and i8 %5824, 1
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5825, i8* %5826, align 1
  %5827 = icmp eq i64 %5808, 0
  %5828 = zext i1 %5827 to i8
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5828, i8* %5829, align 1
  %5830 = lshr i64 %5808, 63
  %5831 = trunc i64 %5830 to i8
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5831, i8* %5832, align 1
  %5833 = lshr i64 %5804, 63
  %5834 = lshr i64 %5805, 63
  %5835 = xor i64 %5830, %5833
  %5836 = xor i64 %5830, %5834
  %5837 = add i64 %5835, %5836
  %5838 = icmp eq i64 %5837, 2
  %5839 = zext i1 %5838 to i8
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5839, i8* %5840, align 1
  store %struct.Memory* %loadMem_40b142, %struct.Memory** %MEMORY
  %loadMem_40b145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 33
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %5843 to i64*
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 1
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %EAX.i1653 = bitcast %union.anon* %5846 to i32*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 5
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RCX.i1654 = bitcast %union.anon* %5849 to i64*
  %5850 = load i64, i64* %RCX.i1654
  %5851 = add i64 %5850, 12
  %5852 = load i32, i32* %EAX.i1653
  %5853 = zext i32 %5852 to i64
  %5854 = load i64, i64* %PC.i1652
  %5855 = add i64 %5854, 3
  store i64 %5855, i64* %PC.i1652
  %5856 = inttoptr i64 %5851 to i32*
  store i32 %5852, i32* %5856
  store %struct.Memory* %loadMem_40b145, %struct.Memory** %MEMORY
  %loadMem_40b148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 33
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %5859 to i64*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 1
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %RAX.i1650 = bitcast %union.anon* %5862 to i64*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 15
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %RBP.i1651 = bitcast %union.anon* %5865 to i64*
  %5866 = load i64, i64* %RBP.i1651
  %5867 = sub i64 %5866, 16
  %5868 = load i64, i64* %PC.i1649
  %5869 = add i64 %5868, 3
  store i64 %5869, i64* %PC.i1649
  %5870 = inttoptr i64 %5867 to i32*
  %5871 = load i32, i32* %5870
  %5872 = zext i32 %5871 to i64
  store i64 %5872, i64* %RAX.i1650, align 8
  store %struct.Memory* %loadMem_40b148, %struct.Memory** %MEMORY
  %loadMem_40b14b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5874 = getelementptr inbounds %struct.GPR, %struct.GPR* %5873, i32 0, i32 33
  %5875 = getelementptr inbounds %struct.Reg, %struct.Reg* %5874, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %5875 to i64*
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5877 = getelementptr inbounds %struct.GPR, %struct.GPR* %5876, i32 0, i32 1
  %5878 = getelementptr inbounds %struct.Reg, %struct.Reg* %5877, i32 0, i32 0
  %RAX.i1648 = bitcast %union.anon* %5878 to i64*
  %5879 = load i64, i64* %RAX.i1648
  %5880 = load i64, i64* %PC.i1647
  %5881 = add i64 %5880, 3
  store i64 %5881, i64* %PC.i1647
  %5882 = trunc i64 %5879 to i32
  %5883 = add i32 1, %5882
  %5884 = zext i32 %5883 to i64
  store i64 %5884, i64* %RAX.i1648, align 8
  %5885 = icmp ult i32 %5883, %5882
  %5886 = icmp ult i32 %5883, 1
  %5887 = or i1 %5885, %5886
  %5888 = zext i1 %5887 to i8
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5888, i8* %5889, align 1
  %5890 = and i32 %5883, 255
  %5891 = call i32 @llvm.ctpop.i32(i32 %5890)
  %5892 = trunc i32 %5891 to i8
  %5893 = and i8 %5892, 1
  %5894 = xor i8 %5893, 1
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5894, i8* %5895, align 1
  %5896 = xor i64 1, %5879
  %5897 = trunc i64 %5896 to i32
  %5898 = xor i32 %5897, %5883
  %5899 = lshr i32 %5898, 4
  %5900 = trunc i32 %5899 to i8
  %5901 = and i8 %5900, 1
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5901, i8* %5902, align 1
  %5903 = icmp eq i32 %5883, 0
  %5904 = zext i1 %5903 to i8
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5904, i8* %5905, align 1
  %5906 = lshr i32 %5883, 31
  %5907 = trunc i32 %5906 to i8
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5907, i8* %5908, align 1
  %5909 = lshr i32 %5882, 31
  %5910 = xor i32 %5906, %5909
  %5911 = add i32 %5910, %5906
  %5912 = icmp eq i32 %5911, 2
  %5913 = zext i1 %5912 to i8
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5913, i8* %5914, align 1
  store %struct.Memory* %loadMem_40b14b, %struct.Memory** %MEMORY
  %loadMem_40b14e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5916 = getelementptr inbounds %struct.GPR, %struct.GPR* %5915, i32 0, i32 33
  %5917 = getelementptr inbounds %struct.Reg, %struct.Reg* %5916, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %5917 to i64*
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 1
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %EAX.i1645 = bitcast %union.anon* %5920 to i32*
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 15
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %RBP.i1646 = bitcast %union.anon* %5923 to i64*
  %5924 = load i64, i64* %RBP.i1646
  %5925 = sub i64 %5924, 16
  %5926 = load i32, i32* %EAX.i1645
  %5927 = zext i32 %5926 to i64
  %5928 = load i64, i64* %PC.i1644
  %5929 = add i64 %5928, 3
  store i64 %5929, i64* %PC.i1644
  %5930 = inttoptr i64 %5925 to i32*
  store i32 %5926, i32* %5930
  store %struct.Memory* %loadMem_40b14e, %struct.Memory** %MEMORY
  %loadMem_40b151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5932 = getelementptr inbounds %struct.GPR, %struct.GPR* %5931, i32 0, i32 33
  %5933 = getelementptr inbounds %struct.Reg, %struct.Reg* %5932, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %5933 to i64*
  %5934 = load i64, i64* %PC.i1643
  %5935 = add i64 %5934, -356
  %5936 = load i64, i64* %PC.i1643
  %5937 = add i64 %5936, 5
  store i64 %5937, i64* %PC.i1643
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5935, i64* %5938, align 8
  store %struct.Memory* %loadMem_40b151, %struct.Memory** %MEMORY
  br label %block_.L_40afed

block_.L_40b156:                                  ; preds = %block_.L_40afed
  %loadMem_40b156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5940 = getelementptr inbounds %struct.GPR, %struct.GPR* %5939, i32 0, i32 33
  %5941 = getelementptr inbounds %struct.Reg, %struct.Reg* %5940, i32 0, i32 0
  %PC.i1642 = bitcast %union.anon* %5941 to i64*
  %5942 = load i64, i64* %PC.i1642
  %5943 = add i64 %5942, 5
  %5944 = load i64, i64* %PC.i1642
  %5945 = add i64 %5944, 5
  store i64 %5945, i64* %PC.i1642
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5943, i64* %5946, align 8
  store %struct.Memory* %loadMem_40b156, %struct.Memory** %MEMORY
  br label %block_.L_40b15b

block_.L_40b15b:                                  ; preds = %block_.L_40b156, %block_.L_40afd9
  %loadMem_40b15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5948 = getelementptr inbounds %struct.GPR, %struct.GPR* %5947, i32 0, i32 33
  %5949 = getelementptr inbounds %struct.Reg, %struct.Reg* %5948, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %5949 to i64*
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5951 = getelementptr inbounds %struct.GPR, %struct.GPR* %5950, i32 0, i32 15
  %5952 = getelementptr inbounds %struct.Reg, %struct.Reg* %5951, i32 0, i32 0
  %RBP.i1641 = bitcast %union.anon* %5952 to i64*
  %5953 = load i64, i64* %RBP.i1641
  %5954 = sub i64 %5953, 84
  %5955 = load i64, i64* %PC.i1640
  %5956 = add i64 %5955, 7
  store i64 %5956, i64* %PC.i1640
  %5957 = inttoptr i64 %5954 to i32*
  store i32 0, i32* %5957
  store %struct.Memory* %loadMem_40b15b, %struct.Memory** %MEMORY
  %loadMem_40b162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5959 = getelementptr inbounds %struct.GPR, %struct.GPR* %5958, i32 0, i32 33
  %5960 = getelementptr inbounds %struct.Reg, %struct.Reg* %5959, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %5960 to i64*
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5962 = getelementptr inbounds %struct.GPR, %struct.GPR* %5961, i32 0, i32 15
  %5963 = getelementptr inbounds %struct.Reg, %struct.Reg* %5962, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %5963 to i64*
  %5964 = load i64, i64* %RBP.i1639
  %5965 = sub i64 %5964, 80
  %5966 = load i64, i64* %PC.i1638
  %5967 = add i64 %5966, 7
  store i64 %5967, i64* %PC.i1638
  %5968 = inttoptr i64 %5965 to i32*
  store i32 -1, i32* %5968
  store %struct.Memory* %loadMem_40b162, %struct.Memory** %MEMORY
  %loadMem_40b169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 33
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %5971 to i64*
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 15
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %RBP.i1637 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %RBP.i1637
  %5976 = sub i64 %5975, 76
  %5977 = load i64, i64* %PC.i1636
  %5978 = add i64 %5977, 7
  store i64 %5978, i64* %PC.i1636
  %5979 = inttoptr i64 %5976 to i32*
  store i32 0, i32* %5979
  store %struct.Memory* %loadMem_40b169, %struct.Memory** %MEMORY
  %loadMem_40b170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 33
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %5982 to i64*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 15
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %RBP.i1635 = bitcast %union.anon* %5985 to i64*
  %5986 = load i64, i64* %RBP.i1635
  %5987 = sub i64 %5986, 140
  %5988 = load i64, i64* %PC.i1634
  %5989 = add i64 %5988, 7
  store i64 %5989, i64* %PC.i1634
  %5990 = inttoptr i64 %5987 to i32*
  %5991 = load i32, i32* %5990
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5992, align 1
  %5993 = and i32 %5991, 255
  %5994 = call i32 @llvm.ctpop.i32(i32 %5993)
  %5995 = trunc i32 %5994 to i8
  %5996 = and i8 %5995, 1
  %5997 = xor i8 %5996, 1
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5997, i8* %5998, align 1
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5999, align 1
  %6000 = icmp eq i32 %5991, 0
  %6001 = zext i1 %6000 to i8
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6001, i8* %6002, align 1
  %6003 = lshr i32 %5991, 31
  %6004 = trunc i32 %6003 to i8
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6004, i8* %6005, align 1
  %6006 = lshr i32 %5991, 31
  %6007 = xor i32 %6003, %6006
  %6008 = add i32 %6007, %6006
  %6009 = icmp eq i32 %6008, 2
  %6010 = zext i1 %6009 to i8
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6010, i8* %6011, align 1
  store %struct.Memory* %loadMem_40b170, %struct.Memory** %MEMORY
  %loadMem_40b177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 33
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %PC.i1633 = bitcast %union.anon* %6014 to i64*
  %6015 = load i64, i64* %PC.i1633
  %6016 = add i64 %6015, 33
  %6017 = load i64, i64* %PC.i1633
  %6018 = add i64 %6017, 6
  %6019 = load i64, i64* %PC.i1633
  %6020 = add i64 %6019, 6
  store i64 %6020, i64* %PC.i1633
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6022 = load i8, i8* %6021, align 1
  store i8 %6022, i8* %BRANCH_TAKEN, align 1
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6024 = icmp ne i8 %6022, 0
  %6025 = select i1 %6024, i64 %6016, i64 %6018
  store i64 %6025, i64* %6023, align 8
  store %struct.Memory* %loadMem_40b177, %struct.Memory** %MEMORY
  %loadBr_40b177 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b177 = icmp eq i8 %loadBr_40b177, 1
  br i1 %cmpBr_40b177, label %block_.L_40b198, label %block_40b17d

block_40b17d:                                     ; preds = %block_.L_40b15b
  %loadMem_40b17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 33
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %6028 to i64*
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6030 = getelementptr inbounds %struct.GPR, %struct.GPR* %6029, i32 0, i32 1
  %6031 = getelementptr inbounds %struct.Reg, %struct.Reg* %6030, i32 0, i32 0
  %RAX.i1632 = bitcast %union.anon* %6031 to i64*
  %6032 = load i64, i64* %PC.i1631
  %6033 = add i64 %6032, 8
  store i64 %6033, i64* %PC.i1631
  %6034 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6034, i64* %RAX.i1632, align 8
  store %struct.Memory* %loadMem_40b17d, %struct.Memory** %MEMORY
  %loadMem_40b185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6036 = getelementptr inbounds %struct.GPR, %struct.GPR* %6035, i32 0, i32 33
  %6037 = getelementptr inbounds %struct.Reg, %struct.Reg* %6036, i32 0, i32 0
  %PC.i1628 = bitcast %union.anon* %6037 to i64*
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6039 = getelementptr inbounds %struct.GPR, %struct.GPR* %6038, i32 0, i32 1
  %6040 = getelementptr inbounds %struct.Reg, %struct.Reg* %6039, i32 0, i32 0
  %RAX.i1629 = bitcast %union.anon* %6040 to i64*
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6042 = getelementptr inbounds %struct.GPR, %struct.GPR* %6041, i32 0, i32 11
  %6043 = getelementptr inbounds %struct.Reg, %struct.Reg* %6042, i32 0, i32 0
  %RDI.i1630 = bitcast %union.anon* %6043 to i64*
  %6044 = load i64, i64* %RAX.i1629
  %6045 = add i64 %6044, 13112
  %6046 = load i64, i64* %PC.i1628
  %6047 = add i64 %6046, 6
  store i64 %6047, i64* %PC.i1628
  %6048 = inttoptr i64 %6045 to i32*
  %6049 = load i32, i32* %6048
  %6050 = zext i32 %6049 to i64
  store i64 %6050, i64* %RDI.i1630, align 8
  store %struct.Memory* %loadMem_40b185, %struct.Memory** %MEMORY
  %loadMem1_40b18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6052 = getelementptr inbounds %struct.GPR, %struct.GPR* %6051, i32 0, i32 33
  %6053 = getelementptr inbounds %struct.Reg, %struct.Reg* %6052, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %6053 to i64*
  %6054 = load i64, i64* %PC.i1627
  %6055 = add i64 %6054, -41355
  %6056 = load i64, i64* %PC.i1627
  %6057 = add i64 %6056, 5
  %6058 = load i64, i64* %PC.i1627
  %6059 = add i64 %6058, 5
  store i64 %6059, i64* %PC.i1627
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6061 = load i64, i64* %6060, align 8
  %6062 = add i64 %6061, -8
  %6063 = inttoptr i64 %6062 to i64*
  store i64 %6057, i64* %6063
  store i64 %6062, i64* %6060, align 8
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6055, i64* %6064, align 8
  store %struct.Memory* %loadMem1_40b18b, %struct.Memory** %MEMORY
  %loadMem2_40b18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b18b = load i64, i64* %3
  %6065 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40b18b)
  store %struct.Memory* %6065, %struct.Memory** %MEMORY
  %loadMem_40b190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 33
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %6068 to i64*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 1
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %EAX.i1623 = bitcast %union.anon* %6071 to i32*
  %6072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6073 = getelementptr inbounds %struct.GPR, %struct.GPR* %6072, i32 0, i32 15
  %6074 = getelementptr inbounds %struct.Reg, %struct.Reg* %6073, i32 0, i32 0
  %RBP.i1624 = bitcast %union.anon* %6074 to i64*
  %6075 = load i64, i64* %RBP.i1624
  %6076 = sub i64 %6075, 72
  %6077 = load i32, i32* %EAX.i1623
  %6078 = zext i32 %6077 to i64
  %6079 = load i64, i64* %PC.i1622
  %6080 = add i64 %6079, 3
  store i64 %6080, i64* %PC.i1622
  %6081 = inttoptr i64 %6076 to i32*
  store i32 %6077, i32* %6081
  store %struct.Memory* %loadMem_40b190, %struct.Memory** %MEMORY
  %loadMem_40b193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 33
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %6084 to i64*
  %6085 = load i64, i64* %PC.i1621
  %6086 = add i64 %6085, 229
  %6087 = load i64, i64* %PC.i1621
  %6088 = add i64 %6087, 5
  store i64 %6088, i64* %PC.i1621
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6086, i64* %6089, align 8
  store %struct.Memory* %loadMem_40b193, %struct.Memory** %MEMORY
  br label %block_.L_40b278

block_.L_40b198:                                  ; preds = %block_.L_40b15b
  %loadMem_40b198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 33
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %6092 to i64*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6094 = getelementptr inbounds %struct.GPR, %struct.GPR* %6093, i32 0, i32 15
  %6095 = getelementptr inbounds %struct.Reg, %struct.Reg* %6094, i32 0, i32 0
  %RBP.i1620 = bitcast %union.anon* %6095 to i64*
  %6096 = load i64, i64* %RBP.i1620
  %6097 = sub i64 %6096, 100
  %6098 = load i64, i64* %PC.i1619
  %6099 = add i64 %6098, 4
  store i64 %6099, i64* %PC.i1619
  %6100 = inttoptr i64 %6097 to i32*
  %6101 = load i32, i32* %6100
  %6102 = sub i32 %6101, 1
  %6103 = icmp ult i32 %6101, 1
  %6104 = zext i1 %6103 to i8
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6104, i8* %6105, align 1
  %6106 = and i32 %6102, 255
  %6107 = call i32 @llvm.ctpop.i32(i32 %6106)
  %6108 = trunc i32 %6107 to i8
  %6109 = and i8 %6108, 1
  %6110 = xor i8 %6109, 1
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6110, i8* %6111, align 1
  %6112 = xor i32 %6101, 1
  %6113 = xor i32 %6112, %6102
  %6114 = lshr i32 %6113, 4
  %6115 = trunc i32 %6114 to i8
  %6116 = and i8 %6115, 1
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6116, i8* %6117, align 1
  %6118 = icmp eq i32 %6102, 0
  %6119 = zext i1 %6118 to i8
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6119, i8* %6120, align 1
  %6121 = lshr i32 %6102, 31
  %6122 = trunc i32 %6121 to i8
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6122, i8* %6123, align 1
  %6124 = lshr i32 %6101, 31
  %6125 = xor i32 %6121, %6124
  %6126 = add i32 %6125, %6124
  %6127 = icmp eq i32 %6126, 2
  %6128 = zext i1 %6127 to i8
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6128, i8* %6129, align 1
  store %struct.Memory* %loadMem_40b198, %struct.Memory** %MEMORY
  %loadMem_40b19c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 33
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %6132 to i64*
  %6133 = load i64, i64* %PC.i1618
  %6134 = add i64 %6133, 113
  %6135 = load i64, i64* %PC.i1618
  %6136 = add i64 %6135, 6
  %6137 = load i64, i64* %PC.i1618
  %6138 = add i64 %6137, 6
  store i64 %6138, i64* %PC.i1618
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6140 = load i8, i8* %6139, align 1
  %6141 = icmp eq i8 %6140, 0
  %6142 = zext i1 %6141 to i8
  store i8 %6142, i8* %BRANCH_TAKEN, align 1
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6144 = select i1 %6141, i64 %6134, i64 %6136
  store i64 %6144, i64* %6143, align 8
  store %struct.Memory* %loadMem_40b19c, %struct.Memory** %MEMORY
  %loadBr_40b19c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b19c = icmp eq i8 %loadBr_40b19c, 1
  br i1 %cmpBr_40b19c, label %block_.L_40b20d, label %block_40b1a2

block_40b1a2:                                     ; preds = %block_.L_40b198
  %loadMem_40b1a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 33
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %6147 to i64*
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6149 = getelementptr inbounds %struct.GPR, %struct.GPR* %6148, i32 0, i32 1
  %6150 = getelementptr inbounds %struct.Reg, %struct.Reg* %6149, i32 0, i32 0
  %RAX.i1617 = bitcast %union.anon* %6150 to i64*
  %6151 = load i64, i64* %PC.i1616
  %6152 = add i64 %6151, 8
  store i64 %6152, i64* %PC.i1616
  %6153 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6153, i64* %RAX.i1617, align 8
  store %struct.Memory* %loadMem_40b1a2, %struct.Memory** %MEMORY
  %loadMem_40b1aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6155 = getelementptr inbounds %struct.GPR, %struct.GPR* %6154, i32 0, i32 33
  %6156 = getelementptr inbounds %struct.Reg, %struct.Reg* %6155, i32 0, i32 0
  %PC.i1613 = bitcast %union.anon* %6156 to i64*
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6158 = getelementptr inbounds %struct.GPR, %struct.GPR* %6157, i32 0, i32 1
  %6159 = getelementptr inbounds %struct.Reg, %struct.Reg* %6158, i32 0, i32 0
  %RAX.i1614 = bitcast %union.anon* %6159 to i64*
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6161 = getelementptr inbounds %struct.GPR, %struct.GPR* %6160, i32 0, i32 11
  %6162 = getelementptr inbounds %struct.Reg, %struct.Reg* %6161, i32 0, i32 0
  %RDI.i1615 = bitcast %union.anon* %6162 to i64*
  %6163 = load i64, i64* %RAX.i1614
  %6164 = add i64 %6163, 13112
  %6165 = load i64, i64* %PC.i1613
  %6166 = add i64 %6165, 6
  store i64 %6166, i64* %PC.i1613
  %6167 = inttoptr i64 %6164 to i32*
  %6168 = load i32, i32* %6167
  %6169 = zext i32 %6168 to i64
  store i64 %6169, i64* %RDI.i1615, align 8
  store %struct.Memory* %loadMem_40b1aa, %struct.Memory** %MEMORY
  %loadMem1_40b1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6171 = getelementptr inbounds %struct.GPR, %struct.GPR* %6170, i32 0, i32 33
  %6172 = getelementptr inbounds %struct.Reg, %struct.Reg* %6171, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %6172 to i64*
  %6173 = load i64, i64* %PC.i1612
  %6174 = add i64 %6173, -41392
  %6175 = load i64, i64* %PC.i1612
  %6176 = add i64 %6175, 5
  %6177 = load i64, i64* %PC.i1612
  %6178 = add i64 %6177, 5
  store i64 %6178, i64* %PC.i1612
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6180 = load i64, i64* %6179, align 8
  %6181 = add i64 %6180, -8
  %6182 = inttoptr i64 %6181 to i64*
  store i64 %6176, i64* %6182
  store i64 %6181, i64* %6179, align 8
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6174, i64* %6183, align 8
  store %struct.Memory* %loadMem1_40b1b0, %struct.Memory** %MEMORY
  %loadMem2_40b1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b1b0 = load i64, i64* %3
  %6184 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40b1b0)
  store %struct.Memory* %6184, %struct.Memory** %MEMORY
  %loadMem_40b1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6186 = getelementptr inbounds %struct.GPR, %struct.GPR* %6185, i32 0, i32 33
  %6187 = getelementptr inbounds %struct.Reg, %struct.Reg* %6186, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %6187 to i64*
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6189 = getelementptr inbounds %struct.GPR, %struct.GPR* %6188, i32 0, i32 5
  %6190 = getelementptr inbounds %struct.Reg, %struct.Reg* %6189, i32 0, i32 0
  %RCX.i1609 = bitcast %union.anon* %6190 to i64*
  %6191 = load i64, i64* %PC.i1608
  %6192 = add i64 %6191, 10
  store i64 %6192, i64* %PC.i1608
  store i64 7490528, i64* %RCX.i1609, align 8
  store %struct.Memory* %loadMem_40b1b5, %struct.Memory** %MEMORY
  %loadMem_40b1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6194 = getelementptr inbounds %struct.GPR, %struct.GPR* %6193, i32 0, i32 33
  %6195 = getelementptr inbounds %struct.Reg, %struct.Reg* %6194, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %6195 to i64*
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6197 = getelementptr inbounds %struct.GPR, %struct.GPR* %6196, i32 0, i32 7
  %6198 = getelementptr inbounds %struct.Reg, %struct.Reg* %6197, i32 0, i32 0
  %RDX.i1607 = bitcast %union.anon* %6198 to i64*
  %6199 = load i64, i64* %PC.i1606
  %6200 = add i64 %6199, 10
  store i64 %6200, i64* %PC.i1606
  store i64 ptrtoint (%G__0x6f73a0_type* @G__0x6f73a0 to i64), i64* %RDX.i1607, align 8
  store %struct.Memory* %loadMem_40b1bf, %struct.Memory** %MEMORY
  %loadMem_40b1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 33
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %6203 to i64*
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6205 = getelementptr inbounds %struct.GPR, %struct.GPR* %6204, i32 0, i32 9
  %6206 = getelementptr inbounds %struct.Reg, %struct.Reg* %6205, i32 0, i32 0
  %RSI.i1604 = bitcast %union.anon* %6206 to i64*
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6208 = getelementptr inbounds %struct.GPR, %struct.GPR* %6207, i32 0, i32 15
  %6209 = getelementptr inbounds %struct.Reg, %struct.Reg* %6208, i32 0, i32 0
  %RBP.i1605 = bitcast %union.anon* %6209 to i64*
  %6210 = load i64, i64* %RBP.i1605
  %6211 = sub i64 %6210, 4
  %6212 = load i64, i64* %PC.i1603
  %6213 = add i64 %6212, 4
  store i64 %6213, i64* %PC.i1603
  %6214 = inttoptr i64 %6211 to i32*
  %6215 = load i32, i32* %6214
  %6216 = sext i32 %6215 to i64
  store i64 %6216, i64* %RSI.i1604, align 8
  store %struct.Memory* %loadMem_40b1c9, %struct.Memory** %MEMORY
  %loadMem_40b1cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6218 = getelementptr inbounds %struct.GPR, %struct.GPR* %6217, i32 0, i32 33
  %6219 = getelementptr inbounds %struct.Reg, %struct.Reg* %6218, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %6219 to i64*
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6221 = getelementptr inbounds %struct.GPR, %struct.GPR* %6220, i32 0, i32 9
  %6222 = getelementptr inbounds %struct.Reg, %struct.Reg* %6221, i32 0, i32 0
  %RSI.i1602 = bitcast %union.anon* %6222 to i64*
  %6223 = load i64, i64* %RSI.i1602
  %6224 = load i64, i64* %PC.i1601
  %6225 = add i64 %6224, 7
  store i64 %6225, i64* %PC.i1601
  %6226 = sext i64 %6223 to i128
  %6227 = and i128 %6226, -18446744073709551616
  %6228 = zext i64 %6223 to i128
  %6229 = or i128 %6227, %6228
  %6230 = mul i128 384, %6229
  %6231 = trunc i128 %6230 to i64
  store i64 %6231, i64* %RSI.i1602, align 8
  %6232 = sext i64 %6231 to i128
  %6233 = icmp ne i128 %6232, %6230
  %6234 = zext i1 %6233 to i8
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6234, i8* %6235, align 1
  %6236 = trunc i128 %6230 to i32
  %6237 = and i32 %6236, 255
  %6238 = call i32 @llvm.ctpop.i32(i32 %6237)
  %6239 = trunc i32 %6238 to i8
  %6240 = and i8 %6239, 1
  %6241 = xor i8 %6240, 1
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6241, i8* %6242, align 1
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6243, align 1
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6244, align 1
  %6245 = lshr i64 %6231, 63
  %6246 = trunc i64 %6245 to i8
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6246, i8* %6247, align 1
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6234, i8* %6248, align 1
  store %struct.Memory* %loadMem_40b1cd, %struct.Memory** %MEMORY
  %loadMem_40b1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 33
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %6251 to i64*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 7
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %RDX.i1599 = bitcast %union.anon* %6254 to i64*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 9
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %RSI.i1600 = bitcast %union.anon* %6257 to i64*
  %6258 = load i64, i64* %RDX.i1599
  %6259 = load i64, i64* %RSI.i1600
  %6260 = load i64, i64* %PC.i1598
  %6261 = add i64 %6260, 3
  store i64 %6261, i64* %PC.i1598
  %6262 = add i64 %6259, %6258
  store i64 %6262, i64* %RDX.i1599, align 8
  %6263 = icmp ult i64 %6262, %6258
  %6264 = icmp ult i64 %6262, %6259
  %6265 = or i1 %6263, %6264
  %6266 = zext i1 %6265 to i8
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6266, i8* %6267, align 1
  %6268 = trunc i64 %6262 to i32
  %6269 = and i32 %6268, 255
  %6270 = call i32 @llvm.ctpop.i32(i32 %6269)
  %6271 = trunc i32 %6270 to i8
  %6272 = and i8 %6271, 1
  %6273 = xor i8 %6272, 1
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6273, i8* %6274, align 1
  %6275 = xor i64 %6259, %6258
  %6276 = xor i64 %6275, %6262
  %6277 = lshr i64 %6276, 4
  %6278 = trunc i64 %6277 to i8
  %6279 = and i8 %6278, 1
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6279, i8* %6280, align 1
  %6281 = icmp eq i64 %6262, 0
  %6282 = zext i1 %6281 to i8
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6282, i8* %6283, align 1
  %6284 = lshr i64 %6262, 63
  %6285 = trunc i64 %6284 to i8
  %6286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6285, i8* %6286, align 1
  %6287 = lshr i64 %6258, 63
  %6288 = lshr i64 %6259, 63
  %6289 = xor i64 %6284, %6287
  %6290 = xor i64 %6284, %6288
  %6291 = add i64 %6289, %6290
  %6292 = icmp eq i64 %6291, 2
  %6293 = zext i1 %6292 to i8
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6293, i8* %6294, align 1
  store %struct.Memory* %loadMem_40b1d4, %struct.Memory** %MEMORY
  %loadMem_40b1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6296 = getelementptr inbounds %struct.GPR, %struct.GPR* %6295, i32 0, i32 33
  %6297 = getelementptr inbounds %struct.Reg, %struct.Reg* %6296, i32 0, i32 0
  %PC.i1595 = bitcast %union.anon* %6297 to i64*
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6299 = getelementptr inbounds %struct.GPR, %struct.GPR* %6298, i32 0, i32 9
  %6300 = getelementptr inbounds %struct.Reg, %struct.Reg* %6299, i32 0, i32 0
  %RSI.i1596 = bitcast %union.anon* %6300 to i64*
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6302 = getelementptr inbounds %struct.GPR, %struct.GPR* %6301, i32 0, i32 15
  %6303 = getelementptr inbounds %struct.Reg, %struct.Reg* %6302, i32 0, i32 0
  %RBP.i1597 = bitcast %union.anon* %6303 to i64*
  %6304 = load i64, i64* %RBP.i1597
  %6305 = sub i64 %6304, 108
  %6306 = load i64, i64* %PC.i1595
  %6307 = add i64 %6306, 4
  store i64 %6307, i64* %PC.i1595
  %6308 = inttoptr i64 %6305 to i32*
  %6309 = load i32, i32* %6308
  %6310 = sext i32 %6309 to i64
  store i64 %6310, i64* %RSI.i1596, align 8
  store %struct.Memory* %loadMem_40b1d7, %struct.Memory** %MEMORY
  %loadMem_40b1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6312 = getelementptr inbounds %struct.GPR, %struct.GPR* %6311, i32 0, i32 33
  %6313 = getelementptr inbounds %struct.Reg, %struct.Reg* %6312, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %6313 to i64*
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 9
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %RSI.i1594 = bitcast %union.anon* %6316 to i64*
  %6317 = load i64, i64* %RSI.i1594
  %6318 = load i64, i64* %PC.i1593
  %6319 = add i64 %6318, 4
  store i64 %6319, i64* %PC.i1593
  %6320 = shl i64 %6317, 5
  %6321 = icmp slt i64 %6320, 0
  %6322 = shl i64 %6320, 1
  store i64 %6322, i64* %RSI.i1594, align 8
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6324 = zext i1 %6321 to i8
  store i8 %6324, i8* %6323, align 1
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6326 = trunc i64 %6322 to i32
  %6327 = and i32 %6326, 254
  %6328 = call i32 @llvm.ctpop.i32(i32 %6327)
  %6329 = trunc i32 %6328 to i8
  %6330 = and i8 %6329, 1
  %6331 = xor i8 %6330, 1
  store i8 %6331, i8* %6325, align 1
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6332, align 1
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6334 = icmp eq i64 %6322, 0
  %6335 = zext i1 %6334 to i8
  store i8 %6335, i8* %6333, align 1
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6337 = lshr i64 %6322, 63
  %6338 = trunc i64 %6337 to i8
  store i8 %6338, i8* %6336, align 1
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6339, align 1
  store %struct.Memory* %loadMem_40b1db, %struct.Memory** %MEMORY
  %loadMem_40b1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6341 = getelementptr inbounds %struct.GPR, %struct.GPR* %6340, i32 0, i32 33
  %6342 = getelementptr inbounds %struct.Reg, %struct.Reg* %6341, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %6342 to i64*
  %6343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6344 = getelementptr inbounds %struct.GPR, %struct.GPR* %6343, i32 0, i32 7
  %6345 = getelementptr inbounds %struct.Reg, %struct.Reg* %6344, i32 0, i32 0
  %RDX.i1591 = bitcast %union.anon* %6345 to i64*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 9
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %RSI.i1592 = bitcast %union.anon* %6348 to i64*
  %6349 = load i64, i64* %RDX.i1591
  %6350 = load i64, i64* %RSI.i1592
  %6351 = load i64, i64* %PC.i1590
  %6352 = add i64 %6351, 3
  store i64 %6352, i64* %PC.i1590
  %6353 = add i64 %6350, %6349
  store i64 %6353, i64* %RDX.i1591, align 8
  %6354 = icmp ult i64 %6353, %6349
  %6355 = icmp ult i64 %6353, %6350
  %6356 = or i1 %6354, %6355
  %6357 = zext i1 %6356 to i8
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6357, i8* %6358, align 1
  %6359 = trunc i64 %6353 to i32
  %6360 = and i32 %6359, 255
  %6361 = call i32 @llvm.ctpop.i32(i32 %6360)
  %6362 = trunc i32 %6361 to i8
  %6363 = and i8 %6362, 1
  %6364 = xor i8 %6363, 1
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6364, i8* %6365, align 1
  %6366 = xor i64 %6350, %6349
  %6367 = xor i64 %6366, %6353
  %6368 = lshr i64 %6367, 4
  %6369 = trunc i64 %6368 to i8
  %6370 = and i8 %6369, 1
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6370, i8* %6371, align 1
  %6372 = icmp eq i64 %6353, 0
  %6373 = zext i1 %6372 to i8
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6373, i8* %6374, align 1
  %6375 = lshr i64 %6353, 63
  %6376 = trunc i64 %6375 to i8
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6376, i8* %6377, align 1
  %6378 = lshr i64 %6349, 63
  %6379 = lshr i64 %6350, 63
  %6380 = xor i64 %6375, %6378
  %6381 = xor i64 %6375, %6379
  %6382 = add i64 %6380, %6381
  %6383 = icmp eq i64 %6382, 2
  %6384 = zext i1 %6383 to i8
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6384, i8* %6385, align 1
  store %struct.Memory* %loadMem_40b1df, %struct.Memory** %MEMORY
  %loadMem_40b1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 33
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %6388 to i64*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 1
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %RAX.i1588 = bitcast %union.anon* %6391 to i64*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 7
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %RDX.i1589 = bitcast %union.anon* %6394 to i64*
  %6395 = load i64, i64* %RAX.i1588
  %6396 = load i64, i64* %RDX.i1589
  %6397 = load i64, i64* %PC.i1587
  %6398 = add i64 %6397, 3
  store i64 %6398, i64* %PC.i1587
  %6399 = inttoptr i64 %6396 to i32*
  %6400 = load i32, i32* %6399
  %6401 = shl i64 %6395, 32
  %6402 = ashr exact i64 %6401, 32
  %6403 = sext i32 %6400 to i64
  %6404 = mul i64 %6403, %6402
  %6405 = trunc i64 %6404 to i32
  %6406 = and i64 %6404, 4294967295
  store i64 %6406, i64* %RAX.i1588, align 8
  %6407 = shl i64 %6404, 32
  %6408 = ashr exact i64 %6407, 32
  %6409 = icmp ne i64 %6408, %6404
  %6410 = zext i1 %6409 to i8
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6410, i8* %6411, align 1
  %6412 = and i32 %6405, 255
  %6413 = call i32 @llvm.ctpop.i32(i32 %6412)
  %6414 = trunc i32 %6413 to i8
  %6415 = and i8 %6414, 1
  %6416 = xor i8 %6415, 1
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6416, i8* %6417, align 1
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6418, align 1
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6419, align 1
  %6420 = lshr i32 %6405, 31
  %6421 = trunc i32 %6420 to i8
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6421, i8* %6422, align 1
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6410, i8* %6423, align 1
  store %struct.Memory* %loadMem_40b1e2, %struct.Memory** %MEMORY
  %loadMem_40b1e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6425 = getelementptr inbounds %struct.GPR, %struct.GPR* %6424, i32 0, i32 33
  %6426 = getelementptr inbounds %struct.Reg, %struct.Reg* %6425, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %6426 to i64*
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6428 = getelementptr inbounds %struct.GPR, %struct.GPR* %6427, i32 0, i32 7
  %6429 = getelementptr inbounds %struct.Reg, %struct.Reg* %6428, i32 0, i32 0
  %RDX.i1585 = bitcast %union.anon* %6429 to i64*
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6431 = getelementptr inbounds %struct.GPR, %struct.GPR* %6430, i32 0, i32 15
  %6432 = getelementptr inbounds %struct.Reg, %struct.Reg* %6431, i32 0, i32 0
  %RBP.i1586 = bitcast %union.anon* %6432 to i64*
  %6433 = load i64, i64* %RBP.i1586
  %6434 = sub i64 %6433, 4
  %6435 = load i64, i64* %PC.i1584
  %6436 = add i64 %6435, 4
  store i64 %6436, i64* %PC.i1584
  %6437 = inttoptr i64 %6434 to i32*
  %6438 = load i32, i32* %6437
  %6439 = sext i32 %6438 to i64
  store i64 %6439, i64* %RDX.i1585, align 8
  store %struct.Memory* %loadMem_40b1e5, %struct.Memory** %MEMORY
  %loadMem_40b1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 33
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %PC.i1582 = bitcast %union.anon* %6442 to i64*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 7
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %RDX.i1583 = bitcast %union.anon* %6445 to i64*
  %6446 = load i64, i64* %RDX.i1583
  %6447 = load i64, i64* %PC.i1582
  %6448 = add i64 %6447, 7
  store i64 %6448, i64* %PC.i1582
  %6449 = sext i64 %6446 to i128
  %6450 = and i128 %6449, -18446744073709551616
  %6451 = zext i64 %6446 to i128
  %6452 = or i128 %6450, %6451
  %6453 = mul i128 832, %6452
  %6454 = trunc i128 %6453 to i64
  store i64 %6454, i64* %RDX.i1583, align 8
  %6455 = sext i64 %6454 to i128
  %6456 = icmp ne i128 %6455, %6453
  %6457 = zext i1 %6456 to i8
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6457, i8* %6458, align 1
  %6459 = trunc i128 %6453 to i32
  %6460 = and i32 %6459, 255
  %6461 = call i32 @llvm.ctpop.i32(i32 %6460)
  %6462 = trunc i32 %6461 to i8
  %6463 = and i8 %6462, 1
  %6464 = xor i8 %6463, 1
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6464, i8* %6465, align 1
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6466, align 1
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6467, align 1
  %6468 = lshr i64 %6454, 63
  %6469 = trunc i64 %6468 to i8
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6469, i8* %6470, align 1
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6457, i8* %6471, align 1
  store %struct.Memory* %loadMem_40b1e9, %struct.Memory** %MEMORY
  %loadMem_40b1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6473 = getelementptr inbounds %struct.GPR, %struct.GPR* %6472, i32 0, i32 33
  %6474 = getelementptr inbounds %struct.Reg, %struct.Reg* %6473, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %6474 to i64*
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6476 = getelementptr inbounds %struct.GPR, %struct.GPR* %6475, i32 0, i32 5
  %6477 = getelementptr inbounds %struct.Reg, %struct.Reg* %6476, i32 0, i32 0
  %RCX.i1580 = bitcast %union.anon* %6477 to i64*
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6479 = getelementptr inbounds %struct.GPR, %struct.GPR* %6478, i32 0, i32 7
  %6480 = getelementptr inbounds %struct.Reg, %struct.Reg* %6479, i32 0, i32 0
  %RDX.i1581 = bitcast %union.anon* %6480 to i64*
  %6481 = load i64, i64* %RCX.i1580
  %6482 = load i64, i64* %RDX.i1581
  %6483 = load i64, i64* %PC.i1579
  %6484 = add i64 %6483, 3
  store i64 %6484, i64* %PC.i1579
  %6485 = add i64 %6482, %6481
  store i64 %6485, i64* %RCX.i1580, align 8
  %6486 = icmp ult i64 %6485, %6481
  %6487 = icmp ult i64 %6485, %6482
  %6488 = or i1 %6486, %6487
  %6489 = zext i1 %6488 to i8
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6489, i8* %6490, align 1
  %6491 = trunc i64 %6485 to i32
  %6492 = and i32 %6491, 255
  %6493 = call i32 @llvm.ctpop.i32(i32 %6492)
  %6494 = trunc i32 %6493 to i8
  %6495 = and i8 %6494, 1
  %6496 = xor i8 %6495, 1
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6496, i8* %6497, align 1
  %6498 = xor i64 %6482, %6481
  %6499 = xor i64 %6498, %6485
  %6500 = lshr i64 %6499, 4
  %6501 = trunc i64 %6500 to i8
  %6502 = and i8 %6501, 1
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6502, i8* %6503, align 1
  %6504 = icmp eq i64 %6485, 0
  %6505 = zext i1 %6504 to i8
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6505, i8* %6506, align 1
  %6507 = lshr i64 %6485, 63
  %6508 = trunc i64 %6507 to i8
  %6509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6508, i8* %6509, align 1
  %6510 = lshr i64 %6481, 63
  %6511 = lshr i64 %6482, 63
  %6512 = xor i64 %6507, %6510
  %6513 = xor i64 %6507, %6511
  %6514 = add i64 %6512, %6513
  %6515 = icmp eq i64 %6514, 2
  %6516 = zext i1 %6515 to i8
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6516, i8* %6517, align 1
  store %struct.Memory* %loadMem_40b1f0, %struct.Memory** %MEMORY
  %loadMem_40b1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 33
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %PC.i1576 = bitcast %union.anon* %6520 to i64*
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 7
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %RDX.i1577 = bitcast %union.anon* %6523 to i64*
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6525 = getelementptr inbounds %struct.GPR, %struct.GPR* %6524, i32 0, i32 15
  %6526 = getelementptr inbounds %struct.Reg, %struct.Reg* %6525, i32 0, i32 0
  %RBP.i1578 = bitcast %union.anon* %6526 to i64*
  %6527 = load i64, i64* %RBP.i1578
  %6528 = sub i64 %6527, 104
  %6529 = load i64, i64* %PC.i1576
  %6530 = add i64 %6529, 4
  store i64 %6530, i64* %PC.i1576
  %6531 = inttoptr i64 %6528 to i32*
  %6532 = load i32, i32* %6531
  %6533 = sext i32 %6532 to i64
  store i64 %6533, i64* %RDX.i1577, align 8
  store %struct.Memory* %loadMem_40b1f3, %struct.Memory** %MEMORY
  %loadMem_40b1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6535 = getelementptr inbounds %struct.GPR, %struct.GPR* %6534, i32 0, i32 33
  %6536 = getelementptr inbounds %struct.Reg, %struct.Reg* %6535, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %6536 to i64*
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6538 = getelementptr inbounds %struct.GPR, %struct.GPR* %6537, i32 0, i32 7
  %6539 = getelementptr inbounds %struct.Reg, %struct.Reg* %6538, i32 0, i32 0
  %RDX.i1575 = bitcast %union.anon* %6539 to i64*
  %6540 = load i64, i64* %RDX.i1575
  %6541 = load i64, i64* %PC.i1574
  %6542 = add i64 %6541, 4
  store i64 %6542, i64* %PC.i1574
  %6543 = shl i64 %6540, 5
  %6544 = icmp slt i64 %6543, 0
  %6545 = shl i64 %6543, 1
  store i64 %6545, i64* %RDX.i1575, align 8
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6547 = zext i1 %6544 to i8
  store i8 %6547, i8* %6546, align 1
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6549 = trunc i64 %6545 to i32
  %6550 = and i32 %6549, 254
  %6551 = call i32 @llvm.ctpop.i32(i32 %6550)
  %6552 = trunc i32 %6551 to i8
  %6553 = and i8 %6552, 1
  %6554 = xor i8 %6553, 1
  store i8 %6554, i8* %6548, align 1
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6555, align 1
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6557 = icmp eq i64 %6545, 0
  %6558 = zext i1 %6557 to i8
  store i8 %6558, i8* %6556, align 1
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6560 = lshr i64 %6545, 63
  %6561 = trunc i64 %6560 to i8
  store i8 %6561, i8* %6559, align 1
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6562, align 1
  store %struct.Memory* %loadMem_40b1f7, %struct.Memory** %MEMORY
  %loadMem_40b1fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6564 = getelementptr inbounds %struct.GPR, %struct.GPR* %6563, i32 0, i32 33
  %6565 = getelementptr inbounds %struct.Reg, %struct.Reg* %6564, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %6565 to i64*
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6567 = getelementptr inbounds %struct.GPR, %struct.GPR* %6566, i32 0, i32 5
  %6568 = getelementptr inbounds %struct.Reg, %struct.Reg* %6567, i32 0, i32 0
  %RCX.i1572 = bitcast %union.anon* %6568 to i64*
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6570 = getelementptr inbounds %struct.GPR, %struct.GPR* %6569, i32 0, i32 7
  %6571 = getelementptr inbounds %struct.Reg, %struct.Reg* %6570, i32 0, i32 0
  %RDX.i1573 = bitcast %union.anon* %6571 to i64*
  %6572 = load i64, i64* %RCX.i1572
  %6573 = load i64, i64* %RDX.i1573
  %6574 = load i64, i64* %PC.i1571
  %6575 = add i64 %6574, 3
  store i64 %6575, i64* %PC.i1571
  %6576 = add i64 %6573, %6572
  store i64 %6576, i64* %RCX.i1572, align 8
  %6577 = icmp ult i64 %6576, %6572
  %6578 = icmp ult i64 %6576, %6573
  %6579 = or i1 %6577, %6578
  %6580 = zext i1 %6579 to i8
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6580, i8* %6581, align 1
  %6582 = trunc i64 %6576 to i32
  %6583 = and i32 %6582, 255
  %6584 = call i32 @llvm.ctpop.i32(i32 %6583)
  %6585 = trunc i32 %6584 to i8
  %6586 = and i8 %6585, 1
  %6587 = xor i8 %6586, 1
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6587, i8* %6588, align 1
  %6589 = xor i64 %6573, %6572
  %6590 = xor i64 %6589, %6576
  %6591 = lshr i64 %6590, 4
  %6592 = trunc i64 %6591 to i8
  %6593 = and i8 %6592, 1
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6593, i8* %6594, align 1
  %6595 = icmp eq i64 %6576, 0
  %6596 = zext i1 %6595 to i8
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6596, i8* %6597, align 1
  %6598 = lshr i64 %6576, 63
  %6599 = trunc i64 %6598 to i8
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6599, i8* %6600, align 1
  %6601 = lshr i64 %6572, 63
  %6602 = lshr i64 %6573, 63
  %6603 = xor i64 %6598, %6601
  %6604 = xor i64 %6598, %6602
  %6605 = add i64 %6603, %6604
  %6606 = icmp eq i64 %6605, 2
  %6607 = zext i1 %6606 to i8
  %6608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6607, i8* %6608, align 1
  store %struct.Memory* %loadMem_40b1fb, %struct.Memory** %MEMORY
  %loadMem_40b1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 33
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %6611 to i64*
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6613 = getelementptr inbounds %struct.GPR, %struct.GPR* %6612, i32 0, i32 1
  %6614 = getelementptr inbounds %struct.Reg, %struct.Reg* %6613, i32 0, i32 0
  %RAX.i1569 = bitcast %union.anon* %6614 to i64*
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6616 = getelementptr inbounds %struct.GPR, %struct.GPR* %6615, i32 0, i32 5
  %6617 = getelementptr inbounds %struct.Reg, %struct.Reg* %6616, i32 0, i32 0
  %RCX.i1570 = bitcast %union.anon* %6617 to i64*
  %6618 = load i64, i64* %RAX.i1569
  %6619 = load i64, i64* %RCX.i1570
  %6620 = load i64, i64* %PC.i1568
  %6621 = add i64 %6620, 2
  store i64 %6621, i64* %PC.i1568
  %6622 = trunc i64 %6618 to i32
  %6623 = inttoptr i64 %6619 to i32*
  %6624 = load i32, i32* %6623
  %6625 = add i32 %6624, %6622
  %6626 = zext i32 %6625 to i64
  store i64 %6626, i64* %RAX.i1569, align 8
  %6627 = icmp ult i32 %6625, %6622
  %6628 = icmp ult i32 %6625, %6624
  %6629 = or i1 %6627, %6628
  %6630 = zext i1 %6629 to i8
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6630, i8* %6631, align 1
  %6632 = and i32 %6625, 255
  %6633 = call i32 @llvm.ctpop.i32(i32 %6632)
  %6634 = trunc i32 %6633 to i8
  %6635 = and i8 %6634, 1
  %6636 = xor i8 %6635, 1
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6636, i8* %6637, align 1
  %6638 = xor i32 %6624, %6622
  %6639 = xor i32 %6638, %6625
  %6640 = lshr i32 %6639, 4
  %6641 = trunc i32 %6640 to i8
  %6642 = and i8 %6641, 1
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6642, i8* %6643, align 1
  %6644 = icmp eq i32 %6625, 0
  %6645 = zext i1 %6644 to i8
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6645, i8* %6646, align 1
  %6647 = lshr i32 %6625, 31
  %6648 = trunc i32 %6647 to i8
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6648, i8* %6649, align 1
  %6650 = lshr i32 %6622, 31
  %6651 = lshr i32 %6624, 31
  %6652 = xor i32 %6647, %6650
  %6653 = xor i32 %6647, %6651
  %6654 = add i32 %6652, %6653
  %6655 = icmp eq i32 %6654, 2
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6656, i8* %6657, align 1
  store %struct.Memory* %loadMem_40b1fe, %struct.Memory** %MEMORY
  %loadMem_40b200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6659 = getelementptr inbounds %struct.GPR, %struct.GPR* %6658, i32 0, i32 33
  %6660 = getelementptr inbounds %struct.Reg, %struct.Reg* %6659, i32 0, i32 0
  %PC.i1565 = bitcast %union.anon* %6660 to i64*
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 5
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %RCX.i1566 = bitcast %union.anon* %6663 to i64*
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6665 = getelementptr inbounds %struct.GPR, %struct.GPR* %6664, i32 0, i32 15
  %6666 = getelementptr inbounds %struct.Reg, %struct.Reg* %6665, i32 0, i32 0
  %RBP.i1567 = bitcast %union.anon* %6666 to i64*
  %6667 = load i64, i64* %RBP.i1567
  %6668 = sub i64 %6667, 112
  %6669 = load i64, i64* %PC.i1565
  %6670 = add i64 %6669, 3
  store i64 %6670, i64* %PC.i1565
  %6671 = inttoptr i64 %6668 to i32*
  %6672 = load i32, i32* %6671
  %6673 = zext i32 %6672 to i64
  store i64 %6673, i64* %RCX.i1566, align 8
  store %struct.Memory* %loadMem_40b200, %struct.Memory** %MEMORY
  %loadMem_40b203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6675 = getelementptr inbounds %struct.GPR, %struct.GPR* %6674, i32 0, i32 33
  %6676 = getelementptr inbounds %struct.Reg, %struct.Reg* %6675, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %6676 to i64*
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6678 = getelementptr inbounds %struct.GPR, %struct.GPR* %6677, i32 0, i32 5
  %6679 = getelementptr inbounds %struct.Reg, %struct.Reg* %6678, i32 0, i32 0
  %6680 = bitcast %union.anon* %6679 to %struct.anon.2*
  %CL.i1562 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6680, i32 0, i32 0
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6682 = getelementptr inbounds %struct.GPR, %struct.GPR* %6681, i32 0, i32 1
  %6683 = getelementptr inbounds %struct.Reg, %struct.Reg* %6682, i32 0, i32 0
  %RAX.i1563 = bitcast %union.anon* %6683 to i64*
  %6684 = load i64, i64* %RAX.i1563
  %6685 = load i8, i8* %CL.i1562
  %6686 = zext i8 %6685 to i64
  %6687 = load i64, i64* %PC.i1561
  %6688 = add i64 %6687, 2
  store i64 %6688, i64* %PC.i1561
  %6689 = trunc i64 %6686 to i5
  switch i5 %6689, label %6693 [
    i5 0, label %routine_sarl__cl___eax.exit1564
    i5 1, label %6690
  ]

; <label>:6690:                                   ; preds = %block_40b1a2
  %6691 = shl i64 %6684, 32
  %6692 = ashr i64 %6691, 33
  br label %6700

; <label>:6693:                                   ; preds = %block_40b1a2
  %6694 = and i64 %6686, 31
  %6695 = add i64 %6694, -1
  %6696 = shl i64 %6684, 32
  %6697 = ashr exact i64 %6696, 32
  %6698 = ashr i64 %6697, %6695
  %6699 = lshr i64 %6698, 1
  br label %6700

; <label>:6700:                                   ; preds = %6693, %6690
  %6701 = phi i64 [ %6699, %6693 ], [ %6692, %6690 ]
  %6702 = phi i64 [ %6698, %6693 ], [ %6684, %6690 ]
  %6703 = trunc i64 %6702 to i8
  %6704 = and i8 %6703, 1
  %6705 = trunc i64 %6701 to i32
  %6706 = and i64 %6701, 4294967295
  store i64 %6706, i64* %RAX.i1563, align 8
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6704, i8* %6707, align 1
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6709 = and i32 %6705, 255
  %6710 = call i32 @llvm.ctpop.i32(i32 %6709)
  %6711 = trunc i32 %6710 to i8
  %6712 = and i8 %6711, 1
  %6713 = xor i8 %6712, 1
  store i8 %6713, i8* %6708, align 1
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6714, align 1
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6716 = icmp eq i32 %6705, 0
  %6717 = zext i1 %6716 to i8
  store i8 %6717, i8* %6715, align 1
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6719 = lshr i32 %6705, 31
  %6720 = trunc i32 %6719 to i8
  store i8 %6720, i8* %6718, align 1
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6721, align 1
  br label %routine_sarl__cl___eax.exit1564

routine_sarl__cl___eax.exit1564:                  ; preds = %block_40b1a2, %6700
  store %struct.Memory* %loadMem_40b203, %struct.Memory** %MEMORY
  %loadMem_40b205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6723 = getelementptr inbounds %struct.GPR, %struct.GPR* %6722, i32 0, i32 33
  %6724 = getelementptr inbounds %struct.Reg, %struct.Reg* %6723, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %6724 to i64*
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6726 = getelementptr inbounds %struct.GPR, %struct.GPR* %6725, i32 0, i32 1
  %6727 = getelementptr inbounds %struct.Reg, %struct.Reg* %6726, i32 0, i32 0
  %EAX.i1559 = bitcast %union.anon* %6727 to i32*
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6729 = getelementptr inbounds %struct.GPR, %struct.GPR* %6728, i32 0, i32 15
  %6730 = getelementptr inbounds %struct.Reg, %struct.Reg* %6729, i32 0, i32 0
  %RBP.i1560 = bitcast %union.anon* %6730 to i64*
  %6731 = load i64, i64* %RBP.i1560
  %6732 = sub i64 %6731, 72
  %6733 = load i32, i32* %EAX.i1559
  %6734 = zext i32 %6733 to i64
  %6735 = load i64, i64* %PC.i1558
  %6736 = add i64 %6735, 3
  store i64 %6736, i64* %PC.i1558
  %6737 = inttoptr i64 %6732 to i32*
  store i32 %6733, i32* %6737
  store %struct.Memory* %loadMem_40b205, %struct.Memory** %MEMORY
  %loadMem_40b208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6739 = getelementptr inbounds %struct.GPR, %struct.GPR* %6738, i32 0, i32 33
  %6740 = getelementptr inbounds %struct.Reg, %struct.Reg* %6739, i32 0, i32 0
  %PC.i1557 = bitcast %union.anon* %6740 to i64*
  %6741 = load i64, i64* %PC.i1557
  %6742 = add i64 %6741, 107
  %6743 = load i64, i64* %PC.i1557
  %6744 = add i64 %6743, 5
  store i64 %6744, i64* %PC.i1557
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6742, i64* %6745, align 8
  store %struct.Memory* %loadMem_40b208, %struct.Memory** %MEMORY
  br label %block_.L_40b273

block_.L_40b20d:                                  ; preds = %block_.L_40b198
  %loadMem_40b20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6747 = getelementptr inbounds %struct.GPR, %struct.GPR* %6746, i32 0, i32 33
  %6748 = getelementptr inbounds %struct.Reg, %struct.Reg* %6747, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %6748 to i64*
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6750 = getelementptr inbounds %struct.GPR, %struct.GPR* %6749, i32 0, i32 1
  %6751 = getelementptr inbounds %struct.Reg, %struct.Reg* %6750, i32 0, i32 0
  %RAX.i1556 = bitcast %union.anon* %6751 to i64*
  %6752 = load i64, i64* %PC.i1555
  %6753 = add i64 %6752, 8
  store i64 %6753, i64* %PC.i1555
  %6754 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %6754, i64* %RAX.i1556, align 8
  store %struct.Memory* %loadMem_40b20d, %struct.Memory** %MEMORY
  %loadMem_40b215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 33
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %6757 to i64*
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 1
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %RAX.i1553 = bitcast %union.anon* %6760 to i64*
  %6761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6762 = getelementptr inbounds %struct.GPR, %struct.GPR* %6761, i32 0, i32 11
  %6763 = getelementptr inbounds %struct.Reg, %struct.Reg* %6762, i32 0, i32 0
  %RDI.i1554 = bitcast %union.anon* %6763 to i64*
  %6764 = load i64, i64* %RAX.i1553
  %6765 = add i64 %6764, 13112
  %6766 = load i64, i64* %PC.i1552
  %6767 = add i64 %6766, 6
  store i64 %6767, i64* %PC.i1552
  %6768 = inttoptr i64 %6765 to i32*
  %6769 = load i32, i32* %6768
  %6770 = zext i32 %6769 to i64
  store i64 %6770, i64* %RDI.i1554, align 8
  store %struct.Memory* %loadMem_40b215, %struct.Memory** %MEMORY
  %loadMem1_40b21b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6772 = getelementptr inbounds %struct.GPR, %struct.GPR* %6771, i32 0, i32 33
  %6773 = getelementptr inbounds %struct.Reg, %struct.Reg* %6772, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %6773 to i64*
  %6774 = load i64, i64* %PC.i1551
  %6775 = add i64 %6774, -41499
  %6776 = load i64, i64* %PC.i1551
  %6777 = add i64 %6776, 5
  %6778 = load i64, i64* %PC.i1551
  %6779 = add i64 %6778, 5
  store i64 %6779, i64* %PC.i1551
  %6780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6781 = load i64, i64* %6780, align 8
  %6782 = add i64 %6781, -8
  %6783 = inttoptr i64 %6782 to i64*
  store i64 %6777, i64* %6783
  store i64 %6782, i64* %6780, align 8
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6775, i64* %6784, align 8
  store %struct.Memory* %loadMem1_40b21b, %struct.Memory** %MEMORY
  %loadMem2_40b21b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b21b = load i64, i64* %3
  %6785 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40b21b)
  store %struct.Memory* %6785, %struct.Memory** %MEMORY
  %loadMem_40b220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6787 = getelementptr inbounds %struct.GPR, %struct.GPR* %6786, i32 0, i32 33
  %6788 = getelementptr inbounds %struct.Reg, %struct.Reg* %6787, i32 0, i32 0
  %PC.i1547 = bitcast %union.anon* %6788 to i64*
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 5
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %RCX.i1548 = bitcast %union.anon* %6791 to i64*
  %6792 = load i64, i64* %PC.i1547
  %6793 = add i64 %6792, 10
  store i64 %6793, i64* %PC.i1547
  store i64 7397968, i64* %RCX.i1548, align 8
  store %struct.Memory* %loadMem_40b220, %struct.Memory** %MEMORY
  %loadMem_40b22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6795 = getelementptr inbounds %struct.GPR, %struct.GPR* %6794, i32 0, i32 33
  %6796 = getelementptr inbounds %struct.Reg, %struct.Reg* %6795, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %6796 to i64*
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 7
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %RDX.i1546 = bitcast %union.anon* %6799 to i64*
  %6800 = load i64, i64* %PC.i1545
  %6801 = add i64 %6800, 10
  store i64 %6801, i64* %PC.i1545
  store i64 ptrtoint (%G__0x722cd0_type* @G__0x722cd0 to i64), i64* %RDX.i1546, align 8
  store %struct.Memory* %loadMem_40b22a, %struct.Memory** %MEMORY
  %loadMem_40b234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6803 = getelementptr inbounds %struct.GPR, %struct.GPR* %6802, i32 0, i32 33
  %6804 = getelementptr inbounds %struct.Reg, %struct.Reg* %6803, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %6804 to i64*
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 9
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %RSI.i1543 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 15
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RBP.i1544 = bitcast %union.anon* %6810 to i64*
  %6811 = load i64, i64* %RBP.i1544
  %6812 = sub i64 %6811, 4
  %6813 = load i64, i64* %PC.i1542
  %6814 = add i64 %6813, 4
  store i64 %6814, i64* %PC.i1542
  %6815 = inttoptr i64 %6812 to i32*
  %6816 = load i32, i32* %6815
  %6817 = sext i32 %6816 to i64
  store i64 %6817, i64* %RSI.i1543, align 8
  store %struct.Memory* %loadMem_40b234, %struct.Memory** %MEMORY
  %loadMem_40b238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6819 = getelementptr inbounds %struct.GPR, %struct.GPR* %6818, i32 0, i32 33
  %6820 = getelementptr inbounds %struct.Reg, %struct.Reg* %6819, i32 0, i32 0
  %PC.i1540 = bitcast %union.anon* %6820 to i64*
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 9
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %RSI.i1541 = bitcast %union.anon* %6823 to i64*
  %6824 = load i64, i64* %RSI.i1541
  %6825 = load i64, i64* %PC.i1540
  %6826 = add i64 %6825, 7
  store i64 %6826, i64* %PC.i1540
  %6827 = sext i64 %6824 to i128
  %6828 = and i128 %6827, -18446744073709551616
  %6829 = zext i64 %6824 to i128
  %6830 = or i128 %6828, %6829
  %6831 = mul i128 384, %6830
  %6832 = trunc i128 %6831 to i64
  store i64 %6832, i64* %RSI.i1541, align 8
  %6833 = sext i64 %6832 to i128
  %6834 = icmp ne i128 %6833, %6831
  %6835 = zext i1 %6834 to i8
  %6836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6835, i8* %6836, align 1
  %6837 = trunc i128 %6831 to i32
  %6838 = and i32 %6837, 255
  %6839 = call i32 @llvm.ctpop.i32(i32 %6838)
  %6840 = trunc i32 %6839 to i8
  %6841 = and i8 %6840, 1
  %6842 = xor i8 %6841, 1
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6842, i8* %6843, align 1
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6844, align 1
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6845, align 1
  %6846 = lshr i64 %6832, 63
  %6847 = trunc i64 %6846 to i8
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6847, i8* %6848, align 1
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6835, i8* %6849, align 1
  store %struct.Memory* %loadMem_40b238, %struct.Memory** %MEMORY
  %loadMem_40b23f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 33
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %6852 to i64*
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 7
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %RDX.i1538 = bitcast %union.anon* %6855 to i64*
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6857 = getelementptr inbounds %struct.GPR, %struct.GPR* %6856, i32 0, i32 9
  %6858 = getelementptr inbounds %struct.Reg, %struct.Reg* %6857, i32 0, i32 0
  %RSI.i1539 = bitcast %union.anon* %6858 to i64*
  %6859 = load i64, i64* %RDX.i1538
  %6860 = load i64, i64* %RSI.i1539
  %6861 = load i64, i64* %PC.i1537
  %6862 = add i64 %6861, 3
  store i64 %6862, i64* %PC.i1537
  %6863 = add i64 %6860, %6859
  store i64 %6863, i64* %RDX.i1538, align 8
  %6864 = icmp ult i64 %6863, %6859
  %6865 = icmp ult i64 %6863, %6860
  %6866 = or i1 %6864, %6865
  %6867 = zext i1 %6866 to i8
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6867, i8* %6868, align 1
  %6869 = trunc i64 %6863 to i32
  %6870 = and i32 %6869, 255
  %6871 = call i32 @llvm.ctpop.i32(i32 %6870)
  %6872 = trunc i32 %6871 to i8
  %6873 = and i8 %6872, 1
  %6874 = xor i8 %6873, 1
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6874, i8* %6875, align 1
  %6876 = xor i64 %6860, %6859
  %6877 = xor i64 %6876, %6863
  %6878 = lshr i64 %6877, 4
  %6879 = trunc i64 %6878 to i8
  %6880 = and i8 %6879, 1
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6880, i8* %6881, align 1
  %6882 = icmp eq i64 %6863, 0
  %6883 = zext i1 %6882 to i8
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6883, i8* %6884, align 1
  %6885 = lshr i64 %6863, 63
  %6886 = trunc i64 %6885 to i8
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6886, i8* %6887, align 1
  %6888 = lshr i64 %6859, 63
  %6889 = lshr i64 %6860, 63
  %6890 = xor i64 %6885, %6888
  %6891 = xor i64 %6885, %6889
  %6892 = add i64 %6890, %6891
  %6893 = icmp eq i64 %6892, 2
  %6894 = zext i1 %6893 to i8
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6894, i8* %6895, align 1
  store %struct.Memory* %loadMem_40b23f, %struct.Memory** %MEMORY
  %loadMem_40b242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 33
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %6898 to i64*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 9
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %RSI.i1535 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 15
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %RBP.i1536 = bitcast %union.anon* %6904 to i64*
  %6905 = load i64, i64* %RBP.i1536
  %6906 = sub i64 %6905, 108
  %6907 = load i64, i64* %PC.i1534
  %6908 = add i64 %6907, 4
  store i64 %6908, i64* %PC.i1534
  %6909 = inttoptr i64 %6906 to i32*
  %6910 = load i32, i32* %6909
  %6911 = sext i32 %6910 to i64
  store i64 %6911, i64* %RSI.i1535, align 8
  store %struct.Memory* %loadMem_40b242, %struct.Memory** %MEMORY
  %loadMem_40b246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 33
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %6914 to i64*
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6916 = getelementptr inbounds %struct.GPR, %struct.GPR* %6915, i32 0, i32 9
  %6917 = getelementptr inbounds %struct.Reg, %struct.Reg* %6916, i32 0, i32 0
  %RSI.i1533 = bitcast %union.anon* %6917 to i64*
  %6918 = load i64, i64* %RSI.i1533
  %6919 = load i64, i64* %PC.i1532
  %6920 = add i64 %6919, 4
  store i64 %6920, i64* %PC.i1532
  %6921 = shl i64 %6918, 5
  %6922 = icmp slt i64 %6921, 0
  %6923 = shl i64 %6921, 1
  store i64 %6923, i64* %RSI.i1533, align 8
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6925 = zext i1 %6922 to i8
  store i8 %6925, i8* %6924, align 1
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6927 = trunc i64 %6923 to i32
  %6928 = and i32 %6927, 254
  %6929 = call i32 @llvm.ctpop.i32(i32 %6928)
  %6930 = trunc i32 %6929 to i8
  %6931 = and i8 %6930, 1
  %6932 = xor i8 %6931, 1
  store i8 %6932, i8* %6926, align 1
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6933, align 1
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6935 = icmp eq i64 %6923, 0
  %6936 = zext i1 %6935 to i8
  store i8 %6936, i8* %6934, align 1
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6938 = lshr i64 %6923, 63
  %6939 = trunc i64 %6938 to i8
  store i8 %6939, i8* %6937, align 1
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6940, align 1
  store %struct.Memory* %loadMem_40b246, %struct.Memory** %MEMORY
  %loadMem_40b24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6942 = getelementptr inbounds %struct.GPR, %struct.GPR* %6941, i32 0, i32 33
  %6943 = getelementptr inbounds %struct.Reg, %struct.Reg* %6942, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %6943 to i64*
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 7
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %RDX.i1530 = bitcast %union.anon* %6946 to i64*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 9
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %RSI.i1531 = bitcast %union.anon* %6949 to i64*
  %6950 = load i64, i64* %RDX.i1530
  %6951 = load i64, i64* %RSI.i1531
  %6952 = load i64, i64* %PC.i1529
  %6953 = add i64 %6952, 3
  store i64 %6953, i64* %PC.i1529
  %6954 = add i64 %6951, %6950
  store i64 %6954, i64* %RDX.i1530, align 8
  %6955 = icmp ult i64 %6954, %6950
  %6956 = icmp ult i64 %6954, %6951
  %6957 = or i1 %6955, %6956
  %6958 = zext i1 %6957 to i8
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6958, i8* %6959, align 1
  %6960 = trunc i64 %6954 to i32
  %6961 = and i32 %6960, 255
  %6962 = call i32 @llvm.ctpop.i32(i32 %6961)
  %6963 = trunc i32 %6962 to i8
  %6964 = and i8 %6963, 1
  %6965 = xor i8 %6964, 1
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6965, i8* %6966, align 1
  %6967 = xor i64 %6951, %6950
  %6968 = xor i64 %6967, %6954
  %6969 = lshr i64 %6968, 4
  %6970 = trunc i64 %6969 to i8
  %6971 = and i8 %6970, 1
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6971, i8* %6972, align 1
  %6973 = icmp eq i64 %6954, 0
  %6974 = zext i1 %6973 to i8
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6974, i8* %6975, align 1
  %6976 = lshr i64 %6954, 63
  %6977 = trunc i64 %6976 to i8
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6977, i8* %6978, align 1
  %6979 = lshr i64 %6950, 63
  %6980 = lshr i64 %6951, 63
  %6981 = xor i64 %6976, %6979
  %6982 = xor i64 %6976, %6980
  %6983 = add i64 %6981, %6982
  %6984 = icmp eq i64 %6983, 2
  %6985 = zext i1 %6984 to i8
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6985, i8* %6986, align 1
  store %struct.Memory* %loadMem_40b24a, %struct.Memory** %MEMORY
  %loadMem_40b24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 33
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %6989 to i64*
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6991 = getelementptr inbounds %struct.GPR, %struct.GPR* %6990, i32 0, i32 1
  %6992 = getelementptr inbounds %struct.Reg, %struct.Reg* %6991, i32 0, i32 0
  %RAX.i1527 = bitcast %union.anon* %6992 to i64*
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 7
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %RDX.i1528 = bitcast %union.anon* %6995 to i64*
  %6996 = load i64, i64* %RAX.i1527
  %6997 = load i64, i64* %RDX.i1528
  %6998 = load i64, i64* %PC.i1526
  %6999 = add i64 %6998, 3
  store i64 %6999, i64* %PC.i1526
  %7000 = inttoptr i64 %6997 to i32*
  %7001 = load i32, i32* %7000
  %7002 = shl i64 %6996, 32
  %7003 = ashr exact i64 %7002, 32
  %7004 = sext i32 %7001 to i64
  %7005 = mul i64 %7004, %7003
  %7006 = trunc i64 %7005 to i32
  %7007 = and i64 %7005, 4294967295
  store i64 %7007, i64* %RAX.i1527, align 8
  %7008 = shl i64 %7005, 32
  %7009 = ashr exact i64 %7008, 32
  %7010 = icmp ne i64 %7009, %7005
  %7011 = zext i1 %7010 to i8
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7011, i8* %7012, align 1
  %7013 = and i32 %7006, 255
  %7014 = call i32 @llvm.ctpop.i32(i32 %7013)
  %7015 = trunc i32 %7014 to i8
  %7016 = and i8 %7015, 1
  %7017 = xor i8 %7016, 1
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7017, i8* %7018, align 1
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7019, align 1
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7020, align 1
  %7021 = lshr i32 %7006, 31
  %7022 = trunc i32 %7021 to i8
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7022, i8* %7023, align 1
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7011, i8* %7024, align 1
  store %struct.Memory* %loadMem_40b24d, %struct.Memory** %MEMORY
  %loadMem_40b250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7026 = getelementptr inbounds %struct.GPR, %struct.GPR* %7025, i32 0, i32 33
  %7027 = getelementptr inbounds %struct.Reg, %struct.Reg* %7026, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %7027 to i64*
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 7
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %RDX.i1524 = bitcast %union.anon* %7030 to i64*
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 15
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %RBP.i1525 = bitcast %union.anon* %7033 to i64*
  %7034 = load i64, i64* %RBP.i1525
  %7035 = sub i64 %7034, 4
  %7036 = load i64, i64* %PC.i1523
  %7037 = add i64 %7036, 4
  store i64 %7037, i64* %PC.i1523
  %7038 = inttoptr i64 %7035 to i32*
  %7039 = load i32, i32* %7038
  %7040 = sext i32 %7039 to i64
  store i64 %7040, i64* %RDX.i1524, align 8
  store %struct.Memory* %loadMem_40b250, %struct.Memory** %MEMORY
  %loadMem_40b254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 33
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %7043 to i64*
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 7
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %RDX.i1522 = bitcast %union.anon* %7046 to i64*
  %7047 = load i64, i64* %RDX.i1522
  %7048 = load i64, i64* %PC.i1521
  %7049 = add i64 %7048, 7
  store i64 %7049, i64* %PC.i1521
  %7050 = sext i64 %7047 to i128
  %7051 = and i128 %7050, -18446744073709551616
  %7052 = zext i64 %7047 to i128
  %7053 = or i128 %7051, %7052
  %7054 = mul i128 832, %7053
  %7055 = trunc i128 %7054 to i64
  store i64 %7055, i64* %RDX.i1522, align 8
  %7056 = sext i64 %7055 to i128
  %7057 = icmp ne i128 %7056, %7054
  %7058 = zext i1 %7057 to i8
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7058, i8* %7059, align 1
  %7060 = trunc i128 %7054 to i32
  %7061 = and i32 %7060, 255
  %7062 = call i32 @llvm.ctpop.i32(i32 %7061)
  %7063 = trunc i32 %7062 to i8
  %7064 = and i8 %7063, 1
  %7065 = xor i8 %7064, 1
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7065, i8* %7066, align 1
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7067, align 1
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7068, align 1
  %7069 = lshr i64 %7055, 63
  %7070 = trunc i64 %7069 to i8
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7070, i8* %7071, align 1
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7058, i8* %7072, align 1
  store %struct.Memory* %loadMem_40b254, %struct.Memory** %MEMORY
  %loadMem_40b25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7074 = getelementptr inbounds %struct.GPR, %struct.GPR* %7073, i32 0, i32 33
  %7075 = getelementptr inbounds %struct.Reg, %struct.Reg* %7074, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %7075 to i64*
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7077 = getelementptr inbounds %struct.GPR, %struct.GPR* %7076, i32 0, i32 5
  %7078 = getelementptr inbounds %struct.Reg, %struct.Reg* %7077, i32 0, i32 0
  %RCX.i1519 = bitcast %union.anon* %7078 to i64*
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7080 = getelementptr inbounds %struct.GPR, %struct.GPR* %7079, i32 0, i32 7
  %7081 = getelementptr inbounds %struct.Reg, %struct.Reg* %7080, i32 0, i32 0
  %RDX.i1520 = bitcast %union.anon* %7081 to i64*
  %7082 = load i64, i64* %RCX.i1519
  %7083 = load i64, i64* %RDX.i1520
  %7084 = load i64, i64* %PC.i1518
  %7085 = add i64 %7084, 3
  store i64 %7085, i64* %PC.i1518
  %7086 = add i64 %7083, %7082
  store i64 %7086, i64* %RCX.i1519, align 8
  %7087 = icmp ult i64 %7086, %7082
  %7088 = icmp ult i64 %7086, %7083
  %7089 = or i1 %7087, %7088
  %7090 = zext i1 %7089 to i8
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7090, i8* %7091, align 1
  %7092 = trunc i64 %7086 to i32
  %7093 = and i32 %7092, 255
  %7094 = call i32 @llvm.ctpop.i32(i32 %7093)
  %7095 = trunc i32 %7094 to i8
  %7096 = and i8 %7095, 1
  %7097 = xor i8 %7096, 1
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7097, i8* %7098, align 1
  %7099 = xor i64 %7083, %7082
  %7100 = xor i64 %7099, %7086
  %7101 = lshr i64 %7100, 4
  %7102 = trunc i64 %7101 to i8
  %7103 = and i8 %7102, 1
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7103, i8* %7104, align 1
  %7105 = icmp eq i64 %7086, 0
  %7106 = zext i1 %7105 to i8
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7106, i8* %7107, align 1
  %7108 = lshr i64 %7086, 63
  %7109 = trunc i64 %7108 to i8
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7109, i8* %7110, align 1
  %7111 = lshr i64 %7082, 63
  %7112 = lshr i64 %7083, 63
  %7113 = xor i64 %7108, %7111
  %7114 = xor i64 %7108, %7112
  %7115 = add i64 %7113, %7114
  %7116 = icmp eq i64 %7115, 2
  %7117 = zext i1 %7116 to i8
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7117, i8* %7118, align 1
  store %struct.Memory* %loadMem_40b25b, %struct.Memory** %MEMORY
  %loadMem_40b25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7120 = getelementptr inbounds %struct.GPR, %struct.GPR* %7119, i32 0, i32 33
  %7121 = getelementptr inbounds %struct.Reg, %struct.Reg* %7120, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %7121 to i64*
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7123 = getelementptr inbounds %struct.GPR, %struct.GPR* %7122, i32 0, i32 7
  %7124 = getelementptr inbounds %struct.Reg, %struct.Reg* %7123, i32 0, i32 0
  %RDX.i1516 = bitcast %union.anon* %7124 to i64*
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7126 = getelementptr inbounds %struct.GPR, %struct.GPR* %7125, i32 0, i32 15
  %7127 = getelementptr inbounds %struct.Reg, %struct.Reg* %7126, i32 0, i32 0
  %RBP.i1517 = bitcast %union.anon* %7127 to i64*
  %7128 = load i64, i64* %RBP.i1517
  %7129 = sub i64 %7128, 104
  %7130 = load i64, i64* %PC.i1515
  %7131 = add i64 %7130, 4
  store i64 %7131, i64* %PC.i1515
  %7132 = inttoptr i64 %7129 to i32*
  %7133 = load i32, i32* %7132
  %7134 = sext i32 %7133 to i64
  store i64 %7134, i64* %RDX.i1516, align 8
  store %struct.Memory* %loadMem_40b25e, %struct.Memory** %MEMORY
  %loadMem_40b262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 33
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %7137 to i64*
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 7
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %RDX.i1514 = bitcast %union.anon* %7140 to i64*
  %7141 = load i64, i64* %RDX.i1514
  %7142 = load i64, i64* %PC.i1513
  %7143 = add i64 %7142, 4
  store i64 %7143, i64* %PC.i1513
  %7144 = shl i64 %7141, 5
  %7145 = icmp slt i64 %7144, 0
  %7146 = shl i64 %7144, 1
  store i64 %7146, i64* %RDX.i1514, align 8
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7148 = zext i1 %7145 to i8
  store i8 %7148, i8* %7147, align 1
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7150 = trunc i64 %7146 to i32
  %7151 = and i32 %7150, 254
  %7152 = call i32 @llvm.ctpop.i32(i32 %7151)
  %7153 = trunc i32 %7152 to i8
  %7154 = and i8 %7153, 1
  %7155 = xor i8 %7154, 1
  store i8 %7155, i8* %7149, align 1
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7156, align 1
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7158 = icmp eq i64 %7146, 0
  %7159 = zext i1 %7158 to i8
  store i8 %7159, i8* %7157, align 1
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7161 = lshr i64 %7146, 63
  %7162 = trunc i64 %7161 to i8
  store i8 %7162, i8* %7160, align 1
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7163, align 1
  store %struct.Memory* %loadMem_40b262, %struct.Memory** %MEMORY
  %loadMem_40b266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 33
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %7166 to i64*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 5
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %RCX.i1511 = bitcast %union.anon* %7169 to i64*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 7
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %RDX.i1512 = bitcast %union.anon* %7172 to i64*
  %7173 = load i64, i64* %RCX.i1511
  %7174 = load i64, i64* %RDX.i1512
  %7175 = load i64, i64* %PC.i1510
  %7176 = add i64 %7175, 3
  store i64 %7176, i64* %PC.i1510
  %7177 = add i64 %7174, %7173
  store i64 %7177, i64* %RCX.i1511, align 8
  %7178 = icmp ult i64 %7177, %7173
  %7179 = icmp ult i64 %7177, %7174
  %7180 = or i1 %7178, %7179
  %7181 = zext i1 %7180 to i8
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7181, i8* %7182, align 1
  %7183 = trunc i64 %7177 to i32
  %7184 = and i32 %7183, 255
  %7185 = call i32 @llvm.ctpop.i32(i32 %7184)
  %7186 = trunc i32 %7185 to i8
  %7187 = and i8 %7186, 1
  %7188 = xor i8 %7187, 1
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7188, i8* %7189, align 1
  %7190 = xor i64 %7174, %7173
  %7191 = xor i64 %7190, %7177
  %7192 = lshr i64 %7191, 4
  %7193 = trunc i64 %7192 to i8
  %7194 = and i8 %7193, 1
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7194, i8* %7195, align 1
  %7196 = icmp eq i64 %7177, 0
  %7197 = zext i1 %7196 to i8
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7197, i8* %7198, align 1
  %7199 = lshr i64 %7177, 63
  %7200 = trunc i64 %7199 to i8
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7200, i8* %7201, align 1
  %7202 = lshr i64 %7173, 63
  %7203 = lshr i64 %7174, 63
  %7204 = xor i64 %7199, %7202
  %7205 = xor i64 %7199, %7203
  %7206 = add i64 %7204, %7205
  %7207 = icmp eq i64 %7206, 2
  %7208 = zext i1 %7207 to i8
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7208, i8* %7209, align 1
  store %struct.Memory* %loadMem_40b266, %struct.Memory** %MEMORY
  %loadMem_40b269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 1
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %RAX.i1508 = bitcast %union.anon* %7215 to i64*
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 5
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %RCX.i1509 = bitcast %union.anon* %7218 to i64*
  %7219 = load i64, i64* %RAX.i1508
  %7220 = load i64, i64* %RCX.i1509
  %7221 = load i64, i64* %PC.i1507
  %7222 = add i64 %7221, 2
  store i64 %7222, i64* %PC.i1507
  %7223 = trunc i64 %7219 to i32
  %7224 = inttoptr i64 %7220 to i32*
  %7225 = load i32, i32* %7224
  %7226 = add i32 %7225, %7223
  %7227 = zext i32 %7226 to i64
  store i64 %7227, i64* %RAX.i1508, align 8
  %7228 = icmp ult i32 %7226, %7223
  %7229 = icmp ult i32 %7226, %7225
  %7230 = or i1 %7228, %7229
  %7231 = zext i1 %7230 to i8
  %7232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7231, i8* %7232, align 1
  %7233 = and i32 %7226, 255
  %7234 = call i32 @llvm.ctpop.i32(i32 %7233)
  %7235 = trunc i32 %7234 to i8
  %7236 = and i8 %7235, 1
  %7237 = xor i8 %7236, 1
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7237, i8* %7238, align 1
  %7239 = xor i32 %7225, %7223
  %7240 = xor i32 %7239, %7226
  %7241 = lshr i32 %7240, 4
  %7242 = trunc i32 %7241 to i8
  %7243 = and i8 %7242, 1
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7243, i8* %7244, align 1
  %7245 = icmp eq i32 %7226, 0
  %7246 = zext i1 %7245 to i8
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7246, i8* %7247, align 1
  %7248 = lshr i32 %7226, 31
  %7249 = trunc i32 %7248 to i8
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7249, i8* %7250, align 1
  %7251 = lshr i32 %7223, 31
  %7252 = lshr i32 %7225, 31
  %7253 = xor i32 %7248, %7251
  %7254 = xor i32 %7248, %7252
  %7255 = add i32 %7253, %7254
  %7256 = icmp eq i32 %7255, 2
  %7257 = zext i1 %7256 to i8
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7257, i8* %7258, align 1
  store %struct.Memory* %loadMem_40b269, %struct.Memory** %MEMORY
  %loadMem_40b26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7260 = getelementptr inbounds %struct.GPR, %struct.GPR* %7259, i32 0, i32 33
  %7261 = getelementptr inbounds %struct.Reg, %struct.Reg* %7260, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %7261 to i64*
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7263 = getelementptr inbounds %struct.GPR, %struct.GPR* %7262, i32 0, i32 5
  %7264 = getelementptr inbounds %struct.Reg, %struct.Reg* %7263, i32 0, i32 0
  %RCX.i1505 = bitcast %union.anon* %7264 to i64*
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 15
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %RBP.i1506 = bitcast %union.anon* %7267 to i64*
  %7268 = load i64, i64* %RBP.i1506
  %7269 = sub i64 %7268, 112
  %7270 = load i64, i64* %PC.i1504
  %7271 = add i64 %7270, 3
  store i64 %7271, i64* %PC.i1504
  %7272 = inttoptr i64 %7269 to i32*
  %7273 = load i32, i32* %7272
  %7274 = zext i32 %7273 to i64
  store i64 %7274, i64* %RCX.i1505, align 8
  store %struct.Memory* %loadMem_40b26b, %struct.Memory** %MEMORY
  %loadMem_40b26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7276 = getelementptr inbounds %struct.GPR, %struct.GPR* %7275, i32 0, i32 33
  %7277 = getelementptr inbounds %struct.Reg, %struct.Reg* %7276, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %7277 to i64*
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 5
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %7281 = bitcast %union.anon* %7280 to %struct.anon.2*
  %CL.i1501 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7281, i32 0, i32 0
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7283 = getelementptr inbounds %struct.GPR, %struct.GPR* %7282, i32 0, i32 1
  %7284 = getelementptr inbounds %struct.Reg, %struct.Reg* %7283, i32 0, i32 0
  %RAX.i1502 = bitcast %union.anon* %7284 to i64*
  %7285 = load i64, i64* %RAX.i1502
  %7286 = load i8, i8* %CL.i1501
  %7287 = zext i8 %7286 to i64
  %7288 = load i64, i64* %PC.i1500
  %7289 = add i64 %7288, 2
  store i64 %7289, i64* %PC.i1500
  %7290 = trunc i64 %7287 to i5
  switch i5 %7290, label %7294 [
    i5 0, label %routine_sarl__cl___eax.exit1503
    i5 1, label %7291
  ]

; <label>:7291:                                   ; preds = %block_.L_40b20d
  %7292 = shl i64 %7285, 32
  %7293 = ashr i64 %7292, 33
  br label %7301

; <label>:7294:                                   ; preds = %block_.L_40b20d
  %7295 = and i64 %7287, 31
  %7296 = add i64 %7295, -1
  %7297 = shl i64 %7285, 32
  %7298 = ashr exact i64 %7297, 32
  %7299 = ashr i64 %7298, %7296
  %7300 = lshr i64 %7299, 1
  br label %7301

; <label>:7301:                                   ; preds = %7294, %7291
  %7302 = phi i64 [ %7300, %7294 ], [ %7293, %7291 ]
  %7303 = phi i64 [ %7299, %7294 ], [ %7285, %7291 ]
  %7304 = trunc i64 %7303 to i8
  %7305 = and i8 %7304, 1
  %7306 = trunc i64 %7302 to i32
  %7307 = and i64 %7302, 4294967295
  store i64 %7307, i64* %RAX.i1502, align 8
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7305, i8* %7308, align 1
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7310 = and i32 %7306, 255
  %7311 = call i32 @llvm.ctpop.i32(i32 %7310)
  %7312 = trunc i32 %7311 to i8
  %7313 = and i8 %7312, 1
  %7314 = xor i8 %7313, 1
  store i8 %7314, i8* %7309, align 1
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7315, align 1
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7317 = icmp eq i32 %7306, 0
  %7318 = zext i1 %7317 to i8
  store i8 %7318, i8* %7316, align 1
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7320 = lshr i32 %7306, 31
  %7321 = trunc i32 %7320 to i8
  store i8 %7321, i8* %7319, align 1
  %7322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7322, align 1
  br label %routine_sarl__cl___eax.exit1503

routine_sarl__cl___eax.exit1503:                  ; preds = %block_.L_40b20d, %7301
  store %struct.Memory* %loadMem_40b26e, %struct.Memory** %MEMORY
  %loadMem_40b270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 33
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %PC.i1497 = bitcast %union.anon* %7325 to i64*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 1
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %EAX.i1498 = bitcast %union.anon* %7328 to i32*
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 15
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %RBP.i1499 = bitcast %union.anon* %7331 to i64*
  %7332 = load i64, i64* %RBP.i1499
  %7333 = sub i64 %7332, 72
  %7334 = load i32, i32* %EAX.i1498
  %7335 = zext i32 %7334 to i64
  %7336 = load i64, i64* %PC.i1497
  %7337 = add i64 %7336, 3
  store i64 %7337, i64* %PC.i1497
  %7338 = inttoptr i64 %7333 to i32*
  store i32 %7334, i32* %7338
  store %struct.Memory* %loadMem_40b270, %struct.Memory** %MEMORY
  br label %block_.L_40b273

block_.L_40b273:                                  ; preds = %routine_sarl__cl___eax.exit1503, %routine_sarl__cl___eax.exit1564
  %loadMem_40b273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7340 = getelementptr inbounds %struct.GPR, %struct.GPR* %7339, i32 0, i32 33
  %7341 = getelementptr inbounds %struct.Reg, %struct.Reg* %7340, i32 0, i32 0
  %PC.i1496 = bitcast %union.anon* %7341 to i64*
  %7342 = load i64, i64* %PC.i1496
  %7343 = add i64 %7342, 5
  %7344 = load i64, i64* %PC.i1496
  %7345 = add i64 %7344, 5
  store i64 %7345, i64* %PC.i1496
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7343, i64* %7346, align 8
  store %struct.Memory* %loadMem_40b273, %struct.Memory** %MEMORY
  br label %block_.L_40b278

block_.L_40b278:                                  ; preds = %block_.L_40b273, %block_40b17d
  %loadMem_40b278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 33
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %7349 to i64*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 1
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %RAX.i1494 = bitcast %union.anon* %7352 to i64*
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 15
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %RBP.i1495 = bitcast %union.anon* %7355 to i64*
  %7356 = load i64, i64* %RBP.i1495
  %7357 = sub i64 %7356, 4
  %7358 = load i64, i64* %PC.i1493
  %7359 = add i64 %7358, 3
  store i64 %7359, i64* %PC.i1493
  %7360 = inttoptr i64 %7357 to i32*
  %7361 = load i32, i32* %7360
  %7362 = zext i32 %7361 to i64
  store i64 %7362, i64* %RAX.i1494, align 8
  store %struct.Memory* %loadMem_40b278, %struct.Memory** %MEMORY
  %loadMem_40b27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7364 = getelementptr inbounds %struct.GPR, %struct.GPR* %7363, i32 0, i32 33
  %7365 = getelementptr inbounds %struct.Reg, %struct.Reg* %7364, i32 0, i32 0
  %PC.i1491 = bitcast %union.anon* %7365 to i64*
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7367 = getelementptr inbounds %struct.GPR, %struct.GPR* %7366, i32 0, i32 1
  %7368 = getelementptr inbounds %struct.Reg, %struct.Reg* %7367, i32 0, i32 0
  %RAX.i1492 = bitcast %union.anon* %7368 to i64*
  %7369 = load i64, i64* %RAX.i1492
  %7370 = load i64, i64* %PC.i1491
  %7371 = add i64 %7370, 3
  store i64 %7371, i64* %PC.i1491
  %7372 = trunc i64 %7369 to i32
  %7373 = add i32 1, %7372
  %7374 = zext i32 %7373 to i64
  store i64 %7374, i64* %RAX.i1492, align 8
  %7375 = icmp ult i32 %7373, %7372
  %7376 = icmp ult i32 %7373, 1
  %7377 = or i1 %7375, %7376
  %7378 = zext i1 %7377 to i8
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7378, i8* %7379, align 1
  %7380 = and i32 %7373, 255
  %7381 = call i32 @llvm.ctpop.i32(i32 %7380)
  %7382 = trunc i32 %7381 to i8
  %7383 = and i8 %7382, 1
  %7384 = xor i8 %7383, 1
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7384, i8* %7385, align 1
  %7386 = xor i64 1, %7369
  %7387 = trunc i64 %7386 to i32
  %7388 = xor i32 %7387, %7373
  %7389 = lshr i32 %7388, 4
  %7390 = trunc i32 %7389 to i8
  %7391 = and i8 %7390, 1
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7391, i8* %7392, align 1
  %7393 = icmp eq i32 %7373, 0
  %7394 = zext i1 %7393 to i8
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7394, i8* %7395, align 1
  %7396 = lshr i32 %7373, 31
  %7397 = trunc i32 %7396 to i8
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7397, i8* %7398, align 1
  %7399 = lshr i32 %7372, 31
  %7400 = xor i32 %7396, %7399
  %7401 = add i32 %7400, %7396
  %7402 = icmp eq i32 %7401, 2
  %7403 = zext i1 %7402 to i8
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7403, i8* %7404, align 1
  store %struct.Memory* %loadMem_40b27b, %struct.Memory** %MEMORY
  %loadMem_40b27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7406 = getelementptr inbounds %struct.GPR, %struct.GPR* %7405, i32 0, i32 33
  %7407 = getelementptr inbounds %struct.Reg, %struct.Reg* %7406, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %7407 to i64*
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7409 = getelementptr inbounds %struct.GPR, %struct.GPR* %7408, i32 0, i32 1
  %7410 = getelementptr inbounds %struct.Reg, %struct.Reg* %7409, i32 0, i32 0
  %RAX.i1490 = bitcast %union.anon* %7410 to i64*
  %7411 = load i64, i64* %RAX.i1490
  %7412 = load i64, i64* %PC.i1489
  %7413 = add i64 %7412, 3
  store i64 %7413, i64* %PC.i1489
  %7414 = and i64 %7411, 4294967295
  %7415 = shl i64 %7414, 1
  %7416 = trunc i64 %7415 to i32
  %7417 = icmp slt i32 %7416, 0
  %7418 = shl i32 %7416, 1
  %7419 = zext i32 %7418 to i64
  store i64 %7419, i64* %RAX.i1490, align 8
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7421 = zext i1 %7417 to i8
  store i8 %7421, i8* %7420, align 1
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7423 = and i32 %7418, 254
  %7424 = call i32 @llvm.ctpop.i32(i32 %7423)
  %7425 = trunc i32 %7424 to i8
  %7426 = and i8 %7425, 1
  %7427 = xor i8 %7426, 1
  store i8 %7427, i8* %7422, align 1
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7428, align 1
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7430 = icmp eq i32 %7418, 0
  %7431 = zext i1 %7430 to i8
  store i8 %7431, i8* %7429, align 1
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7433 = lshr i32 %7418, 31
  %7434 = trunc i32 %7433 to i8
  store i8 %7434, i8* %7432, align 1
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7435, align 1
  store %struct.Memory* %loadMem_40b27e, %struct.Memory** %MEMORY
  %loadMem_40b281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 33
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %7438 to i64*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 5
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %RCX.i1487 = bitcast %union.anon* %7441 to i64*
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 15
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %7444 to i64*
  %7445 = load i64, i64* %RBP.i1488
  %7446 = sub i64 %7445, 8
  %7447 = load i64, i64* %PC.i1486
  %7448 = add i64 %7447, 3
  store i64 %7448, i64* %PC.i1486
  %7449 = inttoptr i64 %7446 to i32*
  %7450 = load i32, i32* %7449
  %7451 = zext i32 %7450 to i64
  store i64 %7451, i64* %RCX.i1487, align 8
  store %struct.Memory* %loadMem_40b281, %struct.Memory** %MEMORY
  %loadMem_40b284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 33
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %7454 to i64*
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7456 = getelementptr inbounds %struct.GPR, %struct.GPR* %7455, i32 0, i32 1
  %7457 = getelementptr inbounds %struct.Reg, %struct.Reg* %7456, i32 0, i32 0
  %EAX.i1484 = bitcast %union.anon* %7457 to i32*
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7459 = getelementptr inbounds %struct.GPR, %struct.GPR* %7458, i32 0, i32 5
  %7460 = getelementptr inbounds %struct.Reg, %struct.Reg* %7459, i32 0, i32 0
  %RCX.i1485 = bitcast %union.anon* %7460 to i64*
  %7461 = load i64, i64* %RCX.i1485
  %7462 = load i32, i32* %EAX.i1484
  %7463 = zext i32 %7462 to i64
  %7464 = load i64, i64* %PC.i1483
  %7465 = add i64 %7464, 2
  store i64 %7465, i64* %PC.i1483
  %7466 = trunc i64 %7461 to i32
  %7467 = sub i32 %7466, %7462
  %7468 = zext i32 %7467 to i64
  store i64 %7468, i64* %RCX.i1485, align 8
  %7469 = icmp ult i32 %7466, %7462
  %7470 = zext i1 %7469 to i8
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7470, i8* %7471, align 1
  %7472 = and i32 %7467, 255
  %7473 = call i32 @llvm.ctpop.i32(i32 %7472)
  %7474 = trunc i32 %7473 to i8
  %7475 = and i8 %7474, 1
  %7476 = xor i8 %7475, 1
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7476, i8* %7477, align 1
  %7478 = xor i64 %7463, %7461
  %7479 = trunc i64 %7478 to i32
  %7480 = xor i32 %7479, %7467
  %7481 = lshr i32 %7480, 4
  %7482 = trunc i32 %7481 to i8
  %7483 = and i8 %7482, 1
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7483, i8* %7484, align 1
  %7485 = icmp eq i32 %7467, 0
  %7486 = zext i1 %7485 to i8
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7486, i8* %7487, align 1
  %7488 = lshr i32 %7467, 31
  %7489 = trunc i32 %7488 to i8
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7489, i8* %7490, align 1
  %7491 = lshr i32 %7466, 31
  %7492 = lshr i32 %7462, 31
  %7493 = xor i32 %7492, %7491
  %7494 = xor i32 %7488, %7491
  %7495 = add i32 %7494, %7493
  %7496 = icmp eq i32 %7495, 2
  %7497 = zext i1 %7496 to i8
  %7498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7497, i8* %7498, align 1
  store %struct.Memory* %loadMem_40b284, %struct.Memory** %MEMORY
  %loadMem_40b286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7500 = getelementptr inbounds %struct.GPR, %struct.GPR* %7499, i32 0, i32 33
  %7501 = getelementptr inbounds %struct.Reg, %struct.Reg* %7500, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %7501 to i64*
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 5
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %ECX.i1481 = bitcast %union.anon* %7504 to i32*
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 15
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %RBP.i1482 = bitcast %union.anon* %7507 to i64*
  %7508 = load i64, i64* %RBP.i1482
  %7509 = sub i64 %7508, 8
  %7510 = load i32, i32* %ECX.i1481
  %7511 = zext i32 %7510 to i64
  %7512 = load i64, i64* %PC.i1480
  %7513 = add i64 %7512, 3
  store i64 %7513, i64* %PC.i1480
  %7514 = inttoptr i64 %7509 to i32*
  store i32 %7510, i32* %7514
  store %struct.Memory* %loadMem_40b286, %struct.Memory** %MEMORY
  %loadMem_40b289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7516 = getelementptr inbounds %struct.GPR, %struct.GPR* %7515, i32 0, i32 33
  %7517 = getelementptr inbounds %struct.Reg, %struct.Reg* %7516, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %7517 to i64*
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7519 = getelementptr inbounds %struct.GPR, %struct.GPR* %7518, i32 0, i32 11
  %7520 = getelementptr inbounds %struct.Reg, %struct.Reg* %7519, i32 0, i32 0
  %RDI.i1478 = bitcast %union.anon* %7520 to i64*
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 15
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %7523 to i64*
  %7524 = load i64, i64* %RBP.i1479
  %7525 = sub i64 %7524, 72
  %7526 = load i64, i64* %PC.i1477
  %7527 = add i64 %7526, 3
  store i64 %7527, i64* %PC.i1477
  %7528 = inttoptr i64 %7525 to i32*
  %7529 = load i32, i32* %7528
  %7530 = zext i32 %7529 to i64
  store i64 %7530, i64* %RDI.i1478, align 8
  store %struct.Memory* %loadMem_40b289, %struct.Memory** %MEMORY
  %loadMem_40b28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 33
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %7533 to i64*
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7535 = getelementptr inbounds %struct.GPR, %struct.GPR* %7534, i32 0, i32 7
  %7536 = getelementptr inbounds %struct.Reg, %struct.Reg* %7535, i32 0, i32 0
  %RDX.i1476 = bitcast %union.anon* %7536 to i64*
  %7537 = load i64, i64* %PC.i1475
  %7538 = add i64 %7537, 8
  store i64 %7538, i64* %PC.i1475
  %7539 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7539, i64* %RDX.i1476, align 8
  store %struct.Memory* %loadMem_40b28c, %struct.Memory** %MEMORY
  %loadMem_40b294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 33
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %7542 to i64*
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 7
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %RDX.i1473 = bitcast %union.anon* %7545 to i64*
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 9
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %RSI.i1474 = bitcast %union.anon* %7548 to i64*
  %7549 = load i64, i64* %RDX.i1473
  %7550 = add i64 %7549, 13112
  %7551 = load i64, i64* %PC.i1472
  %7552 = add i64 %7551, 6
  store i64 %7552, i64* %PC.i1472
  %7553 = inttoptr i64 %7550 to i32*
  %7554 = load i32, i32* %7553
  %7555 = zext i32 %7554 to i64
  store i64 %7555, i64* %RSI.i1474, align 8
  store %struct.Memory* %loadMem_40b294, %struct.Memory** %MEMORY
  %loadMem1_40b29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7557 = getelementptr inbounds %struct.GPR, %struct.GPR* %7556, i32 0, i32 33
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %7558 to i64*
  %7559 = load i64, i64* %PC.i1471
  %7560 = add i64 %7559, 433846
  %7561 = load i64, i64* %PC.i1471
  %7562 = add i64 %7561, 5
  %7563 = load i64, i64* %PC.i1471
  %7564 = add i64 %7563, 5
  store i64 %7564, i64* %PC.i1471
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7566 = load i64, i64* %7565, align 8
  %7567 = add i64 %7566, -8
  %7568 = inttoptr i64 %7567 to i64*
  store i64 %7562, i64* %7568
  store i64 %7567, i64* %7565, align 8
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7560, i64* %7569, align 8
  store %struct.Memory* %loadMem1_40b29a, %struct.Memory** %MEMORY
  %loadMem2_40b29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b29a = load i64, i64* %3
  %call2_40b29a = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b29a, %struct.Memory* %loadMem2_40b29a)
  store %struct.Memory* %call2_40b29a, %struct.Memory** %MEMORY
  %loadMem_40b29f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7571 = getelementptr inbounds %struct.GPR, %struct.GPR* %7570, i32 0, i32 33
  %7572 = getelementptr inbounds %struct.Reg, %struct.Reg* %7571, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %7572 to i64*
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7574 = getelementptr inbounds %struct.GPR, %struct.GPR* %7573, i32 0, i32 5
  %7575 = getelementptr inbounds %struct.Reg, %struct.Reg* %7574, i32 0, i32 0
  %RCX.i1470 = bitcast %union.anon* %7575 to i64*
  %7576 = load i64, i64* %PC.i1469
  %7577 = add i64 %7576, 5
  store i64 %7577, i64* %PC.i1469
  store i64 2, i64* %RCX.i1470, align 8
  store %struct.Memory* %loadMem_40b29f, %struct.Memory** %MEMORY
  %loadMem_40b2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7579 = getelementptr inbounds %struct.GPR, %struct.GPR* %7578, i32 0, i32 33
  %7580 = getelementptr inbounds %struct.Reg, %struct.Reg* %7579, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %7580 to i64*
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 7
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %RDX.i1468 = bitcast %union.anon* %7583 to i64*
  %7584 = load i64, i64* %PC.i1467
  %7585 = add i64 %7584, 10
  store i64 %7585, i64* %PC.i1467
  store i64 ptrtoint (%G__0x6d4600_type* @G__0x6d4600 to i64), i64* %RDX.i1468, align 8
  store %struct.Memory* %loadMem_40b2a4, %struct.Memory** %MEMORY
  %loadMem_40b2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7587 = getelementptr inbounds %struct.GPR, %struct.GPR* %7586, i32 0, i32 33
  %7588 = getelementptr inbounds %struct.Reg, %struct.Reg* %7587, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %7588 to i64*
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7590 = getelementptr inbounds %struct.GPR, %struct.GPR* %7589, i32 0, i32 15
  %7591 = getelementptr inbounds %struct.Reg, %struct.Reg* %7590, i32 0, i32 0
  %RBP.i1465 = bitcast %union.anon* %7591 to i64*
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 17
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %R8.i1466 = bitcast %union.anon* %7594 to i64*
  %7595 = load i64, i64* %RBP.i1465
  %7596 = sub i64 %7595, 4
  %7597 = load i64, i64* %PC.i1464
  %7598 = add i64 %7597, 4
  store i64 %7598, i64* %PC.i1464
  %7599 = inttoptr i64 %7596 to i32*
  %7600 = load i32, i32* %7599
  %7601 = sext i32 %7600 to i64
  store i64 %7601, i64* %R8.i1466, align 8
  store %struct.Memory* %loadMem_40b2ae, %struct.Memory** %MEMORY
  %loadMem_40b2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7603 = getelementptr inbounds %struct.GPR, %struct.GPR* %7602, i32 0, i32 33
  %7604 = getelementptr inbounds %struct.Reg, %struct.Reg* %7603, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %7604 to i64*
  %7605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7606 = getelementptr inbounds %struct.GPR, %struct.GPR* %7605, i32 0, i32 17
  %7607 = getelementptr inbounds %struct.Reg, %struct.Reg* %7606, i32 0, i32 0
  %R8.i1463 = bitcast %union.anon* %7607 to i64*
  %7608 = load i64, i64* %R8.i1463
  %7609 = load i64, i64* %PC.i1462
  %7610 = add i64 %7609, 4
  store i64 %7610, i64* %PC.i1462
  %7611 = shl i64 %7608, 5
  %7612 = icmp slt i64 %7611, 0
  %7613 = shl i64 %7611, 1
  store i64 %7613, i64* %R8.i1463, align 8
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7615 = zext i1 %7612 to i8
  store i8 %7615, i8* %7614, align 1
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7617 = trunc i64 %7613 to i32
  %7618 = and i32 %7617, 254
  %7619 = call i32 @llvm.ctpop.i32(i32 %7618)
  %7620 = trunc i32 %7619 to i8
  %7621 = and i8 %7620, 1
  %7622 = xor i8 %7621, 1
  store i8 %7622, i8* %7616, align 1
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7623, align 1
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7625 = icmp eq i64 %7613, 0
  %7626 = zext i1 %7625 to i8
  store i8 %7626, i8* %7624, align 1
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7628 = lshr i64 %7613, 63
  %7629 = trunc i64 %7628 to i8
  store i8 %7629, i8* %7627, align 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7630, align 1
  store %struct.Memory* %loadMem_40b2b2, %struct.Memory** %MEMORY
  %loadMem_40b2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 33
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %7633 to i64*
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7635 = getelementptr inbounds %struct.GPR, %struct.GPR* %7634, i32 0, i32 7
  %7636 = getelementptr inbounds %struct.Reg, %struct.Reg* %7635, i32 0, i32 0
  %RDX.i1460 = bitcast %union.anon* %7636 to i64*
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7638 = getelementptr inbounds %struct.GPR, %struct.GPR* %7637, i32 0, i32 17
  %7639 = getelementptr inbounds %struct.Reg, %struct.Reg* %7638, i32 0, i32 0
  %R8.i1461 = bitcast %union.anon* %7639 to i64*
  %7640 = load i64, i64* %RDX.i1460
  %7641 = load i64, i64* %R8.i1461
  %7642 = load i64, i64* %PC.i1459
  %7643 = add i64 %7642, 3
  store i64 %7643, i64* %PC.i1459
  %7644 = add i64 %7641, %7640
  store i64 %7644, i64* %RDX.i1460, align 8
  %7645 = icmp ult i64 %7644, %7640
  %7646 = icmp ult i64 %7644, %7641
  %7647 = or i1 %7645, %7646
  %7648 = zext i1 %7647 to i8
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7648, i8* %7649, align 1
  %7650 = trunc i64 %7644 to i32
  %7651 = and i32 %7650, 255
  %7652 = call i32 @llvm.ctpop.i32(i32 %7651)
  %7653 = trunc i32 %7652 to i8
  %7654 = and i8 %7653, 1
  %7655 = xor i8 %7654, 1
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7655, i8* %7656, align 1
  %7657 = xor i64 %7641, %7640
  %7658 = xor i64 %7657, %7644
  %7659 = lshr i64 %7658, 4
  %7660 = trunc i64 %7659 to i8
  %7661 = and i8 %7660, 1
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7661, i8* %7662, align 1
  %7663 = icmp eq i64 %7644, 0
  %7664 = zext i1 %7663 to i8
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7664, i8* %7665, align 1
  %7666 = lshr i64 %7644, 63
  %7667 = trunc i64 %7666 to i8
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7667, i8* %7668, align 1
  %7669 = lshr i64 %7640, 63
  %7670 = lshr i64 %7641, 63
  %7671 = xor i64 %7666, %7669
  %7672 = xor i64 %7666, %7670
  %7673 = add i64 %7671, %7672
  %7674 = icmp eq i64 %7673, 2
  %7675 = zext i1 %7674 to i8
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7675, i8* %7676, align 1
  store %struct.Memory* %loadMem_40b2b6, %struct.Memory** %MEMORY
  %loadMem_40b2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7678 = getelementptr inbounds %struct.GPR, %struct.GPR* %7677, i32 0, i32 33
  %7679 = getelementptr inbounds %struct.Reg, %struct.Reg* %7678, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %7679 to i64*
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7681 = getelementptr inbounds %struct.GPR, %struct.GPR* %7680, i32 0, i32 9
  %7682 = getelementptr inbounds %struct.Reg, %struct.Reg* %7681, i32 0, i32 0
  %RSI.i1457 = bitcast %union.anon* %7682 to i64*
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7684 = getelementptr inbounds %struct.GPR, %struct.GPR* %7683, i32 0, i32 15
  %7685 = getelementptr inbounds %struct.Reg, %struct.Reg* %7684, i32 0, i32 0
  %RBP.i1458 = bitcast %union.anon* %7685 to i64*
  %7686 = load i64, i64* %RBP.i1458
  %7687 = sub i64 %7686, 8
  %7688 = load i64, i64* %PC.i1456
  %7689 = add i64 %7688, 3
  store i64 %7689, i64* %PC.i1456
  %7690 = inttoptr i64 %7687 to i32*
  %7691 = load i32, i32* %7690
  %7692 = zext i32 %7691 to i64
  store i64 %7692, i64* %RSI.i1457, align 8
  store %struct.Memory* %loadMem_40b2b9, %struct.Memory** %MEMORY
  %loadMem_40b2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7694 = getelementptr inbounds %struct.GPR, %struct.GPR* %7693, i32 0, i32 33
  %7695 = getelementptr inbounds %struct.Reg, %struct.Reg* %7694, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %7695 to i64*
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7697 = getelementptr inbounds %struct.GPR, %struct.GPR* %7696, i32 0, i32 1
  %7698 = getelementptr inbounds %struct.Reg, %struct.Reg* %7697, i32 0, i32 0
  %EAX.i1454 = bitcast %union.anon* %7698 to i32*
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7700 = getelementptr inbounds %struct.GPR, %struct.GPR* %7699, i32 0, i32 15
  %7701 = getelementptr inbounds %struct.Reg, %struct.Reg* %7700, i32 0, i32 0
  %RBP.i1455 = bitcast %union.anon* %7701 to i64*
  %7702 = load i64, i64* %RBP.i1455
  %7703 = sub i64 %7702, 152
  %7704 = load i32, i32* %EAX.i1454
  %7705 = zext i32 %7704 to i64
  %7706 = load i64, i64* %PC.i1453
  %7707 = add i64 %7706, 6
  store i64 %7707, i64* %PC.i1453
  %7708 = inttoptr i64 %7703 to i32*
  store i32 %7704, i32* %7708
  store %struct.Memory* %loadMem_40b2bc, %struct.Memory** %MEMORY
  %loadMem_40b2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7710 = getelementptr inbounds %struct.GPR, %struct.GPR* %7709, i32 0, i32 33
  %7711 = getelementptr inbounds %struct.Reg, %struct.Reg* %7710, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %7711 to i64*
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 9
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %ESI.i1451 = bitcast %union.anon* %7714 to i32*
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 1
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %RAX.i1452 = bitcast %union.anon* %7717 to i64*
  %7718 = load i32, i32* %ESI.i1451
  %7719 = zext i32 %7718 to i64
  %7720 = load i64, i64* %PC.i1450
  %7721 = add i64 %7720, 2
  store i64 %7721, i64* %PC.i1450
  %7722 = and i64 %7719, 4294967295
  store i64 %7722, i64* %RAX.i1452, align 8
  store %struct.Memory* %loadMem_40b2c2, %struct.Memory** %MEMORY
  %loadMem_40b2c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7724 = getelementptr inbounds %struct.GPR, %struct.GPR* %7723, i32 0, i32 33
  %7725 = getelementptr inbounds %struct.Reg, %struct.Reg* %7724, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %7725 to i64*
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7727 = getelementptr inbounds %struct.GPR, %struct.GPR* %7726, i32 0, i32 7
  %7728 = getelementptr inbounds %struct.Reg, %struct.Reg* %7727, i32 0, i32 0
  %RDX.i1448 = bitcast %union.anon* %7728 to i64*
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 15
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %7731 to i64*
  %7732 = load i64, i64* %RBP.i1449
  %7733 = sub i64 %7732, 160
  %7734 = load i64, i64* %RDX.i1448
  %7735 = load i64, i64* %PC.i1447
  %7736 = add i64 %7735, 7
  store i64 %7736, i64* %PC.i1447
  %7737 = inttoptr i64 %7733 to i64*
  store i64 %7734, i64* %7737
  store %struct.Memory* %loadMem_40b2c4, %struct.Memory** %MEMORY
  %loadMem_40b2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 33
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %PC.i1446 = bitcast %union.anon* %7740 to i64*
  %7741 = load i64, i64* %PC.i1446
  %7742 = add i64 %7741, 1
  store i64 %7742, i64* %PC.i1446
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7745 = bitcast %union.anon* %7744 to i32*
  %7746 = load i32, i32* %7745, align 8
  %7747 = sext i32 %7746 to i64
  %7748 = lshr i64 %7747, 32
  store i64 %7748, i64* %7743, align 8
  store %struct.Memory* %loadMem_40b2cb, %struct.Memory** %MEMORY
  %loadMem_40b2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 33
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %7751 to i64*
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7753 = getelementptr inbounds %struct.GPR, %struct.GPR* %7752, i32 0, i32 5
  %7754 = getelementptr inbounds %struct.Reg, %struct.Reg* %7753, i32 0, i32 0
  %ECX.i1442 = bitcast %union.anon* %7754 to i32*
  %7755 = load i32, i32* %ECX.i1442
  %7756 = zext i32 %7755 to i64
  %7757 = load i64, i64* %PC.i1441
  %7758 = add i64 %7757, 2
  store i64 %7758, i64* %PC.i1441
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7760 = bitcast %union.anon* %7759 to i32*
  %7761 = load i32, i32* %7760, align 8
  %7762 = zext i32 %7761 to i64
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7764 = bitcast %union.anon* %7763 to i32*
  %7765 = load i32, i32* %7764, align 8
  %7766 = zext i32 %7765 to i64
  %7767 = shl i64 %7756, 32
  %7768 = ashr exact i64 %7767, 32
  %7769 = shl i64 %7766, 32
  %7770 = or i64 %7769, %7762
  %7771 = sdiv i64 %7770, %7768
  %7772 = shl i64 %7771, 32
  %7773 = ashr exact i64 %7772, 32
  %7774 = icmp eq i64 %7771, %7773
  br i1 %7774, label %7779, label %7775

; <label>:7775:                                   ; preds = %block_.L_40b278
  %7776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7777 = load i64, i64* %7776, align 8
  %7778 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7777, %struct.Memory* %loadMem_40b2cc)
  br label %routine_idivl__ecx.exit1443

; <label>:7779:                                   ; preds = %block_.L_40b278
  %7780 = srem i64 %7770, %7768
  %7781 = getelementptr inbounds %union.anon, %union.anon* %7759, i64 0, i32 0
  %7782 = and i64 %7771, 4294967295
  store i64 %7782, i64* %7781, align 8
  %7783 = getelementptr inbounds %union.anon, %union.anon* %7763, i64 0, i32 0
  %7784 = and i64 %7780, 4294967295
  store i64 %7784, i64* %7783, align 8
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7785, align 1
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7786, align 1
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7787, align 1
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7788, align 1
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7789, align 1
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7790, align 1
  br label %routine_idivl__ecx.exit1443

routine_idivl__ecx.exit1443:                      ; preds = %7775, %7779
  %7791 = phi %struct.Memory* [ %7778, %7775 ], [ %loadMem_40b2cc, %7779 ]
  store %struct.Memory* %7791, %struct.Memory** %MEMORY
  %loadMem_40b2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 33
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %7794 to i64*
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 7
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %RDX.i1440 = bitcast %union.anon* %7797 to i64*
  %7798 = load i64, i64* %RDX.i1440
  %7799 = load i64, i64* %PC.i1439
  %7800 = add i64 %7799, 2
  store i64 %7800, i64* %PC.i1439
  %7801 = trunc i64 %7798 to i32
  %7802 = shl i32 %7801, 1
  %7803 = icmp slt i32 %7801, 0
  %7804 = icmp slt i32 %7802, 0
  %7805 = xor i1 %7803, %7804
  %7806 = zext i32 %7802 to i64
  store i64 %7806, i64* %RDX.i1440, align 8
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7808 = zext i1 %7803 to i8
  store i8 %7808, i8* %7807, align 1
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7810 = and i32 %7802, 254
  %7811 = call i32 @llvm.ctpop.i32(i32 %7810)
  %7812 = trunc i32 %7811 to i8
  %7813 = and i8 %7812, 1
  %7814 = xor i8 %7813, 1
  store i8 %7814, i8* %7809, align 1
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7815, align 1
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7817 = icmp eq i32 %7802, 0
  %7818 = zext i1 %7817 to i8
  store i8 %7818, i8* %7816, align 1
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7820 = lshr i32 %7802, 31
  %7821 = trunc i32 %7820 to i8
  store i8 %7821, i8* %7819, align 1
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7823 = zext i1 %7805 to i8
  store i8 %7823, i8* %7822, align 1
  store %struct.Memory* %loadMem_40b2ce, %struct.Memory** %MEMORY
  %loadMem_40b2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 33
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %7826 to i64*
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 9
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %RSI.i1437 = bitcast %union.anon* %7829 to i64*
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 15
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %RBP.i1438 = bitcast %union.anon* %7832 to i64*
  %7833 = load i64, i64* %RBP.i1438
  %7834 = sub i64 %7833, 12
  %7835 = load i64, i64* %PC.i1436
  %7836 = add i64 %7835, 3
  store i64 %7836, i64* %PC.i1436
  %7837 = inttoptr i64 %7834 to i32*
  %7838 = load i32, i32* %7837
  %7839 = zext i32 %7838 to i64
  store i64 %7839, i64* %RSI.i1437, align 8
  store %struct.Memory* %loadMem_40b2d1, %struct.Memory** %MEMORY
  %loadMem_40b2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 33
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %7842 to i64*
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 9
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %ESI.i1434 = bitcast %union.anon* %7845 to i32*
  %7846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7847 = getelementptr inbounds %struct.GPR, %struct.GPR* %7846, i32 0, i32 1
  %7848 = getelementptr inbounds %struct.Reg, %struct.Reg* %7847, i32 0, i32 0
  %RAX.i1435 = bitcast %union.anon* %7848 to i64*
  %7849 = load i32, i32* %ESI.i1434
  %7850 = zext i32 %7849 to i64
  %7851 = load i64, i64* %PC.i1433
  %7852 = add i64 %7851, 2
  store i64 %7852, i64* %PC.i1433
  %7853 = and i64 %7850, 4294967295
  store i64 %7853, i64* %RAX.i1435, align 8
  store %struct.Memory* %loadMem_40b2d4, %struct.Memory** %MEMORY
  %loadMem_40b2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 33
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %7856 to i64*
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 7
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %EDX.i1431 = bitcast %union.anon* %7859 to i32*
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 15
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %RBP.i1432 = bitcast %union.anon* %7862 to i64*
  %7863 = load i64, i64* %RBP.i1432
  %7864 = sub i64 %7863, 164
  %7865 = load i32, i32* %EDX.i1431
  %7866 = zext i32 %7865 to i64
  %7867 = load i64, i64* %PC.i1430
  %7868 = add i64 %7867, 6
  store i64 %7868, i64* %PC.i1430
  %7869 = inttoptr i64 %7864 to i32*
  store i32 %7865, i32* %7869
  store %struct.Memory* %loadMem_40b2d6, %struct.Memory** %MEMORY
  %loadMem_40b2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 33
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %7872 to i64*
  %7873 = load i64, i64* %PC.i1429
  %7874 = add i64 %7873, 1
  store i64 %7874, i64* %PC.i1429
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7877 = bitcast %union.anon* %7876 to i32*
  %7878 = load i32, i32* %7877, align 8
  %7879 = sext i32 %7878 to i64
  %7880 = lshr i64 %7879, 32
  store i64 %7880, i64* %7875, align 8
  store %struct.Memory* %loadMem_40b2dc, %struct.Memory** %MEMORY
  %loadMem_40b2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 33
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 5
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %ECX.i1424 = bitcast %union.anon* %7886 to i32*
  %7887 = load i32, i32* %ECX.i1424
  %7888 = zext i32 %7887 to i64
  %7889 = load i64, i64* %PC.i1423
  %7890 = add i64 %7889, 2
  store i64 %7890, i64* %PC.i1423
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7892 = bitcast %union.anon* %7891 to i32*
  %7893 = load i32, i32* %7892, align 8
  %7894 = zext i32 %7893 to i64
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7896 = bitcast %union.anon* %7895 to i32*
  %7897 = load i32, i32* %7896, align 8
  %7898 = zext i32 %7897 to i64
  %7899 = shl i64 %7888, 32
  %7900 = ashr exact i64 %7899, 32
  %7901 = shl i64 %7898, 32
  %7902 = or i64 %7901, %7894
  %7903 = sdiv i64 %7902, %7900
  %7904 = shl i64 %7903, 32
  %7905 = ashr exact i64 %7904, 32
  %7906 = icmp eq i64 %7903, %7905
  br i1 %7906, label %7911, label %7907

; <label>:7907:                                   ; preds = %routine_idivl__ecx.exit1443
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7909 = load i64, i64* %7908, align 8
  %7910 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7909, %struct.Memory* %loadMem_40b2dd)
  br label %routine_idivl__ecx.exit1425

; <label>:7911:                                   ; preds = %routine_idivl__ecx.exit1443
  %7912 = srem i64 %7902, %7900
  %7913 = getelementptr inbounds %union.anon, %union.anon* %7891, i64 0, i32 0
  %7914 = and i64 %7903, 4294967295
  store i64 %7914, i64* %7913, align 8
  %7915 = getelementptr inbounds %union.anon, %union.anon* %7895, i64 0, i32 0
  %7916 = and i64 %7912, 4294967295
  store i64 %7916, i64* %7915, align 8
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7917, align 1
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7918, align 1
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7919, align 1
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7920, align 1
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7921, align 1
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7922, align 1
  br label %routine_idivl__ecx.exit1425

routine_idivl__ecx.exit1425:                      ; preds = %7907, %7911
  %7923 = phi %struct.Memory* [ %7910, %7907 ], [ %loadMem_40b2dd, %7911 ]
  store %struct.Memory* %7923, %struct.Memory** %MEMORY
  %loadMem_40b2df = load %struct.Memory*, %struct.Memory** %MEMORY
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 33
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %PC.i1420 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 9
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %RSI.i1421 = bitcast %union.anon* %7929 to i64*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 15
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %RBP.i1422 = bitcast %union.anon* %7932 to i64*
  %7933 = load i64, i64* %RBP.i1422
  %7934 = sub i64 %7933, 164
  %7935 = load i64, i64* %PC.i1420
  %7936 = add i64 %7935, 6
  store i64 %7936, i64* %PC.i1420
  %7937 = inttoptr i64 %7934 to i32*
  %7938 = load i32, i32* %7937
  %7939 = zext i32 %7938 to i64
  store i64 %7939, i64* %RSI.i1421, align 8
  store %struct.Memory* %loadMem_40b2df, %struct.Memory** %MEMORY
  %loadMem_40b2e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 33
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %7942 to i64*
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 7
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %EDX.i1418 = bitcast %union.anon* %7945 to i32*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 9
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %RSI.i1419 = bitcast %union.anon* %7948 to i64*
  %7949 = load i64, i64* %RSI.i1419
  %7950 = load i32, i32* %EDX.i1418
  %7951 = zext i32 %7950 to i64
  %7952 = load i64, i64* %PC.i1417
  %7953 = add i64 %7952, 2
  store i64 %7953, i64* %PC.i1417
  %7954 = trunc i64 %7949 to i32
  %7955 = add i32 %7950, %7954
  %7956 = zext i32 %7955 to i64
  store i64 %7956, i64* %RSI.i1419, align 8
  %7957 = icmp ult i32 %7955, %7954
  %7958 = icmp ult i32 %7955, %7950
  %7959 = or i1 %7957, %7958
  %7960 = zext i1 %7959 to i8
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7960, i8* %7961, align 1
  %7962 = and i32 %7955, 255
  %7963 = call i32 @llvm.ctpop.i32(i32 %7962)
  %7964 = trunc i32 %7963 to i8
  %7965 = and i8 %7964, 1
  %7966 = xor i8 %7965, 1
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7966, i8* %7967, align 1
  %7968 = xor i64 %7951, %7949
  %7969 = trunc i64 %7968 to i32
  %7970 = xor i32 %7969, %7955
  %7971 = lshr i32 %7970, 4
  %7972 = trunc i32 %7971 to i8
  %7973 = and i8 %7972, 1
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7973, i8* %7974, align 1
  %7975 = icmp eq i32 %7955, 0
  %7976 = zext i1 %7975 to i8
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7976, i8* %7977, align 1
  %7978 = lshr i32 %7955, 31
  %7979 = trunc i32 %7978 to i8
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7979, i8* %7980, align 1
  %7981 = lshr i32 %7954, 31
  %7982 = lshr i32 %7950, 31
  %7983 = xor i32 %7978, %7981
  %7984 = xor i32 %7978, %7982
  %7985 = add i32 %7983, %7984
  %7986 = icmp eq i32 %7985, 2
  %7987 = zext i1 %7986 to i8
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7987, i8* %7988, align 1
  store %struct.Memory* %loadMem_40b2e5, %struct.Memory** %MEMORY
  %loadMem_40b2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 33
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 9
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %ESI.i1415 = bitcast %union.anon* %7994 to i32*
  %7995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7996 = getelementptr inbounds %struct.GPR, %struct.GPR* %7995, i32 0, i32 17
  %7997 = getelementptr inbounds %struct.Reg, %struct.Reg* %7996, i32 0, i32 0
  %R8.i1416 = bitcast %union.anon* %7997 to i64*
  %7998 = load i32, i32* %ESI.i1415
  %7999 = zext i32 %7998 to i64
  %8000 = load i64, i64* %PC.i1414
  %8001 = add i64 %8000, 3
  store i64 %8001, i64* %PC.i1414
  %8002 = shl i64 %7999, 32
  %8003 = ashr exact i64 %8002, 32
  store i64 %8003, i64* %R8.i1416, align 8
  store %struct.Memory* %loadMem_40b2e7, %struct.Memory** %MEMORY
  %loadMem_40b2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 33
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %8006 to i64*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 17
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %R8.i1413 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %R8.i1413
  %8011 = load i64, i64* %PC.i1412
  %8012 = add i64 %8011, 4
  store i64 %8012, i64* %PC.i1412
  %8013 = shl i64 %8010, 3
  %8014 = icmp slt i64 %8013, 0
  %8015 = shl i64 %8013, 1
  store i64 %8015, i64* %R8.i1413, align 8
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8017 = zext i1 %8014 to i8
  store i8 %8017, i8* %8016, align 1
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8019 = trunc i64 %8015 to i32
  %8020 = and i32 %8019, 254
  %8021 = call i32 @llvm.ctpop.i32(i32 %8020)
  %8022 = trunc i32 %8021 to i8
  %8023 = and i8 %8022, 1
  %8024 = xor i8 %8023, 1
  store i8 %8024, i8* %8018, align 1
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8025, align 1
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8027 = icmp eq i64 %8015, 0
  %8028 = zext i1 %8027 to i8
  store i8 %8028, i8* %8026, align 1
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8030 = lshr i64 %8015, 63
  %8031 = trunc i64 %8030 to i8
  store i8 %8031, i8* %8029, align 1
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8032, align 1
  store %struct.Memory* %loadMem_40b2ea, %struct.Memory** %MEMORY
  %loadMem_40b2ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 33
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %8035 to i64*
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 15
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %RBP.i1410 = bitcast %union.anon* %8038 to i64*
  %8039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8040 = getelementptr inbounds %struct.GPR, %struct.GPR* %8039, i32 0, i32 19
  %8041 = getelementptr inbounds %struct.Reg, %struct.Reg* %8040, i32 0, i32 0
  %R9.i1411 = bitcast %union.anon* %8041 to i64*
  %8042 = load i64, i64* %RBP.i1410
  %8043 = sub i64 %8042, 160
  %8044 = load i64, i64* %PC.i1409
  %8045 = add i64 %8044, 7
  store i64 %8045, i64* %PC.i1409
  %8046 = inttoptr i64 %8043 to i64*
  %8047 = load i64, i64* %8046
  store i64 %8047, i64* %R9.i1411, align 8
  store %struct.Memory* %loadMem_40b2ee, %struct.Memory** %MEMORY
  %loadMem_40b2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 33
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %8050 to i64*
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 17
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %R8.i1407 = bitcast %union.anon* %8053 to i64*
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 19
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %R9.i1408 = bitcast %union.anon* %8056 to i64*
  %8057 = load i64, i64* %R9.i1408
  %8058 = load i64, i64* %R8.i1407
  %8059 = load i64, i64* %PC.i1406
  %8060 = add i64 %8059, 3
  store i64 %8060, i64* %PC.i1406
  %8061 = add i64 %8058, %8057
  store i64 %8061, i64* %R9.i1408, align 8
  %8062 = icmp ult i64 %8061, %8057
  %8063 = icmp ult i64 %8061, %8058
  %8064 = or i1 %8062, %8063
  %8065 = zext i1 %8064 to i8
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8065, i8* %8066, align 1
  %8067 = trunc i64 %8061 to i32
  %8068 = and i32 %8067, 255
  %8069 = call i32 @llvm.ctpop.i32(i32 %8068)
  %8070 = trunc i32 %8069 to i8
  %8071 = and i8 %8070, 1
  %8072 = xor i8 %8071, 1
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8072, i8* %8073, align 1
  %8074 = xor i64 %8058, %8057
  %8075 = xor i64 %8074, %8061
  %8076 = lshr i64 %8075, 4
  %8077 = trunc i64 %8076 to i8
  %8078 = and i8 %8077, 1
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8078, i8* %8079, align 1
  %8080 = icmp eq i64 %8061, 0
  %8081 = zext i1 %8080 to i8
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8081, i8* %8082, align 1
  %8083 = lshr i64 %8061, 63
  %8084 = trunc i64 %8083 to i8
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8084, i8* %8085, align 1
  %8086 = lshr i64 %8057, 63
  %8087 = lshr i64 %8058, 63
  %8088 = xor i64 %8083, %8086
  %8089 = xor i64 %8083, %8087
  %8090 = add i64 %8088, %8089
  %8091 = icmp eq i64 %8090, 2
  %8092 = zext i1 %8091 to i8
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8092, i8* %8093, align 1
  store %struct.Memory* %loadMem_40b2f5, %struct.Memory** %MEMORY
  %loadMem_40b2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8095 = getelementptr inbounds %struct.GPR, %struct.GPR* %8094, i32 0, i32 33
  %8096 = getelementptr inbounds %struct.Reg, %struct.Reg* %8095, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %8096 to i64*
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8098 = getelementptr inbounds %struct.GPR, %struct.GPR* %8097, i32 0, i32 7
  %8099 = getelementptr inbounds %struct.Reg, %struct.Reg* %8098, i32 0, i32 0
  %RDX.i1404 = bitcast %union.anon* %8099 to i64*
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 15
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %RBP.i1405 = bitcast %union.anon* %8102 to i64*
  %8103 = load i64, i64* %RBP.i1405
  %8104 = sub i64 %8103, 8
  %8105 = load i64, i64* %PC.i1403
  %8106 = add i64 %8105, 3
  store i64 %8106, i64* %PC.i1403
  %8107 = inttoptr i64 %8104 to i32*
  %8108 = load i32, i32* %8107
  %8109 = zext i32 %8108 to i64
  store i64 %8109, i64* %RDX.i1404, align 8
  store %struct.Memory* %loadMem_40b2f8, %struct.Memory** %MEMORY
  %loadMem_40b2fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 33
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %8112 to i64*
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8114 = getelementptr inbounds %struct.GPR, %struct.GPR* %8113, i32 0, i32 7
  %8115 = getelementptr inbounds %struct.Reg, %struct.Reg* %8114, i32 0, i32 0
  %EDX.i1401 = bitcast %union.anon* %8115 to i32*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 1
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %RAX.i1402 = bitcast %union.anon* %8118 to i64*
  %8119 = load i32, i32* %EDX.i1401
  %8120 = zext i32 %8119 to i64
  %8121 = load i64, i64* %PC.i1400
  %8122 = add i64 %8121, 2
  store i64 %8122, i64* %PC.i1400
  %8123 = and i64 %8120, 4294967295
  store i64 %8123, i64* %RAX.i1402, align 8
  store %struct.Memory* %loadMem_40b2fb, %struct.Memory** %MEMORY
  %loadMem_40b2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8125 = getelementptr inbounds %struct.GPR, %struct.GPR* %8124, i32 0, i32 33
  %8126 = getelementptr inbounds %struct.Reg, %struct.Reg* %8125, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %8126 to i64*
  %8127 = load i64, i64* %PC.i1399
  %8128 = add i64 %8127, 1
  store i64 %8128, i64* %PC.i1399
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8131 = bitcast %union.anon* %8130 to i32*
  %8132 = load i32, i32* %8131, align 8
  %8133 = sext i32 %8132 to i64
  %8134 = lshr i64 %8133, 32
  store i64 %8134, i64* %8129, align 8
  store %struct.Memory* %loadMem_40b2fd, %struct.Memory** %MEMORY
  %loadMem_40b2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 33
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %8137 to i64*
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8139 = getelementptr inbounds %struct.GPR, %struct.GPR* %8138, i32 0, i32 5
  %8140 = getelementptr inbounds %struct.Reg, %struct.Reg* %8139, i32 0, i32 0
  %ECX.i1394 = bitcast %union.anon* %8140 to i32*
  %8141 = load i32, i32* %ECX.i1394
  %8142 = zext i32 %8141 to i64
  %8143 = load i64, i64* %PC.i1393
  %8144 = add i64 %8143, 2
  store i64 %8144, i64* %PC.i1393
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8146 = bitcast %union.anon* %8145 to i32*
  %8147 = load i32, i32* %8146, align 8
  %8148 = zext i32 %8147 to i64
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8150 = bitcast %union.anon* %8149 to i32*
  %8151 = load i32, i32* %8150, align 8
  %8152 = zext i32 %8151 to i64
  %8153 = shl i64 %8142, 32
  %8154 = ashr exact i64 %8153, 32
  %8155 = shl i64 %8152, 32
  %8156 = or i64 %8155, %8148
  %8157 = sdiv i64 %8156, %8154
  %8158 = shl i64 %8157, 32
  %8159 = ashr exact i64 %8158, 32
  %8160 = icmp eq i64 %8157, %8159
  br i1 %8160, label %8165, label %8161

; <label>:8161:                                   ; preds = %routine_idivl__ecx.exit1425
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8163 = load i64, i64* %8162, align 8
  %8164 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8163, %struct.Memory* %loadMem_40b2fe)
  br label %routine_idivl__ecx.exit1395

; <label>:8165:                                   ; preds = %routine_idivl__ecx.exit1425
  %8166 = srem i64 %8156, %8154
  %8167 = getelementptr inbounds %union.anon, %union.anon* %8145, i64 0, i32 0
  %8168 = and i64 %8157, 4294967295
  store i64 %8168, i64* %8167, align 8
  %8169 = getelementptr inbounds %union.anon, %union.anon* %8149, i64 0, i32 0
  %8170 = and i64 %8166, 4294967295
  store i64 %8170, i64* %8169, align 8
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8171, align 1
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8172, align 1
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8173, align 1
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8174, align 1
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8175, align 1
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8176, align 1
  br label %routine_idivl__ecx.exit1395

routine_idivl__ecx.exit1395:                      ; preds = %8161, %8165
  %8177 = phi %struct.Memory* [ %8164, %8161 ], [ %loadMem_40b2fe, %8165 ]
  store %struct.Memory* %8177, %struct.Memory** %MEMORY
  %loadMem_40b300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 33
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %8180 to i64*
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 1
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %RAX.i1392 = bitcast %union.anon* %8183 to i64*
  %8184 = load i64, i64* %RAX.i1392
  %8185 = load i64, i64* %PC.i1391
  %8186 = add i64 %8185, 2
  store i64 %8186, i64* %PC.i1391
  %8187 = trunc i64 %8184 to i32
  %8188 = shl i32 %8187, 1
  %8189 = icmp slt i32 %8187, 0
  %8190 = icmp slt i32 %8188, 0
  %8191 = xor i1 %8189, %8190
  %8192 = zext i32 %8188 to i64
  store i64 %8192, i64* %RAX.i1392, align 8
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8194 = zext i1 %8189 to i8
  store i8 %8194, i8* %8193, align 1
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8196 = and i32 %8188, 254
  %8197 = call i32 @llvm.ctpop.i32(i32 %8196)
  %8198 = trunc i32 %8197 to i8
  %8199 = and i8 %8198, 1
  %8200 = xor i8 %8199, 1
  store i8 %8200, i8* %8195, align 1
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8201, align 1
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8203 = icmp eq i32 %8188, 0
  %8204 = zext i1 %8203 to i8
  store i8 %8204, i8* %8202, align 1
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8206 = lshr i32 %8188, 31
  %8207 = trunc i32 %8206 to i8
  store i8 %8207, i8* %8205, align 1
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8209 = zext i1 %8191 to i8
  store i8 %8209, i8* %8208, align 1
  store %struct.Memory* %loadMem_40b300, %struct.Memory** %MEMORY
  %loadMem_40b303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 33
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 9
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %RSI.i1389 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 15
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %RBP.i1390 = bitcast %union.anon* %8218 to i64*
  %8219 = load i64, i64* %RBP.i1390
  %8220 = sub i64 %8219, 12
  %8221 = load i64, i64* %PC.i1388
  %8222 = add i64 %8221, 3
  store i64 %8222, i64* %PC.i1388
  %8223 = inttoptr i64 %8220 to i32*
  %8224 = load i32, i32* %8223
  %8225 = zext i32 %8224 to i64
  store i64 %8225, i64* %RSI.i1389, align 8
  store %struct.Memory* %loadMem_40b303, %struct.Memory** %MEMORY
  %loadMem_40b306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8227 = getelementptr inbounds %struct.GPR, %struct.GPR* %8226, i32 0, i32 33
  %8228 = getelementptr inbounds %struct.Reg, %struct.Reg* %8227, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %8228 to i64*
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 1
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %EAX.i1386 = bitcast %union.anon* %8231 to i32*
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 15
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %RBP.i1387 = bitcast %union.anon* %8234 to i64*
  %8235 = load i64, i64* %RBP.i1387
  %8236 = sub i64 %8235, 168
  %8237 = load i32, i32* %EAX.i1386
  %8238 = zext i32 %8237 to i64
  %8239 = load i64, i64* %PC.i1385
  %8240 = add i64 %8239, 6
  store i64 %8240, i64* %PC.i1385
  %8241 = inttoptr i64 %8236 to i32*
  store i32 %8237, i32* %8241
  store %struct.Memory* %loadMem_40b306, %struct.Memory** %MEMORY
  %loadMem_40b30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 33
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %8244 to i64*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 9
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %ESI.i1383 = bitcast %union.anon* %8247 to i32*
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8249 = getelementptr inbounds %struct.GPR, %struct.GPR* %8248, i32 0, i32 1
  %8250 = getelementptr inbounds %struct.Reg, %struct.Reg* %8249, i32 0, i32 0
  %RAX.i1384 = bitcast %union.anon* %8250 to i64*
  %8251 = load i32, i32* %ESI.i1383
  %8252 = zext i32 %8251 to i64
  %8253 = load i64, i64* %PC.i1382
  %8254 = add i64 %8253, 2
  store i64 %8254, i64* %PC.i1382
  %8255 = and i64 %8252, 4294967295
  store i64 %8255, i64* %RAX.i1384, align 8
  store %struct.Memory* %loadMem_40b30c, %struct.Memory** %MEMORY
  %loadMem_40b30e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 33
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %8258 to i64*
  %8259 = load i64, i64* %PC.i1381
  %8260 = add i64 %8259, 1
  store i64 %8260, i64* %PC.i1381
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8263 = bitcast %union.anon* %8262 to i32*
  %8264 = load i32, i32* %8263, align 8
  %8265 = sext i32 %8264 to i64
  %8266 = lshr i64 %8265, 32
  store i64 %8266, i64* %8261, align 8
  store %struct.Memory* %loadMem_40b30e, %struct.Memory** %MEMORY
  %loadMem_40b30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8268 = getelementptr inbounds %struct.GPR, %struct.GPR* %8267, i32 0, i32 33
  %8269 = getelementptr inbounds %struct.Reg, %struct.Reg* %8268, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %8269 to i64*
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8271 = getelementptr inbounds %struct.GPR, %struct.GPR* %8270, i32 0, i32 5
  %8272 = getelementptr inbounds %struct.Reg, %struct.Reg* %8271, i32 0, i32 0
  %ECX.i1377 = bitcast %union.anon* %8272 to i32*
  %8273 = load i32, i32* %ECX.i1377
  %8274 = zext i32 %8273 to i64
  %8275 = load i64, i64* %PC.i1376
  %8276 = add i64 %8275, 2
  store i64 %8276, i64* %PC.i1376
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8278 = bitcast %union.anon* %8277 to i32*
  %8279 = load i32, i32* %8278, align 8
  %8280 = zext i32 %8279 to i64
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8282 = bitcast %union.anon* %8281 to i32*
  %8283 = load i32, i32* %8282, align 8
  %8284 = zext i32 %8283 to i64
  %8285 = shl i64 %8274, 32
  %8286 = ashr exact i64 %8285, 32
  %8287 = shl i64 %8284, 32
  %8288 = or i64 %8287, %8280
  %8289 = sdiv i64 %8288, %8286
  %8290 = shl i64 %8289, 32
  %8291 = ashr exact i64 %8290, 32
  %8292 = icmp eq i64 %8289, %8291
  br i1 %8292, label %8297, label %8293

; <label>:8293:                                   ; preds = %routine_idivl__ecx.exit1395
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8295 = load i64, i64* %8294, align 8
  %8296 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8295, %struct.Memory* %loadMem_40b30f)
  br label %routine_idivl__ecx.exit

; <label>:8297:                                   ; preds = %routine_idivl__ecx.exit1395
  %8298 = srem i64 %8288, %8286
  %8299 = getelementptr inbounds %union.anon, %union.anon* %8277, i64 0, i32 0
  %8300 = and i64 %8289, 4294967295
  store i64 %8300, i64* %8299, align 8
  %8301 = getelementptr inbounds %union.anon, %union.anon* %8281, i64 0, i32 0
  %8302 = and i64 %8298, 4294967295
  store i64 %8302, i64* %8301, align 8
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8303, align 1
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8304, align 1
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8305, align 1
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8306, align 1
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8307, align 1
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8308, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %8293, %8297
  %8309 = phi %struct.Memory* [ %8296, %8293 ], [ %loadMem_40b30f, %8297 ]
  store %struct.Memory* %8309, %struct.Memory** %MEMORY
  %loadMem_40b311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8311 = getelementptr inbounds %struct.GPR, %struct.GPR* %8310, i32 0, i32 33
  %8312 = getelementptr inbounds %struct.Reg, %struct.Reg* %8311, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %8312 to i64*
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 5
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %RCX.i1374 = bitcast %union.anon* %8315 to i64*
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 15
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %RBP.i1375 = bitcast %union.anon* %8318 to i64*
  %8319 = load i64, i64* %RBP.i1375
  %8320 = sub i64 %8319, 168
  %8321 = load i64, i64* %PC.i1373
  %8322 = add i64 %8321, 6
  store i64 %8322, i64* %PC.i1373
  %8323 = inttoptr i64 %8320 to i32*
  %8324 = load i32, i32* %8323
  %8325 = zext i32 %8324 to i64
  store i64 %8325, i64* %RCX.i1374, align 8
  store %struct.Memory* %loadMem_40b311, %struct.Memory** %MEMORY
  %loadMem_40b317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8327 = getelementptr inbounds %struct.GPR, %struct.GPR* %8326, i32 0, i32 33
  %8328 = getelementptr inbounds %struct.Reg, %struct.Reg* %8327, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %8328 to i64*
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 1
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %EAX.i1371 = bitcast %union.anon* %8331 to i32*
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8333 = getelementptr inbounds %struct.GPR, %struct.GPR* %8332, i32 0, i32 5
  %8334 = getelementptr inbounds %struct.Reg, %struct.Reg* %8333, i32 0, i32 0
  %RCX.i1372 = bitcast %union.anon* %8334 to i64*
  %8335 = load i64, i64* %RCX.i1372
  %8336 = load i32, i32* %EAX.i1371
  %8337 = zext i32 %8336 to i64
  %8338 = load i64, i64* %PC.i1370
  %8339 = add i64 %8338, 2
  store i64 %8339, i64* %PC.i1370
  %8340 = trunc i64 %8335 to i32
  %8341 = add i32 %8336, %8340
  %8342 = zext i32 %8341 to i64
  store i64 %8342, i64* %RCX.i1372, align 8
  %8343 = icmp ult i32 %8341, %8340
  %8344 = icmp ult i32 %8341, %8336
  %8345 = or i1 %8343, %8344
  %8346 = zext i1 %8345 to i8
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8346, i8* %8347, align 1
  %8348 = and i32 %8341, 255
  %8349 = call i32 @llvm.ctpop.i32(i32 %8348)
  %8350 = trunc i32 %8349 to i8
  %8351 = and i8 %8350, 1
  %8352 = xor i8 %8351, 1
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8352, i8* %8353, align 1
  %8354 = xor i64 %8337, %8335
  %8355 = trunc i64 %8354 to i32
  %8356 = xor i32 %8355, %8341
  %8357 = lshr i32 %8356, 4
  %8358 = trunc i32 %8357 to i8
  %8359 = and i8 %8358, 1
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8359, i8* %8360, align 1
  %8361 = icmp eq i32 %8341, 0
  %8362 = zext i1 %8361 to i8
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8362, i8* %8363, align 1
  %8364 = lshr i32 %8341, 31
  %8365 = trunc i32 %8364 to i8
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8365, i8* %8366, align 1
  %8367 = lshr i32 %8340, 31
  %8368 = lshr i32 %8336, 31
  %8369 = xor i32 %8364, %8367
  %8370 = xor i32 %8364, %8368
  %8371 = add i32 %8369, %8370
  %8372 = icmp eq i32 %8371, 2
  %8373 = zext i1 %8372 to i8
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8373, i8* %8374, align 1
  store %struct.Memory* %loadMem_40b317, %struct.Memory** %MEMORY
  %loadMem_40b319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8376 = getelementptr inbounds %struct.GPR, %struct.GPR* %8375, i32 0, i32 33
  %8377 = getelementptr inbounds %struct.Reg, %struct.Reg* %8376, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %8377 to i64*
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8379 = getelementptr inbounds %struct.GPR, %struct.GPR* %8378, i32 0, i32 5
  %8380 = getelementptr inbounds %struct.Reg, %struct.Reg* %8379, i32 0, i32 0
  %ECX.i1368 = bitcast %union.anon* %8380 to i32*
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8382 = getelementptr inbounds %struct.GPR, %struct.GPR* %8381, i32 0, i32 17
  %8383 = getelementptr inbounds %struct.Reg, %struct.Reg* %8382, i32 0, i32 0
  %R8.i1369 = bitcast %union.anon* %8383 to i64*
  %8384 = load i32, i32* %ECX.i1368
  %8385 = zext i32 %8384 to i64
  %8386 = load i64, i64* %PC.i1367
  %8387 = add i64 %8386, 3
  store i64 %8387, i64* %PC.i1367
  %8388 = shl i64 %8385, 32
  %8389 = ashr exact i64 %8388, 32
  store i64 %8389, i64* %R8.i1369, align 8
  store %struct.Memory* %loadMem_40b319, %struct.Memory** %MEMORY
  %loadMem_40b31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 33
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %8392 to i64*
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8394 = getelementptr inbounds %struct.GPR, %struct.GPR* %8393, i32 0, i32 1
  %8395 = getelementptr inbounds %struct.Reg, %struct.Reg* %8394, i32 0, i32 0
  %RAX.i1365 = bitcast %union.anon* %8395 to i64*
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8397 = getelementptr inbounds %struct.GPR, %struct.GPR* %8396, i32 0, i32 15
  %8398 = getelementptr inbounds %struct.Reg, %struct.Reg* %8397, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %8398 to i64*
  %8399 = load i64, i64* %RBP.i1366
  %8400 = sub i64 %8399, 152
  %8401 = load i64, i64* %PC.i1364
  %8402 = add i64 %8401, 6
  store i64 %8402, i64* %PC.i1364
  %8403 = inttoptr i64 %8400 to i32*
  %8404 = load i32, i32* %8403
  %8405 = zext i32 %8404 to i64
  store i64 %8405, i64* %RAX.i1365, align 8
  store %struct.Memory* %loadMem_40b31c, %struct.Memory** %MEMORY
  %loadMem_40b322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 33
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %8408 to i64*
  %8409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8410 = getelementptr inbounds %struct.GPR, %struct.GPR* %8409, i32 0, i32 1
  %8411 = getelementptr inbounds %struct.Reg, %struct.Reg* %8410, i32 0, i32 0
  %EAX.i1362 = bitcast %union.anon* %8411 to i32*
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 17
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %R8.i1363 = bitcast %union.anon* %8414 to i64*
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 19
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %R9.i = bitcast %union.anon* %8417 to i64*
  %8418 = load i64, i64* %R9.i
  %8419 = load i64, i64* %R8.i1363
  %8420 = mul i64 %8419, 4
  %8421 = add i64 %8420, %8418
  %8422 = load i32, i32* %EAX.i1362
  %8423 = zext i32 %8422 to i64
  %8424 = load i64, i64* %PC.i1361
  %8425 = add i64 %8424, 4
  store i64 %8425, i64* %PC.i1361
  %8426 = inttoptr i64 %8421 to i32*
  store i32 %8422, i32* %8426
  store %struct.Memory* %loadMem_40b322, %struct.Memory** %MEMORY
  %loadMem_40b326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 33
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %8429 to i64*
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 15
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %RBP.i1360 = bitcast %union.anon* %8432 to i64*
  %8433 = load i64, i64* %RBP.i1360
  %8434 = sub i64 %8433, 140
  %8435 = load i64, i64* %PC.i1359
  %8436 = add i64 %8435, 7
  store i64 %8436, i64* %PC.i1359
  %8437 = inttoptr i64 %8434 to i32*
  %8438 = load i32, i32* %8437
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8439, align 1
  %8440 = and i32 %8438, 255
  %8441 = call i32 @llvm.ctpop.i32(i32 %8440)
  %8442 = trunc i32 %8441 to i8
  %8443 = and i8 %8442, 1
  %8444 = xor i8 %8443, 1
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8444, i8* %8445, align 1
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8446, align 1
  %8447 = icmp eq i32 %8438, 0
  %8448 = zext i1 %8447 to i8
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8448, i8* %8449, align 1
  %8450 = lshr i32 %8438, 31
  %8451 = trunc i32 %8450 to i8
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8451, i8* %8452, align 1
  %8453 = lshr i32 %8438, 31
  %8454 = xor i32 %8450, %8453
  %8455 = add i32 %8454, %8453
  %8456 = icmp eq i32 %8455, 2
  %8457 = zext i1 %8456 to i8
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8457, i8* %8458, align 1
  store %struct.Memory* %loadMem_40b326, %struct.Memory** %MEMORY
  %loadMem_40b32d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 33
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %PC.i1358 = bitcast %union.anon* %8461 to i64*
  %8462 = load i64, i64* %PC.i1358
  %8463 = add i64 %8462, 47
  %8464 = load i64, i64* %PC.i1358
  %8465 = add i64 %8464, 6
  %8466 = load i64, i64* %PC.i1358
  %8467 = add i64 %8466, 6
  store i64 %8467, i64* %PC.i1358
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8469 = load i8, i8* %8468, align 1
  store i8 %8469, i8* %BRANCH_TAKEN, align 1
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8471 = icmp ne i8 %8469, 0
  %8472 = select i1 %8471, i64 %8463, i64 %8465
  store i64 %8472, i64* %8470, align 8
  store %struct.Memory* %loadMem_40b32d, %struct.Memory** %MEMORY
  %loadBr_40b32d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b32d = icmp eq i8 %loadBr_40b32d, 1
  br i1 %cmpBr_40b32d, label %block_.L_40b35c, label %block_40b333

block_40b333:                                     ; preds = %routine_idivl__ecx.exit
  %loadMem_40b333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8474 = getelementptr inbounds %struct.GPR, %struct.GPR* %8473, i32 0, i32 33
  %8475 = getelementptr inbounds %struct.Reg, %struct.Reg* %8474, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %8475 to i64*
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8477 = getelementptr inbounds %struct.GPR, %struct.GPR* %8476, i32 0, i32 11
  %8478 = getelementptr inbounds %struct.Reg, %struct.Reg* %8477, i32 0, i32 0
  %RDI.i1356 = bitcast %union.anon* %8478 to i64*
  %8479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8480 = getelementptr inbounds %struct.GPR, %struct.GPR* %8479, i32 0, i32 15
  %8481 = getelementptr inbounds %struct.Reg, %struct.Reg* %8480, i32 0, i32 0
  %RBP.i1357 = bitcast %union.anon* %8481 to i64*
  %8482 = load i64, i64* %RBP.i1357
  %8483 = sub i64 %8482, 72
  %8484 = load i64, i64* %PC.i1355
  %8485 = add i64 %8484, 3
  store i64 %8485, i64* %PC.i1355
  %8486 = inttoptr i64 %8483 to i32*
  %8487 = load i32, i32* %8486
  %8488 = zext i32 %8487 to i64
  store i64 %8488, i64* %RDI.i1356, align 8
  store %struct.Memory* %loadMem_40b333, %struct.Memory** %MEMORY
  %loadMem_40b336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 33
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %8491 to i64*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 1
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %RAX.i1354 = bitcast %union.anon* %8494 to i64*
  %8495 = load i64, i64* %PC.i1353
  %8496 = add i64 %8495, 8
  store i64 %8496, i64* %PC.i1353
  %8497 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8497, i64* %RAX.i1354, align 8
  store %struct.Memory* %loadMem_40b336, %struct.Memory** %MEMORY
  %loadMem_40b33e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 33
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %8500 to i64*
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 1
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %RAX.i1351 = bitcast %union.anon* %8503 to i64*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 9
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %RSI.i1352 = bitcast %union.anon* %8506 to i64*
  %8507 = load i64, i64* %RAX.i1351
  %8508 = add i64 %8507, 13112
  %8509 = load i64, i64* %PC.i1350
  %8510 = add i64 %8509, 6
  store i64 %8510, i64* %PC.i1350
  %8511 = inttoptr i64 %8508 to i32*
  %8512 = load i32, i32* %8511
  %8513 = zext i32 %8512 to i64
  store i64 %8513, i64* %RSI.i1352, align 8
  store %struct.Memory* %loadMem_40b33e, %struct.Memory** %MEMORY
  %loadMem1_40b344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8515 = getelementptr inbounds %struct.GPR, %struct.GPR* %8514, i32 0, i32 33
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %PC.i1349 = bitcast %union.anon* %8516 to i64*
  %8517 = load i64, i64* %PC.i1349
  %8518 = add i64 %8517, 433676
  %8519 = load i64, i64* %PC.i1349
  %8520 = add i64 %8519, 5
  %8521 = load i64, i64* %PC.i1349
  %8522 = add i64 %8521, 5
  store i64 %8522, i64* %PC.i1349
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8524 = load i64, i64* %8523, align 8
  %8525 = add i64 %8524, -8
  %8526 = inttoptr i64 %8525 to i64*
  store i64 %8520, i64* %8526
  store i64 %8525, i64* %8523, align 8
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8518, i64* %8527, align 8
  store %struct.Memory* %loadMem1_40b344, %struct.Memory** %MEMORY
  %loadMem2_40b344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b344 = load i64, i64* %3
  %call2_40b344 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b344, %struct.Memory* %loadMem2_40b344)
  store %struct.Memory* %call2_40b344, %struct.Memory** %MEMORY
  %loadMem_40b349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 5
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %RCX.i1348 = bitcast %union.anon* %8533 to i64*
  %8534 = load i64, i64* %PC.i1347
  %8535 = add i64 %8534, 8
  store i64 %8535, i64* %PC.i1347
  %8536 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8536, i64* %RCX.i1348, align 8
  store %struct.Memory* %loadMem_40b349, %struct.Memory** %MEMORY
  %loadMem_40b351 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 33
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %8539 to i64*
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 1
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %EAX.i1345 = bitcast %union.anon* %8542 to i32*
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 5
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %RCX.i1346 = bitcast %union.anon* %8545 to i64*
  %8546 = load i64, i64* %RCX.i1346
  %8547 = add i64 %8546, 13112
  %8548 = load i32, i32* %EAX.i1345
  %8549 = zext i32 %8548 to i64
  %8550 = load i64, i64* %PC.i1344
  %8551 = add i64 %8550, 6
  store i64 %8551, i64* %PC.i1344
  %8552 = inttoptr i64 %8547 to i32*
  store i32 %8548, i32* %8552
  store %struct.Memory* %loadMem_40b351, %struct.Memory** %MEMORY
  %loadMem_40b357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8554 = getelementptr inbounds %struct.GPR, %struct.GPR* %8553, i32 0, i32 33
  %8555 = getelementptr inbounds %struct.Reg, %struct.Reg* %8554, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %8555 to i64*
  %8556 = load i64, i64* %PC.i1343
  %8557 = add i64 %8556, 516
  %8558 = load i64, i64* %PC.i1343
  %8559 = add i64 %8558, 5
  store i64 %8559, i64* %PC.i1343
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8557, i64* %8560, align 8
  store %struct.Memory* %loadMem_40b357, %struct.Memory** %MEMORY
  br label %block_.L_40b55b

block_.L_40b35c:                                  ; preds = %routine_idivl__ecx.exit
  %loadMem_40b35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8562 = getelementptr inbounds %struct.GPR, %struct.GPR* %8561, i32 0, i32 33
  %8563 = getelementptr inbounds %struct.Reg, %struct.Reg* %8562, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %8563 to i64*
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8565 = getelementptr inbounds %struct.GPR, %struct.GPR* %8564, i32 0, i32 15
  %8566 = getelementptr inbounds %struct.Reg, %struct.Reg* %8565, i32 0, i32 0
  %RBP.i1342 = bitcast %union.anon* %8566 to i64*
  %8567 = load i64, i64* %RBP.i1342
  %8568 = sub i64 %8567, 104
  %8569 = load i64, i64* %PC.i1341
  %8570 = add i64 %8569, 4
  store i64 %8570, i64* %PC.i1341
  %8571 = inttoptr i64 %8568 to i32*
  %8572 = load i32, i32* %8571
  %8573 = sub i32 %8572, 4
  %8574 = icmp ult i32 %8572, 4
  %8575 = zext i1 %8574 to i8
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8575, i8* %8576, align 1
  %8577 = and i32 %8573, 255
  %8578 = call i32 @llvm.ctpop.i32(i32 %8577)
  %8579 = trunc i32 %8578 to i8
  %8580 = and i8 %8579, 1
  %8581 = xor i8 %8580, 1
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8581, i8* %8582, align 1
  %8583 = xor i32 %8572, 4
  %8584 = xor i32 %8583, %8573
  %8585 = lshr i32 %8584, 4
  %8586 = trunc i32 %8585 to i8
  %8587 = and i8 %8586, 1
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8587, i8* %8588, align 1
  %8589 = icmp eq i32 %8573, 0
  %8590 = zext i1 %8589 to i8
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8590, i8* %8591, align 1
  %8592 = lshr i32 %8573, 31
  %8593 = trunc i32 %8592 to i8
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8593, i8* %8594, align 1
  %8595 = lshr i32 %8572, 31
  %8596 = xor i32 %8592, %8595
  %8597 = add i32 %8596, %8595
  %8598 = icmp eq i32 %8597, 2
  %8599 = zext i1 %8598 to i8
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8599, i8* %8600, align 1
  store %struct.Memory* %loadMem_40b35c, %struct.Memory** %MEMORY
  %loadMem_40b360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8602 = getelementptr inbounds %struct.GPR, %struct.GPR* %8601, i32 0, i32 33
  %8603 = getelementptr inbounds %struct.Reg, %struct.Reg* %8602, i32 0, i32 0
  %PC.i1340 = bitcast %union.anon* %8603 to i64*
  %8604 = load i64, i64* %PC.i1340
  %8605 = add i64 %8604, 262
  %8606 = load i64, i64* %PC.i1340
  %8607 = add i64 %8606, 6
  %8608 = load i64, i64* %PC.i1340
  %8609 = add i64 %8608, 6
  store i64 %8609, i64* %PC.i1340
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8611 = load i8, i8* %8610, align 1
  %8612 = icmp ne i8 %8611, 0
  %8613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8614 = load i8, i8* %8613, align 1
  %8615 = icmp ne i8 %8614, 0
  %8616 = xor i1 %8612, %8615
  %8617 = xor i1 %8616, true
  %8618 = zext i1 %8617 to i8
  store i8 %8618, i8* %BRANCH_TAKEN, align 1
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8620 = select i1 %8616, i64 %8607, i64 %8605
  store i64 %8620, i64* %8619, align 8
  store %struct.Memory* %loadMem_40b360, %struct.Memory** %MEMORY
  %loadBr_40b360 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b360 = icmp eq i8 %loadBr_40b360, 1
  br i1 %cmpBr_40b360, label %block_.L_40b466, label %block_40b366

block_40b366:                                     ; preds = %block_.L_40b35c
  %loadMem_40b366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 33
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %8623 to i64*
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 15
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %RBP.i1339 = bitcast %union.anon* %8626 to i64*
  %8627 = load i64, i64* %RBP.i1339
  %8628 = sub i64 %8627, 100
  %8629 = load i64, i64* %PC.i1338
  %8630 = add i64 %8629, 4
  store i64 %8630, i64* %PC.i1338
  %8631 = inttoptr i64 %8628 to i32*
  %8632 = load i32, i32* %8631
  %8633 = sub i32 %8632, 1
  %8634 = icmp ult i32 %8632, 1
  %8635 = zext i1 %8634 to i8
  %8636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8635, i8* %8636, align 1
  %8637 = and i32 %8633, 255
  %8638 = call i32 @llvm.ctpop.i32(i32 %8637)
  %8639 = trunc i32 %8638 to i8
  %8640 = and i8 %8639, 1
  %8641 = xor i8 %8640, 1
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8641, i8* %8642, align 1
  %8643 = xor i32 %8632, 1
  %8644 = xor i32 %8643, %8633
  %8645 = lshr i32 %8644, 4
  %8646 = trunc i32 %8645 to i8
  %8647 = and i8 %8646, 1
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8647, i8* %8648, align 1
  %8649 = icmp eq i32 %8633, 0
  %8650 = zext i1 %8649 to i8
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8650, i8* %8651, align 1
  %8652 = lshr i32 %8633, 31
  %8653 = trunc i32 %8652 to i8
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8653, i8* %8654, align 1
  %8655 = lshr i32 %8632, 31
  %8656 = xor i32 %8652, %8655
  %8657 = add i32 %8656, %8655
  %8658 = icmp eq i32 %8657, 2
  %8659 = zext i1 %8658 to i8
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8659, i8* %8660, align 1
  store %struct.Memory* %loadMem_40b366, %struct.Memory** %MEMORY
  %loadMem_40b36a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8662 = getelementptr inbounds %struct.GPR, %struct.GPR* %8661, i32 0, i32 33
  %8663 = getelementptr inbounds %struct.Reg, %struct.Reg* %8662, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %8663 to i64*
  %8664 = load i64, i64* %PC.i1337
  %8665 = add i64 %8664, 129
  %8666 = load i64, i64* %PC.i1337
  %8667 = add i64 %8666, 6
  %8668 = load i64, i64* %PC.i1337
  %8669 = add i64 %8668, 6
  store i64 %8669, i64* %PC.i1337
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8671 = load i8, i8* %8670, align 1
  %8672 = icmp eq i8 %8671, 0
  %8673 = zext i1 %8672 to i8
  store i8 %8673, i8* %BRANCH_TAKEN, align 1
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8675 = select i1 %8672, i64 %8665, i64 %8667
  store i64 %8675, i64* %8674, align 8
  store %struct.Memory* %loadMem_40b36a, %struct.Memory** %MEMORY
  %loadBr_40b36a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b36a = icmp eq i8 %loadBr_40b36a, 1
  br i1 %cmpBr_40b36a, label %block_.L_40b3eb, label %block_40b370

block_40b370:                                     ; preds = %block_40b366
  %loadMem_40b370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8677 = getelementptr inbounds %struct.GPR, %struct.GPR* %8676, i32 0, i32 33
  %8678 = getelementptr inbounds %struct.Reg, %struct.Reg* %8677, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %8678 to i64*
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8680 = getelementptr inbounds %struct.GPR, %struct.GPR* %8679, i32 0, i32 1
  %8681 = getelementptr inbounds %struct.Reg, %struct.Reg* %8680, i32 0, i32 0
  %RAX.i1336 = bitcast %union.anon* %8681 to i64*
  %8682 = load i64, i64* %PC.i1335
  %8683 = add i64 %8682, 5
  store i64 %8683, i64* %PC.i1335
  store i64 4, i64* %RAX.i1336, align 8
  store %struct.Memory* %loadMem_40b370, %struct.Memory** %MEMORY
  %loadMem_40b375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8685 = getelementptr inbounds %struct.GPR, %struct.GPR* %8684, i32 0, i32 33
  %8686 = getelementptr inbounds %struct.Reg, %struct.Reg* %8685, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %8686 to i64*
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8688 = getelementptr inbounds %struct.GPR, %struct.GPR* %8687, i32 0, i32 5
  %8689 = getelementptr inbounds %struct.Reg, %struct.Reg* %8688, i32 0, i32 0
  %RCX.i1334 = bitcast %union.anon* %8689 to i64*
  %8690 = load i64, i64* %PC.i1333
  %8691 = add i64 %8690, 5
  store i64 %8691, i64* %PC.i1333
  store i64 1, i64* %RCX.i1334, align 8
  store %struct.Memory* %loadMem_40b375, %struct.Memory** %MEMORY
  %loadMem_40b37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 33
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %8694 to i64*
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 7
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %RDX.i1332 = bitcast %union.anon* %8697 to i64*
  %8698 = load i64, i64* %PC.i1331
  %8699 = add i64 %8698, 5
  store i64 %8699, i64* %PC.i1331
  store i64 3, i64* %RDX.i1332, align 8
  store %struct.Memory* %loadMem_40b37a, %struct.Memory** %MEMORY
  %loadMem_40b37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 33
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %8702 to i64*
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8704 = getelementptr inbounds %struct.GPR, %struct.GPR* %8703, i32 0, i32 9
  %8705 = getelementptr inbounds %struct.Reg, %struct.Reg* %8704, i32 0, i32 0
  %RSI.i1330 = bitcast %union.anon* %8705 to i64*
  %8706 = load i64, i64* %PC.i1329
  %8707 = add i64 %8706, 10
  store i64 %8707, i64* %PC.i1329
  store i64 ptrtoint (%G__0x70d1b0_type* @G__0x70d1b0 to i64), i64* %RSI.i1330, align 8
  store %struct.Memory* %loadMem_40b37f, %struct.Memory** %MEMORY
  %loadMem_40b389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 33
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %8710 to i64*
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 11
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %RDI.i1327 = bitcast %union.anon* %8713 to i64*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 15
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %RBP.i1328 = bitcast %union.anon* %8716 to i64*
  %8717 = load i64, i64* %RBP.i1328
  %8718 = sub i64 %8717, 72
  %8719 = load i64, i64* %PC.i1326
  %8720 = add i64 %8719, 3
  store i64 %8720, i64* %PC.i1326
  %8721 = inttoptr i64 %8718 to i32*
  %8722 = load i32, i32* %8721
  %8723 = zext i32 %8722 to i64
  store i64 %8723, i64* %RDI.i1327, align 8
  store %struct.Memory* %loadMem_40b389, %struct.Memory** %MEMORY
  %loadMem_40b38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 33
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %8726 to i64*
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8728 = getelementptr inbounds %struct.GPR, %struct.GPR* %8727, i32 0, i32 15
  %8729 = getelementptr inbounds %struct.Reg, %struct.Reg* %8728, i32 0, i32 0
  %RBP.i1324 = bitcast %union.anon* %8729 to i64*
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8731 = getelementptr inbounds %struct.GPR, %struct.GPR* %8730, i32 0, i32 17
  %8732 = getelementptr inbounds %struct.Reg, %struct.Reg* %8731, i32 0, i32 0
  %R8.i1325 = bitcast %union.anon* %8732 to i64*
  %8733 = load i64, i64* %RBP.i1324
  %8734 = sub i64 %8733, 4
  %8735 = load i64, i64* %PC.i1323
  %8736 = add i64 %8735, 4
  store i64 %8736, i64* %PC.i1323
  %8737 = inttoptr i64 %8734 to i32*
  %8738 = load i32, i32* %8737
  %8739 = sext i32 %8738 to i64
  store i64 %8739, i64* %R8.i1325, align 8
  store %struct.Memory* %loadMem_40b38c, %struct.Memory** %MEMORY
  %loadMem_40b390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8741 = getelementptr inbounds %struct.GPR, %struct.GPR* %8740, i32 0, i32 33
  %8742 = getelementptr inbounds %struct.Reg, %struct.Reg* %8741, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %8742 to i64*
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8744 = getelementptr inbounds %struct.GPR, %struct.GPR* %8743, i32 0, i32 17
  %8745 = getelementptr inbounds %struct.Reg, %struct.Reg* %8744, i32 0, i32 0
  %R8.i1322 = bitcast %union.anon* %8745 to i64*
  %8746 = load i64, i64* %R8.i1322
  %8747 = load i64, i64* %PC.i1321
  %8748 = add i64 %8747, 7
  store i64 %8748, i64* %PC.i1321
  %8749 = sext i64 %8746 to i128
  %8750 = and i128 %8749, -18446744073709551616
  %8751 = zext i64 %8746 to i128
  %8752 = or i128 %8750, %8751
  %8753 = mul i128 384, %8752
  %8754 = trunc i128 %8753 to i64
  store i64 %8754, i64* %R8.i1322, align 8
  %8755 = sext i64 %8754 to i128
  %8756 = icmp ne i128 %8755, %8753
  %8757 = zext i1 %8756 to i8
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8757, i8* %8758, align 1
  %8759 = trunc i128 %8753 to i32
  %8760 = and i32 %8759, 255
  %8761 = call i32 @llvm.ctpop.i32(i32 %8760)
  %8762 = trunc i32 %8761 to i8
  %8763 = and i8 %8762, 1
  %8764 = xor i8 %8763, 1
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8764, i8* %8765, align 1
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8766, align 1
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8767, align 1
  %8768 = lshr i64 %8754, 63
  %8769 = trunc i64 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8769, i8* %8770, align 1
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8757, i8* %8771, align 1
  store %struct.Memory* %loadMem_40b390, %struct.Memory** %MEMORY
  %loadMem_40b397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8773 = getelementptr inbounds %struct.GPR, %struct.GPR* %8772, i32 0, i32 33
  %8774 = getelementptr inbounds %struct.Reg, %struct.Reg* %8773, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %8774 to i64*
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 9
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %RSI.i1319 = bitcast %union.anon* %8777 to i64*
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 17
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %R8.i1320 = bitcast %union.anon* %8780 to i64*
  %8781 = load i64, i64* %RSI.i1319
  %8782 = load i64, i64* %R8.i1320
  %8783 = load i64, i64* %PC.i1318
  %8784 = add i64 %8783, 3
  store i64 %8784, i64* %PC.i1318
  %8785 = add i64 %8782, %8781
  store i64 %8785, i64* %RSI.i1319, align 8
  %8786 = icmp ult i64 %8785, %8781
  %8787 = icmp ult i64 %8785, %8782
  %8788 = or i1 %8786, %8787
  %8789 = zext i1 %8788 to i8
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8789, i8* %8790, align 1
  %8791 = trunc i64 %8785 to i32
  %8792 = and i32 %8791, 255
  %8793 = call i32 @llvm.ctpop.i32(i32 %8792)
  %8794 = trunc i32 %8793 to i8
  %8795 = and i8 %8794, 1
  %8796 = xor i8 %8795, 1
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8796, i8* %8797, align 1
  %8798 = xor i64 %8782, %8781
  %8799 = xor i64 %8798, %8785
  %8800 = lshr i64 %8799, 4
  %8801 = trunc i64 %8800 to i8
  %8802 = and i8 %8801, 1
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8802, i8* %8803, align 1
  %8804 = icmp eq i64 %8785, 0
  %8805 = zext i1 %8804 to i8
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8805, i8* %8806, align 1
  %8807 = lshr i64 %8785, 63
  %8808 = trunc i64 %8807 to i8
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8808, i8* %8809, align 1
  %8810 = lshr i64 %8781, 63
  %8811 = lshr i64 %8782, 63
  %8812 = xor i64 %8807, %8810
  %8813 = xor i64 %8807, %8811
  %8814 = add i64 %8812, %8813
  %8815 = icmp eq i64 %8814, 2
  %8816 = zext i1 %8815 to i8
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8816, i8* %8817, align 1
  store %struct.Memory* %loadMem_40b397, %struct.Memory** %MEMORY
  %loadMem_40b39a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8819 = getelementptr inbounds %struct.GPR, %struct.GPR* %8818, i32 0, i32 33
  %8820 = getelementptr inbounds %struct.Reg, %struct.Reg* %8819, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %8820 to i64*
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8822 = getelementptr inbounds %struct.GPR, %struct.GPR* %8821, i32 0, i32 15
  %8823 = getelementptr inbounds %struct.Reg, %struct.Reg* %8822, i32 0, i32 0
  %RBP.i1316 = bitcast %union.anon* %8823 to i64*
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8825 = getelementptr inbounds %struct.GPR, %struct.GPR* %8824, i32 0, i32 17
  %8826 = getelementptr inbounds %struct.Reg, %struct.Reg* %8825, i32 0, i32 0
  %R8.i1317 = bitcast %union.anon* %8826 to i64*
  %8827 = load i64, i64* %RBP.i1316
  %8828 = sub i64 %8827, 108
  %8829 = load i64, i64* %PC.i1315
  %8830 = add i64 %8829, 4
  store i64 %8830, i64* %PC.i1315
  %8831 = inttoptr i64 %8828 to i32*
  %8832 = load i32, i32* %8831
  %8833 = sext i32 %8832 to i64
  store i64 %8833, i64* %R8.i1317, align 8
  store %struct.Memory* %loadMem_40b39a, %struct.Memory** %MEMORY
  %loadMem_40b39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 33
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %8836 to i64*
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8838 = getelementptr inbounds %struct.GPR, %struct.GPR* %8837, i32 0, i32 17
  %8839 = getelementptr inbounds %struct.Reg, %struct.Reg* %8838, i32 0, i32 0
  %R8.i1314 = bitcast %union.anon* %8839 to i64*
  %8840 = load i64, i64* %R8.i1314
  %8841 = load i64, i64* %PC.i1313
  %8842 = add i64 %8841, 4
  store i64 %8842, i64* %PC.i1313
  %8843 = shl i64 %8840, 5
  %8844 = icmp slt i64 %8843, 0
  %8845 = shl i64 %8843, 1
  store i64 %8845, i64* %R8.i1314, align 8
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8847 = zext i1 %8844 to i8
  store i8 %8847, i8* %8846, align 1
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8849 = trunc i64 %8845 to i32
  %8850 = and i32 %8849, 254
  %8851 = call i32 @llvm.ctpop.i32(i32 %8850)
  %8852 = trunc i32 %8851 to i8
  %8853 = and i8 %8852, 1
  %8854 = xor i8 %8853, 1
  store i8 %8854, i8* %8848, align 1
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8855, align 1
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8857 = icmp eq i64 %8845, 0
  %8858 = zext i1 %8857 to i8
  store i8 %8858, i8* %8856, align 1
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8860 = lshr i64 %8845, 63
  %8861 = trunc i64 %8860 to i8
  store i8 %8861, i8* %8859, align 1
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8862, align 1
  store %struct.Memory* %loadMem_40b39e, %struct.Memory** %MEMORY
  %loadMem_40b3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8864 = getelementptr inbounds %struct.GPR, %struct.GPR* %8863, i32 0, i32 33
  %8865 = getelementptr inbounds %struct.Reg, %struct.Reg* %8864, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %8865 to i64*
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8867 = getelementptr inbounds %struct.GPR, %struct.GPR* %8866, i32 0, i32 9
  %8868 = getelementptr inbounds %struct.Reg, %struct.Reg* %8867, i32 0, i32 0
  %RSI.i1311 = bitcast %union.anon* %8868 to i64*
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8870 = getelementptr inbounds %struct.GPR, %struct.GPR* %8869, i32 0, i32 17
  %8871 = getelementptr inbounds %struct.Reg, %struct.Reg* %8870, i32 0, i32 0
  %R8.i1312 = bitcast %union.anon* %8871 to i64*
  %8872 = load i64, i64* %RSI.i1311
  %8873 = load i64, i64* %R8.i1312
  %8874 = load i64, i64* %PC.i1310
  %8875 = add i64 %8874, 3
  store i64 %8875, i64* %PC.i1310
  %8876 = add i64 %8873, %8872
  store i64 %8876, i64* %RSI.i1311, align 8
  %8877 = icmp ult i64 %8876, %8872
  %8878 = icmp ult i64 %8876, %8873
  %8879 = or i1 %8877, %8878
  %8880 = zext i1 %8879 to i8
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8880, i8* %8881, align 1
  %8882 = trunc i64 %8876 to i32
  %8883 = and i32 %8882, 255
  %8884 = call i32 @llvm.ctpop.i32(i32 %8883)
  %8885 = trunc i32 %8884 to i8
  %8886 = and i8 %8885, 1
  %8887 = xor i8 %8886, 1
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8887, i8* %8888, align 1
  %8889 = xor i64 %8873, %8872
  %8890 = xor i64 %8889, %8876
  %8891 = lshr i64 %8890, 4
  %8892 = trunc i64 %8891 to i8
  %8893 = and i8 %8892, 1
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8893, i8* %8894, align 1
  %8895 = icmp eq i64 %8876, 0
  %8896 = zext i1 %8895 to i8
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8896, i8* %8897, align 1
  %8898 = lshr i64 %8876, 63
  %8899 = trunc i64 %8898 to i8
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8899, i8* %8900, align 1
  %8901 = lshr i64 %8872, 63
  %8902 = lshr i64 %8873, 63
  %8903 = xor i64 %8898, %8901
  %8904 = xor i64 %8898, %8902
  %8905 = add i64 %8903, %8904
  %8906 = icmp eq i64 %8905, 2
  %8907 = zext i1 %8906 to i8
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8907, i8* %8908, align 1
  store %struct.Memory* %loadMem_40b3a2, %struct.Memory** %MEMORY
  %loadMem_40b3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8910 = getelementptr inbounds %struct.GPR, %struct.GPR* %8909, i32 0, i32 33
  %8911 = getelementptr inbounds %struct.Reg, %struct.Reg* %8910, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %8911 to i64*
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8913 = getelementptr inbounds %struct.GPR, %struct.GPR* %8912, i32 0, i32 9
  %8914 = getelementptr inbounds %struct.Reg, %struct.Reg* %8913, i32 0, i32 0
  %RSI.i1308 = bitcast %union.anon* %8914 to i64*
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8916 = getelementptr inbounds %struct.GPR, %struct.GPR* %8915, i32 0, i32 11
  %8917 = getelementptr inbounds %struct.Reg, %struct.Reg* %8916, i32 0, i32 0
  %RDI.i1309 = bitcast %union.anon* %8917 to i64*
  %8918 = load i64, i64* %RDI.i1309
  %8919 = load i64, i64* %RSI.i1308
  %8920 = load i64, i64* %PC.i1307
  %8921 = add i64 %8920, 3
  store i64 %8921, i64* %PC.i1307
  %8922 = inttoptr i64 %8919 to i32*
  %8923 = load i32, i32* %8922
  %8924 = shl i64 %8918, 32
  %8925 = ashr exact i64 %8924, 32
  %8926 = sext i32 %8923 to i64
  %8927 = mul i64 %8926, %8925
  %8928 = trunc i64 %8927 to i32
  %8929 = and i64 %8927, 4294967295
  store i64 %8929, i64* %RDI.i1309, align 8
  %8930 = shl i64 %8927, 32
  %8931 = ashr exact i64 %8930, 32
  %8932 = icmp ne i64 %8931, %8927
  %8933 = zext i1 %8932 to i8
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8933, i8* %8934, align 1
  %8935 = and i32 %8928, 255
  %8936 = call i32 @llvm.ctpop.i32(i32 %8935)
  %8937 = trunc i32 %8936 to i8
  %8938 = and i8 %8937, 1
  %8939 = xor i8 %8938, 1
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8939, i8* %8940, align 1
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8941, align 1
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8942, align 1
  %8943 = lshr i32 %8928, 31
  %8944 = trunc i32 %8943 to i8
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8944, i8* %8945, align 1
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8933, i8* %8946, align 1
  store %struct.Memory* %loadMem_40b3a5, %struct.Memory** %MEMORY
  %loadMem_40b3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 33
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %8949 to i64*
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8951 = getelementptr inbounds %struct.GPR, %struct.GPR* %8950, i32 0, i32 7
  %8952 = getelementptr inbounds %struct.Reg, %struct.Reg* %8951, i32 0, i32 0
  %RDX.i1305 = bitcast %union.anon* %8952 to i64*
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8954 = getelementptr inbounds %struct.GPR, %struct.GPR* %8953, i32 0, i32 15
  %8955 = getelementptr inbounds %struct.Reg, %struct.Reg* %8954, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %8955 to i64*
  %8956 = load i64, i64* %RDX.i1305
  %8957 = load i64, i64* %RBP.i1306
  %8958 = sub i64 %8957, 104
  %8959 = load i64, i64* %PC.i1304
  %8960 = add i64 %8959, 3
  store i64 %8960, i64* %PC.i1304
  %8961 = trunc i64 %8956 to i32
  %8962 = inttoptr i64 %8958 to i32*
  %8963 = load i32, i32* %8962
  %8964 = sub i32 %8961, %8963
  %8965 = zext i32 %8964 to i64
  store i64 %8965, i64* %RDX.i1305, align 8
  %8966 = icmp ult i32 %8961, %8963
  %8967 = zext i1 %8966 to i8
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8967, i8* %8968, align 1
  %8969 = and i32 %8964, 255
  %8970 = call i32 @llvm.ctpop.i32(i32 %8969)
  %8971 = trunc i32 %8970 to i8
  %8972 = and i8 %8971, 1
  %8973 = xor i8 %8972, 1
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8973, i8* %8974, align 1
  %8975 = xor i32 %8963, %8961
  %8976 = xor i32 %8975, %8964
  %8977 = lshr i32 %8976, 4
  %8978 = trunc i32 %8977 to i8
  %8979 = and i8 %8978, 1
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8979, i8* %8980, align 1
  %8981 = icmp eq i32 %8964, 0
  %8982 = zext i1 %8981 to i8
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8982, i8* %8983, align 1
  %8984 = lshr i32 %8964, 31
  %8985 = trunc i32 %8984 to i8
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8985, i8* %8986, align 1
  %8987 = lshr i32 %8961, 31
  %8988 = lshr i32 %8963, 31
  %8989 = xor i32 %8988, %8987
  %8990 = xor i32 %8984, %8987
  %8991 = add i32 %8990, %8989
  %8992 = icmp eq i32 %8991, 2
  %8993 = zext i1 %8992 to i8
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8993, i8* %8994, align 1
  store %struct.Memory* %loadMem_40b3a8, %struct.Memory** %MEMORY
  %loadMem_40b3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 33
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %8997 to i64*
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 5
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %ECX.i1302 = bitcast %union.anon* %9000 to i32*
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9002 = getelementptr inbounds %struct.GPR, %struct.GPR* %9001, i32 0, i32 15
  %9003 = getelementptr inbounds %struct.Reg, %struct.Reg* %9002, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %9003 to i64*
  %9004 = load i64, i64* %RBP.i1303
  %9005 = sub i64 %9004, 172
  %9006 = load i32, i32* %ECX.i1302
  %9007 = zext i32 %9006 to i64
  %9008 = load i64, i64* %PC.i1301
  %9009 = add i64 %9008, 6
  store i64 %9009, i64* %PC.i1301
  %9010 = inttoptr i64 %9005 to i32*
  store i32 %9006, i32* %9010
  store %struct.Memory* %loadMem_40b3ab, %struct.Memory** %MEMORY
  %loadMem_40b3b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 33
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %9013 to i64*
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 7
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %EDX.i1299 = bitcast %union.anon* %9016 to i32*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 5
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %RCX.i1300 = bitcast %union.anon* %9019 to i64*
  %9020 = load i32, i32* %EDX.i1299
  %9021 = zext i32 %9020 to i64
  %9022 = load i64, i64* %PC.i1298
  %9023 = add i64 %9022, 2
  store i64 %9023, i64* %PC.i1298
  %9024 = and i64 %9021, 4294967295
  store i64 %9024, i64* %RCX.i1300, align 8
  store %struct.Memory* %loadMem_40b3b1, %struct.Memory** %MEMORY
  %loadMem_40b3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9026 = getelementptr inbounds %struct.GPR, %struct.GPR* %9025, i32 0, i32 33
  %9027 = getelementptr inbounds %struct.Reg, %struct.Reg* %9026, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %9027 to i64*
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9029 = getelementptr inbounds %struct.GPR, %struct.GPR* %9028, i32 0, i32 7
  %9030 = getelementptr inbounds %struct.Reg, %struct.Reg* %9029, i32 0, i32 0
  %RDX.i1296 = bitcast %union.anon* %9030 to i64*
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9032 = getelementptr inbounds %struct.GPR, %struct.GPR* %9031, i32 0, i32 15
  %9033 = getelementptr inbounds %struct.Reg, %struct.Reg* %9032, i32 0, i32 0
  %RBP.i1297 = bitcast %union.anon* %9033 to i64*
  %9034 = load i64, i64* %RBP.i1297
  %9035 = sub i64 %9034, 172
  %9036 = load i64, i64* %PC.i1295
  %9037 = add i64 %9036, 6
  store i64 %9037, i64* %PC.i1295
  %9038 = inttoptr i64 %9035 to i32*
  %9039 = load i32, i32* %9038
  %9040 = zext i32 %9039 to i64
  store i64 %9040, i64* %RDX.i1296, align 8
  store %struct.Memory* %loadMem_40b3b3, %struct.Memory** %MEMORY
  %loadMem_40b3b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9042 = getelementptr inbounds %struct.GPR, %struct.GPR* %9041, i32 0, i32 33
  %9043 = getelementptr inbounds %struct.Reg, %struct.Reg* %9042, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %9043 to i64*
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9045 = getelementptr inbounds %struct.GPR, %struct.GPR* %9044, i32 0, i32 5
  %9046 = getelementptr inbounds %struct.Reg, %struct.Reg* %9045, i32 0, i32 0
  %9047 = bitcast %union.anon* %9046 to %struct.anon.2*
  %CL.i1292 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9047, i32 0, i32 0
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9049 = getelementptr inbounds %struct.GPR, %struct.GPR* %9048, i32 0, i32 7
  %9050 = getelementptr inbounds %struct.Reg, %struct.Reg* %9049, i32 0, i32 0
  %RDX.i1293 = bitcast %union.anon* %9050 to i64*
  %9051 = load i64, i64* %RDX.i1293
  %9052 = load i8, i8* %CL.i1292
  %9053 = zext i8 %9052 to i64
  %9054 = load i64, i64* %PC.i1291
  %9055 = add i64 %9054, 2
  store i64 %9055, i64* %PC.i1291
  %9056 = trunc i64 %9053 to i5
  switch i5 %9056, label %9063 [
    i5 0, label %routine_shll__cl___edx.exit1294
    i5 1, label %9057
  ]

; <label>:9057:                                   ; preds = %block_40b370
  %9058 = trunc i64 %9051 to i32
  %9059 = shl i32 %9058, 1
  %9060 = icmp slt i32 %9058, 0
  %9061 = icmp slt i32 %9059, 0
  %9062 = xor i1 %9060, %9061
  br label %9072

; <label>:9063:                                   ; preds = %block_40b370
  %9064 = and i64 %9053, 31
  %9065 = add i64 %9064, 4294967295
  %9066 = and i64 %9051, 4294967295
  %9067 = and i64 %9065, 4294967295
  %9068 = shl i64 %9066, %9067
  %9069 = trunc i64 %9068 to i32
  %9070 = icmp slt i32 %9069, 0
  %9071 = shl i32 %9069, 1
  br label %9072

; <label>:9072:                                   ; preds = %9063, %9057
  %9073 = phi i1 [ %9060, %9057 ], [ %9070, %9063 ]
  %9074 = phi i1 [ %9062, %9057 ], [ false, %9063 ]
  %9075 = phi i32 [ %9059, %9057 ], [ %9071, %9063 ]
  %9076 = zext i32 %9075 to i64
  store i64 %9076, i64* %RDX.i1293, align 8
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9078 = zext i1 %9073 to i8
  store i8 %9078, i8* %9077, align 1
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9080 = and i32 %9075, 254
  %9081 = call i32 @llvm.ctpop.i32(i32 %9080)
  %9082 = trunc i32 %9081 to i8
  %9083 = and i8 %9082, 1
  %9084 = xor i8 %9083, 1
  store i8 %9084, i8* %9079, align 1
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9085, align 1
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9087 = icmp eq i32 %9075, 0
  %9088 = zext i1 %9087 to i8
  store i8 %9088, i8* %9086, align 1
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9090 = lshr i32 %9075, 31
  %9091 = trunc i32 %9090 to i8
  store i8 %9091, i8* %9089, align 1
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9093 = zext i1 %9074 to i8
  store i8 %9093, i8* %9092, align 1
  br label %routine_shll__cl___edx.exit1294

routine_shll__cl___edx.exit1294:                  ; preds = %block_40b370, %9072
  store %struct.Memory* %loadMem_40b3b9, %struct.Memory** %MEMORY
  %loadMem_40b3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 33
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %9096 to i64*
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9098 = getelementptr inbounds %struct.GPR, %struct.GPR* %9097, i32 0, i32 7
  %9099 = getelementptr inbounds %struct.Reg, %struct.Reg* %9098, i32 0, i32 0
  %EDX.i1289 = bitcast %union.anon* %9099 to i32*
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 11
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %RDI.i1290 = bitcast %union.anon* %9102 to i64*
  %9103 = load i64, i64* %RDI.i1290
  %9104 = load i32, i32* %EDX.i1289
  %9105 = zext i32 %9104 to i64
  %9106 = load i64, i64* %PC.i1288
  %9107 = add i64 %9106, 2
  store i64 %9107, i64* %PC.i1288
  %9108 = trunc i64 %9103 to i32
  %9109 = add i32 %9104, %9108
  %9110 = zext i32 %9109 to i64
  store i64 %9110, i64* %RDI.i1290, align 8
  %9111 = icmp ult i32 %9109, %9108
  %9112 = icmp ult i32 %9109, %9104
  %9113 = or i1 %9111, %9112
  %9114 = zext i1 %9113 to i8
  %9115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9114, i8* %9115, align 1
  %9116 = and i32 %9109, 255
  %9117 = call i32 @llvm.ctpop.i32(i32 %9116)
  %9118 = trunc i32 %9117 to i8
  %9119 = and i8 %9118, 1
  %9120 = xor i8 %9119, 1
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9120, i8* %9121, align 1
  %9122 = xor i64 %9105, %9103
  %9123 = trunc i64 %9122 to i32
  %9124 = xor i32 %9123, %9109
  %9125 = lshr i32 %9124, 4
  %9126 = trunc i32 %9125 to i8
  %9127 = and i8 %9126, 1
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9127, i8* %9128, align 1
  %9129 = icmp eq i32 %9109, 0
  %9130 = zext i1 %9129 to i8
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9130, i8* %9131, align 1
  %9132 = lshr i32 %9109, 31
  %9133 = trunc i32 %9132 to i8
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9133, i8* %9134, align 1
  %9135 = lshr i32 %9108, 31
  %9136 = lshr i32 %9104, 31
  %9137 = xor i32 %9132, %9135
  %9138 = xor i32 %9132, %9136
  %9139 = add i32 %9137, %9138
  %9140 = icmp eq i32 %9139, 2
  %9141 = zext i1 %9140 to i8
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9141, i8* %9142, align 1
  store %struct.Memory* %loadMem_40b3bb, %struct.Memory** %MEMORY
  %loadMem_40b3bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 33
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %9145 to i64*
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 1
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %RAX.i1286 = bitcast %union.anon* %9148 to i64*
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 15
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %RBP.i1287 = bitcast %union.anon* %9151 to i64*
  %9152 = load i64, i64* %RAX.i1286
  %9153 = load i64, i64* %RBP.i1287
  %9154 = sub i64 %9153, 104
  %9155 = load i64, i64* %PC.i1285
  %9156 = add i64 %9155, 3
  store i64 %9156, i64* %PC.i1285
  %9157 = trunc i64 %9152 to i32
  %9158 = inttoptr i64 %9154 to i32*
  %9159 = load i32, i32* %9158
  %9160 = sub i32 %9157, %9159
  %9161 = zext i32 %9160 to i64
  store i64 %9161, i64* %RAX.i1286, align 8
  %9162 = icmp ult i32 %9157, %9159
  %9163 = zext i1 %9162 to i8
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9163, i8* %9164, align 1
  %9165 = and i32 %9160, 255
  %9166 = call i32 @llvm.ctpop.i32(i32 %9165)
  %9167 = trunc i32 %9166 to i8
  %9168 = and i8 %9167, 1
  %9169 = xor i8 %9168, 1
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9169, i8* %9170, align 1
  %9171 = xor i32 %9159, %9157
  %9172 = xor i32 %9171, %9160
  %9173 = lshr i32 %9172, 4
  %9174 = trunc i32 %9173 to i8
  %9175 = and i8 %9174, 1
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9175, i8* %9176, align 1
  %9177 = icmp eq i32 %9160, 0
  %9178 = zext i1 %9177 to i8
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9178, i8* %9179, align 1
  %9180 = lshr i32 %9160, 31
  %9181 = trunc i32 %9180 to i8
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9181, i8* %9182, align 1
  %9183 = lshr i32 %9157, 31
  %9184 = lshr i32 %9159, 31
  %9185 = xor i32 %9184, %9183
  %9186 = xor i32 %9180, %9183
  %9187 = add i32 %9186, %9185
  %9188 = icmp eq i32 %9187, 2
  %9189 = zext i1 %9188 to i8
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9189, i8* %9190, align 1
  store %struct.Memory* %loadMem_40b3bd, %struct.Memory** %MEMORY
  %loadMem_40b3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9192 = getelementptr inbounds %struct.GPR, %struct.GPR* %9191, i32 0, i32 33
  %9193 = getelementptr inbounds %struct.Reg, %struct.Reg* %9192, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %9193 to i64*
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9195 = getelementptr inbounds %struct.GPR, %struct.GPR* %9194, i32 0, i32 1
  %9196 = getelementptr inbounds %struct.Reg, %struct.Reg* %9195, i32 0, i32 0
  %EAX.i1283 = bitcast %union.anon* %9196 to i32*
  %9197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9198 = getelementptr inbounds %struct.GPR, %struct.GPR* %9197, i32 0, i32 5
  %9199 = getelementptr inbounds %struct.Reg, %struct.Reg* %9198, i32 0, i32 0
  %RCX.i1284 = bitcast %union.anon* %9199 to i64*
  %9200 = load i32, i32* %EAX.i1283
  %9201 = zext i32 %9200 to i64
  %9202 = load i64, i64* %PC.i1282
  %9203 = add i64 %9202, 2
  store i64 %9203, i64* %PC.i1282
  %9204 = and i64 %9201, 4294967295
  store i64 %9204, i64* %RCX.i1284, align 8
  store %struct.Memory* %loadMem_40b3c0, %struct.Memory** %MEMORY
  %loadMem_40b3c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9206 = getelementptr inbounds %struct.GPR, %struct.GPR* %9205, i32 0, i32 33
  %9207 = getelementptr inbounds %struct.Reg, %struct.Reg* %9206, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %9207 to i64*
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 5
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %9211 = bitcast %union.anon* %9210 to %struct.anon.2*
  %CL.i1279 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9211, i32 0, i32 0
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9213 = getelementptr inbounds %struct.GPR, %struct.GPR* %9212, i32 0, i32 11
  %9214 = getelementptr inbounds %struct.Reg, %struct.Reg* %9213, i32 0, i32 0
  %RDI.i1280 = bitcast %union.anon* %9214 to i64*
  %9215 = load i64, i64* %RDI.i1280
  %9216 = load i8, i8* %CL.i1279
  %9217 = zext i8 %9216 to i64
  %9218 = load i64, i64* %PC.i1278
  %9219 = add i64 %9218, 2
  store i64 %9219, i64* %PC.i1278
  %9220 = trunc i64 %9217 to i5
  switch i5 %9220, label %9224 [
    i5 0, label %routine_sarl__cl___edi.exit1281
    i5 1, label %9221
  ]

; <label>:9221:                                   ; preds = %routine_shll__cl___edx.exit1294
  %9222 = shl i64 %9215, 32
  %9223 = ashr i64 %9222, 33
  br label %9231

; <label>:9224:                                   ; preds = %routine_shll__cl___edx.exit1294
  %9225 = and i64 %9217, 31
  %9226 = add i64 %9225, -1
  %9227 = shl i64 %9215, 32
  %9228 = ashr exact i64 %9227, 32
  %9229 = ashr i64 %9228, %9226
  %9230 = lshr i64 %9229, 1
  br label %9231

; <label>:9231:                                   ; preds = %9224, %9221
  %9232 = phi i64 [ %9230, %9224 ], [ %9223, %9221 ]
  %9233 = phi i64 [ %9229, %9224 ], [ %9215, %9221 ]
  %9234 = trunc i64 %9233 to i8
  %9235 = and i8 %9234, 1
  %9236 = trunc i64 %9232 to i32
  %9237 = and i64 %9232, 4294967295
  store i64 %9237, i64* %RDI.i1280, align 8
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9235, i8* %9238, align 1
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9240 = and i32 %9236, 255
  %9241 = call i32 @llvm.ctpop.i32(i32 %9240)
  %9242 = trunc i32 %9241 to i8
  %9243 = and i8 %9242, 1
  %9244 = xor i8 %9243, 1
  store i8 %9244, i8* %9239, align 1
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9245, align 1
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9247 = icmp eq i32 %9236, 0
  %9248 = zext i1 %9247 to i8
  store i8 %9248, i8* %9246, align 1
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9250 = lshr i32 %9236, 31
  %9251 = trunc i32 %9250 to i8
  store i8 %9251, i8* %9249, align 1
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9252, align 1
  br label %routine_sarl__cl___edi.exit1281

routine_sarl__cl___edi.exit1281:                  ; preds = %routine_shll__cl___edx.exit1294, %9231
  store %struct.Memory* %loadMem_40b3c2, %struct.Memory** %MEMORY
  %loadMem_40b3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9254 = getelementptr inbounds %struct.GPR, %struct.GPR* %9253, i32 0, i32 33
  %9255 = getelementptr inbounds %struct.Reg, %struct.Reg* %9254, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %9255 to i64*
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 9
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %RSI.i1277 = bitcast %union.anon* %9258 to i64*
  %9259 = load i64, i64* %PC.i1276
  %9260 = add i64 %9259, 8
  store i64 %9260, i64* %PC.i1276
  %9261 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9261, i64* %RSI.i1277, align 8
  store %struct.Memory* %loadMem_40b3c4, %struct.Memory** %MEMORY
  %loadMem_40b3cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %9264 to i64*
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9266 = getelementptr inbounds %struct.GPR, %struct.GPR* %9265, i32 0, i32 9
  %9267 = getelementptr inbounds %struct.Reg, %struct.Reg* %9266, i32 0, i32 0
  %RSI.i1275 = bitcast %union.anon* %9267 to i64*
  %9268 = load i64, i64* %RSI.i1275
  %9269 = add i64 %9268, 13112
  %9270 = load i64, i64* %PC.i1274
  %9271 = add i64 %9270, 6
  store i64 %9271, i64* %PC.i1274
  %9272 = inttoptr i64 %9269 to i32*
  %9273 = load i32, i32* %9272
  %9274 = zext i32 %9273 to i64
  store i64 %9274, i64* %RSI.i1275, align 8
  store %struct.Memory* %loadMem_40b3cc, %struct.Memory** %MEMORY
  %loadMem1_40b3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9276 = getelementptr inbounds %struct.GPR, %struct.GPR* %9275, i32 0, i32 33
  %9277 = getelementptr inbounds %struct.Reg, %struct.Reg* %9276, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %9277 to i64*
  %9278 = load i64, i64* %PC.i1273
  %9279 = add i64 %9278, 433534
  %9280 = load i64, i64* %PC.i1273
  %9281 = add i64 %9280, 5
  %9282 = load i64, i64* %PC.i1273
  %9283 = add i64 %9282, 5
  store i64 %9283, i64* %PC.i1273
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9285 = load i64, i64* %9284, align 8
  %9286 = add i64 %9285, -8
  %9287 = inttoptr i64 %9286 to i64*
  store i64 %9281, i64* %9287
  store i64 %9286, i64* %9284, align 8
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9279, i64* %9288, align 8
  store %struct.Memory* %loadMem1_40b3d2, %struct.Memory** %MEMORY
  %loadMem2_40b3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b3d2 = load i64, i64* %3
  %call2_40b3d2 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b3d2, %struct.Memory* %loadMem2_40b3d2)
  store %struct.Memory* %call2_40b3d2, %struct.Memory** %MEMORY
  %loadMem_40b3d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 33
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %9291 to i64*
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 17
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %R8.i1272 = bitcast %union.anon* %9294 to i64*
  %9295 = load i64, i64* %PC.i1271
  %9296 = add i64 %9295, 8
  store i64 %9296, i64* %PC.i1271
  %9297 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9297, i64* %R8.i1272, align 8
  store %struct.Memory* %loadMem_40b3d7, %struct.Memory** %MEMORY
  %loadMem_40b3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9299 = getelementptr inbounds %struct.GPR, %struct.GPR* %9298, i32 0, i32 33
  %9300 = getelementptr inbounds %struct.Reg, %struct.Reg* %9299, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %9300 to i64*
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9302 = getelementptr inbounds %struct.GPR, %struct.GPR* %9301, i32 0, i32 1
  %9303 = getelementptr inbounds %struct.Reg, %struct.Reg* %9302, i32 0, i32 0
  %EAX.i1269 = bitcast %union.anon* %9303 to i32*
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9305 = getelementptr inbounds %struct.GPR, %struct.GPR* %9304, i32 0, i32 17
  %9306 = getelementptr inbounds %struct.Reg, %struct.Reg* %9305, i32 0, i32 0
  %R8.i1270 = bitcast %union.anon* %9306 to i64*
  %9307 = load i64, i64* %R8.i1270
  %9308 = add i64 %9307, 13112
  %9309 = load i32, i32* %EAX.i1269
  %9310 = zext i32 %9309 to i64
  %9311 = load i64, i64* %PC.i1268
  %9312 = add i64 %9311, 7
  store i64 %9312, i64* %PC.i1268
  %9313 = inttoptr i64 %9308 to i32*
  store i32 %9309, i32* %9313
  store %struct.Memory* %loadMem_40b3df, %struct.Memory** %MEMORY
  %loadMem_40b3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9315 = getelementptr inbounds %struct.GPR, %struct.GPR* %9314, i32 0, i32 33
  %9316 = getelementptr inbounds %struct.Reg, %struct.Reg* %9315, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %9316 to i64*
  %9317 = load i64, i64* %PC.i1267
  %9318 = add i64 %9317, 123
  %9319 = load i64, i64* %PC.i1267
  %9320 = add i64 %9319, 5
  store i64 %9320, i64* %PC.i1267
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9318, i64* %9321, align 8
  store %struct.Memory* %loadMem_40b3e6, %struct.Memory** %MEMORY
  br label %block_.L_40b461

block_.L_40b3eb:                                  ; preds = %block_40b366
  %loadMem_40b3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 33
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %9324 to i64*
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9326 = getelementptr inbounds %struct.GPR, %struct.GPR* %9325, i32 0, i32 1
  %9327 = getelementptr inbounds %struct.Reg, %struct.Reg* %9326, i32 0, i32 0
  %RAX.i1266 = bitcast %union.anon* %9327 to i64*
  %9328 = load i64, i64* %PC.i1265
  %9329 = add i64 %9328, 5
  store i64 %9329, i64* %PC.i1265
  store i64 4, i64* %RAX.i1266, align 8
  store %struct.Memory* %loadMem_40b3eb, %struct.Memory** %MEMORY
  %loadMem_40b3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9331 = getelementptr inbounds %struct.GPR, %struct.GPR* %9330, i32 0, i32 33
  %9332 = getelementptr inbounds %struct.Reg, %struct.Reg* %9331, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %9332 to i64*
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9334 = getelementptr inbounds %struct.GPR, %struct.GPR* %9333, i32 0, i32 5
  %9335 = getelementptr inbounds %struct.Reg, %struct.Reg* %9334, i32 0, i32 0
  %RCX.i1264 = bitcast %union.anon* %9335 to i64*
  %9336 = load i64, i64* %PC.i1263
  %9337 = add i64 %9336, 5
  store i64 %9337, i64* %PC.i1263
  store i64 1, i64* %RCX.i1264, align 8
  store %struct.Memory* %loadMem_40b3f0, %struct.Memory** %MEMORY
  %loadMem_40b3f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 33
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %9340 to i64*
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 7
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %RDX.i1262 = bitcast %union.anon* %9343 to i64*
  %9344 = load i64, i64* %PC.i1261
  %9345 = add i64 %9344, 5
  store i64 %9345, i64* %PC.i1261
  store i64 3, i64* %RDX.i1262, align 8
  store %struct.Memory* %loadMem_40b3f5, %struct.Memory** %MEMORY
  %loadMem_40b3fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9347 = getelementptr inbounds %struct.GPR, %struct.GPR* %9346, i32 0, i32 33
  %9348 = getelementptr inbounds %struct.Reg, %struct.Reg* %9347, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %9348 to i64*
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9350 = getelementptr inbounds %struct.GPR, %struct.GPR* %9349, i32 0, i32 9
  %9351 = getelementptr inbounds %struct.Reg, %struct.Reg* %9350, i32 0, i32 0
  %RSI.i1260 = bitcast %union.anon* %9351 to i64*
  %9352 = load i64, i64* %PC.i1259
  %9353 = add i64 %9352, 10
  store i64 %9353, i64* %PC.i1259
  store i64 ptrtoint (%G__0x723b20_type* @G__0x723b20 to i64), i64* %RSI.i1260, align 8
  store %struct.Memory* %loadMem_40b3fa, %struct.Memory** %MEMORY
  %loadMem_40b404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9355 = getelementptr inbounds %struct.GPR, %struct.GPR* %9354, i32 0, i32 33
  %9356 = getelementptr inbounds %struct.Reg, %struct.Reg* %9355, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %9356 to i64*
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 11
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %RDI.i1257 = bitcast %union.anon* %9359 to i64*
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9361 = getelementptr inbounds %struct.GPR, %struct.GPR* %9360, i32 0, i32 15
  %9362 = getelementptr inbounds %struct.Reg, %struct.Reg* %9361, i32 0, i32 0
  %RBP.i1258 = bitcast %union.anon* %9362 to i64*
  %9363 = load i64, i64* %RBP.i1258
  %9364 = sub i64 %9363, 72
  %9365 = load i64, i64* %PC.i1256
  %9366 = add i64 %9365, 3
  store i64 %9366, i64* %PC.i1256
  %9367 = inttoptr i64 %9364 to i32*
  %9368 = load i32, i32* %9367
  %9369 = zext i32 %9368 to i64
  store i64 %9369, i64* %RDI.i1257, align 8
  store %struct.Memory* %loadMem_40b404, %struct.Memory** %MEMORY
  %loadMem_40b407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9371 = getelementptr inbounds %struct.GPR, %struct.GPR* %9370, i32 0, i32 33
  %9372 = getelementptr inbounds %struct.Reg, %struct.Reg* %9371, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %9372 to i64*
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9374 = getelementptr inbounds %struct.GPR, %struct.GPR* %9373, i32 0, i32 15
  %9375 = getelementptr inbounds %struct.Reg, %struct.Reg* %9374, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %9375 to i64*
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9377 = getelementptr inbounds %struct.GPR, %struct.GPR* %9376, i32 0, i32 17
  %9378 = getelementptr inbounds %struct.Reg, %struct.Reg* %9377, i32 0, i32 0
  %R8.i1255 = bitcast %union.anon* %9378 to i64*
  %9379 = load i64, i64* %RBP.i1254
  %9380 = sub i64 %9379, 4
  %9381 = load i64, i64* %PC.i1253
  %9382 = add i64 %9381, 4
  store i64 %9382, i64* %PC.i1253
  %9383 = inttoptr i64 %9380 to i32*
  %9384 = load i32, i32* %9383
  %9385 = sext i32 %9384 to i64
  store i64 %9385, i64* %R8.i1255, align 8
  store %struct.Memory* %loadMem_40b407, %struct.Memory** %MEMORY
  %loadMem_40b40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9387 = getelementptr inbounds %struct.GPR, %struct.GPR* %9386, i32 0, i32 33
  %9388 = getelementptr inbounds %struct.Reg, %struct.Reg* %9387, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %9388 to i64*
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9390 = getelementptr inbounds %struct.GPR, %struct.GPR* %9389, i32 0, i32 17
  %9391 = getelementptr inbounds %struct.Reg, %struct.Reg* %9390, i32 0, i32 0
  %R8.i1252 = bitcast %union.anon* %9391 to i64*
  %9392 = load i64, i64* %R8.i1252
  %9393 = load i64, i64* %PC.i1251
  %9394 = add i64 %9393, 7
  store i64 %9394, i64* %PC.i1251
  %9395 = sext i64 %9392 to i128
  %9396 = and i128 %9395, -18446744073709551616
  %9397 = zext i64 %9392 to i128
  %9398 = or i128 %9396, %9397
  %9399 = mul i128 384, %9398
  %9400 = trunc i128 %9399 to i64
  store i64 %9400, i64* %R8.i1252, align 8
  %9401 = sext i64 %9400 to i128
  %9402 = icmp ne i128 %9401, %9399
  %9403 = zext i1 %9402 to i8
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9403, i8* %9404, align 1
  %9405 = trunc i128 %9399 to i32
  %9406 = and i32 %9405, 255
  %9407 = call i32 @llvm.ctpop.i32(i32 %9406)
  %9408 = trunc i32 %9407 to i8
  %9409 = and i8 %9408, 1
  %9410 = xor i8 %9409, 1
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9410, i8* %9411, align 1
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9412, align 1
  %9413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9413, align 1
  %9414 = lshr i64 %9400, 63
  %9415 = trunc i64 %9414 to i8
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9415, i8* %9416, align 1
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9403, i8* %9417, align 1
  store %struct.Memory* %loadMem_40b40b, %struct.Memory** %MEMORY
  %loadMem_40b412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 33
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %9420 to i64*
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9422 = getelementptr inbounds %struct.GPR, %struct.GPR* %9421, i32 0, i32 9
  %9423 = getelementptr inbounds %struct.Reg, %struct.Reg* %9422, i32 0, i32 0
  %RSI.i1249 = bitcast %union.anon* %9423 to i64*
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9425 = getelementptr inbounds %struct.GPR, %struct.GPR* %9424, i32 0, i32 17
  %9426 = getelementptr inbounds %struct.Reg, %struct.Reg* %9425, i32 0, i32 0
  %R8.i1250 = bitcast %union.anon* %9426 to i64*
  %9427 = load i64, i64* %RSI.i1249
  %9428 = load i64, i64* %R8.i1250
  %9429 = load i64, i64* %PC.i1248
  %9430 = add i64 %9429, 3
  store i64 %9430, i64* %PC.i1248
  %9431 = add i64 %9428, %9427
  store i64 %9431, i64* %RSI.i1249, align 8
  %9432 = icmp ult i64 %9431, %9427
  %9433 = icmp ult i64 %9431, %9428
  %9434 = or i1 %9432, %9433
  %9435 = zext i1 %9434 to i8
  %9436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9435, i8* %9436, align 1
  %9437 = trunc i64 %9431 to i32
  %9438 = and i32 %9437, 255
  %9439 = call i32 @llvm.ctpop.i32(i32 %9438)
  %9440 = trunc i32 %9439 to i8
  %9441 = and i8 %9440, 1
  %9442 = xor i8 %9441, 1
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9442, i8* %9443, align 1
  %9444 = xor i64 %9428, %9427
  %9445 = xor i64 %9444, %9431
  %9446 = lshr i64 %9445, 4
  %9447 = trunc i64 %9446 to i8
  %9448 = and i8 %9447, 1
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9448, i8* %9449, align 1
  %9450 = icmp eq i64 %9431, 0
  %9451 = zext i1 %9450 to i8
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9451, i8* %9452, align 1
  %9453 = lshr i64 %9431, 63
  %9454 = trunc i64 %9453 to i8
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9454, i8* %9455, align 1
  %9456 = lshr i64 %9427, 63
  %9457 = lshr i64 %9428, 63
  %9458 = xor i64 %9453, %9456
  %9459 = xor i64 %9453, %9457
  %9460 = add i64 %9458, %9459
  %9461 = icmp eq i64 %9460, 2
  %9462 = zext i1 %9461 to i8
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9462, i8* %9463, align 1
  store %struct.Memory* %loadMem_40b412, %struct.Memory** %MEMORY
  %loadMem_40b415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 33
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %9466 to i64*
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9468 = getelementptr inbounds %struct.GPR, %struct.GPR* %9467, i32 0, i32 15
  %9469 = getelementptr inbounds %struct.Reg, %struct.Reg* %9468, i32 0, i32 0
  %RBP.i1246 = bitcast %union.anon* %9469 to i64*
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9471 = getelementptr inbounds %struct.GPR, %struct.GPR* %9470, i32 0, i32 17
  %9472 = getelementptr inbounds %struct.Reg, %struct.Reg* %9471, i32 0, i32 0
  %R8.i1247 = bitcast %union.anon* %9472 to i64*
  %9473 = load i64, i64* %RBP.i1246
  %9474 = sub i64 %9473, 108
  %9475 = load i64, i64* %PC.i1245
  %9476 = add i64 %9475, 4
  store i64 %9476, i64* %PC.i1245
  %9477 = inttoptr i64 %9474 to i32*
  %9478 = load i32, i32* %9477
  %9479 = sext i32 %9478 to i64
  store i64 %9479, i64* %R8.i1247, align 8
  store %struct.Memory* %loadMem_40b415, %struct.Memory** %MEMORY
  %loadMem_40b419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %9482 to i64*
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9484 = getelementptr inbounds %struct.GPR, %struct.GPR* %9483, i32 0, i32 17
  %9485 = getelementptr inbounds %struct.Reg, %struct.Reg* %9484, i32 0, i32 0
  %R8.i1244 = bitcast %union.anon* %9485 to i64*
  %9486 = load i64, i64* %R8.i1244
  %9487 = load i64, i64* %PC.i1243
  %9488 = add i64 %9487, 4
  store i64 %9488, i64* %PC.i1243
  %9489 = shl i64 %9486, 5
  %9490 = icmp slt i64 %9489, 0
  %9491 = shl i64 %9489, 1
  store i64 %9491, i64* %R8.i1244, align 8
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9493 = zext i1 %9490 to i8
  store i8 %9493, i8* %9492, align 1
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9495 = trunc i64 %9491 to i32
  %9496 = and i32 %9495, 254
  %9497 = call i32 @llvm.ctpop.i32(i32 %9496)
  %9498 = trunc i32 %9497 to i8
  %9499 = and i8 %9498, 1
  %9500 = xor i8 %9499, 1
  store i8 %9500, i8* %9494, align 1
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9501, align 1
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9503 = icmp eq i64 %9491, 0
  %9504 = zext i1 %9503 to i8
  store i8 %9504, i8* %9502, align 1
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9506 = lshr i64 %9491, 63
  %9507 = trunc i64 %9506 to i8
  store i8 %9507, i8* %9505, align 1
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9508, align 1
  store %struct.Memory* %loadMem_40b419, %struct.Memory** %MEMORY
  %loadMem_40b41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 33
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %9511 to i64*
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 9
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %RSI.i1241 = bitcast %union.anon* %9514 to i64*
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 17
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %R8.i1242 = bitcast %union.anon* %9517 to i64*
  %9518 = load i64, i64* %RSI.i1241
  %9519 = load i64, i64* %R8.i1242
  %9520 = load i64, i64* %PC.i1240
  %9521 = add i64 %9520, 3
  store i64 %9521, i64* %PC.i1240
  %9522 = add i64 %9519, %9518
  store i64 %9522, i64* %RSI.i1241, align 8
  %9523 = icmp ult i64 %9522, %9518
  %9524 = icmp ult i64 %9522, %9519
  %9525 = or i1 %9523, %9524
  %9526 = zext i1 %9525 to i8
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9526, i8* %9527, align 1
  %9528 = trunc i64 %9522 to i32
  %9529 = and i32 %9528, 255
  %9530 = call i32 @llvm.ctpop.i32(i32 %9529)
  %9531 = trunc i32 %9530 to i8
  %9532 = and i8 %9531, 1
  %9533 = xor i8 %9532, 1
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9533, i8* %9534, align 1
  %9535 = xor i64 %9519, %9518
  %9536 = xor i64 %9535, %9522
  %9537 = lshr i64 %9536, 4
  %9538 = trunc i64 %9537 to i8
  %9539 = and i8 %9538, 1
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9539, i8* %9540, align 1
  %9541 = icmp eq i64 %9522, 0
  %9542 = zext i1 %9541 to i8
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9542, i8* %9543, align 1
  %9544 = lshr i64 %9522, 63
  %9545 = trunc i64 %9544 to i8
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9545, i8* %9546, align 1
  %9547 = lshr i64 %9518, 63
  %9548 = lshr i64 %9519, 63
  %9549 = xor i64 %9544, %9547
  %9550 = xor i64 %9544, %9548
  %9551 = add i64 %9549, %9550
  %9552 = icmp eq i64 %9551, 2
  %9553 = zext i1 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9553, i8* %9554, align 1
  store %struct.Memory* %loadMem_40b41d, %struct.Memory** %MEMORY
  %loadMem_40b420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 33
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %9557 to i64*
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9559 = getelementptr inbounds %struct.GPR, %struct.GPR* %9558, i32 0, i32 9
  %9560 = getelementptr inbounds %struct.Reg, %struct.Reg* %9559, i32 0, i32 0
  %RSI.i1238 = bitcast %union.anon* %9560 to i64*
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9562 = getelementptr inbounds %struct.GPR, %struct.GPR* %9561, i32 0, i32 11
  %9563 = getelementptr inbounds %struct.Reg, %struct.Reg* %9562, i32 0, i32 0
  %RDI.i1239 = bitcast %union.anon* %9563 to i64*
  %9564 = load i64, i64* %RDI.i1239
  %9565 = load i64, i64* %RSI.i1238
  %9566 = load i64, i64* %PC.i1237
  %9567 = add i64 %9566, 3
  store i64 %9567, i64* %PC.i1237
  %9568 = inttoptr i64 %9565 to i32*
  %9569 = load i32, i32* %9568
  %9570 = shl i64 %9564, 32
  %9571 = ashr exact i64 %9570, 32
  %9572 = sext i32 %9569 to i64
  %9573 = mul i64 %9572, %9571
  %9574 = trunc i64 %9573 to i32
  %9575 = and i64 %9573, 4294967295
  store i64 %9575, i64* %RDI.i1239, align 8
  %9576 = shl i64 %9573, 32
  %9577 = ashr exact i64 %9576, 32
  %9578 = icmp ne i64 %9577, %9573
  %9579 = zext i1 %9578 to i8
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9579, i8* %9580, align 1
  %9581 = and i32 %9574, 255
  %9582 = call i32 @llvm.ctpop.i32(i32 %9581)
  %9583 = trunc i32 %9582 to i8
  %9584 = and i8 %9583, 1
  %9585 = xor i8 %9584, 1
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9585, i8* %9586, align 1
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9587, align 1
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9588, align 1
  %9589 = lshr i32 %9574, 31
  %9590 = trunc i32 %9589 to i8
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9590, i8* %9591, align 1
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9579, i8* %9592, align 1
  store %struct.Memory* %loadMem_40b420, %struct.Memory** %MEMORY
  %loadMem_40b423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 33
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %9595 to i64*
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9597 = getelementptr inbounds %struct.GPR, %struct.GPR* %9596, i32 0, i32 7
  %9598 = getelementptr inbounds %struct.Reg, %struct.Reg* %9597, i32 0, i32 0
  %RDX.i1235 = bitcast %union.anon* %9598 to i64*
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9600 = getelementptr inbounds %struct.GPR, %struct.GPR* %9599, i32 0, i32 15
  %9601 = getelementptr inbounds %struct.Reg, %struct.Reg* %9600, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %9601 to i64*
  %9602 = load i64, i64* %RDX.i1235
  %9603 = load i64, i64* %RBP.i1236
  %9604 = sub i64 %9603, 104
  %9605 = load i64, i64* %PC.i1234
  %9606 = add i64 %9605, 3
  store i64 %9606, i64* %PC.i1234
  %9607 = trunc i64 %9602 to i32
  %9608 = inttoptr i64 %9604 to i32*
  %9609 = load i32, i32* %9608
  %9610 = sub i32 %9607, %9609
  %9611 = zext i32 %9610 to i64
  store i64 %9611, i64* %RDX.i1235, align 8
  %9612 = icmp ult i32 %9607, %9609
  %9613 = zext i1 %9612 to i8
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9613, i8* %9614, align 1
  %9615 = and i32 %9610, 255
  %9616 = call i32 @llvm.ctpop.i32(i32 %9615)
  %9617 = trunc i32 %9616 to i8
  %9618 = and i8 %9617, 1
  %9619 = xor i8 %9618, 1
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9619, i8* %9620, align 1
  %9621 = xor i32 %9609, %9607
  %9622 = xor i32 %9621, %9610
  %9623 = lshr i32 %9622, 4
  %9624 = trunc i32 %9623 to i8
  %9625 = and i8 %9624, 1
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9625, i8* %9626, align 1
  %9627 = icmp eq i32 %9610, 0
  %9628 = zext i1 %9627 to i8
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9628, i8* %9629, align 1
  %9630 = lshr i32 %9610, 31
  %9631 = trunc i32 %9630 to i8
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9631, i8* %9632, align 1
  %9633 = lshr i32 %9607, 31
  %9634 = lshr i32 %9609, 31
  %9635 = xor i32 %9634, %9633
  %9636 = xor i32 %9630, %9633
  %9637 = add i32 %9636, %9635
  %9638 = icmp eq i32 %9637, 2
  %9639 = zext i1 %9638 to i8
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9639, i8* %9640, align 1
  store %struct.Memory* %loadMem_40b423, %struct.Memory** %MEMORY
  %loadMem_40b426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9642 = getelementptr inbounds %struct.GPR, %struct.GPR* %9641, i32 0, i32 33
  %9643 = getelementptr inbounds %struct.Reg, %struct.Reg* %9642, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %9643 to i64*
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9645 = getelementptr inbounds %struct.GPR, %struct.GPR* %9644, i32 0, i32 5
  %9646 = getelementptr inbounds %struct.Reg, %struct.Reg* %9645, i32 0, i32 0
  %ECX.i1232 = bitcast %union.anon* %9646 to i32*
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9648 = getelementptr inbounds %struct.GPR, %struct.GPR* %9647, i32 0, i32 15
  %9649 = getelementptr inbounds %struct.Reg, %struct.Reg* %9648, i32 0, i32 0
  %RBP.i1233 = bitcast %union.anon* %9649 to i64*
  %9650 = load i64, i64* %RBP.i1233
  %9651 = sub i64 %9650, 176
  %9652 = load i32, i32* %ECX.i1232
  %9653 = zext i32 %9652 to i64
  %9654 = load i64, i64* %PC.i1231
  %9655 = add i64 %9654, 6
  store i64 %9655, i64* %PC.i1231
  %9656 = inttoptr i64 %9651 to i32*
  store i32 %9652, i32* %9656
  store %struct.Memory* %loadMem_40b426, %struct.Memory** %MEMORY
  %loadMem_40b42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9658 = getelementptr inbounds %struct.GPR, %struct.GPR* %9657, i32 0, i32 33
  %9659 = getelementptr inbounds %struct.Reg, %struct.Reg* %9658, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %9659 to i64*
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9661 = getelementptr inbounds %struct.GPR, %struct.GPR* %9660, i32 0, i32 7
  %9662 = getelementptr inbounds %struct.Reg, %struct.Reg* %9661, i32 0, i32 0
  %EDX.i1229 = bitcast %union.anon* %9662 to i32*
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9664 = getelementptr inbounds %struct.GPR, %struct.GPR* %9663, i32 0, i32 5
  %9665 = getelementptr inbounds %struct.Reg, %struct.Reg* %9664, i32 0, i32 0
  %RCX.i1230 = bitcast %union.anon* %9665 to i64*
  %9666 = load i32, i32* %EDX.i1229
  %9667 = zext i32 %9666 to i64
  %9668 = load i64, i64* %PC.i1228
  %9669 = add i64 %9668, 2
  store i64 %9669, i64* %PC.i1228
  %9670 = and i64 %9667, 4294967295
  store i64 %9670, i64* %RCX.i1230, align 8
  store %struct.Memory* %loadMem_40b42c, %struct.Memory** %MEMORY
  %loadMem_40b42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9672 = getelementptr inbounds %struct.GPR, %struct.GPR* %9671, i32 0, i32 33
  %9673 = getelementptr inbounds %struct.Reg, %struct.Reg* %9672, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %9673 to i64*
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 7
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %RDX.i1226 = bitcast %union.anon* %9676 to i64*
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 15
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %RBP.i1227 = bitcast %union.anon* %9679 to i64*
  %9680 = load i64, i64* %RBP.i1227
  %9681 = sub i64 %9680, 176
  %9682 = load i64, i64* %PC.i1225
  %9683 = add i64 %9682, 6
  store i64 %9683, i64* %PC.i1225
  %9684 = inttoptr i64 %9681 to i32*
  %9685 = load i32, i32* %9684
  %9686 = zext i32 %9685 to i64
  store i64 %9686, i64* %RDX.i1226, align 8
  store %struct.Memory* %loadMem_40b42e, %struct.Memory** %MEMORY
  %loadMem_40b434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 33
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %9689 to i64*
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 5
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %9693 = bitcast %union.anon* %9692 to %struct.anon.2*
  %CL.i1222 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9693, i32 0, i32 0
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 7
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %RDX.i1223 = bitcast %union.anon* %9696 to i64*
  %9697 = load i64, i64* %RDX.i1223
  %9698 = load i8, i8* %CL.i1222
  %9699 = zext i8 %9698 to i64
  %9700 = load i64, i64* %PC.i1221
  %9701 = add i64 %9700, 2
  store i64 %9701, i64* %PC.i1221
  %9702 = trunc i64 %9699 to i5
  switch i5 %9702, label %9709 [
    i5 0, label %routine_shll__cl___edx.exit1224
    i5 1, label %9703
  ]

; <label>:9703:                                   ; preds = %block_.L_40b3eb
  %9704 = trunc i64 %9697 to i32
  %9705 = shl i32 %9704, 1
  %9706 = icmp slt i32 %9704, 0
  %9707 = icmp slt i32 %9705, 0
  %9708 = xor i1 %9706, %9707
  br label %9718

; <label>:9709:                                   ; preds = %block_.L_40b3eb
  %9710 = and i64 %9699, 31
  %9711 = add i64 %9710, 4294967295
  %9712 = and i64 %9697, 4294967295
  %9713 = and i64 %9711, 4294967295
  %9714 = shl i64 %9712, %9713
  %9715 = trunc i64 %9714 to i32
  %9716 = icmp slt i32 %9715, 0
  %9717 = shl i32 %9715, 1
  br label %9718

; <label>:9718:                                   ; preds = %9709, %9703
  %9719 = phi i1 [ %9706, %9703 ], [ %9716, %9709 ]
  %9720 = phi i1 [ %9708, %9703 ], [ false, %9709 ]
  %9721 = phi i32 [ %9705, %9703 ], [ %9717, %9709 ]
  %9722 = zext i32 %9721 to i64
  store i64 %9722, i64* %RDX.i1223, align 8
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9724 = zext i1 %9719 to i8
  store i8 %9724, i8* %9723, align 1
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9726 = and i32 %9721, 254
  %9727 = call i32 @llvm.ctpop.i32(i32 %9726)
  %9728 = trunc i32 %9727 to i8
  %9729 = and i8 %9728, 1
  %9730 = xor i8 %9729, 1
  store i8 %9730, i8* %9725, align 1
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9731, align 1
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9733 = icmp eq i32 %9721, 0
  %9734 = zext i1 %9733 to i8
  store i8 %9734, i8* %9732, align 1
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9736 = lshr i32 %9721, 31
  %9737 = trunc i32 %9736 to i8
  store i8 %9737, i8* %9735, align 1
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9739 = zext i1 %9720 to i8
  store i8 %9739, i8* %9738, align 1
  br label %routine_shll__cl___edx.exit1224

routine_shll__cl___edx.exit1224:                  ; preds = %block_.L_40b3eb, %9718
  store %struct.Memory* %loadMem_40b434, %struct.Memory** %MEMORY
  %loadMem_40b436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9741 = getelementptr inbounds %struct.GPR, %struct.GPR* %9740, i32 0, i32 33
  %9742 = getelementptr inbounds %struct.Reg, %struct.Reg* %9741, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %9742 to i64*
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9744 = getelementptr inbounds %struct.GPR, %struct.GPR* %9743, i32 0, i32 7
  %9745 = getelementptr inbounds %struct.Reg, %struct.Reg* %9744, i32 0, i32 0
  %EDX.i1219 = bitcast %union.anon* %9745 to i32*
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9747 = getelementptr inbounds %struct.GPR, %struct.GPR* %9746, i32 0, i32 11
  %9748 = getelementptr inbounds %struct.Reg, %struct.Reg* %9747, i32 0, i32 0
  %RDI.i1220 = bitcast %union.anon* %9748 to i64*
  %9749 = load i64, i64* %RDI.i1220
  %9750 = load i32, i32* %EDX.i1219
  %9751 = zext i32 %9750 to i64
  %9752 = load i64, i64* %PC.i1218
  %9753 = add i64 %9752, 2
  store i64 %9753, i64* %PC.i1218
  %9754 = trunc i64 %9749 to i32
  %9755 = add i32 %9750, %9754
  %9756 = zext i32 %9755 to i64
  store i64 %9756, i64* %RDI.i1220, align 8
  %9757 = icmp ult i32 %9755, %9754
  %9758 = icmp ult i32 %9755, %9750
  %9759 = or i1 %9757, %9758
  %9760 = zext i1 %9759 to i8
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9760, i8* %9761, align 1
  %9762 = and i32 %9755, 255
  %9763 = call i32 @llvm.ctpop.i32(i32 %9762)
  %9764 = trunc i32 %9763 to i8
  %9765 = and i8 %9764, 1
  %9766 = xor i8 %9765, 1
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9766, i8* %9767, align 1
  %9768 = xor i64 %9751, %9749
  %9769 = trunc i64 %9768 to i32
  %9770 = xor i32 %9769, %9755
  %9771 = lshr i32 %9770, 4
  %9772 = trunc i32 %9771 to i8
  %9773 = and i8 %9772, 1
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9773, i8* %9774, align 1
  %9775 = icmp eq i32 %9755, 0
  %9776 = zext i1 %9775 to i8
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9776, i8* %9777, align 1
  %9778 = lshr i32 %9755, 31
  %9779 = trunc i32 %9778 to i8
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9779, i8* %9780, align 1
  %9781 = lshr i32 %9754, 31
  %9782 = lshr i32 %9750, 31
  %9783 = xor i32 %9778, %9781
  %9784 = xor i32 %9778, %9782
  %9785 = add i32 %9783, %9784
  %9786 = icmp eq i32 %9785, 2
  %9787 = zext i1 %9786 to i8
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9787, i8* %9788, align 1
  store %struct.Memory* %loadMem_40b436, %struct.Memory** %MEMORY
  %loadMem_40b438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9790 = getelementptr inbounds %struct.GPR, %struct.GPR* %9789, i32 0, i32 33
  %9791 = getelementptr inbounds %struct.Reg, %struct.Reg* %9790, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %9791 to i64*
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9793 = getelementptr inbounds %struct.GPR, %struct.GPR* %9792, i32 0, i32 1
  %9794 = getelementptr inbounds %struct.Reg, %struct.Reg* %9793, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %9794 to i64*
  %9795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9796 = getelementptr inbounds %struct.GPR, %struct.GPR* %9795, i32 0, i32 15
  %9797 = getelementptr inbounds %struct.Reg, %struct.Reg* %9796, i32 0, i32 0
  %RBP.i1217 = bitcast %union.anon* %9797 to i64*
  %9798 = load i64, i64* %RAX.i1216
  %9799 = load i64, i64* %RBP.i1217
  %9800 = sub i64 %9799, 104
  %9801 = load i64, i64* %PC.i1215
  %9802 = add i64 %9801, 3
  store i64 %9802, i64* %PC.i1215
  %9803 = trunc i64 %9798 to i32
  %9804 = inttoptr i64 %9800 to i32*
  %9805 = load i32, i32* %9804
  %9806 = sub i32 %9803, %9805
  %9807 = zext i32 %9806 to i64
  store i64 %9807, i64* %RAX.i1216, align 8
  %9808 = icmp ult i32 %9803, %9805
  %9809 = zext i1 %9808 to i8
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9809, i8* %9810, align 1
  %9811 = and i32 %9806, 255
  %9812 = call i32 @llvm.ctpop.i32(i32 %9811)
  %9813 = trunc i32 %9812 to i8
  %9814 = and i8 %9813, 1
  %9815 = xor i8 %9814, 1
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9815, i8* %9816, align 1
  %9817 = xor i32 %9805, %9803
  %9818 = xor i32 %9817, %9806
  %9819 = lshr i32 %9818, 4
  %9820 = trunc i32 %9819 to i8
  %9821 = and i8 %9820, 1
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9821, i8* %9822, align 1
  %9823 = icmp eq i32 %9806, 0
  %9824 = zext i1 %9823 to i8
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9824, i8* %9825, align 1
  %9826 = lshr i32 %9806, 31
  %9827 = trunc i32 %9826 to i8
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9827, i8* %9828, align 1
  %9829 = lshr i32 %9803, 31
  %9830 = lshr i32 %9805, 31
  %9831 = xor i32 %9830, %9829
  %9832 = xor i32 %9826, %9829
  %9833 = add i32 %9832, %9831
  %9834 = icmp eq i32 %9833, 2
  %9835 = zext i1 %9834 to i8
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9835, i8* %9836, align 1
  store %struct.Memory* %loadMem_40b438, %struct.Memory** %MEMORY
  %loadMem_40b43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9838 = getelementptr inbounds %struct.GPR, %struct.GPR* %9837, i32 0, i32 33
  %9839 = getelementptr inbounds %struct.Reg, %struct.Reg* %9838, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %9839 to i64*
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9841 = getelementptr inbounds %struct.GPR, %struct.GPR* %9840, i32 0, i32 1
  %9842 = getelementptr inbounds %struct.Reg, %struct.Reg* %9841, i32 0, i32 0
  %EAX.i1213 = bitcast %union.anon* %9842 to i32*
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9844 = getelementptr inbounds %struct.GPR, %struct.GPR* %9843, i32 0, i32 5
  %9845 = getelementptr inbounds %struct.Reg, %struct.Reg* %9844, i32 0, i32 0
  %RCX.i1214 = bitcast %union.anon* %9845 to i64*
  %9846 = load i32, i32* %EAX.i1213
  %9847 = zext i32 %9846 to i64
  %9848 = load i64, i64* %PC.i1212
  %9849 = add i64 %9848, 2
  store i64 %9849, i64* %PC.i1212
  %9850 = and i64 %9847, 4294967295
  store i64 %9850, i64* %RCX.i1214, align 8
  store %struct.Memory* %loadMem_40b43b, %struct.Memory** %MEMORY
  %loadMem_40b43d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9852 = getelementptr inbounds %struct.GPR, %struct.GPR* %9851, i32 0, i32 33
  %9853 = getelementptr inbounds %struct.Reg, %struct.Reg* %9852, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %9853 to i64*
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9855 = getelementptr inbounds %struct.GPR, %struct.GPR* %9854, i32 0, i32 5
  %9856 = getelementptr inbounds %struct.Reg, %struct.Reg* %9855, i32 0, i32 0
  %9857 = bitcast %union.anon* %9856 to %struct.anon.2*
  %CL.i1209 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9857, i32 0, i32 0
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9859 = getelementptr inbounds %struct.GPR, %struct.GPR* %9858, i32 0, i32 11
  %9860 = getelementptr inbounds %struct.Reg, %struct.Reg* %9859, i32 0, i32 0
  %RDI.i1210 = bitcast %union.anon* %9860 to i64*
  %9861 = load i64, i64* %RDI.i1210
  %9862 = load i8, i8* %CL.i1209
  %9863 = zext i8 %9862 to i64
  %9864 = load i64, i64* %PC.i1208
  %9865 = add i64 %9864, 2
  store i64 %9865, i64* %PC.i1208
  %9866 = trunc i64 %9863 to i5
  switch i5 %9866, label %9870 [
    i5 0, label %routine_sarl__cl___edi.exit1211
    i5 1, label %9867
  ]

; <label>:9867:                                   ; preds = %routine_shll__cl___edx.exit1224
  %9868 = shl i64 %9861, 32
  %9869 = ashr i64 %9868, 33
  br label %9877

; <label>:9870:                                   ; preds = %routine_shll__cl___edx.exit1224
  %9871 = and i64 %9863, 31
  %9872 = add i64 %9871, -1
  %9873 = shl i64 %9861, 32
  %9874 = ashr exact i64 %9873, 32
  %9875 = ashr i64 %9874, %9872
  %9876 = lshr i64 %9875, 1
  br label %9877

; <label>:9877:                                   ; preds = %9870, %9867
  %9878 = phi i64 [ %9876, %9870 ], [ %9869, %9867 ]
  %9879 = phi i64 [ %9875, %9870 ], [ %9861, %9867 ]
  %9880 = trunc i64 %9879 to i8
  %9881 = and i8 %9880, 1
  %9882 = trunc i64 %9878 to i32
  %9883 = and i64 %9878, 4294967295
  store i64 %9883, i64* %RDI.i1210, align 8
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9881, i8* %9884, align 1
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9886 = and i32 %9882, 255
  %9887 = call i32 @llvm.ctpop.i32(i32 %9886)
  %9888 = trunc i32 %9887 to i8
  %9889 = and i8 %9888, 1
  %9890 = xor i8 %9889, 1
  store i8 %9890, i8* %9885, align 1
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9891, align 1
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9893 = icmp eq i32 %9882, 0
  %9894 = zext i1 %9893 to i8
  store i8 %9894, i8* %9892, align 1
  %9895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9896 = lshr i32 %9882, 31
  %9897 = trunc i32 %9896 to i8
  store i8 %9897, i8* %9895, align 1
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9898, align 1
  br label %routine_sarl__cl___edi.exit1211

routine_sarl__cl___edi.exit1211:                  ; preds = %routine_shll__cl___edx.exit1224, %9877
  store %struct.Memory* %loadMem_40b43d, %struct.Memory** %MEMORY
  %loadMem_40b43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 33
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %9901 to i64*
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9903 = getelementptr inbounds %struct.GPR, %struct.GPR* %9902, i32 0, i32 9
  %9904 = getelementptr inbounds %struct.Reg, %struct.Reg* %9903, i32 0, i32 0
  %RSI.i1207 = bitcast %union.anon* %9904 to i64*
  %9905 = load i64, i64* %PC.i1206
  %9906 = add i64 %9905, 8
  store i64 %9906, i64* %PC.i1206
  %9907 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9907, i64* %RSI.i1207, align 8
  store %struct.Memory* %loadMem_40b43f, %struct.Memory** %MEMORY
  %loadMem_40b447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9909 = getelementptr inbounds %struct.GPR, %struct.GPR* %9908, i32 0, i32 33
  %9910 = getelementptr inbounds %struct.Reg, %struct.Reg* %9909, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %9910 to i64*
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 9
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %RSI.i1205 = bitcast %union.anon* %9913 to i64*
  %9914 = load i64, i64* %RSI.i1205
  %9915 = add i64 %9914, 13112
  %9916 = load i64, i64* %PC.i1204
  %9917 = add i64 %9916, 6
  store i64 %9917, i64* %PC.i1204
  %9918 = inttoptr i64 %9915 to i32*
  %9919 = load i32, i32* %9918
  %9920 = zext i32 %9919 to i64
  store i64 %9920, i64* %RSI.i1205, align 8
  store %struct.Memory* %loadMem_40b447, %struct.Memory** %MEMORY
  %loadMem1_40b44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9922 = getelementptr inbounds %struct.GPR, %struct.GPR* %9921, i32 0, i32 33
  %9923 = getelementptr inbounds %struct.Reg, %struct.Reg* %9922, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %9923 to i64*
  %9924 = load i64, i64* %PC.i1203
  %9925 = add i64 %9924, 433411
  %9926 = load i64, i64* %PC.i1203
  %9927 = add i64 %9926, 5
  %9928 = load i64, i64* %PC.i1203
  %9929 = add i64 %9928, 5
  store i64 %9929, i64* %PC.i1203
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9931 = load i64, i64* %9930, align 8
  %9932 = add i64 %9931, -8
  %9933 = inttoptr i64 %9932 to i64*
  store i64 %9927, i64* %9933
  store i64 %9932, i64* %9930, align 8
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9925, i64* %9934, align 8
  store %struct.Memory* %loadMem1_40b44d, %struct.Memory** %MEMORY
  %loadMem2_40b44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b44d = load i64, i64* %3
  %call2_40b44d = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b44d, %struct.Memory* %loadMem2_40b44d)
  store %struct.Memory* %call2_40b44d, %struct.Memory** %MEMORY
  %loadMem_40b452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9936 = getelementptr inbounds %struct.GPR, %struct.GPR* %9935, i32 0, i32 33
  %9937 = getelementptr inbounds %struct.Reg, %struct.Reg* %9936, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %9937 to i64*
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9939 = getelementptr inbounds %struct.GPR, %struct.GPR* %9938, i32 0, i32 17
  %9940 = getelementptr inbounds %struct.Reg, %struct.Reg* %9939, i32 0, i32 0
  %R8.i1202 = bitcast %union.anon* %9940 to i64*
  %9941 = load i64, i64* %PC.i1201
  %9942 = add i64 %9941, 8
  store i64 %9942, i64* %PC.i1201
  %9943 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9943, i64* %R8.i1202, align 8
  store %struct.Memory* %loadMem_40b452, %struct.Memory** %MEMORY
  %loadMem_40b45a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9945 = getelementptr inbounds %struct.GPR, %struct.GPR* %9944, i32 0, i32 33
  %9946 = getelementptr inbounds %struct.Reg, %struct.Reg* %9945, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %9946 to i64*
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9948 = getelementptr inbounds %struct.GPR, %struct.GPR* %9947, i32 0, i32 1
  %9949 = getelementptr inbounds %struct.Reg, %struct.Reg* %9948, i32 0, i32 0
  %EAX.i1199 = bitcast %union.anon* %9949 to i32*
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9951 = getelementptr inbounds %struct.GPR, %struct.GPR* %9950, i32 0, i32 17
  %9952 = getelementptr inbounds %struct.Reg, %struct.Reg* %9951, i32 0, i32 0
  %R8.i1200 = bitcast %union.anon* %9952 to i64*
  %9953 = load i64, i64* %R8.i1200
  %9954 = add i64 %9953, 13112
  %9955 = load i32, i32* %EAX.i1199
  %9956 = zext i32 %9955 to i64
  %9957 = load i64, i64* %PC.i1198
  %9958 = add i64 %9957, 7
  store i64 %9958, i64* %PC.i1198
  %9959 = inttoptr i64 %9954 to i32*
  store i32 %9955, i32* %9959
  store %struct.Memory* %loadMem_40b45a, %struct.Memory** %MEMORY
  br label %block_.L_40b461

block_.L_40b461:                                  ; preds = %routine_sarl__cl___edi.exit1211, %routine_sarl__cl___edi.exit1281
  %loadMem_40b461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9961 = getelementptr inbounds %struct.GPR, %struct.GPR* %9960, i32 0, i32 33
  %9962 = getelementptr inbounds %struct.Reg, %struct.Reg* %9961, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %9962 to i64*
  %9963 = load i64, i64* %PC.i1197
  %9964 = add i64 %9963, 245
  %9965 = load i64, i64* %PC.i1197
  %9966 = add i64 %9965, 5
  store i64 %9966, i64* %PC.i1197
  %9967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9964, i64* %9967, align 8
  store %struct.Memory* %loadMem_40b461, %struct.Memory** %MEMORY
  br label %block_.L_40b556

block_.L_40b466:                                  ; preds = %block_.L_40b35c
  %loadMem_40b466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 33
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %9970 to i64*
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9972 = getelementptr inbounds %struct.GPR, %struct.GPR* %9971, i32 0, i32 15
  %9973 = getelementptr inbounds %struct.Reg, %struct.Reg* %9972, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %9973 to i64*
  %9974 = load i64, i64* %RBP.i1196
  %9975 = sub i64 %9974, 100
  %9976 = load i64, i64* %PC.i1195
  %9977 = add i64 %9976, 4
  store i64 %9977, i64* %PC.i1195
  %9978 = inttoptr i64 %9975 to i32*
  %9979 = load i32, i32* %9978
  %9980 = sub i32 %9979, 1
  %9981 = icmp ult i32 %9979, 1
  %9982 = zext i1 %9981 to i8
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9982, i8* %9983, align 1
  %9984 = and i32 %9980, 255
  %9985 = call i32 @llvm.ctpop.i32(i32 %9984)
  %9986 = trunc i32 %9985 to i8
  %9987 = and i8 %9986, 1
  %9988 = xor i8 %9987, 1
  %9989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9988, i8* %9989, align 1
  %9990 = xor i32 %9979, 1
  %9991 = xor i32 %9990, %9980
  %9992 = lshr i32 %9991, 4
  %9993 = trunc i32 %9992 to i8
  %9994 = and i8 %9993, 1
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9994, i8* %9995, align 1
  %9996 = icmp eq i32 %9980, 0
  %9997 = zext i1 %9996 to i8
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9997, i8* %9998, align 1
  %9999 = lshr i32 %9980, 31
  %10000 = trunc i32 %9999 to i8
  %10001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10000, i8* %10001, align 1
  %10002 = lshr i32 %9979, 31
  %10003 = xor i32 %9999, %10002
  %10004 = add i32 %10003, %10002
  %10005 = icmp eq i32 %10004, 2
  %10006 = zext i1 %10005 to i8
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10006, i8* %10007, align 1
  store %struct.Memory* %loadMem_40b466, %struct.Memory** %MEMORY
  %loadMem_40b46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10009 = getelementptr inbounds %struct.GPR, %struct.GPR* %10008, i32 0, i32 33
  %10010 = getelementptr inbounds %struct.Reg, %struct.Reg* %10009, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %10010 to i64*
  %10011 = load i64, i64* %PC.i1194
  %10012 = add i64 %10011, 121
  %10013 = load i64, i64* %PC.i1194
  %10014 = add i64 %10013, 6
  %10015 = load i64, i64* %PC.i1194
  %10016 = add i64 %10015, 6
  store i64 %10016, i64* %PC.i1194
  %10017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10018 = load i8, i8* %10017, align 1
  %10019 = icmp eq i8 %10018, 0
  %10020 = zext i1 %10019 to i8
  store i8 %10020, i8* %BRANCH_TAKEN, align 1
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10022 = select i1 %10019, i64 %10012, i64 %10014
  store i64 %10022, i64* %10021, align 8
  store %struct.Memory* %loadMem_40b46a, %struct.Memory** %MEMORY
  %loadBr_40b46a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b46a = icmp eq i8 %loadBr_40b46a, 1
  br i1 %cmpBr_40b46a, label %block_.L_40b4e3, label %block_40b470

block_40b470:                                     ; preds = %block_.L_40b466
  %loadMem_40b470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10024 = getelementptr inbounds %struct.GPR, %struct.GPR* %10023, i32 0, i32 33
  %10025 = getelementptr inbounds %struct.Reg, %struct.Reg* %10024, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %10025 to i64*
  %10026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10027 = getelementptr inbounds %struct.GPR, %struct.GPR* %10026, i32 0, i32 1
  %10028 = getelementptr inbounds %struct.Reg, %struct.Reg* %10027, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %10028 to i64*
  %10029 = load i64, i64* %PC.i1192
  %10030 = add i64 %10029, 10
  store i64 %10030, i64* %PC.i1192
  store i64 ptrtoint (%G__0x70d1b0_type* @G__0x70d1b0 to i64), i64* %RAX.i1193, align 8
  store %struct.Memory* %loadMem_40b470, %struct.Memory** %MEMORY
  %loadMem_40b47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 33
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 5
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RCX.i1190 = bitcast %union.anon* %10036 to i64*
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10038 = getelementptr inbounds %struct.GPR, %struct.GPR* %10037, i32 0, i32 15
  %10039 = getelementptr inbounds %struct.Reg, %struct.Reg* %10038, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %10039 to i64*
  %10040 = load i64, i64* %RBP.i1191
  %10041 = sub i64 %10040, 72
  %10042 = load i64, i64* %PC.i1189
  %10043 = add i64 %10042, 3
  store i64 %10043, i64* %PC.i1189
  %10044 = inttoptr i64 %10041 to i32*
  %10045 = load i32, i32* %10044
  %10046 = zext i32 %10045 to i64
  store i64 %10046, i64* %RCX.i1190, align 8
  store %struct.Memory* %loadMem_40b47a, %struct.Memory** %MEMORY
  %loadMem_40b47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 33
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %10049 to i64*
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10051 = getelementptr inbounds %struct.GPR, %struct.GPR* %10050, i32 0, i32 7
  %10052 = getelementptr inbounds %struct.Reg, %struct.Reg* %10051, i32 0, i32 0
  %RDX.i1187 = bitcast %union.anon* %10052 to i64*
  %10053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10054 = getelementptr inbounds %struct.GPR, %struct.GPR* %10053, i32 0, i32 15
  %10055 = getelementptr inbounds %struct.Reg, %struct.Reg* %10054, i32 0, i32 0
  %RBP.i1188 = bitcast %union.anon* %10055 to i64*
  %10056 = load i64, i64* %RBP.i1188
  %10057 = sub i64 %10056, 4
  %10058 = load i64, i64* %PC.i1186
  %10059 = add i64 %10058, 4
  store i64 %10059, i64* %PC.i1186
  %10060 = inttoptr i64 %10057 to i32*
  %10061 = load i32, i32* %10060
  %10062 = sext i32 %10061 to i64
  store i64 %10062, i64* %RDX.i1187, align 8
  store %struct.Memory* %loadMem_40b47d, %struct.Memory** %MEMORY
  %loadMem_40b481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10064 = getelementptr inbounds %struct.GPR, %struct.GPR* %10063, i32 0, i32 33
  %10065 = getelementptr inbounds %struct.Reg, %struct.Reg* %10064, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %10065 to i64*
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10067 = getelementptr inbounds %struct.GPR, %struct.GPR* %10066, i32 0, i32 7
  %10068 = getelementptr inbounds %struct.Reg, %struct.Reg* %10067, i32 0, i32 0
  %RDX.i1185 = bitcast %union.anon* %10068 to i64*
  %10069 = load i64, i64* %RDX.i1185
  %10070 = load i64, i64* %PC.i1184
  %10071 = add i64 %10070, 7
  store i64 %10071, i64* %PC.i1184
  %10072 = sext i64 %10069 to i128
  %10073 = and i128 %10072, -18446744073709551616
  %10074 = zext i64 %10069 to i128
  %10075 = or i128 %10073, %10074
  %10076 = mul i128 384, %10075
  %10077 = trunc i128 %10076 to i64
  store i64 %10077, i64* %RDX.i1185, align 8
  %10078 = sext i64 %10077 to i128
  %10079 = icmp ne i128 %10078, %10076
  %10080 = zext i1 %10079 to i8
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10080, i8* %10081, align 1
  %10082 = trunc i128 %10076 to i32
  %10083 = and i32 %10082, 255
  %10084 = call i32 @llvm.ctpop.i32(i32 %10083)
  %10085 = trunc i32 %10084 to i8
  %10086 = and i8 %10085, 1
  %10087 = xor i8 %10086, 1
  %10088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10087, i8* %10088, align 1
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10089, align 1
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10090, align 1
  %10091 = lshr i64 %10077, 63
  %10092 = trunc i64 %10091 to i8
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10092, i8* %10093, align 1
  %10094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10080, i8* %10094, align 1
  store %struct.Memory* %loadMem_40b481, %struct.Memory** %MEMORY
  %loadMem_40b488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10096 = getelementptr inbounds %struct.GPR, %struct.GPR* %10095, i32 0, i32 33
  %10097 = getelementptr inbounds %struct.Reg, %struct.Reg* %10096, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %10097 to i64*
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10099 = getelementptr inbounds %struct.GPR, %struct.GPR* %10098, i32 0, i32 1
  %10100 = getelementptr inbounds %struct.Reg, %struct.Reg* %10099, i32 0, i32 0
  %RAX.i1182 = bitcast %union.anon* %10100 to i64*
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10102 = getelementptr inbounds %struct.GPR, %struct.GPR* %10101, i32 0, i32 7
  %10103 = getelementptr inbounds %struct.Reg, %struct.Reg* %10102, i32 0, i32 0
  %RDX.i1183 = bitcast %union.anon* %10103 to i64*
  %10104 = load i64, i64* %RAX.i1182
  %10105 = load i64, i64* %RDX.i1183
  %10106 = load i64, i64* %PC.i1181
  %10107 = add i64 %10106, 3
  store i64 %10107, i64* %PC.i1181
  %10108 = add i64 %10105, %10104
  store i64 %10108, i64* %RAX.i1182, align 8
  %10109 = icmp ult i64 %10108, %10104
  %10110 = icmp ult i64 %10108, %10105
  %10111 = or i1 %10109, %10110
  %10112 = zext i1 %10111 to i8
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10112, i8* %10113, align 1
  %10114 = trunc i64 %10108 to i32
  %10115 = and i32 %10114, 255
  %10116 = call i32 @llvm.ctpop.i32(i32 %10115)
  %10117 = trunc i32 %10116 to i8
  %10118 = and i8 %10117, 1
  %10119 = xor i8 %10118, 1
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10119, i8* %10120, align 1
  %10121 = xor i64 %10105, %10104
  %10122 = xor i64 %10121, %10108
  %10123 = lshr i64 %10122, 4
  %10124 = trunc i64 %10123 to i8
  %10125 = and i8 %10124, 1
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10125, i8* %10126, align 1
  %10127 = icmp eq i64 %10108, 0
  %10128 = zext i1 %10127 to i8
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10128, i8* %10129, align 1
  %10130 = lshr i64 %10108, 63
  %10131 = trunc i64 %10130 to i8
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10131, i8* %10132, align 1
  %10133 = lshr i64 %10104, 63
  %10134 = lshr i64 %10105, 63
  %10135 = xor i64 %10130, %10133
  %10136 = xor i64 %10130, %10134
  %10137 = add i64 %10135, %10136
  %10138 = icmp eq i64 %10137, 2
  %10139 = zext i1 %10138 to i8
  %10140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10139, i8* %10140, align 1
  store %struct.Memory* %loadMem_40b488, %struct.Memory** %MEMORY
  %loadMem_40b48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10142 = getelementptr inbounds %struct.GPR, %struct.GPR* %10141, i32 0, i32 33
  %10143 = getelementptr inbounds %struct.Reg, %struct.Reg* %10142, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %10143 to i64*
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 7
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %RDX.i1179 = bitcast %union.anon* %10146 to i64*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 15
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %10149 to i64*
  %10150 = load i64, i64* %RBP.i1180
  %10151 = sub i64 %10150, 108
  %10152 = load i64, i64* %PC.i1178
  %10153 = add i64 %10152, 4
  store i64 %10153, i64* %PC.i1178
  %10154 = inttoptr i64 %10151 to i32*
  %10155 = load i32, i32* %10154
  %10156 = sext i32 %10155 to i64
  store i64 %10156, i64* %RDX.i1179, align 8
  store %struct.Memory* %loadMem_40b48b, %struct.Memory** %MEMORY
  %loadMem_40b48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10158 = getelementptr inbounds %struct.GPR, %struct.GPR* %10157, i32 0, i32 33
  %10159 = getelementptr inbounds %struct.Reg, %struct.Reg* %10158, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %10159 to i64*
  %10160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10161 = getelementptr inbounds %struct.GPR, %struct.GPR* %10160, i32 0, i32 7
  %10162 = getelementptr inbounds %struct.Reg, %struct.Reg* %10161, i32 0, i32 0
  %RDX.i1177 = bitcast %union.anon* %10162 to i64*
  %10163 = load i64, i64* %RDX.i1177
  %10164 = load i64, i64* %PC.i1176
  %10165 = add i64 %10164, 4
  store i64 %10165, i64* %PC.i1176
  %10166 = shl i64 %10163, 5
  %10167 = icmp slt i64 %10166, 0
  %10168 = shl i64 %10166, 1
  store i64 %10168, i64* %RDX.i1177, align 8
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10170 = zext i1 %10167 to i8
  store i8 %10170, i8* %10169, align 1
  %10171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10172 = trunc i64 %10168 to i32
  %10173 = and i32 %10172, 254
  %10174 = call i32 @llvm.ctpop.i32(i32 %10173)
  %10175 = trunc i32 %10174 to i8
  %10176 = and i8 %10175, 1
  %10177 = xor i8 %10176, 1
  store i8 %10177, i8* %10171, align 1
  %10178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10178, align 1
  %10179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10180 = icmp eq i64 %10168, 0
  %10181 = zext i1 %10180 to i8
  store i8 %10181, i8* %10179, align 1
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10183 = lshr i64 %10168, 63
  %10184 = trunc i64 %10183 to i8
  store i8 %10184, i8* %10182, align 1
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10185, align 1
  store %struct.Memory* %loadMem_40b48f, %struct.Memory** %MEMORY
  %loadMem_40b493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10187 = getelementptr inbounds %struct.GPR, %struct.GPR* %10186, i32 0, i32 33
  %10188 = getelementptr inbounds %struct.Reg, %struct.Reg* %10187, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %10188 to i64*
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10190 = getelementptr inbounds %struct.GPR, %struct.GPR* %10189, i32 0, i32 1
  %10191 = getelementptr inbounds %struct.Reg, %struct.Reg* %10190, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %10191 to i64*
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 7
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %RDX.i1175 = bitcast %union.anon* %10194 to i64*
  %10195 = load i64, i64* %RAX.i1174
  %10196 = load i64, i64* %RDX.i1175
  %10197 = load i64, i64* %PC.i1173
  %10198 = add i64 %10197, 3
  store i64 %10198, i64* %PC.i1173
  %10199 = add i64 %10196, %10195
  store i64 %10199, i64* %RAX.i1174, align 8
  %10200 = icmp ult i64 %10199, %10195
  %10201 = icmp ult i64 %10199, %10196
  %10202 = or i1 %10200, %10201
  %10203 = zext i1 %10202 to i8
  %10204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10203, i8* %10204, align 1
  %10205 = trunc i64 %10199 to i32
  %10206 = and i32 %10205, 255
  %10207 = call i32 @llvm.ctpop.i32(i32 %10206)
  %10208 = trunc i32 %10207 to i8
  %10209 = and i8 %10208, 1
  %10210 = xor i8 %10209, 1
  %10211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10210, i8* %10211, align 1
  %10212 = xor i64 %10196, %10195
  %10213 = xor i64 %10212, %10199
  %10214 = lshr i64 %10213, 4
  %10215 = trunc i64 %10214 to i8
  %10216 = and i8 %10215, 1
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10216, i8* %10217, align 1
  %10218 = icmp eq i64 %10199, 0
  %10219 = zext i1 %10218 to i8
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10219, i8* %10220, align 1
  %10221 = lshr i64 %10199, 63
  %10222 = trunc i64 %10221 to i8
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10222, i8* %10223, align 1
  %10224 = lshr i64 %10195, 63
  %10225 = lshr i64 %10196, 63
  %10226 = xor i64 %10221, %10224
  %10227 = xor i64 %10221, %10225
  %10228 = add i64 %10226, %10227
  %10229 = icmp eq i64 %10228, 2
  %10230 = zext i1 %10229 to i8
  %10231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10230, i8* %10231, align 1
  store %struct.Memory* %loadMem_40b493, %struct.Memory** %MEMORY
  %loadMem_40b496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 33
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %10234 to i64*
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 1
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %RAX.i1171 = bitcast %union.anon* %10237 to i64*
  %10238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10239 = getelementptr inbounds %struct.GPR, %struct.GPR* %10238, i32 0, i32 5
  %10240 = getelementptr inbounds %struct.Reg, %struct.Reg* %10239, i32 0, i32 0
  %RCX.i1172 = bitcast %union.anon* %10240 to i64*
  %10241 = load i64, i64* %RCX.i1172
  %10242 = load i64, i64* %RAX.i1171
  %10243 = load i64, i64* %PC.i1170
  %10244 = add i64 %10243, 3
  store i64 %10244, i64* %PC.i1170
  %10245 = inttoptr i64 %10242 to i32*
  %10246 = load i32, i32* %10245
  %10247 = shl i64 %10241, 32
  %10248 = ashr exact i64 %10247, 32
  %10249 = sext i32 %10246 to i64
  %10250 = mul i64 %10249, %10248
  %10251 = trunc i64 %10250 to i32
  %10252 = and i64 %10250, 4294967295
  store i64 %10252, i64* %RCX.i1172, align 8
  %10253 = shl i64 %10250, 32
  %10254 = ashr exact i64 %10253, 32
  %10255 = icmp ne i64 %10254, %10250
  %10256 = zext i1 %10255 to i8
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10256, i8* %10257, align 1
  %10258 = and i32 %10251, 255
  %10259 = call i32 @llvm.ctpop.i32(i32 %10258)
  %10260 = trunc i32 %10259 to i8
  %10261 = and i8 %10260, 1
  %10262 = xor i8 %10261, 1
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10262, i8* %10263, align 1
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10264, align 1
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10265, align 1
  %10266 = lshr i32 %10251, 31
  %10267 = trunc i32 %10266 to i8
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10267, i8* %10268, align 1
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10256, i8* %10269, align 1
  store %struct.Memory* %loadMem_40b496, %struct.Memory** %MEMORY
  %loadMem_40b499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10271 = getelementptr inbounds %struct.GPR, %struct.GPR* %10270, i32 0, i32 33
  %10272 = getelementptr inbounds %struct.Reg, %struct.Reg* %10271, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %10272 to i64*
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10274 = getelementptr inbounds %struct.GPR, %struct.GPR* %10273, i32 0, i32 9
  %10275 = getelementptr inbounds %struct.Reg, %struct.Reg* %10274, i32 0, i32 0
  %RSI.i1168 = bitcast %union.anon* %10275 to i64*
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10277 = getelementptr inbounds %struct.GPR, %struct.GPR* %10276, i32 0, i32 15
  %10278 = getelementptr inbounds %struct.Reg, %struct.Reg* %10277, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %10278 to i64*
  %10279 = load i64, i64* %RBP.i1169
  %10280 = sub i64 %10279, 104
  %10281 = load i64, i64* %PC.i1167
  %10282 = add i64 %10281, 3
  store i64 %10282, i64* %PC.i1167
  %10283 = inttoptr i64 %10280 to i32*
  %10284 = load i32, i32* %10283
  %10285 = zext i32 %10284 to i64
  store i64 %10285, i64* %RSI.i1168, align 8
  store %struct.Memory* %loadMem_40b499, %struct.Memory** %MEMORY
  %loadMem_40b49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 33
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %10288 to i64*
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10290 = getelementptr inbounds %struct.GPR, %struct.GPR* %10289, i32 0, i32 9
  %10291 = getelementptr inbounds %struct.Reg, %struct.Reg* %10290, i32 0, i32 0
  %RSI.i1166 = bitcast %union.anon* %10291 to i64*
  %10292 = load i64, i64* %RSI.i1166
  %10293 = load i64, i64* %PC.i1165
  %10294 = add i64 %10293, 3
  store i64 %10294, i64* %PC.i1165
  %10295 = trunc i64 %10292 to i32
  %10296 = sub i32 %10295, 4
  %10297 = zext i32 %10296 to i64
  store i64 %10297, i64* %RSI.i1166, align 8
  %10298 = icmp ult i32 %10295, 4
  %10299 = zext i1 %10298 to i8
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10299, i8* %10300, align 1
  %10301 = and i32 %10296, 255
  %10302 = call i32 @llvm.ctpop.i32(i32 %10301)
  %10303 = trunc i32 %10302 to i8
  %10304 = and i8 %10303, 1
  %10305 = xor i8 %10304, 1
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10305, i8* %10306, align 1
  %10307 = xor i64 4, %10292
  %10308 = trunc i64 %10307 to i32
  %10309 = xor i32 %10308, %10296
  %10310 = lshr i32 %10309, 4
  %10311 = trunc i32 %10310 to i8
  %10312 = and i8 %10311, 1
  %10313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10312, i8* %10313, align 1
  %10314 = icmp eq i32 %10296, 0
  %10315 = zext i1 %10314 to i8
  %10316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10315, i8* %10316, align 1
  %10317 = lshr i32 %10296, 31
  %10318 = trunc i32 %10317 to i8
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10318, i8* %10319, align 1
  %10320 = lshr i32 %10295, 31
  %10321 = xor i32 %10317, %10320
  %10322 = add i32 %10321, %10320
  %10323 = icmp eq i32 %10322, 2
  %10324 = zext i1 %10323 to i8
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10324, i8* %10325, align 1
  store %struct.Memory* %loadMem_40b49c, %struct.Memory** %MEMORY
  %loadMem_40b49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10327 = getelementptr inbounds %struct.GPR, %struct.GPR* %10326, i32 0, i32 33
  %10328 = getelementptr inbounds %struct.Reg, %struct.Reg* %10327, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %10328 to i64*
  %10329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10330 = getelementptr inbounds %struct.GPR, %struct.GPR* %10329, i32 0, i32 5
  %10331 = getelementptr inbounds %struct.Reg, %struct.Reg* %10330, i32 0, i32 0
  %ECX.i1163 = bitcast %union.anon* %10331 to i32*
  %10332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10333 = getelementptr inbounds %struct.GPR, %struct.GPR* %10332, i32 0, i32 15
  %10334 = getelementptr inbounds %struct.Reg, %struct.Reg* %10333, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %10334 to i64*
  %10335 = load i64, i64* %RBP.i1164
  %10336 = sub i64 %10335, 180
  %10337 = load i32, i32* %ECX.i1163
  %10338 = zext i32 %10337 to i64
  %10339 = load i64, i64* %PC.i1162
  %10340 = add i64 %10339, 6
  store i64 %10340, i64* %PC.i1162
  %10341 = inttoptr i64 %10336 to i32*
  store i32 %10337, i32* %10341
  store %struct.Memory* %loadMem_40b49f, %struct.Memory** %MEMORY
  %loadMem_40b4a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10343 = getelementptr inbounds %struct.GPR, %struct.GPR* %10342, i32 0, i32 33
  %10344 = getelementptr inbounds %struct.Reg, %struct.Reg* %10343, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %10344 to i64*
  %10345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10346 = getelementptr inbounds %struct.GPR, %struct.GPR* %10345, i32 0, i32 9
  %10347 = getelementptr inbounds %struct.Reg, %struct.Reg* %10346, i32 0, i32 0
  %ESI.i1160 = bitcast %union.anon* %10347 to i32*
  %10348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10349 = getelementptr inbounds %struct.GPR, %struct.GPR* %10348, i32 0, i32 5
  %10350 = getelementptr inbounds %struct.Reg, %struct.Reg* %10349, i32 0, i32 0
  %RCX.i1161 = bitcast %union.anon* %10350 to i64*
  %10351 = load i32, i32* %ESI.i1160
  %10352 = zext i32 %10351 to i64
  %10353 = load i64, i64* %PC.i1159
  %10354 = add i64 %10353, 2
  store i64 %10354, i64* %PC.i1159
  %10355 = and i64 %10352, 4294967295
  store i64 %10355, i64* %RCX.i1161, align 8
  store %struct.Memory* %loadMem_40b4a5, %struct.Memory** %MEMORY
  %loadMem_40b4a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10357 = getelementptr inbounds %struct.GPR, %struct.GPR* %10356, i32 0, i32 33
  %10358 = getelementptr inbounds %struct.Reg, %struct.Reg* %10357, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %10358 to i64*
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10360 = getelementptr inbounds %struct.GPR, %struct.GPR* %10359, i32 0, i32 9
  %10361 = getelementptr inbounds %struct.Reg, %struct.Reg* %10360, i32 0, i32 0
  %RSI.i1157 = bitcast %union.anon* %10361 to i64*
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 15
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %10364 to i64*
  %10365 = load i64, i64* %RBP.i1158
  %10366 = sub i64 %10365, 180
  %10367 = load i64, i64* %PC.i1156
  %10368 = add i64 %10367, 6
  store i64 %10368, i64* %PC.i1156
  %10369 = inttoptr i64 %10366 to i32*
  %10370 = load i32, i32* %10369
  %10371 = zext i32 %10370 to i64
  store i64 %10371, i64* %RSI.i1157, align 8
  store %struct.Memory* %loadMem_40b4a7, %struct.Memory** %MEMORY
  %loadMem_40b4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10373 = getelementptr inbounds %struct.GPR, %struct.GPR* %10372, i32 0, i32 33
  %10374 = getelementptr inbounds %struct.Reg, %struct.Reg* %10373, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %10374 to i64*
  %10375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10376 = getelementptr inbounds %struct.GPR, %struct.GPR* %10375, i32 0, i32 5
  %10377 = getelementptr inbounds %struct.Reg, %struct.Reg* %10376, i32 0, i32 0
  %10378 = bitcast %union.anon* %10377 to %struct.anon.2*
  %CL.i1153 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10378, i32 0, i32 0
  %10379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10380 = getelementptr inbounds %struct.GPR, %struct.GPR* %10379, i32 0, i32 9
  %10381 = getelementptr inbounds %struct.Reg, %struct.Reg* %10380, i32 0, i32 0
  %RSI.i1154 = bitcast %union.anon* %10381 to i64*
  %10382 = load i64, i64* %RSI.i1154
  %10383 = load i8, i8* %CL.i1153
  %10384 = zext i8 %10383 to i64
  %10385 = load i64, i64* %PC.i1152
  %10386 = add i64 %10385, 2
  store i64 %10386, i64* %PC.i1152
  %10387 = trunc i64 %10384 to i5
  switch i5 %10387, label %10394 [
    i5 0, label %routine_shll__cl___esi.exit1155
    i5 1, label %10388
  ]

; <label>:10388:                                  ; preds = %block_40b470
  %10389 = trunc i64 %10382 to i32
  %10390 = shl i32 %10389, 1
  %10391 = icmp slt i32 %10389, 0
  %10392 = icmp slt i32 %10390, 0
  %10393 = xor i1 %10391, %10392
  br label %10403

; <label>:10394:                                  ; preds = %block_40b470
  %10395 = and i64 %10384, 31
  %10396 = add i64 %10395, 4294967295
  %10397 = and i64 %10382, 4294967295
  %10398 = and i64 %10396, 4294967295
  %10399 = shl i64 %10397, %10398
  %10400 = trunc i64 %10399 to i32
  %10401 = icmp slt i32 %10400, 0
  %10402 = shl i32 %10400, 1
  br label %10403

; <label>:10403:                                  ; preds = %10394, %10388
  %10404 = phi i1 [ %10391, %10388 ], [ %10401, %10394 ]
  %10405 = phi i1 [ %10393, %10388 ], [ false, %10394 ]
  %10406 = phi i32 [ %10390, %10388 ], [ %10402, %10394 ]
  %10407 = zext i32 %10406 to i64
  store i64 %10407, i64* %RSI.i1154, align 8
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10409 = zext i1 %10404 to i8
  store i8 %10409, i8* %10408, align 1
  %10410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10411 = and i32 %10406, 254
  %10412 = call i32 @llvm.ctpop.i32(i32 %10411)
  %10413 = trunc i32 %10412 to i8
  %10414 = and i8 %10413, 1
  %10415 = xor i8 %10414, 1
  store i8 %10415, i8* %10410, align 1
  %10416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10416, align 1
  %10417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10418 = icmp eq i32 %10406, 0
  %10419 = zext i1 %10418 to i8
  store i8 %10419, i8* %10417, align 1
  %10420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10421 = lshr i32 %10406, 31
  %10422 = trunc i32 %10421 to i8
  store i8 %10422, i8* %10420, align 1
  %10423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10424 = zext i1 %10405 to i8
  store i8 %10424, i8* %10423, align 1
  br label %routine_shll__cl___esi.exit1155

routine_shll__cl___esi.exit1155:                  ; preds = %block_40b470, %10403
  store %struct.Memory* %loadMem_40b4ad, %struct.Memory** %MEMORY
  %loadMem_40b4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %10425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10426 = getelementptr inbounds %struct.GPR, %struct.GPR* %10425, i32 0, i32 33
  %10427 = getelementptr inbounds %struct.Reg, %struct.Reg* %10426, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %10427 to i64*
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10429 = getelementptr inbounds %struct.GPR, %struct.GPR* %10428, i32 0, i32 1
  %10430 = getelementptr inbounds %struct.Reg, %struct.Reg* %10429, i32 0, i32 0
  %RAX.i1151 = bitcast %union.anon* %10430 to i64*
  %10431 = load i64, i64* %PC.i1150
  %10432 = add i64 %10431, 8
  store i64 %10432, i64* %PC.i1150
  %10433 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10433, i64* %RAX.i1151, align 8
  store %struct.Memory* %loadMem_40b4af, %struct.Memory** %MEMORY
  %loadMem_40b4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10435 = getelementptr inbounds %struct.GPR, %struct.GPR* %10434, i32 0, i32 33
  %10436 = getelementptr inbounds %struct.Reg, %struct.Reg* %10435, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %10436 to i64*
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10438 = getelementptr inbounds %struct.GPR, %struct.GPR* %10437, i32 0, i32 1
  %10439 = getelementptr inbounds %struct.Reg, %struct.Reg* %10438, i32 0, i32 0
  %RAX.i1148 = bitcast %union.anon* %10439 to i64*
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 11
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %RDI.i1149 = bitcast %union.anon* %10442 to i64*
  %10443 = load i64, i64* %RAX.i1148
  %10444 = add i64 %10443, 13112
  %10445 = load i64, i64* %PC.i1147
  %10446 = add i64 %10445, 6
  store i64 %10446, i64* %PC.i1147
  %10447 = inttoptr i64 %10444 to i32*
  %10448 = load i32, i32* %10447
  %10449 = zext i32 %10448 to i64
  store i64 %10449, i64* %RDI.i1149, align 8
  store %struct.Memory* %loadMem_40b4b7, %struct.Memory** %MEMORY
  %loadMem_40b4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10451 = getelementptr inbounds %struct.GPR, %struct.GPR* %10450, i32 0, i32 33
  %10452 = getelementptr inbounds %struct.Reg, %struct.Reg* %10451, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %10452 to i64*
  %10453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10454 = getelementptr inbounds %struct.GPR, %struct.GPR* %10453, i32 0, i32 11
  %10455 = getelementptr inbounds %struct.Reg, %struct.Reg* %10454, i32 0, i32 0
  %EDI.i1145 = bitcast %union.anon* %10455 to i32*
  %10456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10457 = getelementptr inbounds %struct.GPR, %struct.GPR* %10456, i32 0, i32 15
  %10458 = getelementptr inbounds %struct.Reg, %struct.Reg* %10457, i32 0, i32 0
  %RBP.i1146 = bitcast %union.anon* %10458 to i64*
  %10459 = load i64, i64* %RBP.i1146
  %10460 = sub i64 %10459, 184
  %10461 = load i32, i32* %EDI.i1145
  %10462 = zext i32 %10461 to i64
  %10463 = load i64, i64* %PC.i1144
  %10464 = add i64 %10463, 6
  store i64 %10464, i64* %PC.i1144
  %10465 = inttoptr i64 %10460 to i32*
  store i32 %10461, i32* %10465
  store %struct.Memory* %loadMem_40b4bd, %struct.Memory** %MEMORY
  %loadMem_40b4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10467 = getelementptr inbounds %struct.GPR, %struct.GPR* %10466, i32 0, i32 33
  %10468 = getelementptr inbounds %struct.Reg, %struct.Reg* %10467, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %10468 to i64*
  %10469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10470 = getelementptr inbounds %struct.GPR, %struct.GPR* %10469, i32 0, i32 9
  %10471 = getelementptr inbounds %struct.Reg, %struct.Reg* %10470, i32 0, i32 0
  %ESI.i1142 = bitcast %union.anon* %10471 to i32*
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10473 = getelementptr inbounds %struct.GPR, %struct.GPR* %10472, i32 0, i32 11
  %10474 = getelementptr inbounds %struct.Reg, %struct.Reg* %10473, i32 0, i32 0
  %RDI.i1143 = bitcast %union.anon* %10474 to i64*
  %10475 = load i32, i32* %ESI.i1142
  %10476 = zext i32 %10475 to i64
  %10477 = load i64, i64* %PC.i1141
  %10478 = add i64 %10477, 2
  store i64 %10478, i64* %PC.i1141
  %10479 = and i64 %10476, 4294967295
  store i64 %10479, i64* %RDI.i1143, align 8
  store %struct.Memory* %loadMem_40b4c3, %struct.Memory** %MEMORY
  %loadMem_40b4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10481 = getelementptr inbounds %struct.GPR, %struct.GPR* %10480, i32 0, i32 33
  %10482 = getelementptr inbounds %struct.Reg, %struct.Reg* %10481, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %10482 to i64*
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 9
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %RSI.i1139 = bitcast %union.anon* %10485 to i64*
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 15
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %RBP.i1140 = bitcast %union.anon* %10488 to i64*
  %10489 = load i64, i64* %RBP.i1140
  %10490 = sub i64 %10489, 184
  %10491 = load i64, i64* %PC.i1138
  %10492 = add i64 %10491, 6
  store i64 %10492, i64* %PC.i1138
  %10493 = inttoptr i64 %10490 to i32*
  %10494 = load i32, i32* %10493
  %10495 = zext i32 %10494 to i64
  store i64 %10495, i64* %RSI.i1139, align 8
  store %struct.Memory* %loadMem_40b4c5, %struct.Memory** %MEMORY
  %loadMem1_40b4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10497 = getelementptr inbounds %struct.GPR, %struct.GPR* %10496, i32 0, i32 33
  %10498 = getelementptr inbounds %struct.Reg, %struct.Reg* %10497, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %10498 to i64*
  %10499 = load i64, i64* %PC.i1137
  %10500 = add i64 %10499, 433285
  %10501 = load i64, i64* %PC.i1137
  %10502 = add i64 %10501, 5
  %10503 = load i64, i64* %PC.i1137
  %10504 = add i64 %10503, 5
  store i64 %10504, i64* %PC.i1137
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10506 = load i64, i64* %10505, align 8
  %10507 = add i64 %10506, -8
  %10508 = inttoptr i64 %10507 to i64*
  store i64 %10502, i64* %10508
  store i64 %10507, i64* %10505, align 8
  %10509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10500, i64* %10509, align 8
  store %struct.Memory* %loadMem1_40b4cb, %struct.Memory** %MEMORY
  %loadMem2_40b4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b4cb = load i64, i64* %3
  %call2_40b4cb = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b4cb, %struct.Memory* %loadMem2_40b4cb)
  store %struct.Memory* %call2_40b4cb, %struct.Memory** %MEMORY
  %loadMem_40b4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10511 = getelementptr inbounds %struct.GPR, %struct.GPR* %10510, i32 0, i32 33
  %10512 = getelementptr inbounds %struct.Reg, %struct.Reg* %10511, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %10512 to i64*
  %10513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10514 = getelementptr inbounds %struct.GPR, %struct.GPR* %10513, i32 0, i32 7
  %10515 = getelementptr inbounds %struct.Reg, %struct.Reg* %10514, i32 0, i32 0
  %RDX.i1136 = bitcast %union.anon* %10515 to i64*
  %10516 = load i64, i64* %PC.i1135
  %10517 = add i64 %10516, 8
  store i64 %10517, i64* %PC.i1135
  %10518 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10518, i64* %RDX.i1136, align 8
  store %struct.Memory* %loadMem_40b4d0, %struct.Memory** %MEMORY
  %loadMem_40b4d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 33
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %10521 to i64*
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10523 = getelementptr inbounds %struct.GPR, %struct.GPR* %10522, i32 0, i32 1
  %10524 = getelementptr inbounds %struct.Reg, %struct.Reg* %10523, i32 0, i32 0
  %EAX.i1133 = bitcast %union.anon* %10524 to i32*
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10526 = getelementptr inbounds %struct.GPR, %struct.GPR* %10525, i32 0, i32 7
  %10527 = getelementptr inbounds %struct.Reg, %struct.Reg* %10526, i32 0, i32 0
  %RDX.i1134 = bitcast %union.anon* %10527 to i64*
  %10528 = load i64, i64* %RDX.i1134
  %10529 = add i64 %10528, 13112
  %10530 = load i32, i32* %EAX.i1133
  %10531 = zext i32 %10530 to i64
  %10532 = load i64, i64* %PC.i1132
  %10533 = add i64 %10532, 6
  store i64 %10533, i64* %PC.i1132
  %10534 = inttoptr i64 %10529 to i32*
  store i32 %10530, i32* %10534
  store %struct.Memory* %loadMem_40b4d8, %struct.Memory** %MEMORY
  %loadMem_40b4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10536 = getelementptr inbounds %struct.GPR, %struct.GPR* %10535, i32 0, i32 33
  %10537 = getelementptr inbounds %struct.Reg, %struct.Reg* %10536, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %10537 to i64*
  %10538 = load i64, i64* %PC.i1131
  %10539 = add i64 %10538, 115
  %10540 = load i64, i64* %PC.i1131
  %10541 = add i64 %10540, 5
  store i64 %10541, i64* %PC.i1131
  %10542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10539, i64* %10542, align 8
  store %struct.Memory* %loadMem_40b4de, %struct.Memory** %MEMORY
  br label %block_.L_40b551

block_.L_40b4e3:                                  ; preds = %block_.L_40b466
  %loadMem_40b4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 33
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %10545 to i64*
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10547 = getelementptr inbounds %struct.GPR, %struct.GPR* %10546, i32 0, i32 1
  %10548 = getelementptr inbounds %struct.Reg, %struct.Reg* %10547, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %10548 to i64*
  %10549 = load i64, i64* %PC.i1129
  %10550 = add i64 %10549, 10
  store i64 %10550, i64* %PC.i1129
  store i64 ptrtoint (%G__0x723b20_type* @G__0x723b20 to i64), i64* %RAX.i1130, align 8
  store %struct.Memory* %loadMem_40b4e3, %struct.Memory** %MEMORY
  %loadMem_40b4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10552 = getelementptr inbounds %struct.GPR, %struct.GPR* %10551, i32 0, i32 33
  %10553 = getelementptr inbounds %struct.Reg, %struct.Reg* %10552, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %10553 to i64*
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10555 = getelementptr inbounds %struct.GPR, %struct.GPR* %10554, i32 0, i32 5
  %10556 = getelementptr inbounds %struct.Reg, %struct.Reg* %10555, i32 0, i32 0
  %RCX.i1127 = bitcast %union.anon* %10556 to i64*
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10558 = getelementptr inbounds %struct.GPR, %struct.GPR* %10557, i32 0, i32 15
  %10559 = getelementptr inbounds %struct.Reg, %struct.Reg* %10558, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %10559 to i64*
  %10560 = load i64, i64* %RBP.i1128
  %10561 = sub i64 %10560, 72
  %10562 = load i64, i64* %PC.i1126
  %10563 = add i64 %10562, 3
  store i64 %10563, i64* %PC.i1126
  %10564 = inttoptr i64 %10561 to i32*
  %10565 = load i32, i32* %10564
  %10566 = zext i32 %10565 to i64
  store i64 %10566, i64* %RCX.i1127, align 8
  store %struct.Memory* %loadMem_40b4ed, %struct.Memory** %MEMORY
  %loadMem_40b4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10568 = getelementptr inbounds %struct.GPR, %struct.GPR* %10567, i32 0, i32 33
  %10569 = getelementptr inbounds %struct.Reg, %struct.Reg* %10568, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %10569 to i64*
  %10570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10571 = getelementptr inbounds %struct.GPR, %struct.GPR* %10570, i32 0, i32 7
  %10572 = getelementptr inbounds %struct.Reg, %struct.Reg* %10571, i32 0, i32 0
  %RDX.i1124 = bitcast %union.anon* %10572 to i64*
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10574 = getelementptr inbounds %struct.GPR, %struct.GPR* %10573, i32 0, i32 15
  %10575 = getelementptr inbounds %struct.Reg, %struct.Reg* %10574, i32 0, i32 0
  %RBP.i1125 = bitcast %union.anon* %10575 to i64*
  %10576 = load i64, i64* %RBP.i1125
  %10577 = sub i64 %10576, 4
  %10578 = load i64, i64* %PC.i1123
  %10579 = add i64 %10578, 4
  store i64 %10579, i64* %PC.i1123
  %10580 = inttoptr i64 %10577 to i32*
  %10581 = load i32, i32* %10580
  %10582 = sext i32 %10581 to i64
  store i64 %10582, i64* %RDX.i1124, align 8
  store %struct.Memory* %loadMem_40b4f0, %struct.Memory** %MEMORY
  %loadMem_40b4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10584 = getelementptr inbounds %struct.GPR, %struct.GPR* %10583, i32 0, i32 33
  %10585 = getelementptr inbounds %struct.Reg, %struct.Reg* %10584, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %10585 to i64*
  %10586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10587 = getelementptr inbounds %struct.GPR, %struct.GPR* %10586, i32 0, i32 7
  %10588 = getelementptr inbounds %struct.Reg, %struct.Reg* %10587, i32 0, i32 0
  %RDX.i1122 = bitcast %union.anon* %10588 to i64*
  %10589 = load i64, i64* %RDX.i1122
  %10590 = load i64, i64* %PC.i1121
  %10591 = add i64 %10590, 7
  store i64 %10591, i64* %PC.i1121
  %10592 = sext i64 %10589 to i128
  %10593 = and i128 %10592, -18446744073709551616
  %10594 = zext i64 %10589 to i128
  %10595 = or i128 %10593, %10594
  %10596 = mul i128 384, %10595
  %10597 = trunc i128 %10596 to i64
  store i64 %10597, i64* %RDX.i1122, align 8
  %10598 = sext i64 %10597 to i128
  %10599 = icmp ne i128 %10598, %10596
  %10600 = zext i1 %10599 to i8
  %10601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10600, i8* %10601, align 1
  %10602 = trunc i128 %10596 to i32
  %10603 = and i32 %10602, 255
  %10604 = call i32 @llvm.ctpop.i32(i32 %10603)
  %10605 = trunc i32 %10604 to i8
  %10606 = and i8 %10605, 1
  %10607 = xor i8 %10606, 1
  %10608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10607, i8* %10608, align 1
  %10609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10609, align 1
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10610, align 1
  %10611 = lshr i64 %10597, 63
  %10612 = trunc i64 %10611 to i8
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10612, i8* %10613, align 1
  %10614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10600, i8* %10614, align 1
  store %struct.Memory* %loadMem_40b4f4, %struct.Memory** %MEMORY
  %loadMem_40b4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10616 = getelementptr inbounds %struct.GPR, %struct.GPR* %10615, i32 0, i32 33
  %10617 = getelementptr inbounds %struct.Reg, %struct.Reg* %10616, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %10617 to i64*
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10619 = getelementptr inbounds %struct.GPR, %struct.GPR* %10618, i32 0, i32 1
  %10620 = getelementptr inbounds %struct.Reg, %struct.Reg* %10619, i32 0, i32 0
  %RAX.i1119 = bitcast %union.anon* %10620 to i64*
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10622 = getelementptr inbounds %struct.GPR, %struct.GPR* %10621, i32 0, i32 7
  %10623 = getelementptr inbounds %struct.Reg, %struct.Reg* %10622, i32 0, i32 0
  %RDX.i1120 = bitcast %union.anon* %10623 to i64*
  %10624 = load i64, i64* %RAX.i1119
  %10625 = load i64, i64* %RDX.i1120
  %10626 = load i64, i64* %PC.i1118
  %10627 = add i64 %10626, 3
  store i64 %10627, i64* %PC.i1118
  %10628 = add i64 %10625, %10624
  store i64 %10628, i64* %RAX.i1119, align 8
  %10629 = icmp ult i64 %10628, %10624
  %10630 = icmp ult i64 %10628, %10625
  %10631 = or i1 %10629, %10630
  %10632 = zext i1 %10631 to i8
  %10633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10632, i8* %10633, align 1
  %10634 = trunc i64 %10628 to i32
  %10635 = and i32 %10634, 255
  %10636 = call i32 @llvm.ctpop.i32(i32 %10635)
  %10637 = trunc i32 %10636 to i8
  %10638 = and i8 %10637, 1
  %10639 = xor i8 %10638, 1
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10639, i8* %10640, align 1
  %10641 = xor i64 %10625, %10624
  %10642 = xor i64 %10641, %10628
  %10643 = lshr i64 %10642, 4
  %10644 = trunc i64 %10643 to i8
  %10645 = and i8 %10644, 1
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10645, i8* %10646, align 1
  %10647 = icmp eq i64 %10628, 0
  %10648 = zext i1 %10647 to i8
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10648, i8* %10649, align 1
  %10650 = lshr i64 %10628, 63
  %10651 = trunc i64 %10650 to i8
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10651, i8* %10652, align 1
  %10653 = lshr i64 %10624, 63
  %10654 = lshr i64 %10625, 63
  %10655 = xor i64 %10650, %10653
  %10656 = xor i64 %10650, %10654
  %10657 = add i64 %10655, %10656
  %10658 = icmp eq i64 %10657, 2
  %10659 = zext i1 %10658 to i8
  %10660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10659, i8* %10660, align 1
  store %struct.Memory* %loadMem_40b4fb, %struct.Memory** %MEMORY
  %loadMem_40b4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10662 = getelementptr inbounds %struct.GPR, %struct.GPR* %10661, i32 0, i32 33
  %10663 = getelementptr inbounds %struct.Reg, %struct.Reg* %10662, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %10663 to i64*
  %10664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10665 = getelementptr inbounds %struct.GPR, %struct.GPR* %10664, i32 0, i32 7
  %10666 = getelementptr inbounds %struct.Reg, %struct.Reg* %10665, i32 0, i32 0
  %RDX.i1116 = bitcast %union.anon* %10666 to i64*
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10668 = getelementptr inbounds %struct.GPR, %struct.GPR* %10667, i32 0, i32 15
  %10669 = getelementptr inbounds %struct.Reg, %struct.Reg* %10668, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %10669 to i64*
  %10670 = load i64, i64* %RBP.i1117
  %10671 = sub i64 %10670, 108
  %10672 = load i64, i64* %PC.i1115
  %10673 = add i64 %10672, 4
  store i64 %10673, i64* %PC.i1115
  %10674 = inttoptr i64 %10671 to i32*
  %10675 = load i32, i32* %10674
  %10676 = sext i32 %10675 to i64
  store i64 %10676, i64* %RDX.i1116, align 8
  store %struct.Memory* %loadMem_40b4fe, %struct.Memory** %MEMORY
  %loadMem_40b502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10678 = getelementptr inbounds %struct.GPR, %struct.GPR* %10677, i32 0, i32 33
  %10679 = getelementptr inbounds %struct.Reg, %struct.Reg* %10678, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %10679 to i64*
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10681 = getelementptr inbounds %struct.GPR, %struct.GPR* %10680, i32 0, i32 7
  %10682 = getelementptr inbounds %struct.Reg, %struct.Reg* %10681, i32 0, i32 0
  %RDX.i1114 = bitcast %union.anon* %10682 to i64*
  %10683 = load i64, i64* %RDX.i1114
  %10684 = load i64, i64* %PC.i1113
  %10685 = add i64 %10684, 4
  store i64 %10685, i64* %PC.i1113
  %10686 = shl i64 %10683, 5
  %10687 = icmp slt i64 %10686, 0
  %10688 = shl i64 %10686, 1
  store i64 %10688, i64* %RDX.i1114, align 8
  %10689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10690 = zext i1 %10687 to i8
  store i8 %10690, i8* %10689, align 1
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10692 = trunc i64 %10688 to i32
  %10693 = and i32 %10692, 254
  %10694 = call i32 @llvm.ctpop.i32(i32 %10693)
  %10695 = trunc i32 %10694 to i8
  %10696 = and i8 %10695, 1
  %10697 = xor i8 %10696, 1
  store i8 %10697, i8* %10691, align 1
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10698, align 1
  %10699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10700 = icmp eq i64 %10688, 0
  %10701 = zext i1 %10700 to i8
  store i8 %10701, i8* %10699, align 1
  %10702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10703 = lshr i64 %10688, 63
  %10704 = trunc i64 %10703 to i8
  store i8 %10704, i8* %10702, align 1
  %10705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10705, align 1
  store %struct.Memory* %loadMem_40b502, %struct.Memory** %MEMORY
  %loadMem_40b506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10707 = getelementptr inbounds %struct.GPR, %struct.GPR* %10706, i32 0, i32 33
  %10708 = getelementptr inbounds %struct.Reg, %struct.Reg* %10707, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %10708 to i64*
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10710 = getelementptr inbounds %struct.GPR, %struct.GPR* %10709, i32 0, i32 1
  %10711 = getelementptr inbounds %struct.Reg, %struct.Reg* %10710, i32 0, i32 0
  %RAX.i1111 = bitcast %union.anon* %10711 to i64*
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10713 = getelementptr inbounds %struct.GPR, %struct.GPR* %10712, i32 0, i32 7
  %10714 = getelementptr inbounds %struct.Reg, %struct.Reg* %10713, i32 0, i32 0
  %RDX.i1112 = bitcast %union.anon* %10714 to i64*
  %10715 = load i64, i64* %RAX.i1111
  %10716 = load i64, i64* %RDX.i1112
  %10717 = load i64, i64* %PC.i1110
  %10718 = add i64 %10717, 3
  store i64 %10718, i64* %PC.i1110
  %10719 = add i64 %10716, %10715
  store i64 %10719, i64* %RAX.i1111, align 8
  %10720 = icmp ult i64 %10719, %10715
  %10721 = icmp ult i64 %10719, %10716
  %10722 = or i1 %10720, %10721
  %10723 = zext i1 %10722 to i8
  %10724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10723, i8* %10724, align 1
  %10725 = trunc i64 %10719 to i32
  %10726 = and i32 %10725, 255
  %10727 = call i32 @llvm.ctpop.i32(i32 %10726)
  %10728 = trunc i32 %10727 to i8
  %10729 = and i8 %10728, 1
  %10730 = xor i8 %10729, 1
  %10731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10730, i8* %10731, align 1
  %10732 = xor i64 %10716, %10715
  %10733 = xor i64 %10732, %10719
  %10734 = lshr i64 %10733, 4
  %10735 = trunc i64 %10734 to i8
  %10736 = and i8 %10735, 1
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10736, i8* %10737, align 1
  %10738 = icmp eq i64 %10719, 0
  %10739 = zext i1 %10738 to i8
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10739, i8* %10740, align 1
  %10741 = lshr i64 %10719, 63
  %10742 = trunc i64 %10741 to i8
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10742, i8* %10743, align 1
  %10744 = lshr i64 %10715, 63
  %10745 = lshr i64 %10716, 63
  %10746 = xor i64 %10741, %10744
  %10747 = xor i64 %10741, %10745
  %10748 = add i64 %10746, %10747
  %10749 = icmp eq i64 %10748, 2
  %10750 = zext i1 %10749 to i8
  %10751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10750, i8* %10751, align 1
  store %struct.Memory* %loadMem_40b506, %struct.Memory** %MEMORY
  %loadMem_40b509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10753 = getelementptr inbounds %struct.GPR, %struct.GPR* %10752, i32 0, i32 33
  %10754 = getelementptr inbounds %struct.Reg, %struct.Reg* %10753, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %10754 to i64*
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10756 = getelementptr inbounds %struct.GPR, %struct.GPR* %10755, i32 0, i32 1
  %10757 = getelementptr inbounds %struct.Reg, %struct.Reg* %10756, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %10757 to i64*
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10759 = getelementptr inbounds %struct.GPR, %struct.GPR* %10758, i32 0, i32 5
  %10760 = getelementptr inbounds %struct.Reg, %struct.Reg* %10759, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %10760 to i64*
  %10761 = load i64, i64* %RCX.i1109
  %10762 = load i64, i64* %RAX.i1108
  %10763 = load i64, i64* %PC.i1107
  %10764 = add i64 %10763, 3
  store i64 %10764, i64* %PC.i1107
  %10765 = inttoptr i64 %10762 to i32*
  %10766 = load i32, i32* %10765
  %10767 = shl i64 %10761, 32
  %10768 = ashr exact i64 %10767, 32
  %10769 = sext i32 %10766 to i64
  %10770 = mul i64 %10769, %10768
  %10771 = trunc i64 %10770 to i32
  %10772 = and i64 %10770, 4294967295
  store i64 %10772, i64* %RCX.i1109, align 8
  %10773 = shl i64 %10770, 32
  %10774 = ashr exact i64 %10773, 32
  %10775 = icmp ne i64 %10774, %10770
  %10776 = zext i1 %10775 to i8
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10776, i8* %10777, align 1
  %10778 = and i32 %10771, 255
  %10779 = call i32 @llvm.ctpop.i32(i32 %10778)
  %10780 = trunc i32 %10779 to i8
  %10781 = and i8 %10780, 1
  %10782 = xor i8 %10781, 1
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10782, i8* %10783, align 1
  %10784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10784, align 1
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10785, align 1
  %10786 = lshr i32 %10771, 31
  %10787 = trunc i32 %10786 to i8
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10787, i8* %10788, align 1
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10776, i8* %10789, align 1
  store %struct.Memory* %loadMem_40b509, %struct.Memory** %MEMORY
  %loadMem_40b50c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10791 = getelementptr inbounds %struct.GPR, %struct.GPR* %10790, i32 0, i32 33
  %10792 = getelementptr inbounds %struct.Reg, %struct.Reg* %10791, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %10792 to i64*
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10794 = getelementptr inbounds %struct.GPR, %struct.GPR* %10793, i32 0, i32 9
  %10795 = getelementptr inbounds %struct.Reg, %struct.Reg* %10794, i32 0, i32 0
  %RSI.i1105 = bitcast %union.anon* %10795 to i64*
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 15
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %10798 to i64*
  %10799 = load i64, i64* %RBP.i1106
  %10800 = sub i64 %10799, 104
  %10801 = load i64, i64* %PC.i1104
  %10802 = add i64 %10801, 3
  store i64 %10802, i64* %PC.i1104
  %10803 = inttoptr i64 %10800 to i32*
  %10804 = load i32, i32* %10803
  %10805 = zext i32 %10804 to i64
  store i64 %10805, i64* %RSI.i1105, align 8
  store %struct.Memory* %loadMem_40b50c, %struct.Memory** %MEMORY
  %loadMem_40b50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10807 = getelementptr inbounds %struct.GPR, %struct.GPR* %10806, i32 0, i32 33
  %10808 = getelementptr inbounds %struct.Reg, %struct.Reg* %10807, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %10808 to i64*
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10810 = getelementptr inbounds %struct.GPR, %struct.GPR* %10809, i32 0, i32 9
  %10811 = getelementptr inbounds %struct.Reg, %struct.Reg* %10810, i32 0, i32 0
  %RSI.i1103 = bitcast %union.anon* %10811 to i64*
  %10812 = load i64, i64* %RSI.i1103
  %10813 = load i64, i64* %PC.i1102
  %10814 = add i64 %10813, 3
  store i64 %10814, i64* %PC.i1102
  %10815 = trunc i64 %10812 to i32
  %10816 = sub i32 %10815, 4
  %10817 = zext i32 %10816 to i64
  store i64 %10817, i64* %RSI.i1103, align 8
  %10818 = icmp ult i32 %10815, 4
  %10819 = zext i1 %10818 to i8
  %10820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10819, i8* %10820, align 1
  %10821 = and i32 %10816, 255
  %10822 = call i32 @llvm.ctpop.i32(i32 %10821)
  %10823 = trunc i32 %10822 to i8
  %10824 = and i8 %10823, 1
  %10825 = xor i8 %10824, 1
  %10826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10825, i8* %10826, align 1
  %10827 = xor i64 4, %10812
  %10828 = trunc i64 %10827 to i32
  %10829 = xor i32 %10828, %10816
  %10830 = lshr i32 %10829, 4
  %10831 = trunc i32 %10830 to i8
  %10832 = and i8 %10831, 1
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10832, i8* %10833, align 1
  %10834 = icmp eq i32 %10816, 0
  %10835 = zext i1 %10834 to i8
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10835, i8* %10836, align 1
  %10837 = lshr i32 %10816, 31
  %10838 = trunc i32 %10837 to i8
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10838, i8* %10839, align 1
  %10840 = lshr i32 %10815, 31
  %10841 = xor i32 %10837, %10840
  %10842 = add i32 %10841, %10840
  %10843 = icmp eq i32 %10842, 2
  %10844 = zext i1 %10843 to i8
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10844, i8* %10845, align 1
  store %struct.Memory* %loadMem_40b50f, %struct.Memory** %MEMORY
  %loadMem_40b512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10847 = getelementptr inbounds %struct.GPR, %struct.GPR* %10846, i32 0, i32 33
  %10848 = getelementptr inbounds %struct.Reg, %struct.Reg* %10847, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %10848 to i64*
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 5
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %ECX.i1100 = bitcast %union.anon* %10851 to i32*
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 15
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %10854 to i64*
  %10855 = load i64, i64* %RBP.i1101
  %10856 = sub i64 %10855, 188
  %10857 = load i32, i32* %ECX.i1100
  %10858 = zext i32 %10857 to i64
  %10859 = load i64, i64* %PC.i1099
  %10860 = add i64 %10859, 6
  store i64 %10860, i64* %PC.i1099
  %10861 = inttoptr i64 %10856 to i32*
  store i32 %10857, i32* %10861
  store %struct.Memory* %loadMem_40b512, %struct.Memory** %MEMORY
  %loadMem_40b518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10863 = getelementptr inbounds %struct.GPR, %struct.GPR* %10862, i32 0, i32 33
  %10864 = getelementptr inbounds %struct.Reg, %struct.Reg* %10863, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %10864 to i64*
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 9
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %ESI.i1097 = bitcast %union.anon* %10867 to i32*
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 5
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %RCX.i1098 = bitcast %union.anon* %10870 to i64*
  %10871 = load i32, i32* %ESI.i1097
  %10872 = zext i32 %10871 to i64
  %10873 = load i64, i64* %PC.i1096
  %10874 = add i64 %10873, 2
  store i64 %10874, i64* %PC.i1096
  %10875 = and i64 %10872, 4294967295
  store i64 %10875, i64* %RCX.i1098, align 8
  store %struct.Memory* %loadMem_40b518, %struct.Memory** %MEMORY
  %loadMem_40b51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 33
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %10878 to i64*
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 9
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %RSI.i1094 = bitcast %union.anon* %10881 to i64*
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 15
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %RBP.i1095 = bitcast %union.anon* %10884 to i64*
  %10885 = load i64, i64* %RBP.i1095
  %10886 = sub i64 %10885, 188
  %10887 = load i64, i64* %PC.i1093
  %10888 = add i64 %10887, 6
  store i64 %10888, i64* %PC.i1093
  %10889 = inttoptr i64 %10886 to i32*
  %10890 = load i32, i32* %10889
  %10891 = zext i32 %10890 to i64
  store i64 %10891, i64* %RSI.i1094, align 8
  store %struct.Memory* %loadMem_40b51a, %struct.Memory** %MEMORY
  %loadMem_40b520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 33
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %10894 to i64*
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10896 = getelementptr inbounds %struct.GPR, %struct.GPR* %10895, i32 0, i32 5
  %10897 = getelementptr inbounds %struct.Reg, %struct.Reg* %10896, i32 0, i32 0
  %10898 = bitcast %union.anon* %10897 to %struct.anon.2*
  %CL.i1090 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10898, i32 0, i32 0
  %10899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10900 = getelementptr inbounds %struct.GPR, %struct.GPR* %10899, i32 0, i32 9
  %10901 = getelementptr inbounds %struct.Reg, %struct.Reg* %10900, i32 0, i32 0
  %RSI.i1091 = bitcast %union.anon* %10901 to i64*
  %10902 = load i64, i64* %RSI.i1091
  %10903 = load i8, i8* %CL.i1090
  %10904 = zext i8 %10903 to i64
  %10905 = load i64, i64* %PC.i1089
  %10906 = add i64 %10905, 2
  store i64 %10906, i64* %PC.i1089
  %10907 = trunc i64 %10904 to i5
  switch i5 %10907, label %10914 [
    i5 0, label %routine_shll__cl___esi.exit1092
    i5 1, label %10908
  ]

; <label>:10908:                                  ; preds = %block_.L_40b4e3
  %10909 = trunc i64 %10902 to i32
  %10910 = shl i32 %10909, 1
  %10911 = icmp slt i32 %10909, 0
  %10912 = icmp slt i32 %10910, 0
  %10913 = xor i1 %10911, %10912
  br label %10923

; <label>:10914:                                  ; preds = %block_.L_40b4e3
  %10915 = and i64 %10904, 31
  %10916 = add i64 %10915, 4294967295
  %10917 = and i64 %10902, 4294967295
  %10918 = and i64 %10916, 4294967295
  %10919 = shl i64 %10917, %10918
  %10920 = trunc i64 %10919 to i32
  %10921 = icmp slt i32 %10920, 0
  %10922 = shl i32 %10920, 1
  br label %10923

; <label>:10923:                                  ; preds = %10914, %10908
  %10924 = phi i1 [ %10911, %10908 ], [ %10921, %10914 ]
  %10925 = phi i1 [ %10913, %10908 ], [ false, %10914 ]
  %10926 = phi i32 [ %10910, %10908 ], [ %10922, %10914 ]
  %10927 = zext i32 %10926 to i64
  store i64 %10927, i64* %RSI.i1091, align 8
  %10928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10929 = zext i1 %10924 to i8
  store i8 %10929, i8* %10928, align 1
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10931 = and i32 %10926, 254
  %10932 = call i32 @llvm.ctpop.i32(i32 %10931)
  %10933 = trunc i32 %10932 to i8
  %10934 = and i8 %10933, 1
  %10935 = xor i8 %10934, 1
  store i8 %10935, i8* %10930, align 1
  %10936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10936, align 1
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10938 = icmp eq i32 %10926, 0
  %10939 = zext i1 %10938 to i8
  store i8 %10939, i8* %10937, align 1
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10941 = lshr i32 %10926, 31
  %10942 = trunc i32 %10941 to i8
  store i8 %10942, i8* %10940, align 1
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10944 = zext i1 %10925 to i8
  store i8 %10944, i8* %10943, align 1
  br label %routine_shll__cl___esi.exit1092

routine_shll__cl___esi.exit1092:                  ; preds = %block_.L_40b4e3, %10923
  store %struct.Memory* %loadMem_40b520, %struct.Memory** %MEMORY
  %loadMem_40b522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10946 = getelementptr inbounds %struct.GPR, %struct.GPR* %10945, i32 0, i32 33
  %10947 = getelementptr inbounds %struct.Reg, %struct.Reg* %10946, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %10947 to i64*
  %10948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10949 = getelementptr inbounds %struct.GPR, %struct.GPR* %10948, i32 0, i32 1
  %10950 = getelementptr inbounds %struct.Reg, %struct.Reg* %10949, i32 0, i32 0
  %RAX.i1088 = bitcast %union.anon* %10950 to i64*
  %10951 = load i64, i64* %PC.i1087
  %10952 = add i64 %10951, 8
  store i64 %10952, i64* %PC.i1087
  %10953 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10953, i64* %RAX.i1088, align 8
  store %struct.Memory* %loadMem_40b522, %struct.Memory** %MEMORY
  %loadMem_40b52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10955 = getelementptr inbounds %struct.GPR, %struct.GPR* %10954, i32 0, i32 33
  %10956 = getelementptr inbounds %struct.Reg, %struct.Reg* %10955, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %10956 to i64*
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10958 = getelementptr inbounds %struct.GPR, %struct.GPR* %10957, i32 0, i32 1
  %10959 = getelementptr inbounds %struct.Reg, %struct.Reg* %10958, i32 0, i32 0
  %RAX.i1085 = bitcast %union.anon* %10959 to i64*
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10961 = getelementptr inbounds %struct.GPR, %struct.GPR* %10960, i32 0, i32 11
  %10962 = getelementptr inbounds %struct.Reg, %struct.Reg* %10961, i32 0, i32 0
  %RDI.i1086 = bitcast %union.anon* %10962 to i64*
  %10963 = load i64, i64* %RAX.i1085
  %10964 = add i64 %10963, 13112
  %10965 = load i64, i64* %PC.i1084
  %10966 = add i64 %10965, 6
  store i64 %10966, i64* %PC.i1084
  %10967 = inttoptr i64 %10964 to i32*
  %10968 = load i32, i32* %10967
  %10969 = zext i32 %10968 to i64
  store i64 %10969, i64* %RDI.i1086, align 8
  store %struct.Memory* %loadMem_40b52a, %struct.Memory** %MEMORY
  %loadMem_40b530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10971 = getelementptr inbounds %struct.GPR, %struct.GPR* %10970, i32 0, i32 33
  %10972 = getelementptr inbounds %struct.Reg, %struct.Reg* %10971, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %10972 to i64*
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 11
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %EDI.i1082 = bitcast %union.anon* %10975 to i32*
  %10976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10977 = getelementptr inbounds %struct.GPR, %struct.GPR* %10976, i32 0, i32 15
  %10978 = getelementptr inbounds %struct.Reg, %struct.Reg* %10977, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %10978 to i64*
  %10979 = load i64, i64* %RBP.i1083
  %10980 = sub i64 %10979, 192
  %10981 = load i32, i32* %EDI.i1082
  %10982 = zext i32 %10981 to i64
  %10983 = load i64, i64* %PC.i1081
  %10984 = add i64 %10983, 6
  store i64 %10984, i64* %PC.i1081
  %10985 = inttoptr i64 %10980 to i32*
  store i32 %10981, i32* %10985
  store %struct.Memory* %loadMem_40b530, %struct.Memory** %MEMORY
  %loadMem_40b536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10987 = getelementptr inbounds %struct.GPR, %struct.GPR* %10986, i32 0, i32 33
  %10988 = getelementptr inbounds %struct.Reg, %struct.Reg* %10987, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %10988 to i64*
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10990 = getelementptr inbounds %struct.GPR, %struct.GPR* %10989, i32 0, i32 9
  %10991 = getelementptr inbounds %struct.Reg, %struct.Reg* %10990, i32 0, i32 0
  %ESI.i1079 = bitcast %union.anon* %10991 to i32*
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 11
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %RDI.i1080 = bitcast %union.anon* %10994 to i64*
  %10995 = load i32, i32* %ESI.i1079
  %10996 = zext i32 %10995 to i64
  %10997 = load i64, i64* %PC.i1078
  %10998 = add i64 %10997, 2
  store i64 %10998, i64* %PC.i1078
  %10999 = and i64 %10996, 4294967295
  store i64 %10999, i64* %RDI.i1080, align 8
  store %struct.Memory* %loadMem_40b536, %struct.Memory** %MEMORY
  %loadMem_40b538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11001 = getelementptr inbounds %struct.GPR, %struct.GPR* %11000, i32 0, i32 33
  %11002 = getelementptr inbounds %struct.Reg, %struct.Reg* %11001, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %11002 to i64*
  %11003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11004 = getelementptr inbounds %struct.GPR, %struct.GPR* %11003, i32 0, i32 9
  %11005 = getelementptr inbounds %struct.Reg, %struct.Reg* %11004, i32 0, i32 0
  %RSI.i1076 = bitcast %union.anon* %11005 to i64*
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11007 = getelementptr inbounds %struct.GPR, %struct.GPR* %11006, i32 0, i32 15
  %11008 = getelementptr inbounds %struct.Reg, %struct.Reg* %11007, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %11008 to i64*
  %11009 = load i64, i64* %RBP.i1077
  %11010 = sub i64 %11009, 192
  %11011 = load i64, i64* %PC.i1075
  %11012 = add i64 %11011, 6
  store i64 %11012, i64* %PC.i1075
  %11013 = inttoptr i64 %11010 to i32*
  %11014 = load i32, i32* %11013
  %11015 = zext i32 %11014 to i64
  store i64 %11015, i64* %RSI.i1076, align 8
  store %struct.Memory* %loadMem_40b538, %struct.Memory** %MEMORY
  %loadMem1_40b53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11017 = getelementptr inbounds %struct.GPR, %struct.GPR* %11016, i32 0, i32 33
  %11018 = getelementptr inbounds %struct.Reg, %struct.Reg* %11017, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %11018 to i64*
  %11019 = load i64, i64* %PC.i1074
  %11020 = add i64 %11019, 433170
  %11021 = load i64, i64* %PC.i1074
  %11022 = add i64 %11021, 5
  %11023 = load i64, i64* %PC.i1074
  %11024 = add i64 %11023, 5
  store i64 %11024, i64* %PC.i1074
  %11025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11026 = load i64, i64* %11025, align 8
  %11027 = add i64 %11026, -8
  %11028 = inttoptr i64 %11027 to i64*
  store i64 %11022, i64* %11028
  store i64 %11027, i64* %11025, align 8
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11020, i64* %11029, align 8
  store %struct.Memory* %loadMem1_40b53e, %struct.Memory** %MEMORY
  %loadMem2_40b53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b53e = load i64, i64* %3
  %call2_40b53e = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b53e, %struct.Memory* %loadMem2_40b53e)
  store %struct.Memory* %call2_40b53e, %struct.Memory** %MEMORY
  %loadMem_40b543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11031 = getelementptr inbounds %struct.GPR, %struct.GPR* %11030, i32 0, i32 33
  %11032 = getelementptr inbounds %struct.Reg, %struct.Reg* %11031, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %11032 to i64*
  %11033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11034 = getelementptr inbounds %struct.GPR, %struct.GPR* %11033, i32 0, i32 7
  %11035 = getelementptr inbounds %struct.Reg, %struct.Reg* %11034, i32 0, i32 0
  %RDX.i1073 = bitcast %union.anon* %11035 to i64*
  %11036 = load i64, i64* %PC.i1072
  %11037 = add i64 %11036, 8
  store i64 %11037, i64* %PC.i1072
  %11038 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11038, i64* %RDX.i1073, align 8
  store %struct.Memory* %loadMem_40b543, %struct.Memory** %MEMORY
  %loadMem_40b54b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11040 = getelementptr inbounds %struct.GPR, %struct.GPR* %11039, i32 0, i32 33
  %11041 = getelementptr inbounds %struct.Reg, %struct.Reg* %11040, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %11041 to i64*
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11043 = getelementptr inbounds %struct.GPR, %struct.GPR* %11042, i32 0, i32 1
  %11044 = getelementptr inbounds %struct.Reg, %struct.Reg* %11043, i32 0, i32 0
  %EAX.i1070 = bitcast %union.anon* %11044 to i32*
  %11045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11046 = getelementptr inbounds %struct.GPR, %struct.GPR* %11045, i32 0, i32 7
  %11047 = getelementptr inbounds %struct.Reg, %struct.Reg* %11046, i32 0, i32 0
  %RDX.i1071 = bitcast %union.anon* %11047 to i64*
  %11048 = load i64, i64* %RDX.i1071
  %11049 = add i64 %11048, 13112
  %11050 = load i32, i32* %EAX.i1070
  %11051 = zext i32 %11050 to i64
  %11052 = load i64, i64* %PC.i1069
  %11053 = add i64 %11052, 6
  store i64 %11053, i64* %PC.i1069
  %11054 = inttoptr i64 %11049 to i32*
  store i32 %11050, i32* %11054
  store %struct.Memory* %loadMem_40b54b, %struct.Memory** %MEMORY
  br label %block_.L_40b551

block_.L_40b551:                                  ; preds = %routine_shll__cl___esi.exit1092, %routine_shll__cl___esi.exit1155
  %loadMem_40b551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11056 = getelementptr inbounds %struct.GPR, %struct.GPR* %11055, i32 0, i32 33
  %11057 = getelementptr inbounds %struct.Reg, %struct.Reg* %11056, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %11057 to i64*
  %11058 = load i64, i64* %PC.i1068
  %11059 = add i64 %11058, 5
  %11060 = load i64, i64* %PC.i1068
  %11061 = add i64 %11060, 5
  store i64 %11061, i64* %PC.i1068
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11059, i64* %11062, align 8
  store %struct.Memory* %loadMem_40b551, %struct.Memory** %MEMORY
  br label %block_.L_40b556

block_.L_40b556:                                  ; preds = %block_.L_40b551, %block_.L_40b461
  %loadMem_40b556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11064 = getelementptr inbounds %struct.GPR, %struct.GPR* %11063, i32 0, i32 33
  %11065 = getelementptr inbounds %struct.Reg, %struct.Reg* %11064, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %11065 to i64*
  %11066 = load i64, i64* %PC.i1067
  %11067 = add i64 %11066, 5
  %11068 = load i64, i64* %PC.i1067
  %11069 = add i64 %11068, 5
  store i64 %11069, i64* %PC.i1067
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11067, i64* %11070, align 8
  store %struct.Memory* %loadMem_40b556, %struct.Memory** %MEMORY
  br label %block_.L_40b55b

block_.L_40b55b:                                  ; preds = %block_.L_40b556, %block_40b333
  %loadMem_40b55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11072 = getelementptr inbounds %struct.GPR, %struct.GPR* %11071, i32 0, i32 33
  %11073 = getelementptr inbounds %struct.Reg, %struct.Reg* %11072, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %11073 to i64*
  %11074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11075 = getelementptr inbounds %struct.GPR, %struct.GPR* %11074, i32 0, i32 15
  %11076 = getelementptr inbounds %struct.Reg, %struct.Reg* %11075, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %11076 to i64*
  %11077 = load i64, i64* %RBP.i1066
  %11078 = sub i64 %11077, 68
  %11079 = load i64, i64* %PC.i1065
  %11080 = add i64 %11079, 7
  store i64 %11080, i64* %PC.i1065
  %11081 = inttoptr i64 %11078 to i32*
  store i32 1, i32* %11081
  store %struct.Memory* %loadMem_40b55b, %struct.Memory** %MEMORY
  br label %block_.L_40b562

block_.L_40b562:                                  ; preds = %block_.L_40b9bb, %block_.L_40b55b
  %loadMem_40b562 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11083 = getelementptr inbounds %struct.GPR, %struct.GPR* %11082, i32 0, i32 33
  %11084 = getelementptr inbounds %struct.Reg, %struct.Reg* %11083, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %11084 to i64*
  %11085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11086 = getelementptr inbounds %struct.GPR, %struct.GPR* %11085, i32 0, i32 15
  %11087 = getelementptr inbounds %struct.Reg, %struct.Reg* %11086, i32 0, i32 0
  %RBP.i1064 = bitcast %union.anon* %11087 to i64*
  %11088 = load i64, i64* %RBP.i1064
  %11089 = sub i64 %11088, 68
  %11090 = load i64, i64* %PC.i1063
  %11091 = add i64 %11090, 4
  store i64 %11091, i64* %PC.i1063
  %11092 = inttoptr i64 %11089 to i32*
  %11093 = load i32, i32* %11092
  %11094 = sub i32 %11093, 16
  %11095 = icmp ult i32 %11093, 16
  %11096 = zext i1 %11095 to i8
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11096, i8* %11097, align 1
  %11098 = and i32 %11094, 255
  %11099 = call i32 @llvm.ctpop.i32(i32 %11098)
  %11100 = trunc i32 %11099 to i8
  %11101 = and i8 %11100, 1
  %11102 = xor i8 %11101, 1
  %11103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11102, i8* %11103, align 1
  %11104 = xor i32 %11093, 16
  %11105 = xor i32 %11104, %11094
  %11106 = lshr i32 %11105, 4
  %11107 = trunc i32 %11106 to i8
  %11108 = and i8 %11107, 1
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11108, i8* %11109, align 1
  %11110 = icmp eq i32 %11094, 0
  %11111 = zext i1 %11110 to i8
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11111, i8* %11112, align 1
  %11113 = lshr i32 %11094, 31
  %11114 = trunc i32 %11113 to i8
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11114, i8* %11115, align 1
  %11116 = lshr i32 %11093, 31
  %11117 = xor i32 %11113, %11116
  %11118 = add i32 %11117, %11116
  %11119 = icmp eq i32 %11118, 2
  %11120 = zext i1 %11119 to i8
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11120, i8* %11121, align 1
  store %struct.Memory* %loadMem_40b562, %struct.Memory** %MEMORY
  %loadMem_40b566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11123 = getelementptr inbounds %struct.GPR, %struct.GPR* %11122, i32 0, i32 33
  %11124 = getelementptr inbounds %struct.Reg, %struct.Reg* %11123, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %11124 to i64*
  %11125 = load i64, i64* %PC.i1062
  %11126 = add i64 %11125, 1123
  %11127 = load i64, i64* %PC.i1062
  %11128 = add i64 %11127, 6
  %11129 = load i64, i64* %PC.i1062
  %11130 = add i64 %11129, 6
  store i64 %11130, i64* %PC.i1062
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11132 = load i8, i8* %11131, align 1
  %11133 = icmp ne i8 %11132, 0
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11135 = load i8, i8* %11134, align 1
  %11136 = icmp ne i8 %11135, 0
  %11137 = xor i1 %11133, %11136
  %11138 = xor i1 %11137, true
  %11139 = zext i1 %11138 to i8
  store i8 %11139, i8* %BRANCH_TAKEN, align 1
  %11140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11141 = select i1 %11137, i64 %11128, i64 %11126
  store i64 %11141, i64* %11140, align 8
  store %struct.Memory* %loadMem_40b566, %struct.Memory** %MEMORY
  %loadBr_40b566 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b566 = icmp eq i8 %loadBr_40b566, 1
  br i1 %cmpBr_40b566, label %block_.L_40b9c9, label %block_40b56c

block_40b56c:                                     ; preds = %block_.L_40b562
  %loadMem_40b56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11143 = getelementptr inbounds %struct.GPR, %struct.GPR* %11142, i32 0, i32 33
  %11144 = getelementptr inbounds %struct.Reg, %struct.Reg* %11143, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %11144 to i64*
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11146 = getelementptr inbounds %struct.GPR, %struct.GPR* %11145, i32 0, i32 1
  %11147 = getelementptr inbounds %struct.Reg, %struct.Reg* %11146, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %11147 to i64*
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11149 = getelementptr inbounds %struct.GPR, %struct.GPR* %11148, i32 0, i32 15
  %11150 = getelementptr inbounds %struct.Reg, %struct.Reg* %11149, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %11150 to i64*
  %11151 = load i64, i64* %RBP.i1061
  %11152 = sub i64 %11151, 68
  %11153 = load i64, i64* %PC.i1059
  %11154 = add i64 %11153, 4
  store i64 %11154, i64* %PC.i1059
  %11155 = inttoptr i64 %11152 to i32*
  %11156 = load i32, i32* %11155
  %11157 = sext i32 %11156 to i64
  store i64 %11157, i64* %RAX.i1060, align 8
  store %struct.Memory* %loadMem_40b56c, %struct.Memory** %MEMORY
  %loadMem_40b570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 33
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %11160 to i64*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 1
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %RAX.i1057 = bitcast %union.anon* %11163 to i64*
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 5
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %RCX.i1058 = bitcast %union.anon* %11166 to i64*
  %11167 = load i64, i64* %RAX.i1057
  %11168 = mul i64 %11167, 2
  %11169 = add i64 %11168, 4924256
  %11170 = load i64, i64* %PC.i1056
  %11171 = add i64 %11170, 8
  store i64 %11171, i64* %PC.i1056
  %11172 = inttoptr i64 %11169 to i8*
  %11173 = load i8, i8* %11172
  %11174 = zext i8 %11173 to i64
  store i64 %11174, i64* %RCX.i1058, align 8
  store %struct.Memory* %loadMem_40b570, %struct.Memory** %MEMORY
  %loadMem_40b578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11176 = getelementptr inbounds %struct.GPR, %struct.GPR* %11175, i32 0, i32 33
  %11177 = getelementptr inbounds %struct.Reg, %struct.Reg* %11176, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %11177 to i64*
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11179 = getelementptr inbounds %struct.GPR, %struct.GPR* %11178, i32 0, i32 5
  %11180 = getelementptr inbounds %struct.Reg, %struct.Reg* %11179, i32 0, i32 0
  %ECX.i1054 = bitcast %union.anon* %11180 to i32*
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11182 = getelementptr inbounds %struct.GPR, %struct.GPR* %11181, i32 0, i32 15
  %11183 = getelementptr inbounds %struct.Reg, %struct.Reg* %11182, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %11183 to i64*
  %11184 = load i64, i64* %RBP.i1055
  %11185 = sub i64 %11184, 16
  %11186 = load i32, i32* %ECX.i1054
  %11187 = zext i32 %11186 to i64
  %11188 = load i64, i64* %PC.i1053
  %11189 = add i64 %11188, 3
  store i64 %11189, i64* %PC.i1053
  %11190 = inttoptr i64 %11185 to i32*
  store i32 %11186, i32* %11190
  store %struct.Memory* %loadMem_40b578, %struct.Memory** %MEMORY
  %loadMem_40b57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11192 = getelementptr inbounds %struct.GPR, %struct.GPR* %11191, i32 0, i32 33
  %11193 = getelementptr inbounds %struct.Reg, %struct.Reg* %11192, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %11193 to i64*
  %11194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11195 = getelementptr inbounds %struct.GPR, %struct.GPR* %11194, i32 0, i32 1
  %11196 = getelementptr inbounds %struct.Reg, %struct.Reg* %11195, i32 0, i32 0
  %RAX.i1051 = bitcast %union.anon* %11196 to i64*
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11198 = getelementptr inbounds %struct.GPR, %struct.GPR* %11197, i32 0, i32 15
  %11199 = getelementptr inbounds %struct.Reg, %struct.Reg* %11198, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %11199 to i64*
  %11200 = load i64, i64* %RBP.i1052
  %11201 = sub i64 %11200, 68
  %11202 = load i64, i64* %PC.i1050
  %11203 = add i64 %11202, 4
  store i64 %11203, i64* %PC.i1050
  %11204 = inttoptr i64 %11201 to i32*
  %11205 = load i32, i32* %11204
  %11206 = sext i32 %11205 to i64
  store i64 %11206, i64* %RAX.i1051, align 8
  store %struct.Memory* %loadMem_40b57b, %struct.Memory** %MEMORY
  %loadMem_40b57f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11208 = getelementptr inbounds %struct.GPR, %struct.GPR* %11207, i32 0, i32 33
  %11209 = getelementptr inbounds %struct.Reg, %struct.Reg* %11208, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %11209 to i64*
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11211 = getelementptr inbounds %struct.GPR, %struct.GPR* %11210, i32 0, i32 1
  %11212 = getelementptr inbounds %struct.Reg, %struct.Reg* %11211, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %11212 to i64*
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11214 = getelementptr inbounds %struct.GPR, %struct.GPR* %11213, i32 0, i32 5
  %11215 = getelementptr inbounds %struct.Reg, %struct.Reg* %11214, i32 0, i32 0
  %RCX.i1049 = bitcast %union.anon* %11215 to i64*
  %11216 = load i64, i64* %RAX.i1048
  %11217 = mul i64 %11216, 2
  %11218 = add i64 %11217, 4924257
  %11219 = load i64, i64* %PC.i1047
  %11220 = add i64 %11219, 8
  store i64 %11220, i64* %PC.i1047
  %11221 = inttoptr i64 %11218 to i8*
  %11222 = load i8, i8* %11221
  %11223 = zext i8 %11222 to i64
  store i64 %11223, i64* %RCX.i1049, align 8
  store %struct.Memory* %loadMem_40b57f, %struct.Memory** %MEMORY
  %loadMem_40b587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11225 = getelementptr inbounds %struct.GPR, %struct.GPR* %11224, i32 0, i32 33
  %11226 = getelementptr inbounds %struct.Reg, %struct.Reg* %11225, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %11226 to i64*
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11228 = getelementptr inbounds %struct.GPR, %struct.GPR* %11227, i32 0, i32 5
  %11229 = getelementptr inbounds %struct.Reg, %struct.Reg* %11228, i32 0, i32 0
  %ECX.i1045 = bitcast %union.anon* %11229 to i32*
  %11230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11231 = getelementptr inbounds %struct.GPR, %struct.GPR* %11230, i32 0, i32 15
  %11232 = getelementptr inbounds %struct.Reg, %struct.Reg* %11231, i32 0, i32 0
  %RBP.i1046 = bitcast %union.anon* %11232 to i64*
  %11233 = load i64, i64* %RBP.i1046
  %11234 = sub i64 %11233, 20
  %11235 = load i32, i32* %ECX.i1045
  %11236 = zext i32 %11235 to i64
  %11237 = load i64, i64* %PC.i1044
  %11238 = add i64 %11237, 3
  store i64 %11238, i64* %PC.i1044
  %11239 = inttoptr i64 %11234 to i32*
  store i32 %11235, i32* %11239
  store %struct.Memory* %loadMem_40b587, %struct.Memory** %MEMORY
  %loadMem_40b58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11241 = getelementptr inbounds %struct.GPR, %struct.GPR* %11240, i32 0, i32 33
  %11242 = getelementptr inbounds %struct.Reg, %struct.Reg* %11241, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %11242 to i64*
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11244 = getelementptr inbounds %struct.GPR, %struct.GPR* %11243, i32 0, i32 5
  %11245 = getelementptr inbounds %struct.Reg, %struct.Reg* %11244, i32 0, i32 0
  %RCX.i1042 = bitcast %union.anon* %11245 to i64*
  %11246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11247 = getelementptr inbounds %struct.GPR, %struct.GPR* %11246, i32 0, i32 15
  %11248 = getelementptr inbounds %struct.Reg, %struct.Reg* %11247, i32 0, i32 0
  %RBP.i1043 = bitcast %union.anon* %11248 to i64*
  %11249 = load i64, i64* %RBP.i1043
  %11250 = sub i64 %11249, 80
  %11251 = load i64, i64* %PC.i1041
  %11252 = add i64 %11251, 3
  store i64 %11252, i64* %PC.i1041
  %11253 = inttoptr i64 %11250 to i32*
  %11254 = load i32, i32* %11253
  %11255 = zext i32 %11254 to i64
  store i64 %11255, i64* %RCX.i1042, align 8
  store %struct.Memory* %loadMem_40b58a, %struct.Memory** %MEMORY
  %loadMem_40b58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11257 = getelementptr inbounds %struct.GPR, %struct.GPR* %11256, i32 0, i32 33
  %11258 = getelementptr inbounds %struct.Reg, %struct.Reg* %11257, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %11258 to i64*
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11260 = getelementptr inbounds %struct.GPR, %struct.GPR* %11259, i32 0, i32 5
  %11261 = getelementptr inbounds %struct.Reg, %struct.Reg* %11260, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %11261 to i64*
  %11262 = load i64, i64* %RCX.i1040
  %11263 = load i64, i64* %PC.i1039
  %11264 = add i64 %11263, 3
  store i64 %11264, i64* %PC.i1039
  %11265 = trunc i64 %11262 to i32
  %11266 = add i32 1, %11265
  %11267 = zext i32 %11266 to i64
  store i64 %11267, i64* %RCX.i1040, align 8
  %11268 = icmp ult i32 %11266, %11265
  %11269 = icmp ult i32 %11266, 1
  %11270 = or i1 %11268, %11269
  %11271 = zext i1 %11270 to i8
  %11272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11271, i8* %11272, align 1
  %11273 = and i32 %11266, 255
  %11274 = call i32 @llvm.ctpop.i32(i32 %11273)
  %11275 = trunc i32 %11274 to i8
  %11276 = and i8 %11275, 1
  %11277 = xor i8 %11276, 1
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11277, i8* %11278, align 1
  %11279 = xor i64 1, %11262
  %11280 = trunc i64 %11279 to i32
  %11281 = xor i32 %11280, %11266
  %11282 = lshr i32 %11281, 4
  %11283 = trunc i32 %11282 to i8
  %11284 = and i8 %11283, 1
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11284, i8* %11285, align 1
  %11286 = icmp eq i32 %11266, 0
  %11287 = zext i1 %11286 to i8
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11287, i8* %11288, align 1
  %11289 = lshr i32 %11266, 31
  %11290 = trunc i32 %11289 to i8
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11290, i8* %11291, align 1
  %11292 = lshr i32 %11265, 31
  %11293 = xor i32 %11289, %11292
  %11294 = add i32 %11293, %11289
  %11295 = icmp eq i32 %11294, 2
  %11296 = zext i1 %11295 to i8
  %11297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11296, i8* %11297, align 1
  store %struct.Memory* %loadMem_40b58d, %struct.Memory** %MEMORY
  %loadMem_40b590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 33
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %11300 to i64*
  %11301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11302 = getelementptr inbounds %struct.GPR, %struct.GPR* %11301, i32 0, i32 5
  %11303 = getelementptr inbounds %struct.Reg, %struct.Reg* %11302, i32 0, i32 0
  %ECX.i1037 = bitcast %union.anon* %11303 to i32*
  %11304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11305 = getelementptr inbounds %struct.GPR, %struct.GPR* %11304, i32 0, i32 15
  %11306 = getelementptr inbounds %struct.Reg, %struct.Reg* %11305, i32 0, i32 0
  %RBP.i1038 = bitcast %union.anon* %11306 to i64*
  %11307 = load i64, i64* %RBP.i1038
  %11308 = sub i64 %11307, 80
  %11309 = load i32, i32* %ECX.i1037
  %11310 = zext i32 %11309 to i64
  %11311 = load i64, i64* %PC.i1036
  %11312 = add i64 %11311, 3
  store i64 %11312, i64* %PC.i1036
  %11313 = inttoptr i64 %11308 to i32*
  store i32 %11309, i32* %11313
  store %struct.Memory* %loadMem_40b590, %struct.Memory** %MEMORY
  %loadMem_40b593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11315 = getelementptr inbounds %struct.GPR, %struct.GPR* %11314, i32 0, i32 33
  %11316 = getelementptr inbounds %struct.Reg, %struct.Reg* %11315, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %11316 to i64*
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11318 = getelementptr inbounds %struct.GPR, %struct.GPR* %11317, i32 0, i32 15
  %11319 = getelementptr inbounds %struct.Reg, %struct.Reg* %11318, i32 0, i32 0
  %RBP.i1035 = bitcast %union.anon* %11319 to i64*
  %11320 = load i64, i64* %RBP.i1035
  %11321 = sub i64 %11320, 32
  %11322 = load i64, i64* %PC.i1034
  %11323 = add i64 %11322, 7
  store i64 %11323, i64* %PC.i1034
  %11324 = inttoptr i64 %11321 to i32*
  store i32 0, i32* %11324
  store %struct.Memory* %loadMem_40b593, %struct.Memory** %MEMORY
  %loadMem_40b59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 33
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %11327 to i64*
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11329 = getelementptr inbounds %struct.GPR, %struct.GPR* %11328, i32 0, i32 15
  %11330 = getelementptr inbounds %struct.Reg, %struct.Reg* %11329, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %11330 to i64*
  %11331 = load i64, i64* %RBP.i1033
  %11332 = sub i64 %11331, 140
  %11333 = load i64, i64* %PC.i1032
  %11334 = add i64 %11333, 7
  store i64 %11334, i64* %PC.i1032
  %11335 = inttoptr i64 %11332 to i32*
  %11336 = load i32, i32* %11335
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11337, align 1
  %11338 = and i32 %11336, 255
  %11339 = call i32 @llvm.ctpop.i32(i32 %11338)
  %11340 = trunc i32 %11339 to i8
  %11341 = and i8 %11340, 1
  %11342 = xor i8 %11341, 1
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11342, i8* %11343, align 1
  %11344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11344, align 1
  %11345 = icmp eq i32 %11336, 0
  %11346 = zext i1 %11345 to i8
  %11347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11346, i8* %11347, align 1
  %11348 = lshr i32 %11336, 31
  %11349 = trunc i32 %11348 to i8
  %11350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11349, i8* %11350, align 1
  %11351 = lshr i32 %11336, 31
  %11352 = xor i32 %11348, %11351
  %11353 = add i32 %11352, %11351
  %11354 = icmp eq i32 %11353, 2
  %11355 = zext i1 %11354 to i8
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11355, i8* %11356, align 1
  store %struct.Memory* %loadMem_40b59a, %struct.Memory** %MEMORY
  %loadMem_40b5a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11358 = getelementptr inbounds %struct.GPR, %struct.GPR* %11357, i32 0, i32 33
  %11359 = getelementptr inbounds %struct.Reg, %struct.Reg* %11358, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %11359 to i64*
  %11360 = load i64, i64* %PC.i1031
  %11361 = add i64 %11360, 51
  %11362 = load i64, i64* %PC.i1031
  %11363 = add i64 %11362, 6
  %11364 = load i64, i64* %PC.i1031
  %11365 = add i64 %11364, 6
  store i64 %11365, i64* %PC.i1031
  %11366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11367 = load i8, i8* %11366, align 1
  store i8 %11367, i8* %BRANCH_TAKEN, align 1
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11369 = icmp ne i8 %11367, 0
  %11370 = select i1 %11369, i64 %11361, i64 %11363
  store i64 %11370, i64* %11368, align 8
  store %struct.Memory* %loadMem_40b5a1, %struct.Memory** %MEMORY
  %loadBr_40b5a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b5a1 = icmp eq i8 %loadBr_40b5a1, 1
  br i1 %cmpBr_40b5a1, label %block_.L_40b5d4, label %block_40b5a7

block_40b5a7:                                     ; preds = %block_40b56c
  %loadMem_40b5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11372 = getelementptr inbounds %struct.GPR, %struct.GPR* %11371, i32 0, i32 33
  %11373 = getelementptr inbounds %struct.Reg, %struct.Reg* %11372, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %11373 to i64*
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11375 = getelementptr inbounds %struct.GPR, %struct.GPR* %11374, i32 0, i32 1
  %11376 = getelementptr inbounds %struct.Reg, %struct.Reg* %11375, i32 0, i32 0
  %RAX.i1030 = bitcast %union.anon* %11376 to i64*
  %11377 = load i64, i64* %PC.i1029
  %11378 = add i64 %11377, 8
  store i64 %11378, i64* %PC.i1029
  %11379 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11379, i64* %RAX.i1030, align 8
  store %struct.Memory* %loadMem_40b5a7, %struct.Memory** %MEMORY
  %loadMem_40b5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 33
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %11382 to i64*
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 1
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %RAX.i1028 = bitcast %union.anon* %11385 to i64*
  %11386 = load i64, i64* %RAX.i1028
  %11387 = load i64, i64* %PC.i1027
  %11388 = add i64 %11387, 6
  store i64 %11388, i64* %PC.i1027
  %11389 = add i64 13112, %11386
  store i64 %11389, i64* %RAX.i1028, align 8
  %11390 = icmp ult i64 %11389, %11386
  %11391 = icmp ult i64 %11389, 13112
  %11392 = or i1 %11390, %11391
  %11393 = zext i1 %11392 to i8
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11393, i8* %11394, align 1
  %11395 = trunc i64 %11389 to i32
  %11396 = and i32 %11395, 255
  %11397 = call i32 @llvm.ctpop.i32(i32 %11396)
  %11398 = trunc i32 %11397 to i8
  %11399 = and i8 %11398, 1
  %11400 = xor i8 %11399, 1
  %11401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11400, i8* %11401, align 1
  %11402 = xor i64 13112, %11386
  %11403 = xor i64 %11402, %11389
  %11404 = lshr i64 %11403, 4
  %11405 = trunc i64 %11404 to i8
  %11406 = and i8 %11405, 1
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11406, i8* %11407, align 1
  %11408 = icmp eq i64 %11389, 0
  %11409 = zext i1 %11408 to i8
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11409, i8* %11410, align 1
  %11411 = lshr i64 %11389, 63
  %11412 = trunc i64 %11411 to i8
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11412, i8* %11413, align 1
  %11414 = lshr i64 %11386, 63
  %11415 = xor i64 %11411, %11414
  %11416 = add i64 %11415, %11411
  %11417 = icmp eq i64 %11416, 2
  %11418 = zext i1 %11417 to i8
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11418, i8* %11419, align 1
  store %struct.Memory* %loadMem_40b5af, %struct.Memory** %MEMORY
  %loadMem_40b5b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 33
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %11422 to i64*
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11424 = getelementptr inbounds %struct.GPR, %struct.GPR* %11423, i32 0, i32 5
  %11425 = getelementptr inbounds %struct.Reg, %struct.Reg* %11424, i32 0, i32 0
  %RCX.i1025 = bitcast %union.anon* %11425 to i64*
  %11426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11427 = getelementptr inbounds %struct.GPR, %struct.GPR* %11426, i32 0, i32 15
  %11428 = getelementptr inbounds %struct.Reg, %struct.Reg* %11427, i32 0, i32 0
  %RBP.i1026 = bitcast %union.anon* %11428 to i64*
  %11429 = load i64, i64* %RBP.i1026
  %11430 = sub i64 %11429, 16
  %11431 = load i64, i64* %PC.i1024
  %11432 = add i64 %11431, 4
  store i64 %11432, i64* %PC.i1024
  %11433 = inttoptr i64 %11430 to i32*
  %11434 = load i32, i32* %11433
  %11435 = sext i32 %11434 to i64
  store i64 %11435, i64* %RCX.i1025, align 8
  store %struct.Memory* %loadMem_40b5b5, %struct.Memory** %MEMORY
  %loadMem_40b5b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 33
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %11438 to i64*
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11440 = getelementptr inbounds %struct.GPR, %struct.GPR* %11439, i32 0, i32 5
  %11441 = getelementptr inbounds %struct.Reg, %struct.Reg* %11440, i32 0, i32 0
  %RCX.i1023 = bitcast %union.anon* %11441 to i64*
  %11442 = load i64, i64* %RCX.i1023
  %11443 = load i64, i64* %PC.i1022
  %11444 = add i64 %11443, 4
  store i64 %11444, i64* %PC.i1022
  %11445 = shl i64 %11442, 5
  %11446 = icmp slt i64 %11445, 0
  %11447 = shl i64 %11445, 1
  store i64 %11447, i64* %RCX.i1023, align 8
  %11448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11449 = zext i1 %11446 to i8
  store i8 %11449, i8* %11448, align 1
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11451 = trunc i64 %11447 to i32
  %11452 = and i32 %11451, 254
  %11453 = call i32 @llvm.ctpop.i32(i32 %11452)
  %11454 = trunc i32 %11453 to i8
  %11455 = and i8 %11454, 1
  %11456 = xor i8 %11455, 1
  store i8 %11456, i8* %11450, align 1
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11457, align 1
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11459 = icmp eq i64 %11447, 0
  %11460 = zext i1 %11459 to i8
  store i8 %11460, i8* %11458, align 1
  %11461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11462 = lshr i64 %11447, 63
  %11463 = trunc i64 %11462 to i8
  store i8 %11463, i8* %11461, align 1
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11464, align 1
  store %struct.Memory* %loadMem_40b5b9, %struct.Memory** %MEMORY
  %loadMem_40b5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11466 = getelementptr inbounds %struct.GPR, %struct.GPR* %11465, i32 0, i32 33
  %11467 = getelementptr inbounds %struct.Reg, %struct.Reg* %11466, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %11467 to i64*
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 1
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %RAX.i1020 = bitcast %union.anon* %11470 to i64*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 5
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %RCX.i1021 = bitcast %union.anon* %11473 to i64*
  %11474 = load i64, i64* %RAX.i1020
  %11475 = load i64, i64* %RCX.i1021
  %11476 = load i64, i64* %PC.i1019
  %11477 = add i64 %11476, 3
  store i64 %11477, i64* %PC.i1019
  %11478 = add i64 %11475, %11474
  store i64 %11478, i64* %RAX.i1020, align 8
  %11479 = icmp ult i64 %11478, %11474
  %11480 = icmp ult i64 %11478, %11475
  %11481 = or i1 %11479, %11480
  %11482 = zext i1 %11481 to i8
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11482, i8* %11483, align 1
  %11484 = trunc i64 %11478 to i32
  %11485 = and i32 %11484, 255
  %11486 = call i32 @llvm.ctpop.i32(i32 %11485)
  %11487 = trunc i32 %11486 to i8
  %11488 = and i8 %11487, 1
  %11489 = xor i8 %11488, 1
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11489, i8* %11490, align 1
  %11491 = xor i64 %11475, %11474
  %11492 = xor i64 %11491, %11478
  %11493 = lshr i64 %11492, 4
  %11494 = trunc i64 %11493 to i8
  %11495 = and i8 %11494, 1
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11495, i8* %11496, align 1
  %11497 = icmp eq i64 %11478, 0
  %11498 = zext i1 %11497 to i8
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11498, i8* %11499, align 1
  %11500 = lshr i64 %11478, 63
  %11501 = trunc i64 %11500 to i8
  %11502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11501, i8* %11502, align 1
  %11503 = lshr i64 %11474, 63
  %11504 = lshr i64 %11475, 63
  %11505 = xor i64 %11500, %11503
  %11506 = xor i64 %11500, %11504
  %11507 = add i64 %11505, %11506
  %11508 = icmp eq i64 %11507, 2
  %11509 = zext i1 %11508 to i8
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11509, i8* %11510, align 1
  store %struct.Memory* %loadMem_40b5bd, %struct.Memory** %MEMORY
  %loadMem_40b5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11512 = getelementptr inbounds %struct.GPR, %struct.GPR* %11511, i32 0, i32 33
  %11513 = getelementptr inbounds %struct.Reg, %struct.Reg* %11512, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %11513 to i64*
  %11514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11515 = getelementptr inbounds %struct.GPR, %struct.GPR* %11514, i32 0, i32 5
  %11516 = getelementptr inbounds %struct.Reg, %struct.Reg* %11515, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %11516 to i64*
  %11517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11518 = getelementptr inbounds %struct.GPR, %struct.GPR* %11517, i32 0, i32 15
  %11519 = getelementptr inbounds %struct.Reg, %struct.Reg* %11518, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %11519 to i64*
  %11520 = load i64, i64* %RBP.i1018
  %11521 = sub i64 %11520, 20
  %11522 = load i64, i64* %PC.i1016
  %11523 = add i64 %11522, 4
  store i64 %11523, i64* %PC.i1016
  %11524 = inttoptr i64 %11521 to i32*
  %11525 = load i32, i32* %11524
  %11526 = sext i32 %11525 to i64
  store i64 %11526, i64* %RCX.i1017, align 8
  store %struct.Memory* %loadMem_40b5c0, %struct.Memory** %MEMORY
  %loadMem_40b5c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11528 = getelementptr inbounds %struct.GPR, %struct.GPR* %11527, i32 0, i32 33
  %11529 = getelementptr inbounds %struct.Reg, %struct.Reg* %11528, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %11529 to i64*
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11531 = getelementptr inbounds %struct.GPR, %struct.GPR* %11530, i32 0, i32 1
  %11532 = getelementptr inbounds %struct.Reg, %struct.Reg* %11531, i32 0, i32 0
  %RAX.i1013 = bitcast %union.anon* %11532 to i64*
  %11533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11534 = getelementptr inbounds %struct.GPR, %struct.GPR* %11533, i32 0, i32 5
  %11535 = getelementptr inbounds %struct.Reg, %struct.Reg* %11534, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %11535 to i64*
  %11536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11537 = getelementptr inbounds %struct.GPR, %struct.GPR* %11536, i32 0, i32 11
  %11538 = getelementptr inbounds %struct.Reg, %struct.Reg* %11537, i32 0, i32 0
  %RDI.i1015 = bitcast %union.anon* %11538 to i64*
  %11539 = load i64, i64* %RAX.i1013
  %11540 = load i64, i64* %RCX.i1014
  %11541 = mul i64 %11540, 4
  %11542 = add i64 %11541, %11539
  %11543 = load i64, i64* %PC.i1012
  %11544 = add i64 %11543, 3
  store i64 %11544, i64* %PC.i1012
  %11545 = inttoptr i64 %11542 to i32*
  %11546 = load i32, i32* %11545
  %11547 = zext i32 %11546 to i64
  store i64 %11547, i64* %RDI.i1015, align 8
  store %struct.Memory* %loadMem_40b5c4, %struct.Memory** %MEMORY
  %loadMem1_40b5c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11549 = getelementptr inbounds %struct.GPR, %struct.GPR* %11548, i32 0, i32 33
  %11550 = getelementptr inbounds %struct.Reg, %struct.Reg* %11549, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %11550 to i64*
  %11551 = load i64, i64* %PC.i1011
  %11552 = add i64 %11551, -42439
  %11553 = load i64, i64* %PC.i1011
  %11554 = add i64 %11553, 5
  %11555 = load i64, i64* %PC.i1011
  %11556 = add i64 %11555, 5
  store i64 %11556, i64* %PC.i1011
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11558 = load i64, i64* %11557, align 8
  %11559 = add i64 %11558, -8
  %11560 = inttoptr i64 %11559 to i64*
  store i64 %11554, i64* %11560
  store i64 %11559, i64* %11557, align 8
  %11561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11552, i64* %11561, align 8
  store %struct.Memory* %loadMem1_40b5c7, %struct.Memory** %MEMORY
  %loadMem2_40b5c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b5c7 = load i64, i64* %3
  %11562 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40b5c7)
  store %struct.Memory* %11562, %struct.Memory** %MEMORY
  %loadMem_40b5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11564 = getelementptr inbounds %struct.GPR, %struct.GPR* %11563, i32 0, i32 33
  %11565 = getelementptr inbounds %struct.Reg, %struct.Reg* %11564, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %11565 to i64*
  %11566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11567 = getelementptr inbounds %struct.GPR, %struct.GPR* %11566, i32 0, i32 1
  %11568 = getelementptr inbounds %struct.Reg, %struct.Reg* %11567, i32 0, i32 0
  %EAX.i1008 = bitcast %union.anon* %11568 to i32*
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11570 = getelementptr inbounds %struct.GPR, %struct.GPR* %11569, i32 0, i32 15
  %11571 = getelementptr inbounds %struct.Reg, %struct.Reg* %11570, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %11571 to i64*
  %11572 = load i64, i64* %RBP.i1009
  %11573 = sub i64 %11572, 72
  %11574 = load i32, i32* %EAX.i1008
  %11575 = zext i32 %11574 to i64
  %11576 = load i64, i64* %PC.i1007
  %11577 = add i64 %11576, 3
  store i64 %11577, i64* %PC.i1007
  %11578 = inttoptr i64 %11573 to i32*
  store i32 %11574, i32* %11578
  store %struct.Memory* %loadMem_40b5cc, %struct.Memory** %MEMORY
  %loadMem_40b5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11580 = getelementptr inbounds %struct.GPR, %struct.GPR* %11579, i32 0, i32 33
  %11581 = getelementptr inbounds %struct.Reg, %struct.Reg* %11580, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %11581 to i64*
  %11582 = load i64, i64* %PC.i1006
  %11583 = add i64 %11582, 329
  %11584 = load i64, i64* %PC.i1006
  %11585 = add i64 %11584, 5
  store i64 %11585, i64* %PC.i1006
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11583, i64* %11586, align 8
  store %struct.Memory* %loadMem_40b5cf, %struct.Memory** %MEMORY
  br label %block_.L_40b718

block_.L_40b5d4:                                  ; preds = %block_40b56c
  %loadMem_40b5d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11588 = getelementptr inbounds %struct.GPR, %struct.GPR* %11587, i32 0, i32 33
  %11589 = getelementptr inbounds %struct.Reg, %struct.Reg* %11588, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %11589 to i64*
  %11590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11591 = getelementptr inbounds %struct.GPR, %struct.GPR* %11590, i32 0, i32 15
  %11592 = getelementptr inbounds %struct.Reg, %struct.Reg* %11591, i32 0, i32 0
  %RBP.i1005 = bitcast %union.anon* %11592 to i64*
  %11593 = load i64, i64* %RBP.i1005
  %11594 = sub i64 %11593, 100
  %11595 = load i64, i64* %PC.i1004
  %11596 = add i64 %11595, 4
  store i64 %11596, i64* %PC.i1004
  %11597 = inttoptr i64 %11594 to i32*
  %11598 = load i32, i32* %11597
  %11599 = sub i32 %11598, 1
  %11600 = icmp ult i32 %11598, 1
  %11601 = zext i1 %11600 to i8
  %11602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11601, i8* %11602, align 1
  %11603 = and i32 %11599, 255
  %11604 = call i32 @llvm.ctpop.i32(i32 %11603)
  %11605 = trunc i32 %11604 to i8
  %11606 = and i8 %11605, 1
  %11607 = xor i8 %11606, 1
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11607, i8* %11608, align 1
  %11609 = xor i32 %11598, 1
  %11610 = xor i32 %11609, %11599
  %11611 = lshr i32 %11610, 4
  %11612 = trunc i32 %11611 to i8
  %11613 = and i8 %11612, 1
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11613, i8* %11614, align 1
  %11615 = icmp eq i32 %11599, 0
  %11616 = zext i1 %11615 to i8
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11616, i8* %11617, align 1
  %11618 = lshr i32 %11599, 31
  %11619 = trunc i32 %11618 to i8
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11619, i8* %11620, align 1
  %11621 = lshr i32 %11598, 31
  %11622 = xor i32 %11618, %11621
  %11623 = add i32 %11622, %11621
  %11624 = icmp eq i32 %11623, 2
  %11625 = zext i1 %11624 to i8
  %11626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11625, i8* %11626, align 1
  store %struct.Memory* %loadMem_40b5d4, %struct.Memory** %MEMORY
  %loadMem_40b5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11628 = getelementptr inbounds %struct.GPR, %struct.GPR* %11627, i32 0, i32 33
  %11629 = getelementptr inbounds %struct.Reg, %struct.Reg* %11628, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %11629 to i64*
  %11630 = load i64, i64* %PC.i1003
  %11631 = add i64 %11630, 163
  %11632 = load i64, i64* %PC.i1003
  %11633 = add i64 %11632, 6
  %11634 = load i64, i64* %PC.i1003
  %11635 = add i64 %11634, 6
  store i64 %11635, i64* %PC.i1003
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11637 = load i8, i8* %11636, align 1
  %11638 = icmp eq i8 %11637, 0
  %11639 = zext i1 %11638 to i8
  store i8 %11639, i8* %BRANCH_TAKEN, align 1
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11641 = select i1 %11638, i64 %11631, i64 %11633
  store i64 %11641, i64* %11640, align 8
  store %struct.Memory* %loadMem_40b5d8, %struct.Memory** %MEMORY
  %loadBr_40b5d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b5d8 = icmp eq i8 %loadBr_40b5d8, 1
  br i1 %cmpBr_40b5d8, label %block_.L_40b67b, label %block_40b5de

block_40b5de:                                     ; preds = %block_.L_40b5d4
  %loadMem_40b5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11643 = getelementptr inbounds %struct.GPR, %struct.GPR* %11642, i32 0, i32 33
  %11644 = getelementptr inbounds %struct.Reg, %struct.Reg* %11643, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %11644 to i64*
  %11645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11646 = getelementptr inbounds %struct.GPR, %struct.GPR* %11645, i32 0, i32 1
  %11647 = getelementptr inbounds %struct.Reg, %struct.Reg* %11646, i32 0, i32 0
  %RAX.i1002 = bitcast %union.anon* %11647 to i64*
  %11648 = load i64, i64* %PC.i1001
  %11649 = add i64 %11648, 8
  store i64 %11649, i64* %PC.i1001
  %11650 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11650, i64* %RAX.i1002, align 8
  store %struct.Memory* %loadMem_40b5de, %struct.Memory** %MEMORY
  %loadMem_40b5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11652 = getelementptr inbounds %struct.GPR, %struct.GPR* %11651, i32 0, i32 33
  %11653 = getelementptr inbounds %struct.Reg, %struct.Reg* %11652, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %11653 to i64*
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11655 = getelementptr inbounds %struct.GPR, %struct.GPR* %11654, i32 0, i32 1
  %11656 = getelementptr inbounds %struct.Reg, %struct.Reg* %11655, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %11656 to i64*
  %11657 = load i64, i64* %RAX.i1000
  %11658 = load i64, i64* %PC.i999
  %11659 = add i64 %11658, 6
  store i64 %11659, i64* %PC.i999
  %11660 = add i64 13112, %11657
  store i64 %11660, i64* %RAX.i1000, align 8
  %11661 = icmp ult i64 %11660, %11657
  %11662 = icmp ult i64 %11660, 13112
  %11663 = or i1 %11661, %11662
  %11664 = zext i1 %11663 to i8
  %11665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11664, i8* %11665, align 1
  %11666 = trunc i64 %11660 to i32
  %11667 = and i32 %11666, 255
  %11668 = call i32 @llvm.ctpop.i32(i32 %11667)
  %11669 = trunc i32 %11668 to i8
  %11670 = and i8 %11669, 1
  %11671 = xor i8 %11670, 1
  %11672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11671, i8* %11672, align 1
  %11673 = xor i64 13112, %11657
  %11674 = xor i64 %11673, %11660
  %11675 = lshr i64 %11674, 4
  %11676 = trunc i64 %11675 to i8
  %11677 = and i8 %11676, 1
  %11678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11677, i8* %11678, align 1
  %11679 = icmp eq i64 %11660, 0
  %11680 = zext i1 %11679 to i8
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11680, i8* %11681, align 1
  %11682 = lshr i64 %11660, 63
  %11683 = trunc i64 %11682 to i8
  %11684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11683, i8* %11684, align 1
  %11685 = lshr i64 %11657, 63
  %11686 = xor i64 %11682, %11685
  %11687 = add i64 %11686, %11682
  %11688 = icmp eq i64 %11687, 2
  %11689 = zext i1 %11688 to i8
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11689, i8* %11690, align 1
  store %struct.Memory* %loadMem_40b5e6, %struct.Memory** %MEMORY
  %loadMem_40b5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11692 = getelementptr inbounds %struct.GPR, %struct.GPR* %11691, i32 0, i32 33
  %11693 = getelementptr inbounds %struct.Reg, %struct.Reg* %11692, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %11693 to i64*
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 5
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %11696 to i64*
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11698 = getelementptr inbounds %struct.GPR, %struct.GPR* %11697, i32 0, i32 15
  %11699 = getelementptr inbounds %struct.Reg, %struct.Reg* %11698, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %11699 to i64*
  %11700 = load i64, i64* %RBP.i998
  %11701 = sub i64 %11700, 16
  %11702 = load i64, i64* %PC.i996
  %11703 = add i64 %11702, 4
  store i64 %11703, i64* %PC.i996
  %11704 = inttoptr i64 %11701 to i32*
  %11705 = load i32, i32* %11704
  %11706 = sext i32 %11705 to i64
  store i64 %11706, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_40b5ec, %struct.Memory** %MEMORY
  %loadMem_40b5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11708 = getelementptr inbounds %struct.GPR, %struct.GPR* %11707, i32 0, i32 33
  %11709 = getelementptr inbounds %struct.Reg, %struct.Reg* %11708, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %11709 to i64*
  %11710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11711 = getelementptr inbounds %struct.GPR, %struct.GPR* %11710, i32 0, i32 5
  %11712 = getelementptr inbounds %struct.Reg, %struct.Reg* %11711, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %11712 to i64*
  %11713 = load i64, i64* %RCX.i995
  %11714 = load i64, i64* %PC.i994
  %11715 = add i64 %11714, 4
  store i64 %11715, i64* %PC.i994
  %11716 = shl i64 %11713, 5
  %11717 = icmp slt i64 %11716, 0
  %11718 = shl i64 %11716, 1
  store i64 %11718, i64* %RCX.i995, align 8
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11720 = zext i1 %11717 to i8
  store i8 %11720, i8* %11719, align 1
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11722 = trunc i64 %11718 to i32
  %11723 = and i32 %11722, 254
  %11724 = call i32 @llvm.ctpop.i32(i32 %11723)
  %11725 = trunc i32 %11724 to i8
  %11726 = and i8 %11725, 1
  %11727 = xor i8 %11726, 1
  store i8 %11727, i8* %11721, align 1
  %11728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11728, align 1
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11730 = icmp eq i64 %11718, 0
  %11731 = zext i1 %11730 to i8
  store i8 %11731, i8* %11729, align 1
  %11732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11733 = lshr i64 %11718, 63
  %11734 = trunc i64 %11733 to i8
  store i8 %11734, i8* %11732, align 1
  %11735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11735, align 1
  store %struct.Memory* %loadMem_40b5f0, %struct.Memory** %MEMORY
  %loadMem_40b5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11737 = getelementptr inbounds %struct.GPR, %struct.GPR* %11736, i32 0, i32 33
  %11738 = getelementptr inbounds %struct.Reg, %struct.Reg* %11737, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %11738 to i64*
  %11739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11740 = getelementptr inbounds %struct.GPR, %struct.GPR* %11739, i32 0, i32 1
  %11741 = getelementptr inbounds %struct.Reg, %struct.Reg* %11740, i32 0, i32 0
  %RAX.i992 = bitcast %union.anon* %11741 to i64*
  %11742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11743 = getelementptr inbounds %struct.GPR, %struct.GPR* %11742, i32 0, i32 5
  %11744 = getelementptr inbounds %struct.Reg, %struct.Reg* %11743, i32 0, i32 0
  %RCX.i993 = bitcast %union.anon* %11744 to i64*
  %11745 = load i64, i64* %RAX.i992
  %11746 = load i64, i64* %RCX.i993
  %11747 = load i64, i64* %PC.i991
  %11748 = add i64 %11747, 3
  store i64 %11748, i64* %PC.i991
  %11749 = add i64 %11746, %11745
  store i64 %11749, i64* %RAX.i992, align 8
  %11750 = icmp ult i64 %11749, %11745
  %11751 = icmp ult i64 %11749, %11746
  %11752 = or i1 %11750, %11751
  %11753 = zext i1 %11752 to i8
  %11754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11753, i8* %11754, align 1
  %11755 = trunc i64 %11749 to i32
  %11756 = and i32 %11755, 255
  %11757 = call i32 @llvm.ctpop.i32(i32 %11756)
  %11758 = trunc i32 %11757 to i8
  %11759 = and i8 %11758, 1
  %11760 = xor i8 %11759, 1
  %11761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11760, i8* %11761, align 1
  %11762 = xor i64 %11746, %11745
  %11763 = xor i64 %11762, %11749
  %11764 = lshr i64 %11763, 4
  %11765 = trunc i64 %11764 to i8
  %11766 = and i8 %11765, 1
  %11767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11766, i8* %11767, align 1
  %11768 = icmp eq i64 %11749, 0
  %11769 = zext i1 %11768 to i8
  %11770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11769, i8* %11770, align 1
  %11771 = lshr i64 %11749, 63
  %11772 = trunc i64 %11771 to i8
  %11773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11772, i8* %11773, align 1
  %11774 = lshr i64 %11745, 63
  %11775 = lshr i64 %11746, 63
  %11776 = xor i64 %11771, %11774
  %11777 = xor i64 %11771, %11775
  %11778 = add i64 %11776, %11777
  %11779 = icmp eq i64 %11778, 2
  %11780 = zext i1 %11779 to i8
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11780, i8* %11781, align 1
  store %struct.Memory* %loadMem_40b5f4, %struct.Memory** %MEMORY
  %loadMem_40b5f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11783 = getelementptr inbounds %struct.GPR, %struct.GPR* %11782, i32 0, i32 33
  %11784 = getelementptr inbounds %struct.Reg, %struct.Reg* %11783, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %11784 to i64*
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11786 = getelementptr inbounds %struct.GPR, %struct.GPR* %11785, i32 0, i32 5
  %11787 = getelementptr inbounds %struct.Reg, %struct.Reg* %11786, i32 0, i32 0
  %RCX.i989 = bitcast %union.anon* %11787 to i64*
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11789 = getelementptr inbounds %struct.GPR, %struct.GPR* %11788, i32 0, i32 15
  %11790 = getelementptr inbounds %struct.Reg, %struct.Reg* %11789, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %11790 to i64*
  %11791 = load i64, i64* %RBP.i990
  %11792 = sub i64 %11791, 20
  %11793 = load i64, i64* %PC.i988
  %11794 = add i64 %11793, 4
  store i64 %11794, i64* %PC.i988
  %11795 = inttoptr i64 %11792 to i32*
  %11796 = load i32, i32* %11795
  %11797 = sext i32 %11796 to i64
  store i64 %11797, i64* %RCX.i989, align 8
  store %struct.Memory* %loadMem_40b5f7, %struct.Memory** %MEMORY
  %loadMem_40b5fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 33
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %11800 to i64*
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11802 = getelementptr inbounds %struct.GPR, %struct.GPR* %11801, i32 0, i32 1
  %11803 = getelementptr inbounds %struct.Reg, %struct.Reg* %11802, i32 0, i32 0
  %RAX.i985 = bitcast %union.anon* %11803 to i64*
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11805 = getelementptr inbounds %struct.GPR, %struct.GPR* %11804, i32 0, i32 5
  %11806 = getelementptr inbounds %struct.Reg, %struct.Reg* %11805, i32 0, i32 0
  %RCX.i986 = bitcast %union.anon* %11806 to i64*
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11808 = getelementptr inbounds %struct.GPR, %struct.GPR* %11807, i32 0, i32 11
  %11809 = getelementptr inbounds %struct.Reg, %struct.Reg* %11808, i32 0, i32 0
  %RDI.i987 = bitcast %union.anon* %11809 to i64*
  %11810 = load i64, i64* %RAX.i985
  %11811 = load i64, i64* %RCX.i986
  %11812 = mul i64 %11811, 4
  %11813 = add i64 %11812, %11810
  %11814 = load i64, i64* %PC.i984
  %11815 = add i64 %11814, 3
  store i64 %11815, i64* %PC.i984
  %11816 = inttoptr i64 %11813 to i32*
  %11817 = load i32, i32* %11816
  %11818 = zext i32 %11817 to i64
  store i64 %11818, i64* %RDI.i987, align 8
  store %struct.Memory* %loadMem_40b5fb, %struct.Memory** %MEMORY
  %loadMem1_40b5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11820 = getelementptr inbounds %struct.GPR, %struct.GPR* %11819, i32 0, i32 33
  %11821 = getelementptr inbounds %struct.Reg, %struct.Reg* %11820, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %11821 to i64*
  %11822 = load i64, i64* %PC.i983
  %11823 = add i64 %11822, -42494
  %11824 = load i64, i64* %PC.i983
  %11825 = add i64 %11824, 5
  %11826 = load i64, i64* %PC.i983
  %11827 = add i64 %11826, 5
  store i64 %11827, i64* %PC.i983
  %11828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11829 = load i64, i64* %11828, align 8
  %11830 = add i64 %11829, -8
  %11831 = inttoptr i64 %11830 to i64*
  store i64 %11825, i64* %11831
  store i64 %11830, i64* %11828, align 8
  %11832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11823, i64* %11832, align 8
  store %struct.Memory* %loadMem1_40b5fe, %struct.Memory** %MEMORY
  %loadMem2_40b5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b5fe = load i64, i64* %3
  %11833 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40b5fe)
  store %struct.Memory* %11833, %struct.Memory** %MEMORY
  %loadMem_40b603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11835 = getelementptr inbounds %struct.GPR, %struct.GPR* %11834, i32 0, i32 33
  %11836 = getelementptr inbounds %struct.Reg, %struct.Reg* %11835, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %11836 to i64*
  %11837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11838 = getelementptr inbounds %struct.GPR, %struct.GPR* %11837, i32 0, i32 5
  %11839 = getelementptr inbounds %struct.Reg, %struct.Reg* %11838, i32 0, i32 0
  %RCX.i980 = bitcast %union.anon* %11839 to i64*
  %11840 = load i64, i64* %PC.i979
  %11841 = add i64 %11840, 10
  store i64 %11841, i64* %PC.i979
  store i64 7490528, i64* %RCX.i980, align 8
  store %struct.Memory* %loadMem_40b603, %struct.Memory** %MEMORY
  %loadMem_40b60d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11843 = getelementptr inbounds %struct.GPR, %struct.GPR* %11842, i32 0, i32 33
  %11844 = getelementptr inbounds %struct.Reg, %struct.Reg* %11843, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %11844 to i64*
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11846 = getelementptr inbounds %struct.GPR, %struct.GPR* %11845, i32 0, i32 7
  %11847 = getelementptr inbounds %struct.Reg, %struct.Reg* %11846, i32 0, i32 0
  %RDX.i978 = bitcast %union.anon* %11847 to i64*
  %11848 = load i64, i64* %PC.i977
  %11849 = add i64 %11848, 10
  store i64 %11849, i64* %PC.i977
  store i64 ptrtoint (%G__0x6f73a0_type* @G__0x6f73a0 to i64), i64* %RDX.i978, align 8
  store %struct.Memory* %loadMem_40b60d, %struct.Memory** %MEMORY
  %loadMem_40b617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11851 = getelementptr inbounds %struct.GPR, %struct.GPR* %11850, i32 0, i32 33
  %11852 = getelementptr inbounds %struct.Reg, %struct.Reg* %11851, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %11852 to i64*
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11854 = getelementptr inbounds %struct.GPR, %struct.GPR* %11853, i32 0, i32 9
  %11855 = getelementptr inbounds %struct.Reg, %struct.Reg* %11854, i32 0, i32 0
  %RSI.i975 = bitcast %union.anon* %11855 to i64*
  %11856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11857 = getelementptr inbounds %struct.GPR, %struct.GPR* %11856, i32 0, i32 15
  %11858 = getelementptr inbounds %struct.Reg, %struct.Reg* %11857, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %11858 to i64*
  %11859 = load i64, i64* %RBP.i976
  %11860 = sub i64 %11859, 4
  %11861 = load i64, i64* %PC.i974
  %11862 = add i64 %11861, 4
  store i64 %11862, i64* %PC.i974
  %11863 = inttoptr i64 %11860 to i32*
  %11864 = load i32, i32* %11863
  %11865 = sext i32 %11864 to i64
  store i64 %11865, i64* %RSI.i975, align 8
  store %struct.Memory* %loadMem_40b617, %struct.Memory** %MEMORY
  %loadMem_40b61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11867 = getelementptr inbounds %struct.GPR, %struct.GPR* %11866, i32 0, i32 33
  %11868 = getelementptr inbounds %struct.Reg, %struct.Reg* %11867, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %11868 to i64*
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 9
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %RSI.i973 = bitcast %union.anon* %11871 to i64*
  %11872 = load i64, i64* %RSI.i973
  %11873 = load i64, i64* %PC.i972
  %11874 = add i64 %11873, 7
  store i64 %11874, i64* %PC.i972
  %11875 = sext i64 %11872 to i128
  %11876 = and i128 %11875, -18446744073709551616
  %11877 = zext i64 %11872 to i128
  %11878 = or i128 %11876, %11877
  %11879 = mul i128 384, %11878
  %11880 = trunc i128 %11879 to i64
  store i64 %11880, i64* %RSI.i973, align 8
  %11881 = sext i64 %11880 to i128
  %11882 = icmp ne i128 %11881, %11879
  %11883 = zext i1 %11882 to i8
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11883, i8* %11884, align 1
  %11885 = trunc i128 %11879 to i32
  %11886 = and i32 %11885, 255
  %11887 = call i32 @llvm.ctpop.i32(i32 %11886)
  %11888 = trunc i32 %11887 to i8
  %11889 = and i8 %11888, 1
  %11890 = xor i8 %11889, 1
  %11891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11890, i8* %11891, align 1
  %11892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11892, align 1
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11893, align 1
  %11894 = lshr i64 %11880, 63
  %11895 = trunc i64 %11894 to i8
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11895, i8* %11896, align 1
  %11897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11883, i8* %11897, align 1
  store %struct.Memory* %loadMem_40b61b, %struct.Memory** %MEMORY
  %loadMem_40b622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11899 = getelementptr inbounds %struct.GPR, %struct.GPR* %11898, i32 0, i32 33
  %11900 = getelementptr inbounds %struct.Reg, %struct.Reg* %11899, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %11900 to i64*
  %11901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11902 = getelementptr inbounds %struct.GPR, %struct.GPR* %11901, i32 0, i32 7
  %11903 = getelementptr inbounds %struct.Reg, %struct.Reg* %11902, i32 0, i32 0
  %RDX.i970 = bitcast %union.anon* %11903 to i64*
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11905 = getelementptr inbounds %struct.GPR, %struct.GPR* %11904, i32 0, i32 9
  %11906 = getelementptr inbounds %struct.Reg, %struct.Reg* %11905, i32 0, i32 0
  %RSI.i971 = bitcast %union.anon* %11906 to i64*
  %11907 = load i64, i64* %RDX.i970
  %11908 = load i64, i64* %RSI.i971
  %11909 = load i64, i64* %PC.i969
  %11910 = add i64 %11909, 3
  store i64 %11910, i64* %PC.i969
  %11911 = add i64 %11908, %11907
  store i64 %11911, i64* %RDX.i970, align 8
  %11912 = icmp ult i64 %11911, %11907
  %11913 = icmp ult i64 %11911, %11908
  %11914 = or i1 %11912, %11913
  %11915 = zext i1 %11914 to i8
  %11916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11915, i8* %11916, align 1
  %11917 = trunc i64 %11911 to i32
  %11918 = and i32 %11917, 255
  %11919 = call i32 @llvm.ctpop.i32(i32 %11918)
  %11920 = trunc i32 %11919 to i8
  %11921 = and i8 %11920, 1
  %11922 = xor i8 %11921, 1
  %11923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11922, i8* %11923, align 1
  %11924 = xor i64 %11908, %11907
  %11925 = xor i64 %11924, %11911
  %11926 = lshr i64 %11925, 4
  %11927 = trunc i64 %11926 to i8
  %11928 = and i8 %11927, 1
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11928, i8* %11929, align 1
  %11930 = icmp eq i64 %11911, 0
  %11931 = zext i1 %11930 to i8
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11931, i8* %11932, align 1
  %11933 = lshr i64 %11911, 63
  %11934 = trunc i64 %11933 to i8
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11934, i8* %11935, align 1
  %11936 = lshr i64 %11907, 63
  %11937 = lshr i64 %11908, 63
  %11938 = xor i64 %11933, %11936
  %11939 = xor i64 %11933, %11937
  %11940 = add i64 %11938, %11939
  %11941 = icmp eq i64 %11940, 2
  %11942 = zext i1 %11941 to i8
  %11943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11942, i8* %11943, align 1
  store %struct.Memory* %loadMem_40b622, %struct.Memory** %MEMORY
  %loadMem_40b625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11945 = getelementptr inbounds %struct.GPR, %struct.GPR* %11944, i32 0, i32 33
  %11946 = getelementptr inbounds %struct.Reg, %struct.Reg* %11945, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %11946 to i64*
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11948 = getelementptr inbounds %struct.GPR, %struct.GPR* %11947, i32 0, i32 9
  %11949 = getelementptr inbounds %struct.Reg, %struct.Reg* %11948, i32 0, i32 0
  %RSI.i967 = bitcast %union.anon* %11949 to i64*
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11951 = getelementptr inbounds %struct.GPR, %struct.GPR* %11950, i32 0, i32 15
  %11952 = getelementptr inbounds %struct.Reg, %struct.Reg* %11951, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %11952 to i64*
  %11953 = load i64, i64* %RBP.i968
  %11954 = sub i64 %11953, 108
  %11955 = load i64, i64* %PC.i966
  %11956 = add i64 %11955, 4
  store i64 %11956, i64* %PC.i966
  %11957 = inttoptr i64 %11954 to i32*
  %11958 = load i32, i32* %11957
  %11959 = sext i32 %11958 to i64
  store i64 %11959, i64* %RSI.i967, align 8
  store %struct.Memory* %loadMem_40b625, %struct.Memory** %MEMORY
  %loadMem_40b629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11961 = getelementptr inbounds %struct.GPR, %struct.GPR* %11960, i32 0, i32 33
  %11962 = getelementptr inbounds %struct.Reg, %struct.Reg* %11961, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %11962 to i64*
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11964 = getelementptr inbounds %struct.GPR, %struct.GPR* %11963, i32 0, i32 9
  %11965 = getelementptr inbounds %struct.Reg, %struct.Reg* %11964, i32 0, i32 0
  %RSI.i965 = bitcast %union.anon* %11965 to i64*
  %11966 = load i64, i64* %RSI.i965
  %11967 = load i64, i64* %PC.i964
  %11968 = add i64 %11967, 4
  store i64 %11968, i64* %PC.i964
  %11969 = shl i64 %11966, 5
  %11970 = icmp slt i64 %11969, 0
  %11971 = shl i64 %11969, 1
  store i64 %11971, i64* %RSI.i965, align 8
  %11972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %11973 = zext i1 %11970 to i8
  store i8 %11973, i8* %11972, align 1
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %11975 = trunc i64 %11971 to i32
  %11976 = and i32 %11975, 254
  %11977 = call i32 @llvm.ctpop.i32(i32 %11976)
  %11978 = trunc i32 %11977 to i8
  %11979 = and i8 %11978, 1
  %11980 = xor i8 %11979, 1
  store i8 %11980, i8* %11974, align 1
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11981, align 1
  %11982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11983 = icmp eq i64 %11971, 0
  %11984 = zext i1 %11983 to i8
  store i8 %11984, i8* %11982, align 1
  %11985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11986 = lshr i64 %11971, 63
  %11987 = trunc i64 %11986 to i8
  store i8 %11987, i8* %11985, align 1
  %11988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11988, align 1
  store %struct.Memory* %loadMem_40b629, %struct.Memory** %MEMORY
  %loadMem_40b62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11990 = getelementptr inbounds %struct.GPR, %struct.GPR* %11989, i32 0, i32 33
  %11991 = getelementptr inbounds %struct.Reg, %struct.Reg* %11990, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %11991 to i64*
  %11992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11993 = getelementptr inbounds %struct.GPR, %struct.GPR* %11992, i32 0, i32 7
  %11994 = getelementptr inbounds %struct.Reg, %struct.Reg* %11993, i32 0, i32 0
  %RDX.i962 = bitcast %union.anon* %11994 to i64*
  %11995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11996 = getelementptr inbounds %struct.GPR, %struct.GPR* %11995, i32 0, i32 9
  %11997 = getelementptr inbounds %struct.Reg, %struct.Reg* %11996, i32 0, i32 0
  %RSI.i963 = bitcast %union.anon* %11997 to i64*
  %11998 = load i64, i64* %RDX.i962
  %11999 = load i64, i64* %RSI.i963
  %12000 = load i64, i64* %PC.i961
  %12001 = add i64 %12000, 3
  store i64 %12001, i64* %PC.i961
  %12002 = add i64 %11999, %11998
  store i64 %12002, i64* %RDX.i962, align 8
  %12003 = icmp ult i64 %12002, %11998
  %12004 = icmp ult i64 %12002, %11999
  %12005 = or i1 %12003, %12004
  %12006 = zext i1 %12005 to i8
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12006, i8* %12007, align 1
  %12008 = trunc i64 %12002 to i32
  %12009 = and i32 %12008, 255
  %12010 = call i32 @llvm.ctpop.i32(i32 %12009)
  %12011 = trunc i32 %12010 to i8
  %12012 = and i8 %12011, 1
  %12013 = xor i8 %12012, 1
  %12014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12013, i8* %12014, align 1
  %12015 = xor i64 %11999, %11998
  %12016 = xor i64 %12015, %12002
  %12017 = lshr i64 %12016, 4
  %12018 = trunc i64 %12017 to i8
  %12019 = and i8 %12018, 1
  %12020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12019, i8* %12020, align 1
  %12021 = icmp eq i64 %12002, 0
  %12022 = zext i1 %12021 to i8
  %12023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12022, i8* %12023, align 1
  %12024 = lshr i64 %12002, 63
  %12025 = trunc i64 %12024 to i8
  %12026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12025, i8* %12026, align 1
  %12027 = lshr i64 %11998, 63
  %12028 = lshr i64 %11999, 63
  %12029 = xor i64 %12024, %12027
  %12030 = xor i64 %12024, %12028
  %12031 = add i64 %12029, %12030
  %12032 = icmp eq i64 %12031, 2
  %12033 = zext i1 %12032 to i8
  %12034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12033, i8* %12034, align 1
  store %struct.Memory* %loadMem_40b62d, %struct.Memory** %MEMORY
  %loadMem_40b630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12036 = getelementptr inbounds %struct.GPR, %struct.GPR* %12035, i32 0, i32 33
  %12037 = getelementptr inbounds %struct.Reg, %struct.Reg* %12036, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %12037 to i64*
  %12038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12039 = getelementptr inbounds %struct.GPR, %struct.GPR* %12038, i32 0, i32 9
  %12040 = getelementptr inbounds %struct.Reg, %struct.Reg* %12039, i32 0, i32 0
  %RSI.i959 = bitcast %union.anon* %12040 to i64*
  %12041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12042 = getelementptr inbounds %struct.GPR, %struct.GPR* %12041, i32 0, i32 15
  %12043 = getelementptr inbounds %struct.Reg, %struct.Reg* %12042, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %12043 to i64*
  %12044 = load i64, i64* %RBP.i960
  %12045 = sub i64 %12044, 16
  %12046 = load i64, i64* %PC.i958
  %12047 = add i64 %12046, 4
  store i64 %12047, i64* %PC.i958
  %12048 = inttoptr i64 %12045 to i32*
  %12049 = load i32, i32* %12048
  %12050 = sext i32 %12049 to i64
  store i64 %12050, i64* %RSI.i959, align 8
  store %struct.Memory* %loadMem_40b630, %struct.Memory** %MEMORY
  %loadMem_40b634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12052 = getelementptr inbounds %struct.GPR, %struct.GPR* %12051, i32 0, i32 33
  %12053 = getelementptr inbounds %struct.Reg, %struct.Reg* %12052, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %12053 to i64*
  %12054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12055 = getelementptr inbounds %struct.GPR, %struct.GPR* %12054, i32 0, i32 9
  %12056 = getelementptr inbounds %struct.Reg, %struct.Reg* %12055, i32 0, i32 0
  %RSI.i957 = bitcast %union.anon* %12056 to i64*
  %12057 = load i64, i64* %RSI.i957
  %12058 = load i64, i64* %PC.i956
  %12059 = add i64 %12058, 4
  store i64 %12059, i64* %PC.i956
  %12060 = shl i64 %12057, 3
  %12061 = icmp slt i64 %12060, 0
  %12062 = shl i64 %12060, 1
  store i64 %12062, i64* %RSI.i957, align 8
  %12063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12064 = zext i1 %12061 to i8
  store i8 %12064, i8* %12063, align 1
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12066 = trunc i64 %12062 to i32
  %12067 = and i32 %12066, 254
  %12068 = call i32 @llvm.ctpop.i32(i32 %12067)
  %12069 = trunc i32 %12068 to i8
  %12070 = and i8 %12069, 1
  %12071 = xor i8 %12070, 1
  store i8 %12071, i8* %12065, align 1
  %12072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12072, align 1
  %12073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12074 = icmp eq i64 %12062, 0
  %12075 = zext i1 %12074 to i8
  store i8 %12075, i8* %12073, align 1
  %12076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12077 = lshr i64 %12062, 63
  %12078 = trunc i64 %12077 to i8
  store i8 %12078, i8* %12076, align 1
  %12079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12079, align 1
  store %struct.Memory* %loadMem_40b634, %struct.Memory** %MEMORY
  %loadMem_40b638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12081 = getelementptr inbounds %struct.GPR, %struct.GPR* %12080, i32 0, i32 33
  %12082 = getelementptr inbounds %struct.Reg, %struct.Reg* %12081, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %12082 to i64*
  %12083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12084 = getelementptr inbounds %struct.GPR, %struct.GPR* %12083, i32 0, i32 7
  %12085 = getelementptr inbounds %struct.Reg, %struct.Reg* %12084, i32 0, i32 0
  %RDX.i954 = bitcast %union.anon* %12085 to i64*
  %12086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12087 = getelementptr inbounds %struct.GPR, %struct.GPR* %12086, i32 0, i32 9
  %12088 = getelementptr inbounds %struct.Reg, %struct.Reg* %12087, i32 0, i32 0
  %RSI.i955 = bitcast %union.anon* %12088 to i64*
  %12089 = load i64, i64* %RDX.i954
  %12090 = load i64, i64* %RSI.i955
  %12091 = load i64, i64* %PC.i953
  %12092 = add i64 %12091, 3
  store i64 %12092, i64* %PC.i953
  %12093 = add i64 %12090, %12089
  store i64 %12093, i64* %RDX.i954, align 8
  %12094 = icmp ult i64 %12093, %12089
  %12095 = icmp ult i64 %12093, %12090
  %12096 = or i1 %12094, %12095
  %12097 = zext i1 %12096 to i8
  %12098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12097, i8* %12098, align 1
  %12099 = trunc i64 %12093 to i32
  %12100 = and i32 %12099, 255
  %12101 = call i32 @llvm.ctpop.i32(i32 %12100)
  %12102 = trunc i32 %12101 to i8
  %12103 = and i8 %12102, 1
  %12104 = xor i8 %12103, 1
  %12105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12104, i8* %12105, align 1
  %12106 = xor i64 %12090, %12089
  %12107 = xor i64 %12106, %12093
  %12108 = lshr i64 %12107, 4
  %12109 = trunc i64 %12108 to i8
  %12110 = and i8 %12109, 1
  %12111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12110, i8* %12111, align 1
  %12112 = icmp eq i64 %12093, 0
  %12113 = zext i1 %12112 to i8
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12113, i8* %12114, align 1
  %12115 = lshr i64 %12093, 63
  %12116 = trunc i64 %12115 to i8
  %12117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12116, i8* %12117, align 1
  %12118 = lshr i64 %12089, 63
  %12119 = lshr i64 %12090, 63
  %12120 = xor i64 %12115, %12118
  %12121 = xor i64 %12115, %12119
  %12122 = add i64 %12120, %12121
  %12123 = icmp eq i64 %12122, 2
  %12124 = zext i1 %12123 to i8
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12124, i8* %12125, align 1
  store %struct.Memory* %loadMem_40b638, %struct.Memory** %MEMORY
  %loadMem_40b63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12127 = getelementptr inbounds %struct.GPR, %struct.GPR* %12126, i32 0, i32 33
  %12128 = getelementptr inbounds %struct.Reg, %struct.Reg* %12127, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %12128 to i64*
  %12129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12130 = getelementptr inbounds %struct.GPR, %struct.GPR* %12129, i32 0, i32 9
  %12131 = getelementptr inbounds %struct.Reg, %struct.Reg* %12130, i32 0, i32 0
  %RSI.i951 = bitcast %union.anon* %12131 to i64*
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12133 = getelementptr inbounds %struct.GPR, %struct.GPR* %12132, i32 0, i32 15
  %12134 = getelementptr inbounds %struct.Reg, %struct.Reg* %12133, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %12134 to i64*
  %12135 = load i64, i64* %RBP.i952
  %12136 = sub i64 %12135, 20
  %12137 = load i64, i64* %PC.i950
  %12138 = add i64 %12137, 4
  store i64 %12138, i64* %PC.i950
  %12139 = inttoptr i64 %12136 to i32*
  %12140 = load i32, i32* %12139
  %12141 = sext i32 %12140 to i64
  store i64 %12141, i64* %RSI.i951, align 8
  store %struct.Memory* %loadMem_40b63b, %struct.Memory** %MEMORY
  %loadMem_40b63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12143 = getelementptr inbounds %struct.GPR, %struct.GPR* %12142, i32 0, i32 33
  %12144 = getelementptr inbounds %struct.Reg, %struct.Reg* %12143, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %12144 to i64*
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12146 = getelementptr inbounds %struct.GPR, %struct.GPR* %12145, i32 0, i32 1
  %12147 = getelementptr inbounds %struct.Reg, %struct.Reg* %12146, i32 0, i32 0
  %RAX.i947 = bitcast %union.anon* %12147 to i64*
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12149 = getelementptr inbounds %struct.GPR, %struct.GPR* %12148, i32 0, i32 7
  %12150 = getelementptr inbounds %struct.Reg, %struct.Reg* %12149, i32 0, i32 0
  %RDX.i948 = bitcast %union.anon* %12150 to i64*
  %12151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12152 = getelementptr inbounds %struct.GPR, %struct.GPR* %12151, i32 0, i32 9
  %12153 = getelementptr inbounds %struct.Reg, %struct.Reg* %12152, i32 0, i32 0
  %RSI.i949 = bitcast %union.anon* %12153 to i64*
  %12154 = load i64, i64* %RAX.i947
  %12155 = load i64, i64* %RDX.i948
  %12156 = load i64, i64* %RSI.i949
  %12157 = mul i64 %12156, 4
  %12158 = add i64 %12157, %12155
  %12159 = load i64, i64* %PC.i946
  %12160 = add i64 %12159, 4
  store i64 %12160, i64* %PC.i946
  %12161 = inttoptr i64 %12158 to i32*
  %12162 = load i32, i32* %12161
  %12163 = shl i64 %12154, 32
  %12164 = ashr exact i64 %12163, 32
  %12165 = sext i32 %12162 to i64
  %12166 = mul i64 %12165, %12164
  %12167 = trunc i64 %12166 to i32
  %12168 = and i64 %12166, 4294967295
  store i64 %12168, i64* %RAX.i947, align 8
  %12169 = shl i64 %12166, 32
  %12170 = ashr exact i64 %12169, 32
  %12171 = icmp ne i64 %12170, %12166
  %12172 = zext i1 %12171 to i8
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12172, i8* %12173, align 1
  %12174 = and i32 %12167, 255
  %12175 = call i32 @llvm.ctpop.i32(i32 %12174)
  %12176 = trunc i32 %12175 to i8
  %12177 = and i8 %12176, 1
  %12178 = xor i8 %12177, 1
  %12179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12178, i8* %12179, align 1
  %12180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12180, align 1
  %12181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12181, align 1
  %12182 = lshr i32 %12167, 31
  %12183 = trunc i32 %12182 to i8
  %12184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12183, i8* %12184, align 1
  %12185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12172, i8* %12185, align 1
  store %struct.Memory* %loadMem_40b63f, %struct.Memory** %MEMORY
  %loadMem_40b643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12187 = getelementptr inbounds %struct.GPR, %struct.GPR* %12186, i32 0, i32 33
  %12188 = getelementptr inbounds %struct.Reg, %struct.Reg* %12187, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %12188 to i64*
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12190 = getelementptr inbounds %struct.GPR, %struct.GPR* %12189, i32 0, i32 7
  %12191 = getelementptr inbounds %struct.Reg, %struct.Reg* %12190, i32 0, i32 0
  %RDX.i944 = bitcast %union.anon* %12191 to i64*
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12193 = getelementptr inbounds %struct.GPR, %struct.GPR* %12192, i32 0, i32 15
  %12194 = getelementptr inbounds %struct.Reg, %struct.Reg* %12193, i32 0, i32 0
  %RBP.i945 = bitcast %union.anon* %12194 to i64*
  %12195 = load i64, i64* %RBP.i945
  %12196 = sub i64 %12195, 4
  %12197 = load i64, i64* %PC.i943
  %12198 = add i64 %12197, 4
  store i64 %12198, i64* %PC.i943
  %12199 = inttoptr i64 %12196 to i32*
  %12200 = load i32, i32* %12199
  %12201 = sext i32 %12200 to i64
  store i64 %12201, i64* %RDX.i944, align 8
  store %struct.Memory* %loadMem_40b643, %struct.Memory** %MEMORY
  %loadMem_40b647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12203 = getelementptr inbounds %struct.GPR, %struct.GPR* %12202, i32 0, i32 33
  %12204 = getelementptr inbounds %struct.Reg, %struct.Reg* %12203, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %12204 to i64*
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12206 = getelementptr inbounds %struct.GPR, %struct.GPR* %12205, i32 0, i32 7
  %12207 = getelementptr inbounds %struct.Reg, %struct.Reg* %12206, i32 0, i32 0
  %RDX.i942 = bitcast %union.anon* %12207 to i64*
  %12208 = load i64, i64* %RDX.i942
  %12209 = load i64, i64* %PC.i941
  %12210 = add i64 %12209, 7
  store i64 %12210, i64* %PC.i941
  %12211 = sext i64 %12208 to i128
  %12212 = and i128 %12211, -18446744073709551616
  %12213 = zext i64 %12208 to i128
  %12214 = or i128 %12212, %12213
  %12215 = mul i128 832, %12214
  %12216 = trunc i128 %12215 to i64
  store i64 %12216, i64* %RDX.i942, align 8
  %12217 = sext i64 %12216 to i128
  %12218 = icmp ne i128 %12217, %12215
  %12219 = zext i1 %12218 to i8
  %12220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12219, i8* %12220, align 1
  %12221 = trunc i128 %12215 to i32
  %12222 = and i32 %12221, 255
  %12223 = call i32 @llvm.ctpop.i32(i32 %12222)
  %12224 = trunc i32 %12223 to i8
  %12225 = and i8 %12224, 1
  %12226 = xor i8 %12225, 1
  %12227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12226, i8* %12227, align 1
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12228, align 1
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12229, align 1
  %12230 = lshr i64 %12216, 63
  %12231 = trunc i64 %12230 to i8
  %12232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12231, i8* %12232, align 1
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12219, i8* %12233, align 1
  store %struct.Memory* %loadMem_40b647, %struct.Memory** %MEMORY
  %loadMem_40b64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12235 = getelementptr inbounds %struct.GPR, %struct.GPR* %12234, i32 0, i32 33
  %12236 = getelementptr inbounds %struct.Reg, %struct.Reg* %12235, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %12236 to i64*
  %12237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12238 = getelementptr inbounds %struct.GPR, %struct.GPR* %12237, i32 0, i32 5
  %12239 = getelementptr inbounds %struct.Reg, %struct.Reg* %12238, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %12239 to i64*
  %12240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12241 = getelementptr inbounds %struct.GPR, %struct.GPR* %12240, i32 0, i32 7
  %12242 = getelementptr inbounds %struct.Reg, %struct.Reg* %12241, i32 0, i32 0
  %RDX.i940 = bitcast %union.anon* %12242 to i64*
  %12243 = load i64, i64* %RCX.i939
  %12244 = load i64, i64* %RDX.i940
  %12245 = load i64, i64* %PC.i938
  %12246 = add i64 %12245, 3
  store i64 %12246, i64* %PC.i938
  %12247 = add i64 %12244, %12243
  store i64 %12247, i64* %RCX.i939, align 8
  %12248 = icmp ult i64 %12247, %12243
  %12249 = icmp ult i64 %12247, %12244
  %12250 = or i1 %12248, %12249
  %12251 = zext i1 %12250 to i8
  %12252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12251, i8* %12252, align 1
  %12253 = trunc i64 %12247 to i32
  %12254 = and i32 %12253, 255
  %12255 = call i32 @llvm.ctpop.i32(i32 %12254)
  %12256 = trunc i32 %12255 to i8
  %12257 = and i8 %12256, 1
  %12258 = xor i8 %12257, 1
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12258, i8* %12259, align 1
  %12260 = xor i64 %12244, %12243
  %12261 = xor i64 %12260, %12247
  %12262 = lshr i64 %12261, 4
  %12263 = trunc i64 %12262 to i8
  %12264 = and i8 %12263, 1
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12264, i8* %12265, align 1
  %12266 = icmp eq i64 %12247, 0
  %12267 = zext i1 %12266 to i8
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12267, i8* %12268, align 1
  %12269 = lshr i64 %12247, 63
  %12270 = trunc i64 %12269 to i8
  %12271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12270, i8* %12271, align 1
  %12272 = lshr i64 %12243, 63
  %12273 = lshr i64 %12244, 63
  %12274 = xor i64 %12269, %12272
  %12275 = xor i64 %12269, %12273
  %12276 = add i64 %12274, %12275
  %12277 = icmp eq i64 %12276, 2
  %12278 = zext i1 %12277 to i8
  %12279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12278, i8* %12279, align 1
  store %struct.Memory* %loadMem_40b64e, %struct.Memory** %MEMORY
  %loadMem_40b651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12281 = getelementptr inbounds %struct.GPR, %struct.GPR* %12280, i32 0, i32 33
  %12282 = getelementptr inbounds %struct.Reg, %struct.Reg* %12281, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %12282 to i64*
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12284 = getelementptr inbounds %struct.GPR, %struct.GPR* %12283, i32 0, i32 7
  %12285 = getelementptr inbounds %struct.Reg, %struct.Reg* %12284, i32 0, i32 0
  %RDX.i936 = bitcast %union.anon* %12285 to i64*
  %12286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12287 = getelementptr inbounds %struct.GPR, %struct.GPR* %12286, i32 0, i32 15
  %12288 = getelementptr inbounds %struct.Reg, %struct.Reg* %12287, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %12288 to i64*
  %12289 = load i64, i64* %RBP.i937
  %12290 = sub i64 %12289, 104
  %12291 = load i64, i64* %PC.i935
  %12292 = add i64 %12291, 4
  store i64 %12292, i64* %PC.i935
  %12293 = inttoptr i64 %12290 to i32*
  %12294 = load i32, i32* %12293
  %12295 = sext i32 %12294 to i64
  store i64 %12295, i64* %RDX.i936, align 8
  store %struct.Memory* %loadMem_40b651, %struct.Memory** %MEMORY
  %loadMem_40b655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12297 = getelementptr inbounds %struct.GPR, %struct.GPR* %12296, i32 0, i32 33
  %12298 = getelementptr inbounds %struct.Reg, %struct.Reg* %12297, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %12298 to i64*
  %12299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12300 = getelementptr inbounds %struct.GPR, %struct.GPR* %12299, i32 0, i32 7
  %12301 = getelementptr inbounds %struct.Reg, %struct.Reg* %12300, i32 0, i32 0
  %RDX.i934 = bitcast %union.anon* %12301 to i64*
  %12302 = load i64, i64* %RDX.i934
  %12303 = load i64, i64* %PC.i933
  %12304 = add i64 %12303, 4
  store i64 %12304, i64* %PC.i933
  %12305 = shl i64 %12302, 5
  %12306 = icmp slt i64 %12305, 0
  %12307 = shl i64 %12305, 1
  store i64 %12307, i64* %RDX.i934, align 8
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12309 = zext i1 %12306 to i8
  store i8 %12309, i8* %12308, align 1
  %12310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12311 = trunc i64 %12307 to i32
  %12312 = and i32 %12311, 254
  %12313 = call i32 @llvm.ctpop.i32(i32 %12312)
  %12314 = trunc i32 %12313 to i8
  %12315 = and i8 %12314, 1
  %12316 = xor i8 %12315, 1
  store i8 %12316, i8* %12310, align 1
  %12317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12317, align 1
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12319 = icmp eq i64 %12307, 0
  %12320 = zext i1 %12319 to i8
  store i8 %12320, i8* %12318, align 1
  %12321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12322 = lshr i64 %12307, 63
  %12323 = trunc i64 %12322 to i8
  store i8 %12323, i8* %12321, align 1
  %12324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12324, align 1
  store %struct.Memory* %loadMem_40b655, %struct.Memory** %MEMORY
  %loadMem_40b659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12326 = getelementptr inbounds %struct.GPR, %struct.GPR* %12325, i32 0, i32 33
  %12327 = getelementptr inbounds %struct.Reg, %struct.Reg* %12326, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %12327 to i64*
  %12328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12329 = getelementptr inbounds %struct.GPR, %struct.GPR* %12328, i32 0, i32 5
  %12330 = getelementptr inbounds %struct.Reg, %struct.Reg* %12329, i32 0, i32 0
  %RCX.i931 = bitcast %union.anon* %12330 to i64*
  %12331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12332 = getelementptr inbounds %struct.GPR, %struct.GPR* %12331, i32 0, i32 7
  %12333 = getelementptr inbounds %struct.Reg, %struct.Reg* %12332, i32 0, i32 0
  %RDX.i932 = bitcast %union.anon* %12333 to i64*
  %12334 = load i64, i64* %RCX.i931
  %12335 = load i64, i64* %RDX.i932
  %12336 = load i64, i64* %PC.i930
  %12337 = add i64 %12336, 3
  store i64 %12337, i64* %PC.i930
  %12338 = add i64 %12335, %12334
  store i64 %12338, i64* %RCX.i931, align 8
  %12339 = icmp ult i64 %12338, %12334
  %12340 = icmp ult i64 %12338, %12335
  %12341 = or i1 %12339, %12340
  %12342 = zext i1 %12341 to i8
  %12343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12342, i8* %12343, align 1
  %12344 = trunc i64 %12338 to i32
  %12345 = and i32 %12344, 255
  %12346 = call i32 @llvm.ctpop.i32(i32 %12345)
  %12347 = trunc i32 %12346 to i8
  %12348 = and i8 %12347, 1
  %12349 = xor i8 %12348, 1
  %12350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12349, i8* %12350, align 1
  %12351 = xor i64 %12335, %12334
  %12352 = xor i64 %12351, %12338
  %12353 = lshr i64 %12352, 4
  %12354 = trunc i64 %12353 to i8
  %12355 = and i8 %12354, 1
  %12356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12355, i8* %12356, align 1
  %12357 = icmp eq i64 %12338, 0
  %12358 = zext i1 %12357 to i8
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12358, i8* %12359, align 1
  %12360 = lshr i64 %12338, 63
  %12361 = trunc i64 %12360 to i8
  %12362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12361, i8* %12362, align 1
  %12363 = lshr i64 %12334, 63
  %12364 = lshr i64 %12335, 63
  %12365 = xor i64 %12360, %12363
  %12366 = xor i64 %12360, %12364
  %12367 = add i64 %12365, %12366
  %12368 = icmp eq i64 %12367, 2
  %12369 = zext i1 %12368 to i8
  %12370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12369, i8* %12370, align 1
  store %struct.Memory* %loadMem_40b659, %struct.Memory** %MEMORY
  %loadMem_40b65c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12372 = getelementptr inbounds %struct.GPR, %struct.GPR* %12371, i32 0, i32 33
  %12373 = getelementptr inbounds %struct.Reg, %struct.Reg* %12372, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %12373 to i64*
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12375 = getelementptr inbounds %struct.GPR, %struct.GPR* %12374, i32 0, i32 7
  %12376 = getelementptr inbounds %struct.Reg, %struct.Reg* %12375, i32 0, i32 0
  %RDX.i928 = bitcast %union.anon* %12376 to i64*
  %12377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12378 = getelementptr inbounds %struct.GPR, %struct.GPR* %12377, i32 0, i32 15
  %12379 = getelementptr inbounds %struct.Reg, %struct.Reg* %12378, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %12379 to i64*
  %12380 = load i64, i64* %RBP.i929
  %12381 = sub i64 %12380, 16
  %12382 = load i64, i64* %PC.i927
  %12383 = add i64 %12382, 4
  store i64 %12383, i64* %PC.i927
  %12384 = inttoptr i64 %12381 to i32*
  %12385 = load i32, i32* %12384
  %12386 = sext i32 %12385 to i64
  store i64 %12386, i64* %RDX.i928, align 8
  store %struct.Memory* %loadMem_40b65c, %struct.Memory** %MEMORY
  %loadMem_40b660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12388 = getelementptr inbounds %struct.GPR, %struct.GPR* %12387, i32 0, i32 33
  %12389 = getelementptr inbounds %struct.Reg, %struct.Reg* %12388, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %12389 to i64*
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12391 = getelementptr inbounds %struct.GPR, %struct.GPR* %12390, i32 0, i32 7
  %12392 = getelementptr inbounds %struct.Reg, %struct.Reg* %12391, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %12392 to i64*
  %12393 = load i64, i64* %RDX.i926
  %12394 = load i64, i64* %PC.i925
  %12395 = add i64 %12394, 4
  store i64 %12395, i64* %PC.i925
  %12396 = shl i64 %12393, 3
  %12397 = icmp slt i64 %12396, 0
  %12398 = shl i64 %12396, 1
  store i64 %12398, i64* %RDX.i926, align 8
  %12399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12400 = zext i1 %12397 to i8
  store i8 %12400, i8* %12399, align 1
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12402 = trunc i64 %12398 to i32
  %12403 = and i32 %12402, 254
  %12404 = call i32 @llvm.ctpop.i32(i32 %12403)
  %12405 = trunc i32 %12404 to i8
  %12406 = and i8 %12405, 1
  %12407 = xor i8 %12406, 1
  store i8 %12407, i8* %12401, align 1
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12408, align 1
  %12409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12410 = icmp eq i64 %12398, 0
  %12411 = zext i1 %12410 to i8
  store i8 %12411, i8* %12409, align 1
  %12412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12413 = lshr i64 %12398, 63
  %12414 = trunc i64 %12413 to i8
  store i8 %12414, i8* %12412, align 1
  %12415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12415, align 1
  store %struct.Memory* %loadMem_40b660, %struct.Memory** %MEMORY
  %loadMem_40b664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12417 = getelementptr inbounds %struct.GPR, %struct.GPR* %12416, i32 0, i32 33
  %12418 = getelementptr inbounds %struct.Reg, %struct.Reg* %12417, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %12418 to i64*
  %12419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12420 = getelementptr inbounds %struct.GPR, %struct.GPR* %12419, i32 0, i32 5
  %12421 = getelementptr inbounds %struct.Reg, %struct.Reg* %12420, i32 0, i32 0
  %RCX.i923 = bitcast %union.anon* %12421 to i64*
  %12422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12423 = getelementptr inbounds %struct.GPR, %struct.GPR* %12422, i32 0, i32 7
  %12424 = getelementptr inbounds %struct.Reg, %struct.Reg* %12423, i32 0, i32 0
  %RDX.i924 = bitcast %union.anon* %12424 to i64*
  %12425 = load i64, i64* %RCX.i923
  %12426 = load i64, i64* %RDX.i924
  %12427 = load i64, i64* %PC.i922
  %12428 = add i64 %12427, 3
  store i64 %12428, i64* %PC.i922
  %12429 = add i64 %12426, %12425
  store i64 %12429, i64* %RCX.i923, align 8
  %12430 = icmp ult i64 %12429, %12425
  %12431 = icmp ult i64 %12429, %12426
  %12432 = or i1 %12430, %12431
  %12433 = zext i1 %12432 to i8
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12433, i8* %12434, align 1
  %12435 = trunc i64 %12429 to i32
  %12436 = and i32 %12435, 255
  %12437 = call i32 @llvm.ctpop.i32(i32 %12436)
  %12438 = trunc i32 %12437 to i8
  %12439 = and i8 %12438, 1
  %12440 = xor i8 %12439, 1
  %12441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12440, i8* %12441, align 1
  %12442 = xor i64 %12426, %12425
  %12443 = xor i64 %12442, %12429
  %12444 = lshr i64 %12443, 4
  %12445 = trunc i64 %12444 to i8
  %12446 = and i8 %12445, 1
  %12447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12446, i8* %12447, align 1
  %12448 = icmp eq i64 %12429, 0
  %12449 = zext i1 %12448 to i8
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12449, i8* %12450, align 1
  %12451 = lshr i64 %12429, 63
  %12452 = trunc i64 %12451 to i8
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12452, i8* %12453, align 1
  %12454 = lshr i64 %12425, 63
  %12455 = lshr i64 %12426, 63
  %12456 = xor i64 %12451, %12454
  %12457 = xor i64 %12451, %12455
  %12458 = add i64 %12456, %12457
  %12459 = icmp eq i64 %12458, 2
  %12460 = zext i1 %12459 to i8
  %12461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12460, i8* %12461, align 1
  store %struct.Memory* %loadMem_40b664, %struct.Memory** %MEMORY
  %loadMem_40b667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12463 = getelementptr inbounds %struct.GPR, %struct.GPR* %12462, i32 0, i32 33
  %12464 = getelementptr inbounds %struct.Reg, %struct.Reg* %12463, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %12464 to i64*
  %12465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12466 = getelementptr inbounds %struct.GPR, %struct.GPR* %12465, i32 0, i32 7
  %12467 = getelementptr inbounds %struct.Reg, %struct.Reg* %12466, i32 0, i32 0
  %RDX.i920 = bitcast %union.anon* %12467 to i64*
  %12468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12469 = getelementptr inbounds %struct.GPR, %struct.GPR* %12468, i32 0, i32 15
  %12470 = getelementptr inbounds %struct.Reg, %struct.Reg* %12469, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %12470 to i64*
  %12471 = load i64, i64* %RBP.i921
  %12472 = sub i64 %12471, 20
  %12473 = load i64, i64* %PC.i919
  %12474 = add i64 %12473, 4
  store i64 %12474, i64* %PC.i919
  %12475 = inttoptr i64 %12472 to i32*
  %12476 = load i32, i32* %12475
  %12477 = sext i32 %12476 to i64
  store i64 %12477, i64* %RDX.i920, align 8
  store %struct.Memory* %loadMem_40b667, %struct.Memory** %MEMORY
  %loadMem_40b66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12479 = getelementptr inbounds %struct.GPR, %struct.GPR* %12478, i32 0, i32 33
  %12480 = getelementptr inbounds %struct.Reg, %struct.Reg* %12479, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %12480 to i64*
  %12481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12482 = getelementptr inbounds %struct.GPR, %struct.GPR* %12481, i32 0, i32 1
  %12483 = getelementptr inbounds %struct.Reg, %struct.Reg* %12482, i32 0, i32 0
  %RAX.i916 = bitcast %union.anon* %12483 to i64*
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12485 = getelementptr inbounds %struct.GPR, %struct.GPR* %12484, i32 0, i32 5
  %12486 = getelementptr inbounds %struct.Reg, %struct.Reg* %12485, i32 0, i32 0
  %RCX.i917 = bitcast %union.anon* %12486 to i64*
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12488 = getelementptr inbounds %struct.GPR, %struct.GPR* %12487, i32 0, i32 7
  %12489 = getelementptr inbounds %struct.Reg, %struct.Reg* %12488, i32 0, i32 0
  %RDX.i918 = bitcast %union.anon* %12489 to i64*
  %12490 = load i64, i64* %RAX.i916
  %12491 = load i64, i64* %RCX.i917
  %12492 = load i64, i64* %RDX.i918
  %12493 = mul i64 %12492, 4
  %12494 = add i64 %12493, %12491
  %12495 = load i64, i64* %PC.i915
  %12496 = add i64 %12495, 3
  store i64 %12496, i64* %PC.i915
  %12497 = trunc i64 %12490 to i32
  %12498 = inttoptr i64 %12494 to i32*
  %12499 = load i32, i32* %12498
  %12500 = add i32 %12499, %12497
  %12501 = zext i32 %12500 to i64
  store i64 %12501, i64* %RAX.i916, align 8
  %12502 = icmp ult i32 %12500, %12497
  %12503 = icmp ult i32 %12500, %12499
  %12504 = or i1 %12502, %12503
  %12505 = zext i1 %12504 to i8
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12505, i8* %12506, align 1
  %12507 = and i32 %12500, 255
  %12508 = call i32 @llvm.ctpop.i32(i32 %12507)
  %12509 = trunc i32 %12508 to i8
  %12510 = and i8 %12509, 1
  %12511 = xor i8 %12510, 1
  %12512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12511, i8* %12512, align 1
  %12513 = xor i32 %12499, %12497
  %12514 = xor i32 %12513, %12500
  %12515 = lshr i32 %12514, 4
  %12516 = trunc i32 %12515 to i8
  %12517 = and i8 %12516, 1
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12517, i8* %12518, align 1
  %12519 = icmp eq i32 %12500, 0
  %12520 = zext i1 %12519 to i8
  %12521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12520, i8* %12521, align 1
  %12522 = lshr i32 %12500, 31
  %12523 = trunc i32 %12522 to i8
  %12524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12523, i8* %12524, align 1
  %12525 = lshr i32 %12497, 31
  %12526 = lshr i32 %12499, 31
  %12527 = xor i32 %12522, %12525
  %12528 = xor i32 %12522, %12526
  %12529 = add i32 %12527, %12528
  %12530 = icmp eq i32 %12529, 2
  %12531 = zext i1 %12530 to i8
  %12532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12531, i8* %12532, align 1
  store %struct.Memory* %loadMem_40b66b, %struct.Memory** %MEMORY
  %loadMem_40b66e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12534 = getelementptr inbounds %struct.GPR, %struct.GPR* %12533, i32 0, i32 33
  %12535 = getelementptr inbounds %struct.Reg, %struct.Reg* %12534, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %12535 to i64*
  %12536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12537 = getelementptr inbounds %struct.GPR, %struct.GPR* %12536, i32 0, i32 5
  %12538 = getelementptr inbounds %struct.Reg, %struct.Reg* %12537, i32 0, i32 0
  %RCX.i913 = bitcast %union.anon* %12538 to i64*
  %12539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12540 = getelementptr inbounds %struct.GPR, %struct.GPR* %12539, i32 0, i32 15
  %12541 = getelementptr inbounds %struct.Reg, %struct.Reg* %12540, i32 0, i32 0
  %RBP.i914 = bitcast %union.anon* %12541 to i64*
  %12542 = load i64, i64* %RBP.i914
  %12543 = sub i64 %12542, 112
  %12544 = load i64, i64* %PC.i912
  %12545 = add i64 %12544, 3
  store i64 %12545, i64* %PC.i912
  %12546 = inttoptr i64 %12543 to i32*
  %12547 = load i32, i32* %12546
  %12548 = zext i32 %12547 to i64
  store i64 %12548, i64* %RCX.i913, align 8
  store %struct.Memory* %loadMem_40b66e, %struct.Memory** %MEMORY
  %loadMem_40b671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12550 = getelementptr inbounds %struct.GPR, %struct.GPR* %12549, i32 0, i32 33
  %12551 = getelementptr inbounds %struct.Reg, %struct.Reg* %12550, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %12551 to i64*
  %12552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12553 = getelementptr inbounds %struct.GPR, %struct.GPR* %12552, i32 0, i32 5
  %12554 = getelementptr inbounds %struct.Reg, %struct.Reg* %12553, i32 0, i32 0
  %12555 = bitcast %union.anon* %12554 to %struct.anon.2*
  %CL.i909 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %12555, i32 0, i32 0
  %12556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12557 = getelementptr inbounds %struct.GPR, %struct.GPR* %12556, i32 0, i32 1
  %12558 = getelementptr inbounds %struct.Reg, %struct.Reg* %12557, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %12558 to i64*
  %12559 = load i64, i64* %RAX.i910
  %12560 = load i8, i8* %CL.i909
  %12561 = zext i8 %12560 to i64
  %12562 = load i64, i64* %PC.i908
  %12563 = add i64 %12562, 2
  store i64 %12563, i64* %PC.i908
  %12564 = trunc i64 %12561 to i5
  switch i5 %12564, label %12568 [
    i5 0, label %routine_sarl__cl___eax.exit911
    i5 1, label %12565
  ]

; <label>:12565:                                  ; preds = %block_40b5de
  %12566 = shl i64 %12559, 32
  %12567 = ashr i64 %12566, 33
  br label %12575

; <label>:12568:                                  ; preds = %block_40b5de
  %12569 = and i64 %12561, 31
  %12570 = add i64 %12569, -1
  %12571 = shl i64 %12559, 32
  %12572 = ashr exact i64 %12571, 32
  %12573 = ashr i64 %12572, %12570
  %12574 = lshr i64 %12573, 1
  br label %12575

; <label>:12575:                                  ; preds = %12568, %12565
  %12576 = phi i64 [ %12574, %12568 ], [ %12567, %12565 ]
  %12577 = phi i64 [ %12573, %12568 ], [ %12559, %12565 ]
  %12578 = trunc i64 %12577 to i8
  %12579 = and i8 %12578, 1
  %12580 = trunc i64 %12576 to i32
  %12581 = and i64 %12576, 4294967295
  store i64 %12581, i64* %RAX.i910, align 8
  %12582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12579, i8* %12582, align 1
  %12583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12584 = and i32 %12580, 255
  %12585 = call i32 @llvm.ctpop.i32(i32 %12584)
  %12586 = trunc i32 %12585 to i8
  %12587 = and i8 %12586, 1
  %12588 = xor i8 %12587, 1
  store i8 %12588, i8* %12583, align 1
  %12589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12589, align 1
  %12590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12591 = icmp eq i32 %12580, 0
  %12592 = zext i1 %12591 to i8
  store i8 %12592, i8* %12590, align 1
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12594 = lshr i32 %12580, 31
  %12595 = trunc i32 %12594 to i8
  store i8 %12595, i8* %12593, align 1
  %12596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12596, align 1
  br label %routine_sarl__cl___eax.exit911

routine_sarl__cl___eax.exit911:                   ; preds = %block_40b5de, %12575
  store %struct.Memory* %loadMem_40b671, %struct.Memory** %MEMORY
  %loadMem_40b673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12598 = getelementptr inbounds %struct.GPR, %struct.GPR* %12597, i32 0, i32 33
  %12599 = getelementptr inbounds %struct.Reg, %struct.Reg* %12598, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %12599 to i64*
  %12600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12601 = getelementptr inbounds %struct.GPR, %struct.GPR* %12600, i32 0, i32 1
  %12602 = getelementptr inbounds %struct.Reg, %struct.Reg* %12601, i32 0, i32 0
  %EAX.i906 = bitcast %union.anon* %12602 to i32*
  %12603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12604 = getelementptr inbounds %struct.GPR, %struct.GPR* %12603, i32 0, i32 15
  %12605 = getelementptr inbounds %struct.Reg, %struct.Reg* %12604, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %12605 to i64*
  %12606 = load i64, i64* %RBP.i907
  %12607 = sub i64 %12606, 72
  %12608 = load i32, i32* %EAX.i906
  %12609 = zext i32 %12608 to i64
  %12610 = load i64, i64* %PC.i905
  %12611 = add i64 %12610, 3
  store i64 %12611, i64* %PC.i905
  %12612 = inttoptr i64 %12607 to i32*
  store i32 %12608, i32* %12612
  store %struct.Memory* %loadMem_40b673, %struct.Memory** %MEMORY
  %loadMem_40b676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12614 = getelementptr inbounds %struct.GPR, %struct.GPR* %12613, i32 0, i32 33
  %12615 = getelementptr inbounds %struct.Reg, %struct.Reg* %12614, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %12615 to i64*
  %12616 = load i64, i64* %PC.i904
  %12617 = add i64 %12616, 157
  %12618 = load i64, i64* %PC.i904
  %12619 = add i64 %12618, 5
  store i64 %12619, i64* %PC.i904
  %12620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12617, i64* %12620, align 8
  store %struct.Memory* %loadMem_40b676, %struct.Memory** %MEMORY
  br label %block_.L_40b713

block_.L_40b67b:                                  ; preds = %block_.L_40b5d4
  %loadMem_40b67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12622 = getelementptr inbounds %struct.GPR, %struct.GPR* %12621, i32 0, i32 33
  %12623 = getelementptr inbounds %struct.Reg, %struct.Reg* %12622, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %12623 to i64*
  %12624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12625 = getelementptr inbounds %struct.GPR, %struct.GPR* %12624, i32 0, i32 1
  %12626 = getelementptr inbounds %struct.Reg, %struct.Reg* %12625, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %12626 to i64*
  %12627 = load i64, i64* %PC.i902
  %12628 = add i64 %12627, 8
  store i64 %12628, i64* %PC.i902
  %12629 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12629, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_40b67b, %struct.Memory** %MEMORY
  %loadMem_40b683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12631 = getelementptr inbounds %struct.GPR, %struct.GPR* %12630, i32 0, i32 33
  %12632 = getelementptr inbounds %struct.Reg, %struct.Reg* %12631, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %12632 to i64*
  %12633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12634 = getelementptr inbounds %struct.GPR, %struct.GPR* %12633, i32 0, i32 1
  %12635 = getelementptr inbounds %struct.Reg, %struct.Reg* %12634, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %12635 to i64*
  %12636 = load i64, i64* %RAX.i901
  %12637 = load i64, i64* %PC.i900
  %12638 = add i64 %12637, 6
  store i64 %12638, i64* %PC.i900
  %12639 = add i64 13112, %12636
  store i64 %12639, i64* %RAX.i901, align 8
  %12640 = icmp ult i64 %12639, %12636
  %12641 = icmp ult i64 %12639, 13112
  %12642 = or i1 %12640, %12641
  %12643 = zext i1 %12642 to i8
  %12644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12643, i8* %12644, align 1
  %12645 = trunc i64 %12639 to i32
  %12646 = and i32 %12645, 255
  %12647 = call i32 @llvm.ctpop.i32(i32 %12646)
  %12648 = trunc i32 %12647 to i8
  %12649 = and i8 %12648, 1
  %12650 = xor i8 %12649, 1
  %12651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12650, i8* %12651, align 1
  %12652 = xor i64 13112, %12636
  %12653 = xor i64 %12652, %12639
  %12654 = lshr i64 %12653, 4
  %12655 = trunc i64 %12654 to i8
  %12656 = and i8 %12655, 1
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12656, i8* %12657, align 1
  %12658 = icmp eq i64 %12639, 0
  %12659 = zext i1 %12658 to i8
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12659, i8* %12660, align 1
  %12661 = lshr i64 %12639, 63
  %12662 = trunc i64 %12661 to i8
  %12663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12662, i8* %12663, align 1
  %12664 = lshr i64 %12636, 63
  %12665 = xor i64 %12661, %12664
  %12666 = add i64 %12665, %12661
  %12667 = icmp eq i64 %12666, 2
  %12668 = zext i1 %12667 to i8
  %12669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12668, i8* %12669, align 1
  store %struct.Memory* %loadMem_40b683, %struct.Memory** %MEMORY
  %loadMem_40b689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12671 = getelementptr inbounds %struct.GPR, %struct.GPR* %12670, i32 0, i32 33
  %12672 = getelementptr inbounds %struct.Reg, %struct.Reg* %12671, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %12672 to i64*
  %12673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12674 = getelementptr inbounds %struct.GPR, %struct.GPR* %12673, i32 0, i32 5
  %12675 = getelementptr inbounds %struct.Reg, %struct.Reg* %12674, i32 0, i32 0
  %RCX.i898 = bitcast %union.anon* %12675 to i64*
  %12676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12677 = getelementptr inbounds %struct.GPR, %struct.GPR* %12676, i32 0, i32 15
  %12678 = getelementptr inbounds %struct.Reg, %struct.Reg* %12677, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %12678 to i64*
  %12679 = load i64, i64* %RBP.i899
  %12680 = sub i64 %12679, 16
  %12681 = load i64, i64* %PC.i897
  %12682 = add i64 %12681, 4
  store i64 %12682, i64* %PC.i897
  %12683 = inttoptr i64 %12680 to i32*
  %12684 = load i32, i32* %12683
  %12685 = sext i32 %12684 to i64
  store i64 %12685, i64* %RCX.i898, align 8
  store %struct.Memory* %loadMem_40b689, %struct.Memory** %MEMORY
  %loadMem_40b68d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12687 = getelementptr inbounds %struct.GPR, %struct.GPR* %12686, i32 0, i32 33
  %12688 = getelementptr inbounds %struct.Reg, %struct.Reg* %12687, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %12688 to i64*
  %12689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12690 = getelementptr inbounds %struct.GPR, %struct.GPR* %12689, i32 0, i32 5
  %12691 = getelementptr inbounds %struct.Reg, %struct.Reg* %12690, i32 0, i32 0
  %RCX.i896 = bitcast %union.anon* %12691 to i64*
  %12692 = load i64, i64* %RCX.i896
  %12693 = load i64, i64* %PC.i895
  %12694 = add i64 %12693, 4
  store i64 %12694, i64* %PC.i895
  %12695 = shl i64 %12692, 5
  %12696 = icmp slt i64 %12695, 0
  %12697 = shl i64 %12695, 1
  store i64 %12697, i64* %RCX.i896, align 8
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12699 = zext i1 %12696 to i8
  store i8 %12699, i8* %12698, align 1
  %12700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12701 = trunc i64 %12697 to i32
  %12702 = and i32 %12701, 254
  %12703 = call i32 @llvm.ctpop.i32(i32 %12702)
  %12704 = trunc i32 %12703 to i8
  %12705 = and i8 %12704, 1
  %12706 = xor i8 %12705, 1
  store i8 %12706, i8* %12700, align 1
  %12707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12707, align 1
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12709 = icmp eq i64 %12697, 0
  %12710 = zext i1 %12709 to i8
  store i8 %12710, i8* %12708, align 1
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12712 = lshr i64 %12697, 63
  %12713 = trunc i64 %12712 to i8
  store i8 %12713, i8* %12711, align 1
  %12714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12714, align 1
  store %struct.Memory* %loadMem_40b68d, %struct.Memory** %MEMORY
  %loadMem_40b691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12716 = getelementptr inbounds %struct.GPR, %struct.GPR* %12715, i32 0, i32 33
  %12717 = getelementptr inbounds %struct.Reg, %struct.Reg* %12716, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %12717 to i64*
  %12718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12719 = getelementptr inbounds %struct.GPR, %struct.GPR* %12718, i32 0, i32 1
  %12720 = getelementptr inbounds %struct.Reg, %struct.Reg* %12719, i32 0, i32 0
  %RAX.i893 = bitcast %union.anon* %12720 to i64*
  %12721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12722 = getelementptr inbounds %struct.GPR, %struct.GPR* %12721, i32 0, i32 5
  %12723 = getelementptr inbounds %struct.Reg, %struct.Reg* %12722, i32 0, i32 0
  %RCX.i894 = bitcast %union.anon* %12723 to i64*
  %12724 = load i64, i64* %RAX.i893
  %12725 = load i64, i64* %RCX.i894
  %12726 = load i64, i64* %PC.i892
  %12727 = add i64 %12726, 3
  store i64 %12727, i64* %PC.i892
  %12728 = add i64 %12725, %12724
  store i64 %12728, i64* %RAX.i893, align 8
  %12729 = icmp ult i64 %12728, %12724
  %12730 = icmp ult i64 %12728, %12725
  %12731 = or i1 %12729, %12730
  %12732 = zext i1 %12731 to i8
  %12733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12732, i8* %12733, align 1
  %12734 = trunc i64 %12728 to i32
  %12735 = and i32 %12734, 255
  %12736 = call i32 @llvm.ctpop.i32(i32 %12735)
  %12737 = trunc i32 %12736 to i8
  %12738 = and i8 %12737, 1
  %12739 = xor i8 %12738, 1
  %12740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12739, i8* %12740, align 1
  %12741 = xor i64 %12725, %12724
  %12742 = xor i64 %12741, %12728
  %12743 = lshr i64 %12742, 4
  %12744 = trunc i64 %12743 to i8
  %12745 = and i8 %12744, 1
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12745, i8* %12746, align 1
  %12747 = icmp eq i64 %12728, 0
  %12748 = zext i1 %12747 to i8
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12748, i8* %12749, align 1
  %12750 = lshr i64 %12728, 63
  %12751 = trunc i64 %12750 to i8
  %12752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12751, i8* %12752, align 1
  %12753 = lshr i64 %12724, 63
  %12754 = lshr i64 %12725, 63
  %12755 = xor i64 %12750, %12753
  %12756 = xor i64 %12750, %12754
  %12757 = add i64 %12755, %12756
  %12758 = icmp eq i64 %12757, 2
  %12759 = zext i1 %12758 to i8
  %12760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12759, i8* %12760, align 1
  store %struct.Memory* %loadMem_40b691, %struct.Memory** %MEMORY
  %loadMem_40b694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12762 = getelementptr inbounds %struct.GPR, %struct.GPR* %12761, i32 0, i32 33
  %12763 = getelementptr inbounds %struct.Reg, %struct.Reg* %12762, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %12763 to i64*
  %12764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12765 = getelementptr inbounds %struct.GPR, %struct.GPR* %12764, i32 0, i32 5
  %12766 = getelementptr inbounds %struct.Reg, %struct.Reg* %12765, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %12766 to i64*
  %12767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12768 = getelementptr inbounds %struct.GPR, %struct.GPR* %12767, i32 0, i32 15
  %12769 = getelementptr inbounds %struct.Reg, %struct.Reg* %12768, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %12769 to i64*
  %12770 = load i64, i64* %RBP.i891
  %12771 = sub i64 %12770, 20
  %12772 = load i64, i64* %PC.i889
  %12773 = add i64 %12772, 4
  store i64 %12773, i64* %PC.i889
  %12774 = inttoptr i64 %12771 to i32*
  %12775 = load i32, i32* %12774
  %12776 = sext i32 %12775 to i64
  store i64 %12776, i64* %RCX.i890, align 8
  store %struct.Memory* %loadMem_40b694, %struct.Memory** %MEMORY
  %loadMem_40b698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12778 = getelementptr inbounds %struct.GPR, %struct.GPR* %12777, i32 0, i32 33
  %12779 = getelementptr inbounds %struct.Reg, %struct.Reg* %12778, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %12779 to i64*
  %12780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12781 = getelementptr inbounds %struct.GPR, %struct.GPR* %12780, i32 0, i32 1
  %12782 = getelementptr inbounds %struct.Reg, %struct.Reg* %12781, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %12782 to i64*
  %12783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12784 = getelementptr inbounds %struct.GPR, %struct.GPR* %12783, i32 0, i32 5
  %12785 = getelementptr inbounds %struct.Reg, %struct.Reg* %12784, i32 0, i32 0
  %RCX.i887 = bitcast %union.anon* %12785 to i64*
  %12786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12787 = getelementptr inbounds %struct.GPR, %struct.GPR* %12786, i32 0, i32 11
  %12788 = getelementptr inbounds %struct.Reg, %struct.Reg* %12787, i32 0, i32 0
  %RDI.i888 = bitcast %union.anon* %12788 to i64*
  %12789 = load i64, i64* %RAX.i886
  %12790 = load i64, i64* %RCX.i887
  %12791 = mul i64 %12790, 4
  %12792 = add i64 %12791, %12789
  %12793 = load i64, i64* %PC.i885
  %12794 = add i64 %12793, 3
  store i64 %12794, i64* %PC.i885
  %12795 = inttoptr i64 %12792 to i32*
  %12796 = load i32, i32* %12795
  %12797 = zext i32 %12796 to i64
  store i64 %12797, i64* %RDI.i888, align 8
  store %struct.Memory* %loadMem_40b698, %struct.Memory** %MEMORY
  %loadMem1_40b69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12799 = getelementptr inbounds %struct.GPR, %struct.GPR* %12798, i32 0, i32 33
  %12800 = getelementptr inbounds %struct.Reg, %struct.Reg* %12799, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %12800 to i64*
  %12801 = load i64, i64* %PC.i884
  %12802 = add i64 %12801, -42651
  %12803 = load i64, i64* %PC.i884
  %12804 = add i64 %12803, 5
  %12805 = load i64, i64* %PC.i884
  %12806 = add i64 %12805, 5
  store i64 %12806, i64* %PC.i884
  %12807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12808 = load i64, i64* %12807, align 8
  %12809 = add i64 %12808, -8
  %12810 = inttoptr i64 %12809 to i64*
  store i64 %12804, i64* %12810
  store i64 %12809, i64* %12807, align 8
  %12811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12802, i64* %12811, align 8
  store %struct.Memory* %loadMem1_40b69b, %struct.Memory** %MEMORY
  %loadMem2_40b69b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b69b = load i64, i64* %3
  %12812 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_40b69b)
  store %struct.Memory* %12812, %struct.Memory** %MEMORY
  %loadMem_40b6a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12814 = getelementptr inbounds %struct.GPR, %struct.GPR* %12813, i32 0, i32 33
  %12815 = getelementptr inbounds %struct.Reg, %struct.Reg* %12814, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %12815 to i64*
  %12816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12817 = getelementptr inbounds %struct.GPR, %struct.GPR* %12816, i32 0, i32 5
  %12818 = getelementptr inbounds %struct.Reg, %struct.Reg* %12817, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %12818 to i64*
  %12819 = load i64, i64* %PC.i879
  %12820 = add i64 %12819, 10
  store i64 %12820, i64* %PC.i879
  store i64 7397968, i64* %RCX.i880, align 8
  store %struct.Memory* %loadMem_40b6a0, %struct.Memory** %MEMORY
  %loadMem_40b6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12822 = getelementptr inbounds %struct.GPR, %struct.GPR* %12821, i32 0, i32 33
  %12823 = getelementptr inbounds %struct.Reg, %struct.Reg* %12822, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %12823 to i64*
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12825 = getelementptr inbounds %struct.GPR, %struct.GPR* %12824, i32 0, i32 7
  %12826 = getelementptr inbounds %struct.Reg, %struct.Reg* %12825, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %12826 to i64*
  %12827 = load i64, i64* %PC.i877
  %12828 = add i64 %12827, 10
  store i64 %12828, i64* %PC.i877
  store i64 ptrtoint (%G__0x722cd0_type* @G__0x722cd0 to i64), i64* %RDX.i878, align 8
  store %struct.Memory* %loadMem_40b6aa, %struct.Memory** %MEMORY
  %loadMem_40b6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12830 = getelementptr inbounds %struct.GPR, %struct.GPR* %12829, i32 0, i32 33
  %12831 = getelementptr inbounds %struct.Reg, %struct.Reg* %12830, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %12831 to i64*
  %12832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12833 = getelementptr inbounds %struct.GPR, %struct.GPR* %12832, i32 0, i32 9
  %12834 = getelementptr inbounds %struct.Reg, %struct.Reg* %12833, i32 0, i32 0
  %RSI.i875 = bitcast %union.anon* %12834 to i64*
  %12835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12836 = getelementptr inbounds %struct.GPR, %struct.GPR* %12835, i32 0, i32 15
  %12837 = getelementptr inbounds %struct.Reg, %struct.Reg* %12836, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %12837 to i64*
  %12838 = load i64, i64* %RBP.i876
  %12839 = sub i64 %12838, 4
  %12840 = load i64, i64* %PC.i874
  %12841 = add i64 %12840, 4
  store i64 %12841, i64* %PC.i874
  %12842 = inttoptr i64 %12839 to i32*
  %12843 = load i32, i32* %12842
  %12844 = sext i32 %12843 to i64
  store i64 %12844, i64* %RSI.i875, align 8
  store %struct.Memory* %loadMem_40b6b4, %struct.Memory** %MEMORY
  %loadMem_40b6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12846 = getelementptr inbounds %struct.GPR, %struct.GPR* %12845, i32 0, i32 33
  %12847 = getelementptr inbounds %struct.Reg, %struct.Reg* %12846, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %12847 to i64*
  %12848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12849 = getelementptr inbounds %struct.GPR, %struct.GPR* %12848, i32 0, i32 9
  %12850 = getelementptr inbounds %struct.Reg, %struct.Reg* %12849, i32 0, i32 0
  %RSI.i873 = bitcast %union.anon* %12850 to i64*
  %12851 = load i64, i64* %RSI.i873
  %12852 = load i64, i64* %PC.i872
  %12853 = add i64 %12852, 7
  store i64 %12853, i64* %PC.i872
  %12854 = sext i64 %12851 to i128
  %12855 = and i128 %12854, -18446744073709551616
  %12856 = zext i64 %12851 to i128
  %12857 = or i128 %12855, %12856
  %12858 = mul i128 384, %12857
  %12859 = trunc i128 %12858 to i64
  store i64 %12859, i64* %RSI.i873, align 8
  %12860 = sext i64 %12859 to i128
  %12861 = icmp ne i128 %12860, %12858
  %12862 = zext i1 %12861 to i8
  %12863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12862, i8* %12863, align 1
  %12864 = trunc i128 %12858 to i32
  %12865 = and i32 %12864, 255
  %12866 = call i32 @llvm.ctpop.i32(i32 %12865)
  %12867 = trunc i32 %12866 to i8
  %12868 = and i8 %12867, 1
  %12869 = xor i8 %12868, 1
  %12870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12869, i8* %12870, align 1
  %12871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12871, align 1
  %12872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12872, align 1
  %12873 = lshr i64 %12859, 63
  %12874 = trunc i64 %12873 to i8
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12874, i8* %12875, align 1
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12862, i8* %12876, align 1
  store %struct.Memory* %loadMem_40b6b8, %struct.Memory** %MEMORY
  %loadMem_40b6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12878 = getelementptr inbounds %struct.GPR, %struct.GPR* %12877, i32 0, i32 33
  %12879 = getelementptr inbounds %struct.Reg, %struct.Reg* %12878, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %12879 to i64*
  %12880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12881 = getelementptr inbounds %struct.GPR, %struct.GPR* %12880, i32 0, i32 7
  %12882 = getelementptr inbounds %struct.Reg, %struct.Reg* %12881, i32 0, i32 0
  %RDX.i870 = bitcast %union.anon* %12882 to i64*
  %12883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12884 = getelementptr inbounds %struct.GPR, %struct.GPR* %12883, i32 0, i32 9
  %12885 = getelementptr inbounds %struct.Reg, %struct.Reg* %12884, i32 0, i32 0
  %RSI.i871 = bitcast %union.anon* %12885 to i64*
  %12886 = load i64, i64* %RDX.i870
  %12887 = load i64, i64* %RSI.i871
  %12888 = load i64, i64* %PC.i869
  %12889 = add i64 %12888, 3
  store i64 %12889, i64* %PC.i869
  %12890 = add i64 %12887, %12886
  store i64 %12890, i64* %RDX.i870, align 8
  %12891 = icmp ult i64 %12890, %12886
  %12892 = icmp ult i64 %12890, %12887
  %12893 = or i1 %12891, %12892
  %12894 = zext i1 %12893 to i8
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12894, i8* %12895, align 1
  %12896 = trunc i64 %12890 to i32
  %12897 = and i32 %12896, 255
  %12898 = call i32 @llvm.ctpop.i32(i32 %12897)
  %12899 = trunc i32 %12898 to i8
  %12900 = and i8 %12899, 1
  %12901 = xor i8 %12900, 1
  %12902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12901, i8* %12902, align 1
  %12903 = xor i64 %12887, %12886
  %12904 = xor i64 %12903, %12890
  %12905 = lshr i64 %12904, 4
  %12906 = trunc i64 %12905 to i8
  %12907 = and i8 %12906, 1
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12907, i8* %12908, align 1
  %12909 = icmp eq i64 %12890, 0
  %12910 = zext i1 %12909 to i8
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12910, i8* %12911, align 1
  %12912 = lshr i64 %12890, 63
  %12913 = trunc i64 %12912 to i8
  %12914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12913, i8* %12914, align 1
  %12915 = lshr i64 %12886, 63
  %12916 = lshr i64 %12887, 63
  %12917 = xor i64 %12912, %12915
  %12918 = xor i64 %12912, %12916
  %12919 = add i64 %12917, %12918
  %12920 = icmp eq i64 %12919, 2
  %12921 = zext i1 %12920 to i8
  %12922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12921, i8* %12922, align 1
  store %struct.Memory* %loadMem_40b6bf, %struct.Memory** %MEMORY
  %loadMem_40b6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12924 = getelementptr inbounds %struct.GPR, %struct.GPR* %12923, i32 0, i32 33
  %12925 = getelementptr inbounds %struct.Reg, %struct.Reg* %12924, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %12925 to i64*
  %12926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12927 = getelementptr inbounds %struct.GPR, %struct.GPR* %12926, i32 0, i32 9
  %12928 = getelementptr inbounds %struct.Reg, %struct.Reg* %12927, i32 0, i32 0
  %RSI.i867 = bitcast %union.anon* %12928 to i64*
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12930 = getelementptr inbounds %struct.GPR, %struct.GPR* %12929, i32 0, i32 15
  %12931 = getelementptr inbounds %struct.Reg, %struct.Reg* %12930, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %12931 to i64*
  %12932 = load i64, i64* %RBP.i868
  %12933 = sub i64 %12932, 108
  %12934 = load i64, i64* %PC.i866
  %12935 = add i64 %12934, 4
  store i64 %12935, i64* %PC.i866
  %12936 = inttoptr i64 %12933 to i32*
  %12937 = load i32, i32* %12936
  %12938 = sext i32 %12937 to i64
  store i64 %12938, i64* %RSI.i867, align 8
  store %struct.Memory* %loadMem_40b6c2, %struct.Memory** %MEMORY
  %loadMem_40b6c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12940 = getelementptr inbounds %struct.GPR, %struct.GPR* %12939, i32 0, i32 33
  %12941 = getelementptr inbounds %struct.Reg, %struct.Reg* %12940, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %12941 to i64*
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 9
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %RSI.i865 = bitcast %union.anon* %12944 to i64*
  %12945 = load i64, i64* %RSI.i865
  %12946 = load i64, i64* %PC.i864
  %12947 = add i64 %12946, 4
  store i64 %12947, i64* %PC.i864
  %12948 = shl i64 %12945, 5
  %12949 = icmp slt i64 %12948, 0
  %12950 = shl i64 %12948, 1
  store i64 %12950, i64* %RSI.i865, align 8
  %12951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %12952 = zext i1 %12949 to i8
  store i8 %12952, i8* %12951, align 1
  %12953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12954 = trunc i64 %12950 to i32
  %12955 = and i32 %12954, 254
  %12956 = call i32 @llvm.ctpop.i32(i32 %12955)
  %12957 = trunc i32 %12956 to i8
  %12958 = and i8 %12957, 1
  %12959 = xor i8 %12958, 1
  store i8 %12959, i8* %12953, align 1
  %12960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12960, align 1
  %12961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12962 = icmp eq i64 %12950, 0
  %12963 = zext i1 %12962 to i8
  store i8 %12963, i8* %12961, align 1
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12965 = lshr i64 %12950, 63
  %12966 = trunc i64 %12965 to i8
  store i8 %12966, i8* %12964, align 1
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12967, align 1
  store %struct.Memory* %loadMem_40b6c6, %struct.Memory** %MEMORY
  %loadMem_40b6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 33
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %12970 to i64*
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12972 = getelementptr inbounds %struct.GPR, %struct.GPR* %12971, i32 0, i32 7
  %12973 = getelementptr inbounds %struct.Reg, %struct.Reg* %12972, i32 0, i32 0
  %RDX.i862 = bitcast %union.anon* %12973 to i64*
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12975 = getelementptr inbounds %struct.GPR, %struct.GPR* %12974, i32 0, i32 9
  %12976 = getelementptr inbounds %struct.Reg, %struct.Reg* %12975, i32 0, i32 0
  %RSI.i863 = bitcast %union.anon* %12976 to i64*
  %12977 = load i64, i64* %RDX.i862
  %12978 = load i64, i64* %RSI.i863
  %12979 = load i64, i64* %PC.i861
  %12980 = add i64 %12979, 3
  store i64 %12980, i64* %PC.i861
  %12981 = add i64 %12978, %12977
  store i64 %12981, i64* %RDX.i862, align 8
  %12982 = icmp ult i64 %12981, %12977
  %12983 = icmp ult i64 %12981, %12978
  %12984 = or i1 %12982, %12983
  %12985 = zext i1 %12984 to i8
  %12986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12985, i8* %12986, align 1
  %12987 = trunc i64 %12981 to i32
  %12988 = and i32 %12987, 255
  %12989 = call i32 @llvm.ctpop.i32(i32 %12988)
  %12990 = trunc i32 %12989 to i8
  %12991 = and i8 %12990, 1
  %12992 = xor i8 %12991, 1
  %12993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12992, i8* %12993, align 1
  %12994 = xor i64 %12978, %12977
  %12995 = xor i64 %12994, %12981
  %12996 = lshr i64 %12995, 4
  %12997 = trunc i64 %12996 to i8
  %12998 = and i8 %12997, 1
  %12999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12998, i8* %12999, align 1
  %13000 = icmp eq i64 %12981, 0
  %13001 = zext i1 %13000 to i8
  %13002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13001, i8* %13002, align 1
  %13003 = lshr i64 %12981, 63
  %13004 = trunc i64 %13003 to i8
  %13005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13004, i8* %13005, align 1
  %13006 = lshr i64 %12977, 63
  %13007 = lshr i64 %12978, 63
  %13008 = xor i64 %13003, %13006
  %13009 = xor i64 %13003, %13007
  %13010 = add i64 %13008, %13009
  %13011 = icmp eq i64 %13010, 2
  %13012 = zext i1 %13011 to i8
  %13013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13012, i8* %13013, align 1
  store %struct.Memory* %loadMem_40b6ca, %struct.Memory** %MEMORY
  %loadMem_40b6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13015 = getelementptr inbounds %struct.GPR, %struct.GPR* %13014, i32 0, i32 33
  %13016 = getelementptr inbounds %struct.Reg, %struct.Reg* %13015, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %13016 to i64*
  %13017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13018 = getelementptr inbounds %struct.GPR, %struct.GPR* %13017, i32 0, i32 9
  %13019 = getelementptr inbounds %struct.Reg, %struct.Reg* %13018, i32 0, i32 0
  %RSI.i859 = bitcast %union.anon* %13019 to i64*
  %13020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13021 = getelementptr inbounds %struct.GPR, %struct.GPR* %13020, i32 0, i32 15
  %13022 = getelementptr inbounds %struct.Reg, %struct.Reg* %13021, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %13022 to i64*
  %13023 = load i64, i64* %RBP.i860
  %13024 = sub i64 %13023, 16
  %13025 = load i64, i64* %PC.i858
  %13026 = add i64 %13025, 4
  store i64 %13026, i64* %PC.i858
  %13027 = inttoptr i64 %13024 to i32*
  %13028 = load i32, i32* %13027
  %13029 = sext i32 %13028 to i64
  store i64 %13029, i64* %RSI.i859, align 8
  store %struct.Memory* %loadMem_40b6cd, %struct.Memory** %MEMORY
  %loadMem_40b6d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13031 = getelementptr inbounds %struct.GPR, %struct.GPR* %13030, i32 0, i32 33
  %13032 = getelementptr inbounds %struct.Reg, %struct.Reg* %13031, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %13032 to i64*
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13034 = getelementptr inbounds %struct.GPR, %struct.GPR* %13033, i32 0, i32 9
  %13035 = getelementptr inbounds %struct.Reg, %struct.Reg* %13034, i32 0, i32 0
  %RSI.i857 = bitcast %union.anon* %13035 to i64*
  %13036 = load i64, i64* %RSI.i857
  %13037 = load i64, i64* %PC.i856
  %13038 = add i64 %13037, 4
  store i64 %13038, i64* %PC.i856
  %13039 = shl i64 %13036, 3
  %13040 = icmp slt i64 %13039, 0
  %13041 = shl i64 %13039, 1
  store i64 %13041, i64* %RSI.i857, align 8
  %13042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13043 = zext i1 %13040 to i8
  store i8 %13043, i8* %13042, align 1
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13045 = trunc i64 %13041 to i32
  %13046 = and i32 %13045, 254
  %13047 = call i32 @llvm.ctpop.i32(i32 %13046)
  %13048 = trunc i32 %13047 to i8
  %13049 = and i8 %13048, 1
  %13050 = xor i8 %13049, 1
  store i8 %13050, i8* %13044, align 1
  %13051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13051, align 1
  %13052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13053 = icmp eq i64 %13041, 0
  %13054 = zext i1 %13053 to i8
  store i8 %13054, i8* %13052, align 1
  %13055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13056 = lshr i64 %13041, 63
  %13057 = trunc i64 %13056 to i8
  store i8 %13057, i8* %13055, align 1
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13058, align 1
  store %struct.Memory* %loadMem_40b6d1, %struct.Memory** %MEMORY
  %loadMem_40b6d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13060 = getelementptr inbounds %struct.GPR, %struct.GPR* %13059, i32 0, i32 33
  %13061 = getelementptr inbounds %struct.Reg, %struct.Reg* %13060, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %13061 to i64*
  %13062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13063 = getelementptr inbounds %struct.GPR, %struct.GPR* %13062, i32 0, i32 7
  %13064 = getelementptr inbounds %struct.Reg, %struct.Reg* %13063, i32 0, i32 0
  %RDX.i854 = bitcast %union.anon* %13064 to i64*
  %13065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13066 = getelementptr inbounds %struct.GPR, %struct.GPR* %13065, i32 0, i32 9
  %13067 = getelementptr inbounds %struct.Reg, %struct.Reg* %13066, i32 0, i32 0
  %RSI.i855 = bitcast %union.anon* %13067 to i64*
  %13068 = load i64, i64* %RDX.i854
  %13069 = load i64, i64* %RSI.i855
  %13070 = load i64, i64* %PC.i853
  %13071 = add i64 %13070, 3
  store i64 %13071, i64* %PC.i853
  %13072 = add i64 %13069, %13068
  store i64 %13072, i64* %RDX.i854, align 8
  %13073 = icmp ult i64 %13072, %13068
  %13074 = icmp ult i64 %13072, %13069
  %13075 = or i1 %13073, %13074
  %13076 = zext i1 %13075 to i8
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13076, i8* %13077, align 1
  %13078 = trunc i64 %13072 to i32
  %13079 = and i32 %13078, 255
  %13080 = call i32 @llvm.ctpop.i32(i32 %13079)
  %13081 = trunc i32 %13080 to i8
  %13082 = and i8 %13081, 1
  %13083 = xor i8 %13082, 1
  %13084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13083, i8* %13084, align 1
  %13085 = xor i64 %13069, %13068
  %13086 = xor i64 %13085, %13072
  %13087 = lshr i64 %13086, 4
  %13088 = trunc i64 %13087 to i8
  %13089 = and i8 %13088, 1
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13089, i8* %13090, align 1
  %13091 = icmp eq i64 %13072, 0
  %13092 = zext i1 %13091 to i8
  %13093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13092, i8* %13093, align 1
  %13094 = lshr i64 %13072, 63
  %13095 = trunc i64 %13094 to i8
  %13096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13095, i8* %13096, align 1
  %13097 = lshr i64 %13068, 63
  %13098 = lshr i64 %13069, 63
  %13099 = xor i64 %13094, %13097
  %13100 = xor i64 %13094, %13098
  %13101 = add i64 %13099, %13100
  %13102 = icmp eq i64 %13101, 2
  %13103 = zext i1 %13102 to i8
  %13104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13103, i8* %13104, align 1
  store %struct.Memory* %loadMem_40b6d5, %struct.Memory** %MEMORY
  %loadMem_40b6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 33
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %13107 to i64*
  %13108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13109 = getelementptr inbounds %struct.GPR, %struct.GPR* %13108, i32 0, i32 9
  %13110 = getelementptr inbounds %struct.Reg, %struct.Reg* %13109, i32 0, i32 0
  %RSI.i851 = bitcast %union.anon* %13110 to i64*
  %13111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13112 = getelementptr inbounds %struct.GPR, %struct.GPR* %13111, i32 0, i32 15
  %13113 = getelementptr inbounds %struct.Reg, %struct.Reg* %13112, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %13113 to i64*
  %13114 = load i64, i64* %RBP.i852
  %13115 = sub i64 %13114, 20
  %13116 = load i64, i64* %PC.i850
  %13117 = add i64 %13116, 4
  store i64 %13117, i64* %PC.i850
  %13118 = inttoptr i64 %13115 to i32*
  %13119 = load i32, i32* %13118
  %13120 = sext i32 %13119 to i64
  store i64 %13120, i64* %RSI.i851, align 8
  store %struct.Memory* %loadMem_40b6d8, %struct.Memory** %MEMORY
  %loadMem_40b6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13122 = getelementptr inbounds %struct.GPR, %struct.GPR* %13121, i32 0, i32 33
  %13123 = getelementptr inbounds %struct.Reg, %struct.Reg* %13122, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %13123 to i64*
  %13124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13125 = getelementptr inbounds %struct.GPR, %struct.GPR* %13124, i32 0, i32 1
  %13126 = getelementptr inbounds %struct.Reg, %struct.Reg* %13125, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %13126 to i64*
  %13127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13128 = getelementptr inbounds %struct.GPR, %struct.GPR* %13127, i32 0, i32 7
  %13129 = getelementptr inbounds %struct.Reg, %struct.Reg* %13128, i32 0, i32 0
  %RDX.i848 = bitcast %union.anon* %13129 to i64*
  %13130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13131 = getelementptr inbounds %struct.GPR, %struct.GPR* %13130, i32 0, i32 9
  %13132 = getelementptr inbounds %struct.Reg, %struct.Reg* %13131, i32 0, i32 0
  %RSI.i849 = bitcast %union.anon* %13132 to i64*
  %13133 = load i64, i64* %RAX.i847
  %13134 = load i64, i64* %RDX.i848
  %13135 = load i64, i64* %RSI.i849
  %13136 = mul i64 %13135, 4
  %13137 = add i64 %13136, %13134
  %13138 = load i64, i64* %PC.i846
  %13139 = add i64 %13138, 4
  store i64 %13139, i64* %PC.i846
  %13140 = inttoptr i64 %13137 to i32*
  %13141 = load i32, i32* %13140
  %13142 = shl i64 %13133, 32
  %13143 = ashr exact i64 %13142, 32
  %13144 = sext i32 %13141 to i64
  %13145 = mul i64 %13144, %13143
  %13146 = trunc i64 %13145 to i32
  %13147 = and i64 %13145, 4294967295
  store i64 %13147, i64* %RAX.i847, align 8
  %13148 = shl i64 %13145, 32
  %13149 = ashr exact i64 %13148, 32
  %13150 = icmp ne i64 %13149, %13145
  %13151 = zext i1 %13150 to i8
  %13152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13151, i8* %13152, align 1
  %13153 = and i32 %13146, 255
  %13154 = call i32 @llvm.ctpop.i32(i32 %13153)
  %13155 = trunc i32 %13154 to i8
  %13156 = and i8 %13155, 1
  %13157 = xor i8 %13156, 1
  %13158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13157, i8* %13158, align 1
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13159, align 1
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13160, align 1
  %13161 = lshr i32 %13146, 31
  %13162 = trunc i32 %13161 to i8
  %13163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13162, i8* %13163, align 1
  %13164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13151, i8* %13164, align 1
  store %struct.Memory* %loadMem_40b6dc, %struct.Memory** %MEMORY
  %loadMem_40b6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13166 = getelementptr inbounds %struct.GPR, %struct.GPR* %13165, i32 0, i32 33
  %13167 = getelementptr inbounds %struct.Reg, %struct.Reg* %13166, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %13167 to i64*
  %13168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13169 = getelementptr inbounds %struct.GPR, %struct.GPR* %13168, i32 0, i32 7
  %13170 = getelementptr inbounds %struct.Reg, %struct.Reg* %13169, i32 0, i32 0
  %RDX.i844 = bitcast %union.anon* %13170 to i64*
  %13171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13172 = getelementptr inbounds %struct.GPR, %struct.GPR* %13171, i32 0, i32 15
  %13173 = getelementptr inbounds %struct.Reg, %struct.Reg* %13172, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %13173 to i64*
  %13174 = load i64, i64* %RBP.i845
  %13175 = sub i64 %13174, 4
  %13176 = load i64, i64* %PC.i843
  %13177 = add i64 %13176, 4
  store i64 %13177, i64* %PC.i843
  %13178 = inttoptr i64 %13175 to i32*
  %13179 = load i32, i32* %13178
  %13180 = sext i32 %13179 to i64
  store i64 %13180, i64* %RDX.i844, align 8
  store %struct.Memory* %loadMem_40b6e0, %struct.Memory** %MEMORY
  %loadMem_40b6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13182 = getelementptr inbounds %struct.GPR, %struct.GPR* %13181, i32 0, i32 33
  %13183 = getelementptr inbounds %struct.Reg, %struct.Reg* %13182, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %13183 to i64*
  %13184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13185 = getelementptr inbounds %struct.GPR, %struct.GPR* %13184, i32 0, i32 7
  %13186 = getelementptr inbounds %struct.Reg, %struct.Reg* %13185, i32 0, i32 0
  %RDX.i842 = bitcast %union.anon* %13186 to i64*
  %13187 = load i64, i64* %RDX.i842
  %13188 = load i64, i64* %PC.i841
  %13189 = add i64 %13188, 7
  store i64 %13189, i64* %PC.i841
  %13190 = sext i64 %13187 to i128
  %13191 = and i128 %13190, -18446744073709551616
  %13192 = zext i64 %13187 to i128
  %13193 = or i128 %13191, %13192
  %13194 = mul i128 832, %13193
  %13195 = trunc i128 %13194 to i64
  store i64 %13195, i64* %RDX.i842, align 8
  %13196 = sext i64 %13195 to i128
  %13197 = icmp ne i128 %13196, %13194
  %13198 = zext i1 %13197 to i8
  %13199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13198, i8* %13199, align 1
  %13200 = trunc i128 %13194 to i32
  %13201 = and i32 %13200, 255
  %13202 = call i32 @llvm.ctpop.i32(i32 %13201)
  %13203 = trunc i32 %13202 to i8
  %13204 = and i8 %13203, 1
  %13205 = xor i8 %13204, 1
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13205, i8* %13206, align 1
  %13207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13207, align 1
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13208, align 1
  %13209 = lshr i64 %13195, 63
  %13210 = trunc i64 %13209 to i8
  %13211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13210, i8* %13211, align 1
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13198, i8* %13212, align 1
  store %struct.Memory* %loadMem_40b6e4, %struct.Memory** %MEMORY
  %loadMem_40b6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13214 = getelementptr inbounds %struct.GPR, %struct.GPR* %13213, i32 0, i32 33
  %13215 = getelementptr inbounds %struct.Reg, %struct.Reg* %13214, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %13215 to i64*
  %13216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13217 = getelementptr inbounds %struct.GPR, %struct.GPR* %13216, i32 0, i32 5
  %13218 = getelementptr inbounds %struct.Reg, %struct.Reg* %13217, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %13218 to i64*
  %13219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13220 = getelementptr inbounds %struct.GPR, %struct.GPR* %13219, i32 0, i32 7
  %13221 = getelementptr inbounds %struct.Reg, %struct.Reg* %13220, i32 0, i32 0
  %RDX.i840 = bitcast %union.anon* %13221 to i64*
  %13222 = load i64, i64* %RCX.i839
  %13223 = load i64, i64* %RDX.i840
  %13224 = load i64, i64* %PC.i838
  %13225 = add i64 %13224, 3
  store i64 %13225, i64* %PC.i838
  %13226 = add i64 %13223, %13222
  store i64 %13226, i64* %RCX.i839, align 8
  %13227 = icmp ult i64 %13226, %13222
  %13228 = icmp ult i64 %13226, %13223
  %13229 = or i1 %13227, %13228
  %13230 = zext i1 %13229 to i8
  %13231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13230, i8* %13231, align 1
  %13232 = trunc i64 %13226 to i32
  %13233 = and i32 %13232, 255
  %13234 = call i32 @llvm.ctpop.i32(i32 %13233)
  %13235 = trunc i32 %13234 to i8
  %13236 = and i8 %13235, 1
  %13237 = xor i8 %13236, 1
  %13238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13237, i8* %13238, align 1
  %13239 = xor i64 %13223, %13222
  %13240 = xor i64 %13239, %13226
  %13241 = lshr i64 %13240, 4
  %13242 = trunc i64 %13241 to i8
  %13243 = and i8 %13242, 1
  %13244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13243, i8* %13244, align 1
  %13245 = icmp eq i64 %13226, 0
  %13246 = zext i1 %13245 to i8
  %13247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13246, i8* %13247, align 1
  %13248 = lshr i64 %13226, 63
  %13249 = trunc i64 %13248 to i8
  %13250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13249, i8* %13250, align 1
  %13251 = lshr i64 %13222, 63
  %13252 = lshr i64 %13223, 63
  %13253 = xor i64 %13248, %13251
  %13254 = xor i64 %13248, %13252
  %13255 = add i64 %13253, %13254
  %13256 = icmp eq i64 %13255, 2
  %13257 = zext i1 %13256 to i8
  %13258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13257, i8* %13258, align 1
  store %struct.Memory* %loadMem_40b6eb, %struct.Memory** %MEMORY
  %loadMem_40b6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %13259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13260 = getelementptr inbounds %struct.GPR, %struct.GPR* %13259, i32 0, i32 33
  %13261 = getelementptr inbounds %struct.Reg, %struct.Reg* %13260, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %13261 to i64*
  %13262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13263 = getelementptr inbounds %struct.GPR, %struct.GPR* %13262, i32 0, i32 7
  %13264 = getelementptr inbounds %struct.Reg, %struct.Reg* %13263, i32 0, i32 0
  %RDX.i836 = bitcast %union.anon* %13264 to i64*
  %13265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13266 = getelementptr inbounds %struct.GPR, %struct.GPR* %13265, i32 0, i32 15
  %13267 = getelementptr inbounds %struct.Reg, %struct.Reg* %13266, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %13267 to i64*
  %13268 = load i64, i64* %RBP.i837
  %13269 = sub i64 %13268, 104
  %13270 = load i64, i64* %PC.i835
  %13271 = add i64 %13270, 4
  store i64 %13271, i64* %PC.i835
  %13272 = inttoptr i64 %13269 to i32*
  %13273 = load i32, i32* %13272
  %13274 = sext i32 %13273 to i64
  store i64 %13274, i64* %RDX.i836, align 8
  store %struct.Memory* %loadMem_40b6ee, %struct.Memory** %MEMORY
  %loadMem_40b6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13276 = getelementptr inbounds %struct.GPR, %struct.GPR* %13275, i32 0, i32 33
  %13277 = getelementptr inbounds %struct.Reg, %struct.Reg* %13276, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %13277 to i64*
  %13278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13279 = getelementptr inbounds %struct.GPR, %struct.GPR* %13278, i32 0, i32 7
  %13280 = getelementptr inbounds %struct.Reg, %struct.Reg* %13279, i32 0, i32 0
  %RDX.i834 = bitcast %union.anon* %13280 to i64*
  %13281 = load i64, i64* %RDX.i834
  %13282 = load i64, i64* %PC.i833
  %13283 = add i64 %13282, 4
  store i64 %13283, i64* %PC.i833
  %13284 = shl i64 %13281, 5
  %13285 = icmp slt i64 %13284, 0
  %13286 = shl i64 %13284, 1
  store i64 %13286, i64* %RDX.i834, align 8
  %13287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13288 = zext i1 %13285 to i8
  store i8 %13288, i8* %13287, align 1
  %13289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13290 = trunc i64 %13286 to i32
  %13291 = and i32 %13290, 254
  %13292 = call i32 @llvm.ctpop.i32(i32 %13291)
  %13293 = trunc i32 %13292 to i8
  %13294 = and i8 %13293, 1
  %13295 = xor i8 %13294, 1
  store i8 %13295, i8* %13289, align 1
  %13296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13296, align 1
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13298 = icmp eq i64 %13286, 0
  %13299 = zext i1 %13298 to i8
  store i8 %13299, i8* %13297, align 1
  %13300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13301 = lshr i64 %13286, 63
  %13302 = trunc i64 %13301 to i8
  store i8 %13302, i8* %13300, align 1
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13303, align 1
  store %struct.Memory* %loadMem_40b6f2, %struct.Memory** %MEMORY
  %loadMem_40b6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13305 = getelementptr inbounds %struct.GPR, %struct.GPR* %13304, i32 0, i32 33
  %13306 = getelementptr inbounds %struct.Reg, %struct.Reg* %13305, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %13306 to i64*
  %13307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13308 = getelementptr inbounds %struct.GPR, %struct.GPR* %13307, i32 0, i32 5
  %13309 = getelementptr inbounds %struct.Reg, %struct.Reg* %13308, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %13309 to i64*
  %13310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13311 = getelementptr inbounds %struct.GPR, %struct.GPR* %13310, i32 0, i32 7
  %13312 = getelementptr inbounds %struct.Reg, %struct.Reg* %13311, i32 0, i32 0
  %RDX.i832 = bitcast %union.anon* %13312 to i64*
  %13313 = load i64, i64* %RCX.i831
  %13314 = load i64, i64* %RDX.i832
  %13315 = load i64, i64* %PC.i830
  %13316 = add i64 %13315, 3
  store i64 %13316, i64* %PC.i830
  %13317 = add i64 %13314, %13313
  store i64 %13317, i64* %RCX.i831, align 8
  %13318 = icmp ult i64 %13317, %13313
  %13319 = icmp ult i64 %13317, %13314
  %13320 = or i1 %13318, %13319
  %13321 = zext i1 %13320 to i8
  %13322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13321, i8* %13322, align 1
  %13323 = trunc i64 %13317 to i32
  %13324 = and i32 %13323, 255
  %13325 = call i32 @llvm.ctpop.i32(i32 %13324)
  %13326 = trunc i32 %13325 to i8
  %13327 = and i8 %13326, 1
  %13328 = xor i8 %13327, 1
  %13329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13328, i8* %13329, align 1
  %13330 = xor i64 %13314, %13313
  %13331 = xor i64 %13330, %13317
  %13332 = lshr i64 %13331, 4
  %13333 = trunc i64 %13332 to i8
  %13334 = and i8 %13333, 1
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13334, i8* %13335, align 1
  %13336 = icmp eq i64 %13317, 0
  %13337 = zext i1 %13336 to i8
  %13338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13337, i8* %13338, align 1
  %13339 = lshr i64 %13317, 63
  %13340 = trunc i64 %13339 to i8
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13340, i8* %13341, align 1
  %13342 = lshr i64 %13313, 63
  %13343 = lshr i64 %13314, 63
  %13344 = xor i64 %13339, %13342
  %13345 = xor i64 %13339, %13343
  %13346 = add i64 %13344, %13345
  %13347 = icmp eq i64 %13346, 2
  %13348 = zext i1 %13347 to i8
  %13349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13348, i8* %13349, align 1
  store %struct.Memory* %loadMem_40b6f6, %struct.Memory** %MEMORY
  %loadMem_40b6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13351 = getelementptr inbounds %struct.GPR, %struct.GPR* %13350, i32 0, i32 33
  %13352 = getelementptr inbounds %struct.Reg, %struct.Reg* %13351, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %13352 to i64*
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13354 = getelementptr inbounds %struct.GPR, %struct.GPR* %13353, i32 0, i32 7
  %13355 = getelementptr inbounds %struct.Reg, %struct.Reg* %13354, i32 0, i32 0
  %RDX.i828 = bitcast %union.anon* %13355 to i64*
  %13356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13357 = getelementptr inbounds %struct.GPR, %struct.GPR* %13356, i32 0, i32 15
  %13358 = getelementptr inbounds %struct.Reg, %struct.Reg* %13357, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %13358 to i64*
  %13359 = load i64, i64* %RBP.i829
  %13360 = sub i64 %13359, 16
  %13361 = load i64, i64* %PC.i827
  %13362 = add i64 %13361, 4
  store i64 %13362, i64* %PC.i827
  %13363 = inttoptr i64 %13360 to i32*
  %13364 = load i32, i32* %13363
  %13365 = sext i32 %13364 to i64
  store i64 %13365, i64* %RDX.i828, align 8
  store %struct.Memory* %loadMem_40b6f9, %struct.Memory** %MEMORY
  %loadMem_40b6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13367 = getelementptr inbounds %struct.GPR, %struct.GPR* %13366, i32 0, i32 33
  %13368 = getelementptr inbounds %struct.Reg, %struct.Reg* %13367, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %13368 to i64*
  %13369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13370 = getelementptr inbounds %struct.GPR, %struct.GPR* %13369, i32 0, i32 7
  %13371 = getelementptr inbounds %struct.Reg, %struct.Reg* %13370, i32 0, i32 0
  %RDX.i826 = bitcast %union.anon* %13371 to i64*
  %13372 = load i64, i64* %RDX.i826
  %13373 = load i64, i64* %PC.i825
  %13374 = add i64 %13373, 4
  store i64 %13374, i64* %PC.i825
  %13375 = shl i64 %13372, 3
  %13376 = icmp slt i64 %13375, 0
  %13377 = shl i64 %13375, 1
  store i64 %13377, i64* %RDX.i826, align 8
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13379 = zext i1 %13376 to i8
  store i8 %13379, i8* %13378, align 1
  %13380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13381 = trunc i64 %13377 to i32
  %13382 = and i32 %13381, 254
  %13383 = call i32 @llvm.ctpop.i32(i32 %13382)
  %13384 = trunc i32 %13383 to i8
  %13385 = and i8 %13384, 1
  %13386 = xor i8 %13385, 1
  store i8 %13386, i8* %13380, align 1
  %13387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13387, align 1
  %13388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13389 = icmp eq i64 %13377, 0
  %13390 = zext i1 %13389 to i8
  store i8 %13390, i8* %13388, align 1
  %13391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13392 = lshr i64 %13377, 63
  %13393 = trunc i64 %13392 to i8
  store i8 %13393, i8* %13391, align 1
  %13394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13394, align 1
  store %struct.Memory* %loadMem_40b6fd, %struct.Memory** %MEMORY
  %loadMem_40b701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13396 = getelementptr inbounds %struct.GPR, %struct.GPR* %13395, i32 0, i32 33
  %13397 = getelementptr inbounds %struct.Reg, %struct.Reg* %13396, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %13397 to i64*
  %13398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13399 = getelementptr inbounds %struct.GPR, %struct.GPR* %13398, i32 0, i32 5
  %13400 = getelementptr inbounds %struct.Reg, %struct.Reg* %13399, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %13400 to i64*
  %13401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13402 = getelementptr inbounds %struct.GPR, %struct.GPR* %13401, i32 0, i32 7
  %13403 = getelementptr inbounds %struct.Reg, %struct.Reg* %13402, i32 0, i32 0
  %RDX.i824 = bitcast %union.anon* %13403 to i64*
  %13404 = load i64, i64* %RCX.i823
  %13405 = load i64, i64* %RDX.i824
  %13406 = load i64, i64* %PC.i822
  %13407 = add i64 %13406, 3
  store i64 %13407, i64* %PC.i822
  %13408 = add i64 %13405, %13404
  store i64 %13408, i64* %RCX.i823, align 8
  %13409 = icmp ult i64 %13408, %13404
  %13410 = icmp ult i64 %13408, %13405
  %13411 = or i1 %13409, %13410
  %13412 = zext i1 %13411 to i8
  %13413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13412, i8* %13413, align 1
  %13414 = trunc i64 %13408 to i32
  %13415 = and i32 %13414, 255
  %13416 = call i32 @llvm.ctpop.i32(i32 %13415)
  %13417 = trunc i32 %13416 to i8
  %13418 = and i8 %13417, 1
  %13419 = xor i8 %13418, 1
  %13420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13419, i8* %13420, align 1
  %13421 = xor i64 %13405, %13404
  %13422 = xor i64 %13421, %13408
  %13423 = lshr i64 %13422, 4
  %13424 = trunc i64 %13423 to i8
  %13425 = and i8 %13424, 1
  %13426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13425, i8* %13426, align 1
  %13427 = icmp eq i64 %13408, 0
  %13428 = zext i1 %13427 to i8
  %13429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13428, i8* %13429, align 1
  %13430 = lshr i64 %13408, 63
  %13431 = trunc i64 %13430 to i8
  %13432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13431, i8* %13432, align 1
  %13433 = lshr i64 %13404, 63
  %13434 = lshr i64 %13405, 63
  %13435 = xor i64 %13430, %13433
  %13436 = xor i64 %13430, %13434
  %13437 = add i64 %13435, %13436
  %13438 = icmp eq i64 %13437, 2
  %13439 = zext i1 %13438 to i8
  %13440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13439, i8* %13440, align 1
  store %struct.Memory* %loadMem_40b701, %struct.Memory** %MEMORY
  %loadMem_40b704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13442 = getelementptr inbounds %struct.GPR, %struct.GPR* %13441, i32 0, i32 33
  %13443 = getelementptr inbounds %struct.Reg, %struct.Reg* %13442, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %13443 to i64*
  %13444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13445 = getelementptr inbounds %struct.GPR, %struct.GPR* %13444, i32 0, i32 7
  %13446 = getelementptr inbounds %struct.Reg, %struct.Reg* %13445, i32 0, i32 0
  %RDX.i820 = bitcast %union.anon* %13446 to i64*
  %13447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13448 = getelementptr inbounds %struct.GPR, %struct.GPR* %13447, i32 0, i32 15
  %13449 = getelementptr inbounds %struct.Reg, %struct.Reg* %13448, i32 0, i32 0
  %RBP.i821 = bitcast %union.anon* %13449 to i64*
  %13450 = load i64, i64* %RBP.i821
  %13451 = sub i64 %13450, 20
  %13452 = load i64, i64* %PC.i819
  %13453 = add i64 %13452, 4
  store i64 %13453, i64* %PC.i819
  %13454 = inttoptr i64 %13451 to i32*
  %13455 = load i32, i32* %13454
  %13456 = sext i32 %13455 to i64
  store i64 %13456, i64* %RDX.i820, align 8
  store %struct.Memory* %loadMem_40b704, %struct.Memory** %MEMORY
  %loadMem_40b708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13458 = getelementptr inbounds %struct.GPR, %struct.GPR* %13457, i32 0, i32 33
  %13459 = getelementptr inbounds %struct.Reg, %struct.Reg* %13458, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %13459 to i64*
  %13460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13461 = getelementptr inbounds %struct.GPR, %struct.GPR* %13460, i32 0, i32 1
  %13462 = getelementptr inbounds %struct.Reg, %struct.Reg* %13461, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %13462 to i64*
  %13463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13464 = getelementptr inbounds %struct.GPR, %struct.GPR* %13463, i32 0, i32 5
  %13465 = getelementptr inbounds %struct.Reg, %struct.Reg* %13464, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %13465 to i64*
  %13466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13467 = getelementptr inbounds %struct.GPR, %struct.GPR* %13466, i32 0, i32 7
  %13468 = getelementptr inbounds %struct.Reg, %struct.Reg* %13467, i32 0, i32 0
  %RDX.i818 = bitcast %union.anon* %13468 to i64*
  %13469 = load i64, i64* %RAX.i816
  %13470 = load i64, i64* %RCX.i817
  %13471 = load i64, i64* %RDX.i818
  %13472 = mul i64 %13471, 4
  %13473 = add i64 %13472, %13470
  %13474 = load i64, i64* %PC.i815
  %13475 = add i64 %13474, 3
  store i64 %13475, i64* %PC.i815
  %13476 = trunc i64 %13469 to i32
  %13477 = inttoptr i64 %13473 to i32*
  %13478 = load i32, i32* %13477
  %13479 = add i32 %13478, %13476
  %13480 = zext i32 %13479 to i64
  store i64 %13480, i64* %RAX.i816, align 8
  %13481 = icmp ult i32 %13479, %13476
  %13482 = icmp ult i32 %13479, %13478
  %13483 = or i1 %13481, %13482
  %13484 = zext i1 %13483 to i8
  %13485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13484, i8* %13485, align 1
  %13486 = and i32 %13479, 255
  %13487 = call i32 @llvm.ctpop.i32(i32 %13486)
  %13488 = trunc i32 %13487 to i8
  %13489 = and i8 %13488, 1
  %13490 = xor i8 %13489, 1
  %13491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13490, i8* %13491, align 1
  %13492 = xor i32 %13478, %13476
  %13493 = xor i32 %13492, %13479
  %13494 = lshr i32 %13493, 4
  %13495 = trunc i32 %13494 to i8
  %13496 = and i8 %13495, 1
  %13497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13496, i8* %13497, align 1
  %13498 = icmp eq i32 %13479, 0
  %13499 = zext i1 %13498 to i8
  %13500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13499, i8* %13500, align 1
  %13501 = lshr i32 %13479, 31
  %13502 = trunc i32 %13501 to i8
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13502, i8* %13503, align 1
  %13504 = lshr i32 %13476, 31
  %13505 = lshr i32 %13478, 31
  %13506 = xor i32 %13501, %13504
  %13507 = xor i32 %13501, %13505
  %13508 = add i32 %13506, %13507
  %13509 = icmp eq i32 %13508, 2
  %13510 = zext i1 %13509 to i8
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13510, i8* %13511, align 1
  store %struct.Memory* %loadMem_40b708, %struct.Memory** %MEMORY
  %loadMem_40b70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13513 = getelementptr inbounds %struct.GPR, %struct.GPR* %13512, i32 0, i32 33
  %13514 = getelementptr inbounds %struct.Reg, %struct.Reg* %13513, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %13514 to i64*
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13516 = getelementptr inbounds %struct.GPR, %struct.GPR* %13515, i32 0, i32 5
  %13517 = getelementptr inbounds %struct.Reg, %struct.Reg* %13516, i32 0, i32 0
  %RCX.i813 = bitcast %union.anon* %13517 to i64*
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13519 = getelementptr inbounds %struct.GPR, %struct.GPR* %13518, i32 0, i32 15
  %13520 = getelementptr inbounds %struct.Reg, %struct.Reg* %13519, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %13520 to i64*
  %13521 = load i64, i64* %RBP.i814
  %13522 = sub i64 %13521, 112
  %13523 = load i64, i64* %PC.i812
  %13524 = add i64 %13523, 3
  store i64 %13524, i64* %PC.i812
  %13525 = inttoptr i64 %13522 to i32*
  %13526 = load i32, i32* %13525
  %13527 = zext i32 %13526 to i64
  store i64 %13527, i64* %RCX.i813, align 8
  store %struct.Memory* %loadMem_40b70b, %struct.Memory** %MEMORY
  %loadMem_40b70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 33
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %13530 to i64*
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 5
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %13534 = bitcast %union.anon* %13533 to %struct.anon.2*
  %CL.i810 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13534, i32 0, i32 0
  %13535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13536 = getelementptr inbounds %struct.GPR, %struct.GPR* %13535, i32 0, i32 1
  %13537 = getelementptr inbounds %struct.Reg, %struct.Reg* %13536, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %13537 to i64*
  %13538 = load i64, i64* %RAX.i811
  %13539 = load i8, i8* %CL.i810
  %13540 = zext i8 %13539 to i64
  %13541 = load i64, i64* %PC.i809
  %13542 = add i64 %13541, 2
  store i64 %13542, i64* %PC.i809
  %13543 = trunc i64 %13540 to i5
  switch i5 %13543, label %13547 [
    i5 0, label %routine_sarl__cl___eax.exit
    i5 1, label %13544
  ]

; <label>:13544:                                  ; preds = %block_.L_40b67b
  %13545 = shl i64 %13538, 32
  %13546 = ashr i64 %13545, 33
  br label %13554

; <label>:13547:                                  ; preds = %block_.L_40b67b
  %13548 = and i64 %13540, 31
  %13549 = add i64 %13548, -1
  %13550 = shl i64 %13538, 32
  %13551 = ashr exact i64 %13550, 32
  %13552 = ashr i64 %13551, %13549
  %13553 = lshr i64 %13552, 1
  br label %13554

; <label>:13554:                                  ; preds = %13547, %13544
  %13555 = phi i64 [ %13553, %13547 ], [ %13546, %13544 ]
  %13556 = phi i64 [ %13552, %13547 ], [ %13538, %13544 ]
  %13557 = trunc i64 %13556 to i8
  %13558 = and i8 %13557, 1
  %13559 = trunc i64 %13555 to i32
  %13560 = and i64 %13555, 4294967295
  store i64 %13560, i64* %RAX.i811, align 8
  %13561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13558, i8* %13561, align 1
  %13562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13563 = and i32 %13559, 255
  %13564 = call i32 @llvm.ctpop.i32(i32 %13563)
  %13565 = trunc i32 %13564 to i8
  %13566 = and i8 %13565, 1
  %13567 = xor i8 %13566, 1
  store i8 %13567, i8* %13562, align 1
  %13568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13568, align 1
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13570 = icmp eq i32 %13559, 0
  %13571 = zext i1 %13570 to i8
  store i8 %13571, i8* %13569, align 1
  %13572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13573 = lshr i32 %13559, 31
  %13574 = trunc i32 %13573 to i8
  store i8 %13574, i8* %13572, align 1
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13575, align 1
  br label %routine_sarl__cl___eax.exit

routine_sarl__cl___eax.exit:                      ; preds = %block_.L_40b67b, %13554
  store %struct.Memory* %loadMem_40b70e, %struct.Memory** %MEMORY
  %loadMem_40b710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13577 = getelementptr inbounds %struct.GPR, %struct.GPR* %13576, i32 0, i32 33
  %13578 = getelementptr inbounds %struct.Reg, %struct.Reg* %13577, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %13578 to i64*
  %13579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13580 = getelementptr inbounds %struct.GPR, %struct.GPR* %13579, i32 0, i32 1
  %13581 = getelementptr inbounds %struct.Reg, %struct.Reg* %13580, i32 0, i32 0
  %EAX.i807 = bitcast %union.anon* %13581 to i32*
  %13582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13583 = getelementptr inbounds %struct.GPR, %struct.GPR* %13582, i32 0, i32 15
  %13584 = getelementptr inbounds %struct.Reg, %struct.Reg* %13583, i32 0, i32 0
  %RBP.i808 = bitcast %union.anon* %13584 to i64*
  %13585 = load i64, i64* %RBP.i808
  %13586 = sub i64 %13585, 72
  %13587 = load i32, i32* %EAX.i807
  %13588 = zext i32 %13587 to i64
  %13589 = load i64, i64* %PC.i806
  %13590 = add i64 %13589, 3
  store i64 %13590, i64* %PC.i806
  %13591 = inttoptr i64 %13586 to i32*
  store i32 %13587, i32* %13591
  store %struct.Memory* %loadMem_40b710, %struct.Memory** %MEMORY
  br label %block_.L_40b713

block_.L_40b713:                                  ; preds = %routine_sarl__cl___eax.exit, %routine_sarl__cl___eax.exit911
  %loadMem_40b713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13593 = getelementptr inbounds %struct.GPR, %struct.GPR* %13592, i32 0, i32 33
  %13594 = getelementptr inbounds %struct.Reg, %struct.Reg* %13593, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %13594 to i64*
  %13595 = load i64, i64* %PC.i805
  %13596 = add i64 %13595, 5
  %13597 = load i64, i64* %PC.i805
  %13598 = add i64 %13597, 5
  store i64 %13598, i64* %PC.i805
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13596, i64* %13599, align 8
  store %struct.Memory* %loadMem_40b713, %struct.Memory** %MEMORY
  br label %block_.L_40b718

block_.L_40b718:                                  ; preds = %block_.L_40b713, %block_40b5a7
  %loadMem_40b718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13601 = getelementptr inbounds %struct.GPR, %struct.GPR* %13600, i32 0, i32 33
  %13602 = getelementptr inbounds %struct.Reg, %struct.Reg* %13601, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %13602 to i64*
  %13603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13604 = getelementptr inbounds %struct.GPR, %struct.GPR* %13603, i32 0, i32 15
  %13605 = getelementptr inbounds %struct.Reg, %struct.Reg* %13604, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %13605 to i64*
  %13606 = load i64, i64* %RBP.i804
  %13607 = sub i64 %13606, 72
  %13608 = load i64, i64* %PC.i803
  %13609 = add i64 %13608, 4
  store i64 %13609, i64* %PC.i803
  %13610 = inttoptr i64 %13607 to i32*
  %13611 = load i32, i32* %13610
  %13612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13612, align 1
  %13613 = and i32 %13611, 255
  %13614 = call i32 @llvm.ctpop.i32(i32 %13613)
  %13615 = trunc i32 %13614 to i8
  %13616 = and i8 %13615, 1
  %13617 = xor i8 %13616, 1
  %13618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13617, i8* %13618, align 1
  %13619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13619, align 1
  %13620 = icmp eq i32 %13611, 0
  %13621 = zext i1 %13620 to i8
  %13622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13621, i8* %13622, align 1
  %13623 = lshr i32 %13611, 31
  %13624 = trunc i32 %13623 to i8
  %13625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13624, i8* %13625, align 1
  %13626 = lshr i32 %13611, 31
  %13627 = xor i32 %13623, %13626
  %13628 = add i32 %13627, %13626
  %13629 = icmp eq i32 %13628, 2
  %13630 = zext i1 %13629 to i8
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13630, i8* %13631, align 1
  store %struct.Memory* %loadMem_40b718, %struct.Memory** %MEMORY
  %loadMem_40b71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13633 = getelementptr inbounds %struct.GPR, %struct.GPR* %13632, i32 0, i32 33
  %13634 = getelementptr inbounds %struct.Reg, %struct.Reg* %13633, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %13634 to i64*
  %13635 = load i64, i64* %PC.i802
  %13636 = add i64 %13635, 617
  %13637 = load i64, i64* %PC.i802
  %13638 = add i64 %13637, 6
  %13639 = load i64, i64* %PC.i802
  %13640 = add i64 %13639, 6
  store i64 %13640, i64* %PC.i802
  %13641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13642 = load i8, i8* %13641, align 1
  store i8 %13642, i8* %BRANCH_TAKEN, align 1
  %13643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13644 = icmp ne i8 %13642, 0
  %13645 = select i1 %13644, i64 %13636, i64 %13638
  store i64 %13645, i64* %13643, align 8
  store %struct.Memory* %loadMem_40b71c, %struct.Memory** %MEMORY
  %loadBr_40b71c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b71c = icmp eq i8 %loadBr_40b71c, 1
  br i1 %cmpBr_40b71c, label %block_.L_40b985, label %block_40b722

block_40b722:                                     ; preds = %block_.L_40b718
  %loadMem_40b722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13647 = getelementptr inbounds %struct.GPR, %struct.GPR* %13646, i32 0, i32 33
  %13648 = getelementptr inbounds %struct.Reg, %struct.Reg* %13647, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %13648 to i64*
  %13649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13650 = getelementptr inbounds %struct.GPR, %struct.GPR* %13649, i32 0, i32 15
  %13651 = getelementptr inbounds %struct.Reg, %struct.Reg* %13650, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %13651 to i64*
  %13652 = load i64, i64* %RBP.i801
  %13653 = sub i64 %13652, 16
  %13654 = load i64, i64* %PC.i800
  %13655 = add i64 %13654, 4
  store i64 %13655, i64* %PC.i800
  %13656 = inttoptr i64 %13653 to i32*
  %13657 = load i32, i32* %13656
  %13658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13658, align 1
  %13659 = and i32 %13657, 255
  %13660 = call i32 @llvm.ctpop.i32(i32 %13659)
  %13661 = trunc i32 %13660 to i8
  %13662 = and i8 %13661, 1
  %13663 = xor i8 %13662, 1
  %13664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13663, i8* %13664, align 1
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13665, align 1
  %13666 = icmp eq i32 %13657, 0
  %13667 = zext i1 %13666 to i8
  %13668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13667, i8* %13668, align 1
  %13669 = lshr i32 %13657, 31
  %13670 = trunc i32 %13669 to i8
  %13671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13670, i8* %13671, align 1
  %13672 = lshr i32 %13657, 31
  %13673 = xor i32 %13669, %13672
  %13674 = add i32 %13673, %13672
  %13675 = icmp eq i32 %13674, 2
  %13676 = zext i1 %13675 to i8
  %13677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13676, i8* %13677, align 1
  store %struct.Memory* %loadMem_40b722, %struct.Memory** %MEMORY
  %loadMem_40b726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13679 = getelementptr inbounds %struct.GPR, %struct.GPR* %13678, i32 0, i32 33
  %13680 = getelementptr inbounds %struct.Reg, %struct.Reg* %13679, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %13680 to i64*
  %13681 = load i64, i64* %PC.i799
  %13682 = add i64 %13681, 16
  %13683 = load i64, i64* %PC.i799
  %13684 = add i64 %13683, 6
  %13685 = load i64, i64* %PC.i799
  %13686 = add i64 %13685, 6
  store i64 %13686, i64* %PC.i799
  %13687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13688 = load i8, i8* %13687, align 1
  %13689 = icmp eq i8 %13688, 0
  %13690 = zext i1 %13689 to i8
  store i8 %13690, i8* %BRANCH_TAKEN, align 1
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13692 = select i1 %13689, i64 %13682, i64 %13684
  store i64 %13692, i64* %13691, align 8
  store %struct.Memory* %loadMem_40b726, %struct.Memory** %MEMORY
  %loadBr_40b726 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b726 = icmp eq i8 %loadBr_40b726, 1
  br i1 %cmpBr_40b726, label %block_.L_40b736, label %block_40b72c

block_40b72c:                                     ; preds = %block_40b722
  %loadMem_40b72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13694 = getelementptr inbounds %struct.GPR, %struct.GPR* %13693, i32 0, i32 33
  %13695 = getelementptr inbounds %struct.Reg, %struct.Reg* %13694, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %13695 to i64*
  %13696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13697 = getelementptr inbounds %struct.GPR, %struct.GPR* %13696, i32 0, i32 15
  %13698 = getelementptr inbounds %struct.Reg, %struct.Reg* %13697, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %13698 to i64*
  %13699 = load i64, i64* %RBP.i798
  %13700 = sub i64 %13699, 20
  %13701 = load i64, i64* %PC.i797
  %13702 = add i64 %13701, 4
  store i64 %13702, i64* %PC.i797
  %13703 = inttoptr i64 %13700 to i32*
  %13704 = load i32, i32* %13703
  %13705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13705, align 1
  %13706 = and i32 %13704, 255
  %13707 = call i32 @llvm.ctpop.i32(i32 %13706)
  %13708 = trunc i32 %13707 to i8
  %13709 = and i8 %13708, 1
  %13710 = xor i8 %13709, 1
  %13711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13710, i8* %13711, align 1
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13712, align 1
  %13713 = icmp eq i32 %13704, 0
  %13714 = zext i1 %13713 to i8
  %13715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13714, i8* %13715, align 1
  %13716 = lshr i32 %13704, 31
  %13717 = trunc i32 %13716 to i8
  %13718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13717, i8* %13718, align 1
  %13719 = lshr i32 %13704, 31
  %13720 = xor i32 %13716, %13719
  %13721 = add i32 %13720, %13719
  %13722 = icmp eq i32 %13721, 2
  %13723 = zext i1 %13722 to i8
  %13724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13723, i8* %13724, align 1
  store %struct.Memory* %loadMem_40b72c, %struct.Memory** %MEMORY
  %loadMem_40b730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13726 = getelementptr inbounds %struct.GPR, %struct.GPR* %13725, i32 0, i32 33
  %13727 = getelementptr inbounds %struct.Reg, %struct.Reg* %13726, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %13727 to i64*
  %13728 = load i64, i64* %PC.i796
  %13729 = add i64 %13728, 13
  %13730 = load i64, i64* %PC.i796
  %13731 = add i64 %13730, 6
  %13732 = load i64, i64* %PC.i796
  %13733 = add i64 %13732, 6
  store i64 %13733, i64* %PC.i796
  %13734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13735 = load i8, i8* %13734, align 1
  store i8 %13735, i8* %BRANCH_TAKEN, align 1
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13737 = icmp ne i8 %13735, 0
  %13738 = select i1 %13737, i64 %13729, i64 %13731
  store i64 %13738, i64* %13736, align 8
  store %struct.Memory* %loadMem_40b730, %struct.Memory** %MEMORY
  %loadBr_40b730 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b730 = icmp eq i8 %loadBr_40b730, 1
  br i1 %cmpBr_40b730, label %block_.L_40b73d, label %block_.L_40b736

block_.L_40b736:                                  ; preds = %block_40b72c, %block_40b722
  %loadMem_40b736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13740 = getelementptr inbounds %struct.GPR, %struct.GPR* %13739, i32 0, i32 33
  %13741 = getelementptr inbounds %struct.Reg, %struct.Reg* %13740, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %13741 to i64*
  %13742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13743 = getelementptr inbounds %struct.GPR, %struct.GPR* %13742, i32 0, i32 15
  %13744 = getelementptr inbounds %struct.Reg, %struct.Reg* %13743, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %13744 to i64*
  %13745 = load i64, i64* %RBP.i795
  %13746 = sub i64 %13745, 84
  %13747 = load i64, i64* %PC.i794
  %13748 = add i64 %13747, 7
  store i64 %13748, i64* %PC.i794
  %13749 = inttoptr i64 %13746 to i32*
  store i32 1, i32* %13749
  store %struct.Memory* %loadMem_40b736, %struct.Memory** %MEMORY
  br label %block_.L_40b73d

block_.L_40b73d:                                  ; preds = %block_.L_40b736, %block_40b72c
  %loadMem_40b73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13751 = getelementptr inbounds %struct.GPR, %struct.GPR* %13750, i32 0, i32 33
  %13752 = getelementptr inbounds %struct.Reg, %struct.Reg* %13751, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %13752 to i64*
  %13753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13754 = getelementptr inbounds %struct.GPR, %struct.GPR* %13753, i32 0, i32 11
  %13755 = getelementptr inbounds %struct.Reg, %struct.Reg* %13754, i32 0, i32 0
  %RDI.i792 = bitcast %union.anon* %13755 to i64*
  %13756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13757 = getelementptr inbounds %struct.GPR, %struct.GPR* %13756, i32 0, i32 15
  %13758 = getelementptr inbounds %struct.Reg, %struct.Reg* %13757, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %13758 to i64*
  %13759 = load i64, i64* %RBP.i793
  %13760 = sub i64 %13759, 72
  %13761 = load i64, i64* %PC.i791
  %13762 = add i64 %13761, 3
  store i64 %13762, i64* %PC.i791
  %13763 = inttoptr i64 %13760 to i32*
  %13764 = load i32, i32* %13763
  %13765 = zext i32 %13764 to i64
  store i64 %13765, i64* %RDI.i792, align 8
  store %struct.Memory* %loadMem_40b73d, %struct.Memory** %MEMORY
  %loadMem_40b740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13767 = getelementptr inbounds %struct.GPR, %struct.GPR* %13766, i32 0, i32 33
  %13768 = getelementptr inbounds %struct.Reg, %struct.Reg* %13767, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %13768 to i64*
  %13769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13770 = getelementptr inbounds %struct.GPR, %struct.GPR* %13769, i32 0, i32 1
  %13771 = getelementptr inbounds %struct.Reg, %struct.Reg* %13770, i32 0, i32 0
  %RAX.i790 = bitcast %union.anon* %13771 to i64*
  %13772 = load i64, i64* %PC.i789
  %13773 = add i64 %13772, 8
  store i64 %13773, i64* %PC.i789
  %13774 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %13774, i64* %RAX.i790, align 8
  store %struct.Memory* %loadMem_40b740, %struct.Memory** %MEMORY
  %loadMem_40b748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13776 = getelementptr inbounds %struct.GPR, %struct.GPR* %13775, i32 0, i32 33
  %13777 = getelementptr inbounds %struct.Reg, %struct.Reg* %13776, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %13777 to i64*
  %13778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13779 = getelementptr inbounds %struct.GPR, %struct.GPR* %13778, i32 0, i32 1
  %13780 = getelementptr inbounds %struct.Reg, %struct.Reg* %13779, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %13780 to i64*
  %13781 = load i64, i64* %RAX.i788
  %13782 = load i64, i64* %PC.i787
  %13783 = add i64 %13782, 6
  store i64 %13783, i64* %PC.i787
  %13784 = add i64 13112, %13781
  store i64 %13784, i64* %RAX.i788, align 8
  %13785 = icmp ult i64 %13784, %13781
  %13786 = icmp ult i64 %13784, 13112
  %13787 = or i1 %13785, %13786
  %13788 = zext i1 %13787 to i8
  %13789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13788, i8* %13789, align 1
  %13790 = trunc i64 %13784 to i32
  %13791 = and i32 %13790, 255
  %13792 = call i32 @llvm.ctpop.i32(i32 %13791)
  %13793 = trunc i32 %13792 to i8
  %13794 = and i8 %13793, 1
  %13795 = xor i8 %13794, 1
  %13796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13795, i8* %13796, align 1
  %13797 = xor i64 13112, %13781
  %13798 = xor i64 %13797, %13784
  %13799 = lshr i64 %13798, 4
  %13800 = trunc i64 %13799 to i8
  %13801 = and i8 %13800, 1
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13801, i8* %13802, align 1
  %13803 = icmp eq i64 %13784, 0
  %13804 = zext i1 %13803 to i8
  %13805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13804, i8* %13805, align 1
  %13806 = lshr i64 %13784, 63
  %13807 = trunc i64 %13806 to i8
  %13808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13807, i8* %13808, align 1
  %13809 = lshr i64 %13781, 63
  %13810 = xor i64 %13806, %13809
  %13811 = add i64 %13810, %13806
  %13812 = icmp eq i64 %13811, 2
  %13813 = zext i1 %13812 to i8
  %13814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13813, i8* %13814, align 1
  store %struct.Memory* %loadMem_40b748, %struct.Memory** %MEMORY
  %loadMem_40b74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13816 = getelementptr inbounds %struct.GPR, %struct.GPR* %13815, i32 0, i32 33
  %13817 = getelementptr inbounds %struct.Reg, %struct.Reg* %13816, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %13817 to i64*
  %13818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13819 = getelementptr inbounds %struct.GPR, %struct.GPR* %13818, i32 0, i32 5
  %13820 = getelementptr inbounds %struct.Reg, %struct.Reg* %13819, i32 0, i32 0
  %RCX.i785 = bitcast %union.anon* %13820 to i64*
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13822 = getelementptr inbounds %struct.GPR, %struct.GPR* %13821, i32 0, i32 15
  %13823 = getelementptr inbounds %struct.Reg, %struct.Reg* %13822, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %13823 to i64*
  %13824 = load i64, i64* %RBP.i786
  %13825 = sub i64 %13824, 16
  %13826 = load i64, i64* %PC.i784
  %13827 = add i64 %13826, 4
  store i64 %13827, i64* %PC.i784
  %13828 = inttoptr i64 %13825 to i32*
  %13829 = load i32, i32* %13828
  %13830 = sext i32 %13829 to i64
  store i64 %13830, i64* %RCX.i785, align 8
  store %struct.Memory* %loadMem_40b74e, %struct.Memory** %MEMORY
  %loadMem_40b752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13832 = getelementptr inbounds %struct.GPR, %struct.GPR* %13831, i32 0, i32 33
  %13833 = getelementptr inbounds %struct.Reg, %struct.Reg* %13832, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %13833 to i64*
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13835 = getelementptr inbounds %struct.GPR, %struct.GPR* %13834, i32 0, i32 5
  %13836 = getelementptr inbounds %struct.Reg, %struct.Reg* %13835, i32 0, i32 0
  %RCX.i783 = bitcast %union.anon* %13836 to i64*
  %13837 = load i64, i64* %RCX.i783
  %13838 = load i64, i64* %PC.i782
  %13839 = add i64 %13838, 4
  store i64 %13839, i64* %PC.i782
  %13840 = shl i64 %13837, 5
  %13841 = icmp slt i64 %13840, 0
  %13842 = shl i64 %13840, 1
  store i64 %13842, i64* %RCX.i783, align 8
  %13843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13844 = zext i1 %13841 to i8
  store i8 %13844, i8* %13843, align 1
  %13845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13846 = trunc i64 %13842 to i32
  %13847 = and i32 %13846, 254
  %13848 = call i32 @llvm.ctpop.i32(i32 %13847)
  %13849 = trunc i32 %13848 to i8
  %13850 = and i8 %13849, 1
  %13851 = xor i8 %13850, 1
  store i8 %13851, i8* %13845, align 1
  %13852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13852, align 1
  %13853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13854 = icmp eq i64 %13842, 0
  %13855 = zext i1 %13854 to i8
  store i8 %13855, i8* %13853, align 1
  %13856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13857 = lshr i64 %13842, 63
  %13858 = trunc i64 %13857 to i8
  store i8 %13858, i8* %13856, align 1
  %13859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13859, align 1
  store %struct.Memory* %loadMem_40b752, %struct.Memory** %MEMORY
  %loadMem_40b756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13861 = getelementptr inbounds %struct.GPR, %struct.GPR* %13860, i32 0, i32 33
  %13862 = getelementptr inbounds %struct.Reg, %struct.Reg* %13861, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %13862 to i64*
  %13863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13864 = getelementptr inbounds %struct.GPR, %struct.GPR* %13863, i32 0, i32 1
  %13865 = getelementptr inbounds %struct.Reg, %struct.Reg* %13864, i32 0, i32 0
  %RAX.i780 = bitcast %union.anon* %13865 to i64*
  %13866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13867 = getelementptr inbounds %struct.GPR, %struct.GPR* %13866, i32 0, i32 5
  %13868 = getelementptr inbounds %struct.Reg, %struct.Reg* %13867, i32 0, i32 0
  %RCX.i781 = bitcast %union.anon* %13868 to i64*
  %13869 = load i64, i64* %RAX.i780
  %13870 = load i64, i64* %RCX.i781
  %13871 = load i64, i64* %PC.i779
  %13872 = add i64 %13871, 3
  store i64 %13872, i64* %PC.i779
  %13873 = add i64 %13870, %13869
  store i64 %13873, i64* %RAX.i780, align 8
  %13874 = icmp ult i64 %13873, %13869
  %13875 = icmp ult i64 %13873, %13870
  %13876 = or i1 %13874, %13875
  %13877 = zext i1 %13876 to i8
  %13878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13877, i8* %13878, align 1
  %13879 = trunc i64 %13873 to i32
  %13880 = and i32 %13879, 255
  %13881 = call i32 @llvm.ctpop.i32(i32 %13880)
  %13882 = trunc i32 %13881 to i8
  %13883 = and i8 %13882, 1
  %13884 = xor i8 %13883, 1
  %13885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13884, i8* %13885, align 1
  %13886 = xor i64 %13870, %13869
  %13887 = xor i64 %13886, %13873
  %13888 = lshr i64 %13887, 4
  %13889 = trunc i64 %13888 to i8
  %13890 = and i8 %13889, 1
  %13891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13890, i8* %13891, align 1
  %13892 = icmp eq i64 %13873, 0
  %13893 = zext i1 %13892 to i8
  %13894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13893, i8* %13894, align 1
  %13895 = lshr i64 %13873, 63
  %13896 = trunc i64 %13895 to i8
  %13897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13896, i8* %13897, align 1
  %13898 = lshr i64 %13869, 63
  %13899 = lshr i64 %13870, 63
  %13900 = xor i64 %13895, %13898
  %13901 = xor i64 %13895, %13899
  %13902 = add i64 %13900, %13901
  %13903 = icmp eq i64 %13902, 2
  %13904 = zext i1 %13903 to i8
  %13905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13904, i8* %13905, align 1
  store %struct.Memory* %loadMem_40b756, %struct.Memory** %MEMORY
  %loadMem_40b759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13907 = getelementptr inbounds %struct.GPR, %struct.GPR* %13906, i32 0, i32 33
  %13908 = getelementptr inbounds %struct.Reg, %struct.Reg* %13907, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %13908 to i64*
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 5
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %RCX.i777 = bitcast %union.anon* %13911 to i64*
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13913 = getelementptr inbounds %struct.GPR, %struct.GPR* %13912, i32 0, i32 15
  %13914 = getelementptr inbounds %struct.Reg, %struct.Reg* %13913, i32 0, i32 0
  %RBP.i778 = bitcast %union.anon* %13914 to i64*
  %13915 = load i64, i64* %RBP.i778
  %13916 = sub i64 %13915, 20
  %13917 = load i64, i64* %PC.i776
  %13918 = add i64 %13917, 4
  store i64 %13918, i64* %PC.i776
  %13919 = inttoptr i64 %13916 to i32*
  %13920 = load i32, i32* %13919
  %13921 = sext i32 %13920 to i64
  store i64 %13921, i64* %RCX.i777, align 8
  store %struct.Memory* %loadMem_40b759, %struct.Memory** %MEMORY
  %loadMem_40b75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13923 = getelementptr inbounds %struct.GPR, %struct.GPR* %13922, i32 0, i32 33
  %13924 = getelementptr inbounds %struct.Reg, %struct.Reg* %13923, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %13924 to i64*
  %13925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13926 = getelementptr inbounds %struct.GPR, %struct.GPR* %13925, i32 0, i32 1
  %13927 = getelementptr inbounds %struct.Reg, %struct.Reg* %13926, i32 0, i32 0
  %RAX.i773 = bitcast %union.anon* %13927 to i64*
  %13928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13929 = getelementptr inbounds %struct.GPR, %struct.GPR* %13928, i32 0, i32 5
  %13930 = getelementptr inbounds %struct.Reg, %struct.Reg* %13929, i32 0, i32 0
  %RCX.i774 = bitcast %union.anon* %13930 to i64*
  %13931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13932 = getelementptr inbounds %struct.GPR, %struct.GPR* %13931, i32 0, i32 9
  %13933 = getelementptr inbounds %struct.Reg, %struct.Reg* %13932, i32 0, i32 0
  %RSI.i775 = bitcast %union.anon* %13933 to i64*
  %13934 = load i64, i64* %RAX.i773
  %13935 = load i64, i64* %RCX.i774
  %13936 = mul i64 %13935, 4
  %13937 = add i64 %13936, %13934
  %13938 = load i64, i64* %PC.i772
  %13939 = add i64 %13938, 3
  store i64 %13939, i64* %PC.i772
  %13940 = inttoptr i64 %13937 to i32*
  %13941 = load i32, i32* %13940
  %13942 = zext i32 %13941 to i64
  store i64 %13942, i64* %RSI.i775, align 8
  store %struct.Memory* %loadMem_40b75d, %struct.Memory** %MEMORY
  %loadMem1_40b760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13944 = getelementptr inbounds %struct.GPR, %struct.GPR* %13943, i32 0, i32 33
  %13945 = getelementptr inbounds %struct.Reg, %struct.Reg* %13944, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %13945 to i64*
  %13946 = load i64, i64* %PC.i771
  %13947 = add i64 %13946, 432624
  %13948 = load i64, i64* %PC.i771
  %13949 = add i64 %13948, 5
  %13950 = load i64, i64* %PC.i771
  %13951 = add i64 %13950, 5
  store i64 %13951, i64* %PC.i771
  %13952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13953 = load i64, i64* %13952, align 8
  %13954 = add i64 %13953, -8
  %13955 = inttoptr i64 %13954 to i64*
  store i64 %13949, i64* %13955
  store i64 %13954, i64* %13952, align 8
  %13956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13947, i64* %13956, align 8
  store %struct.Memory* %loadMem1_40b760, %struct.Memory** %MEMORY
  %loadMem2_40b760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b760 = load i64, i64* %3
  %call2_40b760 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b760, %struct.Memory* %loadMem2_40b760)
  store %struct.Memory* %call2_40b760, %struct.Memory** %MEMORY
  %loadMem_40b765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13958 = getelementptr inbounds %struct.GPR, %struct.GPR* %13957, i32 0, i32 33
  %13959 = getelementptr inbounds %struct.Reg, %struct.Reg* %13958, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %13959 to i64*
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13961 = getelementptr inbounds %struct.GPR, %struct.GPR* %13960, i32 0, i32 5
  %13962 = getelementptr inbounds %struct.Reg, %struct.Reg* %13961, i32 0, i32 0
  %RCX.i769 = bitcast %union.anon* %13962 to i64*
  %13963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13964 = getelementptr inbounds %struct.GPR, %struct.GPR* %13963, i32 0, i32 15
  %13965 = getelementptr inbounds %struct.Reg, %struct.Reg* %13964, i32 0, i32 0
  %RBP.i770 = bitcast %union.anon* %13965 to i64*
  %13966 = load i64, i64* %RBP.i770
  %13967 = sub i64 %13966, 128
  %13968 = load i64, i64* %PC.i768
  %13969 = add i64 %13968, 4
  store i64 %13969, i64* %PC.i768
  %13970 = inttoptr i64 %13967 to i64*
  %13971 = load i64, i64* %13970
  store i64 %13971, i64* %RCX.i769, align 8
  store %struct.Memory* %loadMem_40b765, %struct.Memory** %MEMORY
  %loadMem_40b769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13973 = getelementptr inbounds %struct.GPR, %struct.GPR* %13972, i32 0, i32 33
  %13974 = getelementptr inbounds %struct.Reg, %struct.Reg* %13973, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %13974 to i64*
  %13975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13976 = getelementptr inbounds %struct.GPR, %struct.GPR* %13975, i32 0, i32 7
  %13977 = getelementptr inbounds %struct.Reg, %struct.Reg* %13976, i32 0, i32 0
  %RDX.i766 = bitcast %union.anon* %13977 to i64*
  %13978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13979 = getelementptr inbounds %struct.GPR, %struct.GPR* %13978, i32 0, i32 15
  %13980 = getelementptr inbounds %struct.Reg, %struct.Reg* %13979, i32 0, i32 0
  %RBP.i767 = bitcast %union.anon* %13980 to i64*
  %13981 = load i64, i64* %RBP.i767
  %13982 = sub i64 %13981, 76
  %13983 = load i64, i64* %PC.i765
  %13984 = add i64 %13983, 4
  store i64 %13984, i64* %PC.i765
  %13985 = inttoptr i64 %13982 to i32*
  %13986 = load i32, i32* %13985
  %13987 = sext i32 %13986 to i64
  store i64 %13987, i64* %RDX.i766, align 8
  store %struct.Memory* %loadMem_40b769, %struct.Memory** %MEMORY
  %loadMem_40b76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13989 = getelementptr inbounds %struct.GPR, %struct.GPR* %13988, i32 0, i32 33
  %13990 = getelementptr inbounds %struct.Reg, %struct.Reg* %13989, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %13990 to i64*
  %13991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13992 = getelementptr inbounds %struct.GPR, %struct.GPR* %13991, i32 0, i32 1
  %13993 = getelementptr inbounds %struct.Reg, %struct.Reg* %13992, i32 0, i32 0
  %EAX.i762 = bitcast %union.anon* %13993 to i32*
  %13994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13995 = getelementptr inbounds %struct.GPR, %struct.GPR* %13994, i32 0, i32 5
  %13996 = getelementptr inbounds %struct.Reg, %struct.Reg* %13995, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %13996 to i64*
  %13997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13998 = getelementptr inbounds %struct.GPR, %struct.GPR* %13997, i32 0, i32 7
  %13999 = getelementptr inbounds %struct.Reg, %struct.Reg* %13998, i32 0, i32 0
  %RDX.i764 = bitcast %union.anon* %13999 to i64*
  %14000 = load i64, i64* %RCX.i763
  %14001 = load i64, i64* %RDX.i764
  %14002 = mul i64 %14001, 4
  %14003 = add i64 %14002, %14000
  %14004 = load i32, i32* %EAX.i762
  %14005 = zext i32 %14004 to i64
  %14006 = load i64, i64* %PC.i761
  %14007 = add i64 %14006, 3
  store i64 %14007, i64* %PC.i761
  %14008 = inttoptr i64 %14003 to i32*
  store i32 %14004, i32* %14008
  store %struct.Memory* %loadMem_40b76d, %struct.Memory** %MEMORY
  %loadMem_40b770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14010 = getelementptr inbounds %struct.GPR, %struct.GPR* %14009, i32 0, i32 33
  %14011 = getelementptr inbounds %struct.Reg, %struct.Reg* %14010, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %14011 to i64*
  %14012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14013 = getelementptr inbounds %struct.GPR, %struct.GPR* %14012, i32 0, i32 1
  %14014 = getelementptr inbounds %struct.Reg, %struct.Reg* %14013, i32 0, i32 0
  %RAX.i759 = bitcast %union.anon* %14014 to i64*
  %14015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14016 = getelementptr inbounds %struct.GPR, %struct.GPR* %14015, i32 0, i32 15
  %14017 = getelementptr inbounds %struct.Reg, %struct.Reg* %14016, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %14017 to i64*
  %14018 = load i64, i64* %RBP.i760
  %14019 = sub i64 %14018, 80
  %14020 = load i64, i64* %PC.i758
  %14021 = add i64 %14020, 3
  store i64 %14021, i64* %PC.i758
  %14022 = inttoptr i64 %14019 to i32*
  %14023 = load i32, i32* %14022
  %14024 = zext i32 %14023 to i64
  store i64 %14024, i64* %RAX.i759, align 8
  store %struct.Memory* %loadMem_40b770, %struct.Memory** %MEMORY
  %loadMem_40b773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14026 = getelementptr inbounds %struct.GPR, %struct.GPR* %14025, i32 0, i32 33
  %14027 = getelementptr inbounds %struct.Reg, %struct.Reg* %14026, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %14027 to i64*
  %14028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14029 = getelementptr inbounds %struct.GPR, %struct.GPR* %14028, i32 0, i32 5
  %14030 = getelementptr inbounds %struct.Reg, %struct.Reg* %14029, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %14030 to i64*
  %14031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14032 = getelementptr inbounds %struct.GPR, %struct.GPR* %14031, i32 0, i32 15
  %14033 = getelementptr inbounds %struct.Reg, %struct.Reg* %14032, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %14033 to i64*
  %14034 = load i64, i64* %RBP.i757
  %14035 = sub i64 %14034, 136
  %14036 = load i64, i64* %PC.i755
  %14037 = add i64 %14036, 7
  store i64 %14037, i64* %PC.i755
  %14038 = inttoptr i64 %14035 to i64*
  %14039 = load i64, i64* %14038
  store i64 %14039, i64* %RCX.i756, align 8
  store %struct.Memory* %loadMem_40b773, %struct.Memory** %MEMORY
  %loadMem_40b77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14041 = getelementptr inbounds %struct.GPR, %struct.GPR* %14040, i32 0, i32 33
  %14042 = getelementptr inbounds %struct.Reg, %struct.Reg* %14041, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %14042 to i64*
  %14043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14044 = getelementptr inbounds %struct.GPR, %struct.GPR* %14043, i32 0, i32 7
  %14045 = getelementptr inbounds %struct.Reg, %struct.Reg* %14044, i32 0, i32 0
  %RDX.i753 = bitcast %union.anon* %14045 to i64*
  %14046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14047 = getelementptr inbounds %struct.GPR, %struct.GPR* %14046, i32 0, i32 15
  %14048 = getelementptr inbounds %struct.Reg, %struct.Reg* %14047, i32 0, i32 0
  %RBP.i754 = bitcast %union.anon* %14048 to i64*
  %14049 = load i64, i64* %RBP.i754
  %14050 = sub i64 %14049, 76
  %14051 = load i64, i64* %PC.i752
  %14052 = add i64 %14051, 4
  store i64 %14052, i64* %PC.i752
  %14053 = inttoptr i64 %14050 to i32*
  %14054 = load i32, i32* %14053
  %14055 = sext i32 %14054 to i64
  store i64 %14055, i64* %RDX.i753, align 8
  store %struct.Memory* %loadMem_40b77a, %struct.Memory** %MEMORY
  %loadMem_40b77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14057 = getelementptr inbounds %struct.GPR, %struct.GPR* %14056, i32 0, i32 33
  %14058 = getelementptr inbounds %struct.Reg, %struct.Reg* %14057, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %14058 to i64*
  %14059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14060 = getelementptr inbounds %struct.GPR, %struct.GPR* %14059, i32 0, i32 1
  %14061 = getelementptr inbounds %struct.Reg, %struct.Reg* %14060, i32 0, i32 0
  %EAX.i749 = bitcast %union.anon* %14061 to i32*
  %14062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14063 = getelementptr inbounds %struct.GPR, %struct.GPR* %14062, i32 0, i32 5
  %14064 = getelementptr inbounds %struct.Reg, %struct.Reg* %14063, i32 0, i32 0
  %RCX.i750 = bitcast %union.anon* %14064 to i64*
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14066 = getelementptr inbounds %struct.GPR, %struct.GPR* %14065, i32 0, i32 7
  %14067 = getelementptr inbounds %struct.Reg, %struct.Reg* %14066, i32 0, i32 0
  %RDX.i751 = bitcast %union.anon* %14067 to i64*
  %14068 = load i64, i64* %RCX.i750
  %14069 = load i64, i64* %RDX.i751
  %14070 = mul i64 %14069, 4
  %14071 = add i64 %14070, %14068
  %14072 = load i32, i32* %EAX.i749
  %14073 = zext i32 %14072 to i64
  %14074 = load i64, i64* %PC.i748
  %14075 = add i64 %14074, 3
  store i64 %14075, i64* %PC.i748
  %14076 = inttoptr i64 %14071 to i32*
  store i32 %14072, i32* %14076
  store %struct.Memory* %loadMem_40b77e, %struct.Memory** %MEMORY
  %loadMem_40b781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14078 = getelementptr inbounds %struct.GPR, %struct.GPR* %14077, i32 0, i32 33
  %14079 = getelementptr inbounds %struct.Reg, %struct.Reg* %14078, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %14079 to i64*
  %14080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14081 = getelementptr inbounds %struct.GPR, %struct.GPR* %14080, i32 0, i32 1
  %14082 = getelementptr inbounds %struct.Reg, %struct.Reg* %14081, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %14082 to i64*
  %14083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14084 = getelementptr inbounds %struct.GPR, %struct.GPR* %14083, i32 0, i32 15
  %14085 = getelementptr inbounds %struct.Reg, %struct.Reg* %14084, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %14085 to i64*
  %14086 = load i64, i64* %RBP.i747
  %14087 = sub i64 %14086, 76
  %14088 = load i64, i64* %PC.i745
  %14089 = add i64 %14088, 3
  store i64 %14089, i64* %PC.i745
  %14090 = inttoptr i64 %14087 to i32*
  %14091 = load i32, i32* %14090
  %14092 = zext i32 %14091 to i64
  store i64 %14092, i64* %RAX.i746, align 8
  store %struct.Memory* %loadMem_40b781, %struct.Memory** %MEMORY
  %loadMem_40b784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14094 = getelementptr inbounds %struct.GPR, %struct.GPR* %14093, i32 0, i32 33
  %14095 = getelementptr inbounds %struct.Reg, %struct.Reg* %14094, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %14095 to i64*
  %14096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14097 = getelementptr inbounds %struct.GPR, %struct.GPR* %14096, i32 0, i32 1
  %14098 = getelementptr inbounds %struct.Reg, %struct.Reg* %14097, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %14098 to i64*
  %14099 = load i64, i64* %RAX.i744
  %14100 = load i64, i64* %PC.i743
  %14101 = add i64 %14100, 3
  store i64 %14101, i64* %PC.i743
  %14102 = trunc i64 %14099 to i32
  %14103 = add i32 1, %14102
  %14104 = zext i32 %14103 to i64
  store i64 %14104, i64* %RAX.i744, align 8
  %14105 = icmp ult i32 %14103, %14102
  %14106 = icmp ult i32 %14103, 1
  %14107 = or i1 %14105, %14106
  %14108 = zext i1 %14107 to i8
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14108, i8* %14109, align 1
  %14110 = and i32 %14103, 255
  %14111 = call i32 @llvm.ctpop.i32(i32 %14110)
  %14112 = trunc i32 %14111 to i8
  %14113 = and i8 %14112, 1
  %14114 = xor i8 %14113, 1
  %14115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14114, i8* %14115, align 1
  %14116 = xor i64 1, %14099
  %14117 = trunc i64 %14116 to i32
  %14118 = xor i32 %14117, %14103
  %14119 = lshr i32 %14118, 4
  %14120 = trunc i32 %14119 to i8
  %14121 = and i8 %14120, 1
  %14122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14121, i8* %14122, align 1
  %14123 = icmp eq i32 %14103, 0
  %14124 = zext i1 %14123 to i8
  %14125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14124, i8* %14125, align 1
  %14126 = lshr i32 %14103, 31
  %14127 = trunc i32 %14126 to i8
  %14128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14127, i8* %14128, align 1
  %14129 = lshr i32 %14102, 31
  %14130 = xor i32 %14126, %14129
  %14131 = add i32 %14130, %14126
  %14132 = icmp eq i32 %14131, 2
  %14133 = zext i1 %14132 to i8
  %14134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14133, i8* %14134, align 1
  store %struct.Memory* %loadMem_40b784, %struct.Memory** %MEMORY
  %loadMem_40b787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14136 = getelementptr inbounds %struct.GPR, %struct.GPR* %14135, i32 0, i32 33
  %14137 = getelementptr inbounds %struct.Reg, %struct.Reg* %14136, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %14137 to i64*
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14139 = getelementptr inbounds %struct.GPR, %struct.GPR* %14138, i32 0, i32 1
  %14140 = getelementptr inbounds %struct.Reg, %struct.Reg* %14139, i32 0, i32 0
  %EAX.i741 = bitcast %union.anon* %14140 to i32*
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14142 = getelementptr inbounds %struct.GPR, %struct.GPR* %14141, i32 0, i32 15
  %14143 = getelementptr inbounds %struct.Reg, %struct.Reg* %14142, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %14143 to i64*
  %14144 = load i64, i64* %RBP.i742
  %14145 = sub i64 %14144, 76
  %14146 = load i32, i32* %EAX.i741
  %14147 = zext i32 %14146 to i64
  %14148 = load i64, i64* %PC.i740
  %14149 = add i64 %14148, 3
  store i64 %14149, i64* %PC.i740
  %14150 = inttoptr i64 %14145 to i32*
  store i32 %14146, i32* %14150
  store %struct.Memory* %loadMem_40b787, %struct.Memory** %MEMORY
  %loadMem_40b78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14152 = getelementptr inbounds %struct.GPR, %struct.GPR* %14151, i32 0, i32 33
  %14153 = getelementptr inbounds %struct.Reg, %struct.Reg* %14152, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %14153 to i64*
  %14154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14155 = getelementptr inbounds %struct.GPR, %struct.GPR* %14154, i32 0, i32 15
  %14156 = getelementptr inbounds %struct.Reg, %struct.Reg* %14155, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %14156 to i64*
  %14157 = load i64, i64* %RBP.i739
  %14158 = sub i64 %14157, 80
  %14159 = load i64, i64* %PC.i738
  %14160 = add i64 %14159, 7
  store i64 %14160, i64* %PC.i738
  %14161 = inttoptr i64 %14158 to i32*
  store i32 -1, i32* %14161
  store %struct.Memory* %loadMem_40b78a, %struct.Memory** %MEMORY
  %loadMem_40b791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14163 = getelementptr inbounds %struct.GPR, %struct.GPR* %14162, i32 0, i32 33
  %14164 = getelementptr inbounds %struct.Reg, %struct.Reg* %14163, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %14164 to i64*
  %14165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14166 = getelementptr inbounds %struct.GPR, %struct.GPR* %14165, i32 0, i32 11
  %14167 = getelementptr inbounds %struct.Reg, %struct.Reg* %14166, i32 0, i32 0
  %RDI.i736 = bitcast %union.anon* %14167 to i64*
  %14168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14169 = getelementptr inbounds %struct.GPR, %struct.GPR* %14168, i32 0, i32 15
  %14170 = getelementptr inbounds %struct.Reg, %struct.Reg* %14169, i32 0, i32 0
  %RBP.i737 = bitcast %union.anon* %14170 to i64*
  %14171 = load i64, i64* %RBP.i737
  %14172 = sub i64 %14171, 72
  %14173 = load i64, i64* %PC.i735
  %14174 = add i64 %14173, 3
  store i64 %14174, i64* %PC.i735
  %14175 = inttoptr i64 %14172 to i32*
  %14176 = load i32, i32* %14175
  %14177 = zext i32 %14176 to i64
  store i64 %14177, i64* %RDI.i736, align 8
  store %struct.Memory* %loadMem_40b791, %struct.Memory** %MEMORY
  %loadMem_40b794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14179 = getelementptr inbounds %struct.GPR, %struct.GPR* %14178, i32 0, i32 33
  %14180 = getelementptr inbounds %struct.Reg, %struct.Reg* %14179, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %14180 to i64*
  %14181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14182 = getelementptr inbounds %struct.GPR, %struct.GPR* %14181, i32 0, i32 5
  %14183 = getelementptr inbounds %struct.Reg, %struct.Reg* %14182, i32 0, i32 0
  %RCX.i734 = bitcast %union.anon* %14183 to i64*
  %14184 = load i64, i64* %PC.i733
  %14185 = add i64 %14184, 8
  store i64 %14185, i64* %PC.i733
  %14186 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %14186, i64* %RCX.i734, align 8
  store %struct.Memory* %loadMem_40b794, %struct.Memory** %MEMORY
  %loadMem_40b79c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14188 = getelementptr inbounds %struct.GPR, %struct.GPR* %14187, i32 0, i32 33
  %14189 = getelementptr inbounds %struct.Reg, %struct.Reg* %14188, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %14189 to i64*
  %14190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14191 = getelementptr inbounds %struct.GPR, %struct.GPR* %14190, i32 0, i32 5
  %14192 = getelementptr inbounds %struct.Reg, %struct.Reg* %14191, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %14192 to i64*
  %14193 = load i64, i64* %RCX.i732
  %14194 = load i64, i64* %PC.i731
  %14195 = add i64 %14194, 7
  store i64 %14195, i64* %PC.i731
  %14196 = add i64 13112, %14193
  store i64 %14196, i64* %RCX.i732, align 8
  %14197 = icmp ult i64 %14196, %14193
  %14198 = icmp ult i64 %14196, 13112
  %14199 = or i1 %14197, %14198
  %14200 = zext i1 %14199 to i8
  %14201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14200, i8* %14201, align 1
  %14202 = trunc i64 %14196 to i32
  %14203 = and i32 %14202, 255
  %14204 = call i32 @llvm.ctpop.i32(i32 %14203)
  %14205 = trunc i32 %14204 to i8
  %14206 = and i8 %14205, 1
  %14207 = xor i8 %14206, 1
  %14208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14207, i8* %14208, align 1
  %14209 = xor i64 13112, %14193
  %14210 = xor i64 %14209, %14196
  %14211 = lshr i64 %14210, 4
  %14212 = trunc i64 %14211 to i8
  %14213 = and i8 %14212, 1
  %14214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14213, i8* %14214, align 1
  %14215 = icmp eq i64 %14196, 0
  %14216 = zext i1 %14215 to i8
  %14217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14216, i8* %14217, align 1
  %14218 = lshr i64 %14196, 63
  %14219 = trunc i64 %14218 to i8
  %14220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14219, i8* %14220, align 1
  %14221 = lshr i64 %14193, 63
  %14222 = xor i64 %14218, %14221
  %14223 = add i64 %14222, %14218
  %14224 = icmp eq i64 %14223, 2
  %14225 = zext i1 %14224 to i8
  %14226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14225, i8* %14226, align 1
  store %struct.Memory* %loadMem_40b79c, %struct.Memory** %MEMORY
  %loadMem_40b7a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14228 = getelementptr inbounds %struct.GPR, %struct.GPR* %14227, i32 0, i32 33
  %14229 = getelementptr inbounds %struct.Reg, %struct.Reg* %14228, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %14229 to i64*
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14231 = getelementptr inbounds %struct.GPR, %struct.GPR* %14230, i32 0, i32 7
  %14232 = getelementptr inbounds %struct.Reg, %struct.Reg* %14231, i32 0, i32 0
  %RDX.i729 = bitcast %union.anon* %14232 to i64*
  %14233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14234 = getelementptr inbounds %struct.GPR, %struct.GPR* %14233, i32 0, i32 15
  %14235 = getelementptr inbounds %struct.Reg, %struct.Reg* %14234, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %14235 to i64*
  %14236 = load i64, i64* %RBP.i730
  %14237 = sub i64 %14236, 16
  %14238 = load i64, i64* %PC.i728
  %14239 = add i64 %14238, 4
  store i64 %14239, i64* %PC.i728
  %14240 = inttoptr i64 %14237 to i32*
  %14241 = load i32, i32* %14240
  %14242 = sext i32 %14241 to i64
  store i64 %14242, i64* %RDX.i729, align 8
  store %struct.Memory* %loadMem_40b7a3, %struct.Memory** %MEMORY
  %loadMem_40b7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14244 = getelementptr inbounds %struct.GPR, %struct.GPR* %14243, i32 0, i32 33
  %14245 = getelementptr inbounds %struct.Reg, %struct.Reg* %14244, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %14245 to i64*
  %14246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14247 = getelementptr inbounds %struct.GPR, %struct.GPR* %14246, i32 0, i32 7
  %14248 = getelementptr inbounds %struct.Reg, %struct.Reg* %14247, i32 0, i32 0
  %RDX.i727 = bitcast %union.anon* %14248 to i64*
  %14249 = load i64, i64* %RDX.i727
  %14250 = load i64, i64* %PC.i726
  %14251 = add i64 %14250, 4
  store i64 %14251, i64* %PC.i726
  %14252 = shl i64 %14249, 5
  %14253 = icmp slt i64 %14252, 0
  %14254 = shl i64 %14252, 1
  store i64 %14254, i64* %RDX.i727, align 8
  %14255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14256 = zext i1 %14253 to i8
  store i8 %14256, i8* %14255, align 1
  %14257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14258 = trunc i64 %14254 to i32
  %14259 = and i32 %14258, 254
  %14260 = call i32 @llvm.ctpop.i32(i32 %14259)
  %14261 = trunc i32 %14260 to i8
  %14262 = and i8 %14261, 1
  %14263 = xor i8 %14262, 1
  store i8 %14263, i8* %14257, align 1
  %14264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14264, align 1
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14266 = icmp eq i64 %14254, 0
  %14267 = zext i1 %14266 to i8
  store i8 %14267, i8* %14265, align 1
  %14268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14269 = lshr i64 %14254, 63
  %14270 = trunc i64 %14269 to i8
  store i8 %14270, i8* %14268, align 1
  %14271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14271, align 1
  store %struct.Memory* %loadMem_40b7a7, %struct.Memory** %MEMORY
  %loadMem_40b7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14273 = getelementptr inbounds %struct.GPR, %struct.GPR* %14272, i32 0, i32 33
  %14274 = getelementptr inbounds %struct.Reg, %struct.Reg* %14273, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %14274 to i64*
  %14275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14276 = getelementptr inbounds %struct.GPR, %struct.GPR* %14275, i32 0, i32 5
  %14277 = getelementptr inbounds %struct.Reg, %struct.Reg* %14276, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %14277 to i64*
  %14278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14279 = getelementptr inbounds %struct.GPR, %struct.GPR* %14278, i32 0, i32 7
  %14280 = getelementptr inbounds %struct.Reg, %struct.Reg* %14279, i32 0, i32 0
  %RDX.i725 = bitcast %union.anon* %14280 to i64*
  %14281 = load i64, i64* %RCX.i724
  %14282 = load i64, i64* %RDX.i725
  %14283 = load i64, i64* %PC.i723
  %14284 = add i64 %14283, 3
  store i64 %14284, i64* %PC.i723
  %14285 = add i64 %14282, %14281
  store i64 %14285, i64* %RCX.i724, align 8
  %14286 = icmp ult i64 %14285, %14281
  %14287 = icmp ult i64 %14285, %14282
  %14288 = or i1 %14286, %14287
  %14289 = zext i1 %14288 to i8
  %14290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14289, i8* %14290, align 1
  %14291 = trunc i64 %14285 to i32
  %14292 = and i32 %14291, 255
  %14293 = call i32 @llvm.ctpop.i32(i32 %14292)
  %14294 = trunc i32 %14293 to i8
  %14295 = and i8 %14294, 1
  %14296 = xor i8 %14295, 1
  %14297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14296, i8* %14297, align 1
  %14298 = xor i64 %14282, %14281
  %14299 = xor i64 %14298, %14285
  %14300 = lshr i64 %14299, 4
  %14301 = trunc i64 %14300 to i8
  %14302 = and i8 %14301, 1
  %14303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14302, i8* %14303, align 1
  %14304 = icmp eq i64 %14285, 0
  %14305 = zext i1 %14304 to i8
  %14306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14305, i8* %14306, align 1
  %14307 = lshr i64 %14285, 63
  %14308 = trunc i64 %14307 to i8
  %14309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14308, i8* %14309, align 1
  %14310 = lshr i64 %14281, 63
  %14311 = lshr i64 %14282, 63
  %14312 = xor i64 %14307, %14310
  %14313 = xor i64 %14307, %14311
  %14314 = add i64 %14312, %14313
  %14315 = icmp eq i64 %14314, 2
  %14316 = zext i1 %14315 to i8
  %14317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14316, i8* %14317, align 1
  store %struct.Memory* %loadMem_40b7ab, %struct.Memory** %MEMORY
  %loadMem_40b7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %14318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14319 = getelementptr inbounds %struct.GPR, %struct.GPR* %14318, i32 0, i32 33
  %14320 = getelementptr inbounds %struct.Reg, %struct.Reg* %14319, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %14320 to i64*
  %14321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14322 = getelementptr inbounds %struct.GPR, %struct.GPR* %14321, i32 0, i32 7
  %14323 = getelementptr inbounds %struct.Reg, %struct.Reg* %14322, i32 0, i32 0
  %RDX.i721 = bitcast %union.anon* %14323 to i64*
  %14324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14325 = getelementptr inbounds %struct.GPR, %struct.GPR* %14324, i32 0, i32 15
  %14326 = getelementptr inbounds %struct.Reg, %struct.Reg* %14325, i32 0, i32 0
  %RBP.i722 = bitcast %union.anon* %14326 to i64*
  %14327 = load i64, i64* %RBP.i722
  %14328 = sub i64 %14327, 20
  %14329 = load i64, i64* %PC.i720
  %14330 = add i64 %14329, 4
  store i64 %14330, i64* %PC.i720
  %14331 = inttoptr i64 %14328 to i32*
  %14332 = load i32, i32* %14331
  %14333 = sext i32 %14332 to i64
  store i64 %14333, i64* %RDX.i721, align 8
  store %struct.Memory* %loadMem_40b7ae, %struct.Memory** %MEMORY
  %loadMem_40b7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14335 = getelementptr inbounds %struct.GPR, %struct.GPR* %14334, i32 0, i32 33
  %14336 = getelementptr inbounds %struct.Reg, %struct.Reg* %14335, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %14336 to i64*
  %14337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14338 = getelementptr inbounds %struct.GPR, %struct.GPR* %14337, i32 0, i32 5
  %14339 = getelementptr inbounds %struct.Reg, %struct.Reg* %14338, i32 0, i32 0
  %RCX.i717 = bitcast %union.anon* %14339 to i64*
  %14340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14341 = getelementptr inbounds %struct.GPR, %struct.GPR* %14340, i32 0, i32 7
  %14342 = getelementptr inbounds %struct.Reg, %struct.Reg* %14341, i32 0, i32 0
  %RDX.i718 = bitcast %union.anon* %14342 to i64*
  %14343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14344 = getelementptr inbounds %struct.GPR, %struct.GPR* %14343, i32 0, i32 9
  %14345 = getelementptr inbounds %struct.Reg, %struct.Reg* %14344, i32 0, i32 0
  %RSI.i719 = bitcast %union.anon* %14345 to i64*
  %14346 = load i64, i64* %RCX.i717
  %14347 = load i64, i64* %RDX.i718
  %14348 = mul i64 %14347, 4
  %14349 = add i64 %14348, %14346
  %14350 = load i64, i64* %PC.i716
  %14351 = add i64 %14350, 3
  store i64 %14351, i64* %PC.i716
  %14352 = inttoptr i64 %14349 to i32*
  %14353 = load i32, i32* %14352
  %14354 = zext i32 %14353 to i64
  store i64 %14354, i64* %RSI.i719, align 8
  store %struct.Memory* %loadMem_40b7b2, %struct.Memory** %MEMORY
  %loadMem1_40b7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14356 = getelementptr inbounds %struct.GPR, %struct.GPR* %14355, i32 0, i32 33
  %14357 = getelementptr inbounds %struct.Reg, %struct.Reg* %14356, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %14357 to i64*
  %14358 = load i64, i64* %PC.i715
  %14359 = add i64 %14358, 432539
  %14360 = load i64, i64* %PC.i715
  %14361 = add i64 %14360, 5
  %14362 = load i64, i64* %PC.i715
  %14363 = add i64 %14362, 5
  store i64 %14363, i64* %PC.i715
  %14364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14365 = load i64, i64* %14364, align 8
  %14366 = add i64 %14365, -8
  %14367 = inttoptr i64 %14366 to i64*
  store i64 %14361, i64* %14367
  store i64 %14366, i64* %14364, align 8
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14359, i64* %14368, align 8
  store %struct.Memory* %loadMem1_40b7b5, %struct.Memory** %MEMORY
  %loadMem2_40b7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b7b5 = load i64, i64* %3
  %call2_40b7b5 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64 %loadPC_40b7b5, %struct.Memory* %loadMem2_40b7b5)
  store %struct.Memory* %call2_40b7b5, %struct.Memory** %MEMORY
  %loadMem_40b7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %14369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14370 = getelementptr inbounds %struct.GPR, %struct.GPR* %14369, i32 0, i32 33
  %14371 = getelementptr inbounds %struct.Reg, %struct.Reg* %14370, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %14371 to i64*
  %14372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14373 = getelementptr inbounds %struct.GPR, %struct.GPR* %14372, i32 0, i32 1
  %14374 = getelementptr inbounds %struct.Reg, %struct.Reg* %14373, i32 0, i32 0
  %EAX.i713 = bitcast %union.anon* %14374 to i32*
  %14375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14376 = getelementptr inbounds %struct.GPR, %struct.GPR* %14375, i32 0, i32 15
  %14377 = getelementptr inbounds %struct.Reg, %struct.Reg* %14376, i32 0, i32 0
  %RBP.i714 = bitcast %union.anon* %14377 to i64*
  %14378 = load i64, i64* %RBP.i714
  %14379 = sub i64 %14378, 72
  %14380 = load i32, i32* %EAX.i713
  %14381 = zext i32 %14380 to i64
  %14382 = load i64, i64* %PC.i712
  %14383 = add i64 %14382, 3
  store i64 %14383, i64* %PC.i712
  %14384 = inttoptr i64 %14379 to i32*
  store i32 %14380, i32* %14384
  store %struct.Memory* %loadMem_40b7ba, %struct.Memory** %MEMORY
  %loadMem_40b7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14386 = getelementptr inbounds %struct.GPR, %struct.GPR* %14385, i32 0, i32 33
  %14387 = getelementptr inbounds %struct.Reg, %struct.Reg* %14386, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %14387 to i64*
  %14388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14389 = getelementptr inbounds %struct.GPR, %struct.GPR* %14388, i32 0, i32 15
  %14390 = getelementptr inbounds %struct.Reg, %struct.Reg* %14389, i32 0, i32 0
  %RBP.i711 = bitcast %union.anon* %14390 to i64*
  %14391 = load i64, i64* %RBP.i711
  %14392 = sub i64 %14391, 140
  %14393 = load i64, i64* %PC.i710
  %14394 = add i64 %14393, 7
  store i64 %14394, i64* %PC.i710
  %14395 = inttoptr i64 %14392 to i32*
  %14396 = load i32, i32* %14395
  %14397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14397, align 1
  %14398 = and i32 %14396, 255
  %14399 = call i32 @llvm.ctpop.i32(i32 %14398)
  %14400 = trunc i32 %14399 to i8
  %14401 = and i8 %14400, 1
  %14402 = xor i8 %14401, 1
  %14403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14402, i8* %14403, align 1
  %14404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14404, align 1
  %14405 = icmp eq i32 %14396, 0
  %14406 = zext i1 %14405 to i8
  %14407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14406, i8* %14407, align 1
  %14408 = lshr i32 %14396, 31
  %14409 = trunc i32 %14408 to i8
  %14410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14409, i8* %14410, align 1
  %14411 = lshr i32 %14396, 31
  %14412 = xor i32 %14408, %14411
  %14413 = add i32 %14412, %14411
  %14414 = icmp eq i32 %14413, 2
  %14415 = zext i1 %14414 to i8
  %14416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14415, i8* %14416, align 1
  store %struct.Memory* %loadMem_40b7bd, %struct.Memory** %MEMORY
  %loadMem_40b7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14418 = getelementptr inbounds %struct.GPR, %struct.GPR* %14417, i32 0, i32 33
  %14419 = getelementptr inbounds %struct.Reg, %struct.Reg* %14418, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %14419 to i64*
  %14420 = load i64, i64* %PC.i709
  %14421 = add i64 %14420, 17
  %14422 = load i64, i64* %PC.i709
  %14423 = add i64 %14422, 6
  %14424 = load i64, i64* %PC.i709
  %14425 = add i64 %14424, 6
  store i64 %14425, i64* %PC.i709
  %14426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14427 = load i8, i8* %14426, align 1
  store i8 %14427, i8* %BRANCH_TAKEN, align 1
  %14428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14429 = icmp ne i8 %14427, 0
  %14430 = select i1 %14429, i64 %14421, i64 %14423
  store i64 %14430, i64* %14428, align 8
  store %struct.Memory* %loadMem_40b7c4, %struct.Memory** %MEMORY
  %loadBr_40b7c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b7c4 = icmp eq i8 %loadBr_40b7c4, 1
  br i1 %cmpBr_40b7c4, label %block_.L_40b7d5, label %block_40b7ca

block_40b7ca:                                     ; preds = %block_.L_40b73d
  %loadMem_40b7ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %14431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14432 = getelementptr inbounds %struct.GPR, %struct.GPR* %14431, i32 0, i32 33
  %14433 = getelementptr inbounds %struct.Reg, %struct.Reg* %14432, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %14433 to i64*
  %14434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14435 = getelementptr inbounds %struct.GPR, %struct.GPR* %14434, i32 0, i32 1
  %14436 = getelementptr inbounds %struct.Reg, %struct.Reg* %14435, i32 0, i32 0
  %RAX.i707 = bitcast %union.anon* %14436 to i64*
  %14437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14438 = getelementptr inbounds %struct.GPR, %struct.GPR* %14437, i32 0, i32 15
  %14439 = getelementptr inbounds %struct.Reg, %struct.Reg* %14438, i32 0, i32 0
  %RBP.i708 = bitcast %union.anon* %14439 to i64*
  %14440 = load i64, i64* %RBP.i708
  %14441 = sub i64 %14440, 72
  %14442 = load i64, i64* %PC.i706
  %14443 = add i64 %14442, 3
  store i64 %14443, i64* %PC.i706
  %14444 = inttoptr i64 %14441 to i32*
  %14445 = load i32, i32* %14444
  %14446 = zext i32 %14445 to i64
  store i64 %14446, i64* %RAX.i707, align 8
  store %struct.Memory* %loadMem_40b7ca, %struct.Memory** %MEMORY
  %loadMem_40b7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14448 = getelementptr inbounds %struct.GPR, %struct.GPR* %14447, i32 0, i32 33
  %14449 = getelementptr inbounds %struct.Reg, %struct.Reg* %14448, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %14449 to i64*
  %14450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14451 = getelementptr inbounds %struct.GPR, %struct.GPR* %14450, i32 0, i32 1
  %14452 = getelementptr inbounds %struct.Reg, %struct.Reg* %14451, i32 0, i32 0
  %EAX.i704 = bitcast %union.anon* %14452 to i32*
  %14453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14454 = getelementptr inbounds %struct.GPR, %struct.GPR* %14453, i32 0, i32 15
  %14455 = getelementptr inbounds %struct.Reg, %struct.Reg* %14454, i32 0, i32 0
  %RBP.i705 = bitcast %union.anon* %14455 to i64*
  %14456 = load i64, i64* %RBP.i705
  %14457 = sub i64 %14456, 32
  %14458 = load i32, i32* %EAX.i704
  %14459 = zext i32 %14458 to i64
  %14460 = load i64, i64* %PC.i703
  %14461 = add i64 %14460, 3
  store i64 %14461, i64* %PC.i703
  %14462 = inttoptr i64 %14457 to i32*
  store i32 %14458, i32* %14462
  store %struct.Memory* %loadMem_40b7cd, %struct.Memory** %MEMORY
  %loadMem_40b7d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14464 = getelementptr inbounds %struct.GPR, %struct.GPR* %14463, i32 0, i32 33
  %14465 = getelementptr inbounds %struct.Reg, %struct.Reg* %14464, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %14465 to i64*
  %14466 = load i64, i64* %PC.i702
  %14467 = add i64 %14466, 432
  %14468 = load i64, i64* %PC.i702
  %14469 = add i64 %14468, 5
  store i64 %14469, i64* %PC.i702
  %14470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14467, i64* %14470, align 8
  store %struct.Memory* %loadMem_40b7d0, %struct.Memory** %MEMORY
  br label %block_.L_40b980

block_.L_40b7d5:                                  ; preds = %block_.L_40b73d
  %loadMem_40b7d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14472 = getelementptr inbounds %struct.GPR, %struct.GPR* %14471, i32 0, i32 33
  %14473 = getelementptr inbounds %struct.Reg, %struct.Reg* %14472, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %14473 to i64*
  %14474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14475 = getelementptr inbounds %struct.GPR, %struct.GPR* %14474, i32 0, i32 15
  %14476 = getelementptr inbounds %struct.Reg, %struct.Reg* %14475, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %14476 to i64*
  %14477 = load i64, i64* %RBP.i701
  %14478 = sub i64 %14477, 104
  %14479 = load i64, i64* %PC.i700
  %14480 = add i64 %14479, 4
  store i64 %14480, i64* %PC.i700
  %14481 = inttoptr i64 %14478 to i32*
  %14482 = load i32, i32* %14481
  %14483 = sub i32 %14482, 4
  %14484 = icmp ult i32 %14482, 4
  %14485 = zext i1 %14484 to i8
  %14486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14485, i8* %14486, align 1
  %14487 = and i32 %14483, 255
  %14488 = call i32 @llvm.ctpop.i32(i32 %14487)
  %14489 = trunc i32 %14488 to i8
  %14490 = and i8 %14489, 1
  %14491 = xor i8 %14490, 1
  %14492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14491, i8* %14492, align 1
  %14493 = xor i32 %14482, 4
  %14494 = xor i32 %14493, %14483
  %14495 = lshr i32 %14494, 4
  %14496 = trunc i32 %14495 to i8
  %14497 = and i8 %14496, 1
  %14498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14497, i8* %14498, align 1
  %14499 = icmp eq i32 %14483, 0
  %14500 = zext i1 %14499 to i8
  %14501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14500, i8* %14501, align 1
  %14502 = lshr i32 %14483, 31
  %14503 = trunc i32 %14502 to i8
  %14504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14503, i8* %14504, align 1
  %14505 = lshr i32 %14482, 31
  %14506 = xor i32 %14502, %14505
  %14507 = add i32 %14506, %14505
  %14508 = icmp eq i32 %14507, 2
  %14509 = zext i1 %14508 to i8
  %14510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14509, i8* %14510, align 1
  store %struct.Memory* %loadMem_40b7d5, %struct.Memory** %MEMORY
  %loadMem_40b7d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14512 = getelementptr inbounds %struct.GPR, %struct.GPR* %14511, i32 0, i32 33
  %14513 = getelementptr inbounds %struct.Reg, %struct.Reg* %14512, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %14513 to i64*
  %14514 = load i64, i64* %PC.i699
  %14515 = add i64 %14514, 234
  %14516 = load i64, i64* %PC.i699
  %14517 = add i64 %14516, 6
  %14518 = load i64, i64* %PC.i699
  %14519 = add i64 %14518, 6
  store i64 %14519, i64* %PC.i699
  %14520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14521 = load i8, i8* %14520, align 1
  %14522 = icmp ne i8 %14521, 0
  %14523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14524 = load i8, i8* %14523, align 1
  %14525 = icmp ne i8 %14524, 0
  %14526 = xor i1 %14522, %14525
  %14527 = xor i1 %14526, true
  %14528 = zext i1 %14527 to i8
  store i8 %14528, i8* %BRANCH_TAKEN, align 1
  %14529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14530 = select i1 %14526, i64 %14517, i64 %14515
  store i64 %14530, i64* %14529, align 8
  store %struct.Memory* %loadMem_40b7d9, %struct.Memory** %MEMORY
  %loadBr_40b7d9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b7d9 = icmp eq i8 %loadBr_40b7d9, 1
  br i1 %cmpBr_40b7d9, label %block_.L_40b8c3, label %block_40b7df

block_40b7df:                                     ; preds = %block_.L_40b7d5
  %loadMem_40b7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %14531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14532 = getelementptr inbounds %struct.GPR, %struct.GPR* %14531, i32 0, i32 33
  %14533 = getelementptr inbounds %struct.Reg, %struct.Reg* %14532, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %14533 to i64*
  %14534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14535 = getelementptr inbounds %struct.GPR, %struct.GPR* %14534, i32 0, i32 15
  %14536 = getelementptr inbounds %struct.Reg, %struct.Reg* %14535, i32 0, i32 0
  %RBP.i698 = bitcast %union.anon* %14536 to i64*
  %14537 = load i64, i64* %RBP.i698
  %14538 = sub i64 %14537, 100
  %14539 = load i64, i64* %PC.i697
  %14540 = add i64 %14539, 4
  store i64 %14540, i64* %PC.i697
  %14541 = inttoptr i64 %14538 to i32*
  %14542 = load i32, i32* %14541
  %14543 = sub i32 %14542, 1
  %14544 = icmp ult i32 %14542, 1
  %14545 = zext i1 %14544 to i8
  %14546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14545, i8* %14546, align 1
  %14547 = and i32 %14543, 255
  %14548 = call i32 @llvm.ctpop.i32(i32 %14547)
  %14549 = trunc i32 %14548 to i8
  %14550 = and i8 %14549, 1
  %14551 = xor i8 %14550, 1
  %14552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14551, i8* %14552, align 1
  %14553 = xor i32 %14542, 1
  %14554 = xor i32 %14553, %14543
  %14555 = lshr i32 %14554, 4
  %14556 = trunc i32 %14555 to i8
  %14557 = and i8 %14556, 1
  %14558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14557, i8* %14558, align 1
  %14559 = icmp eq i32 %14543, 0
  %14560 = zext i1 %14559 to i8
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14560, i8* %14561, align 1
  %14562 = lshr i32 %14543, 31
  %14563 = trunc i32 %14562 to i8
  %14564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14563, i8* %14564, align 1
  %14565 = lshr i32 %14542, 31
  %14566 = xor i32 %14562, %14565
  %14567 = add i32 %14566, %14565
  %14568 = icmp eq i32 %14567, 2
  %14569 = zext i1 %14568 to i8
  %14570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14569, i8* %14570, align 1
  store %struct.Memory* %loadMem_40b7df, %struct.Memory** %MEMORY
  %loadMem_40b7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14572 = getelementptr inbounds %struct.GPR, %struct.GPR* %14571, i32 0, i32 33
  %14573 = getelementptr inbounds %struct.Reg, %struct.Reg* %14572, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %14573 to i64*
  %14574 = load i64, i64* %PC.i696
  %14575 = add i64 %14574, 115
  %14576 = load i64, i64* %PC.i696
  %14577 = add i64 %14576, 6
  %14578 = load i64, i64* %PC.i696
  %14579 = add i64 %14578, 6
  store i64 %14579, i64* %PC.i696
  %14580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14581 = load i8, i8* %14580, align 1
  %14582 = icmp eq i8 %14581, 0
  %14583 = zext i1 %14582 to i8
  store i8 %14583, i8* %BRANCH_TAKEN, align 1
  %14584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14585 = select i1 %14582, i64 %14575, i64 %14577
  store i64 %14585, i64* %14584, align 8
  store %struct.Memory* %loadMem_40b7e3, %struct.Memory** %MEMORY
  %loadBr_40b7e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b7e3 = icmp eq i8 %loadBr_40b7e3, 1
  br i1 %cmpBr_40b7e3, label %block_.L_40b856, label %block_40b7e9

block_40b7e9:                                     ; preds = %block_40b7df
  %loadMem_40b7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14587 = getelementptr inbounds %struct.GPR, %struct.GPR* %14586, i32 0, i32 33
  %14588 = getelementptr inbounds %struct.Reg, %struct.Reg* %14587, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %14588 to i64*
  %14589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14590 = getelementptr inbounds %struct.GPR, %struct.GPR* %14589, i32 0, i32 1
  %14591 = getelementptr inbounds %struct.Reg, %struct.Reg* %14590, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %14591 to i64*
  %14592 = load i64, i64* %PC.i694
  %14593 = add i64 %14592, 5
  store i64 %14593, i64* %PC.i694
  store i64 4, i64* %RAX.i695, align 8
  store %struct.Memory* %loadMem_40b7e9, %struct.Memory** %MEMORY
  %loadMem_40b7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %14594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14595 = getelementptr inbounds %struct.GPR, %struct.GPR* %14594, i32 0, i32 33
  %14596 = getelementptr inbounds %struct.Reg, %struct.Reg* %14595, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %14596 to i64*
  %14597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14598 = getelementptr inbounds %struct.GPR, %struct.GPR* %14597, i32 0, i32 5
  %14599 = getelementptr inbounds %struct.Reg, %struct.Reg* %14598, i32 0, i32 0
  %RCX.i693 = bitcast %union.anon* %14599 to i64*
  %14600 = load i64, i64* %PC.i692
  %14601 = add i64 %14600, 5
  store i64 %14601, i64* %PC.i692
  store i64 1, i64* %RCX.i693, align 8
  store %struct.Memory* %loadMem_40b7ee, %struct.Memory** %MEMORY
  %loadMem_40b7f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14603 = getelementptr inbounds %struct.GPR, %struct.GPR* %14602, i32 0, i32 33
  %14604 = getelementptr inbounds %struct.Reg, %struct.Reg* %14603, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %14604 to i64*
  %14605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14606 = getelementptr inbounds %struct.GPR, %struct.GPR* %14605, i32 0, i32 7
  %14607 = getelementptr inbounds %struct.Reg, %struct.Reg* %14606, i32 0, i32 0
  %RDX.i691 = bitcast %union.anon* %14607 to i64*
  %14608 = load i64, i64* %PC.i690
  %14609 = add i64 %14608, 5
  store i64 %14609, i64* %PC.i690
  store i64 3, i64* %RDX.i691, align 8
  store %struct.Memory* %loadMem_40b7f3, %struct.Memory** %MEMORY
  %loadMem_40b7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14611 = getelementptr inbounds %struct.GPR, %struct.GPR* %14610, i32 0, i32 33
  %14612 = getelementptr inbounds %struct.Reg, %struct.Reg* %14611, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %14612 to i64*
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14614 = getelementptr inbounds %struct.GPR, %struct.GPR* %14613, i32 0, i32 9
  %14615 = getelementptr inbounds %struct.Reg, %struct.Reg* %14614, i32 0, i32 0
  %RSI.i689 = bitcast %union.anon* %14615 to i64*
  %14616 = load i64, i64* %PC.i688
  %14617 = add i64 %14616, 10
  store i64 %14617, i64* %PC.i688
  store i64 ptrtoint (%G__0x70d1b0_type* @G__0x70d1b0 to i64), i64* %RSI.i689, align 8
  store %struct.Memory* %loadMem_40b7f8, %struct.Memory** %MEMORY
  %loadMem_40b802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14619 = getelementptr inbounds %struct.GPR, %struct.GPR* %14618, i32 0, i32 33
  %14620 = getelementptr inbounds %struct.Reg, %struct.Reg* %14619, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %14620 to i64*
  %14621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14622 = getelementptr inbounds %struct.GPR, %struct.GPR* %14621, i32 0, i32 11
  %14623 = getelementptr inbounds %struct.Reg, %struct.Reg* %14622, i32 0, i32 0
  %RDI.i686 = bitcast %union.anon* %14623 to i64*
  %14624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14625 = getelementptr inbounds %struct.GPR, %struct.GPR* %14624, i32 0, i32 15
  %14626 = getelementptr inbounds %struct.Reg, %struct.Reg* %14625, i32 0, i32 0
  %RBP.i687 = bitcast %union.anon* %14626 to i64*
  %14627 = load i64, i64* %RBP.i687
  %14628 = sub i64 %14627, 72
  %14629 = load i64, i64* %PC.i685
  %14630 = add i64 %14629, 3
  store i64 %14630, i64* %PC.i685
  %14631 = inttoptr i64 %14628 to i32*
  %14632 = load i32, i32* %14631
  %14633 = zext i32 %14632 to i64
  store i64 %14633, i64* %RDI.i686, align 8
  store %struct.Memory* %loadMem_40b802, %struct.Memory** %MEMORY
  %loadMem_40b805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14635 = getelementptr inbounds %struct.GPR, %struct.GPR* %14634, i32 0, i32 33
  %14636 = getelementptr inbounds %struct.Reg, %struct.Reg* %14635, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %14636 to i64*
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14638 = getelementptr inbounds %struct.GPR, %struct.GPR* %14637, i32 0, i32 15
  %14639 = getelementptr inbounds %struct.Reg, %struct.Reg* %14638, i32 0, i32 0
  %RBP.i683 = bitcast %union.anon* %14639 to i64*
  %14640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14641 = getelementptr inbounds %struct.GPR, %struct.GPR* %14640, i32 0, i32 17
  %14642 = getelementptr inbounds %struct.Reg, %struct.Reg* %14641, i32 0, i32 0
  %R8.i684 = bitcast %union.anon* %14642 to i64*
  %14643 = load i64, i64* %RBP.i683
  %14644 = sub i64 %14643, 4
  %14645 = load i64, i64* %PC.i682
  %14646 = add i64 %14645, 4
  store i64 %14646, i64* %PC.i682
  %14647 = inttoptr i64 %14644 to i32*
  %14648 = load i32, i32* %14647
  %14649 = sext i32 %14648 to i64
  store i64 %14649, i64* %R8.i684, align 8
  store %struct.Memory* %loadMem_40b805, %struct.Memory** %MEMORY
  %loadMem_40b809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14651 = getelementptr inbounds %struct.GPR, %struct.GPR* %14650, i32 0, i32 33
  %14652 = getelementptr inbounds %struct.Reg, %struct.Reg* %14651, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %14652 to i64*
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14654 = getelementptr inbounds %struct.GPR, %struct.GPR* %14653, i32 0, i32 17
  %14655 = getelementptr inbounds %struct.Reg, %struct.Reg* %14654, i32 0, i32 0
  %R8.i681 = bitcast %union.anon* %14655 to i64*
  %14656 = load i64, i64* %R8.i681
  %14657 = load i64, i64* %PC.i680
  %14658 = add i64 %14657, 7
  store i64 %14658, i64* %PC.i680
  %14659 = sext i64 %14656 to i128
  %14660 = and i128 %14659, -18446744073709551616
  %14661 = zext i64 %14656 to i128
  %14662 = or i128 %14660, %14661
  %14663 = mul i128 384, %14662
  %14664 = trunc i128 %14663 to i64
  store i64 %14664, i64* %R8.i681, align 8
  %14665 = sext i64 %14664 to i128
  %14666 = icmp ne i128 %14665, %14663
  %14667 = zext i1 %14666 to i8
  %14668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14667, i8* %14668, align 1
  %14669 = trunc i128 %14663 to i32
  %14670 = and i32 %14669, 255
  %14671 = call i32 @llvm.ctpop.i32(i32 %14670)
  %14672 = trunc i32 %14671 to i8
  %14673 = and i8 %14672, 1
  %14674 = xor i8 %14673, 1
  %14675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14674, i8* %14675, align 1
  %14676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14676, align 1
  %14677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14677, align 1
  %14678 = lshr i64 %14664, 63
  %14679 = trunc i64 %14678 to i8
  %14680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14679, i8* %14680, align 1
  %14681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14667, i8* %14681, align 1
  store %struct.Memory* %loadMem_40b809, %struct.Memory** %MEMORY
  %loadMem_40b810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14683 = getelementptr inbounds %struct.GPR, %struct.GPR* %14682, i32 0, i32 33
  %14684 = getelementptr inbounds %struct.Reg, %struct.Reg* %14683, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %14684 to i64*
  %14685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14686 = getelementptr inbounds %struct.GPR, %struct.GPR* %14685, i32 0, i32 9
  %14687 = getelementptr inbounds %struct.Reg, %struct.Reg* %14686, i32 0, i32 0
  %RSI.i678 = bitcast %union.anon* %14687 to i64*
  %14688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14689 = getelementptr inbounds %struct.GPR, %struct.GPR* %14688, i32 0, i32 17
  %14690 = getelementptr inbounds %struct.Reg, %struct.Reg* %14689, i32 0, i32 0
  %R8.i679 = bitcast %union.anon* %14690 to i64*
  %14691 = load i64, i64* %RSI.i678
  %14692 = load i64, i64* %R8.i679
  %14693 = load i64, i64* %PC.i677
  %14694 = add i64 %14693, 3
  store i64 %14694, i64* %PC.i677
  %14695 = add i64 %14692, %14691
  store i64 %14695, i64* %RSI.i678, align 8
  %14696 = icmp ult i64 %14695, %14691
  %14697 = icmp ult i64 %14695, %14692
  %14698 = or i1 %14696, %14697
  %14699 = zext i1 %14698 to i8
  %14700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14699, i8* %14700, align 1
  %14701 = trunc i64 %14695 to i32
  %14702 = and i32 %14701, 255
  %14703 = call i32 @llvm.ctpop.i32(i32 %14702)
  %14704 = trunc i32 %14703 to i8
  %14705 = and i8 %14704, 1
  %14706 = xor i8 %14705, 1
  %14707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14706, i8* %14707, align 1
  %14708 = xor i64 %14692, %14691
  %14709 = xor i64 %14708, %14695
  %14710 = lshr i64 %14709, 4
  %14711 = trunc i64 %14710 to i8
  %14712 = and i8 %14711, 1
  %14713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14712, i8* %14713, align 1
  %14714 = icmp eq i64 %14695, 0
  %14715 = zext i1 %14714 to i8
  %14716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14715, i8* %14716, align 1
  %14717 = lshr i64 %14695, 63
  %14718 = trunc i64 %14717 to i8
  %14719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14718, i8* %14719, align 1
  %14720 = lshr i64 %14691, 63
  %14721 = lshr i64 %14692, 63
  %14722 = xor i64 %14717, %14720
  %14723 = xor i64 %14717, %14721
  %14724 = add i64 %14722, %14723
  %14725 = icmp eq i64 %14724, 2
  %14726 = zext i1 %14725 to i8
  %14727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14726, i8* %14727, align 1
  store %struct.Memory* %loadMem_40b810, %struct.Memory** %MEMORY
  %loadMem_40b813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14729 = getelementptr inbounds %struct.GPR, %struct.GPR* %14728, i32 0, i32 33
  %14730 = getelementptr inbounds %struct.Reg, %struct.Reg* %14729, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %14730 to i64*
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14732 = getelementptr inbounds %struct.GPR, %struct.GPR* %14731, i32 0, i32 15
  %14733 = getelementptr inbounds %struct.Reg, %struct.Reg* %14732, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %14733 to i64*
  %14734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14735 = getelementptr inbounds %struct.GPR, %struct.GPR* %14734, i32 0, i32 17
  %14736 = getelementptr inbounds %struct.Reg, %struct.Reg* %14735, i32 0, i32 0
  %R8.i676 = bitcast %union.anon* %14736 to i64*
  %14737 = load i64, i64* %RBP.i675
  %14738 = sub i64 %14737, 108
  %14739 = load i64, i64* %PC.i674
  %14740 = add i64 %14739, 4
  store i64 %14740, i64* %PC.i674
  %14741 = inttoptr i64 %14738 to i32*
  %14742 = load i32, i32* %14741
  %14743 = sext i32 %14742 to i64
  store i64 %14743, i64* %R8.i676, align 8
  store %struct.Memory* %loadMem_40b813, %struct.Memory** %MEMORY
  %loadMem_40b817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14745 = getelementptr inbounds %struct.GPR, %struct.GPR* %14744, i32 0, i32 33
  %14746 = getelementptr inbounds %struct.Reg, %struct.Reg* %14745, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %14746 to i64*
  %14747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14748 = getelementptr inbounds %struct.GPR, %struct.GPR* %14747, i32 0, i32 17
  %14749 = getelementptr inbounds %struct.Reg, %struct.Reg* %14748, i32 0, i32 0
  %R8.i673 = bitcast %union.anon* %14749 to i64*
  %14750 = load i64, i64* %R8.i673
  %14751 = load i64, i64* %PC.i672
  %14752 = add i64 %14751, 4
  store i64 %14752, i64* %PC.i672
  %14753 = shl i64 %14750, 5
  %14754 = icmp slt i64 %14753, 0
  %14755 = shl i64 %14753, 1
  store i64 %14755, i64* %R8.i673, align 8
  %14756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14757 = zext i1 %14754 to i8
  store i8 %14757, i8* %14756, align 1
  %14758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14759 = trunc i64 %14755 to i32
  %14760 = and i32 %14759, 254
  %14761 = call i32 @llvm.ctpop.i32(i32 %14760)
  %14762 = trunc i32 %14761 to i8
  %14763 = and i8 %14762, 1
  %14764 = xor i8 %14763, 1
  store i8 %14764, i8* %14758, align 1
  %14765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14765, align 1
  %14766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14767 = icmp eq i64 %14755, 0
  %14768 = zext i1 %14767 to i8
  store i8 %14768, i8* %14766, align 1
  %14769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14770 = lshr i64 %14755, 63
  %14771 = trunc i64 %14770 to i8
  store i8 %14771, i8* %14769, align 1
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14772, align 1
  store %struct.Memory* %loadMem_40b817, %struct.Memory** %MEMORY
  %loadMem_40b81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14774 = getelementptr inbounds %struct.GPR, %struct.GPR* %14773, i32 0, i32 33
  %14775 = getelementptr inbounds %struct.Reg, %struct.Reg* %14774, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %14775 to i64*
  %14776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14777 = getelementptr inbounds %struct.GPR, %struct.GPR* %14776, i32 0, i32 9
  %14778 = getelementptr inbounds %struct.Reg, %struct.Reg* %14777, i32 0, i32 0
  %RSI.i670 = bitcast %union.anon* %14778 to i64*
  %14779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14780 = getelementptr inbounds %struct.GPR, %struct.GPR* %14779, i32 0, i32 17
  %14781 = getelementptr inbounds %struct.Reg, %struct.Reg* %14780, i32 0, i32 0
  %R8.i671 = bitcast %union.anon* %14781 to i64*
  %14782 = load i64, i64* %RSI.i670
  %14783 = load i64, i64* %R8.i671
  %14784 = load i64, i64* %PC.i669
  %14785 = add i64 %14784, 3
  store i64 %14785, i64* %PC.i669
  %14786 = add i64 %14783, %14782
  store i64 %14786, i64* %RSI.i670, align 8
  %14787 = icmp ult i64 %14786, %14782
  %14788 = icmp ult i64 %14786, %14783
  %14789 = or i1 %14787, %14788
  %14790 = zext i1 %14789 to i8
  %14791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14790, i8* %14791, align 1
  %14792 = trunc i64 %14786 to i32
  %14793 = and i32 %14792, 255
  %14794 = call i32 @llvm.ctpop.i32(i32 %14793)
  %14795 = trunc i32 %14794 to i8
  %14796 = and i8 %14795, 1
  %14797 = xor i8 %14796, 1
  %14798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14797, i8* %14798, align 1
  %14799 = xor i64 %14783, %14782
  %14800 = xor i64 %14799, %14786
  %14801 = lshr i64 %14800, 4
  %14802 = trunc i64 %14801 to i8
  %14803 = and i8 %14802, 1
  %14804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14803, i8* %14804, align 1
  %14805 = icmp eq i64 %14786, 0
  %14806 = zext i1 %14805 to i8
  %14807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14806, i8* %14807, align 1
  %14808 = lshr i64 %14786, 63
  %14809 = trunc i64 %14808 to i8
  %14810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14809, i8* %14810, align 1
  %14811 = lshr i64 %14782, 63
  %14812 = lshr i64 %14783, 63
  %14813 = xor i64 %14808, %14811
  %14814 = xor i64 %14808, %14812
  %14815 = add i64 %14813, %14814
  %14816 = icmp eq i64 %14815, 2
  %14817 = zext i1 %14816 to i8
  %14818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14817, i8* %14818, align 1
  store %struct.Memory* %loadMem_40b81b, %struct.Memory** %MEMORY
  %loadMem_40b81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14820 = getelementptr inbounds %struct.GPR, %struct.GPR* %14819, i32 0, i32 33
  %14821 = getelementptr inbounds %struct.Reg, %struct.Reg* %14820, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %14821 to i64*
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14823 = getelementptr inbounds %struct.GPR, %struct.GPR* %14822, i32 0, i32 15
  %14824 = getelementptr inbounds %struct.Reg, %struct.Reg* %14823, i32 0, i32 0
  %RBP.i667 = bitcast %union.anon* %14824 to i64*
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14826 = getelementptr inbounds %struct.GPR, %struct.GPR* %14825, i32 0, i32 17
  %14827 = getelementptr inbounds %struct.Reg, %struct.Reg* %14826, i32 0, i32 0
  %R8.i668 = bitcast %union.anon* %14827 to i64*
  %14828 = load i64, i64* %RBP.i667
  %14829 = sub i64 %14828, 16
  %14830 = load i64, i64* %PC.i666
  %14831 = add i64 %14830, 4
  store i64 %14831, i64* %PC.i666
  %14832 = inttoptr i64 %14829 to i32*
  %14833 = load i32, i32* %14832
  %14834 = sext i32 %14833 to i64
  store i64 %14834, i64* %R8.i668, align 8
  store %struct.Memory* %loadMem_40b81e, %struct.Memory** %MEMORY
  %loadMem_40b822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14836 = getelementptr inbounds %struct.GPR, %struct.GPR* %14835, i32 0, i32 33
  %14837 = getelementptr inbounds %struct.Reg, %struct.Reg* %14836, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %14837 to i64*
  %14838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14839 = getelementptr inbounds %struct.GPR, %struct.GPR* %14838, i32 0, i32 17
  %14840 = getelementptr inbounds %struct.Reg, %struct.Reg* %14839, i32 0, i32 0
  %R8.i665 = bitcast %union.anon* %14840 to i64*
  %14841 = load i64, i64* %R8.i665
  %14842 = load i64, i64* %PC.i664
  %14843 = add i64 %14842, 4
  store i64 %14843, i64* %PC.i664
  %14844 = shl i64 %14841, 3
  %14845 = icmp slt i64 %14844, 0
  %14846 = shl i64 %14844, 1
  store i64 %14846, i64* %R8.i665, align 8
  %14847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14848 = zext i1 %14845 to i8
  store i8 %14848, i8* %14847, align 1
  %14849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14850 = trunc i64 %14846 to i32
  %14851 = and i32 %14850, 254
  %14852 = call i32 @llvm.ctpop.i32(i32 %14851)
  %14853 = trunc i32 %14852 to i8
  %14854 = and i8 %14853, 1
  %14855 = xor i8 %14854, 1
  store i8 %14855, i8* %14849, align 1
  %14856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14856, align 1
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14858 = icmp eq i64 %14846, 0
  %14859 = zext i1 %14858 to i8
  store i8 %14859, i8* %14857, align 1
  %14860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14861 = lshr i64 %14846, 63
  %14862 = trunc i64 %14861 to i8
  store i8 %14862, i8* %14860, align 1
  %14863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14863, align 1
  store %struct.Memory* %loadMem_40b822, %struct.Memory** %MEMORY
  %loadMem_40b826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14865 = getelementptr inbounds %struct.GPR, %struct.GPR* %14864, i32 0, i32 33
  %14866 = getelementptr inbounds %struct.Reg, %struct.Reg* %14865, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %14866 to i64*
  %14867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14868 = getelementptr inbounds %struct.GPR, %struct.GPR* %14867, i32 0, i32 9
  %14869 = getelementptr inbounds %struct.Reg, %struct.Reg* %14868, i32 0, i32 0
  %RSI.i662 = bitcast %union.anon* %14869 to i64*
  %14870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14871 = getelementptr inbounds %struct.GPR, %struct.GPR* %14870, i32 0, i32 17
  %14872 = getelementptr inbounds %struct.Reg, %struct.Reg* %14871, i32 0, i32 0
  %R8.i663 = bitcast %union.anon* %14872 to i64*
  %14873 = load i64, i64* %RSI.i662
  %14874 = load i64, i64* %R8.i663
  %14875 = load i64, i64* %PC.i661
  %14876 = add i64 %14875, 3
  store i64 %14876, i64* %PC.i661
  %14877 = add i64 %14874, %14873
  store i64 %14877, i64* %RSI.i662, align 8
  %14878 = icmp ult i64 %14877, %14873
  %14879 = icmp ult i64 %14877, %14874
  %14880 = or i1 %14878, %14879
  %14881 = zext i1 %14880 to i8
  %14882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14881, i8* %14882, align 1
  %14883 = trunc i64 %14877 to i32
  %14884 = and i32 %14883, 255
  %14885 = call i32 @llvm.ctpop.i32(i32 %14884)
  %14886 = trunc i32 %14885 to i8
  %14887 = and i8 %14886, 1
  %14888 = xor i8 %14887, 1
  %14889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14888, i8* %14889, align 1
  %14890 = xor i64 %14874, %14873
  %14891 = xor i64 %14890, %14877
  %14892 = lshr i64 %14891, 4
  %14893 = trunc i64 %14892 to i8
  %14894 = and i8 %14893, 1
  %14895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14894, i8* %14895, align 1
  %14896 = icmp eq i64 %14877, 0
  %14897 = zext i1 %14896 to i8
  %14898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14897, i8* %14898, align 1
  %14899 = lshr i64 %14877, 63
  %14900 = trunc i64 %14899 to i8
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14900, i8* %14901, align 1
  %14902 = lshr i64 %14873, 63
  %14903 = lshr i64 %14874, 63
  %14904 = xor i64 %14899, %14902
  %14905 = xor i64 %14899, %14903
  %14906 = add i64 %14904, %14905
  %14907 = icmp eq i64 %14906, 2
  %14908 = zext i1 %14907 to i8
  %14909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14908, i8* %14909, align 1
  store %struct.Memory* %loadMem_40b826, %struct.Memory** %MEMORY
  %loadMem_40b829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14911 = getelementptr inbounds %struct.GPR, %struct.GPR* %14910, i32 0, i32 33
  %14912 = getelementptr inbounds %struct.Reg, %struct.Reg* %14911, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %14912 to i64*
  %14913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14914 = getelementptr inbounds %struct.GPR, %struct.GPR* %14913, i32 0, i32 15
  %14915 = getelementptr inbounds %struct.Reg, %struct.Reg* %14914, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %14915 to i64*
  %14916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14917 = getelementptr inbounds %struct.GPR, %struct.GPR* %14916, i32 0, i32 17
  %14918 = getelementptr inbounds %struct.Reg, %struct.Reg* %14917, i32 0, i32 0
  %R8.i660 = bitcast %union.anon* %14918 to i64*
  %14919 = load i64, i64* %RBP.i659
  %14920 = sub i64 %14919, 20
  %14921 = load i64, i64* %PC.i658
  %14922 = add i64 %14921, 4
  store i64 %14922, i64* %PC.i658
  %14923 = inttoptr i64 %14920 to i32*
  %14924 = load i32, i32* %14923
  %14925 = sext i32 %14924 to i64
  store i64 %14925, i64* %R8.i660, align 8
  store %struct.Memory* %loadMem_40b829, %struct.Memory** %MEMORY
  %loadMem_40b82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14927 = getelementptr inbounds %struct.GPR, %struct.GPR* %14926, i32 0, i32 33
  %14928 = getelementptr inbounds %struct.Reg, %struct.Reg* %14927, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %14928 to i64*
  %14929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14930 = getelementptr inbounds %struct.GPR, %struct.GPR* %14929, i32 0, i32 9
  %14931 = getelementptr inbounds %struct.Reg, %struct.Reg* %14930, i32 0, i32 0
  %RSI.i655 = bitcast %union.anon* %14931 to i64*
  %14932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14933 = getelementptr inbounds %struct.GPR, %struct.GPR* %14932, i32 0, i32 11
  %14934 = getelementptr inbounds %struct.Reg, %struct.Reg* %14933, i32 0, i32 0
  %RDI.i656 = bitcast %union.anon* %14934 to i64*
  %14935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14936 = getelementptr inbounds %struct.GPR, %struct.GPR* %14935, i32 0, i32 17
  %14937 = getelementptr inbounds %struct.Reg, %struct.Reg* %14936, i32 0, i32 0
  %R8.i657 = bitcast %union.anon* %14937 to i64*
  %14938 = load i64, i64* %RDI.i656
  %14939 = load i64, i64* %RSI.i655
  %14940 = load i64, i64* %R8.i657
  %14941 = mul i64 %14940, 4
  %14942 = add i64 %14941, %14939
  %14943 = load i64, i64* %PC.i654
  %14944 = add i64 %14943, 5
  store i64 %14944, i64* %PC.i654
  %14945 = inttoptr i64 %14942 to i32*
  %14946 = load i32, i32* %14945
  %14947 = shl i64 %14938, 32
  %14948 = ashr exact i64 %14947, 32
  %14949 = sext i32 %14946 to i64
  %14950 = mul i64 %14949, %14948
  %14951 = trunc i64 %14950 to i32
  %14952 = and i64 %14950, 4294967295
  store i64 %14952, i64* %RDI.i656, align 8
  %14953 = shl i64 %14950, 32
  %14954 = ashr exact i64 %14953, 32
  %14955 = icmp ne i64 %14954, %14950
  %14956 = zext i1 %14955 to i8
  %14957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14956, i8* %14957, align 1
  %14958 = and i32 %14951, 255
  %14959 = call i32 @llvm.ctpop.i32(i32 %14958)
  %14960 = trunc i32 %14959 to i8
  %14961 = and i8 %14960, 1
  %14962 = xor i8 %14961, 1
  %14963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14962, i8* %14963, align 1
  %14964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14964, align 1
  %14965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14965, align 1
  %14966 = lshr i32 %14951, 31
  %14967 = trunc i32 %14966 to i8
  %14968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14967, i8* %14968, align 1
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14956, i8* %14969, align 1
  store %struct.Memory* %loadMem_40b82d, %struct.Memory** %MEMORY
  %loadMem_40b832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14971 = getelementptr inbounds %struct.GPR, %struct.GPR* %14970, i32 0, i32 33
  %14972 = getelementptr inbounds %struct.Reg, %struct.Reg* %14971, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %14972 to i64*
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14974 = getelementptr inbounds %struct.GPR, %struct.GPR* %14973, i32 0, i32 7
  %14975 = getelementptr inbounds %struct.Reg, %struct.Reg* %14974, i32 0, i32 0
  %RDX.i652 = bitcast %union.anon* %14975 to i64*
  %14976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14977 = getelementptr inbounds %struct.GPR, %struct.GPR* %14976, i32 0, i32 15
  %14978 = getelementptr inbounds %struct.Reg, %struct.Reg* %14977, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %14978 to i64*
  %14979 = load i64, i64* %RDX.i652
  %14980 = load i64, i64* %RBP.i653
  %14981 = sub i64 %14980, 104
  %14982 = load i64, i64* %PC.i651
  %14983 = add i64 %14982, 3
  store i64 %14983, i64* %PC.i651
  %14984 = trunc i64 %14979 to i32
  %14985 = inttoptr i64 %14981 to i32*
  %14986 = load i32, i32* %14985
  %14987 = sub i32 %14984, %14986
  %14988 = zext i32 %14987 to i64
  store i64 %14988, i64* %RDX.i652, align 8
  %14989 = icmp ult i32 %14984, %14986
  %14990 = zext i1 %14989 to i8
  %14991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14990, i8* %14991, align 1
  %14992 = and i32 %14987, 255
  %14993 = call i32 @llvm.ctpop.i32(i32 %14992)
  %14994 = trunc i32 %14993 to i8
  %14995 = and i8 %14994, 1
  %14996 = xor i8 %14995, 1
  %14997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14996, i8* %14997, align 1
  %14998 = xor i32 %14986, %14984
  %14999 = xor i32 %14998, %14987
  %15000 = lshr i32 %14999, 4
  %15001 = trunc i32 %15000 to i8
  %15002 = and i8 %15001, 1
  %15003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15002, i8* %15003, align 1
  %15004 = icmp eq i32 %14987, 0
  %15005 = zext i1 %15004 to i8
  %15006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15005, i8* %15006, align 1
  %15007 = lshr i32 %14987, 31
  %15008 = trunc i32 %15007 to i8
  %15009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15008, i8* %15009, align 1
  %15010 = lshr i32 %14984, 31
  %15011 = lshr i32 %14986, 31
  %15012 = xor i32 %15011, %15010
  %15013 = xor i32 %15007, %15010
  %15014 = add i32 %15013, %15012
  %15015 = icmp eq i32 %15014, 2
  %15016 = zext i1 %15015 to i8
  %15017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15016, i8* %15017, align 1
  store %struct.Memory* %loadMem_40b832, %struct.Memory** %MEMORY
  %loadMem_40b835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15019 = getelementptr inbounds %struct.GPR, %struct.GPR* %15018, i32 0, i32 33
  %15020 = getelementptr inbounds %struct.Reg, %struct.Reg* %15019, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %15020 to i64*
  %15021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15022 = getelementptr inbounds %struct.GPR, %struct.GPR* %15021, i32 0, i32 5
  %15023 = getelementptr inbounds %struct.Reg, %struct.Reg* %15022, i32 0, i32 0
  %ECX.i649 = bitcast %union.anon* %15023 to i32*
  %15024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15025 = getelementptr inbounds %struct.GPR, %struct.GPR* %15024, i32 0, i32 15
  %15026 = getelementptr inbounds %struct.Reg, %struct.Reg* %15025, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %15026 to i64*
  %15027 = load i64, i64* %RBP.i650
  %15028 = sub i64 %15027, 196
  %15029 = load i32, i32* %ECX.i649
  %15030 = zext i32 %15029 to i64
  %15031 = load i64, i64* %PC.i648
  %15032 = add i64 %15031, 6
  store i64 %15032, i64* %PC.i648
  %15033 = inttoptr i64 %15028 to i32*
  store i32 %15029, i32* %15033
  store %struct.Memory* %loadMem_40b835, %struct.Memory** %MEMORY
  %loadMem_40b83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15035 = getelementptr inbounds %struct.GPR, %struct.GPR* %15034, i32 0, i32 33
  %15036 = getelementptr inbounds %struct.Reg, %struct.Reg* %15035, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %15036 to i64*
  %15037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15038 = getelementptr inbounds %struct.GPR, %struct.GPR* %15037, i32 0, i32 7
  %15039 = getelementptr inbounds %struct.Reg, %struct.Reg* %15038, i32 0, i32 0
  %EDX.i646 = bitcast %union.anon* %15039 to i32*
  %15040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15041 = getelementptr inbounds %struct.GPR, %struct.GPR* %15040, i32 0, i32 5
  %15042 = getelementptr inbounds %struct.Reg, %struct.Reg* %15041, i32 0, i32 0
  %RCX.i647 = bitcast %union.anon* %15042 to i64*
  %15043 = load i32, i32* %EDX.i646
  %15044 = zext i32 %15043 to i64
  %15045 = load i64, i64* %PC.i645
  %15046 = add i64 %15045, 2
  store i64 %15046, i64* %PC.i645
  %15047 = and i64 %15044, 4294967295
  store i64 %15047, i64* %RCX.i647, align 8
  store %struct.Memory* %loadMem_40b83b, %struct.Memory** %MEMORY
  %loadMem_40b83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15049 = getelementptr inbounds %struct.GPR, %struct.GPR* %15048, i32 0, i32 33
  %15050 = getelementptr inbounds %struct.Reg, %struct.Reg* %15049, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %15050 to i64*
  %15051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15052 = getelementptr inbounds %struct.GPR, %struct.GPR* %15051, i32 0, i32 7
  %15053 = getelementptr inbounds %struct.Reg, %struct.Reg* %15052, i32 0, i32 0
  %RDX.i643 = bitcast %union.anon* %15053 to i64*
  %15054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15055 = getelementptr inbounds %struct.GPR, %struct.GPR* %15054, i32 0, i32 15
  %15056 = getelementptr inbounds %struct.Reg, %struct.Reg* %15055, i32 0, i32 0
  %RBP.i644 = bitcast %union.anon* %15056 to i64*
  %15057 = load i64, i64* %RBP.i644
  %15058 = sub i64 %15057, 196
  %15059 = load i64, i64* %PC.i642
  %15060 = add i64 %15059, 6
  store i64 %15060, i64* %PC.i642
  %15061 = inttoptr i64 %15058 to i32*
  %15062 = load i32, i32* %15061
  %15063 = zext i32 %15062 to i64
  store i64 %15063, i64* %RDX.i643, align 8
  store %struct.Memory* %loadMem_40b83d, %struct.Memory** %MEMORY
  %loadMem_40b843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15065 = getelementptr inbounds %struct.GPR, %struct.GPR* %15064, i32 0, i32 33
  %15066 = getelementptr inbounds %struct.Reg, %struct.Reg* %15065, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %15066 to i64*
  %15067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15068 = getelementptr inbounds %struct.GPR, %struct.GPR* %15067, i32 0, i32 5
  %15069 = getelementptr inbounds %struct.Reg, %struct.Reg* %15068, i32 0, i32 0
  %15070 = bitcast %union.anon* %15069 to %struct.anon.2*
  %CL.i639 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15070, i32 0, i32 0
  %15071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15072 = getelementptr inbounds %struct.GPR, %struct.GPR* %15071, i32 0, i32 7
  %15073 = getelementptr inbounds %struct.Reg, %struct.Reg* %15072, i32 0, i32 0
  %RDX.i640 = bitcast %union.anon* %15073 to i64*
  %15074 = load i64, i64* %RDX.i640
  %15075 = load i8, i8* %CL.i639
  %15076 = zext i8 %15075 to i64
  %15077 = load i64, i64* %PC.i638
  %15078 = add i64 %15077, 2
  store i64 %15078, i64* %PC.i638
  %15079 = trunc i64 %15076 to i5
  switch i5 %15079, label %15086 [
    i5 0, label %routine_shll__cl___edx.exit641
    i5 1, label %15080
  ]

; <label>:15080:                                  ; preds = %block_40b7e9
  %15081 = trunc i64 %15074 to i32
  %15082 = shl i32 %15081, 1
  %15083 = icmp slt i32 %15081, 0
  %15084 = icmp slt i32 %15082, 0
  %15085 = xor i1 %15083, %15084
  br label %15095

; <label>:15086:                                  ; preds = %block_40b7e9
  %15087 = and i64 %15076, 31
  %15088 = add i64 %15087, 4294967295
  %15089 = and i64 %15074, 4294967295
  %15090 = and i64 %15088, 4294967295
  %15091 = shl i64 %15089, %15090
  %15092 = trunc i64 %15091 to i32
  %15093 = icmp slt i32 %15092, 0
  %15094 = shl i32 %15092, 1
  br label %15095

; <label>:15095:                                  ; preds = %15086, %15080
  %15096 = phi i1 [ %15083, %15080 ], [ %15093, %15086 ]
  %15097 = phi i1 [ %15085, %15080 ], [ false, %15086 ]
  %15098 = phi i32 [ %15082, %15080 ], [ %15094, %15086 ]
  %15099 = zext i32 %15098 to i64
  store i64 %15099, i64* %RDX.i640, align 8
  %15100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15101 = zext i1 %15096 to i8
  store i8 %15101, i8* %15100, align 1
  %15102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15103 = and i32 %15098, 254
  %15104 = call i32 @llvm.ctpop.i32(i32 %15103)
  %15105 = trunc i32 %15104 to i8
  %15106 = and i8 %15105, 1
  %15107 = xor i8 %15106, 1
  store i8 %15107, i8* %15102, align 1
  %15108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15108, align 1
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15110 = icmp eq i32 %15098, 0
  %15111 = zext i1 %15110 to i8
  store i8 %15111, i8* %15109, align 1
  %15112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15113 = lshr i32 %15098, 31
  %15114 = trunc i32 %15113 to i8
  store i8 %15114, i8* %15112, align 1
  %15115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15116 = zext i1 %15097 to i8
  store i8 %15116, i8* %15115, align 1
  br label %routine_shll__cl___edx.exit641

routine_shll__cl___edx.exit641:                   ; preds = %block_40b7e9, %15095
  store %struct.Memory* %loadMem_40b843, %struct.Memory** %MEMORY
  %loadMem_40b845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15118 = getelementptr inbounds %struct.GPR, %struct.GPR* %15117, i32 0, i32 33
  %15119 = getelementptr inbounds %struct.Reg, %struct.Reg* %15118, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %15119 to i64*
  %15120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15121 = getelementptr inbounds %struct.GPR, %struct.GPR* %15120, i32 0, i32 7
  %15122 = getelementptr inbounds %struct.Reg, %struct.Reg* %15121, i32 0, i32 0
  %EDX.i636 = bitcast %union.anon* %15122 to i32*
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15124 = getelementptr inbounds %struct.GPR, %struct.GPR* %15123, i32 0, i32 11
  %15125 = getelementptr inbounds %struct.Reg, %struct.Reg* %15124, i32 0, i32 0
  %RDI.i637 = bitcast %union.anon* %15125 to i64*
  %15126 = load i64, i64* %RDI.i637
  %15127 = load i32, i32* %EDX.i636
  %15128 = zext i32 %15127 to i64
  %15129 = load i64, i64* %PC.i635
  %15130 = add i64 %15129, 2
  store i64 %15130, i64* %PC.i635
  %15131 = trunc i64 %15126 to i32
  %15132 = add i32 %15127, %15131
  %15133 = zext i32 %15132 to i64
  store i64 %15133, i64* %RDI.i637, align 8
  %15134 = icmp ult i32 %15132, %15131
  %15135 = icmp ult i32 %15132, %15127
  %15136 = or i1 %15134, %15135
  %15137 = zext i1 %15136 to i8
  %15138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15137, i8* %15138, align 1
  %15139 = and i32 %15132, 255
  %15140 = call i32 @llvm.ctpop.i32(i32 %15139)
  %15141 = trunc i32 %15140 to i8
  %15142 = and i8 %15141, 1
  %15143 = xor i8 %15142, 1
  %15144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15143, i8* %15144, align 1
  %15145 = xor i64 %15128, %15126
  %15146 = trunc i64 %15145 to i32
  %15147 = xor i32 %15146, %15132
  %15148 = lshr i32 %15147, 4
  %15149 = trunc i32 %15148 to i8
  %15150 = and i8 %15149, 1
  %15151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15150, i8* %15151, align 1
  %15152 = icmp eq i32 %15132, 0
  %15153 = zext i1 %15152 to i8
  %15154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15153, i8* %15154, align 1
  %15155 = lshr i32 %15132, 31
  %15156 = trunc i32 %15155 to i8
  %15157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15156, i8* %15157, align 1
  %15158 = lshr i32 %15131, 31
  %15159 = lshr i32 %15127, 31
  %15160 = xor i32 %15155, %15158
  %15161 = xor i32 %15155, %15159
  %15162 = add i32 %15160, %15161
  %15163 = icmp eq i32 %15162, 2
  %15164 = zext i1 %15163 to i8
  %15165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15164, i8* %15165, align 1
  store %struct.Memory* %loadMem_40b845, %struct.Memory** %MEMORY
  %loadMem_40b847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15167 = getelementptr inbounds %struct.GPR, %struct.GPR* %15166, i32 0, i32 33
  %15168 = getelementptr inbounds %struct.Reg, %struct.Reg* %15167, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %15168 to i64*
  %15169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15170 = getelementptr inbounds %struct.GPR, %struct.GPR* %15169, i32 0, i32 1
  %15171 = getelementptr inbounds %struct.Reg, %struct.Reg* %15170, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %15171 to i64*
  %15172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15173 = getelementptr inbounds %struct.GPR, %struct.GPR* %15172, i32 0, i32 15
  %15174 = getelementptr inbounds %struct.Reg, %struct.Reg* %15173, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %15174 to i64*
  %15175 = load i64, i64* %RAX.i633
  %15176 = load i64, i64* %RBP.i634
  %15177 = sub i64 %15176, 104
  %15178 = load i64, i64* %PC.i632
  %15179 = add i64 %15178, 3
  store i64 %15179, i64* %PC.i632
  %15180 = trunc i64 %15175 to i32
  %15181 = inttoptr i64 %15177 to i32*
  %15182 = load i32, i32* %15181
  %15183 = sub i32 %15180, %15182
  %15184 = zext i32 %15183 to i64
  store i64 %15184, i64* %RAX.i633, align 8
  %15185 = icmp ult i32 %15180, %15182
  %15186 = zext i1 %15185 to i8
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15186, i8* %15187, align 1
  %15188 = and i32 %15183, 255
  %15189 = call i32 @llvm.ctpop.i32(i32 %15188)
  %15190 = trunc i32 %15189 to i8
  %15191 = and i8 %15190, 1
  %15192 = xor i8 %15191, 1
  %15193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15192, i8* %15193, align 1
  %15194 = xor i32 %15182, %15180
  %15195 = xor i32 %15194, %15183
  %15196 = lshr i32 %15195, 4
  %15197 = trunc i32 %15196 to i8
  %15198 = and i8 %15197, 1
  %15199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15198, i8* %15199, align 1
  %15200 = icmp eq i32 %15183, 0
  %15201 = zext i1 %15200 to i8
  %15202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15201, i8* %15202, align 1
  %15203 = lshr i32 %15183, 31
  %15204 = trunc i32 %15203 to i8
  %15205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15204, i8* %15205, align 1
  %15206 = lshr i32 %15180, 31
  %15207 = lshr i32 %15182, 31
  %15208 = xor i32 %15207, %15206
  %15209 = xor i32 %15203, %15206
  %15210 = add i32 %15209, %15208
  %15211 = icmp eq i32 %15210, 2
  %15212 = zext i1 %15211 to i8
  %15213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15212, i8* %15213, align 1
  store %struct.Memory* %loadMem_40b847, %struct.Memory** %MEMORY
  %loadMem_40b84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15215 = getelementptr inbounds %struct.GPR, %struct.GPR* %15214, i32 0, i32 33
  %15216 = getelementptr inbounds %struct.Reg, %struct.Reg* %15215, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %15216 to i64*
  %15217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15218 = getelementptr inbounds %struct.GPR, %struct.GPR* %15217, i32 0, i32 1
  %15219 = getelementptr inbounds %struct.Reg, %struct.Reg* %15218, i32 0, i32 0
  %EAX.i630 = bitcast %union.anon* %15219 to i32*
  %15220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15221 = getelementptr inbounds %struct.GPR, %struct.GPR* %15220, i32 0, i32 5
  %15222 = getelementptr inbounds %struct.Reg, %struct.Reg* %15221, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %15222 to i64*
  %15223 = load i32, i32* %EAX.i630
  %15224 = zext i32 %15223 to i64
  %15225 = load i64, i64* %PC.i629
  %15226 = add i64 %15225, 2
  store i64 %15226, i64* %PC.i629
  %15227 = and i64 %15224, 4294967295
  store i64 %15227, i64* %RCX.i631, align 8
  store %struct.Memory* %loadMem_40b84a, %struct.Memory** %MEMORY
  %loadMem_40b84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15229 = getelementptr inbounds %struct.GPR, %struct.GPR* %15228, i32 0, i32 33
  %15230 = getelementptr inbounds %struct.Reg, %struct.Reg* %15229, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %15230 to i64*
  %15231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15232 = getelementptr inbounds %struct.GPR, %struct.GPR* %15231, i32 0, i32 5
  %15233 = getelementptr inbounds %struct.Reg, %struct.Reg* %15232, i32 0, i32 0
  %15234 = bitcast %union.anon* %15233 to %struct.anon.2*
  %CL.i626 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15234, i32 0, i32 0
  %15235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15236 = getelementptr inbounds %struct.GPR, %struct.GPR* %15235, i32 0, i32 11
  %15237 = getelementptr inbounds %struct.Reg, %struct.Reg* %15236, i32 0, i32 0
  %RDI.i627 = bitcast %union.anon* %15237 to i64*
  %15238 = load i64, i64* %RDI.i627
  %15239 = load i8, i8* %CL.i626
  %15240 = zext i8 %15239 to i64
  %15241 = load i64, i64* %PC.i625
  %15242 = add i64 %15241, 2
  store i64 %15242, i64* %PC.i625
  %15243 = trunc i64 %15240 to i5
  switch i5 %15243, label %15247 [
    i5 0, label %routine_sarl__cl___edi.exit628
    i5 1, label %15244
  ]

; <label>:15244:                                  ; preds = %routine_shll__cl___edx.exit641
  %15245 = shl i64 %15238, 32
  %15246 = ashr i64 %15245, 33
  br label %15254

; <label>:15247:                                  ; preds = %routine_shll__cl___edx.exit641
  %15248 = and i64 %15240, 31
  %15249 = add i64 %15248, -1
  %15250 = shl i64 %15238, 32
  %15251 = ashr exact i64 %15250, 32
  %15252 = ashr i64 %15251, %15249
  %15253 = lshr i64 %15252, 1
  br label %15254

; <label>:15254:                                  ; preds = %15247, %15244
  %15255 = phi i64 [ %15253, %15247 ], [ %15246, %15244 ]
  %15256 = phi i64 [ %15252, %15247 ], [ %15238, %15244 ]
  %15257 = trunc i64 %15256 to i8
  %15258 = and i8 %15257, 1
  %15259 = trunc i64 %15255 to i32
  %15260 = and i64 %15255, 4294967295
  store i64 %15260, i64* %RDI.i627, align 8
  %15261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15258, i8* %15261, align 1
  %15262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15263 = and i32 %15259, 255
  %15264 = call i32 @llvm.ctpop.i32(i32 %15263)
  %15265 = trunc i32 %15264 to i8
  %15266 = and i8 %15265, 1
  %15267 = xor i8 %15266, 1
  store i8 %15267, i8* %15262, align 1
  %15268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15268, align 1
  %15269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15270 = icmp eq i32 %15259, 0
  %15271 = zext i1 %15270 to i8
  store i8 %15271, i8* %15269, align 1
  %15272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15273 = lshr i32 %15259, 31
  %15274 = trunc i32 %15273 to i8
  store i8 %15274, i8* %15272, align 1
  %15275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15275, align 1
  br label %routine_sarl__cl___edi.exit628

routine_sarl__cl___edi.exit628:                   ; preds = %routine_shll__cl___edx.exit641, %15254
  store %struct.Memory* %loadMem_40b84c, %struct.Memory** %MEMORY
  %loadMem_40b84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15277 = getelementptr inbounds %struct.GPR, %struct.GPR* %15276, i32 0, i32 33
  %15278 = getelementptr inbounds %struct.Reg, %struct.Reg* %15277, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %15278 to i64*
  %15279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15280 = getelementptr inbounds %struct.GPR, %struct.GPR* %15279, i32 0, i32 11
  %15281 = getelementptr inbounds %struct.Reg, %struct.Reg* %15280, i32 0, i32 0
  %EDI.i623 = bitcast %union.anon* %15281 to i32*
  %15282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15283 = getelementptr inbounds %struct.GPR, %struct.GPR* %15282, i32 0, i32 15
  %15284 = getelementptr inbounds %struct.Reg, %struct.Reg* %15283, i32 0, i32 0
  %RBP.i624 = bitcast %union.anon* %15284 to i64*
  %15285 = load i64, i64* %RBP.i624
  %15286 = sub i64 %15285, 32
  %15287 = load i32, i32* %EDI.i623
  %15288 = zext i32 %15287 to i64
  %15289 = load i64, i64* %PC.i622
  %15290 = add i64 %15289, 3
  store i64 %15290, i64* %PC.i622
  %15291 = inttoptr i64 %15286 to i32*
  store i32 %15287, i32* %15291
  store %struct.Memory* %loadMem_40b84e, %struct.Memory** %MEMORY
  %loadMem_40b851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15293 = getelementptr inbounds %struct.GPR, %struct.GPR* %15292, i32 0, i32 33
  %15294 = getelementptr inbounds %struct.Reg, %struct.Reg* %15293, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %15294 to i64*
  %15295 = load i64, i64* %PC.i621
  %15296 = add i64 %15295, 109
  %15297 = load i64, i64* %PC.i621
  %15298 = add i64 %15297, 5
  store i64 %15298, i64* %PC.i621
  %15299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15296, i64* %15299, align 8
  store %struct.Memory* %loadMem_40b851, %struct.Memory** %MEMORY
  br label %block_.L_40b8be

block_.L_40b856:                                  ; preds = %block_40b7df
  %loadMem_40b856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15301 = getelementptr inbounds %struct.GPR, %struct.GPR* %15300, i32 0, i32 33
  %15302 = getelementptr inbounds %struct.Reg, %struct.Reg* %15301, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %15302 to i64*
  %15303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15304 = getelementptr inbounds %struct.GPR, %struct.GPR* %15303, i32 0, i32 1
  %15305 = getelementptr inbounds %struct.Reg, %struct.Reg* %15304, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %15305 to i64*
  %15306 = load i64, i64* %PC.i619
  %15307 = add i64 %15306, 5
  store i64 %15307, i64* %PC.i619
  store i64 4, i64* %RAX.i620, align 8
  store %struct.Memory* %loadMem_40b856, %struct.Memory** %MEMORY
  %loadMem_40b85b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15309 = getelementptr inbounds %struct.GPR, %struct.GPR* %15308, i32 0, i32 33
  %15310 = getelementptr inbounds %struct.Reg, %struct.Reg* %15309, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %15310 to i64*
  %15311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15312 = getelementptr inbounds %struct.GPR, %struct.GPR* %15311, i32 0, i32 5
  %15313 = getelementptr inbounds %struct.Reg, %struct.Reg* %15312, i32 0, i32 0
  %RCX.i618 = bitcast %union.anon* %15313 to i64*
  %15314 = load i64, i64* %PC.i617
  %15315 = add i64 %15314, 5
  store i64 %15315, i64* %PC.i617
  store i64 1, i64* %RCX.i618, align 8
  store %struct.Memory* %loadMem_40b85b, %struct.Memory** %MEMORY
  %loadMem_40b860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15317 = getelementptr inbounds %struct.GPR, %struct.GPR* %15316, i32 0, i32 33
  %15318 = getelementptr inbounds %struct.Reg, %struct.Reg* %15317, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %15318 to i64*
  %15319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15320 = getelementptr inbounds %struct.GPR, %struct.GPR* %15319, i32 0, i32 7
  %15321 = getelementptr inbounds %struct.Reg, %struct.Reg* %15320, i32 0, i32 0
  %RDX.i616 = bitcast %union.anon* %15321 to i64*
  %15322 = load i64, i64* %PC.i615
  %15323 = add i64 %15322, 5
  store i64 %15323, i64* %PC.i615
  store i64 3, i64* %RDX.i616, align 8
  store %struct.Memory* %loadMem_40b860, %struct.Memory** %MEMORY
  %loadMem_40b865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15325 = getelementptr inbounds %struct.GPR, %struct.GPR* %15324, i32 0, i32 33
  %15326 = getelementptr inbounds %struct.Reg, %struct.Reg* %15325, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %15326 to i64*
  %15327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15328 = getelementptr inbounds %struct.GPR, %struct.GPR* %15327, i32 0, i32 9
  %15329 = getelementptr inbounds %struct.Reg, %struct.Reg* %15328, i32 0, i32 0
  %RSI.i614 = bitcast %union.anon* %15329 to i64*
  %15330 = load i64, i64* %PC.i613
  %15331 = add i64 %15330, 10
  store i64 %15331, i64* %PC.i613
  store i64 ptrtoint (%G__0x723b20_type* @G__0x723b20 to i64), i64* %RSI.i614, align 8
  store %struct.Memory* %loadMem_40b865, %struct.Memory** %MEMORY
  %loadMem_40b86f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15333 = getelementptr inbounds %struct.GPR, %struct.GPR* %15332, i32 0, i32 33
  %15334 = getelementptr inbounds %struct.Reg, %struct.Reg* %15333, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %15334 to i64*
  %15335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15336 = getelementptr inbounds %struct.GPR, %struct.GPR* %15335, i32 0, i32 11
  %15337 = getelementptr inbounds %struct.Reg, %struct.Reg* %15336, i32 0, i32 0
  %RDI.i611 = bitcast %union.anon* %15337 to i64*
  %15338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15339 = getelementptr inbounds %struct.GPR, %struct.GPR* %15338, i32 0, i32 15
  %15340 = getelementptr inbounds %struct.Reg, %struct.Reg* %15339, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %15340 to i64*
  %15341 = load i64, i64* %RBP.i612
  %15342 = sub i64 %15341, 72
  %15343 = load i64, i64* %PC.i610
  %15344 = add i64 %15343, 3
  store i64 %15344, i64* %PC.i610
  %15345 = inttoptr i64 %15342 to i32*
  %15346 = load i32, i32* %15345
  %15347 = zext i32 %15346 to i64
  store i64 %15347, i64* %RDI.i611, align 8
  store %struct.Memory* %loadMem_40b86f, %struct.Memory** %MEMORY
  %loadMem_40b872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15349 = getelementptr inbounds %struct.GPR, %struct.GPR* %15348, i32 0, i32 33
  %15350 = getelementptr inbounds %struct.Reg, %struct.Reg* %15349, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %15350 to i64*
  %15351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15352 = getelementptr inbounds %struct.GPR, %struct.GPR* %15351, i32 0, i32 15
  %15353 = getelementptr inbounds %struct.Reg, %struct.Reg* %15352, i32 0, i32 0
  %RBP.i608 = bitcast %union.anon* %15353 to i64*
  %15354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15355 = getelementptr inbounds %struct.GPR, %struct.GPR* %15354, i32 0, i32 17
  %15356 = getelementptr inbounds %struct.Reg, %struct.Reg* %15355, i32 0, i32 0
  %R8.i609 = bitcast %union.anon* %15356 to i64*
  %15357 = load i64, i64* %RBP.i608
  %15358 = sub i64 %15357, 4
  %15359 = load i64, i64* %PC.i607
  %15360 = add i64 %15359, 4
  store i64 %15360, i64* %PC.i607
  %15361 = inttoptr i64 %15358 to i32*
  %15362 = load i32, i32* %15361
  %15363 = sext i32 %15362 to i64
  store i64 %15363, i64* %R8.i609, align 8
  store %struct.Memory* %loadMem_40b872, %struct.Memory** %MEMORY
  %loadMem_40b876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15365 = getelementptr inbounds %struct.GPR, %struct.GPR* %15364, i32 0, i32 33
  %15366 = getelementptr inbounds %struct.Reg, %struct.Reg* %15365, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %15366 to i64*
  %15367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15368 = getelementptr inbounds %struct.GPR, %struct.GPR* %15367, i32 0, i32 17
  %15369 = getelementptr inbounds %struct.Reg, %struct.Reg* %15368, i32 0, i32 0
  %R8.i606 = bitcast %union.anon* %15369 to i64*
  %15370 = load i64, i64* %R8.i606
  %15371 = load i64, i64* %PC.i605
  %15372 = add i64 %15371, 7
  store i64 %15372, i64* %PC.i605
  %15373 = sext i64 %15370 to i128
  %15374 = and i128 %15373, -18446744073709551616
  %15375 = zext i64 %15370 to i128
  %15376 = or i128 %15374, %15375
  %15377 = mul i128 384, %15376
  %15378 = trunc i128 %15377 to i64
  store i64 %15378, i64* %R8.i606, align 8
  %15379 = sext i64 %15378 to i128
  %15380 = icmp ne i128 %15379, %15377
  %15381 = zext i1 %15380 to i8
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15381, i8* %15382, align 1
  %15383 = trunc i128 %15377 to i32
  %15384 = and i32 %15383, 255
  %15385 = call i32 @llvm.ctpop.i32(i32 %15384)
  %15386 = trunc i32 %15385 to i8
  %15387 = and i8 %15386, 1
  %15388 = xor i8 %15387, 1
  %15389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15388, i8* %15389, align 1
  %15390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15390, align 1
  %15391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15391, align 1
  %15392 = lshr i64 %15378, 63
  %15393 = trunc i64 %15392 to i8
  %15394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15393, i8* %15394, align 1
  %15395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15381, i8* %15395, align 1
  store %struct.Memory* %loadMem_40b876, %struct.Memory** %MEMORY
  %loadMem_40b87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15397 = getelementptr inbounds %struct.GPR, %struct.GPR* %15396, i32 0, i32 33
  %15398 = getelementptr inbounds %struct.Reg, %struct.Reg* %15397, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %15398 to i64*
  %15399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15400 = getelementptr inbounds %struct.GPR, %struct.GPR* %15399, i32 0, i32 9
  %15401 = getelementptr inbounds %struct.Reg, %struct.Reg* %15400, i32 0, i32 0
  %RSI.i603 = bitcast %union.anon* %15401 to i64*
  %15402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15403 = getelementptr inbounds %struct.GPR, %struct.GPR* %15402, i32 0, i32 17
  %15404 = getelementptr inbounds %struct.Reg, %struct.Reg* %15403, i32 0, i32 0
  %R8.i604 = bitcast %union.anon* %15404 to i64*
  %15405 = load i64, i64* %RSI.i603
  %15406 = load i64, i64* %R8.i604
  %15407 = load i64, i64* %PC.i602
  %15408 = add i64 %15407, 3
  store i64 %15408, i64* %PC.i602
  %15409 = add i64 %15406, %15405
  store i64 %15409, i64* %RSI.i603, align 8
  %15410 = icmp ult i64 %15409, %15405
  %15411 = icmp ult i64 %15409, %15406
  %15412 = or i1 %15410, %15411
  %15413 = zext i1 %15412 to i8
  %15414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15413, i8* %15414, align 1
  %15415 = trunc i64 %15409 to i32
  %15416 = and i32 %15415, 255
  %15417 = call i32 @llvm.ctpop.i32(i32 %15416)
  %15418 = trunc i32 %15417 to i8
  %15419 = and i8 %15418, 1
  %15420 = xor i8 %15419, 1
  %15421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15420, i8* %15421, align 1
  %15422 = xor i64 %15406, %15405
  %15423 = xor i64 %15422, %15409
  %15424 = lshr i64 %15423, 4
  %15425 = trunc i64 %15424 to i8
  %15426 = and i8 %15425, 1
  %15427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15426, i8* %15427, align 1
  %15428 = icmp eq i64 %15409, 0
  %15429 = zext i1 %15428 to i8
  %15430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15429, i8* %15430, align 1
  %15431 = lshr i64 %15409, 63
  %15432 = trunc i64 %15431 to i8
  %15433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15432, i8* %15433, align 1
  %15434 = lshr i64 %15405, 63
  %15435 = lshr i64 %15406, 63
  %15436 = xor i64 %15431, %15434
  %15437 = xor i64 %15431, %15435
  %15438 = add i64 %15436, %15437
  %15439 = icmp eq i64 %15438, 2
  %15440 = zext i1 %15439 to i8
  %15441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15440, i8* %15441, align 1
  store %struct.Memory* %loadMem_40b87d, %struct.Memory** %MEMORY
  %loadMem_40b880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15443 = getelementptr inbounds %struct.GPR, %struct.GPR* %15442, i32 0, i32 33
  %15444 = getelementptr inbounds %struct.Reg, %struct.Reg* %15443, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %15444 to i64*
  %15445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15446 = getelementptr inbounds %struct.GPR, %struct.GPR* %15445, i32 0, i32 15
  %15447 = getelementptr inbounds %struct.Reg, %struct.Reg* %15446, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %15447 to i64*
  %15448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15449 = getelementptr inbounds %struct.GPR, %struct.GPR* %15448, i32 0, i32 17
  %15450 = getelementptr inbounds %struct.Reg, %struct.Reg* %15449, i32 0, i32 0
  %R8.i601 = bitcast %union.anon* %15450 to i64*
  %15451 = load i64, i64* %RBP.i600
  %15452 = sub i64 %15451, 108
  %15453 = load i64, i64* %PC.i599
  %15454 = add i64 %15453, 4
  store i64 %15454, i64* %PC.i599
  %15455 = inttoptr i64 %15452 to i32*
  %15456 = load i32, i32* %15455
  %15457 = sext i32 %15456 to i64
  store i64 %15457, i64* %R8.i601, align 8
  store %struct.Memory* %loadMem_40b880, %struct.Memory** %MEMORY
  %loadMem_40b884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15459 = getelementptr inbounds %struct.GPR, %struct.GPR* %15458, i32 0, i32 33
  %15460 = getelementptr inbounds %struct.Reg, %struct.Reg* %15459, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %15460 to i64*
  %15461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15462 = getelementptr inbounds %struct.GPR, %struct.GPR* %15461, i32 0, i32 17
  %15463 = getelementptr inbounds %struct.Reg, %struct.Reg* %15462, i32 0, i32 0
  %R8.i598 = bitcast %union.anon* %15463 to i64*
  %15464 = load i64, i64* %R8.i598
  %15465 = load i64, i64* %PC.i597
  %15466 = add i64 %15465, 4
  store i64 %15466, i64* %PC.i597
  %15467 = shl i64 %15464, 5
  %15468 = icmp slt i64 %15467, 0
  %15469 = shl i64 %15467, 1
  store i64 %15469, i64* %R8.i598, align 8
  %15470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15471 = zext i1 %15468 to i8
  store i8 %15471, i8* %15470, align 1
  %15472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15473 = trunc i64 %15469 to i32
  %15474 = and i32 %15473, 254
  %15475 = call i32 @llvm.ctpop.i32(i32 %15474)
  %15476 = trunc i32 %15475 to i8
  %15477 = and i8 %15476, 1
  %15478 = xor i8 %15477, 1
  store i8 %15478, i8* %15472, align 1
  %15479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15479, align 1
  %15480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15481 = icmp eq i64 %15469, 0
  %15482 = zext i1 %15481 to i8
  store i8 %15482, i8* %15480, align 1
  %15483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15484 = lshr i64 %15469, 63
  %15485 = trunc i64 %15484 to i8
  store i8 %15485, i8* %15483, align 1
  %15486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15486, align 1
  store %struct.Memory* %loadMem_40b884, %struct.Memory** %MEMORY
  %loadMem_40b888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15488 = getelementptr inbounds %struct.GPR, %struct.GPR* %15487, i32 0, i32 33
  %15489 = getelementptr inbounds %struct.Reg, %struct.Reg* %15488, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %15489 to i64*
  %15490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15491 = getelementptr inbounds %struct.GPR, %struct.GPR* %15490, i32 0, i32 9
  %15492 = getelementptr inbounds %struct.Reg, %struct.Reg* %15491, i32 0, i32 0
  %RSI.i595 = bitcast %union.anon* %15492 to i64*
  %15493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15494 = getelementptr inbounds %struct.GPR, %struct.GPR* %15493, i32 0, i32 17
  %15495 = getelementptr inbounds %struct.Reg, %struct.Reg* %15494, i32 0, i32 0
  %R8.i596 = bitcast %union.anon* %15495 to i64*
  %15496 = load i64, i64* %RSI.i595
  %15497 = load i64, i64* %R8.i596
  %15498 = load i64, i64* %PC.i594
  %15499 = add i64 %15498, 3
  store i64 %15499, i64* %PC.i594
  %15500 = add i64 %15497, %15496
  store i64 %15500, i64* %RSI.i595, align 8
  %15501 = icmp ult i64 %15500, %15496
  %15502 = icmp ult i64 %15500, %15497
  %15503 = or i1 %15501, %15502
  %15504 = zext i1 %15503 to i8
  %15505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15504, i8* %15505, align 1
  %15506 = trunc i64 %15500 to i32
  %15507 = and i32 %15506, 255
  %15508 = call i32 @llvm.ctpop.i32(i32 %15507)
  %15509 = trunc i32 %15508 to i8
  %15510 = and i8 %15509, 1
  %15511 = xor i8 %15510, 1
  %15512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15511, i8* %15512, align 1
  %15513 = xor i64 %15497, %15496
  %15514 = xor i64 %15513, %15500
  %15515 = lshr i64 %15514, 4
  %15516 = trunc i64 %15515 to i8
  %15517 = and i8 %15516, 1
  %15518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15517, i8* %15518, align 1
  %15519 = icmp eq i64 %15500, 0
  %15520 = zext i1 %15519 to i8
  %15521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15520, i8* %15521, align 1
  %15522 = lshr i64 %15500, 63
  %15523 = trunc i64 %15522 to i8
  %15524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15523, i8* %15524, align 1
  %15525 = lshr i64 %15496, 63
  %15526 = lshr i64 %15497, 63
  %15527 = xor i64 %15522, %15525
  %15528 = xor i64 %15522, %15526
  %15529 = add i64 %15527, %15528
  %15530 = icmp eq i64 %15529, 2
  %15531 = zext i1 %15530 to i8
  %15532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15531, i8* %15532, align 1
  store %struct.Memory* %loadMem_40b888, %struct.Memory** %MEMORY
  %loadMem_40b88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15534 = getelementptr inbounds %struct.GPR, %struct.GPR* %15533, i32 0, i32 33
  %15535 = getelementptr inbounds %struct.Reg, %struct.Reg* %15534, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %15535 to i64*
  %15536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15537 = getelementptr inbounds %struct.GPR, %struct.GPR* %15536, i32 0, i32 15
  %15538 = getelementptr inbounds %struct.Reg, %struct.Reg* %15537, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %15538 to i64*
  %15539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15540 = getelementptr inbounds %struct.GPR, %struct.GPR* %15539, i32 0, i32 17
  %15541 = getelementptr inbounds %struct.Reg, %struct.Reg* %15540, i32 0, i32 0
  %R8.i593 = bitcast %union.anon* %15541 to i64*
  %15542 = load i64, i64* %RBP.i592
  %15543 = sub i64 %15542, 16
  %15544 = load i64, i64* %PC.i591
  %15545 = add i64 %15544, 4
  store i64 %15545, i64* %PC.i591
  %15546 = inttoptr i64 %15543 to i32*
  %15547 = load i32, i32* %15546
  %15548 = sext i32 %15547 to i64
  store i64 %15548, i64* %R8.i593, align 8
  store %struct.Memory* %loadMem_40b88b, %struct.Memory** %MEMORY
  %loadMem_40b88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15550 = getelementptr inbounds %struct.GPR, %struct.GPR* %15549, i32 0, i32 33
  %15551 = getelementptr inbounds %struct.Reg, %struct.Reg* %15550, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %15551 to i64*
  %15552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15553 = getelementptr inbounds %struct.GPR, %struct.GPR* %15552, i32 0, i32 17
  %15554 = getelementptr inbounds %struct.Reg, %struct.Reg* %15553, i32 0, i32 0
  %R8.i590 = bitcast %union.anon* %15554 to i64*
  %15555 = load i64, i64* %R8.i590
  %15556 = load i64, i64* %PC.i589
  %15557 = add i64 %15556, 4
  store i64 %15557, i64* %PC.i589
  %15558 = shl i64 %15555, 3
  %15559 = icmp slt i64 %15558, 0
  %15560 = shl i64 %15558, 1
  store i64 %15560, i64* %R8.i590, align 8
  %15561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15562 = zext i1 %15559 to i8
  store i8 %15562, i8* %15561, align 1
  %15563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15564 = trunc i64 %15560 to i32
  %15565 = and i32 %15564, 254
  %15566 = call i32 @llvm.ctpop.i32(i32 %15565)
  %15567 = trunc i32 %15566 to i8
  %15568 = and i8 %15567, 1
  %15569 = xor i8 %15568, 1
  store i8 %15569, i8* %15563, align 1
  %15570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15570, align 1
  %15571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15572 = icmp eq i64 %15560, 0
  %15573 = zext i1 %15572 to i8
  store i8 %15573, i8* %15571, align 1
  %15574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15575 = lshr i64 %15560, 63
  %15576 = trunc i64 %15575 to i8
  store i8 %15576, i8* %15574, align 1
  %15577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15577, align 1
  store %struct.Memory* %loadMem_40b88f, %struct.Memory** %MEMORY
  %loadMem_40b893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15579 = getelementptr inbounds %struct.GPR, %struct.GPR* %15578, i32 0, i32 33
  %15580 = getelementptr inbounds %struct.Reg, %struct.Reg* %15579, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %15580 to i64*
  %15581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15582 = getelementptr inbounds %struct.GPR, %struct.GPR* %15581, i32 0, i32 9
  %15583 = getelementptr inbounds %struct.Reg, %struct.Reg* %15582, i32 0, i32 0
  %RSI.i587 = bitcast %union.anon* %15583 to i64*
  %15584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15585 = getelementptr inbounds %struct.GPR, %struct.GPR* %15584, i32 0, i32 17
  %15586 = getelementptr inbounds %struct.Reg, %struct.Reg* %15585, i32 0, i32 0
  %R8.i588 = bitcast %union.anon* %15586 to i64*
  %15587 = load i64, i64* %RSI.i587
  %15588 = load i64, i64* %R8.i588
  %15589 = load i64, i64* %PC.i586
  %15590 = add i64 %15589, 3
  store i64 %15590, i64* %PC.i586
  %15591 = add i64 %15588, %15587
  store i64 %15591, i64* %RSI.i587, align 8
  %15592 = icmp ult i64 %15591, %15587
  %15593 = icmp ult i64 %15591, %15588
  %15594 = or i1 %15592, %15593
  %15595 = zext i1 %15594 to i8
  %15596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15595, i8* %15596, align 1
  %15597 = trunc i64 %15591 to i32
  %15598 = and i32 %15597, 255
  %15599 = call i32 @llvm.ctpop.i32(i32 %15598)
  %15600 = trunc i32 %15599 to i8
  %15601 = and i8 %15600, 1
  %15602 = xor i8 %15601, 1
  %15603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15602, i8* %15603, align 1
  %15604 = xor i64 %15588, %15587
  %15605 = xor i64 %15604, %15591
  %15606 = lshr i64 %15605, 4
  %15607 = trunc i64 %15606 to i8
  %15608 = and i8 %15607, 1
  %15609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15608, i8* %15609, align 1
  %15610 = icmp eq i64 %15591, 0
  %15611 = zext i1 %15610 to i8
  %15612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15611, i8* %15612, align 1
  %15613 = lshr i64 %15591, 63
  %15614 = trunc i64 %15613 to i8
  %15615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15614, i8* %15615, align 1
  %15616 = lshr i64 %15587, 63
  %15617 = lshr i64 %15588, 63
  %15618 = xor i64 %15613, %15616
  %15619 = xor i64 %15613, %15617
  %15620 = add i64 %15618, %15619
  %15621 = icmp eq i64 %15620, 2
  %15622 = zext i1 %15621 to i8
  %15623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15622, i8* %15623, align 1
  store %struct.Memory* %loadMem_40b893, %struct.Memory** %MEMORY
  %loadMem_40b896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15625 = getelementptr inbounds %struct.GPR, %struct.GPR* %15624, i32 0, i32 33
  %15626 = getelementptr inbounds %struct.Reg, %struct.Reg* %15625, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %15626 to i64*
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15628 = getelementptr inbounds %struct.GPR, %struct.GPR* %15627, i32 0, i32 15
  %15629 = getelementptr inbounds %struct.Reg, %struct.Reg* %15628, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %15629 to i64*
  %15630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15631 = getelementptr inbounds %struct.GPR, %struct.GPR* %15630, i32 0, i32 17
  %15632 = getelementptr inbounds %struct.Reg, %struct.Reg* %15631, i32 0, i32 0
  %R8.i585 = bitcast %union.anon* %15632 to i64*
  %15633 = load i64, i64* %RBP.i584
  %15634 = sub i64 %15633, 20
  %15635 = load i64, i64* %PC.i583
  %15636 = add i64 %15635, 4
  store i64 %15636, i64* %PC.i583
  %15637 = inttoptr i64 %15634 to i32*
  %15638 = load i32, i32* %15637
  %15639 = sext i32 %15638 to i64
  store i64 %15639, i64* %R8.i585, align 8
  store %struct.Memory* %loadMem_40b896, %struct.Memory** %MEMORY
  %loadMem_40b89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15641 = getelementptr inbounds %struct.GPR, %struct.GPR* %15640, i32 0, i32 33
  %15642 = getelementptr inbounds %struct.Reg, %struct.Reg* %15641, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %15642 to i64*
  %15643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15644 = getelementptr inbounds %struct.GPR, %struct.GPR* %15643, i32 0, i32 9
  %15645 = getelementptr inbounds %struct.Reg, %struct.Reg* %15644, i32 0, i32 0
  %RSI.i581 = bitcast %union.anon* %15645 to i64*
  %15646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15647 = getelementptr inbounds %struct.GPR, %struct.GPR* %15646, i32 0, i32 11
  %15648 = getelementptr inbounds %struct.Reg, %struct.Reg* %15647, i32 0, i32 0
  %RDI.i582 = bitcast %union.anon* %15648 to i64*
  %15649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15650 = getelementptr inbounds %struct.GPR, %struct.GPR* %15649, i32 0, i32 17
  %15651 = getelementptr inbounds %struct.Reg, %struct.Reg* %15650, i32 0, i32 0
  %R8.i = bitcast %union.anon* %15651 to i64*
  %15652 = load i64, i64* %RDI.i582
  %15653 = load i64, i64* %RSI.i581
  %15654 = load i64, i64* %R8.i
  %15655 = mul i64 %15654, 4
  %15656 = add i64 %15655, %15653
  %15657 = load i64, i64* %PC.i580
  %15658 = add i64 %15657, 5
  store i64 %15658, i64* %PC.i580
  %15659 = inttoptr i64 %15656 to i32*
  %15660 = load i32, i32* %15659
  %15661 = shl i64 %15652, 32
  %15662 = ashr exact i64 %15661, 32
  %15663 = sext i32 %15660 to i64
  %15664 = mul i64 %15663, %15662
  %15665 = trunc i64 %15664 to i32
  %15666 = and i64 %15664, 4294967295
  store i64 %15666, i64* %RDI.i582, align 8
  %15667 = shl i64 %15664, 32
  %15668 = ashr exact i64 %15667, 32
  %15669 = icmp ne i64 %15668, %15664
  %15670 = zext i1 %15669 to i8
  %15671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15670, i8* %15671, align 1
  %15672 = and i32 %15665, 255
  %15673 = call i32 @llvm.ctpop.i32(i32 %15672)
  %15674 = trunc i32 %15673 to i8
  %15675 = and i8 %15674, 1
  %15676 = xor i8 %15675, 1
  %15677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15676, i8* %15677, align 1
  %15678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15678, align 1
  %15679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15679, align 1
  %15680 = lshr i32 %15665, 31
  %15681 = trunc i32 %15680 to i8
  %15682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15681, i8* %15682, align 1
  %15683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15670, i8* %15683, align 1
  store %struct.Memory* %loadMem_40b89a, %struct.Memory** %MEMORY
  %loadMem_40b89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15685 = getelementptr inbounds %struct.GPR, %struct.GPR* %15684, i32 0, i32 33
  %15686 = getelementptr inbounds %struct.Reg, %struct.Reg* %15685, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %15686 to i64*
  %15687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15688 = getelementptr inbounds %struct.GPR, %struct.GPR* %15687, i32 0, i32 7
  %15689 = getelementptr inbounds %struct.Reg, %struct.Reg* %15688, i32 0, i32 0
  %RDX.i578 = bitcast %union.anon* %15689 to i64*
  %15690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15691 = getelementptr inbounds %struct.GPR, %struct.GPR* %15690, i32 0, i32 15
  %15692 = getelementptr inbounds %struct.Reg, %struct.Reg* %15691, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %15692 to i64*
  %15693 = load i64, i64* %RDX.i578
  %15694 = load i64, i64* %RBP.i579
  %15695 = sub i64 %15694, 104
  %15696 = load i64, i64* %PC.i577
  %15697 = add i64 %15696, 3
  store i64 %15697, i64* %PC.i577
  %15698 = trunc i64 %15693 to i32
  %15699 = inttoptr i64 %15695 to i32*
  %15700 = load i32, i32* %15699
  %15701 = sub i32 %15698, %15700
  %15702 = zext i32 %15701 to i64
  store i64 %15702, i64* %RDX.i578, align 8
  %15703 = icmp ult i32 %15698, %15700
  %15704 = zext i1 %15703 to i8
  %15705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15704, i8* %15705, align 1
  %15706 = and i32 %15701, 255
  %15707 = call i32 @llvm.ctpop.i32(i32 %15706)
  %15708 = trunc i32 %15707 to i8
  %15709 = and i8 %15708, 1
  %15710 = xor i8 %15709, 1
  %15711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15710, i8* %15711, align 1
  %15712 = xor i32 %15700, %15698
  %15713 = xor i32 %15712, %15701
  %15714 = lshr i32 %15713, 4
  %15715 = trunc i32 %15714 to i8
  %15716 = and i8 %15715, 1
  %15717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15716, i8* %15717, align 1
  %15718 = icmp eq i32 %15701, 0
  %15719 = zext i1 %15718 to i8
  %15720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15719, i8* %15720, align 1
  %15721 = lshr i32 %15701, 31
  %15722 = trunc i32 %15721 to i8
  %15723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15722, i8* %15723, align 1
  %15724 = lshr i32 %15698, 31
  %15725 = lshr i32 %15700, 31
  %15726 = xor i32 %15725, %15724
  %15727 = xor i32 %15721, %15724
  %15728 = add i32 %15727, %15726
  %15729 = icmp eq i32 %15728, 2
  %15730 = zext i1 %15729 to i8
  %15731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15730, i8* %15731, align 1
  store %struct.Memory* %loadMem_40b89f, %struct.Memory** %MEMORY
  %loadMem_40b8a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15733 = getelementptr inbounds %struct.GPR, %struct.GPR* %15732, i32 0, i32 33
  %15734 = getelementptr inbounds %struct.Reg, %struct.Reg* %15733, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %15734 to i64*
  %15735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15736 = getelementptr inbounds %struct.GPR, %struct.GPR* %15735, i32 0, i32 5
  %15737 = getelementptr inbounds %struct.Reg, %struct.Reg* %15736, i32 0, i32 0
  %ECX.i575 = bitcast %union.anon* %15737 to i32*
  %15738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15739 = getelementptr inbounds %struct.GPR, %struct.GPR* %15738, i32 0, i32 15
  %15740 = getelementptr inbounds %struct.Reg, %struct.Reg* %15739, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %15740 to i64*
  %15741 = load i64, i64* %RBP.i576
  %15742 = sub i64 %15741, 200
  %15743 = load i32, i32* %ECX.i575
  %15744 = zext i32 %15743 to i64
  %15745 = load i64, i64* %PC.i574
  %15746 = add i64 %15745, 6
  store i64 %15746, i64* %PC.i574
  %15747 = inttoptr i64 %15742 to i32*
  store i32 %15743, i32* %15747
  store %struct.Memory* %loadMem_40b8a2, %struct.Memory** %MEMORY
  %loadMem_40b8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15749 = getelementptr inbounds %struct.GPR, %struct.GPR* %15748, i32 0, i32 33
  %15750 = getelementptr inbounds %struct.Reg, %struct.Reg* %15749, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %15750 to i64*
  %15751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15752 = getelementptr inbounds %struct.GPR, %struct.GPR* %15751, i32 0, i32 7
  %15753 = getelementptr inbounds %struct.Reg, %struct.Reg* %15752, i32 0, i32 0
  %EDX.i572 = bitcast %union.anon* %15753 to i32*
  %15754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15755 = getelementptr inbounds %struct.GPR, %struct.GPR* %15754, i32 0, i32 5
  %15756 = getelementptr inbounds %struct.Reg, %struct.Reg* %15755, i32 0, i32 0
  %RCX.i573 = bitcast %union.anon* %15756 to i64*
  %15757 = load i32, i32* %EDX.i572
  %15758 = zext i32 %15757 to i64
  %15759 = load i64, i64* %PC.i571
  %15760 = add i64 %15759, 2
  store i64 %15760, i64* %PC.i571
  %15761 = and i64 %15758, 4294967295
  store i64 %15761, i64* %RCX.i573, align 8
  store %struct.Memory* %loadMem_40b8a8, %struct.Memory** %MEMORY
  %loadMem_40b8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %15762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15763 = getelementptr inbounds %struct.GPR, %struct.GPR* %15762, i32 0, i32 33
  %15764 = getelementptr inbounds %struct.Reg, %struct.Reg* %15763, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %15764 to i64*
  %15765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15766 = getelementptr inbounds %struct.GPR, %struct.GPR* %15765, i32 0, i32 7
  %15767 = getelementptr inbounds %struct.Reg, %struct.Reg* %15766, i32 0, i32 0
  %RDX.i569 = bitcast %union.anon* %15767 to i64*
  %15768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15769 = getelementptr inbounds %struct.GPR, %struct.GPR* %15768, i32 0, i32 15
  %15770 = getelementptr inbounds %struct.Reg, %struct.Reg* %15769, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %15770 to i64*
  %15771 = load i64, i64* %RBP.i570
  %15772 = sub i64 %15771, 200
  %15773 = load i64, i64* %PC.i568
  %15774 = add i64 %15773, 6
  store i64 %15774, i64* %PC.i568
  %15775 = inttoptr i64 %15772 to i32*
  %15776 = load i32, i32* %15775
  %15777 = zext i32 %15776 to i64
  store i64 %15777, i64* %RDX.i569, align 8
  store %struct.Memory* %loadMem_40b8aa, %struct.Memory** %MEMORY
  %loadMem_40b8b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15779 = getelementptr inbounds %struct.GPR, %struct.GPR* %15778, i32 0, i32 33
  %15780 = getelementptr inbounds %struct.Reg, %struct.Reg* %15779, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %15780 to i64*
  %15781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15782 = getelementptr inbounds %struct.GPR, %struct.GPR* %15781, i32 0, i32 5
  %15783 = getelementptr inbounds %struct.Reg, %struct.Reg* %15782, i32 0, i32 0
  %15784 = bitcast %union.anon* %15783 to %struct.anon.2*
  %CL.i566 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15784, i32 0, i32 0
  %15785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15786 = getelementptr inbounds %struct.GPR, %struct.GPR* %15785, i32 0, i32 7
  %15787 = getelementptr inbounds %struct.Reg, %struct.Reg* %15786, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %15787 to i64*
  %15788 = load i64, i64* %RDX.i567
  %15789 = load i8, i8* %CL.i566
  %15790 = zext i8 %15789 to i64
  %15791 = load i64, i64* %PC.i565
  %15792 = add i64 %15791, 2
  store i64 %15792, i64* %PC.i565
  %15793 = trunc i64 %15790 to i5
  switch i5 %15793, label %15800 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %15794
  ]

; <label>:15794:                                  ; preds = %block_.L_40b856
  %15795 = trunc i64 %15788 to i32
  %15796 = shl i32 %15795, 1
  %15797 = icmp slt i32 %15795, 0
  %15798 = icmp slt i32 %15796, 0
  %15799 = xor i1 %15797, %15798
  br label %15809

; <label>:15800:                                  ; preds = %block_.L_40b856
  %15801 = and i64 %15790, 31
  %15802 = add i64 %15801, 4294967295
  %15803 = and i64 %15788, 4294967295
  %15804 = and i64 %15802, 4294967295
  %15805 = shl i64 %15803, %15804
  %15806 = trunc i64 %15805 to i32
  %15807 = icmp slt i32 %15806, 0
  %15808 = shl i32 %15806, 1
  br label %15809

; <label>:15809:                                  ; preds = %15800, %15794
  %15810 = phi i1 [ %15797, %15794 ], [ %15807, %15800 ]
  %15811 = phi i1 [ %15799, %15794 ], [ false, %15800 ]
  %15812 = phi i32 [ %15796, %15794 ], [ %15808, %15800 ]
  %15813 = zext i32 %15812 to i64
  store i64 %15813, i64* %RDX.i567, align 8
  %15814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %15815 = zext i1 %15810 to i8
  store i8 %15815, i8* %15814, align 1
  %15816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15817 = and i32 %15812, 254
  %15818 = call i32 @llvm.ctpop.i32(i32 %15817)
  %15819 = trunc i32 %15818 to i8
  %15820 = and i8 %15819, 1
  %15821 = xor i8 %15820, 1
  store i8 %15821, i8* %15816, align 1
  %15822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15822, align 1
  %15823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15824 = icmp eq i32 %15812, 0
  %15825 = zext i1 %15824 to i8
  store i8 %15825, i8* %15823, align 1
  %15826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15827 = lshr i32 %15812, 31
  %15828 = trunc i32 %15827 to i8
  store i8 %15828, i8* %15826, align 1
  %15829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15830 = zext i1 %15811 to i8
  store i8 %15830, i8* %15829, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_.L_40b856, %15809
  store %struct.Memory* %loadMem_40b8b0, %struct.Memory** %MEMORY
  %loadMem_40b8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15832 = getelementptr inbounds %struct.GPR, %struct.GPR* %15831, i32 0, i32 33
  %15833 = getelementptr inbounds %struct.Reg, %struct.Reg* %15832, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %15833 to i64*
  %15834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15835 = getelementptr inbounds %struct.GPR, %struct.GPR* %15834, i32 0, i32 7
  %15836 = getelementptr inbounds %struct.Reg, %struct.Reg* %15835, i32 0, i32 0
  %EDX.i563 = bitcast %union.anon* %15836 to i32*
  %15837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15838 = getelementptr inbounds %struct.GPR, %struct.GPR* %15837, i32 0, i32 11
  %15839 = getelementptr inbounds %struct.Reg, %struct.Reg* %15838, i32 0, i32 0
  %RDI.i564 = bitcast %union.anon* %15839 to i64*
  %15840 = load i64, i64* %RDI.i564
  %15841 = load i32, i32* %EDX.i563
  %15842 = zext i32 %15841 to i64
  %15843 = load i64, i64* %PC.i562
  %15844 = add i64 %15843, 2
  store i64 %15844, i64* %PC.i562
  %15845 = trunc i64 %15840 to i32
  %15846 = add i32 %15841, %15845
  %15847 = zext i32 %15846 to i64
  store i64 %15847, i64* %RDI.i564, align 8
  %15848 = icmp ult i32 %15846, %15845
  %15849 = icmp ult i32 %15846, %15841
  %15850 = or i1 %15848, %15849
  %15851 = zext i1 %15850 to i8
  %15852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15851, i8* %15852, align 1
  %15853 = and i32 %15846, 255
  %15854 = call i32 @llvm.ctpop.i32(i32 %15853)
  %15855 = trunc i32 %15854 to i8
  %15856 = and i8 %15855, 1
  %15857 = xor i8 %15856, 1
  %15858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15857, i8* %15858, align 1
  %15859 = xor i64 %15842, %15840
  %15860 = trunc i64 %15859 to i32
  %15861 = xor i32 %15860, %15846
  %15862 = lshr i32 %15861, 4
  %15863 = trunc i32 %15862 to i8
  %15864 = and i8 %15863, 1
  %15865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15864, i8* %15865, align 1
  %15866 = icmp eq i32 %15846, 0
  %15867 = zext i1 %15866 to i8
  %15868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15867, i8* %15868, align 1
  %15869 = lshr i32 %15846, 31
  %15870 = trunc i32 %15869 to i8
  %15871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15870, i8* %15871, align 1
  %15872 = lshr i32 %15845, 31
  %15873 = lshr i32 %15841, 31
  %15874 = xor i32 %15869, %15872
  %15875 = xor i32 %15869, %15873
  %15876 = add i32 %15874, %15875
  %15877 = icmp eq i32 %15876, 2
  %15878 = zext i1 %15877 to i8
  %15879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15878, i8* %15879, align 1
  store %struct.Memory* %loadMem_40b8b2, %struct.Memory** %MEMORY
  %loadMem_40b8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15881 = getelementptr inbounds %struct.GPR, %struct.GPR* %15880, i32 0, i32 33
  %15882 = getelementptr inbounds %struct.Reg, %struct.Reg* %15881, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %15882 to i64*
  %15883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15884 = getelementptr inbounds %struct.GPR, %struct.GPR* %15883, i32 0, i32 1
  %15885 = getelementptr inbounds %struct.Reg, %struct.Reg* %15884, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %15885 to i64*
  %15886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15887 = getelementptr inbounds %struct.GPR, %struct.GPR* %15886, i32 0, i32 15
  %15888 = getelementptr inbounds %struct.Reg, %struct.Reg* %15887, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %15888 to i64*
  %15889 = load i64, i64* %RAX.i560
  %15890 = load i64, i64* %RBP.i561
  %15891 = sub i64 %15890, 104
  %15892 = load i64, i64* %PC.i559
  %15893 = add i64 %15892, 3
  store i64 %15893, i64* %PC.i559
  %15894 = trunc i64 %15889 to i32
  %15895 = inttoptr i64 %15891 to i32*
  %15896 = load i32, i32* %15895
  %15897 = sub i32 %15894, %15896
  %15898 = zext i32 %15897 to i64
  store i64 %15898, i64* %RAX.i560, align 8
  %15899 = icmp ult i32 %15894, %15896
  %15900 = zext i1 %15899 to i8
  %15901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15900, i8* %15901, align 1
  %15902 = and i32 %15897, 255
  %15903 = call i32 @llvm.ctpop.i32(i32 %15902)
  %15904 = trunc i32 %15903 to i8
  %15905 = and i8 %15904, 1
  %15906 = xor i8 %15905, 1
  %15907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15906, i8* %15907, align 1
  %15908 = xor i32 %15896, %15894
  %15909 = xor i32 %15908, %15897
  %15910 = lshr i32 %15909, 4
  %15911 = trunc i32 %15910 to i8
  %15912 = and i8 %15911, 1
  %15913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15912, i8* %15913, align 1
  %15914 = icmp eq i32 %15897, 0
  %15915 = zext i1 %15914 to i8
  %15916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15915, i8* %15916, align 1
  %15917 = lshr i32 %15897, 31
  %15918 = trunc i32 %15917 to i8
  %15919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15918, i8* %15919, align 1
  %15920 = lshr i32 %15894, 31
  %15921 = lshr i32 %15896, 31
  %15922 = xor i32 %15921, %15920
  %15923 = xor i32 %15917, %15920
  %15924 = add i32 %15923, %15922
  %15925 = icmp eq i32 %15924, 2
  %15926 = zext i1 %15925 to i8
  %15927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15926, i8* %15927, align 1
  store %struct.Memory* %loadMem_40b8b4, %struct.Memory** %MEMORY
  %loadMem_40b8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15929 = getelementptr inbounds %struct.GPR, %struct.GPR* %15928, i32 0, i32 33
  %15930 = getelementptr inbounds %struct.Reg, %struct.Reg* %15929, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %15930 to i64*
  %15931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15932 = getelementptr inbounds %struct.GPR, %struct.GPR* %15931, i32 0, i32 1
  %15933 = getelementptr inbounds %struct.Reg, %struct.Reg* %15932, i32 0, i32 0
  %EAX.i557 = bitcast %union.anon* %15933 to i32*
  %15934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15935 = getelementptr inbounds %struct.GPR, %struct.GPR* %15934, i32 0, i32 5
  %15936 = getelementptr inbounds %struct.Reg, %struct.Reg* %15935, i32 0, i32 0
  %RCX.i558 = bitcast %union.anon* %15936 to i64*
  %15937 = load i32, i32* %EAX.i557
  %15938 = zext i32 %15937 to i64
  %15939 = load i64, i64* %PC.i556
  %15940 = add i64 %15939, 2
  store i64 %15940, i64* %PC.i556
  %15941 = and i64 %15938, 4294967295
  store i64 %15941, i64* %RCX.i558, align 8
  store %struct.Memory* %loadMem_40b8b7, %struct.Memory** %MEMORY
  %loadMem_40b8b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15943 = getelementptr inbounds %struct.GPR, %struct.GPR* %15942, i32 0, i32 33
  %15944 = getelementptr inbounds %struct.Reg, %struct.Reg* %15943, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %15944 to i64*
  %15945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15946 = getelementptr inbounds %struct.GPR, %struct.GPR* %15945, i32 0, i32 5
  %15947 = getelementptr inbounds %struct.Reg, %struct.Reg* %15946, i32 0, i32 0
  %15948 = bitcast %union.anon* %15947 to %struct.anon.2*
  %CL.i555 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15948, i32 0, i32 0
  %15949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15950 = getelementptr inbounds %struct.GPR, %struct.GPR* %15949, i32 0, i32 11
  %15951 = getelementptr inbounds %struct.Reg, %struct.Reg* %15950, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %15951 to i64*
  %15952 = load i64, i64* %RDI.i
  %15953 = load i8, i8* %CL.i555
  %15954 = zext i8 %15953 to i64
  %15955 = load i64, i64* %PC.i554
  %15956 = add i64 %15955, 2
  store i64 %15956, i64* %PC.i554
  %15957 = trunc i64 %15954 to i5
  switch i5 %15957, label %15961 [
    i5 0, label %routine_sarl__cl___edi.exit
    i5 1, label %15958
  ]

; <label>:15958:                                  ; preds = %routine_shll__cl___edx.exit
  %15959 = shl i64 %15952, 32
  %15960 = ashr i64 %15959, 33
  br label %15968

; <label>:15961:                                  ; preds = %routine_shll__cl___edx.exit
  %15962 = and i64 %15954, 31
  %15963 = add i64 %15962, -1
  %15964 = shl i64 %15952, 32
  %15965 = ashr exact i64 %15964, 32
  %15966 = ashr i64 %15965, %15963
  %15967 = lshr i64 %15966, 1
  br label %15968

; <label>:15968:                                  ; preds = %15961, %15958
  %15969 = phi i64 [ %15967, %15961 ], [ %15960, %15958 ]
  %15970 = phi i64 [ %15966, %15961 ], [ %15952, %15958 ]
  %15971 = trunc i64 %15970 to i8
  %15972 = and i8 %15971, 1
  %15973 = trunc i64 %15969 to i32
  %15974 = and i64 %15969, 4294967295
  store i64 %15974, i64* %RDI.i, align 8
  %15975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15972, i8* %15975, align 1
  %15976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %15977 = and i32 %15973, 255
  %15978 = call i32 @llvm.ctpop.i32(i32 %15977)
  %15979 = trunc i32 %15978 to i8
  %15980 = and i8 %15979, 1
  %15981 = xor i8 %15980, 1
  store i8 %15981, i8* %15976, align 1
  %15982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15982, align 1
  %15983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15984 = icmp eq i32 %15973, 0
  %15985 = zext i1 %15984 to i8
  store i8 %15985, i8* %15983, align 1
  %15986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15987 = lshr i32 %15973, 31
  %15988 = trunc i32 %15987 to i8
  store i8 %15988, i8* %15986, align 1
  %15989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %15989, align 1
  br label %routine_sarl__cl___edi.exit

routine_sarl__cl___edi.exit:                      ; preds = %routine_shll__cl___edx.exit, %15968
  store %struct.Memory* %loadMem_40b8b9, %struct.Memory** %MEMORY
  %loadMem_40b8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15991 = getelementptr inbounds %struct.GPR, %struct.GPR* %15990, i32 0, i32 33
  %15992 = getelementptr inbounds %struct.Reg, %struct.Reg* %15991, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %15992 to i64*
  %15993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15994 = getelementptr inbounds %struct.GPR, %struct.GPR* %15993, i32 0, i32 11
  %15995 = getelementptr inbounds %struct.Reg, %struct.Reg* %15994, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %15995 to i32*
  %15996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15997 = getelementptr inbounds %struct.GPR, %struct.GPR* %15996, i32 0, i32 15
  %15998 = getelementptr inbounds %struct.Reg, %struct.Reg* %15997, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %15998 to i64*
  %15999 = load i64, i64* %RBP.i553
  %16000 = sub i64 %15999, 32
  %16001 = load i32, i32* %EDI.i
  %16002 = zext i32 %16001 to i64
  %16003 = load i64, i64* %PC.i552
  %16004 = add i64 %16003, 3
  store i64 %16004, i64* %PC.i552
  %16005 = inttoptr i64 %16000 to i32*
  store i32 %16001, i32* %16005
  store %struct.Memory* %loadMem_40b8bb, %struct.Memory** %MEMORY
  br label %block_.L_40b8be

block_.L_40b8be:                                  ; preds = %routine_sarl__cl___edi.exit, %routine_sarl__cl___edi.exit628
  %loadMem_40b8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %16006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16007 = getelementptr inbounds %struct.GPR, %struct.GPR* %16006, i32 0, i32 33
  %16008 = getelementptr inbounds %struct.Reg, %struct.Reg* %16007, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %16008 to i64*
  %16009 = load i64, i64* %PC.i551
  %16010 = add i64 %16009, 189
  %16011 = load i64, i64* %PC.i551
  %16012 = add i64 %16011, 5
  store i64 %16012, i64* %PC.i551
  %16013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16010, i64* %16013, align 8
  store %struct.Memory* %loadMem_40b8be, %struct.Memory** %MEMORY
  br label %block_.L_40b97b

block_.L_40b8c3:                                  ; preds = %block_.L_40b7d5
  %loadMem_40b8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16015 = getelementptr inbounds %struct.GPR, %struct.GPR* %16014, i32 0, i32 33
  %16016 = getelementptr inbounds %struct.Reg, %struct.Reg* %16015, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %16016 to i64*
  %16017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16018 = getelementptr inbounds %struct.GPR, %struct.GPR* %16017, i32 0, i32 15
  %16019 = getelementptr inbounds %struct.Reg, %struct.Reg* %16018, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %16019 to i64*
  %16020 = load i64, i64* %RBP.i550
  %16021 = sub i64 %16020, 100
  %16022 = load i64, i64* %PC.i549
  %16023 = add i64 %16022, 4
  store i64 %16023, i64* %PC.i549
  %16024 = inttoptr i64 %16021 to i32*
  %16025 = load i32, i32* %16024
  %16026 = sub i32 %16025, 1
  %16027 = icmp ult i32 %16025, 1
  %16028 = zext i1 %16027 to i8
  %16029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16028, i8* %16029, align 1
  %16030 = and i32 %16026, 255
  %16031 = call i32 @llvm.ctpop.i32(i32 %16030)
  %16032 = trunc i32 %16031 to i8
  %16033 = and i8 %16032, 1
  %16034 = xor i8 %16033, 1
  %16035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16034, i8* %16035, align 1
  %16036 = xor i32 %16025, 1
  %16037 = xor i32 %16036, %16026
  %16038 = lshr i32 %16037, 4
  %16039 = trunc i32 %16038 to i8
  %16040 = and i8 %16039, 1
  %16041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16040, i8* %16041, align 1
  %16042 = icmp eq i32 %16026, 0
  %16043 = zext i1 %16042 to i8
  %16044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16043, i8* %16044, align 1
  %16045 = lshr i32 %16026, 31
  %16046 = trunc i32 %16045 to i8
  %16047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16046, i8* %16047, align 1
  %16048 = lshr i32 %16025, 31
  %16049 = xor i32 %16045, %16048
  %16050 = add i32 %16049, %16048
  %16051 = icmp eq i32 %16050, 2
  %16052 = zext i1 %16051 to i8
  %16053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16052, i8* %16053, align 1
  store %struct.Memory* %loadMem_40b8c3, %struct.Memory** %MEMORY
  %loadMem_40b8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16055 = getelementptr inbounds %struct.GPR, %struct.GPR* %16054, i32 0, i32 33
  %16056 = getelementptr inbounds %struct.Reg, %struct.Reg* %16055, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %16056 to i64*
  %16057 = load i64, i64* %PC.i548
  %16058 = add i64 %16057, 93
  %16059 = load i64, i64* %PC.i548
  %16060 = add i64 %16059, 6
  %16061 = load i64, i64* %PC.i548
  %16062 = add i64 %16061, 6
  store i64 %16062, i64* %PC.i548
  %16063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16064 = load i8, i8* %16063, align 1
  %16065 = icmp eq i8 %16064, 0
  %16066 = zext i1 %16065 to i8
  store i8 %16066, i8* %BRANCH_TAKEN, align 1
  %16067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16068 = select i1 %16065, i64 %16058, i64 %16060
  store i64 %16068, i64* %16067, align 8
  store %struct.Memory* %loadMem_40b8c7, %struct.Memory** %MEMORY
  %loadBr_40b8c7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b8c7 = icmp eq i8 %loadBr_40b8c7, 1
  br i1 %cmpBr_40b8c7, label %block_.L_40b924, label %block_40b8cd

block_40b8cd:                                     ; preds = %block_.L_40b8c3
  %loadMem_40b8cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %16069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16070 = getelementptr inbounds %struct.GPR, %struct.GPR* %16069, i32 0, i32 33
  %16071 = getelementptr inbounds %struct.Reg, %struct.Reg* %16070, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %16071 to i64*
  %16072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16073 = getelementptr inbounds %struct.GPR, %struct.GPR* %16072, i32 0, i32 1
  %16074 = getelementptr inbounds %struct.Reg, %struct.Reg* %16073, i32 0, i32 0
  %RAX.i547 = bitcast %union.anon* %16074 to i64*
  %16075 = load i64, i64* %PC.i546
  %16076 = add i64 %16075, 10
  store i64 %16076, i64* %PC.i546
  store i64 ptrtoint (%G__0x70d1b0_type* @G__0x70d1b0 to i64), i64* %RAX.i547, align 8
  store %struct.Memory* %loadMem_40b8cd, %struct.Memory** %MEMORY
  %loadMem_40b8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16078 = getelementptr inbounds %struct.GPR, %struct.GPR* %16077, i32 0, i32 33
  %16079 = getelementptr inbounds %struct.Reg, %struct.Reg* %16078, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %16079 to i64*
  %16080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16081 = getelementptr inbounds %struct.GPR, %struct.GPR* %16080, i32 0, i32 5
  %16082 = getelementptr inbounds %struct.Reg, %struct.Reg* %16081, i32 0, i32 0
  %RCX.i544 = bitcast %union.anon* %16082 to i64*
  %16083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16084 = getelementptr inbounds %struct.GPR, %struct.GPR* %16083, i32 0, i32 15
  %16085 = getelementptr inbounds %struct.Reg, %struct.Reg* %16084, i32 0, i32 0
  %RBP.i545 = bitcast %union.anon* %16085 to i64*
  %16086 = load i64, i64* %RBP.i545
  %16087 = sub i64 %16086, 72
  %16088 = load i64, i64* %PC.i543
  %16089 = add i64 %16088, 3
  store i64 %16089, i64* %PC.i543
  %16090 = inttoptr i64 %16087 to i32*
  %16091 = load i32, i32* %16090
  %16092 = zext i32 %16091 to i64
  store i64 %16092, i64* %RCX.i544, align 8
  store %struct.Memory* %loadMem_40b8d7, %struct.Memory** %MEMORY
  %loadMem_40b8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %16093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16094 = getelementptr inbounds %struct.GPR, %struct.GPR* %16093, i32 0, i32 33
  %16095 = getelementptr inbounds %struct.Reg, %struct.Reg* %16094, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %16095 to i64*
  %16096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16097 = getelementptr inbounds %struct.GPR, %struct.GPR* %16096, i32 0, i32 7
  %16098 = getelementptr inbounds %struct.Reg, %struct.Reg* %16097, i32 0, i32 0
  %RDX.i541 = bitcast %union.anon* %16098 to i64*
  %16099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16100 = getelementptr inbounds %struct.GPR, %struct.GPR* %16099, i32 0, i32 15
  %16101 = getelementptr inbounds %struct.Reg, %struct.Reg* %16100, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %16101 to i64*
  %16102 = load i64, i64* %RBP.i542
  %16103 = sub i64 %16102, 4
  %16104 = load i64, i64* %PC.i540
  %16105 = add i64 %16104, 4
  store i64 %16105, i64* %PC.i540
  %16106 = inttoptr i64 %16103 to i32*
  %16107 = load i32, i32* %16106
  %16108 = sext i32 %16107 to i64
  store i64 %16108, i64* %RDX.i541, align 8
  store %struct.Memory* %loadMem_40b8da, %struct.Memory** %MEMORY
  %loadMem_40b8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %16109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16110 = getelementptr inbounds %struct.GPR, %struct.GPR* %16109, i32 0, i32 33
  %16111 = getelementptr inbounds %struct.Reg, %struct.Reg* %16110, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %16111 to i64*
  %16112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16113 = getelementptr inbounds %struct.GPR, %struct.GPR* %16112, i32 0, i32 7
  %16114 = getelementptr inbounds %struct.Reg, %struct.Reg* %16113, i32 0, i32 0
  %RDX.i539 = bitcast %union.anon* %16114 to i64*
  %16115 = load i64, i64* %RDX.i539
  %16116 = load i64, i64* %PC.i538
  %16117 = add i64 %16116, 7
  store i64 %16117, i64* %PC.i538
  %16118 = sext i64 %16115 to i128
  %16119 = and i128 %16118, -18446744073709551616
  %16120 = zext i64 %16115 to i128
  %16121 = or i128 %16119, %16120
  %16122 = mul i128 384, %16121
  %16123 = trunc i128 %16122 to i64
  store i64 %16123, i64* %RDX.i539, align 8
  %16124 = sext i64 %16123 to i128
  %16125 = icmp ne i128 %16124, %16122
  %16126 = zext i1 %16125 to i8
  %16127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16126, i8* %16127, align 1
  %16128 = trunc i128 %16122 to i32
  %16129 = and i32 %16128, 255
  %16130 = call i32 @llvm.ctpop.i32(i32 %16129)
  %16131 = trunc i32 %16130 to i8
  %16132 = and i8 %16131, 1
  %16133 = xor i8 %16132, 1
  %16134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16133, i8* %16134, align 1
  %16135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16135, align 1
  %16136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16136, align 1
  %16137 = lshr i64 %16123, 63
  %16138 = trunc i64 %16137 to i8
  %16139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16138, i8* %16139, align 1
  %16140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16126, i8* %16140, align 1
  store %struct.Memory* %loadMem_40b8de, %struct.Memory** %MEMORY
  %loadMem_40b8e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16142 = getelementptr inbounds %struct.GPR, %struct.GPR* %16141, i32 0, i32 33
  %16143 = getelementptr inbounds %struct.Reg, %struct.Reg* %16142, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %16143 to i64*
  %16144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16145 = getelementptr inbounds %struct.GPR, %struct.GPR* %16144, i32 0, i32 1
  %16146 = getelementptr inbounds %struct.Reg, %struct.Reg* %16145, i32 0, i32 0
  %RAX.i536 = bitcast %union.anon* %16146 to i64*
  %16147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16148 = getelementptr inbounds %struct.GPR, %struct.GPR* %16147, i32 0, i32 7
  %16149 = getelementptr inbounds %struct.Reg, %struct.Reg* %16148, i32 0, i32 0
  %RDX.i537 = bitcast %union.anon* %16149 to i64*
  %16150 = load i64, i64* %RAX.i536
  %16151 = load i64, i64* %RDX.i537
  %16152 = load i64, i64* %PC.i535
  %16153 = add i64 %16152, 3
  store i64 %16153, i64* %PC.i535
  %16154 = add i64 %16151, %16150
  store i64 %16154, i64* %RAX.i536, align 8
  %16155 = icmp ult i64 %16154, %16150
  %16156 = icmp ult i64 %16154, %16151
  %16157 = or i1 %16155, %16156
  %16158 = zext i1 %16157 to i8
  %16159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16158, i8* %16159, align 1
  %16160 = trunc i64 %16154 to i32
  %16161 = and i32 %16160, 255
  %16162 = call i32 @llvm.ctpop.i32(i32 %16161)
  %16163 = trunc i32 %16162 to i8
  %16164 = and i8 %16163, 1
  %16165 = xor i8 %16164, 1
  %16166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16165, i8* %16166, align 1
  %16167 = xor i64 %16151, %16150
  %16168 = xor i64 %16167, %16154
  %16169 = lshr i64 %16168, 4
  %16170 = trunc i64 %16169 to i8
  %16171 = and i8 %16170, 1
  %16172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16171, i8* %16172, align 1
  %16173 = icmp eq i64 %16154, 0
  %16174 = zext i1 %16173 to i8
  %16175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16174, i8* %16175, align 1
  %16176 = lshr i64 %16154, 63
  %16177 = trunc i64 %16176 to i8
  %16178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16177, i8* %16178, align 1
  %16179 = lshr i64 %16150, 63
  %16180 = lshr i64 %16151, 63
  %16181 = xor i64 %16176, %16179
  %16182 = xor i64 %16176, %16180
  %16183 = add i64 %16181, %16182
  %16184 = icmp eq i64 %16183, 2
  %16185 = zext i1 %16184 to i8
  %16186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16185, i8* %16186, align 1
  store %struct.Memory* %loadMem_40b8e5, %struct.Memory** %MEMORY
  %loadMem_40b8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16188 = getelementptr inbounds %struct.GPR, %struct.GPR* %16187, i32 0, i32 33
  %16189 = getelementptr inbounds %struct.Reg, %struct.Reg* %16188, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %16189 to i64*
  %16190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16191 = getelementptr inbounds %struct.GPR, %struct.GPR* %16190, i32 0, i32 7
  %16192 = getelementptr inbounds %struct.Reg, %struct.Reg* %16191, i32 0, i32 0
  %RDX.i533 = bitcast %union.anon* %16192 to i64*
  %16193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16194 = getelementptr inbounds %struct.GPR, %struct.GPR* %16193, i32 0, i32 15
  %16195 = getelementptr inbounds %struct.Reg, %struct.Reg* %16194, i32 0, i32 0
  %RBP.i534 = bitcast %union.anon* %16195 to i64*
  %16196 = load i64, i64* %RBP.i534
  %16197 = sub i64 %16196, 108
  %16198 = load i64, i64* %PC.i532
  %16199 = add i64 %16198, 4
  store i64 %16199, i64* %PC.i532
  %16200 = inttoptr i64 %16197 to i32*
  %16201 = load i32, i32* %16200
  %16202 = sext i32 %16201 to i64
  store i64 %16202, i64* %RDX.i533, align 8
  store %struct.Memory* %loadMem_40b8e8, %struct.Memory** %MEMORY
  %loadMem_40b8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %16203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16204 = getelementptr inbounds %struct.GPR, %struct.GPR* %16203, i32 0, i32 33
  %16205 = getelementptr inbounds %struct.Reg, %struct.Reg* %16204, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %16205 to i64*
  %16206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16207 = getelementptr inbounds %struct.GPR, %struct.GPR* %16206, i32 0, i32 7
  %16208 = getelementptr inbounds %struct.Reg, %struct.Reg* %16207, i32 0, i32 0
  %RDX.i531 = bitcast %union.anon* %16208 to i64*
  %16209 = load i64, i64* %RDX.i531
  %16210 = load i64, i64* %PC.i530
  %16211 = add i64 %16210, 4
  store i64 %16211, i64* %PC.i530
  %16212 = shl i64 %16209, 5
  %16213 = icmp slt i64 %16212, 0
  %16214 = shl i64 %16212, 1
  store i64 %16214, i64* %RDX.i531, align 8
  %16215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16216 = zext i1 %16213 to i8
  store i8 %16216, i8* %16215, align 1
  %16217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16218 = trunc i64 %16214 to i32
  %16219 = and i32 %16218, 254
  %16220 = call i32 @llvm.ctpop.i32(i32 %16219)
  %16221 = trunc i32 %16220 to i8
  %16222 = and i8 %16221, 1
  %16223 = xor i8 %16222, 1
  store i8 %16223, i8* %16217, align 1
  %16224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16224, align 1
  %16225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16226 = icmp eq i64 %16214, 0
  %16227 = zext i1 %16226 to i8
  store i8 %16227, i8* %16225, align 1
  %16228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16229 = lshr i64 %16214, 63
  %16230 = trunc i64 %16229 to i8
  store i8 %16230, i8* %16228, align 1
  %16231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16231, align 1
  store %struct.Memory* %loadMem_40b8ec, %struct.Memory** %MEMORY
  %loadMem_40b8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16233 = getelementptr inbounds %struct.GPR, %struct.GPR* %16232, i32 0, i32 33
  %16234 = getelementptr inbounds %struct.Reg, %struct.Reg* %16233, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %16234 to i64*
  %16235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16236 = getelementptr inbounds %struct.GPR, %struct.GPR* %16235, i32 0, i32 1
  %16237 = getelementptr inbounds %struct.Reg, %struct.Reg* %16236, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %16237 to i64*
  %16238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16239 = getelementptr inbounds %struct.GPR, %struct.GPR* %16238, i32 0, i32 7
  %16240 = getelementptr inbounds %struct.Reg, %struct.Reg* %16239, i32 0, i32 0
  %RDX.i529 = bitcast %union.anon* %16240 to i64*
  %16241 = load i64, i64* %RAX.i528
  %16242 = load i64, i64* %RDX.i529
  %16243 = load i64, i64* %PC.i527
  %16244 = add i64 %16243, 3
  store i64 %16244, i64* %PC.i527
  %16245 = add i64 %16242, %16241
  store i64 %16245, i64* %RAX.i528, align 8
  %16246 = icmp ult i64 %16245, %16241
  %16247 = icmp ult i64 %16245, %16242
  %16248 = or i1 %16246, %16247
  %16249 = zext i1 %16248 to i8
  %16250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16249, i8* %16250, align 1
  %16251 = trunc i64 %16245 to i32
  %16252 = and i32 %16251, 255
  %16253 = call i32 @llvm.ctpop.i32(i32 %16252)
  %16254 = trunc i32 %16253 to i8
  %16255 = and i8 %16254, 1
  %16256 = xor i8 %16255, 1
  %16257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16256, i8* %16257, align 1
  %16258 = xor i64 %16242, %16241
  %16259 = xor i64 %16258, %16245
  %16260 = lshr i64 %16259, 4
  %16261 = trunc i64 %16260 to i8
  %16262 = and i8 %16261, 1
  %16263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16262, i8* %16263, align 1
  %16264 = icmp eq i64 %16245, 0
  %16265 = zext i1 %16264 to i8
  %16266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16265, i8* %16266, align 1
  %16267 = lshr i64 %16245, 63
  %16268 = trunc i64 %16267 to i8
  %16269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16268, i8* %16269, align 1
  %16270 = lshr i64 %16241, 63
  %16271 = lshr i64 %16242, 63
  %16272 = xor i64 %16267, %16270
  %16273 = xor i64 %16267, %16271
  %16274 = add i64 %16272, %16273
  %16275 = icmp eq i64 %16274, 2
  %16276 = zext i1 %16275 to i8
  %16277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16276, i8* %16277, align 1
  store %struct.Memory* %loadMem_40b8f0, %struct.Memory** %MEMORY
  %loadMem_40b8f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16279 = getelementptr inbounds %struct.GPR, %struct.GPR* %16278, i32 0, i32 33
  %16280 = getelementptr inbounds %struct.Reg, %struct.Reg* %16279, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %16280 to i64*
  %16281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16282 = getelementptr inbounds %struct.GPR, %struct.GPR* %16281, i32 0, i32 7
  %16283 = getelementptr inbounds %struct.Reg, %struct.Reg* %16282, i32 0, i32 0
  %RDX.i525 = bitcast %union.anon* %16283 to i64*
  %16284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16285 = getelementptr inbounds %struct.GPR, %struct.GPR* %16284, i32 0, i32 15
  %16286 = getelementptr inbounds %struct.Reg, %struct.Reg* %16285, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %16286 to i64*
  %16287 = load i64, i64* %RBP.i526
  %16288 = sub i64 %16287, 16
  %16289 = load i64, i64* %PC.i524
  %16290 = add i64 %16289, 4
  store i64 %16290, i64* %PC.i524
  %16291 = inttoptr i64 %16288 to i32*
  %16292 = load i32, i32* %16291
  %16293 = sext i32 %16292 to i64
  store i64 %16293, i64* %RDX.i525, align 8
  store %struct.Memory* %loadMem_40b8f3, %struct.Memory** %MEMORY
  %loadMem_40b8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16295 = getelementptr inbounds %struct.GPR, %struct.GPR* %16294, i32 0, i32 33
  %16296 = getelementptr inbounds %struct.Reg, %struct.Reg* %16295, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %16296 to i64*
  %16297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16298 = getelementptr inbounds %struct.GPR, %struct.GPR* %16297, i32 0, i32 7
  %16299 = getelementptr inbounds %struct.Reg, %struct.Reg* %16298, i32 0, i32 0
  %RDX.i523 = bitcast %union.anon* %16299 to i64*
  %16300 = load i64, i64* %RDX.i523
  %16301 = load i64, i64* %PC.i522
  %16302 = add i64 %16301, 4
  store i64 %16302, i64* %PC.i522
  %16303 = shl i64 %16300, 3
  %16304 = icmp slt i64 %16303, 0
  %16305 = shl i64 %16303, 1
  store i64 %16305, i64* %RDX.i523, align 8
  %16306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16307 = zext i1 %16304 to i8
  store i8 %16307, i8* %16306, align 1
  %16308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16309 = trunc i64 %16305 to i32
  %16310 = and i32 %16309, 254
  %16311 = call i32 @llvm.ctpop.i32(i32 %16310)
  %16312 = trunc i32 %16311 to i8
  %16313 = and i8 %16312, 1
  %16314 = xor i8 %16313, 1
  store i8 %16314, i8* %16308, align 1
  %16315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16315, align 1
  %16316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16317 = icmp eq i64 %16305, 0
  %16318 = zext i1 %16317 to i8
  store i8 %16318, i8* %16316, align 1
  %16319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16320 = lshr i64 %16305, 63
  %16321 = trunc i64 %16320 to i8
  store i8 %16321, i8* %16319, align 1
  %16322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16322, align 1
  store %struct.Memory* %loadMem_40b8f7, %struct.Memory** %MEMORY
  %loadMem_40b8fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16324 = getelementptr inbounds %struct.GPR, %struct.GPR* %16323, i32 0, i32 33
  %16325 = getelementptr inbounds %struct.Reg, %struct.Reg* %16324, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %16325 to i64*
  %16326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16327 = getelementptr inbounds %struct.GPR, %struct.GPR* %16326, i32 0, i32 1
  %16328 = getelementptr inbounds %struct.Reg, %struct.Reg* %16327, i32 0, i32 0
  %RAX.i520 = bitcast %union.anon* %16328 to i64*
  %16329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16330 = getelementptr inbounds %struct.GPR, %struct.GPR* %16329, i32 0, i32 7
  %16331 = getelementptr inbounds %struct.Reg, %struct.Reg* %16330, i32 0, i32 0
  %RDX.i521 = bitcast %union.anon* %16331 to i64*
  %16332 = load i64, i64* %RAX.i520
  %16333 = load i64, i64* %RDX.i521
  %16334 = load i64, i64* %PC.i519
  %16335 = add i64 %16334, 3
  store i64 %16335, i64* %PC.i519
  %16336 = add i64 %16333, %16332
  store i64 %16336, i64* %RAX.i520, align 8
  %16337 = icmp ult i64 %16336, %16332
  %16338 = icmp ult i64 %16336, %16333
  %16339 = or i1 %16337, %16338
  %16340 = zext i1 %16339 to i8
  %16341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16340, i8* %16341, align 1
  %16342 = trunc i64 %16336 to i32
  %16343 = and i32 %16342, 255
  %16344 = call i32 @llvm.ctpop.i32(i32 %16343)
  %16345 = trunc i32 %16344 to i8
  %16346 = and i8 %16345, 1
  %16347 = xor i8 %16346, 1
  %16348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16347, i8* %16348, align 1
  %16349 = xor i64 %16333, %16332
  %16350 = xor i64 %16349, %16336
  %16351 = lshr i64 %16350, 4
  %16352 = trunc i64 %16351 to i8
  %16353 = and i8 %16352, 1
  %16354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16353, i8* %16354, align 1
  %16355 = icmp eq i64 %16336, 0
  %16356 = zext i1 %16355 to i8
  %16357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16356, i8* %16357, align 1
  %16358 = lshr i64 %16336, 63
  %16359 = trunc i64 %16358 to i8
  %16360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16359, i8* %16360, align 1
  %16361 = lshr i64 %16332, 63
  %16362 = lshr i64 %16333, 63
  %16363 = xor i64 %16358, %16361
  %16364 = xor i64 %16358, %16362
  %16365 = add i64 %16363, %16364
  %16366 = icmp eq i64 %16365, 2
  %16367 = zext i1 %16366 to i8
  %16368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16367, i8* %16368, align 1
  store %struct.Memory* %loadMem_40b8fb, %struct.Memory** %MEMORY
  %loadMem_40b8fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %16369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16370 = getelementptr inbounds %struct.GPR, %struct.GPR* %16369, i32 0, i32 33
  %16371 = getelementptr inbounds %struct.Reg, %struct.Reg* %16370, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %16371 to i64*
  %16372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16373 = getelementptr inbounds %struct.GPR, %struct.GPR* %16372, i32 0, i32 7
  %16374 = getelementptr inbounds %struct.Reg, %struct.Reg* %16373, i32 0, i32 0
  %RDX.i517 = bitcast %union.anon* %16374 to i64*
  %16375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16376 = getelementptr inbounds %struct.GPR, %struct.GPR* %16375, i32 0, i32 15
  %16377 = getelementptr inbounds %struct.Reg, %struct.Reg* %16376, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %16377 to i64*
  %16378 = load i64, i64* %RBP.i518
  %16379 = sub i64 %16378, 20
  %16380 = load i64, i64* %PC.i516
  %16381 = add i64 %16380, 4
  store i64 %16381, i64* %PC.i516
  %16382 = inttoptr i64 %16379 to i32*
  %16383 = load i32, i32* %16382
  %16384 = sext i32 %16383 to i64
  store i64 %16384, i64* %RDX.i517, align 8
  store %struct.Memory* %loadMem_40b8fe, %struct.Memory** %MEMORY
  %loadMem_40b902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16386 = getelementptr inbounds %struct.GPR, %struct.GPR* %16385, i32 0, i32 33
  %16387 = getelementptr inbounds %struct.Reg, %struct.Reg* %16386, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %16387 to i64*
  %16388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16389 = getelementptr inbounds %struct.GPR, %struct.GPR* %16388, i32 0, i32 1
  %16390 = getelementptr inbounds %struct.Reg, %struct.Reg* %16389, i32 0, i32 0
  %RAX.i513 = bitcast %union.anon* %16390 to i64*
  %16391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16392 = getelementptr inbounds %struct.GPR, %struct.GPR* %16391, i32 0, i32 5
  %16393 = getelementptr inbounds %struct.Reg, %struct.Reg* %16392, i32 0, i32 0
  %RCX.i514 = bitcast %union.anon* %16393 to i64*
  %16394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16395 = getelementptr inbounds %struct.GPR, %struct.GPR* %16394, i32 0, i32 7
  %16396 = getelementptr inbounds %struct.Reg, %struct.Reg* %16395, i32 0, i32 0
  %RDX.i515 = bitcast %union.anon* %16396 to i64*
  %16397 = load i64, i64* %RCX.i514
  %16398 = load i64, i64* %RAX.i513
  %16399 = load i64, i64* %RDX.i515
  %16400 = mul i64 %16399, 4
  %16401 = add i64 %16400, %16398
  %16402 = load i64, i64* %PC.i512
  %16403 = add i64 %16402, 4
  store i64 %16403, i64* %PC.i512
  %16404 = inttoptr i64 %16401 to i32*
  %16405 = load i32, i32* %16404
  %16406 = shl i64 %16397, 32
  %16407 = ashr exact i64 %16406, 32
  %16408 = sext i32 %16405 to i64
  %16409 = mul i64 %16408, %16407
  %16410 = trunc i64 %16409 to i32
  %16411 = and i64 %16409, 4294967295
  store i64 %16411, i64* %RCX.i514, align 8
  %16412 = shl i64 %16409, 32
  %16413 = ashr exact i64 %16412, 32
  %16414 = icmp ne i64 %16413, %16409
  %16415 = zext i1 %16414 to i8
  %16416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16415, i8* %16416, align 1
  %16417 = and i32 %16410, 255
  %16418 = call i32 @llvm.ctpop.i32(i32 %16417)
  %16419 = trunc i32 %16418 to i8
  %16420 = and i8 %16419, 1
  %16421 = xor i8 %16420, 1
  %16422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16421, i8* %16422, align 1
  %16423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16423, align 1
  %16424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16424, align 1
  %16425 = lshr i32 %16410, 31
  %16426 = trunc i32 %16425 to i8
  %16427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16426, i8* %16427, align 1
  %16428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16415, i8* %16428, align 1
  store %struct.Memory* %loadMem_40b902, %struct.Memory** %MEMORY
  %loadMem_40b906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16430 = getelementptr inbounds %struct.GPR, %struct.GPR* %16429, i32 0, i32 33
  %16431 = getelementptr inbounds %struct.Reg, %struct.Reg* %16430, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %16431 to i64*
  %16432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16433 = getelementptr inbounds %struct.GPR, %struct.GPR* %16432, i32 0, i32 9
  %16434 = getelementptr inbounds %struct.Reg, %struct.Reg* %16433, i32 0, i32 0
  %RSI.i510 = bitcast %union.anon* %16434 to i64*
  %16435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16436 = getelementptr inbounds %struct.GPR, %struct.GPR* %16435, i32 0, i32 15
  %16437 = getelementptr inbounds %struct.Reg, %struct.Reg* %16436, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %16437 to i64*
  %16438 = load i64, i64* %RBP.i511
  %16439 = sub i64 %16438, 104
  %16440 = load i64, i64* %PC.i509
  %16441 = add i64 %16440, 3
  store i64 %16441, i64* %PC.i509
  %16442 = inttoptr i64 %16439 to i32*
  %16443 = load i32, i32* %16442
  %16444 = zext i32 %16443 to i64
  store i64 %16444, i64* %RSI.i510, align 8
  store %struct.Memory* %loadMem_40b906, %struct.Memory** %MEMORY
  %loadMem_40b909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16446 = getelementptr inbounds %struct.GPR, %struct.GPR* %16445, i32 0, i32 33
  %16447 = getelementptr inbounds %struct.Reg, %struct.Reg* %16446, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %16447 to i64*
  %16448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16449 = getelementptr inbounds %struct.GPR, %struct.GPR* %16448, i32 0, i32 9
  %16450 = getelementptr inbounds %struct.Reg, %struct.Reg* %16449, i32 0, i32 0
  %RSI.i508 = bitcast %union.anon* %16450 to i64*
  %16451 = load i64, i64* %RSI.i508
  %16452 = load i64, i64* %PC.i507
  %16453 = add i64 %16452, 3
  store i64 %16453, i64* %PC.i507
  %16454 = trunc i64 %16451 to i32
  %16455 = sub i32 %16454, 4
  %16456 = zext i32 %16455 to i64
  store i64 %16456, i64* %RSI.i508, align 8
  %16457 = icmp ult i32 %16454, 4
  %16458 = zext i1 %16457 to i8
  %16459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16458, i8* %16459, align 1
  %16460 = and i32 %16455, 255
  %16461 = call i32 @llvm.ctpop.i32(i32 %16460)
  %16462 = trunc i32 %16461 to i8
  %16463 = and i8 %16462, 1
  %16464 = xor i8 %16463, 1
  %16465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16464, i8* %16465, align 1
  %16466 = xor i64 4, %16451
  %16467 = trunc i64 %16466 to i32
  %16468 = xor i32 %16467, %16455
  %16469 = lshr i32 %16468, 4
  %16470 = trunc i32 %16469 to i8
  %16471 = and i8 %16470, 1
  %16472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16471, i8* %16472, align 1
  %16473 = icmp eq i32 %16455, 0
  %16474 = zext i1 %16473 to i8
  %16475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16474, i8* %16475, align 1
  %16476 = lshr i32 %16455, 31
  %16477 = trunc i32 %16476 to i8
  %16478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16477, i8* %16478, align 1
  %16479 = lshr i32 %16454, 31
  %16480 = xor i32 %16476, %16479
  %16481 = add i32 %16480, %16479
  %16482 = icmp eq i32 %16481, 2
  %16483 = zext i1 %16482 to i8
  %16484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16483, i8* %16484, align 1
  store %struct.Memory* %loadMem_40b909, %struct.Memory** %MEMORY
  %loadMem_40b90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16486 = getelementptr inbounds %struct.GPR, %struct.GPR* %16485, i32 0, i32 33
  %16487 = getelementptr inbounds %struct.Reg, %struct.Reg* %16486, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %16487 to i64*
  %16488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16489 = getelementptr inbounds %struct.GPR, %struct.GPR* %16488, i32 0, i32 5
  %16490 = getelementptr inbounds %struct.Reg, %struct.Reg* %16489, i32 0, i32 0
  %ECX.i505 = bitcast %union.anon* %16490 to i32*
  %16491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16492 = getelementptr inbounds %struct.GPR, %struct.GPR* %16491, i32 0, i32 15
  %16493 = getelementptr inbounds %struct.Reg, %struct.Reg* %16492, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %16493 to i64*
  %16494 = load i64, i64* %RBP.i506
  %16495 = sub i64 %16494, 204
  %16496 = load i32, i32* %ECX.i505
  %16497 = zext i32 %16496 to i64
  %16498 = load i64, i64* %PC.i504
  %16499 = add i64 %16498, 6
  store i64 %16499, i64* %PC.i504
  %16500 = inttoptr i64 %16495 to i32*
  store i32 %16496, i32* %16500
  store %struct.Memory* %loadMem_40b90c, %struct.Memory** %MEMORY
  %loadMem_40b912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16502 = getelementptr inbounds %struct.GPR, %struct.GPR* %16501, i32 0, i32 33
  %16503 = getelementptr inbounds %struct.Reg, %struct.Reg* %16502, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %16503 to i64*
  %16504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16505 = getelementptr inbounds %struct.GPR, %struct.GPR* %16504, i32 0, i32 9
  %16506 = getelementptr inbounds %struct.Reg, %struct.Reg* %16505, i32 0, i32 0
  %ESI.i502 = bitcast %union.anon* %16506 to i32*
  %16507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16508 = getelementptr inbounds %struct.GPR, %struct.GPR* %16507, i32 0, i32 5
  %16509 = getelementptr inbounds %struct.Reg, %struct.Reg* %16508, i32 0, i32 0
  %RCX.i503 = bitcast %union.anon* %16509 to i64*
  %16510 = load i32, i32* %ESI.i502
  %16511 = zext i32 %16510 to i64
  %16512 = load i64, i64* %PC.i501
  %16513 = add i64 %16512, 2
  store i64 %16513, i64* %PC.i501
  %16514 = and i64 %16511, 4294967295
  store i64 %16514, i64* %RCX.i503, align 8
  store %struct.Memory* %loadMem_40b912, %struct.Memory** %MEMORY
  %loadMem_40b914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16516 = getelementptr inbounds %struct.GPR, %struct.GPR* %16515, i32 0, i32 33
  %16517 = getelementptr inbounds %struct.Reg, %struct.Reg* %16516, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %16517 to i64*
  %16518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16519 = getelementptr inbounds %struct.GPR, %struct.GPR* %16518, i32 0, i32 9
  %16520 = getelementptr inbounds %struct.Reg, %struct.Reg* %16519, i32 0, i32 0
  %RSI.i499 = bitcast %union.anon* %16520 to i64*
  %16521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16522 = getelementptr inbounds %struct.GPR, %struct.GPR* %16521, i32 0, i32 15
  %16523 = getelementptr inbounds %struct.Reg, %struct.Reg* %16522, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %16523 to i64*
  %16524 = load i64, i64* %RBP.i500
  %16525 = sub i64 %16524, 204
  %16526 = load i64, i64* %PC.i498
  %16527 = add i64 %16526, 6
  store i64 %16527, i64* %PC.i498
  %16528 = inttoptr i64 %16525 to i32*
  %16529 = load i32, i32* %16528
  %16530 = zext i32 %16529 to i64
  store i64 %16530, i64* %RSI.i499, align 8
  store %struct.Memory* %loadMem_40b914, %struct.Memory** %MEMORY
  %loadMem_40b91a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16532 = getelementptr inbounds %struct.GPR, %struct.GPR* %16531, i32 0, i32 33
  %16533 = getelementptr inbounds %struct.Reg, %struct.Reg* %16532, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %16533 to i64*
  %16534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16535 = getelementptr inbounds %struct.GPR, %struct.GPR* %16534, i32 0, i32 5
  %16536 = getelementptr inbounds %struct.Reg, %struct.Reg* %16535, i32 0, i32 0
  %16537 = bitcast %union.anon* %16536 to %struct.anon.2*
  %CL.i495 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %16537, i32 0, i32 0
  %16538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16539 = getelementptr inbounds %struct.GPR, %struct.GPR* %16538, i32 0, i32 9
  %16540 = getelementptr inbounds %struct.Reg, %struct.Reg* %16539, i32 0, i32 0
  %RSI.i496 = bitcast %union.anon* %16540 to i64*
  %16541 = load i64, i64* %RSI.i496
  %16542 = load i8, i8* %CL.i495
  %16543 = zext i8 %16542 to i64
  %16544 = load i64, i64* %PC.i494
  %16545 = add i64 %16544, 2
  store i64 %16545, i64* %PC.i494
  %16546 = trunc i64 %16543 to i5
  switch i5 %16546, label %16553 [
    i5 0, label %routine_shll__cl___esi.exit497
    i5 1, label %16547
  ]

; <label>:16547:                                  ; preds = %block_40b8cd
  %16548 = trunc i64 %16541 to i32
  %16549 = shl i32 %16548, 1
  %16550 = icmp slt i32 %16548, 0
  %16551 = icmp slt i32 %16549, 0
  %16552 = xor i1 %16550, %16551
  br label %16562

; <label>:16553:                                  ; preds = %block_40b8cd
  %16554 = and i64 %16543, 31
  %16555 = add i64 %16554, 4294967295
  %16556 = and i64 %16541, 4294967295
  %16557 = and i64 %16555, 4294967295
  %16558 = shl i64 %16556, %16557
  %16559 = trunc i64 %16558 to i32
  %16560 = icmp slt i32 %16559, 0
  %16561 = shl i32 %16559, 1
  br label %16562

; <label>:16562:                                  ; preds = %16553, %16547
  %16563 = phi i1 [ %16550, %16547 ], [ %16560, %16553 ]
  %16564 = phi i1 [ %16552, %16547 ], [ false, %16553 ]
  %16565 = phi i32 [ %16549, %16547 ], [ %16561, %16553 ]
  %16566 = zext i32 %16565 to i64
  store i64 %16566, i64* %RSI.i496, align 8
  %16567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16568 = zext i1 %16563 to i8
  store i8 %16568, i8* %16567, align 1
  %16569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16570 = and i32 %16565, 254
  %16571 = call i32 @llvm.ctpop.i32(i32 %16570)
  %16572 = trunc i32 %16571 to i8
  %16573 = and i8 %16572, 1
  %16574 = xor i8 %16573, 1
  store i8 %16574, i8* %16569, align 1
  %16575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16575, align 1
  %16576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16577 = icmp eq i32 %16565, 0
  %16578 = zext i1 %16577 to i8
  store i8 %16578, i8* %16576, align 1
  %16579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16580 = lshr i32 %16565, 31
  %16581 = trunc i32 %16580 to i8
  store i8 %16581, i8* %16579, align 1
  %16582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16583 = zext i1 %16564 to i8
  store i8 %16583, i8* %16582, align 1
  br label %routine_shll__cl___esi.exit497

routine_shll__cl___esi.exit497:                   ; preds = %block_40b8cd, %16562
  store %struct.Memory* %loadMem_40b91a, %struct.Memory** %MEMORY
  %loadMem_40b91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16585 = getelementptr inbounds %struct.GPR, %struct.GPR* %16584, i32 0, i32 33
  %16586 = getelementptr inbounds %struct.Reg, %struct.Reg* %16585, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %16586 to i64*
  %16587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16588 = getelementptr inbounds %struct.GPR, %struct.GPR* %16587, i32 0, i32 9
  %16589 = getelementptr inbounds %struct.Reg, %struct.Reg* %16588, i32 0, i32 0
  %ESI.i492 = bitcast %union.anon* %16589 to i32*
  %16590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16591 = getelementptr inbounds %struct.GPR, %struct.GPR* %16590, i32 0, i32 15
  %16592 = getelementptr inbounds %struct.Reg, %struct.Reg* %16591, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %16592 to i64*
  %16593 = load i64, i64* %RBP.i493
  %16594 = sub i64 %16593, 32
  %16595 = load i32, i32* %ESI.i492
  %16596 = zext i32 %16595 to i64
  %16597 = load i64, i64* %PC.i491
  %16598 = add i64 %16597, 3
  store i64 %16598, i64* %PC.i491
  %16599 = inttoptr i64 %16594 to i32*
  store i32 %16595, i32* %16599
  store %struct.Memory* %loadMem_40b91c, %struct.Memory** %MEMORY
  %loadMem_40b91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16601 = getelementptr inbounds %struct.GPR, %struct.GPR* %16600, i32 0, i32 33
  %16602 = getelementptr inbounds %struct.Reg, %struct.Reg* %16601, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %16602 to i64*
  %16603 = load i64, i64* %PC.i490
  %16604 = add i64 %16603, 87
  %16605 = load i64, i64* %PC.i490
  %16606 = add i64 %16605, 5
  store i64 %16606, i64* %PC.i490
  %16607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16604, i64* %16607, align 8
  store %struct.Memory* %loadMem_40b91f, %struct.Memory** %MEMORY
  br label %block_.L_40b976

block_.L_40b924:                                  ; preds = %block_.L_40b8c3
  %loadMem_40b924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16609 = getelementptr inbounds %struct.GPR, %struct.GPR* %16608, i32 0, i32 33
  %16610 = getelementptr inbounds %struct.Reg, %struct.Reg* %16609, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %16610 to i64*
  %16611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16612 = getelementptr inbounds %struct.GPR, %struct.GPR* %16611, i32 0, i32 1
  %16613 = getelementptr inbounds %struct.Reg, %struct.Reg* %16612, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %16613 to i64*
  %16614 = load i64, i64* %PC.i488
  %16615 = add i64 %16614, 10
  store i64 %16615, i64* %PC.i488
  store i64 ptrtoint (%G__0x723b20_type* @G__0x723b20 to i64), i64* %RAX.i489, align 8
  store %struct.Memory* %loadMem_40b924, %struct.Memory** %MEMORY
  %loadMem_40b92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16617 = getelementptr inbounds %struct.GPR, %struct.GPR* %16616, i32 0, i32 33
  %16618 = getelementptr inbounds %struct.Reg, %struct.Reg* %16617, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %16618 to i64*
  %16619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16620 = getelementptr inbounds %struct.GPR, %struct.GPR* %16619, i32 0, i32 5
  %16621 = getelementptr inbounds %struct.Reg, %struct.Reg* %16620, i32 0, i32 0
  %RCX.i486 = bitcast %union.anon* %16621 to i64*
  %16622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16623 = getelementptr inbounds %struct.GPR, %struct.GPR* %16622, i32 0, i32 15
  %16624 = getelementptr inbounds %struct.Reg, %struct.Reg* %16623, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %16624 to i64*
  %16625 = load i64, i64* %RBP.i487
  %16626 = sub i64 %16625, 72
  %16627 = load i64, i64* %PC.i485
  %16628 = add i64 %16627, 3
  store i64 %16628, i64* %PC.i485
  %16629 = inttoptr i64 %16626 to i32*
  %16630 = load i32, i32* %16629
  %16631 = zext i32 %16630 to i64
  store i64 %16631, i64* %RCX.i486, align 8
  store %struct.Memory* %loadMem_40b92e, %struct.Memory** %MEMORY
  %loadMem_40b931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16633 = getelementptr inbounds %struct.GPR, %struct.GPR* %16632, i32 0, i32 33
  %16634 = getelementptr inbounds %struct.Reg, %struct.Reg* %16633, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %16634 to i64*
  %16635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16636 = getelementptr inbounds %struct.GPR, %struct.GPR* %16635, i32 0, i32 7
  %16637 = getelementptr inbounds %struct.Reg, %struct.Reg* %16636, i32 0, i32 0
  %RDX.i483 = bitcast %union.anon* %16637 to i64*
  %16638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16639 = getelementptr inbounds %struct.GPR, %struct.GPR* %16638, i32 0, i32 15
  %16640 = getelementptr inbounds %struct.Reg, %struct.Reg* %16639, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %16640 to i64*
  %16641 = load i64, i64* %RBP.i484
  %16642 = sub i64 %16641, 4
  %16643 = load i64, i64* %PC.i482
  %16644 = add i64 %16643, 4
  store i64 %16644, i64* %PC.i482
  %16645 = inttoptr i64 %16642 to i32*
  %16646 = load i32, i32* %16645
  %16647 = sext i32 %16646 to i64
  store i64 %16647, i64* %RDX.i483, align 8
  store %struct.Memory* %loadMem_40b931, %struct.Memory** %MEMORY
  %loadMem_40b935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16649 = getelementptr inbounds %struct.GPR, %struct.GPR* %16648, i32 0, i32 33
  %16650 = getelementptr inbounds %struct.Reg, %struct.Reg* %16649, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %16650 to i64*
  %16651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16652 = getelementptr inbounds %struct.GPR, %struct.GPR* %16651, i32 0, i32 7
  %16653 = getelementptr inbounds %struct.Reg, %struct.Reg* %16652, i32 0, i32 0
  %RDX.i481 = bitcast %union.anon* %16653 to i64*
  %16654 = load i64, i64* %RDX.i481
  %16655 = load i64, i64* %PC.i480
  %16656 = add i64 %16655, 7
  store i64 %16656, i64* %PC.i480
  %16657 = sext i64 %16654 to i128
  %16658 = and i128 %16657, -18446744073709551616
  %16659 = zext i64 %16654 to i128
  %16660 = or i128 %16658, %16659
  %16661 = mul i128 384, %16660
  %16662 = trunc i128 %16661 to i64
  store i64 %16662, i64* %RDX.i481, align 8
  %16663 = sext i64 %16662 to i128
  %16664 = icmp ne i128 %16663, %16661
  %16665 = zext i1 %16664 to i8
  %16666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16665, i8* %16666, align 1
  %16667 = trunc i128 %16661 to i32
  %16668 = and i32 %16667, 255
  %16669 = call i32 @llvm.ctpop.i32(i32 %16668)
  %16670 = trunc i32 %16669 to i8
  %16671 = and i8 %16670, 1
  %16672 = xor i8 %16671, 1
  %16673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16672, i8* %16673, align 1
  %16674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16674, align 1
  %16675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16675, align 1
  %16676 = lshr i64 %16662, 63
  %16677 = trunc i64 %16676 to i8
  %16678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16677, i8* %16678, align 1
  %16679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16665, i8* %16679, align 1
  store %struct.Memory* %loadMem_40b935, %struct.Memory** %MEMORY
  %loadMem_40b93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16681 = getelementptr inbounds %struct.GPR, %struct.GPR* %16680, i32 0, i32 33
  %16682 = getelementptr inbounds %struct.Reg, %struct.Reg* %16681, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %16682 to i64*
  %16683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16684 = getelementptr inbounds %struct.GPR, %struct.GPR* %16683, i32 0, i32 1
  %16685 = getelementptr inbounds %struct.Reg, %struct.Reg* %16684, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %16685 to i64*
  %16686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16687 = getelementptr inbounds %struct.GPR, %struct.GPR* %16686, i32 0, i32 7
  %16688 = getelementptr inbounds %struct.Reg, %struct.Reg* %16687, i32 0, i32 0
  %RDX.i479 = bitcast %union.anon* %16688 to i64*
  %16689 = load i64, i64* %RAX.i478
  %16690 = load i64, i64* %RDX.i479
  %16691 = load i64, i64* %PC.i477
  %16692 = add i64 %16691, 3
  store i64 %16692, i64* %PC.i477
  %16693 = add i64 %16690, %16689
  store i64 %16693, i64* %RAX.i478, align 8
  %16694 = icmp ult i64 %16693, %16689
  %16695 = icmp ult i64 %16693, %16690
  %16696 = or i1 %16694, %16695
  %16697 = zext i1 %16696 to i8
  %16698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16697, i8* %16698, align 1
  %16699 = trunc i64 %16693 to i32
  %16700 = and i32 %16699, 255
  %16701 = call i32 @llvm.ctpop.i32(i32 %16700)
  %16702 = trunc i32 %16701 to i8
  %16703 = and i8 %16702, 1
  %16704 = xor i8 %16703, 1
  %16705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16704, i8* %16705, align 1
  %16706 = xor i64 %16690, %16689
  %16707 = xor i64 %16706, %16693
  %16708 = lshr i64 %16707, 4
  %16709 = trunc i64 %16708 to i8
  %16710 = and i8 %16709, 1
  %16711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16710, i8* %16711, align 1
  %16712 = icmp eq i64 %16693, 0
  %16713 = zext i1 %16712 to i8
  %16714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16713, i8* %16714, align 1
  %16715 = lshr i64 %16693, 63
  %16716 = trunc i64 %16715 to i8
  %16717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16716, i8* %16717, align 1
  %16718 = lshr i64 %16689, 63
  %16719 = lshr i64 %16690, 63
  %16720 = xor i64 %16715, %16718
  %16721 = xor i64 %16715, %16719
  %16722 = add i64 %16720, %16721
  %16723 = icmp eq i64 %16722, 2
  %16724 = zext i1 %16723 to i8
  %16725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16724, i8* %16725, align 1
  store %struct.Memory* %loadMem_40b93c, %struct.Memory** %MEMORY
  %loadMem_40b93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16727 = getelementptr inbounds %struct.GPR, %struct.GPR* %16726, i32 0, i32 33
  %16728 = getelementptr inbounds %struct.Reg, %struct.Reg* %16727, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %16728 to i64*
  %16729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16730 = getelementptr inbounds %struct.GPR, %struct.GPR* %16729, i32 0, i32 7
  %16731 = getelementptr inbounds %struct.Reg, %struct.Reg* %16730, i32 0, i32 0
  %RDX.i475 = bitcast %union.anon* %16731 to i64*
  %16732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16733 = getelementptr inbounds %struct.GPR, %struct.GPR* %16732, i32 0, i32 15
  %16734 = getelementptr inbounds %struct.Reg, %struct.Reg* %16733, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %16734 to i64*
  %16735 = load i64, i64* %RBP.i476
  %16736 = sub i64 %16735, 108
  %16737 = load i64, i64* %PC.i474
  %16738 = add i64 %16737, 4
  store i64 %16738, i64* %PC.i474
  %16739 = inttoptr i64 %16736 to i32*
  %16740 = load i32, i32* %16739
  %16741 = sext i32 %16740 to i64
  store i64 %16741, i64* %RDX.i475, align 8
  store %struct.Memory* %loadMem_40b93f, %struct.Memory** %MEMORY
  %loadMem_40b943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16743 = getelementptr inbounds %struct.GPR, %struct.GPR* %16742, i32 0, i32 33
  %16744 = getelementptr inbounds %struct.Reg, %struct.Reg* %16743, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %16744 to i64*
  %16745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16746 = getelementptr inbounds %struct.GPR, %struct.GPR* %16745, i32 0, i32 7
  %16747 = getelementptr inbounds %struct.Reg, %struct.Reg* %16746, i32 0, i32 0
  %RDX.i473 = bitcast %union.anon* %16747 to i64*
  %16748 = load i64, i64* %RDX.i473
  %16749 = load i64, i64* %PC.i472
  %16750 = add i64 %16749, 4
  store i64 %16750, i64* %PC.i472
  %16751 = shl i64 %16748, 5
  %16752 = icmp slt i64 %16751, 0
  %16753 = shl i64 %16751, 1
  store i64 %16753, i64* %RDX.i473, align 8
  %16754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16755 = zext i1 %16752 to i8
  store i8 %16755, i8* %16754, align 1
  %16756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16757 = trunc i64 %16753 to i32
  %16758 = and i32 %16757, 254
  %16759 = call i32 @llvm.ctpop.i32(i32 %16758)
  %16760 = trunc i32 %16759 to i8
  %16761 = and i8 %16760, 1
  %16762 = xor i8 %16761, 1
  store i8 %16762, i8* %16756, align 1
  %16763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16763, align 1
  %16764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16765 = icmp eq i64 %16753, 0
  %16766 = zext i1 %16765 to i8
  store i8 %16766, i8* %16764, align 1
  %16767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16768 = lshr i64 %16753, 63
  %16769 = trunc i64 %16768 to i8
  store i8 %16769, i8* %16767, align 1
  %16770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16770, align 1
  store %struct.Memory* %loadMem_40b943, %struct.Memory** %MEMORY
  %loadMem_40b947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16772 = getelementptr inbounds %struct.GPR, %struct.GPR* %16771, i32 0, i32 33
  %16773 = getelementptr inbounds %struct.Reg, %struct.Reg* %16772, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %16773 to i64*
  %16774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16775 = getelementptr inbounds %struct.GPR, %struct.GPR* %16774, i32 0, i32 1
  %16776 = getelementptr inbounds %struct.Reg, %struct.Reg* %16775, i32 0, i32 0
  %RAX.i470 = bitcast %union.anon* %16776 to i64*
  %16777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16778 = getelementptr inbounds %struct.GPR, %struct.GPR* %16777, i32 0, i32 7
  %16779 = getelementptr inbounds %struct.Reg, %struct.Reg* %16778, i32 0, i32 0
  %RDX.i471 = bitcast %union.anon* %16779 to i64*
  %16780 = load i64, i64* %RAX.i470
  %16781 = load i64, i64* %RDX.i471
  %16782 = load i64, i64* %PC.i469
  %16783 = add i64 %16782, 3
  store i64 %16783, i64* %PC.i469
  %16784 = add i64 %16781, %16780
  store i64 %16784, i64* %RAX.i470, align 8
  %16785 = icmp ult i64 %16784, %16780
  %16786 = icmp ult i64 %16784, %16781
  %16787 = or i1 %16785, %16786
  %16788 = zext i1 %16787 to i8
  %16789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16788, i8* %16789, align 1
  %16790 = trunc i64 %16784 to i32
  %16791 = and i32 %16790, 255
  %16792 = call i32 @llvm.ctpop.i32(i32 %16791)
  %16793 = trunc i32 %16792 to i8
  %16794 = and i8 %16793, 1
  %16795 = xor i8 %16794, 1
  %16796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16795, i8* %16796, align 1
  %16797 = xor i64 %16781, %16780
  %16798 = xor i64 %16797, %16784
  %16799 = lshr i64 %16798, 4
  %16800 = trunc i64 %16799 to i8
  %16801 = and i8 %16800, 1
  %16802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16801, i8* %16802, align 1
  %16803 = icmp eq i64 %16784, 0
  %16804 = zext i1 %16803 to i8
  %16805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16804, i8* %16805, align 1
  %16806 = lshr i64 %16784, 63
  %16807 = trunc i64 %16806 to i8
  %16808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16807, i8* %16808, align 1
  %16809 = lshr i64 %16780, 63
  %16810 = lshr i64 %16781, 63
  %16811 = xor i64 %16806, %16809
  %16812 = xor i64 %16806, %16810
  %16813 = add i64 %16811, %16812
  %16814 = icmp eq i64 %16813, 2
  %16815 = zext i1 %16814 to i8
  %16816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16815, i8* %16816, align 1
  store %struct.Memory* %loadMem_40b947, %struct.Memory** %MEMORY
  %loadMem_40b94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16818 = getelementptr inbounds %struct.GPR, %struct.GPR* %16817, i32 0, i32 33
  %16819 = getelementptr inbounds %struct.Reg, %struct.Reg* %16818, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %16819 to i64*
  %16820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16821 = getelementptr inbounds %struct.GPR, %struct.GPR* %16820, i32 0, i32 7
  %16822 = getelementptr inbounds %struct.Reg, %struct.Reg* %16821, i32 0, i32 0
  %RDX.i467 = bitcast %union.anon* %16822 to i64*
  %16823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16824 = getelementptr inbounds %struct.GPR, %struct.GPR* %16823, i32 0, i32 15
  %16825 = getelementptr inbounds %struct.Reg, %struct.Reg* %16824, i32 0, i32 0
  %RBP.i468 = bitcast %union.anon* %16825 to i64*
  %16826 = load i64, i64* %RBP.i468
  %16827 = sub i64 %16826, 16
  %16828 = load i64, i64* %PC.i466
  %16829 = add i64 %16828, 4
  store i64 %16829, i64* %PC.i466
  %16830 = inttoptr i64 %16827 to i32*
  %16831 = load i32, i32* %16830
  %16832 = sext i32 %16831 to i64
  store i64 %16832, i64* %RDX.i467, align 8
  store %struct.Memory* %loadMem_40b94a, %struct.Memory** %MEMORY
  %loadMem_40b94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16834 = getelementptr inbounds %struct.GPR, %struct.GPR* %16833, i32 0, i32 33
  %16835 = getelementptr inbounds %struct.Reg, %struct.Reg* %16834, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %16835 to i64*
  %16836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16837 = getelementptr inbounds %struct.GPR, %struct.GPR* %16836, i32 0, i32 7
  %16838 = getelementptr inbounds %struct.Reg, %struct.Reg* %16837, i32 0, i32 0
  %RDX.i465 = bitcast %union.anon* %16838 to i64*
  %16839 = load i64, i64* %RDX.i465
  %16840 = load i64, i64* %PC.i464
  %16841 = add i64 %16840, 4
  store i64 %16841, i64* %PC.i464
  %16842 = shl i64 %16839, 3
  %16843 = icmp slt i64 %16842, 0
  %16844 = shl i64 %16842, 1
  store i64 %16844, i64* %RDX.i465, align 8
  %16845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16846 = zext i1 %16843 to i8
  store i8 %16846, i8* %16845, align 1
  %16847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16848 = trunc i64 %16844 to i32
  %16849 = and i32 %16848, 254
  %16850 = call i32 @llvm.ctpop.i32(i32 %16849)
  %16851 = trunc i32 %16850 to i8
  %16852 = and i8 %16851, 1
  %16853 = xor i8 %16852, 1
  store i8 %16853, i8* %16847, align 1
  %16854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16854, align 1
  %16855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16856 = icmp eq i64 %16844, 0
  %16857 = zext i1 %16856 to i8
  store i8 %16857, i8* %16855, align 1
  %16858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16859 = lshr i64 %16844, 63
  %16860 = trunc i64 %16859 to i8
  store i8 %16860, i8* %16858, align 1
  %16861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %16861, align 1
  store %struct.Memory* %loadMem_40b94e, %struct.Memory** %MEMORY
  %loadMem_40b952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16863 = getelementptr inbounds %struct.GPR, %struct.GPR* %16862, i32 0, i32 33
  %16864 = getelementptr inbounds %struct.Reg, %struct.Reg* %16863, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %16864 to i64*
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16866 = getelementptr inbounds %struct.GPR, %struct.GPR* %16865, i32 0, i32 1
  %16867 = getelementptr inbounds %struct.Reg, %struct.Reg* %16866, i32 0, i32 0
  %RAX.i462 = bitcast %union.anon* %16867 to i64*
  %16868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16869 = getelementptr inbounds %struct.GPR, %struct.GPR* %16868, i32 0, i32 7
  %16870 = getelementptr inbounds %struct.Reg, %struct.Reg* %16869, i32 0, i32 0
  %RDX.i463 = bitcast %union.anon* %16870 to i64*
  %16871 = load i64, i64* %RAX.i462
  %16872 = load i64, i64* %RDX.i463
  %16873 = load i64, i64* %PC.i461
  %16874 = add i64 %16873, 3
  store i64 %16874, i64* %PC.i461
  %16875 = add i64 %16872, %16871
  store i64 %16875, i64* %RAX.i462, align 8
  %16876 = icmp ult i64 %16875, %16871
  %16877 = icmp ult i64 %16875, %16872
  %16878 = or i1 %16876, %16877
  %16879 = zext i1 %16878 to i8
  %16880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16879, i8* %16880, align 1
  %16881 = trunc i64 %16875 to i32
  %16882 = and i32 %16881, 255
  %16883 = call i32 @llvm.ctpop.i32(i32 %16882)
  %16884 = trunc i32 %16883 to i8
  %16885 = and i8 %16884, 1
  %16886 = xor i8 %16885, 1
  %16887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16886, i8* %16887, align 1
  %16888 = xor i64 %16872, %16871
  %16889 = xor i64 %16888, %16875
  %16890 = lshr i64 %16889, 4
  %16891 = trunc i64 %16890 to i8
  %16892 = and i8 %16891, 1
  %16893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16892, i8* %16893, align 1
  %16894 = icmp eq i64 %16875, 0
  %16895 = zext i1 %16894 to i8
  %16896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16895, i8* %16896, align 1
  %16897 = lshr i64 %16875, 63
  %16898 = trunc i64 %16897 to i8
  %16899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16898, i8* %16899, align 1
  %16900 = lshr i64 %16871, 63
  %16901 = lshr i64 %16872, 63
  %16902 = xor i64 %16897, %16900
  %16903 = xor i64 %16897, %16901
  %16904 = add i64 %16902, %16903
  %16905 = icmp eq i64 %16904, 2
  %16906 = zext i1 %16905 to i8
  %16907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16906, i8* %16907, align 1
  store %struct.Memory* %loadMem_40b952, %struct.Memory** %MEMORY
  %loadMem_40b955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16909 = getelementptr inbounds %struct.GPR, %struct.GPR* %16908, i32 0, i32 33
  %16910 = getelementptr inbounds %struct.Reg, %struct.Reg* %16909, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %16910 to i64*
  %16911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16912 = getelementptr inbounds %struct.GPR, %struct.GPR* %16911, i32 0, i32 7
  %16913 = getelementptr inbounds %struct.Reg, %struct.Reg* %16912, i32 0, i32 0
  %RDX.i459 = bitcast %union.anon* %16913 to i64*
  %16914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16915 = getelementptr inbounds %struct.GPR, %struct.GPR* %16914, i32 0, i32 15
  %16916 = getelementptr inbounds %struct.Reg, %struct.Reg* %16915, i32 0, i32 0
  %RBP.i460 = bitcast %union.anon* %16916 to i64*
  %16917 = load i64, i64* %RBP.i460
  %16918 = sub i64 %16917, 20
  %16919 = load i64, i64* %PC.i458
  %16920 = add i64 %16919, 4
  store i64 %16920, i64* %PC.i458
  %16921 = inttoptr i64 %16918 to i32*
  %16922 = load i32, i32* %16921
  %16923 = sext i32 %16922 to i64
  store i64 %16923, i64* %RDX.i459, align 8
  store %struct.Memory* %loadMem_40b955, %struct.Memory** %MEMORY
  %loadMem_40b959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16925 = getelementptr inbounds %struct.GPR, %struct.GPR* %16924, i32 0, i32 33
  %16926 = getelementptr inbounds %struct.Reg, %struct.Reg* %16925, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %16926 to i64*
  %16927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16928 = getelementptr inbounds %struct.GPR, %struct.GPR* %16927, i32 0, i32 1
  %16929 = getelementptr inbounds %struct.Reg, %struct.Reg* %16928, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %16929 to i64*
  %16930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16931 = getelementptr inbounds %struct.GPR, %struct.GPR* %16930, i32 0, i32 5
  %16932 = getelementptr inbounds %struct.Reg, %struct.Reg* %16931, i32 0, i32 0
  %RCX.i456 = bitcast %union.anon* %16932 to i64*
  %16933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16934 = getelementptr inbounds %struct.GPR, %struct.GPR* %16933, i32 0, i32 7
  %16935 = getelementptr inbounds %struct.Reg, %struct.Reg* %16934, i32 0, i32 0
  %RDX.i457 = bitcast %union.anon* %16935 to i64*
  %16936 = load i64, i64* %RCX.i456
  %16937 = load i64, i64* %RAX.i455
  %16938 = load i64, i64* %RDX.i457
  %16939 = mul i64 %16938, 4
  %16940 = add i64 %16939, %16937
  %16941 = load i64, i64* %PC.i454
  %16942 = add i64 %16941, 4
  store i64 %16942, i64* %PC.i454
  %16943 = inttoptr i64 %16940 to i32*
  %16944 = load i32, i32* %16943
  %16945 = shl i64 %16936, 32
  %16946 = ashr exact i64 %16945, 32
  %16947 = sext i32 %16944 to i64
  %16948 = mul i64 %16947, %16946
  %16949 = trunc i64 %16948 to i32
  %16950 = and i64 %16948, 4294967295
  store i64 %16950, i64* %RCX.i456, align 8
  %16951 = shl i64 %16948, 32
  %16952 = ashr exact i64 %16951, 32
  %16953 = icmp ne i64 %16952, %16948
  %16954 = zext i1 %16953 to i8
  %16955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16954, i8* %16955, align 1
  %16956 = and i32 %16949, 255
  %16957 = call i32 @llvm.ctpop.i32(i32 %16956)
  %16958 = trunc i32 %16957 to i8
  %16959 = and i8 %16958, 1
  %16960 = xor i8 %16959, 1
  %16961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16960, i8* %16961, align 1
  %16962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16962, align 1
  %16963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16963, align 1
  %16964 = lshr i32 %16949, 31
  %16965 = trunc i32 %16964 to i8
  %16966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16965, i8* %16966, align 1
  %16967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16954, i8* %16967, align 1
  store %struct.Memory* %loadMem_40b959, %struct.Memory** %MEMORY
  %loadMem_40b95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16969 = getelementptr inbounds %struct.GPR, %struct.GPR* %16968, i32 0, i32 33
  %16970 = getelementptr inbounds %struct.Reg, %struct.Reg* %16969, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %16970 to i64*
  %16971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16972 = getelementptr inbounds %struct.GPR, %struct.GPR* %16971, i32 0, i32 9
  %16973 = getelementptr inbounds %struct.Reg, %struct.Reg* %16972, i32 0, i32 0
  %RSI.i452 = bitcast %union.anon* %16973 to i64*
  %16974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16975 = getelementptr inbounds %struct.GPR, %struct.GPR* %16974, i32 0, i32 15
  %16976 = getelementptr inbounds %struct.Reg, %struct.Reg* %16975, i32 0, i32 0
  %RBP.i453 = bitcast %union.anon* %16976 to i64*
  %16977 = load i64, i64* %RBP.i453
  %16978 = sub i64 %16977, 104
  %16979 = load i64, i64* %PC.i451
  %16980 = add i64 %16979, 3
  store i64 %16980, i64* %PC.i451
  %16981 = inttoptr i64 %16978 to i32*
  %16982 = load i32, i32* %16981
  %16983 = zext i32 %16982 to i64
  store i64 %16983, i64* %RSI.i452, align 8
  store %struct.Memory* %loadMem_40b95d, %struct.Memory** %MEMORY
  %loadMem_40b960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16985 = getelementptr inbounds %struct.GPR, %struct.GPR* %16984, i32 0, i32 33
  %16986 = getelementptr inbounds %struct.Reg, %struct.Reg* %16985, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %16986 to i64*
  %16987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16988 = getelementptr inbounds %struct.GPR, %struct.GPR* %16987, i32 0, i32 9
  %16989 = getelementptr inbounds %struct.Reg, %struct.Reg* %16988, i32 0, i32 0
  %RSI.i450 = bitcast %union.anon* %16989 to i64*
  %16990 = load i64, i64* %RSI.i450
  %16991 = load i64, i64* %PC.i449
  %16992 = add i64 %16991, 3
  store i64 %16992, i64* %PC.i449
  %16993 = trunc i64 %16990 to i32
  %16994 = sub i32 %16993, 4
  %16995 = zext i32 %16994 to i64
  store i64 %16995, i64* %RSI.i450, align 8
  %16996 = icmp ult i32 %16993, 4
  %16997 = zext i1 %16996 to i8
  %16998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16997, i8* %16998, align 1
  %16999 = and i32 %16994, 255
  %17000 = call i32 @llvm.ctpop.i32(i32 %16999)
  %17001 = trunc i32 %17000 to i8
  %17002 = and i8 %17001, 1
  %17003 = xor i8 %17002, 1
  %17004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17003, i8* %17004, align 1
  %17005 = xor i64 4, %16990
  %17006 = trunc i64 %17005 to i32
  %17007 = xor i32 %17006, %16994
  %17008 = lshr i32 %17007, 4
  %17009 = trunc i32 %17008 to i8
  %17010 = and i8 %17009, 1
  %17011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17010, i8* %17011, align 1
  %17012 = icmp eq i32 %16994, 0
  %17013 = zext i1 %17012 to i8
  %17014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17013, i8* %17014, align 1
  %17015 = lshr i32 %16994, 31
  %17016 = trunc i32 %17015 to i8
  %17017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17016, i8* %17017, align 1
  %17018 = lshr i32 %16993, 31
  %17019 = xor i32 %17015, %17018
  %17020 = add i32 %17019, %17018
  %17021 = icmp eq i32 %17020, 2
  %17022 = zext i1 %17021 to i8
  %17023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17022, i8* %17023, align 1
  store %struct.Memory* %loadMem_40b960, %struct.Memory** %MEMORY
  %loadMem_40b963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17025 = getelementptr inbounds %struct.GPR, %struct.GPR* %17024, i32 0, i32 33
  %17026 = getelementptr inbounds %struct.Reg, %struct.Reg* %17025, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %17026 to i64*
  %17027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17028 = getelementptr inbounds %struct.GPR, %struct.GPR* %17027, i32 0, i32 5
  %17029 = getelementptr inbounds %struct.Reg, %struct.Reg* %17028, i32 0, i32 0
  %ECX.i447 = bitcast %union.anon* %17029 to i32*
  %17030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17031 = getelementptr inbounds %struct.GPR, %struct.GPR* %17030, i32 0, i32 15
  %17032 = getelementptr inbounds %struct.Reg, %struct.Reg* %17031, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %17032 to i64*
  %17033 = load i64, i64* %RBP.i448
  %17034 = sub i64 %17033, 208
  %17035 = load i32, i32* %ECX.i447
  %17036 = zext i32 %17035 to i64
  %17037 = load i64, i64* %PC.i446
  %17038 = add i64 %17037, 6
  store i64 %17038, i64* %PC.i446
  %17039 = inttoptr i64 %17034 to i32*
  store i32 %17035, i32* %17039
  store %struct.Memory* %loadMem_40b963, %struct.Memory** %MEMORY
  %loadMem_40b969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17041 = getelementptr inbounds %struct.GPR, %struct.GPR* %17040, i32 0, i32 33
  %17042 = getelementptr inbounds %struct.Reg, %struct.Reg* %17041, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %17042 to i64*
  %17043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17044 = getelementptr inbounds %struct.GPR, %struct.GPR* %17043, i32 0, i32 9
  %17045 = getelementptr inbounds %struct.Reg, %struct.Reg* %17044, i32 0, i32 0
  %ESI.i444 = bitcast %union.anon* %17045 to i32*
  %17046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17047 = getelementptr inbounds %struct.GPR, %struct.GPR* %17046, i32 0, i32 5
  %17048 = getelementptr inbounds %struct.Reg, %struct.Reg* %17047, i32 0, i32 0
  %RCX.i445 = bitcast %union.anon* %17048 to i64*
  %17049 = load i32, i32* %ESI.i444
  %17050 = zext i32 %17049 to i64
  %17051 = load i64, i64* %PC.i443
  %17052 = add i64 %17051, 2
  store i64 %17052, i64* %PC.i443
  %17053 = and i64 %17050, 4294967295
  store i64 %17053, i64* %RCX.i445, align 8
  store %struct.Memory* %loadMem_40b969, %struct.Memory** %MEMORY
  %loadMem_40b96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17055 = getelementptr inbounds %struct.GPR, %struct.GPR* %17054, i32 0, i32 33
  %17056 = getelementptr inbounds %struct.Reg, %struct.Reg* %17055, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %17056 to i64*
  %17057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17058 = getelementptr inbounds %struct.GPR, %struct.GPR* %17057, i32 0, i32 9
  %17059 = getelementptr inbounds %struct.Reg, %struct.Reg* %17058, i32 0, i32 0
  %RSI.i441 = bitcast %union.anon* %17059 to i64*
  %17060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17061 = getelementptr inbounds %struct.GPR, %struct.GPR* %17060, i32 0, i32 15
  %17062 = getelementptr inbounds %struct.Reg, %struct.Reg* %17061, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %17062 to i64*
  %17063 = load i64, i64* %RBP.i442
  %17064 = sub i64 %17063, 208
  %17065 = load i64, i64* %PC.i440
  %17066 = add i64 %17065, 6
  store i64 %17066, i64* %PC.i440
  %17067 = inttoptr i64 %17064 to i32*
  %17068 = load i32, i32* %17067
  %17069 = zext i32 %17068 to i64
  store i64 %17069, i64* %RSI.i441, align 8
  store %struct.Memory* %loadMem_40b96b, %struct.Memory** %MEMORY
  %loadMem_40b971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17071 = getelementptr inbounds %struct.GPR, %struct.GPR* %17070, i32 0, i32 33
  %17072 = getelementptr inbounds %struct.Reg, %struct.Reg* %17071, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %17072 to i64*
  %17073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17074 = getelementptr inbounds %struct.GPR, %struct.GPR* %17073, i32 0, i32 5
  %17075 = getelementptr inbounds %struct.Reg, %struct.Reg* %17074, i32 0, i32 0
  %17076 = bitcast %union.anon* %17075 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %17076, i32 0, i32 0
  %17077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17078 = getelementptr inbounds %struct.GPR, %struct.GPR* %17077, i32 0, i32 9
  %17079 = getelementptr inbounds %struct.Reg, %struct.Reg* %17078, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %17079 to i64*
  %17080 = load i64, i64* %RSI.i
  %17081 = load i8, i8* %CL.i
  %17082 = zext i8 %17081 to i64
  %17083 = load i64, i64* %PC.i439
  %17084 = add i64 %17083, 2
  store i64 %17084, i64* %PC.i439
  %17085 = trunc i64 %17082 to i5
  switch i5 %17085, label %17092 [
    i5 0, label %routine_shll__cl___esi.exit
    i5 1, label %17086
  ]

; <label>:17086:                                  ; preds = %block_.L_40b924
  %17087 = trunc i64 %17080 to i32
  %17088 = shl i32 %17087, 1
  %17089 = icmp slt i32 %17087, 0
  %17090 = icmp slt i32 %17088, 0
  %17091 = xor i1 %17089, %17090
  br label %17101

; <label>:17092:                                  ; preds = %block_.L_40b924
  %17093 = and i64 %17082, 31
  %17094 = add i64 %17093, 4294967295
  %17095 = and i64 %17080, 4294967295
  %17096 = and i64 %17094, 4294967295
  %17097 = shl i64 %17095, %17096
  %17098 = trunc i64 %17097 to i32
  %17099 = icmp slt i32 %17098, 0
  %17100 = shl i32 %17098, 1
  br label %17101

; <label>:17101:                                  ; preds = %17092, %17086
  %17102 = phi i1 [ %17089, %17086 ], [ %17099, %17092 ]
  %17103 = phi i1 [ %17091, %17086 ], [ false, %17092 ]
  %17104 = phi i32 [ %17088, %17086 ], [ %17100, %17092 ]
  %17105 = zext i32 %17104 to i64
  store i64 %17105, i64* %RSI.i, align 8
  %17106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17107 = zext i1 %17102 to i8
  store i8 %17107, i8* %17106, align 1
  %17108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17109 = and i32 %17104, 254
  %17110 = call i32 @llvm.ctpop.i32(i32 %17109)
  %17111 = trunc i32 %17110 to i8
  %17112 = and i8 %17111, 1
  %17113 = xor i8 %17112, 1
  store i8 %17113, i8* %17108, align 1
  %17114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17114, align 1
  %17115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17116 = icmp eq i32 %17104, 0
  %17117 = zext i1 %17116 to i8
  store i8 %17117, i8* %17115, align 1
  %17118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17119 = lshr i32 %17104, 31
  %17120 = trunc i32 %17119 to i8
  store i8 %17120, i8* %17118, align 1
  %17121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17122 = zext i1 %17103 to i8
  store i8 %17122, i8* %17121, align 1
  br label %routine_shll__cl___esi.exit

routine_shll__cl___esi.exit:                      ; preds = %block_.L_40b924, %17101
  store %struct.Memory* %loadMem_40b971, %struct.Memory** %MEMORY
  %loadMem_40b973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17124 = getelementptr inbounds %struct.GPR, %struct.GPR* %17123, i32 0, i32 33
  %17125 = getelementptr inbounds %struct.Reg, %struct.Reg* %17124, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %17125 to i64*
  %17126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17127 = getelementptr inbounds %struct.GPR, %struct.GPR* %17126, i32 0, i32 9
  %17128 = getelementptr inbounds %struct.Reg, %struct.Reg* %17127, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %17128 to i32*
  %17129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17130 = getelementptr inbounds %struct.GPR, %struct.GPR* %17129, i32 0, i32 15
  %17131 = getelementptr inbounds %struct.Reg, %struct.Reg* %17130, i32 0, i32 0
  %RBP.i438 = bitcast %union.anon* %17131 to i64*
  %17132 = load i64, i64* %RBP.i438
  %17133 = sub i64 %17132, 32
  %17134 = load i32, i32* %ESI.i
  %17135 = zext i32 %17134 to i64
  %17136 = load i64, i64* %PC.i437
  %17137 = add i64 %17136, 3
  store i64 %17137, i64* %PC.i437
  %17138 = inttoptr i64 %17133 to i32*
  store i32 %17134, i32* %17138
  store %struct.Memory* %loadMem_40b973, %struct.Memory** %MEMORY
  br label %block_.L_40b976

block_.L_40b976:                                  ; preds = %routine_shll__cl___esi.exit, %routine_shll__cl___esi.exit497
  %loadMem_40b976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17140 = getelementptr inbounds %struct.GPR, %struct.GPR* %17139, i32 0, i32 33
  %17141 = getelementptr inbounds %struct.Reg, %struct.Reg* %17140, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %17141 to i64*
  %17142 = load i64, i64* %PC.i436
  %17143 = add i64 %17142, 5
  %17144 = load i64, i64* %PC.i436
  %17145 = add i64 %17144, 5
  store i64 %17145, i64* %PC.i436
  %17146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17143, i64* %17146, align 8
  store %struct.Memory* %loadMem_40b976, %struct.Memory** %MEMORY
  br label %block_.L_40b97b

block_.L_40b97b:                                  ; preds = %block_.L_40b976, %block_.L_40b8be
  %loadMem_40b97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17148 = getelementptr inbounds %struct.GPR, %struct.GPR* %17147, i32 0, i32 33
  %17149 = getelementptr inbounds %struct.Reg, %struct.Reg* %17148, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %17149 to i64*
  %17150 = load i64, i64* %PC.i435
  %17151 = add i64 %17150, 5
  %17152 = load i64, i64* %PC.i435
  %17153 = add i64 %17152, 5
  store i64 %17153, i64* %PC.i435
  %17154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17151, i64* %17154, align 8
  store %struct.Memory* %loadMem_40b97b, %struct.Memory** %MEMORY
  br label %block_.L_40b980

block_.L_40b980:                                  ; preds = %block_.L_40b97b, %block_40b7ca
  %loadMem_40b980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17156 = getelementptr inbounds %struct.GPR, %struct.GPR* %17155, i32 0, i32 33
  %17157 = getelementptr inbounds %struct.Reg, %struct.Reg* %17156, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %17157 to i64*
  %17158 = load i64, i64* %PC.i434
  %17159 = add i64 %17158, 5
  %17160 = load i64, i64* %PC.i434
  %17161 = add i64 %17160, 5
  store i64 %17161, i64* %PC.i434
  %17162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17159, i64* %17162, align 8
  store %struct.Memory* %loadMem_40b980, %struct.Memory** %MEMORY
  br label %block_.L_40b985

block_.L_40b985:                                  ; preds = %block_.L_40b980, %block_.L_40b718
  %loadMem_40b985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17164 = getelementptr inbounds %struct.GPR, %struct.GPR* %17163, i32 0, i32 33
  %17165 = getelementptr inbounds %struct.Reg, %struct.Reg* %17164, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %17165 to i64*
  %17166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17167 = getelementptr inbounds %struct.GPR, %struct.GPR* %17166, i32 0, i32 15
  %17168 = getelementptr inbounds %struct.Reg, %struct.Reg* %17167, i32 0, i32 0
  %RBP.i433 = bitcast %union.anon* %17168 to i64*
  %17169 = load i64, i64* %RBP.i433
  %17170 = sub i64 %17169, 140
  %17171 = load i64, i64* %PC.i432
  %17172 = add i64 %17171, 7
  store i64 %17172, i64* %PC.i432
  %17173 = inttoptr i64 %17170 to i32*
  %17174 = load i32, i32* %17173
  %17175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17175, align 1
  %17176 = and i32 %17174, 255
  %17177 = call i32 @llvm.ctpop.i32(i32 %17176)
  %17178 = trunc i32 %17177 to i8
  %17179 = and i8 %17178, 1
  %17180 = xor i8 %17179, 1
  %17181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17180, i8* %17181, align 1
  %17182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17182, align 1
  %17183 = icmp eq i32 %17174, 0
  %17184 = zext i1 %17183 to i8
  %17185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17184, i8* %17185, align 1
  %17186 = lshr i32 %17174, 31
  %17187 = trunc i32 %17186 to i8
  %17188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17187, i8* %17188, align 1
  %17189 = lshr i32 %17174, 31
  %17190 = xor i32 %17186, %17189
  %17191 = add i32 %17190, %17189
  %17192 = icmp eq i32 %17191, 2
  %17193 = zext i1 %17192 to i8
  %17194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17193, i8* %17194, align 1
  store %struct.Memory* %loadMem_40b985, %struct.Memory** %MEMORY
  %loadMem_40b98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17196 = getelementptr inbounds %struct.GPR, %struct.GPR* %17195, i32 0, i32 33
  %17197 = getelementptr inbounds %struct.Reg, %struct.Reg* %17196, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %17197 to i64*
  %17198 = load i64, i64* %PC.i431
  %17199 = add i64 %17198, 42
  %17200 = load i64, i64* %PC.i431
  %17201 = add i64 %17200, 6
  %17202 = load i64, i64* %PC.i431
  %17203 = add i64 %17202, 6
  store i64 %17203, i64* %PC.i431
  %17204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17205 = load i8, i8* %17204, align 1
  %17206 = icmp eq i8 %17205, 0
  %17207 = zext i1 %17206 to i8
  store i8 %17207, i8* %BRANCH_TAKEN, align 1
  %17208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17209 = select i1 %17206, i64 %17199, i64 %17201
  store i64 %17209, i64* %17208, align 8
  store %struct.Memory* %loadMem_40b98c, %struct.Memory** %MEMORY
  %loadBr_40b98c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b98c = icmp eq i8 %loadBr_40b98c, 1
  br i1 %cmpBr_40b98c, label %block_.L_40b9b6, label %block_40b992

block_40b992:                                     ; preds = %block_.L_40b985
  %loadMem_40b992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17211 = getelementptr inbounds %struct.GPR, %struct.GPR* %17210, i32 0, i32 33
  %17212 = getelementptr inbounds %struct.Reg, %struct.Reg* %17211, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %17212 to i64*
  %17213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17214 = getelementptr inbounds %struct.GPR, %struct.GPR* %17213, i32 0, i32 1
  %17215 = getelementptr inbounds %struct.Reg, %struct.Reg* %17214, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %17215 to i64*
  %17216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17217 = getelementptr inbounds %struct.GPR, %struct.GPR* %17216, i32 0, i32 15
  %17218 = getelementptr inbounds %struct.Reg, %struct.Reg* %17217, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %17218 to i64*
  %17219 = load i64, i64* %RBP.i430
  %17220 = sub i64 %17219, 32
  %17221 = load i64, i64* %PC.i428
  %17222 = add i64 %17221, 3
  store i64 %17222, i64* %PC.i428
  %17223 = inttoptr i64 %17220 to i32*
  %17224 = load i32, i32* %17223
  %17225 = zext i32 %17224 to i64
  store i64 %17225, i64* %RAX.i429, align 8
  store %struct.Memory* %loadMem_40b992, %struct.Memory** %MEMORY
  %loadMem_40b995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17227 = getelementptr inbounds %struct.GPR, %struct.GPR* %17226, i32 0, i32 33
  %17228 = getelementptr inbounds %struct.Reg, %struct.Reg* %17227, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %17228 to i64*
  %17229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17230 = getelementptr inbounds %struct.GPR, %struct.GPR* %17229, i32 0, i32 5
  %17231 = getelementptr inbounds %struct.Reg, %struct.Reg* %17230, i32 0, i32 0
  %RCX.i427 = bitcast %union.anon* %17231 to i64*
  %17232 = load i64, i64* %PC.i426
  %17233 = add i64 %17232, 8
  store i64 %17233, i64* %PC.i426
  %17234 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17234, i64* %RCX.i427, align 8
  store %struct.Memory* %loadMem_40b995, %struct.Memory** %MEMORY
  %loadMem_40b99d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17236 = getelementptr inbounds %struct.GPR, %struct.GPR* %17235, i32 0, i32 33
  %17237 = getelementptr inbounds %struct.Reg, %struct.Reg* %17236, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %17237 to i64*
  %17238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17239 = getelementptr inbounds %struct.GPR, %struct.GPR* %17238, i32 0, i32 5
  %17240 = getelementptr inbounds %struct.Reg, %struct.Reg* %17239, i32 0, i32 0
  %RCX.i425 = bitcast %union.anon* %17240 to i64*
  %17241 = load i64, i64* %RCX.i425
  %17242 = load i64, i64* %PC.i424
  %17243 = add i64 %17242, 7
  store i64 %17243, i64* %PC.i424
  %17244 = add i64 13112, %17241
  store i64 %17244, i64* %RCX.i425, align 8
  %17245 = icmp ult i64 %17244, %17241
  %17246 = icmp ult i64 %17244, 13112
  %17247 = or i1 %17245, %17246
  %17248 = zext i1 %17247 to i8
  %17249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17248, i8* %17249, align 1
  %17250 = trunc i64 %17244 to i32
  %17251 = and i32 %17250, 255
  %17252 = call i32 @llvm.ctpop.i32(i32 %17251)
  %17253 = trunc i32 %17252 to i8
  %17254 = and i8 %17253, 1
  %17255 = xor i8 %17254, 1
  %17256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17255, i8* %17256, align 1
  %17257 = xor i64 13112, %17241
  %17258 = xor i64 %17257, %17244
  %17259 = lshr i64 %17258, 4
  %17260 = trunc i64 %17259 to i8
  %17261 = and i8 %17260, 1
  %17262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17261, i8* %17262, align 1
  %17263 = icmp eq i64 %17244, 0
  %17264 = zext i1 %17263 to i8
  %17265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17264, i8* %17265, align 1
  %17266 = lshr i64 %17244, 63
  %17267 = trunc i64 %17266 to i8
  %17268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17267, i8* %17268, align 1
  %17269 = lshr i64 %17241, 63
  %17270 = xor i64 %17266, %17269
  %17271 = add i64 %17270, %17266
  %17272 = icmp eq i64 %17271, 2
  %17273 = zext i1 %17272 to i8
  %17274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17273, i8* %17274, align 1
  store %struct.Memory* %loadMem_40b99d, %struct.Memory** %MEMORY
  %loadMem_40b9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17276 = getelementptr inbounds %struct.GPR, %struct.GPR* %17275, i32 0, i32 33
  %17277 = getelementptr inbounds %struct.Reg, %struct.Reg* %17276, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %17277 to i64*
  %17278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17279 = getelementptr inbounds %struct.GPR, %struct.GPR* %17278, i32 0, i32 7
  %17280 = getelementptr inbounds %struct.Reg, %struct.Reg* %17279, i32 0, i32 0
  %RDX.i422 = bitcast %union.anon* %17280 to i64*
  %17281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17282 = getelementptr inbounds %struct.GPR, %struct.GPR* %17281, i32 0, i32 15
  %17283 = getelementptr inbounds %struct.Reg, %struct.Reg* %17282, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %17283 to i64*
  %17284 = load i64, i64* %RBP.i423
  %17285 = sub i64 %17284, 16
  %17286 = load i64, i64* %PC.i421
  %17287 = add i64 %17286, 4
  store i64 %17287, i64* %PC.i421
  %17288 = inttoptr i64 %17285 to i32*
  %17289 = load i32, i32* %17288
  %17290 = sext i32 %17289 to i64
  store i64 %17290, i64* %RDX.i422, align 8
  store %struct.Memory* %loadMem_40b9a4, %struct.Memory** %MEMORY
  %loadMem_40b9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17292 = getelementptr inbounds %struct.GPR, %struct.GPR* %17291, i32 0, i32 33
  %17293 = getelementptr inbounds %struct.Reg, %struct.Reg* %17292, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %17293 to i64*
  %17294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17295 = getelementptr inbounds %struct.GPR, %struct.GPR* %17294, i32 0, i32 7
  %17296 = getelementptr inbounds %struct.Reg, %struct.Reg* %17295, i32 0, i32 0
  %RDX.i420 = bitcast %union.anon* %17296 to i64*
  %17297 = load i64, i64* %RDX.i420
  %17298 = load i64, i64* %PC.i419
  %17299 = add i64 %17298, 4
  store i64 %17299, i64* %PC.i419
  %17300 = shl i64 %17297, 5
  %17301 = icmp slt i64 %17300, 0
  %17302 = shl i64 %17300, 1
  store i64 %17302, i64* %RDX.i420, align 8
  %17303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17304 = zext i1 %17301 to i8
  store i8 %17304, i8* %17303, align 1
  %17305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17306 = trunc i64 %17302 to i32
  %17307 = and i32 %17306, 254
  %17308 = call i32 @llvm.ctpop.i32(i32 %17307)
  %17309 = trunc i32 %17308 to i8
  %17310 = and i8 %17309, 1
  %17311 = xor i8 %17310, 1
  store i8 %17311, i8* %17305, align 1
  %17312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17312, align 1
  %17313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17314 = icmp eq i64 %17302, 0
  %17315 = zext i1 %17314 to i8
  store i8 %17315, i8* %17313, align 1
  %17316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17317 = lshr i64 %17302, 63
  %17318 = trunc i64 %17317 to i8
  store i8 %17318, i8* %17316, align 1
  %17319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17319, align 1
  store %struct.Memory* %loadMem_40b9a8, %struct.Memory** %MEMORY
  %loadMem_40b9ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %17320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17321 = getelementptr inbounds %struct.GPR, %struct.GPR* %17320, i32 0, i32 33
  %17322 = getelementptr inbounds %struct.Reg, %struct.Reg* %17321, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %17322 to i64*
  %17323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17324 = getelementptr inbounds %struct.GPR, %struct.GPR* %17323, i32 0, i32 5
  %17325 = getelementptr inbounds %struct.Reg, %struct.Reg* %17324, i32 0, i32 0
  %RCX.i417 = bitcast %union.anon* %17325 to i64*
  %17326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17327 = getelementptr inbounds %struct.GPR, %struct.GPR* %17326, i32 0, i32 7
  %17328 = getelementptr inbounds %struct.Reg, %struct.Reg* %17327, i32 0, i32 0
  %RDX.i418 = bitcast %union.anon* %17328 to i64*
  %17329 = load i64, i64* %RCX.i417
  %17330 = load i64, i64* %RDX.i418
  %17331 = load i64, i64* %PC.i416
  %17332 = add i64 %17331, 3
  store i64 %17332, i64* %PC.i416
  %17333 = add i64 %17330, %17329
  store i64 %17333, i64* %RCX.i417, align 8
  %17334 = icmp ult i64 %17333, %17329
  %17335 = icmp ult i64 %17333, %17330
  %17336 = or i1 %17334, %17335
  %17337 = zext i1 %17336 to i8
  %17338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17337, i8* %17338, align 1
  %17339 = trunc i64 %17333 to i32
  %17340 = and i32 %17339, 255
  %17341 = call i32 @llvm.ctpop.i32(i32 %17340)
  %17342 = trunc i32 %17341 to i8
  %17343 = and i8 %17342, 1
  %17344 = xor i8 %17343, 1
  %17345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17344, i8* %17345, align 1
  %17346 = xor i64 %17330, %17329
  %17347 = xor i64 %17346, %17333
  %17348 = lshr i64 %17347, 4
  %17349 = trunc i64 %17348 to i8
  %17350 = and i8 %17349, 1
  %17351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17350, i8* %17351, align 1
  %17352 = icmp eq i64 %17333, 0
  %17353 = zext i1 %17352 to i8
  %17354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17353, i8* %17354, align 1
  %17355 = lshr i64 %17333, 63
  %17356 = trunc i64 %17355 to i8
  %17357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17356, i8* %17357, align 1
  %17358 = lshr i64 %17329, 63
  %17359 = lshr i64 %17330, 63
  %17360 = xor i64 %17355, %17358
  %17361 = xor i64 %17355, %17359
  %17362 = add i64 %17360, %17361
  %17363 = icmp eq i64 %17362, 2
  %17364 = zext i1 %17363 to i8
  %17365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17364, i8* %17365, align 1
  store %struct.Memory* %loadMem_40b9ac, %struct.Memory** %MEMORY
  %loadMem_40b9af = load %struct.Memory*, %struct.Memory** %MEMORY
  %17366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17367 = getelementptr inbounds %struct.GPR, %struct.GPR* %17366, i32 0, i32 33
  %17368 = getelementptr inbounds %struct.Reg, %struct.Reg* %17367, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %17368 to i64*
  %17369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17370 = getelementptr inbounds %struct.GPR, %struct.GPR* %17369, i32 0, i32 7
  %17371 = getelementptr inbounds %struct.Reg, %struct.Reg* %17370, i32 0, i32 0
  %RDX.i414 = bitcast %union.anon* %17371 to i64*
  %17372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17373 = getelementptr inbounds %struct.GPR, %struct.GPR* %17372, i32 0, i32 15
  %17374 = getelementptr inbounds %struct.Reg, %struct.Reg* %17373, i32 0, i32 0
  %RBP.i415 = bitcast %union.anon* %17374 to i64*
  %17375 = load i64, i64* %RBP.i415
  %17376 = sub i64 %17375, 20
  %17377 = load i64, i64* %PC.i413
  %17378 = add i64 %17377, 4
  store i64 %17378, i64* %PC.i413
  %17379 = inttoptr i64 %17376 to i32*
  %17380 = load i32, i32* %17379
  %17381 = sext i32 %17380 to i64
  store i64 %17381, i64* %RDX.i414, align 8
  store %struct.Memory* %loadMem_40b9af, %struct.Memory** %MEMORY
  %loadMem_40b9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17383 = getelementptr inbounds %struct.GPR, %struct.GPR* %17382, i32 0, i32 33
  %17384 = getelementptr inbounds %struct.Reg, %struct.Reg* %17383, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %17384 to i64*
  %17385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17386 = getelementptr inbounds %struct.GPR, %struct.GPR* %17385, i32 0, i32 1
  %17387 = getelementptr inbounds %struct.Reg, %struct.Reg* %17386, i32 0, i32 0
  %EAX.i410 = bitcast %union.anon* %17387 to i32*
  %17388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17389 = getelementptr inbounds %struct.GPR, %struct.GPR* %17388, i32 0, i32 5
  %17390 = getelementptr inbounds %struct.Reg, %struct.Reg* %17389, i32 0, i32 0
  %RCX.i411 = bitcast %union.anon* %17390 to i64*
  %17391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17392 = getelementptr inbounds %struct.GPR, %struct.GPR* %17391, i32 0, i32 7
  %17393 = getelementptr inbounds %struct.Reg, %struct.Reg* %17392, i32 0, i32 0
  %RDX.i412 = bitcast %union.anon* %17393 to i64*
  %17394 = load i64, i64* %RCX.i411
  %17395 = load i64, i64* %RDX.i412
  %17396 = mul i64 %17395, 4
  %17397 = add i64 %17396, %17394
  %17398 = load i32, i32* %EAX.i410
  %17399 = zext i32 %17398 to i64
  %17400 = load i64, i64* %PC.i409
  %17401 = add i64 %17400, 3
  store i64 %17401, i64* %PC.i409
  %17402 = inttoptr i64 %17397 to i32*
  store i32 %17398, i32* %17402
  store %struct.Memory* %loadMem_40b9b3, %struct.Memory** %MEMORY
  br label %block_.L_40b9b6

block_.L_40b9b6:                                  ; preds = %block_40b992, %block_.L_40b985
  %loadMem_40b9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17404 = getelementptr inbounds %struct.GPR, %struct.GPR* %17403, i32 0, i32 33
  %17405 = getelementptr inbounds %struct.Reg, %struct.Reg* %17404, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %17405 to i64*
  %17406 = load i64, i64* %PC.i408
  %17407 = add i64 %17406, 5
  %17408 = load i64, i64* %PC.i408
  %17409 = add i64 %17408, 5
  store i64 %17409, i64* %PC.i408
  %17410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17407, i64* %17410, align 8
  store %struct.Memory* %loadMem_40b9b6, %struct.Memory** %MEMORY
  br label %block_.L_40b9bb

block_.L_40b9bb:                                  ; preds = %block_.L_40b9b6
  %loadMem_40b9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %17411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17412 = getelementptr inbounds %struct.GPR, %struct.GPR* %17411, i32 0, i32 33
  %17413 = getelementptr inbounds %struct.Reg, %struct.Reg* %17412, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %17413 to i64*
  %17414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17415 = getelementptr inbounds %struct.GPR, %struct.GPR* %17414, i32 0, i32 1
  %17416 = getelementptr inbounds %struct.Reg, %struct.Reg* %17415, i32 0, i32 0
  %RAX.i406 = bitcast %union.anon* %17416 to i64*
  %17417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17418 = getelementptr inbounds %struct.GPR, %struct.GPR* %17417, i32 0, i32 15
  %17419 = getelementptr inbounds %struct.Reg, %struct.Reg* %17418, i32 0, i32 0
  %RBP.i407 = bitcast %union.anon* %17419 to i64*
  %17420 = load i64, i64* %RBP.i407
  %17421 = sub i64 %17420, 68
  %17422 = load i64, i64* %PC.i405
  %17423 = add i64 %17422, 3
  store i64 %17423, i64* %PC.i405
  %17424 = inttoptr i64 %17421 to i32*
  %17425 = load i32, i32* %17424
  %17426 = zext i32 %17425 to i64
  store i64 %17426, i64* %RAX.i406, align 8
  store %struct.Memory* %loadMem_40b9bb, %struct.Memory** %MEMORY
  %loadMem_40b9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %17427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17428 = getelementptr inbounds %struct.GPR, %struct.GPR* %17427, i32 0, i32 33
  %17429 = getelementptr inbounds %struct.Reg, %struct.Reg* %17428, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %17429 to i64*
  %17430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17431 = getelementptr inbounds %struct.GPR, %struct.GPR* %17430, i32 0, i32 1
  %17432 = getelementptr inbounds %struct.Reg, %struct.Reg* %17431, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %17432 to i64*
  %17433 = load i64, i64* %RAX.i404
  %17434 = load i64, i64* %PC.i403
  %17435 = add i64 %17434, 3
  store i64 %17435, i64* %PC.i403
  %17436 = trunc i64 %17433 to i32
  %17437 = add i32 1, %17436
  %17438 = zext i32 %17437 to i64
  store i64 %17438, i64* %RAX.i404, align 8
  %17439 = icmp ult i32 %17437, %17436
  %17440 = icmp ult i32 %17437, 1
  %17441 = or i1 %17439, %17440
  %17442 = zext i1 %17441 to i8
  %17443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17442, i8* %17443, align 1
  %17444 = and i32 %17437, 255
  %17445 = call i32 @llvm.ctpop.i32(i32 %17444)
  %17446 = trunc i32 %17445 to i8
  %17447 = and i8 %17446, 1
  %17448 = xor i8 %17447, 1
  %17449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17448, i8* %17449, align 1
  %17450 = xor i64 1, %17433
  %17451 = trunc i64 %17450 to i32
  %17452 = xor i32 %17451, %17437
  %17453 = lshr i32 %17452, 4
  %17454 = trunc i32 %17453 to i8
  %17455 = and i8 %17454, 1
  %17456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17455, i8* %17456, align 1
  %17457 = icmp eq i32 %17437, 0
  %17458 = zext i1 %17457 to i8
  %17459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17458, i8* %17459, align 1
  %17460 = lshr i32 %17437, 31
  %17461 = trunc i32 %17460 to i8
  %17462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17461, i8* %17462, align 1
  %17463 = lshr i32 %17436, 31
  %17464 = xor i32 %17460, %17463
  %17465 = add i32 %17464, %17460
  %17466 = icmp eq i32 %17465, 2
  %17467 = zext i1 %17466 to i8
  %17468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17467, i8* %17468, align 1
  store %struct.Memory* %loadMem_40b9be, %struct.Memory** %MEMORY
  %loadMem_40b9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17470 = getelementptr inbounds %struct.GPR, %struct.GPR* %17469, i32 0, i32 33
  %17471 = getelementptr inbounds %struct.Reg, %struct.Reg* %17470, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %17471 to i64*
  %17472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17473 = getelementptr inbounds %struct.GPR, %struct.GPR* %17472, i32 0, i32 1
  %17474 = getelementptr inbounds %struct.Reg, %struct.Reg* %17473, i32 0, i32 0
  %EAX.i401 = bitcast %union.anon* %17474 to i32*
  %17475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17476 = getelementptr inbounds %struct.GPR, %struct.GPR* %17475, i32 0, i32 15
  %17477 = getelementptr inbounds %struct.Reg, %struct.Reg* %17476, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %17477 to i64*
  %17478 = load i64, i64* %RBP.i402
  %17479 = sub i64 %17478, 68
  %17480 = load i32, i32* %EAX.i401
  %17481 = zext i32 %17480 to i64
  %17482 = load i64, i64* %PC.i400
  %17483 = add i64 %17482, 3
  store i64 %17483, i64* %PC.i400
  %17484 = inttoptr i64 %17479 to i32*
  store i32 %17480, i32* %17484
  store %struct.Memory* %loadMem_40b9c1, %struct.Memory** %MEMORY
  %loadMem_40b9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17486 = getelementptr inbounds %struct.GPR, %struct.GPR* %17485, i32 0, i32 33
  %17487 = getelementptr inbounds %struct.Reg, %struct.Reg* %17486, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %17487 to i64*
  %17488 = load i64, i64* %PC.i399
  %17489 = add i64 %17488, -1122
  %17490 = load i64, i64* %PC.i399
  %17491 = add i64 %17490, 5
  store i64 %17491, i64* %PC.i399
  %17492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17489, i64* %17492, align 8
  store %struct.Memory* %loadMem_40b9c4, %struct.Memory** %MEMORY
  br label %block_.L_40b562

block_.L_40b9c9:                                  ; preds = %block_.L_40b562
  %loadMem_40b9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17494 = getelementptr inbounds %struct.GPR, %struct.GPR* %17493, i32 0, i32 33
  %17495 = getelementptr inbounds %struct.Reg, %struct.Reg* %17494, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %17495 to i64*
  %17496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17497 = getelementptr inbounds %struct.GPR, %struct.GPR* %17496, i32 0, i32 1
  %17498 = getelementptr inbounds %struct.Reg, %struct.Reg* %17497, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %17498 to i64*
  %17499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17500 = getelementptr inbounds %struct.GPR, %struct.GPR* %17499, i32 0, i32 15
  %17501 = getelementptr inbounds %struct.Reg, %struct.Reg* %17500, i32 0, i32 0
  %RBP.i398 = bitcast %union.anon* %17501 to i64*
  %17502 = load i64, i64* %RBP.i398
  %17503 = sub i64 %17502, 128
  %17504 = load i64, i64* %PC.i396
  %17505 = add i64 %17504, 4
  store i64 %17505, i64* %PC.i396
  %17506 = inttoptr i64 %17503 to i64*
  %17507 = load i64, i64* %17506
  store i64 %17507, i64* %RAX.i397, align 8
  store %struct.Memory* %loadMem_40b9c9, %struct.Memory** %MEMORY
  %loadMem_40b9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17509 = getelementptr inbounds %struct.GPR, %struct.GPR* %17508, i32 0, i32 33
  %17510 = getelementptr inbounds %struct.Reg, %struct.Reg* %17509, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %17510 to i64*
  %17511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17512 = getelementptr inbounds %struct.GPR, %struct.GPR* %17511, i32 0, i32 5
  %17513 = getelementptr inbounds %struct.Reg, %struct.Reg* %17512, i32 0, i32 0
  %RCX.i394 = bitcast %union.anon* %17513 to i64*
  %17514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17515 = getelementptr inbounds %struct.GPR, %struct.GPR* %17514, i32 0, i32 15
  %17516 = getelementptr inbounds %struct.Reg, %struct.Reg* %17515, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %17516 to i64*
  %17517 = load i64, i64* %RBP.i395
  %17518 = sub i64 %17517, 76
  %17519 = load i64, i64* %PC.i393
  %17520 = add i64 %17519, 4
  store i64 %17520, i64* %PC.i393
  %17521 = inttoptr i64 %17518 to i32*
  %17522 = load i32, i32* %17521
  %17523 = sext i32 %17522 to i64
  store i64 %17523, i64* %RCX.i394, align 8
  store %struct.Memory* %loadMem_40b9cd, %struct.Memory** %MEMORY
  %loadMem_40b9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17525 = getelementptr inbounds %struct.GPR, %struct.GPR* %17524, i32 0, i32 33
  %17526 = getelementptr inbounds %struct.Reg, %struct.Reg* %17525, i32 0, i32 0
  %PC.i390 = bitcast %union.anon* %17526 to i64*
  %17527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17528 = getelementptr inbounds %struct.GPR, %struct.GPR* %17527, i32 0, i32 1
  %17529 = getelementptr inbounds %struct.Reg, %struct.Reg* %17528, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %17529 to i64*
  %17530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17531 = getelementptr inbounds %struct.GPR, %struct.GPR* %17530, i32 0, i32 5
  %17532 = getelementptr inbounds %struct.Reg, %struct.Reg* %17531, i32 0, i32 0
  %RCX.i392 = bitcast %union.anon* %17532 to i64*
  %17533 = load i64, i64* %RAX.i391
  %17534 = load i64, i64* %RCX.i392
  %17535 = mul i64 %17534, 4
  %17536 = add i64 %17535, %17533
  %17537 = load i64, i64* %PC.i390
  %17538 = add i64 %17537, 7
  store i64 %17538, i64* %PC.i390
  %17539 = inttoptr i64 %17536 to i32*
  store i32 0, i32* %17539
  store %struct.Memory* %loadMem_40b9d1, %struct.Memory** %MEMORY
  %loadMem_40b9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17541 = getelementptr inbounds %struct.GPR, %struct.GPR* %17540, i32 0, i32 33
  %17542 = getelementptr inbounds %struct.Reg, %struct.Reg* %17541, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %17542 to i64*
  %17543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17544 = getelementptr inbounds %struct.GPR, %struct.GPR* %17543, i32 0, i32 15
  %17545 = getelementptr inbounds %struct.Reg, %struct.Reg* %17544, i32 0, i32 0
  %RBP.i389 = bitcast %union.anon* %17545 to i64*
  %17546 = load i64, i64* %RBP.i389
  %17547 = sub i64 %17546, 140
  %17548 = load i64, i64* %PC.i388
  %17549 = add i64 %17548, 7
  store i64 %17549, i64* %PC.i388
  %17550 = inttoptr i64 %17547 to i32*
  %17551 = load i32, i32* %17550
  %17552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17552, align 1
  %17553 = and i32 %17551, 255
  %17554 = call i32 @llvm.ctpop.i32(i32 %17553)
  %17555 = trunc i32 %17554 to i8
  %17556 = and i8 %17555, 1
  %17557 = xor i8 %17556, 1
  %17558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17557, i8* %17558, align 1
  %17559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17559, align 1
  %17560 = icmp eq i32 %17551, 0
  %17561 = zext i1 %17560 to i8
  %17562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17561, i8* %17562, align 1
  %17563 = lshr i32 %17551, 31
  %17564 = trunc i32 %17563 to i8
  %17565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17564, i8* %17565, align 1
  %17566 = lshr i32 %17551, 31
  %17567 = xor i32 %17563, %17566
  %17568 = add i32 %17567, %17566
  %17569 = icmp eq i32 %17568, 2
  %17570 = zext i1 %17569 to i8
  %17571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17570, i8* %17571, align 1
  store %struct.Memory* %loadMem_40b9d8, %struct.Memory** %MEMORY
  %loadMem_40b9df = load %struct.Memory*, %struct.Memory** %MEMORY
  %17572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17573 = getelementptr inbounds %struct.GPR, %struct.GPR* %17572, i32 0, i32 33
  %17574 = getelementptr inbounds %struct.Reg, %struct.Reg* %17573, i32 0, i32 0
  %PC.i387 = bitcast %union.anon* %17574 to i64*
  %17575 = load i64, i64* %PC.i387
  %17576 = add i64 %17575, 302
  %17577 = load i64, i64* %PC.i387
  %17578 = add i64 %17577, 6
  %17579 = load i64, i64* %PC.i387
  %17580 = add i64 %17579, 6
  store i64 %17580, i64* %PC.i387
  %17581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17582 = load i8, i8* %17581, align 1
  %17583 = icmp eq i8 %17582, 0
  %17584 = zext i1 %17583 to i8
  store i8 %17584, i8* %BRANCH_TAKEN, align 1
  %17585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17586 = select i1 %17583, i64 %17576, i64 %17578
  store i64 %17586, i64* %17585, align 8
  store %struct.Memory* %loadMem_40b9df, %struct.Memory** %MEMORY
  %loadBr_40b9df = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b9df = icmp eq i8 %loadBr_40b9df, 1
  br i1 %cmpBr_40b9df, label %block_.L_40bb0d, label %block_40b9e5

block_40b9e5:                                     ; preds = %block_.L_40b9c9
  %loadMem_40b9e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17588 = getelementptr inbounds %struct.GPR, %struct.GPR* %17587, i32 0, i32 33
  %17589 = getelementptr inbounds %struct.Reg, %struct.Reg* %17588, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %17589 to i64*
  %17590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17591 = getelementptr inbounds %struct.GPR, %struct.GPR* %17590, i32 0, i32 15
  %17592 = getelementptr inbounds %struct.Reg, %struct.Reg* %17591, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %17592 to i64*
  %17593 = load i64, i64* %RBP.i386
  %17594 = sub i64 %17593, 20
  %17595 = load i64, i64* %PC.i385
  %17596 = add i64 %17595, 7
  store i64 %17596, i64* %PC.i385
  %17597 = inttoptr i64 %17594 to i32*
  store i32 0, i32* %17597
  store %struct.Memory* %loadMem_40b9e5, %struct.Memory** %MEMORY
  br label %block_.L_40b9ec

block_.L_40b9ec:                                  ; preds = %block_.L_40bafa, %block_40b9e5
  %loadMem_40b9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %17598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17599 = getelementptr inbounds %struct.GPR, %struct.GPR* %17598, i32 0, i32 33
  %17600 = getelementptr inbounds %struct.Reg, %struct.Reg* %17599, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %17600 to i64*
  %17601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17602 = getelementptr inbounds %struct.GPR, %struct.GPR* %17601, i32 0, i32 15
  %17603 = getelementptr inbounds %struct.Reg, %struct.Reg* %17602, i32 0, i32 0
  %RBP.i384 = bitcast %union.anon* %17603 to i64*
  %17604 = load i64, i64* %RBP.i384
  %17605 = sub i64 %17604, 20
  %17606 = load i64, i64* %PC.i383
  %17607 = add i64 %17606, 4
  store i64 %17607, i64* %PC.i383
  %17608 = inttoptr i64 %17605 to i32*
  %17609 = load i32, i32* %17608
  %17610 = sub i32 %17609, 4
  %17611 = icmp ult i32 %17609, 4
  %17612 = zext i1 %17611 to i8
  %17613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17612, i8* %17613, align 1
  %17614 = and i32 %17610, 255
  %17615 = call i32 @llvm.ctpop.i32(i32 %17614)
  %17616 = trunc i32 %17615 to i8
  %17617 = and i8 %17616, 1
  %17618 = xor i8 %17617, 1
  %17619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17618, i8* %17619, align 1
  %17620 = xor i32 %17609, 4
  %17621 = xor i32 %17620, %17610
  %17622 = lshr i32 %17621, 4
  %17623 = trunc i32 %17622 to i8
  %17624 = and i8 %17623, 1
  %17625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17624, i8* %17625, align 1
  %17626 = icmp eq i32 %17610, 0
  %17627 = zext i1 %17626 to i8
  %17628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17627, i8* %17628, align 1
  %17629 = lshr i32 %17610, 31
  %17630 = trunc i32 %17629 to i8
  %17631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17630, i8* %17631, align 1
  %17632 = lshr i32 %17609, 31
  %17633 = xor i32 %17629, %17632
  %17634 = add i32 %17633, %17632
  %17635 = icmp eq i32 %17634, 2
  %17636 = zext i1 %17635 to i8
  %17637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17636, i8* %17637, align 1
  store %struct.Memory* %loadMem_40b9ec, %struct.Memory** %MEMORY
  %loadMem_40b9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17639 = getelementptr inbounds %struct.GPR, %struct.GPR* %17638, i32 0, i32 33
  %17640 = getelementptr inbounds %struct.Reg, %struct.Reg* %17639, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %17640 to i64*
  %17641 = load i64, i64* %PC.i382
  %17642 = add i64 %17641, 280
  %17643 = load i64, i64* %PC.i382
  %17644 = add i64 %17643, 6
  %17645 = load i64, i64* %PC.i382
  %17646 = add i64 %17645, 6
  store i64 %17646, i64* %PC.i382
  %17647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17648 = load i8, i8* %17647, align 1
  %17649 = icmp ne i8 %17648, 0
  %17650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17651 = load i8, i8* %17650, align 1
  %17652 = icmp ne i8 %17651, 0
  %17653 = xor i1 %17649, %17652
  %17654 = xor i1 %17653, true
  %17655 = zext i1 %17654 to i8
  store i8 %17655, i8* %BRANCH_TAKEN, align 1
  %17656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17657 = select i1 %17653, i64 %17644, i64 %17642
  store i64 %17657, i64* %17656, align 8
  store %struct.Memory* %loadMem_40b9f0, %struct.Memory** %MEMORY
  %loadBr_40b9f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b9f0 = icmp eq i8 %loadBr_40b9f0, 1
  br i1 %cmpBr_40b9f0, label %block_.L_40bb08, label %block_40b9f6

block_40b9f6:                                     ; preds = %block_.L_40b9ec
  %loadMem_40b9f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17659 = getelementptr inbounds %struct.GPR, %struct.GPR* %17658, i32 0, i32 33
  %17660 = getelementptr inbounds %struct.Reg, %struct.Reg* %17659, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %17660 to i64*
  %17661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17662 = getelementptr inbounds %struct.GPR, %struct.GPR* %17661, i32 0, i32 15
  %17663 = getelementptr inbounds %struct.Reg, %struct.Reg* %17662, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %17663 to i64*
  %17664 = load i64, i64* %RBP.i381
  %17665 = sub i64 %17664, 16
  %17666 = load i64, i64* %PC.i380
  %17667 = add i64 %17666, 7
  store i64 %17667, i64* %PC.i380
  %17668 = inttoptr i64 %17665 to i32*
  store i32 0, i32* %17668
  store %struct.Memory* %loadMem_40b9f6, %struct.Memory** %MEMORY
  br label %block_.L_40b9fd

block_.L_40b9fd:                                  ; preds = %block_40ba07, %block_40b9f6
  %loadMem_40b9fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17670 = getelementptr inbounds %struct.GPR, %struct.GPR* %17669, i32 0, i32 33
  %17671 = getelementptr inbounds %struct.Reg, %struct.Reg* %17670, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %17671 to i64*
  %17672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17673 = getelementptr inbounds %struct.GPR, %struct.GPR* %17672, i32 0, i32 15
  %17674 = getelementptr inbounds %struct.Reg, %struct.Reg* %17673, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %17674 to i64*
  %17675 = load i64, i64* %RBP.i379
  %17676 = sub i64 %17675, 16
  %17677 = load i64, i64* %PC.i378
  %17678 = add i64 %17677, 4
  store i64 %17678, i64* %PC.i378
  %17679 = inttoptr i64 %17676 to i32*
  %17680 = load i32, i32* %17679
  %17681 = sub i32 %17680, 4
  %17682 = icmp ult i32 %17680, 4
  %17683 = zext i1 %17682 to i8
  %17684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17683, i8* %17684, align 1
  %17685 = and i32 %17681, 255
  %17686 = call i32 @llvm.ctpop.i32(i32 %17685)
  %17687 = trunc i32 %17686 to i8
  %17688 = and i8 %17687, 1
  %17689 = xor i8 %17688, 1
  %17690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17689, i8* %17690, align 1
  %17691 = xor i32 %17680, 4
  %17692 = xor i32 %17691, %17681
  %17693 = lshr i32 %17692, 4
  %17694 = trunc i32 %17693 to i8
  %17695 = and i8 %17694, 1
  %17696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17695, i8* %17696, align 1
  %17697 = icmp eq i32 %17681, 0
  %17698 = zext i1 %17697 to i8
  %17699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17698, i8* %17699, align 1
  %17700 = lshr i32 %17681, 31
  %17701 = trunc i32 %17700 to i8
  %17702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17701, i8* %17702, align 1
  %17703 = lshr i32 %17680, 31
  %17704 = xor i32 %17700, %17703
  %17705 = add i32 %17704, %17703
  %17706 = icmp eq i32 %17705, 2
  %17707 = zext i1 %17706 to i8
  %17708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17707, i8* %17708, align 1
  store %struct.Memory* %loadMem_40b9fd, %struct.Memory** %MEMORY
  %loadMem_40ba01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17710 = getelementptr inbounds %struct.GPR, %struct.GPR* %17709, i32 0, i32 33
  %17711 = getelementptr inbounds %struct.Reg, %struct.Reg* %17710, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %17711 to i64*
  %17712 = load i64, i64* %PC.i377
  %17713 = add i64 %17712, 60
  %17714 = load i64, i64* %PC.i377
  %17715 = add i64 %17714, 6
  %17716 = load i64, i64* %PC.i377
  %17717 = add i64 %17716, 6
  store i64 %17717, i64* %PC.i377
  %17718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17719 = load i8, i8* %17718, align 1
  %17720 = icmp ne i8 %17719, 0
  %17721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17722 = load i8, i8* %17721, align 1
  %17723 = icmp ne i8 %17722, 0
  %17724 = xor i1 %17720, %17723
  %17725 = xor i1 %17724, true
  %17726 = zext i1 %17725 to i8
  store i8 %17726, i8* %BRANCH_TAKEN, align 1
  %17727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17728 = select i1 %17724, i64 %17715, i64 %17713
  store i64 %17728, i64* %17727, align 8
  store %struct.Memory* %loadMem_40ba01, %struct.Memory** %MEMORY
  %loadBr_40ba01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba01 = icmp eq i8 %loadBr_40ba01, 1
  br i1 %cmpBr_40ba01, label %block_.L_40ba3d, label %block_40ba07

block_40ba07:                                     ; preds = %block_.L_40b9fd
  %loadMem_40ba07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17730 = getelementptr inbounds %struct.GPR, %struct.GPR* %17729, i32 0, i32 33
  %17731 = getelementptr inbounds %struct.Reg, %struct.Reg* %17730, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %17731 to i64*
  %17732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17733 = getelementptr inbounds %struct.GPR, %struct.GPR* %17732, i32 0, i32 1
  %17734 = getelementptr inbounds %struct.Reg, %struct.Reg* %17733, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %17734 to i64*
  %17735 = load i64, i64* %PC.i375
  %17736 = add i64 %17735, 8
  store i64 %17736, i64* %PC.i375
  %17737 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %17737, i64* %RAX.i376, align 8
  store %struct.Memory* %loadMem_40ba07, %struct.Memory** %MEMORY
  %loadMem_40ba0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17739 = getelementptr inbounds %struct.GPR, %struct.GPR* %17738, i32 0, i32 33
  %17740 = getelementptr inbounds %struct.Reg, %struct.Reg* %17739, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %17740 to i64*
  %17741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17742 = getelementptr inbounds %struct.GPR, %struct.GPR* %17741, i32 0, i32 1
  %17743 = getelementptr inbounds %struct.Reg, %struct.Reg* %17742, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %17743 to i64*
  %17744 = load i64, i64* %RAX.i374
  %17745 = load i64, i64* %PC.i373
  %17746 = add i64 %17745, 6
  store i64 %17746, i64* %PC.i373
  %17747 = add i64 13112, %17744
  store i64 %17747, i64* %RAX.i374, align 8
  %17748 = icmp ult i64 %17747, %17744
  %17749 = icmp ult i64 %17747, 13112
  %17750 = or i1 %17748, %17749
  %17751 = zext i1 %17750 to i8
  %17752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17751, i8* %17752, align 1
  %17753 = trunc i64 %17747 to i32
  %17754 = and i32 %17753, 255
  %17755 = call i32 @llvm.ctpop.i32(i32 %17754)
  %17756 = trunc i32 %17755 to i8
  %17757 = and i8 %17756, 1
  %17758 = xor i8 %17757, 1
  %17759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17758, i8* %17759, align 1
  %17760 = xor i64 13112, %17744
  %17761 = xor i64 %17760, %17747
  %17762 = lshr i64 %17761, 4
  %17763 = trunc i64 %17762 to i8
  %17764 = and i8 %17763, 1
  %17765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17764, i8* %17765, align 1
  %17766 = icmp eq i64 %17747, 0
  %17767 = zext i1 %17766 to i8
  %17768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17767, i8* %17768, align 1
  %17769 = lshr i64 %17747, 63
  %17770 = trunc i64 %17769 to i8
  %17771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17770, i8* %17771, align 1
  %17772 = lshr i64 %17744, 63
  %17773 = xor i64 %17769, %17772
  %17774 = add i64 %17773, %17769
  %17775 = icmp eq i64 %17774, 2
  %17776 = zext i1 %17775 to i8
  %17777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17776, i8* %17777, align 1
  store %struct.Memory* %loadMem_40ba0f, %struct.Memory** %MEMORY
  %loadMem_40ba15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17779 = getelementptr inbounds %struct.GPR, %struct.GPR* %17778, i32 0, i32 33
  %17780 = getelementptr inbounds %struct.Reg, %struct.Reg* %17779, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %17780 to i64*
  %17781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17782 = getelementptr inbounds %struct.GPR, %struct.GPR* %17781, i32 0, i32 5
  %17783 = getelementptr inbounds %struct.Reg, %struct.Reg* %17782, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %17783 to i64*
  %17784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17785 = getelementptr inbounds %struct.GPR, %struct.GPR* %17784, i32 0, i32 15
  %17786 = getelementptr inbounds %struct.Reg, %struct.Reg* %17785, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %17786 to i64*
  %17787 = load i64, i64* %RBP.i372
  %17788 = sub i64 %17787, 16
  %17789 = load i64, i64* %PC.i370
  %17790 = add i64 %17789, 4
  store i64 %17790, i64* %PC.i370
  %17791 = inttoptr i64 %17788 to i32*
  %17792 = load i32, i32* %17791
  %17793 = sext i32 %17792 to i64
  store i64 %17793, i64* %RCX.i371, align 8
  store %struct.Memory* %loadMem_40ba15, %struct.Memory** %MEMORY
  %loadMem_40ba19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17795 = getelementptr inbounds %struct.GPR, %struct.GPR* %17794, i32 0, i32 33
  %17796 = getelementptr inbounds %struct.Reg, %struct.Reg* %17795, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %17796 to i64*
  %17797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17798 = getelementptr inbounds %struct.GPR, %struct.GPR* %17797, i32 0, i32 5
  %17799 = getelementptr inbounds %struct.Reg, %struct.Reg* %17798, i32 0, i32 0
  %RCX.i369 = bitcast %union.anon* %17799 to i64*
  %17800 = load i64, i64* %RCX.i369
  %17801 = load i64, i64* %PC.i368
  %17802 = add i64 %17801, 4
  store i64 %17802, i64* %PC.i368
  %17803 = shl i64 %17800, 5
  %17804 = icmp slt i64 %17803, 0
  %17805 = shl i64 %17803, 1
  store i64 %17805, i64* %RCX.i369, align 8
  %17806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17807 = zext i1 %17804 to i8
  store i8 %17807, i8* %17806, align 1
  %17808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17809 = trunc i64 %17805 to i32
  %17810 = and i32 %17809, 254
  %17811 = call i32 @llvm.ctpop.i32(i32 %17810)
  %17812 = trunc i32 %17811 to i8
  %17813 = and i8 %17812, 1
  %17814 = xor i8 %17813, 1
  store i8 %17814, i8* %17808, align 1
  %17815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17815, align 1
  %17816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17817 = icmp eq i64 %17805, 0
  %17818 = zext i1 %17817 to i8
  store i8 %17818, i8* %17816, align 1
  %17819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17820 = lshr i64 %17805, 63
  %17821 = trunc i64 %17820 to i8
  store i8 %17821, i8* %17819, align 1
  %17822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %17822, align 1
  store %struct.Memory* %loadMem_40ba19, %struct.Memory** %MEMORY
  %loadMem_40ba1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17824 = getelementptr inbounds %struct.GPR, %struct.GPR* %17823, i32 0, i32 33
  %17825 = getelementptr inbounds %struct.Reg, %struct.Reg* %17824, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %17825 to i64*
  %17826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17827 = getelementptr inbounds %struct.GPR, %struct.GPR* %17826, i32 0, i32 1
  %17828 = getelementptr inbounds %struct.Reg, %struct.Reg* %17827, i32 0, i32 0
  %RAX.i366 = bitcast %union.anon* %17828 to i64*
  %17829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17830 = getelementptr inbounds %struct.GPR, %struct.GPR* %17829, i32 0, i32 5
  %17831 = getelementptr inbounds %struct.Reg, %struct.Reg* %17830, i32 0, i32 0
  %RCX.i367 = bitcast %union.anon* %17831 to i64*
  %17832 = load i64, i64* %RAX.i366
  %17833 = load i64, i64* %RCX.i367
  %17834 = load i64, i64* %PC.i365
  %17835 = add i64 %17834, 3
  store i64 %17835, i64* %PC.i365
  %17836 = add i64 %17833, %17832
  store i64 %17836, i64* %RAX.i366, align 8
  %17837 = icmp ult i64 %17836, %17832
  %17838 = icmp ult i64 %17836, %17833
  %17839 = or i1 %17837, %17838
  %17840 = zext i1 %17839 to i8
  %17841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17840, i8* %17841, align 1
  %17842 = trunc i64 %17836 to i32
  %17843 = and i32 %17842, 255
  %17844 = call i32 @llvm.ctpop.i32(i32 %17843)
  %17845 = trunc i32 %17844 to i8
  %17846 = and i8 %17845, 1
  %17847 = xor i8 %17846, 1
  %17848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17847, i8* %17848, align 1
  %17849 = xor i64 %17833, %17832
  %17850 = xor i64 %17849, %17836
  %17851 = lshr i64 %17850, 4
  %17852 = trunc i64 %17851 to i8
  %17853 = and i8 %17852, 1
  %17854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17853, i8* %17854, align 1
  %17855 = icmp eq i64 %17836, 0
  %17856 = zext i1 %17855 to i8
  %17857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17856, i8* %17857, align 1
  %17858 = lshr i64 %17836, 63
  %17859 = trunc i64 %17858 to i8
  %17860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17859, i8* %17860, align 1
  %17861 = lshr i64 %17832, 63
  %17862 = lshr i64 %17833, 63
  %17863 = xor i64 %17858, %17861
  %17864 = xor i64 %17858, %17862
  %17865 = add i64 %17863, %17864
  %17866 = icmp eq i64 %17865, 2
  %17867 = zext i1 %17866 to i8
  %17868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17867, i8* %17868, align 1
  store %struct.Memory* %loadMem_40ba1d, %struct.Memory** %MEMORY
  %loadMem_40ba20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17870 = getelementptr inbounds %struct.GPR, %struct.GPR* %17869, i32 0, i32 33
  %17871 = getelementptr inbounds %struct.Reg, %struct.Reg* %17870, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %17871 to i64*
  %17872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17873 = getelementptr inbounds %struct.GPR, %struct.GPR* %17872, i32 0, i32 5
  %17874 = getelementptr inbounds %struct.Reg, %struct.Reg* %17873, i32 0, i32 0
  %RCX.i363 = bitcast %union.anon* %17874 to i64*
  %17875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17876 = getelementptr inbounds %struct.GPR, %struct.GPR* %17875, i32 0, i32 15
  %17877 = getelementptr inbounds %struct.Reg, %struct.Reg* %17876, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %17877 to i64*
  %17878 = load i64, i64* %RBP.i364
  %17879 = sub i64 %17878, 20
  %17880 = load i64, i64* %PC.i362
  %17881 = add i64 %17880, 4
  store i64 %17881, i64* %PC.i362
  %17882 = inttoptr i64 %17879 to i32*
  %17883 = load i32, i32* %17882
  %17884 = sext i32 %17883 to i64
  store i64 %17884, i64* %RCX.i363, align 8
  store %struct.Memory* %loadMem_40ba20, %struct.Memory** %MEMORY
  %loadMem_40ba24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17886 = getelementptr inbounds %struct.GPR, %struct.GPR* %17885, i32 0, i32 33
  %17887 = getelementptr inbounds %struct.Reg, %struct.Reg* %17886, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %17887 to i64*
  %17888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17889 = getelementptr inbounds %struct.GPR, %struct.GPR* %17888, i32 0, i32 1
  %17890 = getelementptr inbounds %struct.Reg, %struct.Reg* %17889, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %17890 to i64*
  %17891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17892 = getelementptr inbounds %struct.GPR, %struct.GPR* %17891, i32 0, i32 5
  %17893 = getelementptr inbounds %struct.Reg, %struct.Reg* %17892, i32 0, i32 0
  %RCX.i360 = bitcast %union.anon* %17893 to i64*
  %17894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17895 = getelementptr inbounds %struct.GPR, %struct.GPR* %17894, i32 0, i32 7
  %17896 = getelementptr inbounds %struct.Reg, %struct.Reg* %17895, i32 0, i32 0
  %RDX.i361 = bitcast %union.anon* %17896 to i64*
  %17897 = load i64, i64* %RAX.i359
  %17898 = load i64, i64* %RCX.i360
  %17899 = mul i64 %17898, 4
  %17900 = add i64 %17899, %17897
  %17901 = load i64, i64* %PC.i358
  %17902 = add i64 %17901, 3
  store i64 %17902, i64* %PC.i358
  %17903 = inttoptr i64 %17900 to i32*
  %17904 = load i32, i32* %17903
  %17905 = zext i32 %17904 to i64
  store i64 %17905, i64* %RDX.i361, align 8
  store %struct.Memory* %loadMem_40ba24, %struct.Memory** %MEMORY
  %loadMem_40ba27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17907 = getelementptr inbounds %struct.GPR, %struct.GPR* %17906, i32 0, i32 33
  %17908 = getelementptr inbounds %struct.Reg, %struct.Reg* %17907, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %17908 to i64*
  %17909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17910 = getelementptr inbounds %struct.GPR, %struct.GPR* %17909, i32 0, i32 1
  %17911 = getelementptr inbounds %struct.Reg, %struct.Reg* %17910, i32 0, i32 0
  %RAX.i356 = bitcast %union.anon* %17911 to i64*
  %17912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17913 = getelementptr inbounds %struct.GPR, %struct.GPR* %17912, i32 0, i32 15
  %17914 = getelementptr inbounds %struct.Reg, %struct.Reg* %17913, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %17914 to i64*
  %17915 = load i64, i64* %RBP.i357
  %17916 = sub i64 %17915, 16
  %17917 = load i64, i64* %PC.i355
  %17918 = add i64 %17917, 4
  store i64 %17918, i64* %PC.i355
  %17919 = inttoptr i64 %17916 to i32*
  %17920 = load i32, i32* %17919
  %17921 = sext i32 %17920 to i64
  store i64 %17921, i64* %RAX.i356, align 8
  store %struct.Memory* %loadMem_40ba27, %struct.Memory** %MEMORY
  %loadMem_40ba2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17923 = getelementptr inbounds %struct.GPR, %struct.GPR* %17922, i32 0, i32 33
  %17924 = getelementptr inbounds %struct.Reg, %struct.Reg* %17923, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %17924 to i64*
  %17925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17926 = getelementptr inbounds %struct.GPR, %struct.GPR* %17925, i32 0, i32 7
  %17927 = getelementptr inbounds %struct.Reg, %struct.Reg* %17926, i32 0, i32 0
  %EDX.i352 = bitcast %union.anon* %17927 to i32*
  %17928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17929 = getelementptr inbounds %struct.GPR, %struct.GPR* %17928, i32 0, i32 1
  %17930 = getelementptr inbounds %struct.Reg, %struct.Reg* %17929, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %17930 to i64*
  %17931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17932 = getelementptr inbounds %struct.GPR, %struct.GPR* %17931, i32 0, i32 15
  %17933 = getelementptr inbounds %struct.Reg, %struct.Reg* %17932, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %17933 to i64*
  %17934 = load i64, i64* %RBP.i354
  %17935 = load i64, i64* %RAX.i353
  %17936 = mul i64 %17935, 4
  %17937 = add i64 %17934, -48
  %17938 = add i64 %17937, %17936
  %17939 = load i32, i32* %EDX.i352
  %17940 = zext i32 %17939 to i64
  %17941 = load i64, i64* %PC.i351
  %17942 = add i64 %17941, 4
  store i64 %17942, i64* %PC.i351
  %17943 = inttoptr i64 %17938 to i32*
  store i32 %17939, i32* %17943
  store %struct.Memory* %loadMem_40ba2b, %struct.Memory** %MEMORY
  %loadMem_40ba2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17945 = getelementptr inbounds %struct.GPR, %struct.GPR* %17944, i32 0, i32 33
  %17946 = getelementptr inbounds %struct.Reg, %struct.Reg* %17945, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %17946 to i64*
  %17947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17948 = getelementptr inbounds %struct.GPR, %struct.GPR* %17947, i32 0, i32 1
  %17949 = getelementptr inbounds %struct.Reg, %struct.Reg* %17948, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %17949 to i64*
  %17950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17951 = getelementptr inbounds %struct.GPR, %struct.GPR* %17950, i32 0, i32 15
  %17952 = getelementptr inbounds %struct.Reg, %struct.Reg* %17951, i32 0, i32 0
  %RBP.i350 = bitcast %union.anon* %17952 to i64*
  %17953 = load i64, i64* %RBP.i350
  %17954 = sub i64 %17953, 16
  %17955 = load i64, i64* %PC.i348
  %17956 = add i64 %17955, 3
  store i64 %17956, i64* %PC.i348
  %17957 = inttoptr i64 %17954 to i32*
  %17958 = load i32, i32* %17957
  %17959 = zext i32 %17958 to i64
  store i64 %17959, i64* %RAX.i349, align 8
  store %struct.Memory* %loadMem_40ba2f, %struct.Memory** %MEMORY
  %loadMem_40ba32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17961 = getelementptr inbounds %struct.GPR, %struct.GPR* %17960, i32 0, i32 33
  %17962 = getelementptr inbounds %struct.Reg, %struct.Reg* %17961, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %17962 to i64*
  %17963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17964 = getelementptr inbounds %struct.GPR, %struct.GPR* %17963, i32 0, i32 1
  %17965 = getelementptr inbounds %struct.Reg, %struct.Reg* %17964, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %17965 to i64*
  %17966 = load i64, i64* %RAX.i347
  %17967 = load i64, i64* %PC.i346
  %17968 = add i64 %17967, 3
  store i64 %17968, i64* %PC.i346
  %17969 = trunc i64 %17966 to i32
  %17970 = add i32 1, %17969
  %17971 = zext i32 %17970 to i64
  store i64 %17971, i64* %RAX.i347, align 8
  %17972 = icmp ult i32 %17970, %17969
  %17973 = icmp ult i32 %17970, 1
  %17974 = or i1 %17972, %17973
  %17975 = zext i1 %17974 to i8
  %17976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17975, i8* %17976, align 1
  %17977 = and i32 %17970, 255
  %17978 = call i32 @llvm.ctpop.i32(i32 %17977)
  %17979 = trunc i32 %17978 to i8
  %17980 = and i8 %17979, 1
  %17981 = xor i8 %17980, 1
  %17982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17981, i8* %17982, align 1
  %17983 = xor i64 1, %17966
  %17984 = trunc i64 %17983 to i32
  %17985 = xor i32 %17984, %17970
  %17986 = lshr i32 %17985, 4
  %17987 = trunc i32 %17986 to i8
  %17988 = and i8 %17987, 1
  %17989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17988, i8* %17989, align 1
  %17990 = icmp eq i32 %17970, 0
  %17991 = zext i1 %17990 to i8
  %17992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17991, i8* %17992, align 1
  %17993 = lshr i32 %17970, 31
  %17994 = trunc i32 %17993 to i8
  %17995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17994, i8* %17995, align 1
  %17996 = lshr i32 %17969, 31
  %17997 = xor i32 %17993, %17996
  %17998 = add i32 %17997, %17993
  %17999 = icmp eq i32 %17998, 2
  %18000 = zext i1 %17999 to i8
  %18001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18000, i8* %18001, align 1
  store %struct.Memory* %loadMem_40ba32, %struct.Memory** %MEMORY
  %loadMem_40ba35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18003 = getelementptr inbounds %struct.GPR, %struct.GPR* %18002, i32 0, i32 33
  %18004 = getelementptr inbounds %struct.Reg, %struct.Reg* %18003, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %18004 to i64*
  %18005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18006 = getelementptr inbounds %struct.GPR, %struct.GPR* %18005, i32 0, i32 1
  %18007 = getelementptr inbounds %struct.Reg, %struct.Reg* %18006, i32 0, i32 0
  %EAX.i344 = bitcast %union.anon* %18007 to i32*
  %18008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18009 = getelementptr inbounds %struct.GPR, %struct.GPR* %18008, i32 0, i32 15
  %18010 = getelementptr inbounds %struct.Reg, %struct.Reg* %18009, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %18010 to i64*
  %18011 = load i64, i64* %RBP.i345
  %18012 = sub i64 %18011, 16
  %18013 = load i32, i32* %EAX.i344
  %18014 = zext i32 %18013 to i64
  %18015 = load i64, i64* %PC.i343
  %18016 = add i64 %18015, 3
  store i64 %18016, i64* %PC.i343
  %18017 = inttoptr i64 %18012 to i32*
  store i32 %18013, i32* %18017
  store %struct.Memory* %loadMem_40ba35, %struct.Memory** %MEMORY
  %loadMem_40ba38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18019 = getelementptr inbounds %struct.GPR, %struct.GPR* %18018, i32 0, i32 33
  %18020 = getelementptr inbounds %struct.Reg, %struct.Reg* %18019, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %18020 to i64*
  %18021 = load i64, i64* %PC.i342
  %18022 = add i64 %18021, -59
  %18023 = load i64, i64* %PC.i342
  %18024 = add i64 %18023, 5
  store i64 %18024, i64* %PC.i342
  %18025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18022, i64* %18025, align 8
  store %struct.Memory* %loadMem_40ba38, %struct.Memory** %MEMORY
  br label %block_.L_40b9fd

block_.L_40ba3d:                                  ; preds = %block_.L_40b9fd
  %loadMem_40ba3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18027 = getelementptr inbounds %struct.GPR, %struct.GPR* %18026, i32 0, i32 33
  %18028 = getelementptr inbounds %struct.Reg, %struct.Reg* %18027, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %18028 to i64*
  %18029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18030 = getelementptr inbounds %struct.GPR, %struct.GPR* %18029, i32 0, i32 1
  %18031 = getelementptr inbounds %struct.Reg, %struct.Reg* %18030, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %18031 to i64*
  %18032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18033 = getelementptr inbounds %struct.GPR, %struct.GPR* %18032, i32 0, i32 15
  %18034 = getelementptr inbounds %struct.Reg, %struct.Reg* %18033, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %18034 to i64*
  %18035 = load i64, i64* %RBP.i341
  %18036 = sub i64 %18035, 48
  %18037 = load i64, i64* %PC.i339
  %18038 = add i64 %18037, 3
  store i64 %18038, i64* %PC.i339
  %18039 = inttoptr i64 %18036 to i32*
  %18040 = load i32, i32* %18039
  %18041 = zext i32 %18040 to i64
  store i64 %18041, i64* %RAX.i340, align 8
  store %struct.Memory* %loadMem_40ba3d, %struct.Memory** %MEMORY
  %loadMem_40ba40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18043 = getelementptr inbounds %struct.GPR, %struct.GPR* %18042, i32 0, i32 33
  %18044 = getelementptr inbounds %struct.Reg, %struct.Reg* %18043, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %18044 to i64*
  %18045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18046 = getelementptr inbounds %struct.GPR, %struct.GPR* %18045, i32 0, i32 1
  %18047 = getelementptr inbounds %struct.Reg, %struct.Reg* %18046, i32 0, i32 0
  %RAX.i337 = bitcast %union.anon* %18047 to i64*
  %18048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18049 = getelementptr inbounds %struct.GPR, %struct.GPR* %18048, i32 0, i32 15
  %18050 = getelementptr inbounds %struct.Reg, %struct.Reg* %18049, i32 0, i32 0
  %RBP.i338 = bitcast %union.anon* %18050 to i64*
  %18051 = load i64, i64* %RAX.i337
  %18052 = load i64, i64* %RBP.i338
  %18053 = sub i64 %18052, 40
  %18054 = load i64, i64* %PC.i336
  %18055 = add i64 %18054, 3
  store i64 %18055, i64* %PC.i336
  %18056 = trunc i64 %18051 to i32
  %18057 = inttoptr i64 %18053 to i32*
  %18058 = load i32, i32* %18057
  %18059 = add i32 %18058, %18056
  %18060 = zext i32 %18059 to i64
  store i64 %18060, i64* %RAX.i337, align 8
  %18061 = icmp ult i32 %18059, %18056
  %18062 = icmp ult i32 %18059, %18058
  %18063 = or i1 %18061, %18062
  %18064 = zext i1 %18063 to i8
  %18065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18064, i8* %18065, align 1
  %18066 = and i32 %18059, 255
  %18067 = call i32 @llvm.ctpop.i32(i32 %18066)
  %18068 = trunc i32 %18067 to i8
  %18069 = and i8 %18068, 1
  %18070 = xor i8 %18069, 1
  %18071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18070, i8* %18071, align 1
  %18072 = xor i32 %18058, %18056
  %18073 = xor i32 %18072, %18059
  %18074 = lshr i32 %18073, 4
  %18075 = trunc i32 %18074 to i8
  %18076 = and i8 %18075, 1
  %18077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18076, i8* %18077, align 1
  %18078 = icmp eq i32 %18059, 0
  %18079 = zext i1 %18078 to i8
  %18080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18079, i8* %18080, align 1
  %18081 = lshr i32 %18059, 31
  %18082 = trunc i32 %18081 to i8
  %18083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18082, i8* %18083, align 1
  %18084 = lshr i32 %18056, 31
  %18085 = lshr i32 %18058, 31
  %18086 = xor i32 %18081, %18084
  %18087 = xor i32 %18081, %18085
  %18088 = add i32 %18086, %18087
  %18089 = icmp eq i32 %18088, 2
  %18090 = zext i1 %18089 to i8
  %18091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18090, i8* %18091, align 1
  store %struct.Memory* %loadMem_40ba40, %struct.Memory** %MEMORY
  %loadMem_40ba43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18093 = getelementptr inbounds %struct.GPR, %struct.GPR* %18092, i32 0, i32 33
  %18094 = getelementptr inbounds %struct.Reg, %struct.Reg* %18093, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %18094 to i64*
  %18095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18096 = getelementptr inbounds %struct.GPR, %struct.GPR* %18095, i32 0, i32 1
  %18097 = getelementptr inbounds %struct.Reg, %struct.Reg* %18096, i32 0, i32 0
  %EAX.i334 = bitcast %union.anon* %18097 to i32*
  %18098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18099 = getelementptr inbounds %struct.GPR, %struct.GPR* %18098, i32 0, i32 15
  %18100 = getelementptr inbounds %struct.Reg, %struct.Reg* %18099, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %18100 to i64*
  %18101 = load i64, i64* %RBP.i335
  %18102 = sub i64 %18101, 64
  %18103 = load i32, i32* %EAX.i334
  %18104 = zext i32 %18103 to i64
  %18105 = load i64, i64* %PC.i333
  %18106 = add i64 %18105, 3
  store i64 %18106, i64* %PC.i333
  %18107 = inttoptr i64 %18102 to i32*
  store i32 %18103, i32* %18107
  store %struct.Memory* %loadMem_40ba43, %struct.Memory** %MEMORY
  %loadMem_40ba46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18109 = getelementptr inbounds %struct.GPR, %struct.GPR* %18108, i32 0, i32 33
  %18110 = getelementptr inbounds %struct.Reg, %struct.Reg* %18109, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %18110 to i64*
  %18111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18112 = getelementptr inbounds %struct.GPR, %struct.GPR* %18111, i32 0, i32 1
  %18113 = getelementptr inbounds %struct.Reg, %struct.Reg* %18112, i32 0, i32 0
  %RAX.i331 = bitcast %union.anon* %18113 to i64*
  %18114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18115 = getelementptr inbounds %struct.GPR, %struct.GPR* %18114, i32 0, i32 15
  %18116 = getelementptr inbounds %struct.Reg, %struct.Reg* %18115, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %18116 to i64*
  %18117 = load i64, i64* %RBP.i332
  %18118 = sub i64 %18117, 48
  %18119 = load i64, i64* %PC.i330
  %18120 = add i64 %18119, 3
  store i64 %18120, i64* %PC.i330
  %18121 = inttoptr i64 %18118 to i32*
  %18122 = load i32, i32* %18121
  %18123 = zext i32 %18122 to i64
  store i64 %18123, i64* %RAX.i331, align 8
  store %struct.Memory* %loadMem_40ba46, %struct.Memory** %MEMORY
  %loadMem_40ba49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18125 = getelementptr inbounds %struct.GPR, %struct.GPR* %18124, i32 0, i32 33
  %18126 = getelementptr inbounds %struct.Reg, %struct.Reg* %18125, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %18126 to i64*
  %18127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18128 = getelementptr inbounds %struct.GPR, %struct.GPR* %18127, i32 0, i32 1
  %18129 = getelementptr inbounds %struct.Reg, %struct.Reg* %18128, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %18129 to i64*
  %18130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18131 = getelementptr inbounds %struct.GPR, %struct.GPR* %18130, i32 0, i32 15
  %18132 = getelementptr inbounds %struct.Reg, %struct.Reg* %18131, i32 0, i32 0
  %RBP.i329 = bitcast %union.anon* %18132 to i64*
  %18133 = load i64, i64* %RAX.i328
  %18134 = load i64, i64* %RBP.i329
  %18135 = sub i64 %18134, 40
  %18136 = load i64, i64* %PC.i327
  %18137 = add i64 %18136, 3
  store i64 %18137, i64* %PC.i327
  %18138 = trunc i64 %18133 to i32
  %18139 = inttoptr i64 %18135 to i32*
  %18140 = load i32, i32* %18139
  %18141 = sub i32 %18138, %18140
  %18142 = zext i32 %18141 to i64
  store i64 %18142, i64* %RAX.i328, align 8
  %18143 = icmp ult i32 %18138, %18140
  %18144 = zext i1 %18143 to i8
  %18145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18144, i8* %18145, align 1
  %18146 = and i32 %18141, 255
  %18147 = call i32 @llvm.ctpop.i32(i32 %18146)
  %18148 = trunc i32 %18147 to i8
  %18149 = and i8 %18148, 1
  %18150 = xor i8 %18149, 1
  %18151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18150, i8* %18151, align 1
  %18152 = xor i32 %18140, %18138
  %18153 = xor i32 %18152, %18141
  %18154 = lshr i32 %18153, 4
  %18155 = trunc i32 %18154 to i8
  %18156 = and i8 %18155, 1
  %18157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18156, i8* %18157, align 1
  %18158 = icmp eq i32 %18141, 0
  %18159 = zext i1 %18158 to i8
  %18160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18159, i8* %18160, align 1
  %18161 = lshr i32 %18141, 31
  %18162 = trunc i32 %18161 to i8
  %18163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18162, i8* %18163, align 1
  %18164 = lshr i32 %18138, 31
  %18165 = lshr i32 %18140, 31
  %18166 = xor i32 %18165, %18164
  %18167 = xor i32 %18161, %18164
  %18168 = add i32 %18167, %18166
  %18169 = icmp eq i32 %18168, 2
  %18170 = zext i1 %18169 to i8
  %18171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18170, i8* %18171, align 1
  store %struct.Memory* %loadMem_40ba49, %struct.Memory** %MEMORY
  %loadMem_40ba4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18173 = getelementptr inbounds %struct.GPR, %struct.GPR* %18172, i32 0, i32 33
  %18174 = getelementptr inbounds %struct.Reg, %struct.Reg* %18173, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %18174 to i64*
  %18175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18176 = getelementptr inbounds %struct.GPR, %struct.GPR* %18175, i32 0, i32 1
  %18177 = getelementptr inbounds %struct.Reg, %struct.Reg* %18176, i32 0, i32 0
  %EAX.i325 = bitcast %union.anon* %18177 to i32*
  %18178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18179 = getelementptr inbounds %struct.GPR, %struct.GPR* %18178, i32 0, i32 15
  %18180 = getelementptr inbounds %struct.Reg, %struct.Reg* %18179, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %18180 to i64*
  %18181 = load i64, i64* %RBP.i326
  %18182 = sub i64 %18181, 60
  %18183 = load i32, i32* %EAX.i325
  %18184 = zext i32 %18183 to i64
  %18185 = load i64, i64* %PC.i324
  %18186 = add i64 %18185, 3
  store i64 %18186, i64* %PC.i324
  %18187 = inttoptr i64 %18182 to i32*
  store i32 %18183, i32* %18187
  store %struct.Memory* %loadMem_40ba4c, %struct.Memory** %MEMORY
  %loadMem_40ba4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18189 = getelementptr inbounds %struct.GPR, %struct.GPR* %18188, i32 0, i32 33
  %18190 = getelementptr inbounds %struct.Reg, %struct.Reg* %18189, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %18190 to i64*
  %18191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18192 = getelementptr inbounds %struct.GPR, %struct.GPR* %18191, i32 0, i32 1
  %18193 = getelementptr inbounds %struct.Reg, %struct.Reg* %18192, i32 0, i32 0
  %RAX.i322 = bitcast %union.anon* %18193 to i64*
  %18194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18195 = getelementptr inbounds %struct.GPR, %struct.GPR* %18194, i32 0, i32 15
  %18196 = getelementptr inbounds %struct.Reg, %struct.Reg* %18195, i32 0, i32 0
  %RBP.i323 = bitcast %union.anon* %18196 to i64*
  %18197 = load i64, i64* %RBP.i323
  %18198 = sub i64 %18197, 44
  %18199 = load i64, i64* %PC.i321
  %18200 = add i64 %18199, 3
  store i64 %18200, i64* %PC.i321
  %18201 = inttoptr i64 %18198 to i32*
  %18202 = load i32, i32* %18201
  %18203 = zext i32 %18202 to i64
  store i64 %18203, i64* %RAX.i322, align 8
  store %struct.Memory* %loadMem_40ba4f, %struct.Memory** %MEMORY
  %loadMem_40ba52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18205 = getelementptr inbounds %struct.GPR, %struct.GPR* %18204, i32 0, i32 33
  %18206 = getelementptr inbounds %struct.Reg, %struct.Reg* %18205, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %18206 to i64*
  %18207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18208 = getelementptr inbounds %struct.GPR, %struct.GPR* %18207, i32 0, i32 1
  %18209 = getelementptr inbounds %struct.Reg, %struct.Reg* %18208, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %18209 to i64*
  %18210 = load i64, i64* %RAX.i320
  %18211 = load i64, i64* %PC.i319
  %18212 = add i64 %18211, 2
  store i64 %18212, i64* %PC.i319
  %18213 = shl i64 %18210, 32
  %18214 = ashr i64 %18213, 33
  %18215 = trunc i64 %18210 to i8
  %18216 = and i8 %18215, 1
  %18217 = trunc i64 %18214 to i32
  %18218 = and i64 %18214, 4294967295
  store i64 %18218, i64* %RAX.i320, align 8
  %18219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18216, i8* %18219, align 1
  %18220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18221 = and i32 %18217, 255
  %18222 = call i32 @llvm.ctpop.i32(i32 %18221)
  %18223 = trunc i32 %18222 to i8
  %18224 = and i8 %18223, 1
  %18225 = xor i8 %18224, 1
  store i8 %18225, i8* %18220, align 1
  %18226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18226, align 1
  %18227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18228 = icmp eq i32 %18217, 0
  %18229 = zext i1 %18228 to i8
  store i8 %18229, i8* %18227, align 1
  %18230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18231 = lshr i32 %18217, 31
  %18232 = trunc i32 %18231 to i8
  store i8 %18232, i8* %18230, align 1
  %18233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18233, align 1
  store %struct.Memory* %loadMem_40ba52, %struct.Memory** %MEMORY
  %loadMem_40ba55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18235 = getelementptr inbounds %struct.GPR, %struct.GPR* %18234, i32 0, i32 33
  %18236 = getelementptr inbounds %struct.Reg, %struct.Reg* %18235, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %18236 to i64*
  %18237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18238 = getelementptr inbounds %struct.GPR, %struct.GPR* %18237, i32 0, i32 1
  %18239 = getelementptr inbounds %struct.Reg, %struct.Reg* %18238, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %18239 to i64*
  %18240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18241 = getelementptr inbounds %struct.GPR, %struct.GPR* %18240, i32 0, i32 15
  %18242 = getelementptr inbounds %struct.Reg, %struct.Reg* %18241, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %18242 to i64*
  %18243 = load i64, i64* %RAX.i317
  %18244 = load i64, i64* %RBP.i318
  %18245 = sub i64 %18244, 36
  %18246 = load i64, i64* %PC.i316
  %18247 = add i64 %18246, 3
  store i64 %18247, i64* %PC.i316
  %18248 = trunc i64 %18243 to i32
  %18249 = inttoptr i64 %18245 to i32*
  %18250 = load i32, i32* %18249
  %18251 = sub i32 %18248, %18250
  %18252 = zext i32 %18251 to i64
  store i64 %18252, i64* %RAX.i317, align 8
  %18253 = icmp ult i32 %18248, %18250
  %18254 = zext i1 %18253 to i8
  %18255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18254, i8* %18255, align 1
  %18256 = and i32 %18251, 255
  %18257 = call i32 @llvm.ctpop.i32(i32 %18256)
  %18258 = trunc i32 %18257 to i8
  %18259 = and i8 %18258, 1
  %18260 = xor i8 %18259, 1
  %18261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18260, i8* %18261, align 1
  %18262 = xor i32 %18250, %18248
  %18263 = xor i32 %18262, %18251
  %18264 = lshr i32 %18263, 4
  %18265 = trunc i32 %18264 to i8
  %18266 = and i8 %18265, 1
  %18267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18266, i8* %18267, align 1
  %18268 = icmp eq i32 %18251, 0
  %18269 = zext i1 %18268 to i8
  %18270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18269, i8* %18270, align 1
  %18271 = lshr i32 %18251, 31
  %18272 = trunc i32 %18271 to i8
  %18273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18272, i8* %18273, align 1
  %18274 = lshr i32 %18248, 31
  %18275 = lshr i32 %18250, 31
  %18276 = xor i32 %18275, %18274
  %18277 = xor i32 %18271, %18274
  %18278 = add i32 %18277, %18276
  %18279 = icmp eq i32 %18278, 2
  %18280 = zext i1 %18279 to i8
  %18281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18280, i8* %18281, align 1
  store %struct.Memory* %loadMem_40ba55, %struct.Memory** %MEMORY
  %loadMem_40ba58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18283 = getelementptr inbounds %struct.GPR, %struct.GPR* %18282, i32 0, i32 33
  %18284 = getelementptr inbounds %struct.Reg, %struct.Reg* %18283, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %18284 to i64*
  %18285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18286 = getelementptr inbounds %struct.GPR, %struct.GPR* %18285, i32 0, i32 1
  %18287 = getelementptr inbounds %struct.Reg, %struct.Reg* %18286, i32 0, i32 0
  %EAX.i314 = bitcast %union.anon* %18287 to i32*
  %18288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18289 = getelementptr inbounds %struct.GPR, %struct.GPR* %18288, i32 0, i32 15
  %18290 = getelementptr inbounds %struct.Reg, %struct.Reg* %18289, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %18290 to i64*
  %18291 = load i64, i64* %RBP.i315
  %18292 = sub i64 %18291, 56
  %18293 = load i32, i32* %EAX.i314
  %18294 = zext i32 %18293 to i64
  %18295 = load i64, i64* %PC.i313
  %18296 = add i64 %18295, 3
  store i64 %18296, i64* %PC.i313
  %18297 = inttoptr i64 %18292 to i32*
  store i32 %18293, i32* %18297
  store %struct.Memory* %loadMem_40ba58, %struct.Memory** %MEMORY
  %loadMem_40ba5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18299 = getelementptr inbounds %struct.GPR, %struct.GPR* %18298, i32 0, i32 33
  %18300 = getelementptr inbounds %struct.Reg, %struct.Reg* %18299, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %18300 to i64*
  %18301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18302 = getelementptr inbounds %struct.GPR, %struct.GPR* %18301, i32 0, i32 1
  %18303 = getelementptr inbounds %struct.Reg, %struct.Reg* %18302, i32 0, i32 0
  %RAX.i311 = bitcast %union.anon* %18303 to i64*
  %18304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18305 = getelementptr inbounds %struct.GPR, %struct.GPR* %18304, i32 0, i32 15
  %18306 = getelementptr inbounds %struct.Reg, %struct.Reg* %18305, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %18306 to i64*
  %18307 = load i64, i64* %RBP.i312
  %18308 = sub i64 %18307, 44
  %18309 = load i64, i64* %PC.i310
  %18310 = add i64 %18309, 3
  store i64 %18310, i64* %PC.i310
  %18311 = inttoptr i64 %18308 to i32*
  %18312 = load i32, i32* %18311
  %18313 = zext i32 %18312 to i64
  store i64 %18313, i64* %RAX.i311, align 8
  store %struct.Memory* %loadMem_40ba5b, %struct.Memory** %MEMORY
  %loadMem_40ba5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18315 = getelementptr inbounds %struct.GPR, %struct.GPR* %18314, i32 0, i32 33
  %18316 = getelementptr inbounds %struct.Reg, %struct.Reg* %18315, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %18316 to i64*
  %18317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18318 = getelementptr inbounds %struct.GPR, %struct.GPR* %18317, i32 0, i32 5
  %18319 = getelementptr inbounds %struct.Reg, %struct.Reg* %18318, i32 0, i32 0
  %RCX.i308 = bitcast %union.anon* %18319 to i64*
  %18320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18321 = getelementptr inbounds %struct.GPR, %struct.GPR* %18320, i32 0, i32 15
  %18322 = getelementptr inbounds %struct.Reg, %struct.Reg* %18321, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %18322 to i64*
  %18323 = load i64, i64* %RBP.i309
  %18324 = sub i64 %18323, 36
  %18325 = load i64, i64* %PC.i307
  %18326 = add i64 %18325, 3
  store i64 %18326, i64* %PC.i307
  %18327 = inttoptr i64 %18324 to i32*
  %18328 = load i32, i32* %18327
  %18329 = zext i32 %18328 to i64
  store i64 %18329, i64* %RCX.i308, align 8
  store %struct.Memory* %loadMem_40ba5e, %struct.Memory** %MEMORY
  %loadMem_40ba61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18331 = getelementptr inbounds %struct.GPR, %struct.GPR* %18330, i32 0, i32 33
  %18332 = getelementptr inbounds %struct.Reg, %struct.Reg* %18331, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %18332 to i64*
  %18333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18334 = getelementptr inbounds %struct.GPR, %struct.GPR* %18333, i32 0, i32 5
  %18335 = getelementptr inbounds %struct.Reg, %struct.Reg* %18334, i32 0, i32 0
  %RCX.i306 = bitcast %union.anon* %18335 to i64*
  %18336 = load i64, i64* %RCX.i306
  %18337 = load i64, i64* %PC.i305
  %18338 = add i64 %18337, 2
  store i64 %18338, i64* %PC.i305
  %18339 = shl i64 %18336, 32
  %18340 = ashr i64 %18339, 33
  %18341 = trunc i64 %18336 to i8
  %18342 = and i8 %18341, 1
  %18343 = trunc i64 %18340 to i32
  %18344 = and i64 %18340, 4294967295
  store i64 %18344, i64* %RCX.i306, align 8
  %18345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18342, i8* %18345, align 1
  %18346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18347 = and i32 %18343, 255
  %18348 = call i32 @llvm.ctpop.i32(i32 %18347)
  %18349 = trunc i32 %18348 to i8
  %18350 = and i8 %18349, 1
  %18351 = xor i8 %18350, 1
  store i8 %18351, i8* %18346, align 1
  %18352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18352, align 1
  %18353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18354 = icmp eq i32 %18343, 0
  %18355 = zext i1 %18354 to i8
  store i8 %18355, i8* %18353, align 1
  %18356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18357 = lshr i32 %18343, 31
  %18358 = trunc i32 %18357 to i8
  store i8 %18358, i8* %18356, align 1
  %18359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18359, align 1
  store %struct.Memory* %loadMem_40ba61, %struct.Memory** %MEMORY
  %loadMem_40ba64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18361 = getelementptr inbounds %struct.GPR, %struct.GPR* %18360, i32 0, i32 33
  %18362 = getelementptr inbounds %struct.Reg, %struct.Reg* %18361, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %18362 to i64*
  %18363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18364 = getelementptr inbounds %struct.GPR, %struct.GPR* %18363, i32 0, i32 5
  %18365 = getelementptr inbounds %struct.Reg, %struct.Reg* %18364, i32 0, i32 0
  %ECX.i303 = bitcast %union.anon* %18365 to i32*
  %18366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18367 = getelementptr inbounds %struct.GPR, %struct.GPR* %18366, i32 0, i32 1
  %18368 = getelementptr inbounds %struct.Reg, %struct.Reg* %18367, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %18368 to i64*
  %18369 = load i64, i64* %RAX.i304
  %18370 = load i32, i32* %ECX.i303
  %18371 = zext i32 %18370 to i64
  %18372 = load i64, i64* %PC.i302
  %18373 = add i64 %18372, 2
  store i64 %18373, i64* %PC.i302
  %18374 = trunc i64 %18369 to i32
  %18375 = add i32 %18370, %18374
  %18376 = zext i32 %18375 to i64
  store i64 %18376, i64* %RAX.i304, align 8
  %18377 = icmp ult i32 %18375, %18374
  %18378 = icmp ult i32 %18375, %18370
  %18379 = or i1 %18377, %18378
  %18380 = zext i1 %18379 to i8
  %18381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18380, i8* %18381, align 1
  %18382 = and i32 %18375, 255
  %18383 = call i32 @llvm.ctpop.i32(i32 %18382)
  %18384 = trunc i32 %18383 to i8
  %18385 = and i8 %18384, 1
  %18386 = xor i8 %18385, 1
  %18387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18386, i8* %18387, align 1
  %18388 = xor i64 %18371, %18369
  %18389 = trunc i64 %18388 to i32
  %18390 = xor i32 %18389, %18375
  %18391 = lshr i32 %18390, 4
  %18392 = trunc i32 %18391 to i8
  %18393 = and i8 %18392, 1
  %18394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18393, i8* %18394, align 1
  %18395 = icmp eq i32 %18375, 0
  %18396 = zext i1 %18395 to i8
  %18397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18396, i8* %18397, align 1
  %18398 = lshr i32 %18375, 31
  %18399 = trunc i32 %18398 to i8
  %18400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18399, i8* %18400, align 1
  %18401 = lshr i32 %18374, 31
  %18402 = lshr i32 %18370, 31
  %18403 = xor i32 %18398, %18401
  %18404 = xor i32 %18398, %18402
  %18405 = add i32 %18403, %18404
  %18406 = icmp eq i32 %18405, 2
  %18407 = zext i1 %18406 to i8
  %18408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18407, i8* %18408, align 1
  store %struct.Memory* %loadMem_40ba64, %struct.Memory** %MEMORY
  %loadMem_40ba66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18410 = getelementptr inbounds %struct.GPR, %struct.GPR* %18409, i32 0, i32 33
  %18411 = getelementptr inbounds %struct.Reg, %struct.Reg* %18410, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %18411 to i64*
  %18412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18413 = getelementptr inbounds %struct.GPR, %struct.GPR* %18412, i32 0, i32 1
  %18414 = getelementptr inbounds %struct.Reg, %struct.Reg* %18413, i32 0, i32 0
  %EAX.i300 = bitcast %union.anon* %18414 to i32*
  %18415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18416 = getelementptr inbounds %struct.GPR, %struct.GPR* %18415, i32 0, i32 15
  %18417 = getelementptr inbounds %struct.Reg, %struct.Reg* %18416, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %18417 to i64*
  %18418 = load i64, i64* %RBP.i301
  %18419 = sub i64 %18418, 52
  %18420 = load i32, i32* %EAX.i300
  %18421 = zext i32 %18420 to i64
  %18422 = load i64, i64* %PC.i299
  %18423 = add i64 %18422, 3
  store i64 %18423, i64* %PC.i299
  %18424 = inttoptr i64 %18419 to i32*
  store i32 %18420, i32* %18424
  store %struct.Memory* %loadMem_40ba66, %struct.Memory** %MEMORY
  %loadMem_40ba69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18426 = getelementptr inbounds %struct.GPR, %struct.GPR* %18425, i32 0, i32 33
  %18427 = getelementptr inbounds %struct.Reg, %struct.Reg* %18426, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %18427 to i64*
  %18428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18429 = getelementptr inbounds %struct.GPR, %struct.GPR* %18428, i32 0, i32 15
  %18430 = getelementptr inbounds %struct.Reg, %struct.Reg* %18429, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %18430 to i64*
  %18431 = load i64, i64* %RBP.i298
  %18432 = sub i64 %18431, 16
  %18433 = load i64, i64* %PC.i297
  %18434 = add i64 %18433, 7
  store i64 %18434, i64* %PC.i297
  %18435 = inttoptr i64 %18432 to i32*
  store i32 0, i32* %18435
  store %struct.Memory* %loadMem_40ba69, %struct.Memory** %MEMORY
  br label %block_.L_40ba70

block_.L_40ba70:                                  ; preds = %block_40ba7a, %block_.L_40ba3d
  %loadMem_40ba70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18437 = getelementptr inbounds %struct.GPR, %struct.GPR* %18436, i32 0, i32 33
  %18438 = getelementptr inbounds %struct.Reg, %struct.Reg* %18437, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %18438 to i64*
  %18439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18440 = getelementptr inbounds %struct.GPR, %struct.GPR* %18439, i32 0, i32 15
  %18441 = getelementptr inbounds %struct.Reg, %struct.Reg* %18440, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %18441 to i64*
  %18442 = load i64, i64* %RBP.i296
  %18443 = sub i64 %18442, 16
  %18444 = load i64, i64* %PC.i295
  %18445 = add i64 %18444, 4
  store i64 %18445, i64* %PC.i295
  %18446 = inttoptr i64 %18443 to i32*
  %18447 = load i32, i32* %18446
  %18448 = sub i32 %18447, 2
  %18449 = icmp ult i32 %18447, 2
  %18450 = zext i1 %18449 to i8
  %18451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18450, i8* %18451, align 1
  %18452 = and i32 %18448, 255
  %18453 = call i32 @llvm.ctpop.i32(i32 %18452)
  %18454 = trunc i32 %18453 to i8
  %18455 = and i8 %18454, 1
  %18456 = xor i8 %18455, 1
  %18457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18456, i8* %18457, align 1
  %18458 = xor i32 %18447, 2
  %18459 = xor i32 %18458, %18448
  %18460 = lshr i32 %18459, 4
  %18461 = trunc i32 %18460 to i8
  %18462 = and i8 %18461, 1
  %18463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18462, i8* %18463, align 1
  %18464 = icmp eq i32 %18448, 0
  %18465 = zext i1 %18464 to i8
  %18466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18465, i8* %18466, align 1
  %18467 = lshr i32 %18448, 31
  %18468 = trunc i32 %18467 to i8
  %18469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18468, i8* %18469, align 1
  %18470 = lshr i32 %18447, 31
  %18471 = xor i32 %18467, %18470
  %18472 = add i32 %18471, %18470
  %18473 = icmp eq i32 %18472, 2
  %18474 = zext i1 %18473 to i8
  %18475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18474, i8* %18475, align 1
  store %struct.Memory* %loadMem_40ba70, %struct.Memory** %MEMORY
  %loadMem_40ba74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18477 = getelementptr inbounds %struct.GPR, %struct.GPR* %18476, i32 0, i32 33
  %18478 = getelementptr inbounds %struct.Reg, %struct.Reg* %18477, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %18478 to i64*
  %18479 = load i64, i64* %PC.i294
  %18480 = add i64 %18479, 129
  %18481 = load i64, i64* %PC.i294
  %18482 = add i64 %18481, 6
  %18483 = load i64, i64* %PC.i294
  %18484 = add i64 %18483, 6
  store i64 %18484, i64* %PC.i294
  %18485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18486 = load i8, i8* %18485, align 1
  %18487 = icmp ne i8 %18486, 0
  %18488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18489 = load i8, i8* %18488, align 1
  %18490 = icmp ne i8 %18489, 0
  %18491 = xor i1 %18487, %18490
  %18492 = xor i1 %18491, true
  %18493 = zext i1 %18492 to i8
  store i8 %18493, i8* %BRANCH_TAKEN, align 1
  %18494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18495 = select i1 %18491, i64 %18482, i64 %18480
  store i64 %18495, i64* %18494, align 8
  store %struct.Memory* %loadMem_40ba74, %struct.Memory** %MEMORY
  %loadBr_40ba74 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba74 = icmp eq i8 %loadBr_40ba74, 1
  br i1 %cmpBr_40ba74, label %block_.L_40baf5, label %block_40ba7a

block_40ba7a:                                     ; preds = %block_.L_40ba70
  %loadMem_40ba7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18497 = getelementptr inbounds %struct.GPR, %struct.GPR* %18496, i32 0, i32 33
  %18498 = getelementptr inbounds %struct.Reg, %struct.Reg* %18497, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %18498 to i64*
  %18499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18500 = getelementptr inbounds %struct.GPR, %struct.GPR* %18499, i32 0, i32 1
  %18501 = getelementptr inbounds %struct.Reg, %struct.Reg* %18500, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %18501 to i64*
  %18502 = load i64, i64* %PC.i292
  %18503 = add i64 %18502, 5
  store i64 %18503, i64* %PC.i292
  store i64 3, i64* %RAX.i293, align 8
  store %struct.Memory* %loadMem_40ba7a, %struct.Memory** %MEMORY
  %loadMem_40ba7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %18504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18505 = getelementptr inbounds %struct.GPR, %struct.GPR* %18504, i32 0, i32 33
  %18506 = getelementptr inbounds %struct.Reg, %struct.Reg* %18505, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %18506 to i64*
  %18507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18508 = getelementptr inbounds %struct.GPR, %struct.GPR* %18507, i32 0, i32 1
  %18509 = getelementptr inbounds %struct.Reg, %struct.Reg* %18508, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %18509 to i64*
  %18510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18511 = getelementptr inbounds %struct.GPR, %struct.GPR* %18510, i32 0, i32 15
  %18512 = getelementptr inbounds %struct.Reg, %struct.Reg* %18511, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %18512 to i64*
  %18513 = load i64, i64* %RAX.i290
  %18514 = load i64, i64* %RBP.i291
  %18515 = sub i64 %18514, 16
  %18516 = load i64, i64* %PC.i289
  %18517 = add i64 %18516, 3
  store i64 %18517, i64* %PC.i289
  %18518 = trunc i64 %18513 to i32
  %18519 = inttoptr i64 %18515 to i32*
  %18520 = load i32, i32* %18519
  %18521 = sub i32 %18518, %18520
  %18522 = zext i32 %18521 to i64
  store i64 %18522, i64* %RAX.i290, align 8
  %18523 = icmp ult i32 %18518, %18520
  %18524 = zext i1 %18523 to i8
  %18525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18524, i8* %18525, align 1
  %18526 = and i32 %18521, 255
  %18527 = call i32 @llvm.ctpop.i32(i32 %18526)
  %18528 = trunc i32 %18527 to i8
  %18529 = and i8 %18528, 1
  %18530 = xor i8 %18529, 1
  %18531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18530, i8* %18531, align 1
  %18532 = xor i32 %18520, %18518
  %18533 = xor i32 %18532, %18521
  %18534 = lshr i32 %18533, 4
  %18535 = trunc i32 %18534 to i8
  %18536 = and i8 %18535, 1
  %18537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18536, i8* %18537, align 1
  %18538 = icmp eq i32 %18521, 0
  %18539 = zext i1 %18538 to i8
  %18540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18539, i8* %18540, align 1
  %18541 = lshr i32 %18521, 31
  %18542 = trunc i32 %18541 to i8
  %18543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18542, i8* %18543, align 1
  %18544 = lshr i32 %18518, 31
  %18545 = lshr i32 %18520, 31
  %18546 = xor i32 %18545, %18544
  %18547 = xor i32 %18541, %18544
  %18548 = add i32 %18547, %18546
  %18549 = icmp eq i32 %18548, 2
  %18550 = zext i1 %18549 to i8
  %18551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18550, i8* %18551, align 1
  store %struct.Memory* %loadMem_40ba7f, %struct.Memory** %MEMORY
  %loadMem_40ba82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18553 = getelementptr inbounds %struct.GPR, %struct.GPR* %18552, i32 0, i32 33
  %18554 = getelementptr inbounds %struct.Reg, %struct.Reg* %18553, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %18554 to i64*
  %18555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18556 = getelementptr inbounds %struct.GPR, %struct.GPR* %18555, i32 0, i32 1
  %18557 = getelementptr inbounds %struct.Reg, %struct.Reg* %18556, i32 0, i32 0
  %EAX.i287 = bitcast %union.anon* %18557 to i32*
  %18558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18559 = getelementptr inbounds %struct.GPR, %struct.GPR* %18558, i32 0, i32 15
  %18560 = getelementptr inbounds %struct.Reg, %struct.Reg* %18559, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %18560 to i64*
  %18561 = load i64, i64* %RBP.i288
  %18562 = sub i64 %18561, 24
  %18563 = load i32, i32* %EAX.i287
  %18564 = zext i32 %18563 to i64
  %18565 = load i64, i64* %PC.i286
  %18566 = add i64 %18565, 3
  store i64 %18566, i64* %PC.i286
  %18567 = inttoptr i64 %18562 to i32*
  store i32 %18563, i32* %18567
  store %struct.Memory* %loadMem_40ba82, %struct.Memory** %MEMORY
  %loadMem_40ba85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18569 = getelementptr inbounds %struct.GPR, %struct.GPR* %18568, i32 0, i32 33
  %18570 = getelementptr inbounds %struct.Reg, %struct.Reg* %18569, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %18570 to i64*
  %18571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18572 = getelementptr inbounds %struct.GPR, %struct.GPR* %18571, i32 0, i32 5
  %18573 = getelementptr inbounds %struct.Reg, %struct.Reg* %18572, i32 0, i32 0
  %RCX.i284 = bitcast %union.anon* %18573 to i64*
  %18574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18575 = getelementptr inbounds %struct.GPR, %struct.GPR* %18574, i32 0, i32 15
  %18576 = getelementptr inbounds %struct.Reg, %struct.Reg* %18575, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %18576 to i64*
  %18577 = load i64, i64* %RBP.i285
  %18578 = sub i64 %18577, 16
  %18579 = load i64, i64* %PC.i283
  %18580 = add i64 %18579, 4
  store i64 %18580, i64* %PC.i283
  %18581 = inttoptr i64 %18578 to i32*
  %18582 = load i32, i32* %18581
  %18583 = sext i32 %18582 to i64
  store i64 %18583, i64* %RCX.i284, align 8
  store %struct.Memory* %loadMem_40ba85, %struct.Memory** %MEMORY
  %loadMem_40ba89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18585 = getelementptr inbounds %struct.GPR, %struct.GPR* %18584, i32 0, i32 33
  %18586 = getelementptr inbounds %struct.Reg, %struct.Reg* %18585, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %18586 to i64*
  %18587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18588 = getelementptr inbounds %struct.GPR, %struct.GPR* %18587, i32 0, i32 1
  %18589 = getelementptr inbounds %struct.Reg, %struct.Reg* %18588, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %18589 to i64*
  %18590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18591 = getelementptr inbounds %struct.GPR, %struct.GPR* %18590, i32 0, i32 5
  %18592 = getelementptr inbounds %struct.Reg, %struct.Reg* %18591, i32 0, i32 0
  %RCX.i281 = bitcast %union.anon* %18592 to i64*
  %18593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18594 = getelementptr inbounds %struct.GPR, %struct.GPR* %18593, i32 0, i32 15
  %18595 = getelementptr inbounds %struct.Reg, %struct.Reg* %18594, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %18595 to i64*
  %18596 = load i64, i64* %RBP.i282
  %18597 = load i64, i64* %RCX.i281
  %18598 = mul i64 %18597, 4
  %18599 = add i64 %18596, -64
  %18600 = add i64 %18599, %18598
  %18601 = load i64, i64* %PC.i279
  %18602 = add i64 %18601, 4
  store i64 %18602, i64* %PC.i279
  %18603 = inttoptr i64 %18600 to i32*
  %18604 = load i32, i32* %18603
  %18605 = zext i32 %18604 to i64
  store i64 %18605, i64* %RAX.i280, align 8
  store %struct.Memory* %loadMem_40ba89, %struct.Memory** %MEMORY
  %loadMem_40ba8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18607 = getelementptr inbounds %struct.GPR, %struct.GPR* %18606, i32 0, i32 33
  %18608 = getelementptr inbounds %struct.Reg, %struct.Reg* %18607, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %18608 to i64*
  %18609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18610 = getelementptr inbounds %struct.GPR, %struct.GPR* %18609, i32 0, i32 5
  %18611 = getelementptr inbounds %struct.Reg, %struct.Reg* %18610, i32 0, i32 0
  %RCX.i277 = bitcast %union.anon* %18611 to i64*
  %18612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18613 = getelementptr inbounds %struct.GPR, %struct.GPR* %18612, i32 0, i32 15
  %18614 = getelementptr inbounds %struct.Reg, %struct.Reg* %18613, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %18614 to i64*
  %18615 = load i64, i64* %RBP.i278
  %18616 = sub i64 %18615, 24
  %18617 = load i64, i64* %PC.i276
  %18618 = add i64 %18617, 4
  store i64 %18618, i64* %PC.i276
  %18619 = inttoptr i64 %18616 to i32*
  %18620 = load i32, i32* %18619
  %18621 = sext i32 %18620 to i64
  store i64 %18621, i64* %RCX.i277, align 8
  store %struct.Memory* %loadMem_40ba8d, %struct.Memory** %MEMORY
  %loadMem_40ba91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18623 = getelementptr inbounds %struct.GPR, %struct.GPR* %18622, i32 0, i32 33
  %18624 = getelementptr inbounds %struct.Reg, %struct.Reg* %18623, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %18624 to i64*
  %18625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18626 = getelementptr inbounds %struct.GPR, %struct.GPR* %18625, i32 0, i32 1
  %18627 = getelementptr inbounds %struct.Reg, %struct.Reg* %18626, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %18627 to i64*
  %18628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18629 = getelementptr inbounds %struct.GPR, %struct.GPR* %18628, i32 0, i32 5
  %18630 = getelementptr inbounds %struct.Reg, %struct.Reg* %18629, i32 0, i32 0
  %RCX.i274 = bitcast %union.anon* %18630 to i64*
  %18631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18632 = getelementptr inbounds %struct.GPR, %struct.GPR* %18631, i32 0, i32 15
  %18633 = getelementptr inbounds %struct.Reg, %struct.Reg* %18632, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %18633 to i64*
  %18634 = load i64, i64* %RAX.i273
  %18635 = load i64, i64* %RBP.i275
  %18636 = load i64, i64* %RCX.i274
  %18637 = mul i64 %18636, 4
  %18638 = add i64 %18635, -64
  %18639 = add i64 %18638, %18637
  %18640 = load i64, i64* %PC.i272
  %18641 = add i64 %18640, 4
  store i64 %18641, i64* %PC.i272
  %18642 = trunc i64 %18634 to i32
  %18643 = inttoptr i64 %18639 to i32*
  %18644 = load i32, i32* %18643
  %18645 = add i32 %18644, %18642
  %18646 = zext i32 %18645 to i64
  store i64 %18646, i64* %RAX.i273, align 8
  %18647 = icmp ult i32 %18645, %18642
  %18648 = icmp ult i32 %18645, %18644
  %18649 = or i1 %18647, %18648
  %18650 = zext i1 %18649 to i8
  %18651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18650, i8* %18651, align 1
  %18652 = and i32 %18645, 255
  %18653 = call i32 @llvm.ctpop.i32(i32 %18652)
  %18654 = trunc i32 %18653 to i8
  %18655 = and i8 %18654, 1
  %18656 = xor i8 %18655, 1
  %18657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18656, i8* %18657, align 1
  %18658 = xor i32 %18644, %18642
  %18659 = xor i32 %18658, %18645
  %18660 = lshr i32 %18659, 4
  %18661 = trunc i32 %18660 to i8
  %18662 = and i8 %18661, 1
  %18663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18662, i8* %18663, align 1
  %18664 = icmp eq i32 %18645, 0
  %18665 = zext i1 %18664 to i8
  %18666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18665, i8* %18666, align 1
  %18667 = lshr i32 %18645, 31
  %18668 = trunc i32 %18667 to i8
  %18669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18668, i8* %18669, align 1
  %18670 = lshr i32 %18642, 31
  %18671 = lshr i32 %18644, 31
  %18672 = xor i32 %18667, %18670
  %18673 = xor i32 %18667, %18671
  %18674 = add i32 %18672, %18673
  %18675 = icmp eq i32 %18674, 2
  %18676 = zext i1 %18675 to i8
  %18677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18676, i8* %18677, align 1
  store %struct.Memory* %loadMem_40ba91, %struct.Memory** %MEMORY
  %loadMem_40ba95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18679 = getelementptr inbounds %struct.GPR, %struct.GPR* %18678, i32 0, i32 33
  %18680 = getelementptr inbounds %struct.Reg, %struct.Reg* %18679, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %18680 to i64*
  %18681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18682 = getelementptr inbounds %struct.GPR, %struct.GPR* %18681, i32 0, i32 5
  %18683 = getelementptr inbounds %struct.Reg, %struct.Reg* %18682, i32 0, i32 0
  %RCX.i271 = bitcast %union.anon* %18683 to i64*
  %18684 = load i64, i64* %PC.i270
  %18685 = add i64 %18684, 8
  store i64 %18685, i64* %PC.i270
  %18686 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18686, i64* %RCX.i271, align 8
  store %struct.Memory* %loadMem_40ba95, %struct.Memory** %MEMORY
  %loadMem_40ba9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18688 = getelementptr inbounds %struct.GPR, %struct.GPR* %18687, i32 0, i32 33
  %18689 = getelementptr inbounds %struct.Reg, %struct.Reg* %18688, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %18689 to i64*
  %18690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18691 = getelementptr inbounds %struct.GPR, %struct.GPR* %18690, i32 0, i32 5
  %18692 = getelementptr inbounds %struct.Reg, %struct.Reg* %18691, i32 0, i32 0
  %RCX.i269 = bitcast %union.anon* %18692 to i64*
  %18693 = load i64, i64* %RCX.i269
  %18694 = load i64, i64* %PC.i268
  %18695 = add i64 %18694, 7
  store i64 %18695, i64* %PC.i268
  %18696 = add i64 13112, %18693
  store i64 %18696, i64* %RCX.i269, align 8
  %18697 = icmp ult i64 %18696, %18693
  %18698 = icmp ult i64 %18696, 13112
  %18699 = or i1 %18697, %18698
  %18700 = zext i1 %18699 to i8
  %18701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18700, i8* %18701, align 1
  %18702 = trunc i64 %18696 to i32
  %18703 = and i32 %18702, 255
  %18704 = call i32 @llvm.ctpop.i32(i32 %18703)
  %18705 = trunc i32 %18704 to i8
  %18706 = and i8 %18705, 1
  %18707 = xor i8 %18706, 1
  %18708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18707, i8* %18708, align 1
  %18709 = xor i64 13112, %18693
  %18710 = xor i64 %18709, %18696
  %18711 = lshr i64 %18710, 4
  %18712 = trunc i64 %18711 to i8
  %18713 = and i8 %18712, 1
  %18714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18713, i8* %18714, align 1
  %18715 = icmp eq i64 %18696, 0
  %18716 = zext i1 %18715 to i8
  %18717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18716, i8* %18717, align 1
  %18718 = lshr i64 %18696, 63
  %18719 = trunc i64 %18718 to i8
  %18720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18719, i8* %18720, align 1
  %18721 = lshr i64 %18693, 63
  %18722 = xor i64 %18718, %18721
  %18723 = add i64 %18722, %18718
  %18724 = icmp eq i64 %18723, 2
  %18725 = zext i1 %18724 to i8
  %18726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18725, i8* %18726, align 1
  store %struct.Memory* %loadMem_40ba9d, %struct.Memory** %MEMORY
  %loadMem_40baa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18728 = getelementptr inbounds %struct.GPR, %struct.GPR* %18727, i32 0, i32 33
  %18729 = getelementptr inbounds %struct.Reg, %struct.Reg* %18728, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %18729 to i64*
  %18730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18731 = getelementptr inbounds %struct.GPR, %struct.GPR* %18730, i32 0, i32 7
  %18732 = getelementptr inbounds %struct.Reg, %struct.Reg* %18731, i32 0, i32 0
  %RDX.i266 = bitcast %union.anon* %18732 to i64*
  %18733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18734 = getelementptr inbounds %struct.GPR, %struct.GPR* %18733, i32 0, i32 15
  %18735 = getelementptr inbounds %struct.Reg, %struct.Reg* %18734, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %18735 to i64*
  %18736 = load i64, i64* %RBP.i267
  %18737 = sub i64 %18736, 16
  %18738 = load i64, i64* %PC.i265
  %18739 = add i64 %18738, 4
  store i64 %18739, i64* %PC.i265
  %18740 = inttoptr i64 %18737 to i32*
  %18741 = load i32, i32* %18740
  %18742 = sext i32 %18741 to i64
  store i64 %18742, i64* %RDX.i266, align 8
  store %struct.Memory* %loadMem_40baa4, %struct.Memory** %MEMORY
  %loadMem_40baa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18744 = getelementptr inbounds %struct.GPR, %struct.GPR* %18743, i32 0, i32 33
  %18745 = getelementptr inbounds %struct.Reg, %struct.Reg* %18744, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %18745 to i64*
  %18746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18747 = getelementptr inbounds %struct.GPR, %struct.GPR* %18746, i32 0, i32 7
  %18748 = getelementptr inbounds %struct.Reg, %struct.Reg* %18747, i32 0, i32 0
  %RDX.i264 = bitcast %union.anon* %18748 to i64*
  %18749 = load i64, i64* %RDX.i264
  %18750 = load i64, i64* %PC.i263
  %18751 = add i64 %18750, 4
  store i64 %18751, i64* %PC.i263
  %18752 = shl i64 %18749, 5
  %18753 = icmp slt i64 %18752, 0
  %18754 = shl i64 %18752, 1
  store i64 %18754, i64* %RDX.i264, align 8
  %18755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %18756 = zext i1 %18753 to i8
  store i8 %18756, i8* %18755, align 1
  %18757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18758 = trunc i64 %18754 to i32
  %18759 = and i32 %18758, 254
  %18760 = call i32 @llvm.ctpop.i32(i32 %18759)
  %18761 = trunc i32 %18760 to i8
  %18762 = and i8 %18761, 1
  %18763 = xor i8 %18762, 1
  store i8 %18763, i8* %18757, align 1
  %18764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18764, align 1
  %18765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18766 = icmp eq i64 %18754, 0
  %18767 = zext i1 %18766 to i8
  store i8 %18767, i8* %18765, align 1
  %18768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18769 = lshr i64 %18754, 63
  %18770 = trunc i64 %18769 to i8
  store i8 %18770, i8* %18768, align 1
  %18771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %18771, align 1
  store %struct.Memory* %loadMem_40baa8, %struct.Memory** %MEMORY
  %loadMem_40baac = load %struct.Memory*, %struct.Memory** %MEMORY
  %18772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18773 = getelementptr inbounds %struct.GPR, %struct.GPR* %18772, i32 0, i32 33
  %18774 = getelementptr inbounds %struct.Reg, %struct.Reg* %18773, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %18774 to i64*
  %18775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18776 = getelementptr inbounds %struct.GPR, %struct.GPR* %18775, i32 0, i32 5
  %18777 = getelementptr inbounds %struct.Reg, %struct.Reg* %18776, i32 0, i32 0
  %RCX.i261 = bitcast %union.anon* %18777 to i64*
  %18778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18779 = getelementptr inbounds %struct.GPR, %struct.GPR* %18778, i32 0, i32 7
  %18780 = getelementptr inbounds %struct.Reg, %struct.Reg* %18779, i32 0, i32 0
  %RDX.i262 = bitcast %union.anon* %18780 to i64*
  %18781 = load i64, i64* %RCX.i261
  %18782 = load i64, i64* %RDX.i262
  %18783 = load i64, i64* %PC.i260
  %18784 = add i64 %18783, 3
  store i64 %18784, i64* %PC.i260
  %18785 = add i64 %18782, %18781
  store i64 %18785, i64* %RCX.i261, align 8
  %18786 = icmp ult i64 %18785, %18781
  %18787 = icmp ult i64 %18785, %18782
  %18788 = or i1 %18786, %18787
  %18789 = zext i1 %18788 to i8
  %18790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18789, i8* %18790, align 1
  %18791 = trunc i64 %18785 to i32
  %18792 = and i32 %18791, 255
  %18793 = call i32 @llvm.ctpop.i32(i32 %18792)
  %18794 = trunc i32 %18793 to i8
  %18795 = and i8 %18794, 1
  %18796 = xor i8 %18795, 1
  %18797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18796, i8* %18797, align 1
  %18798 = xor i64 %18782, %18781
  %18799 = xor i64 %18798, %18785
  %18800 = lshr i64 %18799, 4
  %18801 = trunc i64 %18800 to i8
  %18802 = and i8 %18801, 1
  %18803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18802, i8* %18803, align 1
  %18804 = icmp eq i64 %18785, 0
  %18805 = zext i1 %18804 to i8
  %18806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18805, i8* %18806, align 1
  %18807 = lshr i64 %18785, 63
  %18808 = trunc i64 %18807 to i8
  %18809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18808, i8* %18809, align 1
  %18810 = lshr i64 %18781, 63
  %18811 = lshr i64 %18782, 63
  %18812 = xor i64 %18807, %18810
  %18813 = xor i64 %18807, %18811
  %18814 = add i64 %18812, %18813
  %18815 = icmp eq i64 %18814, 2
  %18816 = zext i1 %18815 to i8
  %18817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18816, i8* %18817, align 1
  store %struct.Memory* %loadMem_40baac, %struct.Memory** %MEMORY
  %loadMem_40baaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %18818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18819 = getelementptr inbounds %struct.GPR, %struct.GPR* %18818, i32 0, i32 33
  %18820 = getelementptr inbounds %struct.Reg, %struct.Reg* %18819, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %18820 to i64*
  %18821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18822 = getelementptr inbounds %struct.GPR, %struct.GPR* %18821, i32 0, i32 7
  %18823 = getelementptr inbounds %struct.Reg, %struct.Reg* %18822, i32 0, i32 0
  %RDX.i258 = bitcast %union.anon* %18823 to i64*
  %18824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18825 = getelementptr inbounds %struct.GPR, %struct.GPR* %18824, i32 0, i32 15
  %18826 = getelementptr inbounds %struct.Reg, %struct.Reg* %18825, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %18826 to i64*
  %18827 = load i64, i64* %RBP.i259
  %18828 = sub i64 %18827, 20
  %18829 = load i64, i64* %PC.i257
  %18830 = add i64 %18829, 4
  store i64 %18830, i64* %PC.i257
  %18831 = inttoptr i64 %18828 to i32*
  %18832 = load i32, i32* %18831
  %18833 = sext i32 %18832 to i64
  store i64 %18833, i64* %RDX.i258, align 8
  store %struct.Memory* %loadMem_40baaf, %struct.Memory** %MEMORY
  %loadMem_40bab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18835 = getelementptr inbounds %struct.GPR, %struct.GPR* %18834, i32 0, i32 33
  %18836 = getelementptr inbounds %struct.Reg, %struct.Reg* %18835, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %18836 to i64*
  %18837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18838 = getelementptr inbounds %struct.GPR, %struct.GPR* %18837, i32 0, i32 1
  %18839 = getelementptr inbounds %struct.Reg, %struct.Reg* %18838, i32 0, i32 0
  %EAX.i254 = bitcast %union.anon* %18839 to i32*
  %18840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18841 = getelementptr inbounds %struct.GPR, %struct.GPR* %18840, i32 0, i32 5
  %18842 = getelementptr inbounds %struct.Reg, %struct.Reg* %18841, i32 0, i32 0
  %RCX.i255 = bitcast %union.anon* %18842 to i64*
  %18843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18844 = getelementptr inbounds %struct.GPR, %struct.GPR* %18843, i32 0, i32 7
  %18845 = getelementptr inbounds %struct.Reg, %struct.Reg* %18844, i32 0, i32 0
  %RDX.i256 = bitcast %union.anon* %18845 to i64*
  %18846 = load i64, i64* %RCX.i255
  %18847 = load i64, i64* %RDX.i256
  %18848 = mul i64 %18847, 4
  %18849 = add i64 %18848, %18846
  %18850 = load i32, i32* %EAX.i254
  %18851 = zext i32 %18850 to i64
  %18852 = load i64, i64* %PC.i253
  %18853 = add i64 %18852, 3
  store i64 %18853, i64* %PC.i253
  %18854 = inttoptr i64 %18849 to i32*
  store i32 %18850, i32* %18854
  store %struct.Memory* %loadMem_40bab3, %struct.Memory** %MEMORY
  %loadMem_40bab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18856 = getelementptr inbounds %struct.GPR, %struct.GPR* %18855, i32 0, i32 33
  %18857 = getelementptr inbounds %struct.Reg, %struct.Reg* %18856, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %18857 to i64*
  %18858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18859 = getelementptr inbounds %struct.GPR, %struct.GPR* %18858, i32 0, i32 5
  %18860 = getelementptr inbounds %struct.Reg, %struct.Reg* %18859, i32 0, i32 0
  %RCX.i251 = bitcast %union.anon* %18860 to i64*
  %18861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18862 = getelementptr inbounds %struct.GPR, %struct.GPR* %18861, i32 0, i32 15
  %18863 = getelementptr inbounds %struct.Reg, %struct.Reg* %18862, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %18863 to i64*
  %18864 = load i64, i64* %RBP.i252
  %18865 = sub i64 %18864, 16
  %18866 = load i64, i64* %PC.i250
  %18867 = add i64 %18866, 4
  store i64 %18867, i64* %PC.i250
  %18868 = inttoptr i64 %18865 to i32*
  %18869 = load i32, i32* %18868
  %18870 = sext i32 %18869 to i64
  store i64 %18870, i64* %RCX.i251, align 8
  store %struct.Memory* %loadMem_40bab6, %struct.Memory** %MEMORY
  %loadMem_40baba = load %struct.Memory*, %struct.Memory** %MEMORY
  %18871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18872 = getelementptr inbounds %struct.GPR, %struct.GPR* %18871, i32 0, i32 33
  %18873 = getelementptr inbounds %struct.Reg, %struct.Reg* %18872, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %18873 to i64*
  %18874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18875 = getelementptr inbounds %struct.GPR, %struct.GPR* %18874, i32 0, i32 1
  %18876 = getelementptr inbounds %struct.Reg, %struct.Reg* %18875, i32 0, i32 0
  %RAX.i247 = bitcast %union.anon* %18876 to i64*
  %18877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18878 = getelementptr inbounds %struct.GPR, %struct.GPR* %18877, i32 0, i32 5
  %18879 = getelementptr inbounds %struct.Reg, %struct.Reg* %18878, i32 0, i32 0
  %RCX.i248 = bitcast %union.anon* %18879 to i64*
  %18880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18881 = getelementptr inbounds %struct.GPR, %struct.GPR* %18880, i32 0, i32 15
  %18882 = getelementptr inbounds %struct.Reg, %struct.Reg* %18881, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %18882 to i64*
  %18883 = load i64, i64* %RBP.i249
  %18884 = load i64, i64* %RCX.i248
  %18885 = mul i64 %18884, 4
  %18886 = add i64 %18883, -64
  %18887 = add i64 %18886, %18885
  %18888 = load i64, i64* %PC.i246
  %18889 = add i64 %18888, 4
  store i64 %18889, i64* %PC.i246
  %18890 = inttoptr i64 %18887 to i32*
  %18891 = load i32, i32* %18890
  %18892 = zext i32 %18891 to i64
  store i64 %18892, i64* %RAX.i247, align 8
  store %struct.Memory* %loadMem_40baba, %struct.Memory** %MEMORY
  %loadMem_40babe = load %struct.Memory*, %struct.Memory** %MEMORY
  %18893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18894 = getelementptr inbounds %struct.GPR, %struct.GPR* %18893, i32 0, i32 33
  %18895 = getelementptr inbounds %struct.Reg, %struct.Reg* %18894, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %18895 to i64*
  %18896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18897 = getelementptr inbounds %struct.GPR, %struct.GPR* %18896, i32 0, i32 5
  %18898 = getelementptr inbounds %struct.Reg, %struct.Reg* %18897, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %18898 to i64*
  %18899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18900 = getelementptr inbounds %struct.GPR, %struct.GPR* %18899, i32 0, i32 15
  %18901 = getelementptr inbounds %struct.Reg, %struct.Reg* %18900, i32 0, i32 0
  %RBP.i245 = bitcast %union.anon* %18901 to i64*
  %18902 = load i64, i64* %RBP.i245
  %18903 = sub i64 %18902, 24
  %18904 = load i64, i64* %PC.i243
  %18905 = add i64 %18904, 4
  store i64 %18905, i64* %PC.i243
  %18906 = inttoptr i64 %18903 to i32*
  %18907 = load i32, i32* %18906
  %18908 = sext i32 %18907 to i64
  store i64 %18908, i64* %RCX.i244, align 8
  store %struct.Memory* %loadMem_40babe, %struct.Memory** %MEMORY
  %loadMem_40bac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18910 = getelementptr inbounds %struct.GPR, %struct.GPR* %18909, i32 0, i32 33
  %18911 = getelementptr inbounds %struct.Reg, %struct.Reg* %18910, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %18911 to i64*
  %18912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18913 = getelementptr inbounds %struct.GPR, %struct.GPR* %18912, i32 0, i32 1
  %18914 = getelementptr inbounds %struct.Reg, %struct.Reg* %18913, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %18914 to i64*
  %18915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18916 = getelementptr inbounds %struct.GPR, %struct.GPR* %18915, i32 0, i32 5
  %18917 = getelementptr inbounds %struct.Reg, %struct.Reg* %18916, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %18917 to i64*
  %18918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18919 = getelementptr inbounds %struct.GPR, %struct.GPR* %18918, i32 0, i32 15
  %18920 = getelementptr inbounds %struct.Reg, %struct.Reg* %18919, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %18920 to i64*
  %18921 = load i64, i64* %RAX.i240
  %18922 = load i64, i64* %RBP.i242
  %18923 = load i64, i64* %RCX.i241
  %18924 = mul i64 %18923, 4
  %18925 = add i64 %18922, -64
  %18926 = add i64 %18925, %18924
  %18927 = load i64, i64* %PC.i239
  %18928 = add i64 %18927, 4
  store i64 %18928, i64* %PC.i239
  %18929 = trunc i64 %18921 to i32
  %18930 = inttoptr i64 %18926 to i32*
  %18931 = load i32, i32* %18930
  %18932 = sub i32 %18929, %18931
  %18933 = zext i32 %18932 to i64
  store i64 %18933, i64* %RAX.i240, align 8
  %18934 = icmp ult i32 %18929, %18931
  %18935 = zext i1 %18934 to i8
  %18936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18935, i8* %18936, align 1
  %18937 = and i32 %18932, 255
  %18938 = call i32 @llvm.ctpop.i32(i32 %18937)
  %18939 = trunc i32 %18938 to i8
  %18940 = and i8 %18939, 1
  %18941 = xor i8 %18940, 1
  %18942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18941, i8* %18942, align 1
  %18943 = xor i32 %18931, %18929
  %18944 = xor i32 %18943, %18932
  %18945 = lshr i32 %18944, 4
  %18946 = trunc i32 %18945 to i8
  %18947 = and i8 %18946, 1
  %18948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18947, i8* %18948, align 1
  %18949 = icmp eq i32 %18932, 0
  %18950 = zext i1 %18949 to i8
  %18951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18950, i8* %18951, align 1
  %18952 = lshr i32 %18932, 31
  %18953 = trunc i32 %18952 to i8
  %18954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18953, i8* %18954, align 1
  %18955 = lshr i32 %18929, 31
  %18956 = lshr i32 %18931, 31
  %18957 = xor i32 %18956, %18955
  %18958 = xor i32 %18952, %18955
  %18959 = add i32 %18958, %18957
  %18960 = icmp eq i32 %18959, 2
  %18961 = zext i1 %18960 to i8
  %18962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18961, i8* %18962, align 1
  store %struct.Memory* %loadMem_40bac2, %struct.Memory** %MEMORY
  %loadMem_40bac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18964 = getelementptr inbounds %struct.GPR, %struct.GPR* %18963, i32 0, i32 33
  %18965 = getelementptr inbounds %struct.Reg, %struct.Reg* %18964, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %18965 to i64*
  %18966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18967 = getelementptr inbounds %struct.GPR, %struct.GPR* %18966, i32 0, i32 5
  %18968 = getelementptr inbounds %struct.Reg, %struct.Reg* %18967, i32 0, i32 0
  %RCX.i238 = bitcast %union.anon* %18968 to i64*
  %18969 = load i64, i64* %PC.i237
  %18970 = add i64 %18969, 8
  store i64 %18970, i64* %PC.i237
  %18971 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %18971, i64* %RCX.i238, align 8
  store %struct.Memory* %loadMem_40bac6, %struct.Memory** %MEMORY
  %loadMem_40bace = load %struct.Memory*, %struct.Memory** %MEMORY
  %18972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18973 = getelementptr inbounds %struct.GPR, %struct.GPR* %18972, i32 0, i32 33
  %18974 = getelementptr inbounds %struct.Reg, %struct.Reg* %18973, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %18974 to i64*
  %18975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18976 = getelementptr inbounds %struct.GPR, %struct.GPR* %18975, i32 0, i32 5
  %18977 = getelementptr inbounds %struct.Reg, %struct.Reg* %18976, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %18977 to i64*
  %18978 = load i64, i64* %RCX.i236
  %18979 = load i64, i64* %PC.i235
  %18980 = add i64 %18979, 7
  store i64 %18980, i64* %PC.i235
  %18981 = add i64 13112, %18978
  store i64 %18981, i64* %RCX.i236, align 8
  %18982 = icmp ult i64 %18981, %18978
  %18983 = icmp ult i64 %18981, 13112
  %18984 = or i1 %18982, %18983
  %18985 = zext i1 %18984 to i8
  %18986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18985, i8* %18986, align 1
  %18987 = trunc i64 %18981 to i32
  %18988 = and i32 %18987, 255
  %18989 = call i32 @llvm.ctpop.i32(i32 %18988)
  %18990 = trunc i32 %18989 to i8
  %18991 = and i8 %18990, 1
  %18992 = xor i8 %18991, 1
  %18993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18992, i8* %18993, align 1
  %18994 = xor i64 13112, %18978
  %18995 = xor i64 %18994, %18981
  %18996 = lshr i64 %18995, 4
  %18997 = trunc i64 %18996 to i8
  %18998 = and i8 %18997, 1
  %18999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18998, i8* %18999, align 1
  %19000 = icmp eq i64 %18981, 0
  %19001 = zext i1 %19000 to i8
  %19002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19001, i8* %19002, align 1
  %19003 = lshr i64 %18981, 63
  %19004 = trunc i64 %19003 to i8
  %19005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19004, i8* %19005, align 1
  %19006 = lshr i64 %18978, 63
  %19007 = xor i64 %19003, %19006
  %19008 = add i64 %19007, %19003
  %19009 = icmp eq i64 %19008, 2
  %19010 = zext i1 %19009 to i8
  %19011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19010, i8* %19011, align 1
  store %struct.Memory* %loadMem_40bace, %struct.Memory** %MEMORY
  %loadMem_40bad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19013 = getelementptr inbounds %struct.GPR, %struct.GPR* %19012, i32 0, i32 33
  %19014 = getelementptr inbounds %struct.Reg, %struct.Reg* %19013, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %19014 to i64*
  %19015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19016 = getelementptr inbounds %struct.GPR, %struct.GPR* %19015, i32 0, i32 7
  %19017 = getelementptr inbounds %struct.Reg, %struct.Reg* %19016, i32 0, i32 0
  %RDX.i233 = bitcast %union.anon* %19017 to i64*
  %19018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19019 = getelementptr inbounds %struct.GPR, %struct.GPR* %19018, i32 0, i32 15
  %19020 = getelementptr inbounds %struct.Reg, %struct.Reg* %19019, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %19020 to i64*
  %19021 = load i64, i64* %RBP.i234
  %19022 = sub i64 %19021, 24
  %19023 = load i64, i64* %PC.i232
  %19024 = add i64 %19023, 4
  store i64 %19024, i64* %PC.i232
  %19025 = inttoptr i64 %19022 to i32*
  %19026 = load i32, i32* %19025
  %19027 = sext i32 %19026 to i64
  store i64 %19027, i64* %RDX.i233, align 8
  store %struct.Memory* %loadMem_40bad5, %struct.Memory** %MEMORY
  %loadMem_40bad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19029 = getelementptr inbounds %struct.GPR, %struct.GPR* %19028, i32 0, i32 33
  %19030 = getelementptr inbounds %struct.Reg, %struct.Reg* %19029, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %19030 to i64*
  %19031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19032 = getelementptr inbounds %struct.GPR, %struct.GPR* %19031, i32 0, i32 7
  %19033 = getelementptr inbounds %struct.Reg, %struct.Reg* %19032, i32 0, i32 0
  %RDX.i231 = bitcast %union.anon* %19033 to i64*
  %19034 = load i64, i64* %RDX.i231
  %19035 = load i64, i64* %PC.i230
  %19036 = add i64 %19035, 4
  store i64 %19036, i64* %PC.i230
  %19037 = shl i64 %19034, 5
  %19038 = icmp slt i64 %19037, 0
  %19039 = shl i64 %19037, 1
  store i64 %19039, i64* %RDX.i231, align 8
  %19040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19041 = zext i1 %19038 to i8
  store i8 %19041, i8* %19040, align 1
  %19042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19043 = trunc i64 %19039 to i32
  %19044 = and i32 %19043, 254
  %19045 = call i32 @llvm.ctpop.i32(i32 %19044)
  %19046 = trunc i32 %19045 to i8
  %19047 = and i8 %19046, 1
  %19048 = xor i8 %19047, 1
  store i8 %19048, i8* %19042, align 1
  %19049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19049, align 1
  %19050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19051 = icmp eq i64 %19039, 0
  %19052 = zext i1 %19051 to i8
  store i8 %19052, i8* %19050, align 1
  %19053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19054 = lshr i64 %19039, 63
  %19055 = trunc i64 %19054 to i8
  store i8 %19055, i8* %19053, align 1
  %19056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19056, align 1
  store %struct.Memory* %loadMem_40bad9, %struct.Memory** %MEMORY
  %loadMem_40badd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19058 = getelementptr inbounds %struct.GPR, %struct.GPR* %19057, i32 0, i32 33
  %19059 = getelementptr inbounds %struct.Reg, %struct.Reg* %19058, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %19059 to i64*
  %19060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19061 = getelementptr inbounds %struct.GPR, %struct.GPR* %19060, i32 0, i32 5
  %19062 = getelementptr inbounds %struct.Reg, %struct.Reg* %19061, i32 0, i32 0
  %RCX.i228 = bitcast %union.anon* %19062 to i64*
  %19063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19064 = getelementptr inbounds %struct.GPR, %struct.GPR* %19063, i32 0, i32 7
  %19065 = getelementptr inbounds %struct.Reg, %struct.Reg* %19064, i32 0, i32 0
  %RDX.i229 = bitcast %union.anon* %19065 to i64*
  %19066 = load i64, i64* %RCX.i228
  %19067 = load i64, i64* %RDX.i229
  %19068 = load i64, i64* %PC.i227
  %19069 = add i64 %19068, 3
  store i64 %19069, i64* %PC.i227
  %19070 = add i64 %19067, %19066
  store i64 %19070, i64* %RCX.i228, align 8
  %19071 = icmp ult i64 %19070, %19066
  %19072 = icmp ult i64 %19070, %19067
  %19073 = or i1 %19071, %19072
  %19074 = zext i1 %19073 to i8
  %19075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19074, i8* %19075, align 1
  %19076 = trunc i64 %19070 to i32
  %19077 = and i32 %19076, 255
  %19078 = call i32 @llvm.ctpop.i32(i32 %19077)
  %19079 = trunc i32 %19078 to i8
  %19080 = and i8 %19079, 1
  %19081 = xor i8 %19080, 1
  %19082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19081, i8* %19082, align 1
  %19083 = xor i64 %19067, %19066
  %19084 = xor i64 %19083, %19070
  %19085 = lshr i64 %19084, 4
  %19086 = trunc i64 %19085 to i8
  %19087 = and i8 %19086, 1
  %19088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19087, i8* %19088, align 1
  %19089 = icmp eq i64 %19070, 0
  %19090 = zext i1 %19089 to i8
  %19091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19090, i8* %19091, align 1
  %19092 = lshr i64 %19070, 63
  %19093 = trunc i64 %19092 to i8
  %19094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19093, i8* %19094, align 1
  %19095 = lshr i64 %19066, 63
  %19096 = lshr i64 %19067, 63
  %19097 = xor i64 %19092, %19095
  %19098 = xor i64 %19092, %19096
  %19099 = add i64 %19097, %19098
  %19100 = icmp eq i64 %19099, 2
  %19101 = zext i1 %19100 to i8
  %19102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19101, i8* %19102, align 1
  store %struct.Memory* %loadMem_40badd, %struct.Memory** %MEMORY
  %loadMem_40bae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19104 = getelementptr inbounds %struct.GPR, %struct.GPR* %19103, i32 0, i32 33
  %19105 = getelementptr inbounds %struct.Reg, %struct.Reg* %19104, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %19105 to i64*
  %19106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19107 = getelementptr inbounds %struct.GPR, %struct.GPR* %19106, i32 0, i32 7
  %19108 = getelementptr inbounds %struct.Reg, %struct.Reg* %19107, i32 0, i32 0
  %RDX.i225 = bitcast %union.anon* %19108 to i64*
  %19109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19110 = getelementptr inbounds %struct.GPR, %struct.GPR* %19109, i32 0, i32 15
  %19111 = getelementptr inbounds %struct.Reg, %struct.Reg* %19110, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %19111 to i64*
  %19112 = load i64, i64* %RBP.i226
  %19113 = sub i64 %19112, 20
  %19114 = load i64, i64* %PC.i224
  %19115 = add i64 %19114, 4
  store i64 %19115, i64* %PC.i224
  %19116 = inttoptr i64 %19113 to i32*
  %19117 = load i32, i32* %19116
  %19118 = sext i32 %19117 to i64
  store i64 %19118, i64* %RDX.i225, align 8
  store %struct.Memory* %loadMem_40bae0, %struct.Memory** %MEMORY
  %loadMem_40bae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19120 = getelementptr inbounds %struct.GPR, %struct.GPR* %19119, i32 0, i32 33
  %19121 = getelementptr inbounds %struct.Reg, %struct.Reg* %19120, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %19121 to i64*
  %19122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19123 = getelementptr inbounds %struct.GPR, %struct.GPR* %19122, i32 0, i32 1
  %19124 = getelementptr inbounds %struct.Reg, %struct.Reg* %19123, i32 0, i32 0
  %EAX.i221 = bitcast %union.anon* %19124 to i32*
  %19125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19126 = getelementptr inbounds %struct.GPR, %struct.GPR* %19125, i32 0, i32 5
  %19127 = getelementptr inbounds %struct.Reg, %struct.Reg* %19126, i32 0, i32 0
  %RCX.i222 = bitcast %union.anon* %19127 to i64*
  %19128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19129 = getelementptr inbounds %struct.GPR, %struct.GPR* %19128, i32 0, i32 7
  %19130 = getelementptr inbounds %struct.Reg, %struct.Reg* %19129, i32 0, i32 0
  %RDX.i223 = bitcast %union.anon* %19130 to i64*
  %19131 = load i64, i64* %RCX.i222
  %19132 = load i64, i64* %RDX.i223
  %19133 = mul i64 %19132, 4
  %19134 = add i64 %19133, %19131
  %19135 = load i32, i32* %EAX.i221
  %19136 = zext i32 %19135 to i64
  %19137 = load i64, i64* %PC.i220
  %19138 = add i64 %19137, 3
  store i64 %19138, i64* %PC.i220
  %19139 = inttoptr i64 %19134 to i32*
  store i32 %19135, i32* %19139
  store %struct.Memory* %loadMem_40bae4, %struct.Memory** %MEMORY
  %loadMem_40bae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19141 = getelementptr inbounds %struct.GPR, %struct.GPR* %19140, i32 0, i32 33
  %19142 = getelementptr inbounds %struct.Reg, %struct.Reg* %19141, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %19142 to i64*
  %19143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19144 = getelementptr inbounds %struct.GPR, %struct.GPR* %19143, i32 0, i32 1
  %19145 = getelementptr inbounds %struct.Reg, %struct.Reg* %19144, i32 0, i32 0
  %RAX.i218 = bitcast %union.anon* %19145 to i64*
  %19146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19147 = getelementptr inbounds %struct.GPR, %struct.GPR* %19146, i32 0, i32 15
  %19148 = getelementptr inbounds %struct.Reg, %struct.Reg* %19147, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %19148 to i64*
  %19149 = load i64, i64* %RBP.i219
  %19150 = sub i64 %19149, 16
  %19151 = load i64, i64* %PC.i217
  %19152 = add i64 %19151, 3
  store i64 %19152, i64* %PC.i217
  %19153 = inttoptr i64 %19150 to i32*
  %19154 = load i32, i32* %19153
  %19155 = zext i32 %19154 to i64
  store i64 %19155, i64* %RAX.i218, align 8
  store %struct.Memory* %loadMem_40bae7, %struct.Memory** %MEMORY
  %loadMem_40baea = load %struct.Memory*, %struct.Memory** %MEMORY
  %19156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19157 = getelementptr inbounds %struct.GPR, %struct.GPR* %19156, i32 0, i32 33
  %19158 = getelementptr inbounds %struct.Reg, %struct.Reg* %19157, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %19158 to i64*
  %19159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19160 = getelementptr inbounds %struct.GPR, %struct.GPR* %19159, i32 0, i32 1
  %19161 = getelementptr inbounds %struct.Reg, %struct.Reg* %19160, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %19161 to i64*
  %19162 = load i64, i64* %RAX.i216
  %19163 = load i64, i64* %PC.i215
  %19164 = add i64 %19163, 3
  store i64 %19164, i64* %PC.i215
  %19165 = trunc i64 %19162 to i32
  %19166 = add i32 1, %19165
  %19167 = zext i32 %19166 to i64
  store i64 %19167, i64* %RAX.i216, align 8
  %19168 = icmp ult i32 %19166, %19165
  %19169 = icmp ult i32 %19166, 1
  %19170 = or i1 %19168, %19169
  %19171 = zext i1 %19170 to i8
  %19172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19171, i8* %19172, align 1
  %19173 = and i32 %19166, 255
  %19174 = call i32 @llvm.ctpop.i32(i32 %19173)
  %19175 = trunc i32 %19174 to i8
  %19176 = and i8 %19175, 1
  %19177 = xor i8 %19176, 1
  %19178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19177, i8* %19178, align 1
  %19179 = xor i64 1, %19162
  %19180 = trunc i64 %19179 to i32
  %19181 = xor i32 %19180, %19166
  %19182 = lshr i32 %19181, 4
  %19183 = trunc i32 %19182 to i8
  %19184 = and i8 %19183, 1
  %19185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19184, i8* %19185, align 1
  %19186 = icmp eq i32 %19166, 0
  %19187 = zext i1 %19186 to i8
  %19188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19187, i8* %19188, align 1
  %19189 = lshr i32 %19166, 31
  %19190 = trunc i32 %19189 to i8
  %19191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19190, i8* %19191, align 1
  %19192 = lshr i32 %19165, 31
  %19193 = xor i32 %19189, %19192
  %19194 = add i32 %19193, %19189
  %19195 = icmp eq i32 %19194, 2
  %19196 = zext i1 %19195 to i8
  %19197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19196, i8* %19197, align 1
  store %struct.Memory* %loadMem_40baea, %struct.Memory** %MEMORY
  %loadMem_40baed = load %struct.Memory*, %struct.Memory** %MEMORY
  %19198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19199 = getelementptr inbounds %struct.GPR, %struct.GPR* %19198, i32 0, i32 33
  %19200 = getelementptr inbounds %struct.Reg, %struct.Reg* %19199, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %19200 to i64*
  %19201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19202 = getelementptr inbounds %struct.GPR, %struct.GPR* %19201, i32 0, i32 1
  %19203 = getelementptr inbounds %struct.Reg, %struct.Reg* %19202, i32 0, i32 0
  %EAX.i213 = bitcast %union.anon* %19203 to i32*
  %19204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19205 = getelementptr inbounds %struct.GPR, %struct.GPR* %19204, i32 0, i32 15
  %19206 = getelementptr inbounds %struct.Reg, %struct.Reg* %19205, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %19206 to i64*
  %19207 = load i64, i64* %RBP.i214
  %19208 = sub i64 %19207, 16
  %19209 = load i32, i32* %EAX.i213
  %19210 = zext i32 %19209 to i64
  %19211 = load i64, i64* %PC.i212
  %19212 = add i64 %19211, 3
  store i64 %19212, i64* %PC.i212
  %19213 = inttoptr i64 %19208 to i32*
  store i32 %19209, i32* %19213
  store %struct.Memory* %loadMem_40baed, %struct.Memory** %MEMORY
  %loadMem_40baf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19215 = getelementptr inbounds %struct.GPR, %struct.GPR* %19214, i32 0, i32 33
  %19216 = getelementptr inbounds %struct.Reg, %struct.Reg* %19215, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %19216 to i64*
  %19217 = load i64, i64* %PC.i211
  %19218 = add i64 %19217, -128
  %19219 = load i64, i64* %PC.i211
  %19220 = add i64 %19219, 5
  store i64 %19220, i64* %PC.i211
  %19221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19218, i64* %19221, align 8
  store %struct.Memory* %loadMem_40baf0, %struct.Memory** %MEMORY
  br label %block_.L_40ba70

block_.L_40baf5:                                  ; preds = %block_.L_40ba70
  %loadMem_40baf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19223 = getelementptr inbounds %struct.GPR, %struct.GPR* %19222, i32 0, i32 33
  %19224 = getelementptr inbounds %struct.Reg, %struct.Reg* %19223, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %19224 to i64*
  %19225 = load i64, i64* %PC.i210
  %19226 = add i64 %19225, 5
  %19227 = load i64, i64* %PC.i210
  %19228 = add i64 %19227, 5
  store i64 %19228, i64* %PC.i210
  %19229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19226, i64* %19229, align 8
  store %struct.Memory* %loadMem_40baf5, %struct.Memory** %MEMORY
  br label %block_.L_40bafa

block_.L_40bafa:                                  ; preds = %block_.L_40baf5
  %loadMem_40bafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %19230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19231 = getelementptr inbounds %struct.GPR, %struct.GPR* %19230, i32 0, i32 33
  %19232 = getelementptr inbounds %struct.Reg, %struct.Reg* %19231, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %19232 to i64*
  %19233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19234 = getelementptr inbounds %struct.GPR, %struct.GPR* %19233, i32 0, i32 1
  %19235 = getelementptr inbounds %struct.Reg, %struct.Reg* %19234, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %19235 to i64*
  %19236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19237 = getelementptr inbounds %struct.GPR, %struct.GPR* %19236, i32 0, i32 15
  %19238 = getelementptr inbounds %struct.Reg, %struct.Reg* %19237, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %19238 to i64*
  %19239 = load i64, i64* %RBP.i209
  %19240 = sub i64 %19239, 20
  %19241 = load i64, i64* %PC.i207
  %19242 = add i64 %19241, 3
  store i64 %19242, i64* %PC.i207
  %19243 = inttoptr i64 %19240 to i32*
  %19244 = load i32, i32* %19243
  %19245 = zext i32 %19244 to i64
  store i64 %19245, i64* %RAX.i208, align 8
  store %struct.Memory* %loadMem_40bafa, %struct.Memory** %MEMORY
  %loadMem_40bafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %19246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19247 = getelementptr inbounds %struct.GPR, %struct.GPR* %19246, i32 0, i32 33
  %19248 = getelementptr inbounds %struct.Reg, %struct.Reg* %19247, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %19248 to i64*
  %19249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19250 = getelementptr inbounds %struct.GPR, %struct.GPR* %19249, i32 0, i32 1
  %19251 = getelementptr inbounds %struct.Reg, %struct.Reg* %19250, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %19251 to i64*
  %19252 = load i64, i64* %RAX.i206
  %19253 = load i64, i64* %PC.i205
  %19254 = add i64 %19253, 3
  store i64 %19254, i64* %PC.i205
  %19255 = trunc i64 %19252 to i32
  %19256 = add i32 1, %19255
  %19257 = zext i32 %19256 to i64
  store i64 %19257, i64* %RAX.i206, align 8
  %19258 = icmp ult i32 %19256, %19255
  %19259 = icmp ult i32 %19256, 1
  %19260 = or i1 %19258, %19259
  %19261 = zext i1 %19260 to i8
  %19262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19261, i8* %19262, align 1
  %19263 = and i32 %19256, 255
  %19264 = call i32 @llvm.ctpop.i32(i32 %19263)
  %19265 = trunc i32 %19264 to i8
  %19266 = and i8 %19265, 1
  %19267 = xor i8 %19266, 1
  %19268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19267, i8* %19268, align 1
  %19269 = xor i64 1, %19252
  %19270 = trunc i64 %19269 to i32
  %19271 = xor i32 %19270, %19256
  %19272 = lshr i32 %19271, 4
  %19273 = trunc i32 %19272 to i8
  %19274 = and i8 %19273, 1
  %19275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19274, i8* %19275, align 1
  %19276 = icmp eq i32 %19256, 0
  %19277 = zext i1 %19276 to i8
  %19278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19277, i8* %19278, align 1
  %19279 = lshr i32 %19256, 31
  %19280 = trunc i32 %19279 to i8
  %19281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19280, i8* %19281, align 1
  %19282 = lshr i32 %19255, 31
  %19283 = xor i32 %19279, %19282
  %19284 = add i32 %19283, %19279
  %19285 = icmp eq i32 %19284, 2
  %19286 = zext i1 %19285 to i8
  %19287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19286, i8* %19287, align 1
  store %struct.Memory* %loadMem_40bafd, %struct.Memory** %MEMORY
  %loadMem_40bb00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19289 = getelementptr inbounds %struct.GPR, %struct.GPR* %19288, i32 0, i32 33
  %19290 = getelementptr inbounds %struct.Reg, %struct.Reg* %19289, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %19290 to i64*
  %19291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19292 = getelementptr inbounds %struct.GPR, %struct.GPR* %19291, i32 0, i32 1
  %19293 = getelementptr inbounds %struct.Reg, %struct.Reg* %19292, i32 0, i32 0
  %EAX.i203 = bitcast %union.anon* %19293 to i32*
  %19294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19295 = getelementptr inbounds %struct.GPR, %struct.GPR* %19294, i32 0, i32 15
  %19296 = getelementptr inbounds %struct.Reg, %struct.Reg* %19295, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %19296 to i64*
  %19297 = load i64, i64* %RBP.i204
  %19298 = sub i64 %19297, 20
  %19299 = load i32, i32* %EAX.i203
  %19300 = zext i32 %19299 to i64
  %19301 = load i64, i64* %PC.i202
  %19302 = add i64 %19301, 3
  store i64 %19302, i64* %PC.i202
  %19303 = inttoptr i64 %19298 to i32*
  store i32 %19299, i32* %19303
  store %struct.Memory* %loadMem_40bb00, %struct.Memory** %MEMORY
  %loadMem_40bb03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19305 = getelementptr inbounds %struct.GPR, %struct.GPR* %19304, i32 0, i32 33
  %19306 = getelementptr inbounds %struct.Reg, %struct.Reg* %19305, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %19306 to i64*
  %19307 = load i64, i64* %PC.i201
  %19308 = add i64 %19307, -279
  %19309 = load i64, i64* %PC.i201
  %19310 = add i64 %19309, 5
  store i64 %19310, i64* %PC.i201
  %19311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19308, i64* %19311, align 8
  store %struct.Memory* %loadMem_40bb03, %struct.Memory** %MEMORY
  br label %block_.L_40b9ec

block_.L_40bb08:                                  ; preds = %block_.L_40b9ec
  %loadMem_40bb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19313 = getelementptr inbounds %struct.GPR, %struct.GPR* %19312, i32 0, i32 33
  %19314 = getelementptr inbounds %struct.Reg, %struct.Reg* %19313, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %19314 to i64*
  %19315 = load i64, i64* %PC.i200
  %19316 = add i64 %19315, 5
  %19317 = load i64, i64* %PC.i200
  %19318 = add i64 %19317, 5
  store i64 %19318, i64* %PC.i200
  %19319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19316, i64* %19319, align 8
  store %struct.Memory* %loadMem_40bb08, %struct.Memory** %MEMORY
  br label %block_.L_40bb0d

block_.L_40bb0d:                                  ; preds = %block_.L_40bb08, %block_.L_40b9c9
  %loadMem_40bb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19321 = getelementptr inbounds %struct.GPR, %struct.GPR* %19320, i32 0, i32 33
  %19322 = getelementptr inbounds %struct.Reg, %struct.Reg* %19321, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %19322 to i64*
  %19323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19324 = getelementptr inbounds %struct.GPR, %struct.GPR* %19323, i32 0, i32 15
  %19325 = getelementptr inbounds %struct.Reg, %struct.Reg* %19324, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %19325 to i64*
  %19326 = load i64, i64* %RBP.i199
  %19327 = sub i64 %19326, 140
  %19328 = load i64, i64* %PC.i198
  %19329 = add i64 %19328, 7
  store i64 %19329, i64* %PC.i198
  %19330 = inttoptr i64 %19327 to i32*
  %19331 = load i32, i32* %19330
  %19332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19332, align 1
  %19333 = and i32 %19331, 255
  %19334 = call i32 @llvm.ctpop.i32(i32 %19333)
  %19335 = trunc i32 %19334 to i8
  %19336 = and i8 %19335, 1
  %19337 = xor i8 %19336, 1
  %19338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19337, i8* %19338, align 1
  %19339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19339, align 1
  %19340 = icmp eq i32 %19331, 0
  %19341 = zext i1 %19340 to i8
  %19342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19341, i8* %19342, align 1
  %19343 = lshr i32 %19331, 31
  %19344 = trunc i32 %19343 to i8
  %19345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19344, i8* %19345, align 1
  %19346 = lshr i32 %19331, 31
  %19347 = xor i32 %19343, %19346
  %19348 = add i32 %19347, %19346
  %19349 = icmp eq i32 %19348, 2
  %19350 = zext i1 %19349 to i8
  %19351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19350, i8* %19351, align 1
  store %struct.Memory* %loadMem_40bb0d, %struct.Memory** %MEMORY
  %loadMem_40bb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19353 = getelementptr inbounds %struct.GPR, %struct.GPR* %19352, i32 0, i32 33
  %19354 = getelementptr inbounds %struct.Reg, %struct.Reg* %19353, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %19354 to i64*
  %19355 = load i64, i64* %PC.i197
  %19356 = add i64 %19355, 314
  %19357 = load i64, i64* %PC.i197
  %19358 = add i64 %19357, 6
  %19359 = load i64, i64* %PC.i197
  %19360 = add i64 %19359, 6
  store i64 %19360, i64* %PC.i197
  %19361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19362 = load i8, i8* %19361, align 1
  %19363 = icmp eq i8 %19362, 0
  %19364 = zext i1 %19363 to i8
  store i8 %19364, i8* %BRANCH_TAKEN, align 1
  %19365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19366 = select i1 %19363, i64 %19356, i64 %19358
  store i64 %19366, i64* %19365, align 8
  store %struct.Memory* %loadMem_40bb14, %struct.Memory** %MEMORY
  %loadBr_40bb14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb14 = icmp eq i8 %loadBr_40bb14, 1
  br i1 %cmpBr_40bb14, label %block_.L_40bc4e, label %block_40bb1a

block_40bb1a:                                     ; preds = %block_.L_40bb0d
  %loadMem_40bb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19368 = getelementptr inbounds %struct.GPR, %struct.GPR* %19367, i32 0, i32 33
  %19369 = getelementptr inbounds %struct.Reg, %struct.Reg* %19368, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %19369 to i64*
  %19370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19371 = getelementptr inbounds %struct.GPR, %struct.GPR* %19370, i32 0, i32 15
  %19372 = getelementptr inbounds %struct.Reg, %struct.Reg* %19371, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %19372 to i64*
  %19373 = load i64, i64* %RBP.i196
  %19374 = sub i64 %19373, 16
  %19375 = load i64, i64* %PC.i195
  %19376 = add i64 %19375, 7
  store i64 %19376, i64* %PC.i195
  %19377 = inttoptr i64 %19374 to i32*
  store i32 0, i32* %19377
  store %struct.Memory* %loadMem_40bb1a, %struct.Memory** %MEMORY
  br label %block_.L_40bb21

block_.L_40bb21:                                  ; preds = %block_.L_40bc3b, %block_40bb1a
  %loadMem_40bb21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19379 = getelementptr inbounds %struct.GPR, %struct.GPR* %19378, i32 0, i32 33
  %19380 = getelementptr inbounds %struct.Reg, %struct.Reg* %19379, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %19380 to i64*
  %19381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19382 = getelementptr inbounds %struct.GPR, %struct.GPR* %19381, i32 0, i32 15
  %19383 = getelementptr inbounds %struct.Reg, %struct.Reg* %19382, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %19383 to i64*
  %19384 = load i64, i64* %RBP.i194
  %19385 = sub i64 %19384, 16
  %19386 = load i64, i64* %PC.i193
  %19387 = add i64 %19386, 4
  store i64 %19387, i64* %PC.i193
  %19388 = inttoptr i64 %19385 to i32*
  %19389 = load i32, i32* %19388
  %19390 = sub i32 %19389, 4
  %19391 = icmp ult i32 %19389, 4
  %19392 = zext i1 %19391 to i8
  %19393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19392, i8* %19393, align 1
  %19394 = and i32 %19390, 255
  %19395 = call i32 @llvm.ctpop.i32(i32 %19394)
  %19396 = trunc i32 %19395 to i8
  %19397 = and i8 %19396, 1
  %19398 = xor i8 %19397, 1
  %19399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19398, i8* %19399, align 1
  %19400 = xor i32 %19389, 4
  %19401 = xor i32 %19400, %19390
  %19402 = lshr i32 %19401, 4
  %19403 = trunc i32 %19402 to i8
  %19404 = and i8 %19403, 1
  %19405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19404, i8* %19405, align 1
  %19406 = icmp eq i32 %19390, 0
  %19407 = zext i1 %19406 to i8
  %19408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19407, i8* %19408, align 1
  %19409 = lshr i32 %19390, 31
  %19410 = trunc i32 %19409 to i8
  %19411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19410, i8* %19411, align 1
  %19412 = lshr i32 %19389, 31
  %19413 = xor i32 %19409, %19412
  %19414 = add i32 %19413, %19412
  %19415 = icmp eq i32 %19414, 2
  %19416 = zext i1 %19415 to i8
  %19417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19416, i8* %19417, align 1
  store %struct.Memory* %loadMem_40bb21, %struct.Memory** %MEMORY
  %loadMem_40bb25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19419 = getelementptr inbounds %struct.GPR, %struct.GPR* %19418, i32 0, i32 33
  %19420 = getelementptr inbounds %struct.Reg, %struct.Reg* %19419, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %19420 to i64*
  %19421 = load i64, i64* %PC.i192
  %19422 = add i64 %19421, 292
  %19423 = load i64, i64* %PC.i192
  %19424 = add i64 %19423, 6
  %19425 = load i64, i64* %PC.i192
  %19426 = add i64 %19425, 6
  store i64 %19426, i64* %PC.i192
  %19427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19428 = load i8, i8* %19427, align 1
  %19429 = icmp ne i8 %19428, 0
  %19430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19431 = load i8, i8* %19430, align 1
  %19432 = icmp ne i8 %19431, 0
  %19433 = xor i1 %19429, %19432
  %19434 = xor i1 %19433, true
  %19435 = zext i1 %19434 to i8
  store i8 %19435, i8* %BRANCH_TAKEN, align 1
  %19436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19437 = select i1 %19433, i64 %19424, i64 %19422
  store i64 %19437, i64* %19436, align 8
  store %struct.Memory* %loadMem_40bb25, %struct.Memory** %MEMORY
  %loadBr_40bb25 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb25 = icmp eq i8 %loadBr_40bb25, 1
  br i1 %cmpBr_40bb25, label %block_.L_40bc49, label %block_40bb2b

block_40bb2b:                                     ; preds = %block_.L_40bb21
  %loadMem_40bb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19439 = getelementptr inbounds %struct.GPR, %struct.GPR* %19438, i32 0, i32 33
  %19440 = getelementptr inbounds %struct.Reg, %struct.Reg* %19439, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %19440 to i64*
  %19441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19442 = getelementptr inbounds %struct.GPR, %struct.GPR* %19441, i32 0, i32 15
  %19443 = getelementptr inbounds %struct.Reg, %struct.Reg* %19442, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %19443 to i64*
  %19444 = load i64, i64* %RBP.i191
  %19445 = sub i64 %19444, 20
  %19446 = load i64, i64* %PC.i190
  %19447 = add i64 %19446, 7
  store i64 %19447, i64* %PC.i190
  %19448 = inttoptr i64 %19445 to i32*
  store i32 0, i32* %19448
  store %struct.Memory* %loadMem_40bb2b, %struct.Memory** %MEMORY
  br label %block_.L_40bb32

block_.L_40bb32:                                  ; preds = %block_40bb3c, %block_40bb2b
  %loadMem_40bb32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19450 = getelementptr inbounds %struct.GPR, %struct.GPR* %19449, i32 0, i32 33
  %19451 = getelementptr inbounds %struct.Reg, %struct.Reg* %19450, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %19451 to i64*
  %19452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19453 = getelementptr inbounds %struct.GPR, %struct.GPR* %19452, i32 0, i32 15
  %19454 = getelementptr inbounds %struct.Reg, %struct.Reg* %19453, i32 0, i32 0
  %RBP.i189 = bitcast %union.anon* %19454 to i64*
  %19455 = load i64, i64* %RBP.i189
  %19456 = sub i64 %19455, 20
  %19457 = load i64, i64* %PC.i188
  %19458 = add i64 %19457, 4
  store i64 %19458, i64* %PC.i188
  %19459 = inttoptr i64 %19456 to i32*
  %19460 = load i32, i32* %19459
  %19461 = sub i32 %19460, 4
  %19462 = icmp ult i32 %19460, 4
  %19463 = zext i1 %19462 to i8
  %19464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19463, i8* %19464, align 1
  %19465 = and i32 %19461, 255
  %19466 = call i32 @llvm.ctpop.i32(i32 %19465)
  %19467 = trunc i32 %19466 to i8
  %19468 = and i8 %19467, 1
  %19469 = xor i8 %19468, 1
  %19470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19469, i8* %19470, align 1
  %19471 = xor i32 %19460, 4
  %19472 = xor i32 %19471, %19461
  %19473 = lshr i32 %19472, 4
  %19474 = trunc i32 %19473 to i8
  %19475 = and i8 %19474, 1
  %19476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19475, i8* %19476, align 1
  %19477 = icmp eq i32 %19461, 0
  %19478 = zext i1 %19477 to i8
  %19479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19478, i8* %19479, align 1
  %19480 = lshr i32 %19461, 31
  %19481 = trunc i32 %19480 to i8
  %19482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19481, i8* %19482, align 1
  %19483 = lshr i32 %19460, 31
  %19484 = xor i32 %19480, %19483
  %19485 = add i32 %19484, %19483
  %19486 = icmp eq i32 %19485, 2
  %19487 = zext i1 %19486 to i8
  %19488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19487, i8* %19488, align 1
  store %struct.Memory* %loadMem_40bb32, %struct.Memory** %MEMORY
  %loadMem_40bb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19490 = getelementptr inbounds %struct.GPR, %struct.GPR* %19489, i32 0, i32 33
  %19491 = getelementptr inbounds %struct.Reg, %struct.Reg* %19490, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %19491 to i64*
  %19492 = load i64, i64* %PC.i187
  %19493 = add i64 %19492, 60
  %19494 = load i64, i64* %PC.i187
  %19495 = add i64 %19494, 6
  %19496 = load i64, i64* %PC.i187
  %19497 = add i64 %19496, 6
  store i64 %19497, i64* %PC.i187
  %19498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19499 = load i8, i8* %19498, align 1
  %19500 = icmp ne i8 %19499, 0
  %19501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19502 = load i8, i8* %19501, align 1
  %19503 = icmp ne i8 %19502, 0
  %19504 = xor i1 %19500, %19503
  %19505 = xor i1 %19504, true
  %19506 = zext i1 %19505 to i8
  store i8 %19506, i8* %BRANCH_TAKEN, align 1
  %19507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19508 = select i1 %19504, i64 %19495, i64 %19493
  store i64 %19508, i64* %19507, align 8
  store %struct.Memory* %loadMem_40bb36, %struct.Memory** %MEMORY
  %loadBr_40bb36 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb36 = icmp eq i8 %loadBr_40bb36, 1
  br i1 %cmpBr_40bb36, label %block_.L_40bb72, label %block_40bb3c

block_40bb3c:                                     ; preds = %block_.L_40bb32
  %loadMem_40bb3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19510 = getelementptr inbounds %struct.GPR, %struct.GPR* %19509, i32 0, i32 33
  %19511 = getelementptr inbounds %struct.Reg, %struct.Reg* %19510, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %19511 to i64*
  %19512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19513 = getelementptr inbounds %struct.GPR, %struct.GPR* %19512, i32 0, i32 1
  %19514 = getelementptr inbounds %struct.Reg, %struct.Reg* %19513, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %19514 to i64*
  %19515 = load i64, i64* %PC.i185
  %19516 = add i64 %19515, 8
  store i64 %19516, i64* %PC.i185
  %19517 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %19517, i64* %RAX.i186, align 8
  store %struct.Memory* %loadMem_40bb3c, %struct.Memory** %MEMORY
  %loadMem_40bb44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19519 = getelementptr inbounds %struct.GPR, %struct.GPR* %19518, i32 0, i32 33
  %19520 = getelementptr inbounds %struct.Reg, %struct.Reg* %19519, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %19520 to i64*
  %19521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19522 = getelementptr inbounds %struct.GPR, %struct.GPR* %19521, i32 0, i32 1
  %19523 = getelementptr inbounds %struct.Reg, %struct.Reg* %19522, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %19523 to i64*
  %19524 = load i64, i64* %RAX.i184
  %19525 = load i64, i64* %PC.i183
  %19526 = add i64 %19525, 6
  store i64 %19526, i64* %PC.i183
  %19527 = add i64 13112, %19524
  store i64 %19527, i64* %RAX.i184, align 8
  %19528 = icmp ult i64 %19527, %19524
  %19529 = icmp ult i64 %19527, 13112
  %19530 = or i1 %19528, %19529
  %19531 = zext i1 %19530 to i8
  %19532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19531, i8* %19532, align 1
  %19533 = trunc i64 %19527 to i32
  %19534 = and i32 %19533, 255
  %19535 = call i32 @llvm.ctpop.i32(i32 %19534)
  %19536 = trunc i32 %19535 to i8
  %19537 = and i8 %19536, 1
  %19538 = xor i8 %19537, 1
  %19539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19538, i8* %19539, align 1
  %19540 = xor i64 13112, %19524
  %19541 = xor i64 %19540, %19527
  %19542 = lshr i64 %19541, 4
  %19543 = trunc i64 %19542 to i8
  %19544 = and i8 %19543, 1
  %19545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19544, i8* %19545, align 1
  %19546 = icmp eq i64 %19527, 0
  %19547 = zext i1 %19546 to i8
  %19548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19547, i8* %19548, align 1
  %19549 = lshr i64 %19527, 63
  %19550 = trunc i64 %19549 to i8
  %19551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19550, i8* %19551, align 1
  %19552 = lshr i64 %19524, 63
  %19553 = xor i64 %19549, %19552
  %19554 = add i64 %19553, %19549
  %19555 = icmp eq i64 %19554, 2
  %19556 = zext i1 %19555 to i8
  %19557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19556, i8* %19557, align 1
  store %struct.Memory* %loadMem_40bb44, %struct.Memory** %MEMORY
  %loadMem_40bb4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19559 = getelementptr inbounds %struct.GPR, %struct.GPR* %19558, i32 0, i32 33
  %19560 = getelementptr inbounds %struct.Reg, %struct.Reg* %19559, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %19560 to i64*
  %19561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19562 = getelementptr inbounds %struct.GPR, %struct.GPR* %19561, i32 0, i32 5
  %19563 = getelementptr inbounds %struct.Reg, %struct.Reg* %19562, i32 0, i32 0
  %RCX.i181 = bitcast %union.anon* %19563 to i64*
  %19564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19565 = getelementptr inbounds %struct.GPR, %struct.GPR* %19564, i32 0, i32 15
  %19566 = getelementptr inbounds %struct.Reg, %struct.Reg* %19565, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %19566 to i64*
  %19567 = load i64, i64* %RBP.i182
  %19568 = sub i64 %19567, 16
  %19569 = load i64, i64* %PC.i180
  %19570 = add i64 %19569, 4
  store i64 %19570, i64* %PC.i180
  %19571 = inttoptr i64 %19568 to i32*
  %19572 = load i32, i32* %19571
  %19573 = sext i32 %19572 to i64
  store i64 %19573, i64* %RCX.i181, align 8
  store %struct.Memory* %loadMem_40bb4a, %struct.Memory** %MEMORY
  %loadMem_40bb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19575 = getelementptr inbounds %struct.GPR, %struct.GPR* %19574, i32 0, i32 33
  %19576 = getelementptr inbounds %struct.Reg, %struct.Reg* %19575, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %19576 to i64*
  %19577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19578 = getelementptr inbounds %struct.GPR, %struct.GPR* %19577, i32 0, i32 5
  %19579 = getelementptr inbounds %struct.Reg, %struct.Reg* %19578, i32 0, i32 0
  %RCX.i179 = bitcast %union.anon* %19579 to i64*
  %19580 = load i64, i64* %RCX.i179
  %19581 = load i64, i64* %PC.i178
  %19582 = add i64 %19581, 4
  store i64 %19582, i64* %PC.i178
  %19583 = shl i64 %19580, 5
  %19584 = icmp slt i64 %19583, 0
  %19585 = shl i64 %19583, 1
  store i64 %19585, i64* %RCX.i179, align 8
  %19586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19587 = zext i1 %19584 to i8
  store i8 %19587, i8* %19586, align 1
  %19588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %19589 = trunc i64 %19585 to i32
  %19590 = and i32 %19589, 254
  %19591 = call i32 @llvm.ctpop.i32(i32 %19590)
  %19592 = trunc i32 %19591 to i8
  %19593 = and i8 %19592, 1
  %19594 = xor i8 %19593, 1
  store i8 %19594, i8* %19588, align 1
  %19595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19595, align 1
  %19596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19597 = icmp eq i64 %19585, 0
  %19598 = zext i1 %19597 to i8
  store i8 %19598, i8* %19596, align 1
  %19599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19600 = lshr i64 %19585, 63
  %19601 = trunc i64 %19600 to i8
  store i8 %19601, i8* %19599, align 1
  %19602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %19602, align 1
  store %struct.Memory* %loadMem_40bb4e, %struct.Memory** %MEMORY
  %loadMem_40bb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19604 = getelementptr inbounds %struct.GPR, %struct.GPR* %19603, i32 0, i32 33
  %19605 = getelementptr inbounds %struct.Reg, %struct.Reg* %19604, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %19605 to i64*
  %19606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19607 = getelementptr inbounds %struct.GPR, %struct.GPR* %19606, i32 0, i32 1
  %19608 = getelementptr inbounds %struct.Reg, %struct.Reg* %19607, i32 0, i32 0
  %RAX.i176 = bitcast %union.anon* %19608 to i64*
  %19609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19610 = getelementptr inbounds %struct.GPR, %struct.GPR* %19609, i32 0, i32 5
  %19611 = getelementptr inbounds %struct.Reg, %struct.Reg* %19610, i32 0, i32 0
  %RCX.i177 = bitcast %union.anon* %19611 to i64*
  %19612 = load i64, i64* %RAX.i176
  %19613 = load i64, i64* %RCX.i177
  %19614 = load i64, i64* %PC.i175
  %19615 = add i64 %19614, 3
  store i64 %19615, i64* %PC.i175
  %19616 = add i64 %19613, %19612
  store i64 %19616, i64* %RAX.i176, align 8
  %19617 = icmp ult i64 %19616, %19612
  %19618 = icmp ult i64 %19616, %19613
  %19619 = or i1 %19617, %19618
  %19620 = zext i1 %19619 to i8
  %19621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19620, i8* %19621, align 1
  %19622 = trunc i64 %19616 to i32
  %19623 = and i32 %19622, 255
  %19624 = call i32 @llvm.ctpop.i32(i32 %19623)
  %19625 = trunc i32 %19624 to i8
  %19626 = and i8 %19625, 1
  %19627 = xor i8 %19626, 1
  %19628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19627, i8* %19628, align 1
  %19629 = xor i64 %19613, %19612
  %19630 = xor i64 %19629, %19616
  %19631 = lshr i64 %19630, 4
  %19632 = trunc i64 %19631 to i8
  %19633 = and i8 %19632, 1
  %19634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19633, i8* %19634, align 1
  %19635 = icmp eq i64 %19616, 0
  %19636 = zext i1 %19635 to i8
  %19637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19636, i8* %19637, align 1
  %19638 = lshr i64 %19616, 63
  %19639 = trunc i64 %19638 to i8
  %19640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19639, i8* %19640, align 1
  %19641 = lshr i64 %19612, 63
  %19642 = lshr i64 %19613, 63
  %19643 = xor i64 %19638, %19641
  %19644 = xor i64 %19638, %19642
  %19645 = add i64 %19643, %19644
  %19646 = icmp eq i64 %19645, 2
  %19647 = zext i1 %19646 to i8
  %19648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19647, i8* %19648, align 1
  store %struct.Memory* %loadMem_40bb52, %struct.Memory** %MEMORY
  %loadMem_40bb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19650 = getelementptr inbounds %struct.GPR, %struct.GPR* %19649, i32 0, i32 33
  %19651 = getelementptr inbounds %struct.Reg, %struct.Reg* %19650, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %19651 to i64*
  %19652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19653 = getelementptr inbounds %struct.GPR, %struct.GPR* %19652, i32 0, i32 5
  %19654 = getelementptr inbounds %struct.Reg, %struct.Reg* %19653, i32 0, i32 0
  %RCX.i173 = bitcast %union.anon* %19654 to i64*
  %19655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19656 = getelementptr inbounds %struct.GPR, %struct.GPR* %19655, i32 0, i32 15
  %19657 = getelementptr inbounds %struct.Reg, %struct.Reg* %19656, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %19657 to i64*
  %19658 = load i64, i64* %RBP.i174
  %19659 = sub i64 %19658, 20
  %19660 = load i64, i64* %PC.i172
  %19661 = add i64 %19660, 4
  store i64 %19661, i64* %PC.i172
  %19662 = inttoptr i64 %19659 to i32*
  %19663 = load i32, i32* %19662
  %19664 = sext i32 %19663 to i64
  store i64 %19664, i64* %RCX.i173, align 8
  store %struct.Memory* %loadMem_40bb55, %struct.Memory** %MEMORY
  %loadMem_40bb59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19666 = getelementptr inbounds %struct.GPR, %struct.GPR* %19665, i32 0, i32 33
  %19667 = getelementptr inbounds %struct.Reg, %struct.Reg* %19666, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %19667 to i64*
  %19668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19669 = getelementptr inbounds %struct.GPR, %struct.GPR* %19668, i32 0, i32 1
  %19670 = getelementptr inbounds %struct.Reg, %struct.Reg* %19669, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %19670 to i64*
  %19671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19672 = getelementptr inbounds %struct.GPR, %struct.GPR* %19671, i32 0, i32 5
  %19673 = getelementptr inbounds %struct.Reg, %struct.Reg* %19672, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %19673 to i64*
  %19674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19675 = getelementptr inbounds %struct.GPR, %struct.GPR* %19674, i32 0, i32 7
  %19676 = getelementptr inbounds %struct.Reg, %struct.Reg* %19675, i32 0, i32 0
  %RDX.i171 = bitcast %union.anon* %19676 to i64*
  %19677 = load i64, i64* %RAX.i169
  %19678 = load i64, i64* %RCX.i170
  %19679 = mul i64 %19678, 4
  %19680 = add i64 %19679, %19677
  %19681 = load i64, i64* %PC.i168
  %19682 = add i64 %19681, 3
  store i64 %19682, i64* %PC.i168
  %19683 = inttoptr i64 %19680 to i32*
  %19684 = load i32, i32* %19683
  %19685 = zext i32 %19684 to i64
  store i64 %19685, i64* %RDX.i171, align 8
  store %struct.Memory* %loadMem_40bb59, %struct.Memory** %MEMORY
  %loadMem_40bb5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19687 = getelementptr inbounds %struct.GPR, %struct.GPR* %19686, i32 0, i32 33
  %19688 = getelementptr inbounds %struct.Reg, %struct.Reg* %19687, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %19688 to i64*
  %19689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19690 = getelementptr inbounds %struct.GPR, %struct.GPR* %19689, i32 0, i32 1
  %19691 = getelementptr inbounds %struct.Reg, %struct.Reg* %19690, i32 0, i32 0
  %RAX.i166 = bitcast %union.anon* %19691 to i64*
  %19692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19693 = getelementptr inbounds %struct.GPR, %struct.GPR* %19692, i32 0, i32 15
  %19694 = getelementptr inbounds %struct.Reg, %struct.Reg* %19693, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %19694 to i64*
  %19695 = load i64, i64* %RBP.i167
  %19696 = sub i64 %19695, 20
  %19697 = load i64, i64* %PC.i165
  %19698 = add i64 %19697, 4
  store i64 %19698, i64* %PC.i165
  %19699 = inttoptr i64 %19696 to i32*
  %19700 = load i32, i32* %19699
  %19701 = sext i32 %19700 to i64
  store i64 %19701, i64* %RAX.i166, align 8
  store %struct.Memory* %loadMem_40bb5c, %struct.Memory** %MEMORY
  %loadMem_40bb60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19703 = getelementptr inbounds %struct.GPR, %struct.GPR* %19702, i32 0, i32 33
  %19704 = getelementptr inbounds %struct.Reg, %struct.Reg* %19703, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %19704 to i64*
  %19705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19706 = getelementptr inbounds %struct.GPR, %struct.GPR* %19705, i32 0, i32 7
  %19707 = getelementptr inbounds %struct.Reg, %struct.Reg* %19706, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %19707 to i32*
  %19708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19709 = getelementptr inbounds %struct.GPR, %struct.GPR* %19708, i32 0, i32 1
  %19710 = getelementptr inbounds %struct.Reg, %struct.Reg* %19709, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %19710 to i64*
  %19711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19712 = getelementptr inbounds %struct.GPR, %struct.GPR* %19711, i32 0, i32 15
  %19713 = getelementptr inbounds %struct.Reg, %struct.Reg* %19712, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %19713 to i64*
  %19714 = load i64, i64* %RBP.i164
  %19715 = load i64, i64* %RAX.i163
  %19716 = mul i64 %19715, 4
  %19717 = add i64 %19714, -48
  %19718 = add i64 %19717, %19716
  %19719 = load i32, i32* %EDX.i
  %19720 = zext i32 %19719 to i64
  %19721 = load i64, i64* %PC.i162
  %19722 = add i64 %19721, 4
  store i64 %19722, i64* %PC.i162
  %19723 = inttoptr i64 %19718 to i32*
  store i32 %19719, i32* %19723
  store %struct.Memory* %loadMem_40bb60, %struct.Memory** %MEMORY
  %loadMem_40bb64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19725 = getelementptr inbounds %struct.GPR, %struct.GPR* %19724, i32 0, i32 33
  %19726 = getelementptr inbounds %struct.Reg, %struct.Reg* %19725, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %19726 to i64*
  %19727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19728 = getelementptr inbounds %struct.GPR, %struct.GPR* %19727, i32 0, i32 1
  %19729 = getelementptr inbounds %struct.Reg, %struct.Reg* %19728, i32 0, i32 0
  %RAX.i160 = bitcast %union.anon* %19729 to i64*
  %19730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19731 = getelementptr inbounds %struct.GPR, %struct.GPR* %19730, i32 0, i32 15
  %19732 = getelementptr inbounds %struct.Reg, %struct.Reg* %19731, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %19732 to i64*
  %19733 = load i64, i64* %RBP.i161
  %19734 = sub i64 %19733, 20
  %19735 = load i64, i64* %PC.i159
  %19736 = add i64 %19735, 3
  store i64 %19736, i64* %PC.i159
  %19737 = inttoptr i64 %19734 to i32*
  %19738 = load i32, i32* %19737
  %19739 = zext i32 %19738 to i64
  store i64 %19739, i64* %RAX.i160, align 8
  store %struct.Memory* %loadMem_40bb64, %struct.Memory** %MEMORY
  %loadMem_40bb67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19741 = getelementptr inbounds %struct.GPR, %struct.GPR* %19740, i32 0, i32 33
  %19742 = getelementptr inbounds %struct.Reg, %struct.Reg* %19741, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %19742 to i64*
  %19743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19744 = getelementptr inbounds %struct.GPR, %struct.GPR* %19743, i32 0, i32 1
  %19745 = getelementptr inbounds %struct.Reg, %struct.Reg* %19744, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %19745 to i64*
  %19746 = load i64, i64* %RAX.i158
  %19747 = load i64, i64* %PC.i157
  %19748 = add i64 %19747, 3
  store i64 %19748, i64* %PC.i157
  %19749 = trunc i64 %19746 to i32
  %19750 = add i32 1, %19749
  %19751 = zext i32 %19750 to i64
  store i64 %19751, i64* %RAX.i158, align 8
  %19752 = icmp ult i32 %19750, %19749
  %19753 = icmp ult i32 %19750, 1
  %19754 = or i1 %19752, %19753
  %19755 = zext i1 %19754 to i8
  %19756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19755, i8* %19756, align 1
  %19757 = and i32 %19750, 255
  %19758 = call i32 @llvm.ctpop.i32(i32 %19757)
  %19759 = trunc i32 %19758 to i8
  %19760 = and i8 %19759, 1
  %19761 = xor i8 %19760, 1
  %19762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19761, i8* %19762, align 1
  %19763 = xor i64 1, %19746
  %19764 = trunc i64 %19763 to i32
  %19765 = xor i32 %19764, %19750
  %19766 = lshr i32 %19765, 4
  %19767 = trunc i32 %19766 to i8
  %19768 = and i8 %19767, 1
  %19769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19768, i8* %19769, align 1
  %19770 = icmp eq i32 %19750, 0
  %19771 = zext i1 %19770 to i8
  %19772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19771, i8* %19772, align 1
  %19773 = lshr i32 %19750, 31
  %19774 = trunc i32 %19773 to i8
  %19775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19774, i8* %19775, align 1
  %19776 = lshr i32 %19749, 31
  %19777 = xor i32 %19773, %19776
  %19778 = add i32 %19777, %19773
  %19779 = icmp eq i32 %19778, 2
  %19780 = zext i1 %19779 to i8
  %19781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19780, i8* %19781, align 1
  store %struct.Memory* %loadMem_40bb67, %struct.Memory** %MEMORY
  %loadMem_40bb6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19783 = getelementptr inbounds %struct.GPR, %struct.GPR* %19782, i32 0, i32 33
  %19784 = getelementptr inbounds %struct.Reg, %struct.Reg* %19783, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %19784 to i64*
  %19785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19786 = getelementptr inbounds %struct.GPR, %struct.GPR* %19785, i32 0, i32 1
  %19787 = getelementptr inbounds %struct.Reg, %struct.Reg* %19786, i32 0, i32 0
  %EAX.i155 = bitcast %union.anon* %19787 to i32*
  %19788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19789 = getelementptr inbounds %struct.GPR, %struct.GPR* %19788, i32 0, i32 15
  %19790 = getelementptr inbounds %struct.Reg, %struct.Reg* %19789, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %19790 to i64*
  %19791 = load i64, i64* %RBP.i156
  %19792 = sub i64 %19791, 20
  %19793 = load i32, i32* %EAX.i155
  %19794 = zext i32 %19793 to i64
  %19795 = load i64, i64* %PC.i154
  %19796 = add i64 %19795, 3
  store i64 %19796, i64* %PC.i154
  %19797 = inttoptr i64 %19792 to i32*
  store i32 %19793, i32* %19797
  store %struct.Memory* %loadMem_40bb6a, %struct.Memory** %MEMORY
  %loadMem_40bb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %19798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19799 = getelementptr inbounds %struct.GPR, %struct.GPR* %19798, i32 0, i32 33
  %19800 = getelementptr inbounds %struct.Reg, %struct.Reg* %19799, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %19800 to i64*
  %19801 = load i64, i64* %PC.i153
  %19802 = add i64 %19801, -59
  %19803 = load i64, i64* %PC.i153
  %19804 = add i64 %19803, 5
  store i64 %19804, i64* %PC.i153
  %19805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19802, i64* %19805, align 8
  store %struct.Memory* %loadMem_40bb6d, %struct.Memory** %MEMORY
  br label %block_.L_40bb32

block_.L_40bb72:                                  ; preds = %block_.L_40bb32
  %loadMem_40bb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19807 = getelementptr inbounds %struct.GPR, %struct.GPR* %19806, i32 0, i32 33
  %19808 = getelementptr inbounds %struct.Reg, %struct.Reg* %19807, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %19808 to i64*
  %19809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19810 = getelementptr inbounds %struct.GPR, %struct.GPR* %19809, i32 0, i32 1
  %19811 = getelementptr inbounds %struct.Reg, %struct.Reg* %19810, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %19811 to i64*
  %19812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19813 = getelementptr inbounds %struct.GPR, %struct.GPR* %19812, i32 0, i32 15
  %19814 = getelementptr inbounds %struct.Reg, %struct.Reg* %19813, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %19814 to i64*
  %19815 = load i64, i64* %RBP.i152
  %19816 = sub i64 %19815, 48
  %19817 = load i64, i64* %PC.i150
  %19818 = add i64 %19817, 3
  store i64 %19818, i64* %PC.i150
  %19819 = inttoptr i64 %19816 to i32*
  %19820 = load i32, i32* %19819
  %19821 = zext i32 %19820 to i64
  store i64 %19821, i64* %RAX.i151, align 8
  store %struct.Memory* %loadMem_40bb72, %struct.Memory** %MEMORY
  %loadMem_40bb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19823 = getelementptr inbounds %struct.GPR, %struct.GPR* %19822, i32 0, i32 33
  %19824 = getelementptr inbounds %struct.Reg, %struct.Reg* %19823, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %19824 to i64*
  %19825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19826 = getelementptr inbounds %struct.GPR, %struct.GPR* %19825, i32 0, i32 1
  %19827 = getelementptr inbounds %struct.Reg, %struct.Reg* %19826, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %19827 to i64*
  %19828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19829 = getelementptr inbounds %struct.GPR, %struct.GPR* %19828, i32 0, i32 15
  %19830 = getelementptr inbounds %struct.Reg, %struct.Reg* %19829, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %19830 to i64*
  %19831 = load i64, i64* %RAX.i148
  %19832 = load i64, i64* %RBP.i149
  %19833 = sub i64 %19832, 40
  %19834 = load i64, i64* %PC.i147
  %19835 = add i64 %19834, 3
  store i64 %19835, i64* %PC.i147
  %19836 = trunc i64 %19831 to i32
  %19837 = inttoptr i64 %19833 to i32*
  %19838 = load i32, i32* %19837
  %19839 = add i32 %19838, %19836
  %19840 = zext i32 %19839 to i64
  store i64 %19840, i64* %RAX.i148, align 8
  %19841 = icmp ult i32 %19839, %19836
  %19842 = icmp ult i32 %19839, %19838
  %19843 = or i1 %19841, %19842
  %19844 = zext i1 %19843 to i8
  %19845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19844, i8* %19845, align 1
  %19846 = and i32 %19839, 255
  %19847 = call i32 @llvm.ctpop.i32(i32 %19846)
  %19848 = trunc i32 %19847 to i8
  %19849 = and i8 %19848, 1
  %19850 = xor i8 %19849, 1
  %19851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19850, i8* %19851, align 1
  %19852 = xor i32 %19838, %19836
  %19853 = xor i32 %19852, %19839
  %19854 = lshr i32 %19853, 4
  %19855 = trunc i32 %19854 to i8
  %19856 = and i8 %19855, 1
  %19857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19856, i8* %19857, align 1
  %19858 = icmp eq i32 %19839, 0
  %19859 = zext i1 %19858 to i8
  %19860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19859, i8* %19860, align 1
  %19861 = lshr i32 %19839, 31
  %19862 = trunc i32 %19861 to i8
  %19863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19862, i8* %19863, align 1
  %19864 = lshr i32 %19836, 31
  %19865 = lshr i32 %19838, 31
  %19866 = xor i32 %19861, %19864
  %19867 = xor i32 %19861, %19865
  %19868 = add i32 %19866, %19867
  %19869 = icmp eq i32 %19868, 2
  %19870 = zext i1 %19869 to i8
  %19871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19870, i8* %19871, align 1
  store %struct.Memory* %loadMem_40bb75, %struct.Memory** %MEMORY
  %loadMem_40bb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19873 = getelementptr inbounds %struct.GPR, %struct.GPR* %19872, i32 0, i32 33
  %19874 = getelementptr inbounds %struct.Reg, %struct.Reg* %19873, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %19874 to i64*
  %19875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19876 = getelementptr inbounds %struct.GPR, %struct.GPR* %19875, i32 0, i32 1
  %19877 = getelementptr inbounds %struct.Reg, %struct.Reg* %19876, i32 0, i32 0
  %EAX.i145 = bitcast %union.anon* %19877 to i32*
  %19878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19879 = getelementptr inbounds %struct.GPR, %struct.GPR* %19878, i32 0, i32 15
  %19880 = getelementptr inbounds %struct.Reg, %struct.Reg* %19879, i32 0, i32 0
  %RBP.i146 = bitcast %union.anon* %19880 to i64*
  %19881 = load i64, i64* %RBP.i146
  %19882 = sub i64 %19881, 64
  %19883 = load i32, i32* %EAX.i145
  %19884 = zext i32 %19883 to i64
  %19885 = load i64, i64* %PC.i144
  %19886 = add i64 %19885, 3
  store i64 %19886, i64* %PC.i144
  %19887 = inttoptr i64 %19882 to i32*
  store i32 %19883, i32* %19887
  store %struct.Memory* %loadMem_40bb78, %struct.Memory** %MEMORY
  %loadMem_40bb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %19888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19889 = getelementptr inbounds %struct.GPR, %struct.GPR* %19888, i32 0, i32 33
  %19890 = getelementptr inbounds %struct.Reg, %struct.Reg* %19889, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %19890 to i64*
  %19891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19892 = getelementptr inbounds %struct.GPR, %struct.GPR* %19891, i32 0, i32 1
  %19893 = getelementptr inbounds %struct.Reg, %struct.Reg* %19892, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %19893 to i64*
  %19894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19895 = getelementptr inbounds %struct.GPR, %struct.GPR* %19894, i32 0, i32 15
  %19896 = getelementptr inbounds %struct.Reg, %struct.Reg* %19895, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %19896 to i64*
  %19897 = load i64, i64* %RBP.i143
  %19898 = sub i64 %19897, 48
  %19899 = load i64, i64* %PC.i141
  %19900 = add i64 %19899, 3
  store i64 %19900, i64* %PC.i141
  %19901 = inttoptr i64 %19898 to i32*
  %19902 = load i32, i32* %19901
  %19903 = zext i32 %19902 to i64
  store i64 %19903, i64* %RAX.i142, align 8
  store %struct.Memory* %loadMem_40bb7b, %struct.Memory** %MEMORY
  %loadMem_40bb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19905 = getelementptr inbounds %struct.GPR, %struct.GPR* %19904, i32 0, i32 33
  %19906 = getelementptr inbounds %struct.Reg, %struct.Reg* %19905, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %19906 to i64*
  %19907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19908 = getelementptr inbounds %struct.GPR, %struct.GPR* %19907, i32 0, i32 1
  %19909 = getelementptr inbounds %struct.Reg, %struct.Reg* %19908, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %19909 to i64*
  %19910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19911 = getelementptr inbounds %struct.GPR, %struct.GPR* %19910, i32 0, i32 15
  %19912 = getelementptr inbounds %struct.Reg, %struct.Reg* %19911, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %19912 to i64*
  %19913 = load i64, i64* %RAX.i139
  %19914 = load i64, i64* %RBP.i140
  %19915 = sub i64 %19914, 40
  %19916 = load i64, i64* %PC.i138
  %19917 = add i64 %19916, 3
  store i64 %19917, i64* %PC.i138
  %19918 = trunc i64 %19913 to i32
  %19919 = inttoptr i64 %19915 to i32*
  %19920 = load i32, i32* %19919
  %19921 = sub i32 %19918, %19920
  %19922 = zext i32 %19921 to i64
  store i64 %19922, i64* %RAX.i139, align 8
  %19923 = icmp ult i32 %19918, %19920
  %19924 = zext i1 %19923 to i8
  %19925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19924, i8* %19925, align 1
  %19926 = and i32 %19921, 255
  %19927 = call i32 @llvm.ctpop.i32(i32 %19926)
  %19928 = trunc i32 %19927 to i8
  %19929 = and i8 %19928, 1
  %19930 = xor i8 %19929, 1
  %19931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19930, i8* %19931, align 1
  %19932 = xor i32 %19920, %19918
  %19933 = xor i32 %19932, %19921
  %19934 = lshr i32 %19933, 4
  %19935 = trunc i32 %19934 to i8
  %19936 = and i8 %19935, 1
  %19937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19936, i8* %19937, align 1
  %19938 = icmp eq i32 %19921, 0
  %19939 = zext i1 %19938 to i8
  %19940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19939, i8* %19940, align 1
  %19941 = lshr i32 %19921, 31
  %19942 = trunc i32 %19941 to i8
  %19943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19942, i8* %19943, align 1
  %19944 = lshr i32 %19918, 31
  %19945 = lshr i32 %19920, 31
  %19946 = xor i32 %19945, %19944
  %19947 = xor i32 %19941, %19944
  %19948 = add i32 %19947, %19946
  %19949 = icmp eq i32 %19948, 2
  %19950 = zext i1 %19949 to i8
  %19951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19950, i8* %19951, align 1
  store %struct.Memory* %loadMem_40bb7e, %struct.Memory** %MEMORY
  %loadMem_40bb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19953 = getelementptr inbounds %struct.GPR, %struct.GPR* %19952, i32 0, i32 33
  %19954 = getelementptr inbounds %struct.Reg, %struct.Reg* %19953, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %19954 to i64*
  %19955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19956 = getelementptr inbounds %struct.GPR, %struct.GPR* %19955, i32 0, i32 1
  %19957 = getelementptr inbounds %struct.Reg, %struct.Reg* %19956, i32 0, i32 0
  %EAX.i136 = bitcast %union.anon* %19957 to i32*
  %19958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19959 = getelementptr inbounds %struct.GPR, %struct.GPR* %19958, i32 0, i32 15
  %19960 = getelementptr inbounds %struct.Reg, %struct.Reg* %19959, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %19960 to i64*
  %19961 = load i64, i64* %RBP.i137
  %19962 = sub i64 %19961, 60
  %19963 = load i32, i32* %EAX.i136
  %19964 = zext i32 %19963 to i64
  %19965 = load i64, i64* %PC.i135
  %19966 = add i64 %19965, 3
  store i64 %19966, i64* %PC.i135
  %19967 = inttoptr i64 %19962 to i32*
  store i32 %19963, i32* %19967
  store %struct.Memory* %loadMem_40bb81, %struct.Memory** %MEMORY
  %loadMem_40bb84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19969 = getelementptr inbounds %struct.GPR, %struct.GPR* %19968, i32 0, i32 33
  %19970 = getelementptr inbounds %struct.Reg, %struct.Reg* %19969, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %19970 to i64*
  %19971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19972 = getelementptr inbounds %struct.GPR, %struct.GPR* %19971, i32 0, i32 1
  %19973 = getelementptr inbounds %struct.Reg, %struct.Reg* %19972, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %19973 to i64*
  %19974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19975 = getelementptr inbounds %struct.GPR, %struct.GPR* %19974, i32 0, i32 15
  %19976 = getelementptr inbounds %struct.Reg, %struct.Reg* %19975, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %19976 to i64*
  %19977 = load i64, i64* %RBP.i134
  %19978 = sub i64 %19977, 44
  %19979 = load i64, i64* %PC.i132
  %19980 = add i64 %19979, 3
  store i64 %19980, i64* %PC.i132
  %19981 = inttoptr i64 %19978 to i32*
  %19982 = load i32, i32* %19981
  %19983 = zext i32 %19982 to i64
  store i64 %19983, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_40bb84, %struct.Memory** %MEMORY
  %loadMem_40bb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19985 = getelementptr inbounds %struct.GPR, %struct.GPR* %19984, i32 0, i32 33
  %19986 = getelementptr inbounds %struct.Reg, %struct.Reg* %19985, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %19986 to i64*
  %19987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19988 = getelementptr inbounds %struct.GPR, %struct.GPR* %19987, i32 0, i32 1
  %19989 = getelementptr inbounds %struct.Reg, %struct.Reg* %19988, i32 0, i32 0
  %RAX.i131 = bitcast %union.anon* %19989 to i64*
  %19990 = load i64, i64* %RAX.i131
  %19991 = load i64, i64* %PC.i130
  %19992 = add i64 %19991, 2
  store i64 %19992, i64* %PC.i130
  %19993 = shl i64 %19990, 32
  %19994 = ashr i64 %19993, 33
  %19995 = trunc i64 %19990 to i8
  %19996 = and i8 %19995, 1
  %19997 = trunc i64 %19994 to i32
  %19998 = and i64 %19994, 4294967295
  store i64 %19998, i64* %RAX.i131, align 8
  %19999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19996, i8* %19999, align 1
  %20000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20001 = and i32 %19997, 255
  %20002 = call i32 @llvm.ctpop.i32(i32 %20001)
  %20003 = trunc i32 %20002 to i8
  %20004 = and i8 %20003, 1
  %20005 = xor i8 %20004, 1
  store i8 %20005, i8* %20000, align 1
  %20006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20006, align 1
  %20007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20008 = icmp eq i32 %19997, 0
  %20009 = zext i1 %20008 to i8
  store i8 %20009, i8* %20007, align 1
  %20010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20011 = lshr i32 %19997, 31
  %20012 = trunc i32 %20011 to i8
  store i8 %20012, i8* %20010, align 1
  %20013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20013, align 1
  store %struct.Memory* %loadMem_40bb87, %struct.Memory** %MEMORY
  %loadMem_40bb8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %20014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20015 = getelementptr inbounds %struct.GPR, %struct.GPR* %20014, i32 0, i32 33
  %20016 = getelementptr inbounds %struct.Reg, %struct.Reg* %20015, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %20016 to i64*
  %20017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20018 = getelementptr inbounds %struct.GPR, %struct.GPR* %20017, i32 0, i32 1
  %20019 = getelementptr inbounds %struct.Reg, %struct.Reg* %20018, i32 0, i32 0
  %RAX.i128 = bitcast %union.anon* %20019 to i64*
  %20020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20021 = getelementptr inbounds %struct.GPR, %struct.GPR* %20020, i32 0, i32 15
  %20022 = getelementptr inbounds %struct.Reg, %struct.Reg* %20021, i32 0, i32 0
  %RBP.i129 = bitcast %union.anon* %20022 to i64*
  %20023 = load i64, i64* %RAX.i128
  %20024 = load i64, i64* %RBP.i129
  %20025 = sub i64 %20024, 36
  %20026 = load i64, i64* %PC.i127
  %20027 = add i64 %20026, 3
  store i64 %20027, i64* %PC.i127
  %20028 = trunc i64 %20023 to i32
  %20029 = inttoptr i64 %20025 to i32*
  %20030 = load i32, i32* %20029
  %20031 = sub i32 %20028, %20030
  %20032 = zext i32 %20031 to i64
  store i64 %20032, i64* %RAX.i128, align 8
  %20033 = icmp ult i32 %20028, %20030
  %20034 = zext i1 %20033 to i8
  %20035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20034, i8* %20035, align 1
  %20036 = and i32 %20031, 255
  %20037 = call i32 @llvm.ctpop.i32(i32 %20036)
  %20038 = trunc i32 %20037 to i8
  %20039 = and i8 %20038, 1
  %20040 = xor i8 %20039, 1
  %20041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20040, i8* %20041, align 1
  %20042 = xor i32 %20030, %20028
  %20043 = xor i32 %20042, %20031
  %20044 = lshr i32 %20043, 4
  %20045 = trunc i32 %20044 to i8
  %20046 = and i8 %20045, 1
  %20047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20046, i8* %20047, align 1
  %20048 = icmp eq i32 %20031, 0
  %20049 = zext i1 %20048 to i8
  %20050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20049, i8* %20050, align 1
  %20051 = lshr i32 %20031, 31
  %20052 = trunc i32 %20051 to i8
  %20053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20052, i8* %20053, align 1
  %20054 = lshr i32 %20028, 31
  %20055 = lshr i32 %20030, 31
  %20056 = xor i32 %20055, %20054
  %20057 = xor i32 %20051, %20054
  %20058 = add i32 %20057, %20056
  %20059 = icmp eq i32 %20058, 2
  %20060 = zext i1 %20059 to i8
  %20061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20060, i8* %20061, align 1
  store %struct.Memory* %loadMem_40bb8a, %struct.Memory** %MEMORY
  %loadMem_40bb8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %20062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20063 = getelementptr inbounds %struct.GPR, %struct.GPR* %20062, i32 0, i32 33
  %20064 = getelementptr inbounds %struct.Reg, %struct.Reg* %20063, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %20064 to i64*
  %20065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20066 = getelementptr inbounds %struct.GPR, %struct.GPR* %20065, i32 0, i32 1
  %20067 = getelementptr inbounds %struct.Reg, %struct.Reg* %20066, i32 0, i32 0
  %EAX.i125 = bitcast %union.anon* %20067 to i32*
  %20068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20069 = getelementptr inbounds %struct.GPR, %struct.GPR* %20068, i32 0, i32 15
  %20070 = getelementptr inbounds %struct.Reg, %struct.Reg* %20069, i32 0, i32 0
  %RBP.i126 = bitcast %union.anon* %20070 to i64*
  %20071 = load i64, i64* %RBP.i126
  %20072 = sub i64 %20071, 56
  %20073 = load i32, i32* %EAX.i125
  %20074 = zext i32 %20073 to i64
  %20075 = load i64, i64* %PC.i124
  %20076 = add i64 %20075, 3
  store i64 %20076, i64* %PC.i124
  %20077 = inttoptr i64 %20072 to i32*
  store i32 %20073, i32* %20077
  store %struct.Memory* %loadMem_40bb8d, %struct.Memory** %MEMORY
  %loadMem_40bb90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20079 = getelementptr inbounds %struct.GPR, %struct.GPR* %20078, i32 0, i32 33
  %20080 = getelementptr inbounds %struct.Reg, %struct.Reg* %20079, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %20080 to i64*
  %20081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20082 = getelementptr inbounds %struct.GPR, %struct.GPR* %20081, i32 0, i32 1
  %20083 = getelementptr inbounds %struct.Reg, %struct.Reg* %20082, i32 0, i32 0
  %RAX.i122 = bitcast %union.anon* %20083 to i64*
  %20084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20085 = getelementptr inbounds %struct.GPR, %struct.GPR* %20084, i32 0, i32 15
  %20086 = getelementptr inbounds %struct.Reg, %struct.Reg* %20085, i32 0, i32 0
  %RBP.i123 = bitcast %union.anon* %20086 to i64*
  %20087 = load i64, i64* %RBP.i123
  %20088 = sub i64 %20087, 44
  %20089 = load i64, i64* %PC.i121
  %20090 = add i64 %20089, 3
  store i64 %20090, i64* %PC.i121
  %20091 = inttoptr i64 %20088 to i32*
  %20092 = load i32, i32* %20091
  %20093 = zext i32 %20092 to i64
  store i64 %20093, i64* %RAX.i122, align 8
  store %struct.Memory* %loadMem_40bb90, %struct.Memory** %MEMORY
  %loadMem_40bb93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20095 = getelementptr inbounds %struct.GPR, %struct.GPR* %20094, i32 0, i32 33
  %20096 = getelementptr inbounds %struct.Reg, %struct.Reg* %20095, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %20096 to i64*
  %20097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20098 = getelementptr inbounds %struct.GPR, %struct.GPR* %20097, i32 0, i32 5
  %20099 = getelementptr inbounds %struct.Reg, %struct.Reg* %20098, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %20099 to i64*
  %20100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20101 = getelementptr inbounds %struct.GPR, %struct.GPR* %20100, i32 0, i32 15
  %20102 = getelementptr inbounds %struct.Reg, %struct.Reg* %20101, i32 0, i32 0
  %RBP.i120 = bitcast %union.anon* %20102 to i64*
  %20103 = load i64, i64* %RBP.i120
  %20104 = sub i64 %20103, 36
  %20105 = load i64, i64* %PC.i118
  %20106 = add i64 %20105, 3
  store i64 %20106, i64* %PC.i118
  %20107 = inttoptr i64 %20104 to i32*
  %20108 = load i32, i32* %20107
  %20109 = zext i32 %20108 to i64
  store i64 %20109, i64* %RCX.i119, align 8
  store %struct.Memory* %loadMem_40bb93, %struct.Memory** %MEMORY
  %loadMem_40bb96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20111 = getelementptr inbounds %struct.GPR, %struct.GPR* %20110, i32 0, i32 33
  %20112 = getelementptr inbounds %struct.Reg, %struct.Reg* %20111, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %20112 to i64*
  %20113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20114 = getelementptr inbounds %struct.GPR, %struct.GPR* %20113, i32 0, i32 5
  %20115 = getelementptr inbounds %struct.Reg, %struct.Reg* %20114, i32 0, i32 0
  %RCX.i117 = bitcast %union.anon* %20115 to i64*
  %20116 = load i64, i64* %RCX.i117
  %20117 = load i64, i64* %PC.i116
  %20118 = add i64 %20117, 2
  store i64 %20118, i64* %PC.i116
  %20119 = shl i64 %20116, 32
  %20120 = ashr i64 %20119, 33
  %20121 = trunc i64 %20116 to i8
  %20122 = and i8 %20121, 1
  %20123 = trunc i64 %20120 to i32
  %20124 = and i64 %20120, 4294967295
  store i64 %20124, i64* %RCX.i117, align 8
  %20125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20122, i8* %20125, align 1
  %20126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20127 = and i32 %20123, 255
  %20128 = call i32 @llvm.ctpop.i32(i32 %20127)
  %20129 = trunc i32 %20128 to i8
  %20130 = and i8 %20129, 1
  %20131 = xor i8 %20130, 1
  store i8 %20131, i8* %20126, align 1
  %20132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20132, align 1
  %20133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20134 = icmp eq i32 %20123, 0
  %20135 = zext i1 %20134 to i8
  store i8 %20135, i8* %20133, align 1
  %20136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20137 = lshr i32 %20123, 31
  %20138 = trunc i32 %20137 to i8
  store i8 %20138, i8* %20136, align 1
  %20139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20139, align 1
  store %struct.Memory* %loadMem_40bb96, %struct.Memory** %MEMORY
  %loadMem_40bb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20141 = getelementptr inbounds %struct.GPR, %struct.GPR* %20140, i32 0, i32 33
  %20142 = getelementptr inbounds %struct.Reg, %struct.Reg* %20141, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %20142 to i64*
  %20143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20144 = getelementptr inbounds %struct.GPR, %struct.GPR* %20143, i32 0, i32 5
  %20145 = getelementptr inbounds %struct.Reg, %struct.Reg* %20144, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %20145 to i32*
  %20146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20147 = getelementptr inbounds %struct.GPR, %struct.GPR* %20146, i32 0, i32 1
  %20148 = getelementptr inbounds %struct.Reg, %struct.Reg* %20147, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %20148 to i64*
  %20149 = load i64, i64* %RAX.i115
  %20150 = load i32, i32* %ECX.i
  %20151 = zext i32 %20150 to i64
  %20152 = load i64, i64* %PC.i114
  %20153 = add i64 %20152, 2
  store i64 %20153, i64* %PC.i114
  %20154 = trunc i64 %20149 to i32
  %20155 = add i32 %20150, %20154
  %20156 = zext i32 %20155 to i64
  store i64 %20156, i64* %RAX.i115, align 8
  %20157 = icmp ult i32 %20155, %20154
  %20158 = icmp ult i32 %20155, %20150
  %20159 = or i1 %20157, %20158
  %20160 = zext i1 %20159 to i8
  %20161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20160, i8* %20161, align 1
  %20162 = and i32 %20155, 255
  %20163 = call i32 @llvm.ctpop.i32(i32 %20162)
  %20164 = trunc i32 %20163 to i8
  %20165 = and i8 %20164, 1
  %20166 = xor i8 %20165, 1
  %20167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20166, i8* %20167, align 1
  %20168 = xor i64 %20151, %20149
  %20169 = trunc i64 %20168 to i32
  %20170 = xor i32 %20169, %20155
  %20171 = lshr i32 %20170, 4
  %20172 = trunc i32 %20171 to i8
  %20173 = and i8 %20172, 1
  %20174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20173, i8* %20174, align 1
  %20175 = icmp eq i32 %20155, 0
  %20176 = zext i1 %20175 to i8
  %20177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20176, i8* %20177, align 1
  %20178 = lshr i32 %20155, 31
  %20179 = trunc i32 %20178 to i8
  %20180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20179, i8* %20180, align 1
  %20181 = lshr i32 %20154, 31
  %20182 = lshr i32 %20150, 31
  %20183 = xor i32 %20178, %20181
  %20184 = xor i32 %20178, %20182
  %20185 = add i32 %20183, %20184
  %20186 = icmp eq i32 %20185, 2
  %20187 = zext i1 %20186 to i8
  %20188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20187, i8* %20188, align 1
  store %struct.Memory* %loadMem_40bb99, %struct.Memory** %MEMORY
  %loadMem_40bb9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %20189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20190 = getelementptr inbounds %struct.GPR, %struct.GPR* %20189, i32 0, i32 33
  %20191 = getelementptr inbounds %struct.Reg, %struct.Reg* %20190, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %20191 to i64*
  %20192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20193 = getelementptr inbounds %struct.GPR, %struct.GPR* %20192, i32 0, i32 1
  %20194 = getelementptr inbounds %struct.Reg, %struct.Reg* %20193, i32 0, i32 0
  %EAX.i112 = bitcast %union.anon* %20194 to i32*
  %20195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20196 = getelementptr inbounds %struct.GPR, %struct.GPR* %20195, i32 0, i32 15
  %20197 = getelementptr inbounds %struct.Reg, %struct.Reg* %20196, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %20197 to i64*
  %20198 = load i64, i64* %RBP.i113
  %20199 = sub i64 %20198, 52
  %20200 = load i32, i32* %EAX.i112
  %20201 = zext i32 %20200 to i64
  %20202 = load i64, i64* %PC.i111
  %20203 = add i64 %20202, 3
  store i64 %20203, i64* %PC.i111
  %20204 = inttoptr i64 %20199 to i32*
  store i32 %20200, i32* %20204
  store %struct.Memory* %loadMem_40bb9b, %struct.Memory** %MEMORY
  %loadMem_40bb9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20206 = getelementptr inbounds %struct.GPR, %struct.GPR* %20205, i32 0, i32 33
  %20207 = getelementptr inbounds %struct.Reg, %struct.Reg* %20206, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %20207 to i64*
  %20208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20209 = getelementptr inbounds %struct.GPR, %struct.GPR* %20208, i32 0, i32 15
  %20210 = getelementptr inbounds %struct.Reg, %struct.Reg* %20209, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %20210 to i64*
  %20211 = load i64, i64* %RBP.i110
  %20212 = sub i64 %20211, 20
  %20213 = load i64, i64* %PC.i109
  %20214 = add i64 %20213, 7
  store i64 %20214, i64* %PC.i109
  %20215 = inttoptr i64 %20212 to i32*
  store i32 0, i32* %20215
  store %struct.Memory* %loadMem_40bb9e, %struct.Memory** %MEMORY
  br label %block_.L_40bba5

block_.L_40bba5:                                  ; preds = %block_40bbaf, %block_.L_40bb72
  %loadMem_40bba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20217 = getelementptr inbounds %struct.GPR, %struct.GPR* %20216, i32 0, i32 33
  %20218 = getelementptr inbounds %struct.Reg, %struct.Reg* %20217, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %20218 to i64*
  %20219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20220 = getelementptr inbounds %struct.GPR, %struct.GPR* %20219, i32 0, i32 15
  %20221 = getelementptr inbounds %struct.Reg, %struct.Reg* %20220, i32 0, i32 0
  %RBP.i108 = bitcast %union.anon* %20221 to i64*
  %20222 = load i64, i64* %RBP.i108
  %20223 = sub i64 %20222, 20
  %20224 = load i64, i64* %PC.i107
  %20225 = add i64 %20224, 4
  store i64 %20225, i64* %PC.i107
  %20226 = inttoptr i64 %20223 to i32*
  %20227 = load i32, i32* %20226
  %20228 = sub i32 %20227, 2
  %20229 = icmp ult i32 %20227, 2
  %20230 = zext i1 %20229 to i8
  %20231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20230, i8* %20231, align 1
  %20232 = and i32 %20228, 255
  %20233 = call i32 @llvm.ctpop.i32(i32 %20232)
  %20234 = trunc i32 %20233 to i8
  %20235 = and i8 %20234, 1
  %20236 = xor i8 %20235, 1
  %20237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20236, i8* %20237, align 1
  %20238 = xor i32 %20227, 2
  %20239 = xor i32 %20238, %20228
  %20240 = lshr i32 %20239, 4
  %20241 = trunc i32 %20240 to i8
  %20242 = and i8 %20241, 1
  %20243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20242, i8* %20243, align 1
  %20244 = icmp eq i32 %20228, 0
  %20245 = zext i1 %20244 to i8
  %20246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20245, i8* %20246, align 1
  %20247 = lshr i32 %20228, 31
  %20248 = trunc i32 %20247 to i8
  %20249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20248, i8* %20249, align 1
  %20250 = lshr i32 %20227, 31
  %20251 = xor i32 %20247, %20250
  %20252 = add i32 %20251, %20250
  %20253 = icmp eq i32 %20252, 2
  %20254 = zext i1 %20253 to i8
  %20255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20254, i8* %20255, align 1
  store %struct.Memory* %loadMem_40bba5, %struct.Memory** %MEMORY
  %loadMem_40bba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20257 = getelementptr inbounds %struct.GPR, %struct.GPR* %20256, i32 0, i32 33
  %20258 = getelementptr inbounds %struct.Reg, %struct.Reg* %20257, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %20258 to i64*
  %20259 = load i64, i64* %PC.i106
  %20260 = add i64 %20259, 141
  %20261 = load i64, i64* %PC.i106
  %20262 = add i64 %20261, 6
  %20263 = load i64, i64* %PC.i106
  %20264 = add i64 %20263, 6
  store i64 %20264, i64* %PC.i106
  %20265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20266 = load i8, i8* %20265, align 1
  %20267 = icmp ne i8 %20266, 0
  %20268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %20269 = load i8, i8* %20268, align 1
  %20270 = icmp ne i8 %20269, 0
  %20271 = xor i1 %20267, %20270
  %20272 = xor i1 %20271, true
  %20273 = zext i1 %20272 to i8
  store i8 %20273, i8* %BRANCH_TAKEN, align 1
  %20274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20275 = select i1 %20271, i64 %20262, i64 %20260
  store i64 %20275, i64* %20274, align 8
  store %struct.Memory* %loadMem_40bba9, %struct.Memory** %MEMORY
  %loadBr_40bba9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bba9 = icmp eq i8 %loadBr_40bba9, 1
  br i1 %cmpBr_40bba9, label %block_.L_40bc36, label %block_40bbaf

block_40bbaf:                                     ; preds = %block_.L_40bba5
  %loadMem_40bbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %20276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20277 = getelementptr inbounds %struct.GPR, %struct.GPR* %20276, i32 0, i32 33
  %20278 = getelementptr inbounds %struct.Reg, %struct.Reg* %20277, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %20278 to i64*
  %20279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20280 = getelementptr inbounds %struct.GPR, %struct.GPR* %20279, i32 0, i32 1
  %20281 = getelementptr inbounds %struct.Reg, %struct.Reg* %20280, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %20281 to i64*
  %20282 = load i64, i64* %PC.i104
  %20283 = add i64 %20282, 5
  store i64 %20283, i64* %PC.i104
  store i64 3, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_40bbaf, %struct.Memory** %MEMORY
  %loadMem_40bbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20285 = getelementptr inbounds %struct.GPR, %struct.GPR* %20284, i32 0, i32 33
  %20286 = getelementptr inbounds %struct.Reg, %struct.Reg* %20285, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %20286 to i64*
  %20287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20288 = getelementptr inbounds %struct.GPR, %struct.GPR* %20287, i32 0, i32 1
  %20289 = getelementptr inbounds %struct.Reg, %struct.Reg* %20288, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %20289 to i64*
  %20290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20291 = getelementptr inbounds %struct.GPR, %struct.GPR* %20290, i32 0, i32 15
  %20292 = getelementptr inbounds %struct.Reg, %struct.Reg* %20291, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %20292 to i64*
  %20293 = load i64, i64* %RAX.i102
  %20294 = load i64, i64* %RBP.i103
  %20295 = sub i64 %20294, 20
  %20296 = load i64, i64* %PC.i101
  %20297 = add i64 %20296, 3
  store i64 %20297, i64* %PC.i101
  %20298 = trunc i64 %20293 to i32
  %20299 = inttoptr i64 %20295 to i32*
  %20300 = load i32, i32* %20299
  %20301 = sub i32 %20298, %20300
  %20302 = zext i32 %20301 to i64
  store i64 %20302, i64* %RAX.i102, align 8
  %20303 = icmp ult i32 %20298, %20300
  %20304 = zext i1 %20303 to i8
  %20305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20304, i8* %20305, align 1
  %20306 = and i32 %20301, 255
  %20307 = call i32 @llvm.ctpop.i32(i32 %20306)
  %20308 = trunc i32 %20307 to i8
  %20309 = and i8 %20308, 1
  %20310 = xor i8 %20309, 1
  %20311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20310, i8* %20311, align 1
  %20312 = xor i32 %20300, %20298
  %20313 = xor i32 %20312, %20301
  %20314 = lshr i32 %20313, 4
  %20315 = trunc i32 %20314 to i8
  %20316 = and i8 %20315, 1
  %20317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20316, i8* %20317, align 1
  %20318 = icmp eq i32 %20301, 0
  %20319 = zext i1 %20318 to i8
  %20320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20319, i8* %20320, align 1
  %20321 = lshr i32 %20301, 31
  %20322 = trunc i32 %20321 to i8
  %20323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20322, i8* %20323, align 1
  %20324 = lshr i32 %20298, 31
  %20325 = lshr i32 %20300, 31
  %20326 = xor i32 %20325, %20324
  %20327 = xor i32 %20321, %20324
  %20328 = add i32 %20327, %20326
  %20329 = icmp eq i32 %20328, 2
  %20330 = zext i1 %20329 to i8
  %20331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20330, i8* %20331, align 1
  store %struct.Memory* %loadMem_40bbb4, %struct.Memory** %MEMORY
  %loadMem_40bbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20333 = getelementptr inbounds %struct.GPR, %struct.GPR* %20332, i32 0, i32 33
  %20334 = getelementptr inbounds %struct.Reg, %struct.Reg* %20333, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %20334 to i64*
  %20335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20336 = getelementptr inbounds %struct.GPR, %struct.GPR* %20335, i32 0, i32 1
  %20337 = getelementptr inbounds %struct.Reg, %struct.Reg* %20336, i32 0, i32 0
  %EAX.i99 = bitcast %union.anon* %20337 to i32*
  %20338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20339 = getelementptr inbounds %struct.GPR, %struct.GPR* %20338, i32 0, i32 15
  %20340 = getelementptr inbounds %struct.Reg, %struct.Reg* %20339, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %20340 to i64*
  %20341 = load i64, i64* %RBP.i100
  %20342 = sub i64 %20341, 28
  %20343 = load i32, i32* %EAX.i99
  %20344 = zext i32 %20343 to i64
  %20345 = load i64, i64* %PC.i98
  %20346 = add i64 %20345, 3
  store i64 %20346, i64* %PC.i98
  %20347 = inttoptr i64 %20342 to i32*
  store i32 %20343, i32* %20347
  store %struct.Memory* %loadMem_40bbb7, %struct.Memory** %MEMORY
  %loadMem_40bbba = load %struct.Memory*, %struct.Memory** %MEMORY
  %20348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20349 = getelementptr inbounds %struct.GPR, %struct.GPR* %20348, i32 0, i32 33
  %20350 = getelementptr inbounds %struct.Reg, %struct.Reg* %20349, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %20350 to i64*
  %20351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20352 = getelementptr inbounds %struct.GPR, %struct.GPR* %20351, i32 0, i32 5
  %20353 = getelementptr inbounds %struct.Reg, %struct.Reg* %20352, i32 0, i32 0
  %RCX.i96 = bitcast %union.anon* %20353 to i64*
  %20354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20355 = getelementptr inbounds %struct.GPR, %struct.GPR* %20354, i32 0, i32 15
  %20356 = getelementptr inbounds %struct.Reg, %struct.Reg* %20355, i32 0, i32 0
  %RBP.i97 = bitcast %union.anon* %20356 to i64*
  %20357 = load i64, i64* %RBP.i97
  %20358 = sub i64 %20357, 20
  %20359 = load i64, i64* %PC.i95
  %20360 = add i64 %20359, 4
  store i64 %20360, i64* %PC.i95
  %20361 = inttoptr i64 %20358 to i32*
  %20362 = load i32, i32* %20361
  %20363 = sext i32 %20362 to i64
  store i64 %20363, i64* %RCX.i96, align 8
  store %struct.Memory* %loadMem_40bbba, %struct.Memory** %MEMORY
  %loadMem_40bbbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %20364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20365 = getelementptr inbounds %struct.GPR, %struct.GPR* %20364, i32 0, i32 33
  %20366 = getelementptr inbounds %struct.Reg, %struct.Reg* %20365, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %20366 to i64*
  %20367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20368 = getelementptr inbounds %struct.GPR, %struct.GPR* %20367, i32 0, i32 1
  %20369 = getelementptr inbounds %struct.Reg, %struct.Reg* %20368, i32 0, i32 0
  %RAX.i92 = bitcast %union.anon* %20369 to i64*
  %20370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20371 = getelementptr inbounds %struct.GPR, %struct.GPR* %20370, i32 0, i32 5
  %20372 = getelementptr inbounds %struct.Reg, %struct.Reg* %20371, i32 0, i32 0
  %RCX.i93 = bitcast %union.anon* %20372 to i64*
  %20373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20374 = getelementptr inbounds %struct.GPR, %struct.GPR* %20373, i32 0, i32 15
  %20375 = getelementptr inbounds %struct.Reg, %struct.Reg* %20374, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %20375 to i64*
  %20376 = load i64, i64* %RBP.i94
  %20377 = load i64, i64* %RCX.i93
  %20378 = mul i64 %20377, 4
  %20379 = add i64 %20376, -64
  %20380 = add i64 %20379, %20378
  %20381 = load i64, i64* %PC.i91
  %20382 = add i64 %20381, 4
  store i64 %20382, i64* %PC.i91
  %20383 = inttoptr i64 %20380 to i32*
  %20384 = load i32, i32* %20383
  %20385 = zext i32 %20384 to i64
  store i64 %20385, i64* %RAX.i92, align 8
  store %struct.Memory* %loadMem_40bbbe, %struct.Memory** %MEMORY
  %loadMem_40bbc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20387 = getelementptr inbounds %struct.GPR, %struct.GPR* %20386, i32 0, i32 33
  %20388 = getelementptr inbounds %struct.Reg, %struct.Reg* %20387, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %20388 to i64*
  %20389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20390 = getelementptr inbounds %struct.GPR, %struct.GPR* %20389, i32 0, i32 5
  %20391 = getelementptr inbounds %struct.Reg, %struct.Reg* %20390, i32 0, i32 0
  %RCX.i89 = bitcast %union.anon* %20391 to i64*
  %20392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20393 = getelementptr inbounds %struct.GPR, %struct.GPR* %20392, i32 0, i32 15
  %20394 = getelementptr inbounds %struct.Reg, %struct.Reg* %20393, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %20394 to i64*
  %20395 = load i64, i64* %RBP.i90
  %20396 = sub i64 %20395, 28
  %20397 = load i64, i64* %PC.i88
  %20398 = add i64 %20397, 4
  store i64 %20398, i64* %PC.i88
  %20399 = inttoptr i64 %20396 to i32*
  %20400 = load i32, i32* %20399
  %20401 = sext i32 %20400 to i64
  store i64 %20401, i64* %RCX.i89, align 8
  store %struct.Memory* %loadMem_40bbc2, %struct.Memory** %MEMORY
  %loadMem_40bbc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20403 = getelementptr inbounds %struct.GPR, %struct.GPR* %20402, i32 0, i32 33
  %20404 = getelementptr inbounds %struct.Reg, %struct.Reg* %20403, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %20404 to i64*
  %20405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20406 = getelementptr inbounds %struct.GPR, %struct.GPR* %20405, i32 0, i32 1
  %20407 = getelementptr inbounds %struct.Reg, %struct.Reg* %20406, i32 0, i32 0
  %RAX.i85 = bitcast %union.anon* %20407 to i64*
  %20408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20409 = getelementptr inbounds %struct.GPR, %struct.GPR* %20408, i32 0, i32 5
  %20410 = getelementptr inbounds %struct.Reg, %struct.Reg* %20409, i32 0, i32 0
  %RCX.i86 = bitcast %union.anon* %20410 to i64*
  %20411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20412 = getelementptr inbounds %struct.GPR, %struct.GPR* %20411, i32 0, i32 15
  %20413 = getelementptr inbounds %struct.Reg, %struct.Reg* %20412, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %20413 to i64*
  %20414 = load i64, i64* %RAX.i85
  %20415 = load i64, i64* %RBP.i87
  %20416 = load i64, i64* %RCX.i86
  %20417 = mul i64 %20416, 4
  %20418 = add i64 %20415, -64
  %20419 = add i64 %20418, %20417
  %20420 = load i64, i64* %PC.i84
  %20421 = add i64 %20420, 4
  store i64 %20421, i64* %PC.i84
  %20422 = trunc i64 %20414 to i32
  %20423 = inttoptr i64 %20419 to i32*
  %20424 = load i32, i32* %20423
  %20425 = add i32 %20424, %20422
  %20426 = zext i32 %20425 to i64
  store i64 %20426, i64* %RAX.i85, align 8
  %20427 = icmp ult i32 %20425, %20422
  %20428 = icmp ult i32 %20425, %20424
  %20429 = or i1 %20427, %20428
  %20430 = zext i1 %20429 to i8
  %20431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20430, i8* %20431, align 1
  %20432 = and i32 %20425, 255
  %20433 = call i32 @llvm.ctpop.i32(i32 %20432)
  %20434 = trunc i32 %20433 to i8
  %20435 = and i8 %20434, 1
  %20436 = xor i8 %20435, 1
  %20437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20436, i8* %20437, align 1
  %20438 = xor i32 %20424, %20422
  %20439 = xor i32 %20438, %20425
  %20440 = lshr i32 %20439, 4
  %20441 = trunc i32 %20440 to i8
  %20442 = and i8 %20441, 1
  %20443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20442, i8* %20443, align 1
  %20444 = icmp eq i32 %20425, 0
  %20445 = zext i1 %20444 to i8
  %20446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20445, i8* %20446, align 1
  %20447 = lshr i32 %20425, 31
  %20448 = trunc i32 %20447 to i8
  %20449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20448, i8* %20449, align 1
  %20450 = lshr i32 %20422, 31
  %20451 = lshr i32 %20424, 31
  %20452 = xor i32 %20447, %20450
  %20453 = xor i32 %20447, %20451
  %20454 = add i32 %20452, %20453
  %20455 = icmp eq i32 %20454, 2
  %20456 = zext i1 %20455 to i8
  %20457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20456, i8* %20457, align 1
  store %struct.Memory* %loadMem_40bbc6, %struct.Memory** %MEMORY
  %loadMem_40bbca = load %struct.Memory*, %struct.Memory** %MEMORY
  %20458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20459 = getelementptr inbounds %struct.GPR, %struct.GPR* %20458, i32 0, i32 33
  %20460 = getelementptr inbounds %struct.Reg, %struct.Reg* %20459, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %20460 to i64*
  %20461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20462 = getelementptr inbounds %struct.GPR, %struct.GPR* %20461, i32 0, i32 1
  %20463 = getelementptr inbounds %struct.Reg, %struct.Reg* %20462, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %20463 to i64*
  %20464 = load i64, i64* %RAX.i83
  %20465 = load i64, i64* %PC.i82
  %20466 = add i64 %20465, 3
  store i64 %20466, i64* %PC.i82
  %20467 = trunc i64 %20464 to i32
  %20468 = add i32 32, %20467
  %20469 = zext i32 %20468 to i64
  store i64 %20469, i64* %RAX.i83, align 8
  %20470 = icmp ult i32 %20468, %20467
  %20471 = icmp ult i32 %20468, 32
  %20472 = or i1 %20470, %20471
  %20473 = zext i1 %20472 to i8
  %20474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20473, i8* %20474, align 1
  %20475 = and i32 %20468, 255
  %20476 = call i32 @llvm.ctpop.i32(i32 %20475)
  %20477 = trunc i32 %20476 to i8
  %20478 = and i8 %20477, 1
  %20479 = xor i8 %20478, 1
  %20480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20479, i8* %20480, align 1
  %20481 = xor i64 32, %20464
  %20482 = trunc i64 %20481 to i32
  %20483 = xor i32 %20482, %20468
  %20484 = lshr i32 %20483, 4
  %20485 = trunc i32 %20484 to i8
  %20486 = and i8 %20485, 1
  %20487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20486, i8* %20487, align 1
  %20488 = icmp eq i32 %20468, 0
  %20489 = zext i1 %20488 to i8
  %20490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20489, i8* %20490, align 1
  %20491 = lshr i32 %20468, 31
  %20492 = trunc i32 %20491 to i8
  %20493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20492, i8* %20493, align 1
  %20494 = lshr i32 %20467, 31
  %20495 = xor i32 %20491, %20494
  %20496 = add i32 %20495, %20491
  %20497 = icmp eq i32 %20496, 2
  %20498 = zext i1 %20497 to i8
  %20499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20498, i8* %20499, align 1
  store %struct.Memory* %loadMem_40bbca, %struct.Memory** %MEMORY
  %loadMem_40bbcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20501 = getelementptr inbounds %struct.GPR, %struct.GPR* %20500, i32 0, i32 33
  %20502 = getelementptr inbounds %struct.Reg, %struct.Reg* %20501, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %20502 to i64*
  %20503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20504 = getelementptr inbounds %struct.GPR, %struct.GPR* %20503, i32 0, i32 1
  %20505 = getelementptr inbounds %struct.Reg, %struct.Reg* %20504, i32 0, i32 0
  %RAX.i81 = bitcast %union.anon* %20505 to i64*
  %20506 = load i64, i64* %RAX.i81
  %20507 = load i64, i64* %PC.i80
  %20508 = add i64 %20507, 3
  store i64 %20508, i64* %PC.i80
  %20509 = shl i64 %20506, 32
  %20510 = ashr exact i64 %20509, 32
  %20511 = ashr i64 %20510, 5
  %20512 = lshr i64 %20511, 1
  %20513 = trunc i64 %20511 to i8
  %20514 = and i8 %20513, 1
  %20515 = trunc i64 %20512 to i32
  %20516 = and i64 %20512, 4294967295
  store i64 %20516, i64* %RAX.i81, align 8
  %20517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20514, i8* %20517, align 1
  %20518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20519 = and i32 %20515, 255
  %20520 = call i32 @llvm.ctpop.i32(i32 %20519)
  %20521 = trunc i32 %20520 to i8
  %20522 = and i8 %20521, 1
  %20523 = xor i8 %20522, 1
  store i8 %20523, i8* %20518, align 1
  %20524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20524, align 1
  %20525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20526 = icmp eq i32 %20515, 0
  %20527 = zext i1 %20526 to i8
  store i8 %20527, i8* %20525, align 1
  %20528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20529 = lshr i32 %20515, 31
  %20530 = trunc i32 %20529 to i8
  store i8 %20530, i8* %20528, align 1
  %20531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20531, align 1
  store %struct.Memory* %loadMem_40bbcd, %struct.Memory** %MEMORY
  %loadMem_40bbd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20533 = getelementptr inbounds %struct.GPR, %struct.GPR* %20532, i32 0, i32 33
  %20534 = getelementptr inbounds %struct.Reg, %struct.Reg* %20533, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %20534 to i64*
  %20535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20536 = getelementptr inbounds %struct.GPR, %struct.GPR* %20535, i32 0, i32 5
  %20537 = getelementptr inbounds %struct.Reg, %struct.Reg* %20536, i32 0, i32 0
  %RCX.i79 = bitcast %union.anon* %20537 to i64*
  %20538 = load i64, i64* %PC.i78
  %20539 = add i64 %20538, 8
  store i64 %20539, i64* %PC.i78
  %20540 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20540, i64* %RCX.i79, align 8
  store %struct.Memory* %loadMem_40bbd0, %struct.Memory** %MEMORY
  %loadMem_40bbd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20542 = getelementptr inbounds %struct.GPR, %struct.GPR* %20541, i32 0, i32 33
  %20543 = getelementptr inbounds %struct.Reg, %struct.Reg* %20542, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %20543 to i64*
  %20544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20545 = getelementptr inbounds %struct.GPR, %struct.GPR* %20544, i32 0, i32 5
  %20546 = getelementptr inbounds %struct.Reg, %struct.Reg* %20545, i32 0, i32 0
  %RCX.i77 = bitcast %union.anon* %20546 to i64*
  %20547 = load i64, i64* %RCX.i77
  %20548 = load i64, i64* %PC.i76
  %20549 = add i64 %20548, 7
  store i64 %20549, i64* %PC.i76
  %20550 = add i64 13112, %20547
  store i64 %20550, i64* %RCX.i77, align 8
  %20551 = icmp ult i64 %20550, %20547
  %20552 = icmp ult i64 %20550, 13112
  %20553 = or i1 %20551, %20552
  %20554 = zext i1 %20553 to i8
  %20555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20554, i8* %20555, align 1
  %20556 = trunc i64 %20550 to i32
  %20557 = and i32 %20556, 255
  %20558 = call i32 @llvm.ctpop.i32(i32 %20557)
  %20559 = trunc i32 %20558 to i8
  %20560 = and i8 %20559, 1
  %20561 = xor i8 %20560, 1
  %20562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20561, i8* %20562, align 1
  %20563 = xor i64 13112, %20547
  %20564 = xor i64 %20563, %20550
  %20565 = lshr i64 %20564, 4
  %20566 = trunc i64 %20565 to i8
  %20567 = and i8 %20566, 1
  %20568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20567, i8* %20568, align 1
  %20569 = icmp eq i64 %20550, 0
  %20570 = zext i1 %20569 to i8
  %20571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20570, i8* %20571, align 1
  %20572 = lshr i64 %20550, 63
  %20573 = trunc i64 %20572 to i8
  %20574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20573, i8* %20574, align 1
  %20575 = lshr i64 %20547, 63
  %20576 = xor i64 %20572, %20575
  %20577 = add i64 %20576, %20572
  %20578 = icmp eq i64 %20577, 2
  %20579 = zext i1 %20578 to i8
  %20580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20579, i8* %20580, align 1
  store %struct.Memory* %loadMem_40bbd8, %struct.Memory** %MEMORY
  %loadMem_40bbdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %20581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20582 = getelementptr inbounds %struct.GPR, %struct.GPR* %20581, i32 0, i32 33
  %20583 = getelementptr inbounds %struct.Reg, %struct.Reg* %20582, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %20583 to i64*
  %20584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20585 = getelementptr inbounds %struct.GPR, %struct.GPR* %20584, i32 0, i32 7
  %20586 = getelementptr inbounds %struct.Reg, %struct.Reg* %20585, i32 0, i32 0
  %RDX.i74 = bitcast %union.anon* %20586 to i64*
  %20587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20588 = getelementptr inbounds %struct.GPR, %struct.GPR* %20587, i32 0, i32 15
  %20589 = getelementptr inbounds %struct.Reg, %struct.Reg* %20588, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %20589 to i64*
  %20590 = load i64, i64* %RBP.i75
  %20591 = sub i64 %20590, 16
  %20592 = load i64, i64* %PC.i73
  %20593 = add i64 %20592, 4
  store i64 %20593, i64* %PC.i73
  %20594 = inttoptr i64 %20591 to i32*
  %20595 = load i32, i32* %20594
  %20596 = sext i32 %20595 to i64
  store i64 %20596, i64* %RDX.i74, align 8
  store %struct.Memory* %loadMem_40bbdf, %struct.Memory** %MEMORY
  %loadMem_40bbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20598 = getelementptr inbounds %struct.GPR, %struct.GPR* %20597, i32 0, i32 33
  %20599 = getelementptr inbounds %struct.Reg, %struct.Reg* %20598, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %20599 to i64*
  %20600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20601 = getelementptr inbounds %struct.GPR, %struct.GPR* %20600, i32 0, i32 7
  %20602 = getelementptr inbounds %struct.Reg, %struct.Reg* %20601, i32 0, i32 0
  %RDX.i72 = bitcast %union.anon* %20602 to i64*
  %20603 = load i64, i64* %RDX.i72
  %20604 = load i64, i64* %PC.i71
  %20605 = add i64 %20604, 4
  store i64 %20605, i64* %PC.i71
  %20606 = shl i64 %20603, 5
  %20607 = icmp slt i64 %20606, 0
  %20608 = shl i64 %20606, 1
  store i64 %20608, i64* %RDX.i72, align 8
  %20609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20610 = zext i1 %20607 to i8
  store i8 %20610, i8* %20609, align 1
  %20611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20612 = trunc i64 %20608 to i32
  %20613 = and i32 %20612, 254
  %20614 = call i32 @llvm.ctpop.i32(i32 %20613)
  %20615 = trunc i32 %20614 to i8
  %20616 = and i8 %20615, 1
  %20617 = xor i8 %20616, 1
  store i8 %20617, i8* %20611, align 1
  %20618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20618, align 1
  %20619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20620 = icmp eq i64 %20608, 0
  %20621 = zext i1 %20620 to i8
  store i8 %20621, i8* %20619, align 1
  %20622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20623 = lshr i64 %20608, 63
  %20624 = trunc i64 %20623 to i8
  store i8 %20624, i8* %20622, align 1
  %20625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20625, align 1
  store %struct.Memory* %loadMem_40bbe3, %struct.Memory** %MEMORY
  %loadMem_40bbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20627 = getelementptr inbounds %struct.GPR, %struct.GPR* %20626, i32 0, i32 33
  %20628 = getelementptr inbounds %struct.Reg, %struct.Reg* %20627, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %20628 to i64*
  %20629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20630 = getelementptr inbounds %struct.GPR, %struct.GPR* %20629, i32 0, i32 5
  %20631 = getelementptr inbounds %struct.Reg, %struct.Reg* %20630, i32 0, i32 0
  %RCX.i69 = bitcast %union.anon* %20631 to i64*
  %20632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20633 = getelementptr inbounds %struct.GPR, %struct.GPR* %20632, i32 0, i32 7
  %20634 = getelementptr inbounds %struct.Reg, %struct.Reg* %20633, i32 0, i32 0
  %RDX.i70 = bitcast %union.anon* %20634 to i64*
  %20635 = load i64, i64* %RCX.i69
  %20636 = load i64, i64* %RDX.i70
  %20637 = load i64, i64* %PC.i68
  %20638 = add i64 %20637, 3
  store i64 %20638, i64* %PC.i68
  %20639 = add i64 %20636, %20635
  store i64 %20639, i64* %RCX.i69, align 8
  %20640 = icmp ult i64 %20639, %20635
  %20641 = icmp ult i64 %20639, %20636
  %20642 = or i1 %20640, %20641
  %20643 = zext i1 %20642 to i8
  %20644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20643, i8* %20644, align 1
  %20645 = trunc i64 %20639 to i32
  %20646 = and i32 %20645, 255
  %20647 = call i32 @llvm.ctpop.i32(i32 %20646)
  %20648 = trunc i32 %20647 to i8
  %20649 = and i8 %20648, 1
  %20650 = xor i8 %20649, 1
  %20651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20650, i8* %20651, align 1
  %20652 = xor i64 %20636, %20635
  %20653 = xor i64 %20652, %20639
  %20654 = lshr i64 %20653, 4
  %20655 = trunc i64 %20654 to i8
  %20656 = and i8 %20655, 1
  %20657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20656, i8* %20657, align 1
  %20658 = icmp eq i64 %20639, 0
  %20659 = zext i1 %20658 to i8
  %20660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20659, i8* %20660, align 1
  %20661 = lshr i64 %20639, 63
  %20662 = trunc i64 %20661 to i8
  %20663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20662, i8* %20663, align 1
  %20664 = lshr i64 %20635, 63
  %20665 = lshr i64 %20636, 63
  %20666 = xor i64 %20661, %20664
  %20667 = xor i64 %20661, %20665
  %20668 = add i64 %20666, %20667
  %20669 = icmp eq i64 %20668, 2
  %20670 = zext i1 %20669 to i8
  %20671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20670, i8* %20671, align 1
  store %struct.Memory* %loadMem_40bbe7, %struct.Memory** %MEMORY
  %loadMem_40bbea = load %struct.Memory*, %struct.Memory** %MEMORY
  %20672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20673 = getelementptr inbounds %struct.GPR, %struct.GPR* %20672, i32 0, i32 33
  %20674 = getelementptr inbounds %struct.Reg, %struct.Reg* %20673, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %20674 to i64*
  %20675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20676 = getelementptr inbounds %struct.GPR, %struct.GPR* %20675, i32 0, i32 7
  %20677 = getelementptr inbounds %struct.Reg, %struct.Reg* %20676, i32 0, i32 0
  %RDX.i66 = bitcast %union.anon* %20677 to i64*
  %20678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20679 = getelementptr inbounds %struct.GPR, %struct.GPR* %20678, i32 0, i32 15
  %20680 = getelementptr inbounds %struct.Reg, %struct.Reg* %20679, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %20680 to i64*
  %20681 = load i64, i64* %RBP.i67
  %20682 = sub i64 %20681, 20
  %20683 = load i64, i64* %PC.i65
  %20684 = add i64 %20683, 4
  store i64 %20684, i64* %PC.i65
  %20685 = inttoptr i64 %20682 to i32*
  %20686 = load i32, i32* %20685
  %20687 = sext i32 %20686 to i64
  store i64 %20687, i64* %RDX.i66, align 8
  store %struct.Memory* %loadMem_40bbea, %struct.Memory** %MEMORY
  %loadMem_40bbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %20688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20689 = getelementptr inbounds %struct.GPR, %struct.GPR* %20688, i32 0, i32 33
  %20690 = getelementptr inbounds %struct.Reg, %struct.Reg* %20689, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %20690 to i64*
  %20691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20692 = getelementptr inbounds %struct.GPR, %struct.GPR* %20691, i32 0, i32 1
  %20693 = getelementptr inbounds %struct.Reg, %struct.Reg* %20692, i32 0, i32 0
  %EAX.i62 = bitcast %union.anon* %20693 to i32*
  %20694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20695 = getelementptr inbounds %struct.GPR, %struct.GPR* %20694, i32 0, i32 5
  %20696 = getelementptr inbounds %struct.Reg, %struct.Reg* %20695, i32 0, i32 0
  %RCX.i63 = bitcast %union.anon* %20696 to i64*
  %20697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20698 = getelementptr inbounds %struct.GPR, %struct.GPR* %20697, i32 0, i32 7
  %20699 = getelementptr inbounds %struct.Reg, %struct.Reg* %20698, i32 0, i32 0
  %RDX.i64 = bitcast %union.anon* %20699 to i64*
  %20700 = load i64, i64* %RCX.i63
  %20701 = load i64, i64* %RDX.i64
  %20702 = mul i64 %20701, 4
  %20703 = add i64 %20702, %20700
  %20704 = load i32, i32* %EAX.i62
  %20705 = zext i32 %20704 to i64
  %20706 = load i64, i64* %PC.i61
  %20707 = add i64 %20706, 3
  store i64 %20707, i64* %PC.i61
  %20708 = inttoptr i64 %20703 to i32*
  store i32 %20704, i32* %20708
  store %struct.Memory* %loadMem_40bbee, %struct.Memory** %MEMORY
  %loadMem_40bbf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20710 = getelementptr inbounds %struct.GPR, %struct.GPR* %20709, i32 0, i32 33
  %20711 = getelementptr inbounds %struct.Reg, %struct.Reg* %20710, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %20711 to i64*
  %20712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20713 = getelementptr inbounds %struct.GPR, %struct.GPR* %20712, i32 0, i32 5
  %20714 = getelementptr inbounds %struct.Reg, %struct.Reg* %20713, i32 0, i32 0
  %RCX.i59 = bitcast %union.anon* %20714 to i64*
  %20715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20716 = getelementptr inbounds %struct.GPR, %struct.GPR* %20715, i32 0, i32 15
  %20717 = getelementptr inbounds %struct.Reg, %struct.Reg* %20716, i32 0, i32 0
  %RBP.i60 = bitcast %union.anon* %20717 to i64*
  %20718 = load i64, i64* %RBP.i60
  %20719 = sub i64 %20718, 20
  %20720 = load i64, i64* %PC.i58
  %20721 = add i64 %20720, 4
  store i64 %20721, i64* %PC.i58
  %20722 = inttoptr i64 %20719 to i32*
  %20723 = load i32, i32* %20722
  %20724 = sext i32 %20723 to i64
  store i64 %20724, i64* %RCX.i59, align 8
  store %struct.Memory* %loadMem_40bbf1, %struct.Memory** %MEMORY
  %loadMem_40bbf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20726 = getelementptr inbounds %struct.GPR, %struct.GPR* %20725, i32 0, i32 33
  %20727 = getelementptr inbounds %struct.Reg, %struct.Reg* %20726, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %20727 to i64*
  %20728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20729 = getelementptr inbounds %struct.GPR, %struct.GPR* %20728, i32 0, i32 1
  %20730 = getelementptr inbounds %struct.Reg, %struct.Reg* %20729, i32 0, i32 0
  %RAX.i55 = bitcast %union.anon* %20730 to i64*
  %20731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20732 = getelementptr inbounds %struct.GPR, %struct.GPR* %20731, i32 0, i32 5
  %20733 = getelementptr inbounds %struct.Reg, %struct.Reg* %20732, i32 0, i32 0
  %RCX.i56 = bitcast %union.anon* %20733 to i64*
  %20734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20735 = getelementptr inbounds %struct.GPR, %struct.GPR* %20734, i32 0, i32 15
  %20736 = getelementptr inbounds %struct.Reg, %struct.Reg* %20735, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %20736 to i64*
  %20737 = load i64, i64* %RBP.i57
  %20738 = load i64, i64* %RCX.i56
  %20739 = mul i64 %20738, 4
  %20740 = add i64 %20737, -64
  %20741 = add i64 %20740, %20739
  %20742 = load i64, i64* %PC.i54
  %20743 = add i64 %20742, 4
  store i64 %20743, i64* %PC.i54
  %20744 = inttoptr i64 %20741 to i32*
  %20745 = load i32, i32* %20744
  %20746 = zext i32 %20745 to i64
  store i64 %20746, i64* %RAX.i55, align 8
  store %struct.Memory* %loadMem_40bbf5, %struct.Memory** %MEMORY
  %loadMem_40bbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20748 = getelementptr inbounds %struct.GPR, %struct.GPR* %20747, i32 0, i32 33
  %20749 = getelementptr inbounds %struct.Reg, %struct.Reg* %20748, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %20749 to i64*
  %20750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20751 = getelementptr inbounds %struct.GPR, %struct.GPR* %20750, i32 0, i32 5
  %20752 = getelementptr inbounds %struct.Reg, %struct.Reg* %20751, i32 0, i32 0
  %RCX.i52 = bitcast %union.anon* %20752 to i64*
  %20753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20754 = getelementptr inbounds %struct.GPR, %struct.GPR* %20753, i32 0, i32 15
  %20755 = getelementptr inbounds %struct.Reg, %struct.Reg* %20754, i32 0, i32 0
  %RBP.i53 = bitcast %union.anon* %20755 to i64*
  %20756 = load i64, i64* %RBP.i53
  %20757 = sub i64 %20756, 28
  %20758 = load i64, i64* %PC.i51
  %20759 = add i64 %20758, 4
  store i64 %20759, i64* %PC.i51
  %20760 = inttoptr i64 %20757 to i32*
  %20761 = load i32, i32* %20760
  %20762 = sext i32 %20761 to i64
  store i64 %20762, i64* %RCX.i52, align 8
  store %struct.Memory* %loadMem_40bbf9, %struct.Memory** %MEMORY
  %loadMem_40bbfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %20763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20764 = getelementptr inbounds %struct.GPR, %struct.GPR* %20763, i32 0, i32 33
  %20765 = getelementptr inbounds %struct.Reg, %struct.Reg* %20764, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %20765 to i64*
  %20766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20767 = getelementptr inbounds %struct.GPR, %struct.GPR* %20766, i32 0, i32 1
  %20768 = getelementptr inbounds %struct.Reg, %struct.Reg* %20767, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %20768 to i64*
  %20769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20770 = getelementptr inbounds %struct.GPR, %struct.GPR* %20769, i32 0, i32 5
  %20771 = getelementptr inbounds %struct.Reg, %struct.Reg* %20770, i32 0, i32 0
  %RCX.i49 = bitcast %union.anon* %20771 to i64*
  %20772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20773 = getelementptr inbounds %struct.GPR, %struct.GPR* %20772, i32 0, i32 15
  %20774 = getelementptr inbounds %struct.Reg, %struct.Reg* %20773, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %20774 to i64*
  %20775 = load i64, i64* %RAX.i48
  %20776 = load i64, i64* %RBP.i50
  %20777 = load i64, i64* %RCX.i49
  %20778 = mul i64 %20777, 4
  %20779 = add i64 %20776, -64
  %20780 = add i64 %20779, %20778
  %20781 = load i64, i64* %PC.i47
  %20782 = add i64 %20781, 4
  store i64 %20782, i64* %PC.i47
  %20783 = trunc i64 %20775 to i32
  %20784 = inttoptr i64 %20780 to i32*
  %20785 = load i32, i32* %20784
  %20786 = sub i32 %20783, %20785
  %20787 = zext i32 %20786 to i64
  store i64 %20787, i64* %RAX.i48, align 8
  %20788 = icmp ult i32 %20783, %20785
  %20789 = zext i1 %20788 to i8
  %20790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20789, i8* %20790, align 1
  %20791 = and i32 %20786, 255
  %20792 = call i32 @llvm.ctpop.i32(i32 %20791)
  %20793 = trunc i32 %20792 to i8
  %20794 = and i8 %20793, 1
  %20795 = xor i8 %20794, 1
  %20796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20795, i8* %20796, align 1
  %20797 = xor i32 %20785, %20783
  %20798 = xor i32 %20797, %20786
  %20799 = lshr i32 %20798, 4
  %20800 = trunc i32 %20799 to i8
  %20801 = and i8 %20800, 1
  %20802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20801, i8* %20802, align 1
  %20803 = icmp eq i32 %20786, 0
  %20804 = zext i1 %20803 to i8
  %20805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20804, i8* %20805, align 1
  %20806 = lshr i32 %20786, 31
  %20807 = trunc i32 %20806 to i8
  %20808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20807, i8* %20808, align 1
  %20809 = lshr i32 %20783, 31
  %20810 = lshr i32 %20785, 31
  %20811 = xor i32 %20810, %20809
  %20812 = xor i32 %20806, %20809
  %20813 = add i32 %20812, %20811
  %20814 = icmp eq i32 %20813, 2
  %20815 = zext i1 %20814 to i8
  %20816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20815, i8* %20816, align 1
  store %struct.Memory* %loadMem_40bbfd, %struct.Memory** %MEMORY
  %loadMem_40bc01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20818 = getelementptr inbounds %struct.GPR, %struct.GPR* %20817, i32 0, i32 33
  %20819 = getelementptr inbounds %struct.Reg, %struct.Reg* %20818, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %20819 to i64*
  %20820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20821 = getelementptr inbounds %struct.GPR, %struct.GPR* %20820, i32 0, i32 1
  %20822 = getelementptr inbounds %struct.Reg, %struct.Reg* %20821, i32 0, i32 0
  %RAX.i46 = bitcast %union.anon* %20822 to i64*
  %20823 = load i64, i64* %RAX.i46
  %20824 = load i64, i64* %PC.i45
  %20825 = add i64 %20824, 3
  store i64 %20825, i64* %PC.i45
  %20826 = trunc i64 %20823 to i32
  %20827 = add i32 32, %20826
  %20828 = zext i32 %20827 to i64
  store i64 %20828, i64* %RAX.i46, align 8
  %20829 = icmp ult i32 %20827, %20826
  %20830 = icmp ult i32 %20827, 32
  %20831 = or i1 %20829, %20830
  %20832 = zext i1 %20831 to i8
  %20833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20832, i8* %20833, align 1
  %20834 = and i32 %20827, 255
  %20835 = call i32 @llvm.ctpop.i32(i32 %20834)
  %20836 = trunc i32 %20835 to i8
  %20837 = and i8 %20836, 1
  %20838 = xor i8 %20837, 1
  %20839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20838, i8* %20839, align 1
  %20840 = xor i64 32, %20823
  %20841 = trunc i64 %20840 to i32
  %20842 = xor i32 %20841, %20827
  %20843 = lshr i32 %20842, 4
  %20844 = trunc i32 %20843 to i8
  %20845 = and i8 %20844, 1
  %20846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20845, i8* %20846, align 1
  %20847 = icmp eq i32 %20827, 0
  %20848 = zext i1 %20847 to i8
  %20849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20848, i8* %20849, align 1
  %20850 = lshr i32 %20827, 31
  %20851 = trunc i32 %20850 to i8
  %20852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20851, i8* %20852, align 1
  %20853 = lshr i32 %20826, 31
  %20854 = xor i32 %20850, %20853
  %20855 = add i32 %20854, %20850
  %20856 = icmp eq i32 %20855, 2
  %20857 = zext i1 %20856 to i8
  %20858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20857, i8* %20858, align 1
  store %struct.Memory* %loadMem_40bc01, %struct.Memory** %MEMORY
  %loadMem_40bc04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20860 = getelementptr inbounds %struct.GPR, %struct.GPR* %20859, i32 0, i32 33
  %20861 = getelementptr inbounds %struct.Reg, %struct.Reg* %20860, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %20861 to i64*
  %20862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20863 = getelementptr inbounds %struct.GPR, %struct.GPR* %20862, i32 0, i32 1
  %20864 = getelementptr inbounds %struct.Reg, %struct.Reg* %20863, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %20864 to i64*
  %20865 = load i64, i64* %RAX.i44
  %20866 = load i64, i64* %PC.i43
  %20867 = add i64 %20866, 3
  store i64 %20867, i64* %PC.i43
  %20868 = shl i64 %20865, 32
  %20869 = ashr exact i64 %20868, 32
  %20870 = ashr i64 %20869, 5
  %20871 = lshr i64 %20870, 1
  %20872 = trunc i64 %20870 to i8
  %20873 = and i8 %20872, 1
  %20874 = trunc i64 %20871 to i32
  %20875 = and i64 %20871, 4294967295
  store i64 %20875, i64* %RAX.i44, align 8
  %20876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20873, i8* %20876, align 1
  %20877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20878 = and i32 %20874, 255
  %20879 = call i32 @llvm.ctpop.i32(i32 %20878)
  %20880 = trunc i32 %20879 to i8
  %20881 = and i8 %20880, 1
  %20882 = xor i8 %20881, 1
  store i8 %20882, i8* %20877, align 1
  %20883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20883, align 1
  %20884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20885 = icmp eq i32 %20874, 0
  %20886 = zext i1 %20885 to i8
  store i8 %20886, i8* %20884, align 1
  %20887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20888 = lshr i32 %20874, 31
  %20889 = trunc i32 %20888 to i8
  store i8 %20889, i8* %20887, align 1
  %20890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20890, align 1
  store %struct.Memory* %loadMem_40bc04, %struct.Memory** %MEMORY
  %loadMem_40bc07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20892 = getelementptr inbounds %struct.GPR, %struct.GPR* %20891, i32 0, i32 33
  %20893 = getelementptr inbounds %struct.Reg, %struct.Reg* %20892, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %20893 to i64*
  %20894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20895 = getelementptr inbounds %struct.GPR, %struct.GPR* %20894, i32 0, i32 5
  %20896 = getelementptr inbounds %struct.Reg, %struct.Reg* %20895, i32 0, i32 0
  %RCX.i42 = bitcast %union.anon* %20896 to i64*
  %20897 = load i64, i64* %PC.i41
  %20898 = add i64 %20897, 8
  store i64 %20898, i64* %PC.i41
  %20899 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %20899, i64* %RCX.i42, align 8
  store %struct.Memory* %loadMem_40bc07, %struct.Memory** %MEMORY
  %loadMem_40bc0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %20900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20901 = getelementptr inbounds %struct.GPR, %struct.GPR* %20900, i32 0, i32 33
  %20902 = getelementptr inbounds %struct.Reg, %struct.Reg* %20901, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %20902 to i64*
  %20903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20904 = getelementptr inbounds %struct.GPR, %struct.GPR* %20903, i32 0, i32 5
  %20905 = getelementptr inbounds %struct.Reg, %struct.Reg* %20904, i32 0, i32 0
  %RCX.i40 = bitcast %union.anon* %20905 to i64*
  %20906 = load i64, i64* %RCX.i40
  %20907 = load i64, i64* %PC.i39
  %20908 = add i64 %20907, 7
  store i64 %20908, i64* %PC.i39
  %20909 = add i64 13112, %20906
  store i64 %20909, i64* %RCX.i40, align 8
  %20910 = icmp ult i64 %20909, %20906
  %20911 = icmp ult i64 %20909, 13112
  %20912 = or i1 %20910, %20911
  %20913 = zext i1 %20912 to i8
  %20914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20913, i8* %20914, align 1
  %20915 = trunc i64 %20909 to i32
  %20916 = and i32 %20915, 255
  %20917 = call i32 @llvm.ctpop.i32(i32 %20916)
  %20918 = trunc i32 %20917 to i8
  %20919 = and i8 %20918, 1
  %20920 = xor i8 %20919, 1
  %20921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20920, i8* %20921, align 1
  %20922 = xor i64 13112, %20906
  %20923 = xor i64 %20922, %20909
  %20924 = lshr i64 %20923, 4
  %20925 = trunc i64 %20924 to i8
  %20926 = and i8 %20925, 1
  %20927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20926, i8* %20927, align 1
  %20928 = icmp eq i64 %20909, 0
  %20929 = zext i1 %20928 to i8
  %20930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %20929, i8* %20930, align 1
  %20931 = lshr i64 %20909, 63
  %20932 = trunc i64 %20931 to i8
  %20933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20932, i8* %20933, align 1
  %20934 = lshr i64 %20906, 63
  %20935 = xor i64 %20931, %20934
  %20936 = add i64 %20935, %20931
  %20937 = icmp eq i64 %20936, 2
  %20938 = zext i1 %20937 to i8
  %20939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20938, i8* %20939, align 1
  store %struct.Memory* %loadMem_40bc0f, %struct.Memory** %MEMORY
  %loadMem_40bc16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %20940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20941 = getelementptr inbounds %struct.GPR, %struct.GPR* %20940, i32 0, i32 33
  %20942 = getelementptr inbounds %struct.Reg, %struct.Reg* %20941, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %20942 to i64*
  %20943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20944 = getelementptr inbounds %struct.GPR, %struct.GPR* %20943, i32 0, i32 7
  %20945 = getelementptr inbounds %struct.Reg, %struct.Reg* %20944, i32 0, i32 0
  %RDX.i37 = bitcast %union.anon* %20945 to i64*
  %20946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20947 = getelementptr inbounds %struct.GPR, %struct.GPR* %20946, i32 0, i32 15
  %20948 = getelementptr inbounds %struct.Reg, %struct.Reg* %20947, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %20948 to i64*
  %20949 = load i64, i64* %RBP.i38
  %20950 = sub i64 %20949, 16
  %20951 = load i64, i64* %PC.i36
  %20952 = add i64 %20951, 4
  store i64 %20952, i64* %PC.i36
  %20953 = inttoptr i64 %20950 to i32*
  %20954 = load i32, i32* %20953
  %20955 = sext i32 %20954 to i64
  store i64 %20955, i64* %RDX.i37, align 8
  store %struct.Memory* %loadMem_40bc16, %struct.Memory** %MEMORY
  %loadMem_40bc1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %20956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20957 = getelementptr inbounds %struct.GPR, %struct.GPR* %20956, i32 0, i32 33
  %20958 = getelementptr inbounds %struct.Reg, %struct.Reg* %20957, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %20958 to i64*
  %20959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20960 = getelementptr inbounds %struct.GPR, %struct.GPR* %20959, i32 0, i32 7
  %20961 = getelementptr inbounds %struct.Reg, %struct.Reg* %20960, i32 0, i32 0
  %RDX.i35 = bitcast %union.anon* %20961 to i64*
  %20962 = load i64, i64* %RDX.i35
  %20963 = load i64, i64* %PC.i34
  %20964 = add i64 %20963, 4
  store i64 %20964, i64* %PC.i34
  %20965 = shl i64 %20962, 5
  %20966 = icmp slt i64 %20965, 0
  %20967 = shl i64 %20965, 1
  store i64 %20967, i64* %RDX.i35, align 8
  %20968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %20969 = zext i1 %20966 to i8
  store i8 %20969, i8* %20968, align 1
  %20970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20971 = trunc i64 %20967 to i32
  %20972 = and i32 %20971, 254
  %20973 = call i32 @llvm.ctpop.i32(i32 %20972)
  %20974 = trunc i32 %20973 to i8
  %20975 = and i8 %20974, 1
  %20976 = xor i8 %20975, 1
  store i8 %20976, i8* %20970, align 1
  %20977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20977, align 1
  %20978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20979 = icmp eq i64 %20967, 0
  %20980 = zext i1 %20979 to i8
  store i8 %20980, i8* %20978, align 1
  %20981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %20982 = lshr i64 %20967, 63
  %20983 = trunc i64 %20982 to i8
  store i8 %20983, i8* %20981, align 1
  %20984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20984, align 1
  store %struct.Memory* %loadMem_40bc1a, %struct.Memory** %MEMORY
  %loadMem_40bc1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %20985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20986 = getelementptr inbounds %struct.GPR, %struct.GPR* %20985, i32 0, i32 33
  %20987 = getelementptr inbounds %struct.Reg, %struct.Reg* %20986, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %20987 to i64*
  %20988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20989 = getelementptr inbounds %struct.GPR, %struct.GPR* %20988, i32 0, i32 5
  %20990 = getelementptr inbounds %struct.Reg, %struct.Reg* %20989, i32 0, i32 0
  %RCX.i32 = bitcast %union.anon* %20990 to i64*
  %20991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20992 = getelementptr inbounds %struct.GPR, %struct.GPR* %20991, i32 0, i32 7
  %20993 = getelementptr inbounds %struct.Reg, %struct.Reg* %20992, i32 0, i32 0
  %RDX.i33 = bitcast %union.anon* %20993 to i64*
  %20994 = load i64, i64* %RCX.i32
  %20995 = load i64, i64* %RDX.i33
  %20996 = load i64, i64* %PC.i31
  %20997 = add i64 %20996, 3
  store i64 %20997, i64* %PC.i31
  %20998 = add i64 %20995, %20994
  store i64 %20998, i64* %RCX.i32, align 8
  %20999 = icmp ult i64 %20998, %20994
  %21000 = icmp ult i64 %20998, %20995
  %21001 = or i1 %20999, %21000
  %21002 = zext i1 %21001 to i8
  %21003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21002, i8* %21003, align 1
  %21004 = trunc i64 %20998 to i32
  %21005 = and i32 %21004, 255
  %21006 = call i32 @llvm.ctpop.i32(i32 %21005)
  %21007 = trunc i32 %21006 to i8
  %21008 = and i8 %21007, 1
  %21009 = xor i8 %21008, 1
  %21010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21009, i8* %21010, align 1
  %21011 = xor i64 %20995, %20994
  %21012 = xor i64 %21011, %20998
  %21013 = lshr i64 %21012, 4
  %21014 = trunc i64 %21013 to i8
  %21015 = and i8 %21014, 1
  %21016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21015, i8* %21016, align 1
  %21017 = icmp eq i64 %20998, 0
  %21018 = zext i1 %21017 to i8
  %21019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21018, i8* %21019, align 1
  %21020 = lshr i64 %20998, 63
  %21021 = trunc i64 %21020 to i8
  %21022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21021, i8* %21022, align 1
  %21023 = lshr i64 %20994, 63
  %21024 = lshr i64 %20995, 63
  %21025 = xor i64 %21020, %21023
  %21026 = xor i64 %21020, %21024
  %21027 = add i64 %21025, %21026
  %21028 = icmp eq i64 %21027, 2
  %21029 = zext i1 %21028 to i8
  %21030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21029, i8* %21030, align 1
  store %struct.Memory* %loadMem_40bc1e, %struct.Memory** %MEMORY
  %loadMem_40bc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21032 = getelementptr inbounds %struct.GPR, %struct.GPR* %21031, i32 0, i32 33
  %21033 = getelementptr inbounds %struct.Reg, %struct.Reg* %21032, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %21033 to i64*
  %21034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21035 = getelementptr inbounds %struct.GPR, %struct.GPR* %21034, i32 0, i32 7
  %21036 = getelementptr inbounds %struct.Reg, %struct.Reg* %21035, i32 0, i32 0
  %RDX.i29 = bitcast %union.anon* %21036 to i64*
  %21037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21038 = getelementptr inbounds %struct.GPR, %struct.GPR* %21037, i32 0, i32 15
  %21039 = getelementptr inbounds %struct.Reg, %struct.Reg* %21038, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %21039 to i64*
  %21040 = load i64, i64* %RBP.i30
  %21041 = sub i64 %21040, 28
  %21042 = load i64, i64* %PC.i28
  %21043 = add i64 %21042, 4
  store i64 %21043, i64* %PC.i28
  %21044 = inttoptr i64 %21041 to i32*
  %21045 = load i32, i32* %21044
  %21046 = sext i32 %21045 to i64
  store i64 %21046, i64* %RDX.i29, align 8
  store %struct.Memory* %loadMem_40bc21, %struct.Memory** %MEMORY
  %loadMem_40bc25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21048 = getelementptr inbounds %struct.GPR, %struct.GPR* %21047, i32 0, i32 33
  %21049 = getelementptr inbounds %struct.Reg, %struct.Reg* %21048, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %21049 to i64*
  %21050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21051 = getelementptr inbounds %struct.GPR, %struct.GPR* %21050, i32 0, i32 1
  %21052 = getelementptr inbounds %struct.Reg, %struct.Reg* %21051, i32 0, i32 0
  %EAX.i27 = bitcast %union.anon* %21052 to i32*
  %21053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21054 = getelementptr inbounds %struct.GPR, %struct.GPR* %21053, i32 0, i32 5
  %21055 = getelementptr inbounds %struct.Reg, %struct.Reg* %21054, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %21055 to i64*
  %21056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21057 = getelementptr inbounds %struct.GPR, %struct.GPR* %21056, i32 0, i32 7
  %21058 = getelementptr inbounds %struct.Reg, %struct.Reg* %21057, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %21058 to i64*
  %21059 = load i64, i64* %RCX.i
  %21060 = load i64, i64* %RDX.i
  %21061 = mul i64 %21060, 4
  %21062 = add i64 %21061, %21059
  %21063 = load i32, i32* %EAX.i27
  %21064 = zext i32 %21063 to i64
  %21065 = load i64, i64* %PC.i26
  %21066 = add i64 %21065, 3
  store i64 %21066, i64* %PC.i26
  %21067 = inttoptr i64 %21062 to i32*
  store i32 %21063, i32* %21067
  store %struct.Memory* %loadMem_40bc25, %struct.Memory** %MEMORY
  %loadMem_40bc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21069 = getelementptr inbounds %struct.GPR, %struct.GPR* %21068, i32 0, i32 33
  %21070 = getelementptr inbounds %struct.Reg, %struct.Reg* %21069, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %21070 to i64*
  %21071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21072 = getelementptr inbounds %struct.GPR, %struct.GPR* %21071, i32 0, i32 1
  %21073 = getelementptr inbounds %struct.Reg, %struct.Reg* %21072, i32 0, i32 0
  %RAX.i24 = bitcast %union.anon* %21073 to i64*
  %21074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21075 = getelementptr inbounds %struct.GPR, %struct.GPR* %21074, i32 0, i32 15
  %21076 = getelementptr inbounds %struct.Reg, %struct.Reg* %21075, i32 0, i32 0
  %RBP.i25 = bitcast %union.anon* %21076 to i64*
  %21077 = load i64, i64* %RBP.i25
  %21078 = sub i64 %21077, 20
  %21079 = load i64, i64* %PC.i23
  %21080 = add i64 %21079, 3
  store i64 %21080, i64* %PC.i23
  %21081 = inttoptr i64 %21078 to i32*
  %21082 = load i32, i32* %21081
  %21083 = zext i32 %21082 to i64
  store i64 %21083, i64* %RAX.i24, align 8
  store %struct.Memory* %loadMem_40bc28, %struct.Memory** %MEMORY
  %loadMem_40bc2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21085 = getelementptr inbounds %struct.GPR, %struct.GPR* %21084, i32 0, i32 33
  %21086 = getelementptr inbounds %struct.Reg, %struct.Reg* %21085, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %21086 to i64*
  %21087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21088 = getelementptr inbounds %struct.GPR, %struct.GPR* %21087, i32 0, i32 1
  %21089 = getelementptr inbounds %struct.Reg, %struct.Reg* %21088, i32 0, i32 0
  %RAX.i22 = bitcast %union.anon* %21089 to i64*
  %21090 = load i64, i64* %RAX.i22
  %21091 = load i64, i64* %PC.i21
  %21092 = add i64 %21091, 3
  store i64 %21092, i64* %PC.i21
  %21093 = trunc i64 %21090 to i32
  %21094 = add i32 1, %21093
  %21095 = zext i32 %21094 to i64
  store i64 %21095, i64* %RAX.i22, align 8
  %21096 = icmp ult i32 %21094, %21093
  %21097 = icmp ult i32 %21094, 1
  %21098 = or i1 %21096, %21097
  %21099 = zext i1 %21098 to i8
  %21100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21099, i8* %21100, align 1
  %21101 = and i32 %21094, 255
  %21102 = call i32 @llvm.ctpop.i32(i32 %21101)
  %21103 = trunc i32 %21102 to i8
  %21104 = and i8 %21103, 1
  %21105 = xor i8 %21104, 1
  %21106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21105, i8* %21106, align 1
  %21107 = xor i64 1, %21090
  %21108 = trunc i64 %21107 to i32
  %21109 = xor i32 %21108, %21094
  %21110 = lshr i32 %21109, 4
  %21111 = trunc i32 %21110 to i8
  %21112 = and i8 %21111, 1
  %21113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21112, i8* %21113, align 1
  %21114 = icmp eq i32 %21094, 0
  %21115 = zext i1 %21114 to i8
  %21116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21115, i8* %21116, align 1
  %21117 = lshr i32 %21094, 31
  %21118 = trunc i32 %21117 to i8
  %21119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21118, i8* %21119, align 1
  %21120 = lshr i32 %21093, 31
  %21121 = xor i32 %21117, %21120
  %21122 = add i32 %21121, %21117
  %21123 = icmp eq i32 %21122, 2
  %21124 = zext i1 %21123 to i8
  %21125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21124, i8* %21125, align 1
  store %struct.Memory* %loadMem_40bc2b, %struct.Memory** %MEMORY
  %loadMem_40bc2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21127 = getelementptr inbounds %struct.GPR, %struct.GPR* %21126, i32 0, i32 33
  %21128 = getelementptr inbounds %struct.Reg, %struct.Reg* %21127, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %21128 to i64*
  %21129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21130 = getelementptr inbounds %struct.GPR, %struct.GPR* %21129, i32 0, i32 1
  %21131 = getelementptr inbounds %struct.Reg, %struct.Reg* %21130, i32 0, i32 0
  %EAX.i19 = bitcast %union.anon* %21131 to i32*
  %21132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21133 = getelementptr inbounds %struct.GPR, %struct.GPR* %21132, i32 0, i32 15
  %21134 = getelementptr inbounds %struct.Reg, %struct.Reg* %21133, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %21134 to i64*
  %21135 = load i64, i64* %RBP.i20
  %21136 = sub i64 %21135, 20
  %21137 = load i32, i32* %EAX.i19
  %21138 = zext i32 %21137 to i64
  %21139 = load i64, i64* %PC.i18
  %21140 = add i64 %21139, 3
  store i64 %21140, i64* %PC.i18
  %21141 = inttoptr i64 %21136 to i32*
  store i32 %21137, i32* %21141
  store %struct.Memory* %loadMem_40bc2e, %struct.Memory** %MEMORY
  %loadMem_40bc31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21143 = getelementptr inbounds %struct.GPR, %struct.GPR* %21142, i32 0, i32 33
  %21144 = getelementptr inbounds %struct.Reg, %struct.Reg* %21143, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %21144 to i64*
  %21145 = load i64, i64* %PC.i17
  %21146 = add i64 %21145, -140
  %21147 = load i64, i64* %PC.i17
  %21148 = add i64 %21147, 5
  store i64 %21148, i64* %PC.i17
  %21149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21146, i64* %21149, align 8
  store %struct.Memory* %loadMem_40bc31, %struct.Memory** %MEMORY
  br label %block_.L_40bba5

block_.L_40bc36:                                  ; preds = %block_.L_40bba5
  %loadMem_40bc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21151 = getelementptr inbounds %struct.GPR, %struct.GPR* %21150, i32 0, i32 33
  %21152 = getelementptr inbounds %struct.Reg, %struct.Reg* %21151, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %21152 to i64*
  %21153 = load i64, i64* %PC.i16
  %21154 = add i64 %21153, 5
  %21155 = load i64, i64* %PC.i16
  %21156 = add i64 %21155, 5
  store i64 %21156, i64* %PC.i16
  %21157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21154, i64* %21157, align 8
  store %struct.Memory* %loadMem_40bc36, %struct.Memory** %MEMORY
  br label %block_.L_40bc3b

block_.L_40bc3b:                                  ; preds = %block_.L_40bc36
  %loadMem_40bc3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %21158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21159 = getelementptr inbounds %struct.GPR, %struct.GPR* %21158, i32 0, i32 33
  %21160 = getelementptr inbounds %struct.Reg, %struct.Reg* %21159, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %21160 to i64*
  %21161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21162 = getelementptr inbounds %struct.GPR, %struct.GPR* %21161, i32 0, i32 1
  %21163 = getelementptr inbounds %struct.Reg, %struct.Reg* %21162, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %21163 to i64*
  %21164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21165 = getelementptr inbounds %struct.GPR, %struct.GPR* %21164, i32 0, i32 15
  %21166 = getelementptr inbounds %struct.Reg, %struct.Reg* %21165, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %21166 to i64*
  %21167 = load i64, i64* %RBP.i15
  %21168 = sub i64 %21167, 16
  %21169 = load i64, i64* %PC.i13
  %21170 = add i64 %21169, 3
  store i64 %21170, i64* %PC.i13
  %21171 = inttoptr i64 %21168 to i32*
  %21172 = load i32, i32* %21171
  %21173 = zext i32 %21172 to i64
  store i64 %21173, i64* %RAX.i14, align 8
  store %struct.Memory* %loadMem_40bc3b, %struct.Memory** %MEMORY
  %loadMem_40bc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21175 = getelementptr inbounds %struct.GPR, %struct.GPR* %21174, i32 0, i32 33
  %21176 = getelementptr inbounds %struct.Reg, %struct.Reg* %21175, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %21176 to i64*
  %21177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21178 = getelementptr inbounds %struct.GPR, %struct.GPR* %21177, i32 0, i32 1
  %21179 = getelementptr inbounds %struct.Reg, %struct.Reg* %21178, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %21179 to i64*
  %21180 = load i64, i64* %RAX.i12
  %21181 = load i64, i64* %PC.i11
  %21182 = add i64 %21181, 3
  store i64 %21182, i64* %PC.i11
  %21183 = trunc i64 %21180 to i32
  %21184 = add i32 1, %21183
  %21185 = zext i32 %21184 to i64
  store i64 %21185, i64* %RAX.i12, align 8
  %21186 = icmp ult i32 %21184, %21183
  %21187 = icmp ult i32 %21184, 1
  %21188 = or i1 %21186, %21187
  %21189 = zext i1 %21188 to i8
  %21190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21189, i8* %21190, align 1
  %21191 = and i32 %21184, 255
  %21192 = call i32 @llvm.ctpop.i32(i32 %21191)
  %21193 = trunc i32 %21192 to i8
  %21194 = and i8 %21193, 1
  %21195 = xor i8 %21194, 1
  %21196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21195, i8* %21196, align 1
  %21197 = xor i64 1, %21180
  %21198 = trunc i64 %21197 to i32
  %21199 = xor i32 %21198, %21184
  %21200 = lshr i32 %21199, 4
  %21201 = trunc i32 %21200 to i8
  %21202 = and i8 %21201, 1
  %21203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21202, i8* %21203, align 1
  %21204 = icmp eq i32 %21184, 0
  %21205 = zext i1 %21204 to i8
  %21206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21205, i8* %21206, align 1
  %21207 = lshr i32 %21184, 31
  %21208 = trunc i32 %21207 to i8
  %21209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21208, i8* %21209, align 1
  %21210 = lshr i32 %21183, 31
  %21211 = xor i32 %21207, %21210
  %21212 = add i32 %21211, %21207
  %21213 = icmp eq i32 %21212, 2
  %21214 = zext i1 %21213 to i8
  %21215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21214, i8* %21215, align 1
  store %struct.Memory* %loadMem_40bc3e, %struct.Memory** %MEMORY
  %loadMem_40bc41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21217 = getelementptr inbounds %struct.GPR, %struct.GPR* %21216, i32 0, i32 33
  %21218 = getelementptr inbounds %struct.Reg, %struct.Reg* %21217, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %21218 to i64*
  %21219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21220 = getelementptr inbounds %struct.GPR, %struct.GPR* %21219, i32 0, i32 1
  %21221 = getelementptr inbounds %struct.Reg, %struct.Reg* %21220, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %21221 to i32*
  %21222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21223 = getelementptr inbounds %struct.GPR, %struct.GPR* %21222, i32 0, i32 15
  %21224 = getelementptr inbounds %struct.Reg, %struct.Reg* %21223, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %21224 to i64*
  %21225 = load i64, i64* %RBP.i10
  %21226 = sub i64 %21225, 16
  %21227 = load i32, i32* %EAX.i
  %21228 = zext i32 %21227 to i64
  %21229 = load i64, i64* %PC.i9
  %21230 = add i64 %21229, 3
  store i64 %21230, i64* %PC.i9
  %21231 = inttoptr i64 %21226 to i32*
  store i32 %21227, i32* %21231
  store %struct.Memory* %loadMem_40bc41, %struct.Memory** %MEMORY
  %loadMem_40bc44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21233 = getelementptr inbounds %struct.GPR, %struct.GPR* %21232, i32 0, i32 33
  %21234 = getelementptr inbounds %struct.Reg, %struct.Reg* %21233, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %21234 to i64*
  %21235 = load i64, i64* %PC.i8
  %21236 = add i64 %21235, -291
  %21237 = load i64, i64* %PC.i8
  %21238 = add i64 %21237, 5
  store i64 %21238, i64* %PC.i8
  %21239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21236, i64* %21239, align 8
  store %struct.Memory* %loadMem_40bc44, %struct.Memory** %MEMORY
  br label %block_.L_40bb21

block_.L_40bc49:                                  ; preds = %block_.L_40bb21
  %loadMem_40bc49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21241 = getelementptr inbounds %struct.GPR, %struct.GPR* %21240, i32 0, i32 33
  %21242 = getelementptr inbounds %struct.Reg, %struct.Reg* %21241, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %21242 to i64*
  %21243 = load i64, i64* %PC.i7
  %21244 = add i64 %21243, 5
  %21245 = load i64, i64* %PC.i7
  %21246 = add i64 %21245, 5
  store i64 %21246, i64* %PC.i7
  %21247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %21244, i64* %21247, align 8
  store %struct.Memory* %loadMem_40bc49, %struct.Memory** %MEMORY
  br label %block_.L_40bc4e

block_.L_40bc4e:                                  ; preds = %block_.L_40bc49, %block_.L_40bb0d
  %loadMem_40bc4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %21248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21249 = getelementptr inbounds %struct.GPR, %struct.GPR* %21248, i32 0, i32 33
  %21250 = getelementptr inbounds %struct.Reg, %struct.Reg* %21249, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %21250 to i64*
  %21251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21252 = getelementptr inbounds %struct.GPR, %struct.GPR* %21251, i32 0, i32 1
  %21253 = getelementptr inbounds %struct.Reg, %struct.Reg* %21252, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %21253 to i64*
  %21254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21255 = getelementptr inbounds %struct.GPR, %struct.GPR* %21254, i32 0, i32 15
  %21256 = getelementptr inbounds %struct.Reg, %struct.Reg* %21255, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %21256 to i64*
  %21257 = load i64, i64* %RBP.i6
  %21258 = sub i64 %21257, 84
  %21259 = load i64, i64* %PC.i5
  %21260 = add i64 %21259, 3
  store i64 %21260, i64* %PC.i5
  %21261 = inttoptr i64 %21258 to i32*
  %21262 = load i32, i32* %21261
  %21263 = zext i32 %21262 to i64
  store i64 %21263, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_40bc4e, %struct.Memory** %MEMORY
  %loadMem_40bc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21265 = getelementptr inbounds %struct.GPR, %struct.GPR* %21264, i32 0, i32 33
  %21266 = getelementptr inbounds %struct.Reg, %struct.Reg* %21265, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %21266 to i64*
  %21267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21268 = getelementptr inbounds %struct.GPR, %struct.GPR* %21267, i32 0, i32 13
  %21269 = getelementptr inbounds %struct.Reg, %struct.Reg* %21268, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %21269 to i64*
  %21270 = load i64, i64* %RSP.i
  %21271 = load i64, i64* %PC.i4
  %21272 = add i64 %21271, 7
  store i64 %21272, i64* %PC.i4
  %21273 = add i64 208, %21270
  store i64 %21273, i64* %RSP.i, align 8
  %21274 = icmp ult i64 %21273, %21270
  %21275 = icmp ult i64 %21273, 208
  %21276 = or i1 %21274, %21275
  %21277 = zext i1 %21276 to i8
  %21278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21277, i8* %21278, align 1
  %21279 = trunc i64 %21273 to i32
  %21280 = and i32 %21279, 255
  %21281 = call i32 @llvm.ctpop.i32(i32 %21280)
  %21282 = trunc i32 %21281 to i8
  %21283 = and i8 %21282, 1
  %21284 = xor i8 %21283, 1
  %21285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21284, i8* %21285, align 1
  %21286 = xor i64 208, %21270
  %21287 = xor i64 %21286, %21273
  %21288 = lshr i64 %21287, 4
  %21289 = trunc i64 %21288 to i8
  %21290 = and i8 %21289, 1
  %21291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21290, i8* %21291, align 1
  %21292 = icmp eq i64 %21273, 0
  %21293 = zext i1 %21292 to i8
  %21294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21293, i8* %21294, align 1
  %21295 = lshr i64 %21273, 63
  %21296 = trunc i64 %21295 to i8
  %21297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21296, i8* %21297, align 1
  %21298 = lshr i64 %21270, 63
  %21299 = xor i64 %21295, %21298
  %21300 = add i64 %21299, %21295
  %21301 = icmp eq i64 %21300, 2
  %21302 = zext i1 %21301 to i8
  %21303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %21302, i8* %21303, align 1
  store %struct.Memory* %loadMem_40bc51, %struct.Memory** %MEMORY
  %loadMem_40bc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21305 = getelementptr inbounds %struct.GPR, %struct.GPR* %21304, i32 0, i32 33
  %21306 = getelementptr inbounds %struct.Reg, %struct.Reg* %21305, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %21306 to i64*
  %21307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21308 = getelementptr inbounds %struct.GPR, %struct.GPR* %21307, i32 0, i32 15
  %21309 = getelementptr inbounds %struct.Reg, %struct.Reg* %21308, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %21309 to i64*
  %21310 = load i64, i64* %PC.i2
  %21311 = add i64 %21310, 1
  store i64 %21311, i64* %PC.i2
  %21312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21313 = load i64, i64* %21312, align 8
  %21314 = add i64 %21313, 8
  %21315 = inttoptr i64 %21313 to i64*
  %21316 = load i64, i64* %21315
  store i64 %21316, i64* %RBP.i3, align 8
  store i64 %21314, i64* %21312, align 8
  store %struct.Memory* %loadMem_40bc58, %struct.Memory** %MEMORY
  %loadMem_40bc59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %21317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21318 = getelementptr inbounds %struct.GPR, %struct.GPR* %21317, i32 0, i32 33
  %21319 = getelementptr inbounds %struct.Reg, %struct.Reg* %21318, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %21319 to i64*
  %21320 = load i64, i64* %PC.i1
  %21321 = add i64 %21320, 1
  store i64 %21321, i64* %PC.i1
  %21322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %21324 = load i64, i64* %21323, align 8
  %21325 = inttoptr i64 %21324 to i64*
  %21326 = load i64, i64* %21325
  store i64 %21326, i64* %21322, align 8
  %21327 = add i64 %21324, 8
  store i64 %21327, i64* %21323, align 8
  store %struct.Memory* %loadMem_40bc59, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40bc59
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xd0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 208
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 208
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 208, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__r8____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x9__0x48__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 9
  %16 = icmp ult i32 %14, 9
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 9
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x8d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ad3a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xa__0x48__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 10
  %16 = icmp ult i32 %14, 10
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 10
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xd__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 13
  %16 = icmp ult i32 %14, 13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 13
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8d__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl___dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %DL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3738__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11bdc__rsi____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x8e__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 142
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40addc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11c00__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8e__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 142
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8e__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 142
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11c0c__rdx__rsi_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %16, 72716
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 116
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40ae22(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ae39(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = zext i32 %12 to i64
  store i64 %13, i64* %RAX, align 8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %12, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = trunc i64 %9 to i32
  %22 = xor i32 %21, %12
  %23 = lshr i32 %22, 4
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %12, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %12, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %12, 31
  %34 = xor i32 %30, %33
  %35 = add i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2320___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4924192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11be0__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 72672
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x11be0__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72672
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xf___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 15, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 15
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 15, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40afd9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40afd4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40af5a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -48
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40aea3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3338__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13112
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x33b8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13240
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3378__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13176
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x33f8__rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 13304
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ae92(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40afd9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b15b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b156(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b0b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40affe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0xc__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40afed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b15b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 -1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b198(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3338__rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 13112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b278(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 100
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b20d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x724be0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 7490528, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6f73a0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6f73a0_type* @G__0x6f73a0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x180___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 384, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x340___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 832, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RAX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RAX, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b273(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70e250___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 7397968, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x722cd0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x722cd0_type* @G__0x722cd0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3338__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 13112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sign(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6d4600___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6d4600_type* @G__0x6d4600 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R9, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____r9__r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R9
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b35c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3338__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 13112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3338__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 13112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b55b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b466(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b3eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70d1b0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70d1b0_type* @G__0x70d1b0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x180___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 384, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rsi____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RDI, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x68__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__edx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__cl___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %22 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = shl i64 %13, 32
  %21 = ashr i64 %20, 33
  br label %29

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 31
  %24 = add i64 %23, -1
  %25 = shl i64 %13, 32
  %26 = ashr exact i64 %25, 32
  %27 = ashr i64 %26, %24
  %28 = lshr i64 %27, 1
  br label %29

; <label>:29:                                     ; preds = %22, %19
  %30 = phi i64 [ %28, %22 ], [ %21, %19 ]
  %31 = phi i64 [ %27, %22 ], [ %13, %19 ]
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = trunc i64 %30 to i32
  %35 = and i64 %30, 4294967295
  store i64 %35, i64* %RDI, align 8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %38 = and i32 %34, 255
  %39 = call i32 @llvm.ctpop.i32(i32 %38)
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  store i8 %42, i8* %37, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %45 = icmp eq i32 %34, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %48 = lshr i32 %34, 31
  %49 = trunc i32 %48 to i8
  store i8 %49, i8* %47, align 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %50, align 1
  br label %_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %29
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3338__rsi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 13112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3338__r8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 13112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b461(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x723b20___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x723b20_type* @G__0x723b20 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b556(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b4e3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x70d1b0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x70d1b0_type* @G__0x70d1b0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x180___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 384, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = shl i64 %12, 32
  %19 = ashr exact i64 %18, 32
  %20 = sext i32 %17 to i64
  %21 = mul i64 %20, %19
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RCX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 4
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 4
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 4, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RSI, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb8__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x3338__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 13112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b551(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x723b20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x723b20_type* @G__0x723b20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x10__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 16
  %16 = icmp ult i32 %14, 16
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 16
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b9c9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x44__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924257
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  %19 = zext i8 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b5d4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3338___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 13112, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 13112
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 13112, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b718(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b67b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RAX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b713(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b985(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b736(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b73d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x80__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x88__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b7d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b980(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40b8c3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b856(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rsi__r8_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RDI, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc4__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b8be(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b97b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b924(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = shl i64 %15, 32
  %25 = ashr exact i64 %24, 32
  %26 = sext i32 %23 to i64
  %27 = mul i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i64 %27, 4294967295
  store i64 %29, i64* %RCX, align 8
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = icmp ne i64 %31, %27
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %33, i8* %34, align 1
  %35 = and i32 %28, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = lshr i32 %28, 31
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xcc__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b976(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd0__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b985(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b9b6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b9bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b562(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bb0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40bb08(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40ba3d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x30__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -48
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b9fd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RCX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40baf5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RAX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ba70(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bafa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b9ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bc4e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40bc49(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40bb72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb32(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40bc36(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bba5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bc3b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb21(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bc4e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xd0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 208, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 208
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 208, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
