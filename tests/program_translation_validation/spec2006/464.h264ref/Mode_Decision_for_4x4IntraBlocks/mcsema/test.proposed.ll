; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4025b0.intrapred_luma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45f180.SATD(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_49d8c0.store_coding_state(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4830e0.RDCost_for_4x4IntraBlocks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_49dc00.reset_coding_state(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_483520.RDCost_for_4x4Blocks_Chroma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406250.dct_luma(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40acc0.dct_chroma4x4(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x2d89e__rip__type = type <{ [8 x i8] }>
@G_0x2d89e__rip_= global %G_0x2d89e__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x2def0__rip__type = type <{ [8 x i8] }>
@G_0x2def0__rip_= global %G_0x2def0__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x2e030__rip__type = type <{ [8 x i8] }>
@G_0x2e030__rip_= global %G_0x2e030__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x3964c__rip__type = type <{ [16 x i8] }>
@G_0x3964c__rip_= global %G_0x3964c__rip__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cc608_type = type <{ [8 x i8] }>
@G_0x6cc608= global %G_0x6cc608_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cc628_type = type <{ [8 x i8] }>
@G_0x6cc628= global %G_0x6cc628_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6f6f90_type = type <{ [8 x i8] }>
@G_0x6f6f90= global %G_0x6f6f90_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
@G_0x70fcf0= global %G_0x70fcf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x726418_type = type <{ [8 x i8] }>
@G_0x726418= global %G_0x726418_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6cd4f0_type = type <{ [8 x i8] }>
@G__0x6cd4f0= global %G__0x6cd4f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d0920_type = type <{ [8 x i8] }>
@G__0x6d0920= global %G__0x6d0920_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d2ec0_type = type <{ [8 x i8] }>
@G__0x6d2ec0= global %G__0x6d2ec0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d40f0_type = type <{ [8 x i8] }>
@G__0x6d40f0= global %G__0x6d40f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6d4600_type = type <{ [8 x i8] }>
@G__0x6d4600= global %G__0x6d4600_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6f6fa0_type = type <{ [8 x i8] }>
@G__0x6f6fa0= global %G__0x6f6fa0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6f8f20_type = type <{ [8 x i8] }>
@G__0x6f8f20= global %G__0x6f8f20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6f9560_type = type <{ [8 x i8] }>
@G__0x6f9560= global %G__0x6f9560_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x7107b0_type = type <{ [8 x i8] }>
@G__0x7107b0= global %G__0x7107b0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x722ff0_type = type <{ [8 x i8] }>
@G__0x722ff0= global %G__0x722ff0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x723720_type = type <{ [8 x i8] }>
@G__0x723720= global %G__0x723720_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @Mode_Decision_for_4x4IntraBlocks(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .Mode_Decision_for_4x4IntraBlocks:	 RIP: 483950	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 483950	 Bytes: 1
  %loadMem_483950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483950 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483950)
  store %struct.Memory* %call_483950, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 483951	 Bytes: 3
  %loadMem_483951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483951 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483951)
  store %struct.Memory* %call_483951, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 483954	 Bytes: 1
  %loadMem_483954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483954 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483954)
  store %struct.Memory* %call_483954, %struct.Memory** %MEMORY

  ; Code: subq $0x308, %rsp	 RIP: 483955	 Bytes: 7
  %loadMem_483955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483955 = call %struct.Memory* @routine_subq__0x308___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483955)
  store %struct.Memory* %call_483955, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %ecx	 RIP: 48395c	 Bytes: 5
  %loadMem_48395c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48395c = call %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48395c)
  store %struct.Memory* %call_48395c, %struct.Memory** %MEMORY

  ; Code: xorl %r8d, %r8d	 RIP: 483961	 Bytes: 3
  %loadMem_483961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483961 = call %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483961)
  store %struct.Memory* %call_483961, %struct.Memory** %MEMORY

  ; Code: leaq -0x138(%rbp), %r9	 RIP: 483964	 Bytes: 7
  %loadMem_483964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483964 = call %struct.Memory* @routine_leaq_MINUS0x138__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483964)
  store %struct.Memory* %call_483964, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 48396b	 Bytes: 5
  %loadMem_48396b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48396b = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48396b)
  store %struct.Memory* %call_48396b, %struct.Memory** %MEMORY

  ; Code: movsd 0x2e030(%rip), %xmm1	 RIP: 483970	 Bytes: 8
  %loadMem_483970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483970 = call %struct.Memory* @routine_movsd_0x2e030__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483970)
  store %struct.Memory* %call_483970, %struct.Memory** %MEMORY

  ; Code: movsd 0x2def0(%rip), %xmm2	 RIP: 483978	 Bytes: 8
  %loadMem_483978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483978 = call %struct.Memory* @routine_movsd_0x2def0__rip____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483978)
  store %struct.Memory* %call_483978, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %r10d	 RIP: 483980	 Bytes: 6
  %loadMem_483980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483980 = call %struct.Memory* @routine_movl__0x2___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483980)
  store %struct.Memory* %call_483980, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0xc(%rbp)	 RIP: 483986	 Bytes: 3
  %loadMem_483986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483986 = call %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483986)
  store %struct.Memory* %call_483986, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x10(%rbp)	 RIP: 483989	 Bytes: 3
  %loadMem_483989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483989 = call %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483989)
  store %struct.Memory* %call_483989, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x18(%rbp)	 RIP: 48398c	 Bytes: 5
  %loadMem_48398c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48398c = call %struct.Memory* @routine_movsd__xmm0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48398c)
  store %struct.Memory* %call_48398c, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x20(%rbp)	 RIP: 483991	 Bytes: 4
  %loadMem_483991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483991 = call %struct.Memory* @routine_movq__rdx__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483991)
  store %struct.Memory* %call_483991, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x28(%rbp)	 RIP: 483995	 Bytes: 7
  %loadMem_483995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483995 = call %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483995)
  store %struct.Memory* %call_483995, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4c(%rbp)	 RIP: 48399c	 Bytes: 7
  %loadMem_48399c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48399c = call %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48399c)
  store %struct.Memory* %call_48399c, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4839a3	 Bytes: 3
  %loadMem_4839a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839a3 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839a3)
  store %struct.Memory* %call_4839a3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f8(%rbp)	 RIP: 4839a6	 Bytes: 6
  %loadMem_4839a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839a6 = call %struct.Memory* @routine_movl__eax__MINUS0x1f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839a6)
  store %struct.Memory* %call_4839a6, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4839ac	 Bytes: 2
  %loadMem_4839ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839ac = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839ac)
  store %struct.Memory* %call_4839ac, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4839ae	 Bytes: 1
  %loadMem_4839ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839ae = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839ae)
  store %struct.Memory* %call_4839ae, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4839af	 Bytes: 3
  %loadMem_4839af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839af = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839af)
  store %struct.Memory* %call_4839af, %struct.Memory** %MEMORY

  ; Code: shll $0x3, %edx	 RIP: 4839b2	 Bytes: 3
  %loadMem_4839b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839b2 = call %struct.Memory* @routine_shll__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839b2)
  store %struct.Memory* %call_4839b2, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %esi	 RIP: 4839b5	 Bytes: 3
  %loadMem_4839b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839b5 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839b5)
  store %struct.Memory* %call_4839b5, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4839b8	 Bytes: 2
  %loadMem_4839b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839b8 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839b8)
  store %struct.Memory* %call_4839b8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1fc(%rbp)	 RIP: 4839ba	 Bytes: 6
  %loadMem_4839ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839ba = call %struct.Memory* @routine_movl__edx__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839ba)
  store %struct.Memory* %call_4839ba, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4839c0	 Bytes: 1
  %loadMem_4839c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839c0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839c0)
  store %struct.Memory* %call_4839c0, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4839c1	 Bytes: 3
  %loadMem_4839c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839c1 = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839c1)
  store %struct.Memory* %call_4839c1, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 4839c4	 Bytes: 3
  %loadMem_4839c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839c4 = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839c4)
  store %struct.Memory* %call_4839c4, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %esi	 RIP: 4839c7	 Bytes: 6
  %loadMem_4839c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839c7 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839c7)
  store %struct.Memory* %call_4839c7, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 4839cd	 Bytes: 2
  %loadMem_4839cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839cd = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839cd)
  store %struct.Memory* %call_4839cd, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xdc(%rbp)	 RIP: 4839cf	 Bytes: 6
  %loadMem_4839cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839cf = call %struct.Memory* @routine_movl__esi__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839cf)
  store %struct.Memory* %call_4839cf, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4839d5	 Bytes: 3
  %loadMem_4839d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839d5 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839d5)
  store %struct.Memory* %call_4839d5, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4839d8	 Bytes: 2
  %loadMem_4839d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839d8 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839d8)
  store %struct.Memory* %call_4839d8, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4839da	 Bytes: 1
  %loadMem_4839da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839da = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839da)
  store %struct.Memory* %call_4839da, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4839db	 Bytes: 3
  %loadMem_4839db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839db = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839db)
  store %struct.Memory* %call_4839db, %struct.Memory** %MEMORY

  ; Code: shll $0x3, %eax	 RIP: 4839de	 Bytes: 3
  %loadMem_4839de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839de = call %struct.Memory* @routine_shll__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839de)
  store %struct.Memory* %call_4839de, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %esi	 RIP: 4839e1	 Bytes: 3
  %loadMem_4839e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839e1 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839e1)
  store %struct.Memory* %call_4839e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x200(%rbp)	 RIP: 4839e4	 Bytes: 6
  %loadMem_4839e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839e4 = call %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839e4)
  store %struct.Memory* %call_4839e4, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4839ea	 Bytes: 2
  %loadMem_4839ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839ea = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839ea)
  store %struct.Memory* %call_4839ea, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4839ec	 Bytes: 1
  %loadMem_4839ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839ec = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839ec)
  store %struct.Memory* %call_4839ec, %struct.Memory** %MEMORY

  ; Code: idivl %r10d	 RIP: 4839ed	 Bytes: 3
  %loadMem_4839ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839ed = call %struct.Memory* @routine_idivl__r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839ed)
  store %struct.Memory* %call_4839ed, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 4839f0	 Bytes: 3
  %loadMem_4839f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839f0 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839f0)
  store %struct.Memory* %call_4839f0, %struct.Memory** %MEMORY

  ; Code: movl -0x200(%rbp), %esi	 RIP: 4839f3	 Bytes: 6
  %loadMem_4839f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839f3 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839f3)
  store %struct.Memory* %call_4839f3, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 4839f9	 Bytes: 2
  %loadMem_4839f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839f9 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839f9)
  store %struct.Memory* %call_4839f9, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xe0(%rbp)	 RIP: 4839fb	 Bytes: 6
  %loadMem_4839fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4839fb = call %struct.Memory* @routine_movl__esi__MINUS0xe0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4839fb)
  store %struct.Memory* %call_4839fb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483a01	 Bytes: 8
  %loadMem_483a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a01 = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a01)
  store %struct.Memory* %call_483a01, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%r11), %eax	 RIP: 483a09	 Bytes: 7
  %loadMem_483a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a09 = call %struct.Memory* @routine_movl_0x98__r11____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a09)
  store %struct.Memory* %call_483a09, %struct.Memory** %MEMORY

  ; Code: addl -0xdc(%rbp), %eax	 RIP: 483a10	 Bytes: 6
  %loadMem_483a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a10 = call %struct.Memory* @routine_addl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a10)
  store %struct.Memory* %call_483a10, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe4(%rbp)	 RIP: 483a16	 Bytes: 6
  %loadMem_483a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a16 = call %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a16)
  store %struct.Memory* %call_483a16, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483a1c	 Bytes: 8
  %loadMem_483a1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a1c = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a1c)
  store %struct.Memory* %call_483a1c, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%r11), %eax	 RIP: 483a24	 Bytes: 7
  %loadMem_483a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a24 = call %struct.Memory* @routine_movl_0x9c__r11____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a24)
  store %struct.Memory* %call_483a24, %struct.Memory** %MEMORY

  ; Code: addl -0xe0(%rbp), %eax	 RIP: 483a2b	 Bytes: 6
  %loadMem_483a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a2b = call %struct.Memory* @routine_addl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a2b)
  store %struct.Memory* %call_483a2b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xe8(%rbp)	 RIP: 483a31	 Bytes: 6
  %loadMem_483a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a31 = call %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a31)
  store %struct.Memory* %call_483a31, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483a37	 Bytes: 8
  %loadMem_483a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a37 = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a37)
  store %struct.Memory* %call_483a37, %struct.Memory** %MEMORY

  ; Code: movl 0xa8(%r11), %eax	 RIP: 483a3f	 Bytes: 7
  %loadMem_483a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a3f = call %struct.Memory* @routine_movl_0xa8__r11____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a3f)
  store %struct.Memory* %call_483a3f, %struct.Memory** %MEMORY

  ; Code: addl -0xdc(%rbp), %eax	 RIP: 483a46	 Bytes: 6
  %loadMem_483a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a46 = call %struct.Memory* @routine_addl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a46)
  store %struct.Memory* %call_483a46, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xec(%rbp)	 RIP: 483a4c	 Bytes: 6
  %loadMem_483a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a4c = call %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a4c)
  store %struct.Memory* %call_483a4c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483a52	 Bytes: 8
  %loadMem_483a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a52 = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a52)
  store %struct.Memory* %call_483a52, %struct.Memory** %MEMORY

  ; Code: movl 0xac(%r11), %eax	 RIP: 483a5a	 Bytes: 7
  %loadMem_483a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a5a = call %struct.Memory* @routine_movl_0xac__r11____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a5a)
  store %struct.Memory* %call_483a5a, %struct.Memory** %MEMORY

  ; Code: addl -0xe0(%rbp), %eax	 RIP: 483a61	 Bytes: 6
  %loadMem_483a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a61 = call %struct.Memory* @routine_addl_MINUS0xe0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a61)
  store %struct.Memory* %call_483a61, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf0(%rbp)	 RIP: 483a67	 Bytes: 6
  %loadMem_483a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a67 = call %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a67)
  store %struct.Memory* %call_483a67, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 483a6d	 Bytes: 6
  %loadMem_483a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a6d = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a6d)
  store %struct.Memory* %call_483a6d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 483a73	 Bytes: 1
  %loadMem_483a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a73 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a73)
  store %struct.Memory* %call_483a73, %struct.Memory** %MEMORY

  ; Code: movl -0x1f8(%rbp), %esi	 RIP: 483a74	 Bytes: 6
  %loadMem_483a74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a74 = call %struct.Memory* @routine_movl_MINUS0x1f8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a74)
  store %struct.Memory* %call_483a74, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 483a7a	 Bytes: 2
  %loadMem_483a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a7a = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a7a)
  store %struct.Memory* %call_483a7a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf4(%rbp)	 RIP: 483a7c	 Bytes: 6
  %loadMem_483a7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a7c = call %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a7c)
  store %struct.Memory* %call_483a7c, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 483a82	 Bytes: 6
  %loadMem_483a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a82 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a82)
  store %struct.Memory* %call_483a82, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 483a88	 Bytes: 1
  %loadMem_483a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a88 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a88)
  store %struct.Memory* %call_483a88, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 483a89	 Bytes: 2
  %loadMem_483a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a89 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a89)
  store %struct.Memory* %call_483a89, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf8(%rbp)	 RIP: 483a8b	 Bytes: 6
  %loadMem_483a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a8b = call %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a8b)
  store %struct.Memory* %call_483a8b, %struct.Memory** %MEMORY

  ; Code: movsd %xmm2, -0x100(%rbp)	 RIP: 483a91	 Bytes: 8
  %loadMem_483a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a91 = call %struct.Memory* @routine_movsd__xmm2__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a91)
  store %struct.Memory* %call_483a91, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, -0x108(%rbp)	 RIP: 483a99	 Bytes: 8
  %loadMem_483a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483a99 = call %struct.Memory* @routine_movsd__xmm1__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483a99)
  store %struct.Memory* %call_483a99, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483aa1	 Bytes: 8
  %loadMem_483aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483aa1 = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483aa1)
  store %struct.Memory* %call_483aa1, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%r11), %r11	 RIP: 483aa9	 Bytes: 7
  %loadMem_483aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483aa9 = call %struct.Memory* @routine_movq_0x3758__r11____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483aa9)
  store %struct.Memory* %call_483aa9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rbx	 RIP: 483ab0	 Bytes: 8
  %loadMem_483ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ab0 = call %struct.Memory* @routine_movq_0x6cb900___rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ab0)
  store %struct.Memory* %call_483ab0, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rbx), %rbx	 RIP: 483ab8	 Bytes: 4
  %loadMem_483ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ab8 = call %struct.Memory* @routine_movslq_0xc__rbx____rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ab8)
  store %struct.Memory* %call_483ab8, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rbx, %rbx	 RIP: 483abc	 Bytes: 7
  %loadMem_483abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483abc = call %struct.Memory* @routine_imulq__0x278___rbx___rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483abc)
  store %struct.Memory* %call_483abc, %struct.Memory** %MEMORY

  ; Code: addq %rbx, %r11	 RIP: 483ac3	 Bytes: 3
  %loadMem_483ac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ac3 = call %struct.Memory* @routine_addq__rbx___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ac3)
  store %struct.Memory* %call_483ac3, %struct.Memory** %MEMORY

  ; Code: movl 0x20c(%r11), %eax	 RIP: 483ac6	 Bytes: 7
  %loadMem_483ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ac6 = call %struct.Memory* @routine_movl_0x20c__r11____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ac6)
  store %struct.Memory* %call_483ac6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x16c(%rbp)	 RIP: 483acd	 Bytes: 6
  %loadMem_483acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483acd = call %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483acd)
  store %struct.Memory* %call_483acd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483ad3	 Bytes: 8
  %loadMem_483ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ad3 = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ad3)
  store %struct.Memory* %call_483ad3, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r11), %edi	 RIP: 483adb	 Bytes: 4
  %loadMem_483adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483adb = call %struct.Memory* @routine_movl_0xc__r11____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483adb)
  store %struct.Memory* %call_483adb, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %eax	 RIP: 483adf	 Bytes: 6
  %loadMem_483adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483adf = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483adf)
  store %struct.Memory* %call_483adf, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 483ae5	 Bytes: 1
  %loadMem_483ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ae5 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ae5)
  store %struct.Memory* %call_483ae5, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 483ae6	 Bytes: 2
  %loadMem_483ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ae6 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ae6)
  store %struct.Memory* %call_483ae6, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r10d	 RIP: 483ae8	 Bytes: 7
  %loadMem_483ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ae8 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ae8)
  store %struct.Memory* %call_483ae8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x204(%rbp)	 RIP: 483aef	 Bytes: 6
  %loadMem_483aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483aef = call %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483aef)
  store %struct.Memory* %call_483aef, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 483af5	 Bytes: 3
  %loadMem_483af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483af5 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483af5)
  store %struct.Memory* %call_483af5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 483af8	 Bytes: 1
  %loadMem_483af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483af8 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483af8)
  store %struct.Memory* %call_483af8, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 483af9	 Bytes: 2
  %loadMem_483af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483af9 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483af9)
  store %struct.Memory* %call_483af9, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %esi	 RIP: 483afb	 Bytes: 6
  %loadMem_483afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483afb = call %struct.Memory* @routine_movl_MINUS0x204__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483afb)
  store %struct.Memory* %call_483afb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 483b01	 Bytes: 2
  %loadMem_483b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b01 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b01)
  store %struct.Memory* %call_483b01, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 483b03	 Bytes: 5
  %loadMem1_483b03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_483b03 = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_483b03, i64 -231635, i64 5, i64 5)
  store %struct.Memory* %call1_483b03, %struct.Memory** %MEMORY

  %loadMem2_483b03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_483b03 = load i64, i64* %3
  %call2_483b03 = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_483b03, %struct.Memory* %loadMem2_483b03)
  store %struct.Memory* %call2_483b03, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 483b08	 Bytes: 2
  %loadMem_483b08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b08 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b08)
  store %struct.Memory* %call_483b08, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %r8d	 RIP: 483b0a	 Bytes: 6
  %loadMem_483b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b0a = call %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b0a)
  store %struct.Memory* %call_483b0a, %struct.Memory** %MEMORY

  ; Code: leaq -0x150(%rbp), %r9	 RIP: 483b10	 Bytes: 7
  %loadMem_483b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b10 = call %struct.Memory* @routine_leaq_MINUS0x150__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b10)
  store %struct.Memory* %call_483b10, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 483b17	 Bytes: 5
  %loadMem_483b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b17 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b17)
  store %struct.Memory* %call_483b17, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r11	 RIP: 483b1c	 Bytes: 8
  %loadMem_483b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b1c = call %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b1c)
  store %struct.Memory* %call_483b1c, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%r11), %edi	 RIP: 483b24	 Bytes: 4
  %loadMem_483b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b24 = call %struct.Memory* @routine_movl_0xc__r11____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b24)
  store %struct.Memory* %call_483b24, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edx	 RIP: 483b28	 Bytes: 6
  %loadMem_483b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b28 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b28)
  store %struct.Memory* %call_483b28, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x208(%rbp)	 RIP: 483b2e	 Bytes: 6
  %loadMem_483b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b2e = call %struct.Memory* @routine_movl__eax__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b2e)
  store %struct.Memory* %call_483b2e, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 483b34	 Bytes: 2
  %loadMem_483b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b34 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b34)
  store %struct.Memory* %call_483b34, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 483b36	 Bytes: 1
  %loadMem_483b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b36 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b36)
  store %struct.Memory* %call_483b36, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %esi	 RIP: 483b37	 Bytes: 6
  %loadMem_483b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b37 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b37)
  store %struct.Memory* %call_483b37, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 483b3d	 Bytes: 2
  %loadMem_483b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b3d = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b3d)
  store %struct.Memory* %call_483b3d, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r10d	 RIP: 483b3f	 Bytes: 7
  %loadMem_483b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b3f = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b3f)
  store %struct.Memory* %call_483b3f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20c(%rbp)	 RIP: 483b46	 Bytes: 6
  %loadMem_483b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b46 = call %struct.Memory* @routine_movl__eax__MINUS0x20c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b46)
  store %struct.Memory* %call_483b46, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 483b4c	 Bytes: 3
  %loadMem_483b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b4c = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b4c)
  store %struct.Memory* %call_483b4c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 483b4f	 Bytes: 1
  %loadMem_483b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b4f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b4f)
  store %struct.Memory* %call_483b4f, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 483b50	 Bytes: 2
  %loadMem_483b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b50 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b50)
  store %struct.Memory* %call_483b50, %struct.Memory** %MEMORY

  ; Code: movl -0x20c(%rbp), %esi	 RIP: 483b52	 Bytes: 6
  %loadMem_483b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b52 = call %struct.Memory* @routine_movl_MINUS0x20c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b52)
  store %struct.Memory* %call_483b52, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 483b58	 Bytes: 2
  %loadMem_483b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b58 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b58)
  store %struct.Memory* %call_483b58, %struct.Memory** %MEMORY

  ; Code: callq .getLuma4x4Neighbour	 RIP: 483b5a	 Bytes: 5
  %loadMem1_483b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_483b5a = call %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_483b5a, i64 -231722, i64 5, i64 5)
  store %struct.Memory* %call1_483b5a, %struct.Memory** %MEMORY

  %loadMem2_483b5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_483b5a = load i64, i64* %3
  %call2_483b5a = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64  %loadPC_483b5a, %struct.Memory* %loadMem2_483b5a)
  store %struct.Memory* %call2_483b5a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %r9	 RIP: 483b5f	 Bytes: 8
  %loadMem_483b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b5f = call %struct.Memory* @routine_movq_0x6cb8f8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b5f)
  store %struct.Memory* %call_483b5f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0xd8(%r9)	 RIP: 483b67	 Bytes: 8
  %loadMem_483b67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b67 = call %struct.Memory* @routine_cmpl__0x0__0xd8__r9_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b67)
  store %struct.Memory* %call_483b67, %struct.Memory** %MEMORY

  ; Code: je .L_483c09	 RIP: 483b6f	 Bytes: 6
  %loadMem_483b6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b6f = call %struct.Memory* @routine_je_.L_483c09(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b6f, i8* %BRANCH_TAKEN, i64 154, i64 6, i64 6)
  store %struct.Memory* %call_483b6f, %struct.Memory** %MEMORY

  %loadBr_483b6f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483b6f = icmp eq i8 %loadBr_483b6f, 1
  br i1 %cmpBr_483b6f, label %block_.L_483c09, label %block_483b75

block_483b75:
  ; Code: cmpl $0x0, -0x138(%rbp)	 RIP: 483b75	 Bytes: 7
  %loadMem_483b75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b75 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b75)
  store %struct.Memory* %call_483b75, %struct.Memory** %MEMORY

  ; Code: je .L_483ba6	 RIP: 483b7c	 Bytes: 6
  %loadMem_483b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b7c = call %struct.Memory* @routine_je_.L_483ba6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b7c, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_483b7c, %struct.Memory** %MEMORY

  %loadBr_483b7c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483b7c = icmp eq i8 %loadBr_483b7c, 1
  br i1 %cmpBr_483b7c, label %block_.L_483ba6, label %block_483b82

block_483b82:
  ; Code: movq 0x6cb900, %rax	 RIP: 483b82	 Bytes: 8
  %loadMem_483b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b82 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b82)
  store %struct.Memory* %call_483b82, %struct.Memory** %MEMORY

  ; Code: movq 0x11868(%rax), %rax	 RIP: 483b8a	 Bytes: 7
  %loadMem_483b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b8a = call %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b8a)
  store %struct.Memory* %call_483b8a, %struct.Memory** %MEMORY

  ; Code: movslq -0x134(%rbp), %rcx	 RIP: 483b91	 Bytes: 7
  %loadMem_483b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b91 = call %struct.Memory* @routine_movslq_MINUS0x134__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b91)
  store %struct.Memory* %call_483b91, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 483b98	 Bytes: 3
  %loadMem_483b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b98 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b98)
  store %struct.Memory* %call_483b98, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x210(%rbp)	 RIP: 483b9b	 Bytes: 6
  %loadMem_483b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483b9b = call %struct.Memory* @routine_movl__edx__MINUS0x210__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483b9b)
  store %struct.Memory* %call_483b9b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483bb3	 RIP: 483ba1	 Bytes: 5
  %loadMem_483ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ba1 = call %struct.Memory* @routine_jmpq_.L_483bb3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ba1, i64 18, i64 5)
  store %struct.Memory* %call_483ba1, %struct.Memory** %MEMORY

  br label %block_.L_483bb3

  ; Code: .L_483ba6:	 RIP: 483ba6	 Bytes: 0
block_.L_483ba6:

  ; Code: xorl %eax, %eax	 RIP: 483ba6	 Bytes: 2
  %loadMem_483ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ba6 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ba6)
  store %struct.Memory* %call_483ba6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x210(%rbp)	 RIP: 483ba8	 Bytes: 6
  %loadMem_483ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ba8 = call %struct.Memory* @routine_movl__eax__MINUS0x210__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ba8)
  store %struct.Memory* %call_483ba8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483bb3	 RIP: 483bae	 Bytes: 5
  %loadMem_483bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bae = call %struct.Memory* @routine_jmpq_.L_483bb3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bae, i64 5, i64 5)
  store %struct.Memory* %call_483bae, %struct.Memory** %MEMORY

  br label %block_.L_483bb3

  ; Code: .L_483bb3:	 RIP: 483bb3	 Bytes: 0
block_.L_483bb3:

  ; Code: movl -0x210(%rbp), %eax	 RIP: 483bb3	 Bytes: 6
  %loadMem_483bb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bb3 = call %struct.Memory* @routine_movl_MINUS0x210__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bb3)
  store %struct.Memory* %call_483bb3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x138(%rbp)	 RIP: 483bb9	 Bytes: 6
  %loadMem_483bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bb9 = call %struct.Memory* @routine_movl__eax__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bb9)
  store %struct.Memory* %call_483bb9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x150(%rbp)	 RIP: 483bbf	 Bytes: 7
  %loadMem_483bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bbf = call %struct.Memory* @routine_cmpl__0x0__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bbf)
  store %struct.Memory* %call_483bbf, %struct.Memory** %MEMORY

  ; Code: je .L_483bf0	 RIP: 483bc6	 Bytes: 6
  %loadMem_483bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bc6 = call %struct.Memory* @routine_je_.L_483bf0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bc6, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_483bc6, %struct.Memory** %MEMORY

  %loadBr_483bc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483bc6 = icmp eq i8 %loadBr_483bc6, 1
  br i1 %cmpBr_483bc6, label %block_.L_483bf0, label %block_483bcc

block_483bcc:
  ; Code: movq 0x6cb900, %rax	 RIP: 483bcc	 Bytes: 8
  %loadMem_483bcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bcc = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bcc)
  store %struct.Memory* %call_483bcc, %struct.Memory** %MEMORY

  ; Code: movq 0x11868(%rax), %rax	 RIP: 483bd4	 Bytes: 7
  %loadMem_483bd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bd4 = call %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bd4)
  store %struct.Memory* %call_483bd4, %struct.Memory** %MEMORY

  ; Code: movslq -0x14c(%rbp), %rcx	 RIP: 483bdb	 Bytes: 7
  %loadMem_483bdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bdb = call %struct.Memory* @routine_movslq_MINUS0x14c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bdb)
  store %struct.Memory* %call_483bdb, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 483be2	 Bytes: 3
  %loadMem_483be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483be2 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483be2)
  store %struct.Memory* %call_483be2, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x214(%rbp)	 RIP: 483be5	 Bytes: 6
  %loadMem_483be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483be5 = call %struct.Memory* @routine_movl__edx__MINUS0x214__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483be5)
  store %struct.Memory* %call_483be5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483bfd	 RIP: 483beb	 Bytes: 5
  %loadMem_483beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483beb = call %struct.Memory* @routine_jmpq_.L_483bfd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483beb, i64 18, i64 5)
  store %struct.Memory* %call_483beb, %struct.Memory** %MEMORY

  br label %block_.L_483bfd

  ; Code: .L_483bf0:	 RIP: 483bf0	 Bytes: 0
block_.L_483bf0:

  ; Code: xorl %eax, %eax	 RIP: 483bf0	 Bytes: 2
  %loadMem_483bf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bf0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bf0)
  store %struct.Memory* %call_483bf0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x214(%rbp)	 RIP: 483bf2	 Bytes: 6
  %loadMem_483bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bf2 = call %struct.Memory* @routine_movl__eax__MINUS0x214__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bf2)
  store %struct.Memory* %call_483bf2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483bfd	 RIP: 483bf8	 Bytes: 5
  %loadMem_483bf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bf8 = call %struct.Memory* @routine_jmpq_.L_483bfd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bf8, i64 5, i64 5)
  store %struct.Memory* %call_483bf8, %struct.Memory** %MEMORY

  br label %block_.L_483bfd

  ; Code: .L_483bfd:	 RIP: 483bfd	 Bytes: 0
block_.L_483bfd:

  ; Code: movl -0x214(%rbp), %eax	 RIP: 483bfd	 Bytes: 6
  %loadMem_483bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483bfd = call %struct.Memory* @routine_movl_MINUS0x214__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483bfd)
  store %struct.Memory* %call_483bfd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x150(%rbp)	 RIP: 483c03	 Bytes: 6
  %loadMem_483c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c03 = call %struct.Memory* @routine_movl__eax__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c03)
  store %struct.Memory* %call_483c03, %struct.Memory** %MEMORY

  ; Code: .L_483c09:	 RIP: 483c09	 Bytes: 0
  br label %block_.L_483c09
block_.L_483c09:

  ; Code: cmpl $0x0, -0x150(%rbp)	 RIP: 483c09	 Bytes: 7
  %loadMem_483c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c09 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c09)
  store %struct.Memory* %call_483c09, %struct.Memory** %MEMORY

  ; Code: je .L_483c42	 RIP: 483c10	 Bytes: 6
  %loadMem_483c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c10 = call %struct.Memory* @routine_je_.L_483c42(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c10, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_483c10, %struct.Memory** %MEMORY

  %loadBr_483c10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483c10 = icmp eq i8 %loadBr_483c10, 1
  br i1 %cmpBr_483c10, label %block_.L_483c42, label %block_483c16

block_483c16:
  ; Code: movq 0x6cb900, %rax	 RIP: 483c16	 Bytes: 8
  %loadMem_483c16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c16 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c16)
  store %struct.Memory* %call_483c16, %struct.Memory** %MEMORY

  ; Code: movq 0x68(%rax), %rax	 RIP: 483c1e	 Bytes: 4
  %loadMem_483c1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c1e = call %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c1e)
  store %struct.Memory* %call_483c1e, %struct.Memory** %MEMORY

  ; Code: movslq -0x140(%rbp), %rcx	 RIP: 483c22	 Bytes: 7
  %loadMem_483c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c22 = call %struct.Memory* @routine_movslq_MINUS0x140__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c22)
  store %struct.Memory* %call_483c22, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 483c29	 Bytes: 4
  %loadMem_483c29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c29 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c29)
  store %struct.Memory* %call_483c29, %struct.Memory** %MEMORY

  ; Code: movslq -0x13c(%rbp), %rcx	 RIP: 483c2d	 Bytes: 7
  %loadMem_483c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c2d = call %struct.Memory* @routine_movslq_MINUS0x13c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c2d)
  store %struct.Memory* %call_483c2d, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 483c34	 Bytes: 3
  %loadMem_483c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c34 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c34)
  store %struct.Memory* %call_483c34, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x218(%rbp)	 RIP: 483c37	 Bytes: 6
  %loadMem_483c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c37 = call %struct.Memory* @routine_movl__edx__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c37)
  store %struct.Memory* %call_483c37, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483c52	 RIP: 483c3d	 Bytes: 5
  %loadMem_483c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c3d = call %struct.Memory* @routine_jmpq_.L_483c52(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c3d, i64 21, i64 5)
  store %struct.Memory* %call_483c3d, %struct.Memory** %MEMORY

  br label %block_.L_483c52

  ; Code: .L_483c42:	 RIP: 483c42	 Bytes: 0
block_.L_483c42:

  ; Code: movl $0xffffffff, %eax	 RIP: 483c42	 Bytes: 5
  %loadMem_483c42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c42 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c42)
  store %struct.Memory* %call_483c42, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x218(%rbp)	 RIP: 483c47	 Bytes: 6
  %loadMem_483c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c47 = call %struct.Memory* @routine_movl__eax__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c47)
  store %struct.Memory* %call_483c47, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483c52	 RIP: 483c4d	 Bytes: 5
  %loadMem_483c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c4d = call %struct.Memory* @routine_jmpq_.L_483c52(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c4d, i64 5, i64 5)
  store %struct.Memory* %call_483c4d, %struct.Memory** %MEMORY

  br label %block_.L_483c52

  ; Code: .L_483c52:	 RIP: 483c52	 Bytes: 0
block_.L_483c52:

  ; Code: movl -0x218(%rbp), %eax	 RIP: 483c52	 Bytes: 6
  %loadMem_483c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c52 = call %struct.Memory* @routine_movl_MINUS0x218__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c52)
  store %struct.Memory* %call_483c52, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x118(%rbp)	 RIP: 483c58	 Bytes: 6
  %loadMem_483c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c58 = call %struct.Memory* @routine_movl__eax__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c58)
  store %struct.Memory* %call_483c58, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x138(%rbp)	 RIP: 483c5e	 Bytes: 7
  %loadMem_483c5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c5e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c5e)
  store %struct.Memory* %call_483c5e, %struct.Memory** %MEMORY

  ; Code: je .L_483c97	 RIP: 483c65	 Bytes: 6
  %loadMem_483c65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c65 = call %struct.Memory* @routine_je_.L_483c97(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c65, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_483c65, %struct.Memory** %MEMORY

  %loadBr_483c65 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483c65 = icmp eq i8 %loadBr_483c65, 1
  br i1 %cmpBr_483c65, label %block_.L_483c97, label %block_483c6b

block_483c6b:
  ; Code: movq 0x6cb900, %rax	 RIP: 483c6b	 Bytes: 8
  %loadMem_483c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c6b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c6b)
  store %struct.Memory* %call_483c6b, %struct.Memory** %MEMORY

  ; Code: movq 0x68(%rax), %rax	 RIP: 483c73	 Bytes: 4
  %loadMem_483c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c73 = call %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c73)
  store %struct.Memory* %call_483c73, %struct.Memory** %MEMORY

  ; Code: movslq -0x128(%rbp), %rcx	 RIP: 483c77	 Bytes: 7
  %loadMem_483c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c77 = call %struct.Memory* @routine_movslq_MINUS0x128__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c77)
  store %struct.Memory* %call_483c77, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 483c7e	 Bytes: 4
  %loadMem_483c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c7e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c7e)
  store %struct.Memory* %call_483c7e, %struct.Memory** %MEMORY

  ; Code: movslq -0x124(%rbp), %rcx	 RIP: 483c82	 Bytes: 7
  %loadMem_483c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c82 = call %struct.Memory* @routine_movslq_MINUS0x124__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c82)
  store %struct.Memory* %call_483c82, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 483c89	 Bytes: 3
  %loadMem_483c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c89 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c89)
  store %struct.Memory* %call_483c89, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x21c(%rbp)	 RIP: 483c8c	 Bytes: 6
  %loadMem_483c8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c8c = call %struct.Memory* @routine_movl__edx__MINUS0x21c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c8c)
  store %struct.Memory* %call_483c8c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483ca7	 RIP: 483c92	 Bytes: 5
  %loadMem_483c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c92 = call %struct.Memory* @routine_jmpq_.L_483ca7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c92, i64 21, i64 5)
  store %struct.Memory* %call_483c92, %struct.Memory** %MEMORY

  br label %block_.L_483ca7

  ; Code: .L_483c97:	 RIP: 483c97	 Bytes: 0
block_.L_483c97:

  ; Code: movl $0xffffffff, %eax	 RIP: 483c97	 Bytes: 5
  %loadMem_483c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c97 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c97)
  store %struct.Memory* %call_483c97, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x21c(%rbp)	 RIP: 483c9c	 Bytes: 6
  %loadMem_483c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483c9c = call %struct.Memory* @routine_movl__eax__MINUS0x21c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483c9c)
  store %struct.Memory* %call_483c9c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483ca7	 RIP: 483ca2	 Bytes: 5
  %loadMem_483ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ca2 = call %struct.Memory* @routine_jmpq_.L_483ca7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ca2, i64 5, i64 5)
  store %struct.Memory* %call_483ca2, %struct.Memory** %MEMORY

  br label %block_.L_483ca7

  ; Code: .L_483ca7:	 RIP: 483ca7	 Bytes: 0
block_.L_483ca7:

  ; Code: movl -0x21c(%rbp), %eax	 RIP: 483ca7	 Bytes: 6
  %loadMem_483ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ca7 = call %struct.Memory* @routine_movl_MINUS0x21c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ca7)
  store %struct.Memory* %call_483ca7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x11c(%rbp)	 RIP: 483cad	 Bytes: 6
  %loadMem_483cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cad = call %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cad)
  store %struct.Memory* %call_483cad, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x118(%rbp)	 RIP: 483cb3	 Bytes: 7
  %loadMem_483cb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cb3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cb3)
  store %struct.Memory* %call_483cb3, %struct.Memory** %MEMORY

  ; Code: jl .L_483ccd	 RIP: 483cba	 Bytes: 6
  %loadMem_483cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cba = call %struct.Memory* @routine_jl_.L_483ccd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cba, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_483cba, %struct.Memory** %MEMORY

  %loadBr_483cba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483cba = icmp eq i8 %loadBr_483cba, 1
  br i1 %cmpBr_483cba, label %block_.L_483ccd, label %block_483cc0

block_483cc0:
  ; Code: cmpl $0x0, -0x11c(%rbp)	 RIP: 483cc0	 Bytes: 7
  %loadMem_483cc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cc0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cc0)
  store %struct.Memory* %call_483cc0, %struct.Memory** %MEMORY

  ; Code: jge .L_483cdd	 RIP: 483cc7	 Bytes: 6
  %loadMem_483cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cc7 = call %struct.Memory* @routine_jge_.L_483cdd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cc7, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_483cc7, %struct.Memory** %MEMORY

  %loadBr_483cc7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483cc7 = icmp eq i8 %loadBr_483cc7, 1
  br i1 %cmpBr_483cc7, label %block_.L_483cdd, label %block_.L_483ccd

  ; Code: .L_483ccd:	 RIP: 483ccd	 Bytes: 0
block_.L_483ccd:

  ; Code: movl $0x2, %eax	 RIP: 483ccd	 Bytes: 5
  %loadMem_483ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ccd = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ccd)
  store %struct.Memory* %call_483ccd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x220(%rbp)	 RIP: 483cd2	 Bytes: 6
  %loadMem_483cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cd2 = call %struct.Memory* @routine_movl__eax__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cd2)
  store %struct.Memory* %call_483cd2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483d18	 RIP: 483cd8	 Bytes: 5
  %loadMem_483cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cd8 = call %struct.Memory* @routine_jmpq_.L_483d18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cd8, i64 64, i64 5)
  store %struct.Memory* %call_483cd8, %struct.Memory** %MEMORY

  br label %block_.L_483d18

  ; Code: .L_483cdd:	 RIP: 483cdd	 Bytes: 0
block_.L_483cdd:

  ; Code: movl -0x118(%rbp), %eax	 RIP: 483cdd	 Bytes: 6
  %loadMem_483cdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cdd = call %struct.Memory* @routine_movl_MINUS0x118__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cdd)
  store %struct.Memory* %call_483cdd, %struct.Memory** %MEMORY

  ; Code: cmpl -0x11c(%rbp), %eax	 RIP: 483ce3	 Bytes: 6
  %loadMem_483ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ce3 = call %struct.Memory* @routine_cmpl_MINUS0x11c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ce3)
  store %struct.Memory* %call_483ce3, %struct.Memory** %MEMORY

  ; Code: jge .L_483d00	 RIP: 483ce9	 Bytes: 6
  %loadMem_483ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ce9 = call %struct.Memory* @routine_jge_.L_483d00(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ce9, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_483ce9, %struct.Memory** %MEMORY

  %loadBr_483ce9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483ce9 = icmp eq i8 %loadBr_483ce9, 1
  br i1 %cmpBr_483ce9, label %block_.L_483d00, label %block_483cef

block_483cef:
  ; Code: movl -0x118(%rbp), %eax	 RIP: 483cef	 Bytes: 6
  %loadMem_483cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cef = call %struct.Memory* @routine_movl_MINUS0x118__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cef)
  store %struct.Memory* %call_483cef, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x224(%rbp)	 RIP: 483cf5	 Bytes: 6
  %loadMem_483cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cf5 = call %struct.Memory* @routine_movl__eax__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cf5)
  store %struct.Memory* %call_483cf5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483d0c	 RIP: 483cfb	 Bytes: 5
  %loadMem_483cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483cfb = call %struct.Memory* @routine_jmpq_.L_483d0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483cfb, i64 17, i64 5)
  store %struct.Memory* %call_483cfb, %struct.Memory** %MEMORY

  br label %block_.L_483d0c

  ; Code: .L_483d00:	 RIP: 483d00	 Bytes: 0
block_.L_483d00:

  ; Code: movl -0x11c(%rbp), %eax	 RIP: 483d00	 Bytes: 6
  %loadMem_483d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d00 = call %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d00)
  store %struct.Memory* %call_483d00, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x224(%rbp)	 RIP: 483d06	 Bytes: 6
  %loadMem_483d06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d06 = call %struct.Memory* @routine_movl__eax__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d06)
  store %struct.Memory* %call_483d06, %struct.Memory** %MEMORY

  ; Code: .L_483d0c:	 RIP: 483d0c	 Bytes: 0
  br label %block_.L_483d0c
block_.L_483d0c:

  ; Code: movl -0x224(%rbp), %eax	 RIP: 483d0c	 Bytes: 6
  %loadMem_483d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d0c = call %struct.Memory* @routine_movl_MINUS0x224__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d0c)
  store %struct.Memory* %call_483d0c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x220(%rbp)	 RIP: 483d12	 Bytes: 6
  %loadMem_483d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d12 = call %struct.Memory* @routine_movl__eax__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d12)
  store %struct.Memory* %call_483d12, %struct.Memory** %MEMORY

  ; Code: .L_483d18:	 RIP: 483d18	 Bytes: 0
  br label %block_.L_483d18
block_.L_483d18:

  ; Code: movl -0x220(%rbp), %eax	 RIP: 483d18	 Bytes: 6
  %loadMem_483d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d18 = call %struct.Memory* @routine_movl_MINUS0x220__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d18)
  store %struct.Memory* %call_483d18, %struct.Memory** %MEMORY

  ; Code: leaq -0x10c(%rbp), %rdx	 RIP: 483d1e	 Bytes: 7
  %loadMem_483d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d1e = call %struct.Memory* @routine_leaq_MINUS0x10c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d1e)
  store %struct.Memory* %call_483d1e, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rcx	 RIP: 483d25	 Bytes: 7
  %loadMem_483d25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d25 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d25)
  store %struct.Memory* %call_483d25, %struct.Memory** %MEMORY

  ; Code: leaq -0x114(%rbp), %r8	 RIP: 483d2c	 Bytes: 7
  %loadMem_483d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d2c = call %struct.Memory* @routine_leaq_MINUS0x114__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d2c)
  store %struct.Memory* %call_483d2c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x120(%rbp)	 RIP: 483d33	 Bytes: 6
  %loadMem_483d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d33 = call %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d33)
  store %struct.Memory* %call_483d33, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rsi	 RIP: 483d39	 Bytes: 4
  %loadMem_483d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d39 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d39)
  store %struct.Memory* %call_483d39, %struct.Memory** %MEMORY

  ; Code: movl $0x7fffffff, (%rsi)	 RIP: 483d3d	 Bytes: 6
  %loadMem_483d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d3d = call %struct.Memory* @routine_movl__0x7fffffff____rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d3d)
  store %struct.Memory* %call_483d3d, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %edi	 RIP: 483d43	 Bytes: 6
  %loadMem_483d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d43 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d43)
  store %struct.Memory* %call_483d43, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 483d49	 Bytes: 6
  %loadMem_483d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d49 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d49)
  store %struct.Memory* %call_483d49, %struct.Memory** %MEMORY

  ; Code: callq .intrapred_luma	 RIP: 483d4f	 Bytes: 5
  %loadMem1_483d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_483d4f = call %struct.Memory* @routine_callq_.intrapred_luma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_483d4f, i64 -530335, i64 5, i64 5)
  store %struct.Memory* %call1_483d4f, %struct.Memory** %MEMORY

  %loadMem2_483d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_483d4f = load i64, i64* %3
  %call2_483d4f = call %struct.Memory* @sub_4025b0.intrapred_luma(%struct.State* %0, i64  %loadPC_483d4f, %struct.Memory* %loadMem2_483d4f)
  store %struct.Memory* %call2_483d4f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x24(%rbp)	 RIP: 483d54	 Bytes: 7
  %loadMem_483d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d54 = call %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d54)
  store %struct.Memory* %call_483d54, %struct.Memory** %MEMORY

  ; Code: .L_483d5b:	 RIP: 483d5b	 Bytes: 0
  br label %block_.L_483d5b
block_.L_483d5b:

  ; Code: cmpl $0x9, -0x24(%rbp)	 RIP: 483d5b	 Bytes: 4
  %loadMem_483d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d5b = call %struct.Memory* @routine_cmpl__0x9__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d5b)
  store %struct.Memory* %call_483d5b, %struct.Memory** %MEMORY

  ; Code: jge .L_4856bf	 RIP: 483d5f	 Bytes: 6
  %loadMem_483d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d5f = call %struct.Memory* @routine_jge_.L_4856bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d5f, i8* %BRANCH_TAKEN, i64 6496, i64 6, i64 6)
  store %struct.Memory* %call_483d5f, %struct.Memory** %MEMORY

  %loadBr_483d5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483d5f = icmp eq i8 %loadBr_483d5f, 1
  br i1 %cmpBr_483d5f, label %block_.L_4856bf, label %block_483d65

block_483d65:
  ; Code: movb $0x1, %al	 RIP: 483d65	 Bytes: 2
  %loadMem_483d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d65 = call %struct.Memory* @routine_movb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d65)
  store %struct.Memory* %call_483d65, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x24(%rbp)	 RIP: 483d67	 Bytes: 4
  %loadMem_483d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d67 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d67)
  store %struct.Memory* %call_483d67, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x225(%rbp)	 RIP: 483d6b	 Bytes: 6
  %loadMem_483d6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d6b = call %struct.Memory* @routine_movb__al__MINUS0x225__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d6b)
  store %struct.Memory* %call_483d6b, %struct.Memory** %MEMORY

  ; Code: je .L_483de3	 RIP: 483d71	 Bytes: 6
  %loadMem_483d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d71 = call %struct.Memory* @routine_je_.L_483de3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d71, i8* %BRANCH_TAKEN, i64 114, i64 6, i64 6)
  store %struct.Memory* %call_483d71, %struct.Memory** %MEMORY

  %loadBr_483d71 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483d71 = icmp eq i8 %loadBr_483d71, 1
  br i1 %cmpBr_483d71, label %block_.L_483de3, label %block_483d77

block_483d77:
  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 483d77	 Bytes: 4
  %loadMem_483d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d77 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d77)
  store %struct.Memory* %call_483d77, %struct.Memory** %MEMORY

  ; Code: je .L_483d95	 RIP: 483d7b	 Bytes: 6
  %loadMem_483d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d7b = call %struct.Memory* @routine_je_.L_483d95(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d7b, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_483d7b, %struct.Memory** %MEMORY

  %loadBr_483d7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483d7b = icmp eq i8 %loadBr_483d7b, 1
  br i1 %cmpBr_483d7b, label %block_.L_483d95, label %block_483d81

block_483d81:
  ; Code: cmpl $0x7, -0x24(%rbp)	 RIP: 483d81	 Bytes: 4
  %loadMem_483d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d81 = call %struct.Memory* @routine_cmpl__0x7__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d81)
  store %struct.Memory* %call_483d81, %struct.Memory** %MEMORY

  ; Code: je .L_483d95	 RIP: 483d85	 Bytes: 6
  %loadMem_483d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d85 = call %struct.Memory* @routine_je_.L_483d95(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d85, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_483d85, %struct.Memory** %MEMORY

  %loadBr_483d85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483d85 = icmp eq i8 %loadBr_483d85, 1
  br i1 %cmpBr_483d85, label %block_.L_483d95, label %block_483d8b

block_483d8b:
  ; Code: cmpl $0x3, -0x24(%rbp)	 RIP: 483d8b	 Bytes: 4
  %loadMem_483d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d8b = call %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d8b)
  store %struct.Memory* %call_483d8b, %struct.Memory** %MEMORY

  ; Code: jne .L_483daa	 RIP: 483d8f	 Bytes: 6
  %loadMem_483d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d8f = call %struct.Memory* @routine_jne_.L_483daa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d8f, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_483d8f, %struct.Memory** %MEMORY

  %loadBr_483d8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483d8f = icmp eq i8 %loadBr_483d8f, 1
  br i1 %cmpBr_483d8f, label %block_.L_483daa, label %block_.L_483d95

  ; Code: .L_483d95:	 RIP: 483d95	 Bytes: 0
block_.L_483d95:

  ; Code: movb $0x1, %al	 RIP: 483d95	 Bytes: 2
  %loadMem_483d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d95 = call %struct.Memory* @routine_movb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d95)
  store %struct.Memory* %call_483d95, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x110(%rbp)	 RIP: 483d97	 Bytes: 7
  %loadMem_483d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d97 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d97)
  store %struct.Memory* %call_483d97, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x225(%rbp)	 RIP: 483d9e	 Bytes: 6
  %loadMem_483d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483d9e = call %struct.Memory* @routine_movb__al__MINUS0x225__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483d9e)
  store %struct.Memory* %call_483d9e, %struct.Memory** %MEMORY

  ; Code: jne .L_483de3	 RIP: 483da4	 Bytes: 6
  %loadMem_483da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483da4 = call %struct.Memory* @routine_jne_.L_483de3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483da4, i8* %BRANCH_TAKEN, i64 63, i64 6, i64 6)
  store %struct.Memory* %call_483da4, %struct.Memory** %MEMORY

  %loadBr_483da4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483da4 = icmp eq i8 %loadBr_483da4, 1
  br i1 %cmpBr_483da4, label %block_.L_483de3, label %block_.L_483daa

  ; Code: .L_483daa:	 RIP: 483daa	 Bytes: 0
block_.L_483daa:

  ; Code: cmpl $0x1, -0x24(%rbp)	 RIP: 483daa	 Bytes: 4
  %loadMem_483daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483daa = call %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483daa)
  store %struct.Memory* %call_483daa, %struct.Memory** %MEMORY

  ; Code: je .L_483dbe	 RIP: 483dae	 Bytes: 6
  %loadMem_483dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dae = call %struct.Memory* @routine_je_.L_483dbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dae, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_483dae, %struct.Memory** %MEMORY

  %loadBr_483dae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483dae = icmp eq i8 %loadBr_483dae, 1
  br i1 %cmpBr_483dae, label %block_.L_483dbe, label %block_483db4

block_483db4:
  ; Code: cmpl $0x8, -0x24(%rbp)	 RIP: 483db4	 Bytes: 4
  %loadMem_483db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483db4 = call %struct.Memory* @routine_cmpl__0x8__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483db4)
  store %struct.Memory* %call_483db4, %struct.Memory** %MEMORY

  ; Code: jne .L_483dd3	 RIP: 483db8	 Bytes: 6
  %loadMem_483db8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483db8 = call %struct.Memory* @routine_jne_.L_483dd3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483db8, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_483db8, %struct.Memory** %MEMORY

  %loadBr_483db8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483db8 = icmp eq i8 %loadBr_483db8, 1
  br i1 %cmpBr_483db8, label %block_.L_483dd3, label %block_.L_483dbe

  ; Code: .L_483dbe:	 RIP: 483dbe	 Bytes: 0
block_.L_483dbe:

  ; Code: movb $0x1, %al	 RIP: 483dbe	 Bytes: 2
  %loadMem_483dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dbe = call %struct.Memory* @routine_movb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dbe)
  store %struct.Memory* %call_483dbe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x10c(%rbp)	 RIP: 483dc0	 Bytes: 7
  %loadMem_483dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dc0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dc0)
  store %struct.Memory* %call_483dc0, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x225(%rbp)	 RIP: 483dc7	 Bytes: 6
  %loadMem_483dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dc7 = call %struct.Memory* @routine_movb__al__MINUS0x225__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dc7)
  store %struct.Memory* %call_483dc7, %struct.Memory** %MEMORY

  ; Code: jne .L_483de3	 RIP: 483dcd	 Bytes: 6
  %loadMem_483dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dcd = call %struct.Memory* @routine_jne_.L_483de3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dcd, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_483dcd, %struct.Memory** %MEMORY

  %loadBr_483dcd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483dcd = icmp eq i8 %loadBr_483dcd, 1
  br i1 %cmpBr_483dcd, label %block_.L_483de3, label %block_.L_483dd3

  ; Code: .L_483dd3:	 RIP: 483dd3	 Bytes: 0
block_.L_483dd3:

  ; Code: cmpl $0x0, -0x114(%rbp)	 RIP: 483dd3	 Bytes: 7
  %loadMem_483dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dd3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dd3)
  store %struct.Memory* %call_483dd3, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 483dda	 Bytes: 3
  %loadMem_483dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dda = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dda)
  store %struct.Memory* %call_483dda, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x225(%rbp)	 RIP: 483ddd	 Bytes: 6
  %loadMem_483ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ddd = call %struct.Memory* @routine_movb__al__MINUS0x225__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ddd)
  store %struct.Memory* %call_483ddd, %struct.Memory** %MEMORY

  ; Code: .L_483de3:	 RIP: 483de3	 Bytes: 0
  br label %block_.L_483de3
block_.L_483de3:

  ; Code: movb -0x225(%rbp), %al	 RIP: 483de3	 Bytes: 6
  %loadMem_483de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483de3 = call %struct.Memory* @routine_movb_MINUS0x225__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483de3)
  store %struct.Memory* %call_483de3, %struct.Memory** %MEMORY

  ; Code: andb $0x1, %al	 RIP: 483de9	 Bytes: 2
  %loadMem_483de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483de9 = call %struct.Memory* @routine_andb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483de9)
  store %struct.Memory* %call_483de9, %struct.Memory** %MEMORY

  ; Code: movzbl %al, %ecx	 RIP: 483deb	 Bytes: 3
  %loadMem_483deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483deb = call %struct.Memory* @routine_movzbl__al___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483deb)
  store %struct.Memory* %call_483deb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1f4(%rbp)	 RIP: 483dee	 Bytes: 6
  %loadMem_483dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dee = call %struct.Memory* @routine_movl__ecx__MINUS0x1f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dee)
  store %struct.Memory* %call_483dee, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rdx	 RIP: 483df4	 Bytes: 8
  %loadMem_483df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483df4 = call %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483df4)
  store %struct.Memory* %call_483df4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x95c(%rdx)	 RIP: 483dfc	 Bytes: 7
  %loadMem_483dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483dfc = call %struct.Memory* @routine_cmpl__0x0__0x95c__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483dfc)
  store %struct.Memory* %call_483dfc, %struct.Memory** %MEMORY

  ; Code: je .L_483e1b	 RIP: 483e03	 Bytes: 6
  %loadMem_483e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e03 = call %struct.Memory* @routine_je_.L_483e1b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e03, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_483e03, %struct.Memory** %MEMORY

  %loadBr_483e03 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e03 = icmp eq i8 %loadBr_483e03, 1
  br i1 %cmpBr_483e03, label %block_.L_483e1b, label %block_483e09

block_483e09:
  ; Code: movq 0x6cb900, %rax	 RIP: 483e09	 Bytes: 8
  %loadMem_483e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e09 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e09)
  store %struct.Memory* %call_483e09, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, 0x18(%rax)	 RIP: 483e11	 Bytes: 4
  %loadMem_483e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e11 = call %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e11)
  store %struct.Memory* %call_483e11, %struct.Memory** %MEMORY

  ; Code: je .L_483ea0	 RIP: 483e15	 Bytes: 6
  %loadMem_483e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e15 = call %struct.Memory* @routine_je_.L_483ea0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e15, i8* %BRANCH_TAKEN, i64 139, i64 6, i64 6)
  store %struct.Memory* %call_483e15, %struct.Memory** %MEMORY

  %loadBr_483e15 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e15 = icmp eq i8 %loadBr_483e15, 1
  br i1 %cmpBr_483e15, label %block_.L_483ea0, label %block_.L_483e1b

  ; Code: .L_483e1b:	 RIP: 483e1b	 Bytes: 0
block_.L_483e1b:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 483e1b	 Bytes: 8
  %loadMem_483e1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e1b = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e1b)
  store %struct.Memory* %call_483e1b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x960(%rax)	 RIP: 483e23	 Bytes: 7
  %loadMem_483e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e23 = call %struct.Memory* @routine_cmpl__0x0__0x960__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e23)
  store %struct.Memory* %call_483e23, %struct.Memory** %MEMORY

  ; Code: je .L_483e49	 RIP: 483e2a	 Bytes: 6
  %loadMem_483e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e2a = call %struct.Memory* @routine_je_.L_483e49(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e2a, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_483e2a, %struct.Memory** %MEMORY

  %loadBr_483e2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e2a = icmp eq i8 %loadBr_483e2a, 1
  br i1 %cmpBr_483e2a, label %block_.L_483e49, label %block_483e30

block_483e30:
  ; Code: cmpl $0x0, -0x24(%rbp)	 RIP: 483e30	 Bytes: 4
  %loadMem_483e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e30 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e30)
  store %struct.Memory* %call_483e30, %struct.Memory** %MEMORY

  ; Code: je .L_483e44	 RIP: 483e34	 Bytes: 6
  %loadMem_483e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e34 = call %struct.Memory* @routine_je_.L_483e44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e34, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_483e34, %struct.Memory** %MEMORY

  %loadBr_483e34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e34 = icmp eq i8 %loadBr_483e34, 1
  br i1 %cmpBr_483e34, label %block_.L_483e44, label %block_483e3a

block_483e3a:
  ; Code: cmpl $0x1, -0x24(%rbp)	 RIP: 483e3a	 Bytes: 4
  %loadMem_483e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e3a = call %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e3a)
  store %struct.Memory* %call_483e3a, %struct.Memory** %MEMORY

  ; Code: jne .L_483e49	 RIP: 483e3e	 Bytes: 6
  %loadMem_483e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e3e = call %struct.Memory* @routine_jne_.L_483e49(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e3e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_483e3e, %struct.Memory** %MEMORY

  %loadBr_483e3e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e3e = icmp eq i8 %loadBr_483e3e, 1
  br i1 %cmpBr_483e3e, label %block_.L_483e49, label %block_.L_483e44

  ; Code: .L_483e44:	 RIP: 483e44	 Bytes: 0
block_.L_483e44:

  ; Code: jmpq .L_4856b1	 RIP: 483e44	 Bytes: 5
  %loadMem_483e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e44 = call %struct.Memory* @routine_jmpq_.L_4856b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e44, i64 6253, i64 5)
  store %struct.Memory* %call_483e44, %struct.Memory** %MEMORY

  br label %block_.L_4856b1

  ; Code: .L_483e49:	 RIP: 483e49	 Bytes: 0
block_.L_483e49:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 483e49	 Bytes: 8
  %loadMem_483e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e49 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e49)
  store %struct.Memory* %call_483e49, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x964(%rax)	 RIP: 483e51	 Bytes: 7
  %loadMem_483e51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e51 = call %struct.Memory* @routine_cmpl__0x0__0x964__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e51)
  store %struct.Memory* %call_483e51, %struct.Memory** %MEMORY

  ; Code: je .L_483e77	 RIP: 483e58	 Bytes: 6
  %loadMem_483e58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e58 = call %struct.Memory* @routine_je_.L_483e77(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e58, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_483e58, %struct.Memory** %MEMORY

  %loadBr_483e58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e58 = icmp eq i8 %loadBr_483e58, 1
  br i1 %cmpBr_483e58, label %block_.L_483e77, label %block_483e5e

block_483e5e:
  ; Code: cmpl $0x3, -0x24(%rbp)	 RIP: 483e5e	 Bytes: 4
  %loadMem_483e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e5e = call %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e5e)
  store %struct.Memory* %call_483e5e, %struct.Memory** %MEMORY

  ; Code: je .L_483e72	 RIP: 483e62	 Bytes: 6
  %loadMem_483e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e62 = call %struct.Memory* @routine_je_.L_483e72(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e62, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_483e62, %struct.Memory** %MEMORY

  %loadBr_483e62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e62 = icmp eq i8 %loadBr_483e62, 1
  br i1 %cmpBr_483e62, label %block_.L_483e72, label %block_483e68

block_483e68:
  ; Code: cmpl $0x4, -0x24(%rbp)	 RIP: 483e68	 Bytes: 4
  %loadMem_483e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e68 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e68)
  store %struct.Memory* %call_483e68, %struct.Memory** %MEMORY

  ; Code: jne .L_483e77	 RIP: 483e6c	 Bytes: 6
  %loadMem_483e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e6c = call %struct.Memory* @routine_jne_.L_483e77(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e6c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_483e6c, %struct.Memory** %MEMORY

  %loadBr_483e6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e6c = icmp eq i8 %loadBr_483e6c, 1
  br i1 %cmpBr_483e6c, label %block_.L_483e77, label %block_.L_483e72

  ; Code: .L_483e72:	 RIP: 483e72	 Bytes: 0
block_.L_483e72:

  ; Code: jmpq .L_4856b1	 RIP: 483e72	 Bytes: 5
  %loadMem_483e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e72 = call %struct.Memory* @routine_jmpq_.L_4856b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e72, i64 6207, i64 5)
  store %struct.Memory* %call_483e72, %struct.Memory** %MEMORY

  br label %block_.L_4856b1

  ; Code: .L_483e77:	 RIP: 483e77	 Bytes: 0
block_.L_483e77:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 483e77	 Bytes: 8
  %loadMem_483e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e77 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e77)
  store %struct.Memory* %call_483e77, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x968(%rax)	 RIP: 483e7f	 Bytes: 7
  %loadMem_483e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e7f = call %struct.Memory* @routine_cmpl__0x0__0x968__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e7f)
  store %struct.Memory* %call_483e7f, %struct.Memory** %MEMORY

  ; Code: je .L_483e9b	 RIP: 483e86	 Bytes: 6
  %loadMem_483e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e86 = call %struct.Memory* @routine_je_.L_483e9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e86, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_483e86, %struct.Memory** %MEMORY

  %loadBr_483e86 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e86 = icmp eq i8 %loadBr_483e86, 1
  br i1 %cmpBr_483e86, label %block_.L_483e9b, label %block_483e8c

block_483e8c:
  ; Code: cmpl $0x5, -0x24(%rbp)	 RIP: 483e8c	 Bytes: 4
  %loadMem_483e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e8c = call %struct.Memory* @routine_cmpl__0x5__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e8c)
  store %struct.Memory* %call_483e8c, %struct.Memory** %MEMORY

  ; Code: jl .L_483e9b	 RIP: 483e90	 Bytes: 6
  %loadMem_483e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e90 = call %struct.Memory* @routine_jl_.L_483e9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e90, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_483e90, %struct.Memory** %MEMORY

  %loadBr_483e90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483e90 = icmp eq i8 %loadBr_483e90, 1
  br i1 %cmpBr_483e90, label %block_.L_483e9b, label %block_483e96

block_483e96:
  ; Code: jmpq .L_4856b1	 RIP: 483e96	 Bytes: 5
  %loadMem_483e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e96 = call %struct.Memory* @routine_jmpq_.L_4856b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e96, i64 6171, i64 5)
  store %struct.Memory* %call_483e96, %struct.Memory** %MEMORY

  br label %block_.L_4856b1

  ; Code: .L_483e9b:	 RIP: 483e9b	 Bytes: 0
block_.L_483e9b:

  ; Code: jmpq .L_483ea0	 RIP: 483e9b	 Bytes: 5
  %loadMem_483e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483e9b = call %struct.Memory* @routine_jmpq_.L_483ea0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483e9b, i64 5, i64 5)
  store %struct.Memory* %call_483e9b, %struct.Memory** %MEMORY

  br label %block_.L_483ea0

  ; Code: .L_483ea0:	 RIP: 483ea0	 Bytes: 0
block_.L_483ea0:

  ; Code: cmpl $0x0, -0x1f4(%rbp)	 RIP: 483ea0	 Bytes: 7
  %loadMem_483ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ea0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x1f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ea0)
  store %struct.Memory* %call_483ea0, %struct.Memory** %MEMORY

  ; Code: je .L_4856ac	 RIP: 483ea7	 Bytes: 6
  %loadMem_483ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ea7 = call %struct.Memory* @routine_je_.L_4856ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ea7, i8* %BRANCH_TAKEN, i64 6149, i64 6, i64 6)
  store %struct.Memory* %call_483ea7, %struct.Memory** %MEMORY

  %loadBr_483ea7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483ea7 = icmp eq i8 %loadBr_483ea7, 1
  br i1 %cmpBr_483ea7, label %block_.L_4856ac, label %block_483ead

block_483ead:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 483ead	 Bytes: 8
  %loadMem_483ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ead = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ead)
  store %struct.Memory* %call_483ead, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x9a0(%rax)	 RIP: 483eb5	 Bytes: 7
  %loadMem_483eb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483eb5 = call %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483eb5)
  store %struct.Memory* %call_483eb5, %struct.Memory** %MEMORY

  ; Code: jne .L_483ff7	 RIP: 483ebc	 Bytes: 6
  %loadMem_483ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ebc = call %struct.Memory* @routine_jne_.L_483ff7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ebc, i8* %BRANCH_TAKEN, i64 315, i64 6, i64 6)
  store %struct.Memory* %call_483ebc, %struct.Memory** %MEMORY

  %loadBr_483ebc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483ebc = icmp eq i8 %loadBr_483ebc, 1
  br i1 %cmpBr_483ebc, label %block_.L_483ff7, label %block_483ec2

block_483ec2:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 483ec2	 Bytes: 7
  %loadMem_483ec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ec2 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ec2)
  store %struct.Memory* %call_483ec2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x34(%rbp)	 RIP: 483ec9	 Bytes: 7
  %loadMem_483ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ec9 = call %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ec9)
  store %struct.Memory* %call_483ec9, %struct.Memory** %MEMORY

  ; Code: .L_483ed0:	 RIP: 483ed0	 Bytes: 0
  br label %block_.L_483ed0
block_.L_483ed0:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 483ed0	 Bytes: 4
  %loadMem_483ed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ed0 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ed0)
  store %struct.Memory* %call_483ed0, %struct.Memory** %MEMORY

  ; Code: jge .L_483f76	 RIP: 483ed4	 Bytes: 6
  %loadMem_483ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ed4 = call %struct.Memory* @routine_jge_.L_483f76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ed4, i8* %BRANCH_TAKEN, i64 162, i64 6, i64 6)
  store %struct.Memory* %call_483ed4, %struct.Memory** %MEMORY

  %loadBr_483ed4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483ed4 = icmp eq i8 %loadBr_483ed4, 1
  br i1 %cmpBr_483ed4, label %block_.L_483f76, label %block_483eda

block_483eda:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 483eda	 Bytes: 7
  %loadMem_483eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483eda = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483eda)
  store %struct.Memory* %call_483eda, %struct.Memory** %MEMORY

  ; Code: .L_483ee1:	 RIP: 483ee1	 Bytes: 0
  br label %block_.L_483ee1
block_.L_483ee1:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 483ee1	 Bytes: 4
  %loadMem_483ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ee1 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ee1)
  store %struct.Memory* %call_483ee1, %struct.Memory** %MEMORY

  ; Code: jge .L_483f63	 RIP: 483ee5	 Bytes: 6
  %loadMem_483ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ee5 = call %struct.Memory* @routine_jge_.L_483f63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ee5, i8* %BRANCH_TAKEN, i64 126, i64 6, i64 6)
  store %struct.Memory* %call_483ee5, %struct.Memory** %MEMORY

  %loadBr_483ee5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483ee5 = icmp eq i8 %loadBr_483ee5, 1
  br i1 %cmpBr_483ee5, label %block_.L_483f63, label %block_483eeb

block_483eeb:
  ; Code: movq 0x726418, %rax	 RIP: 483eeb	 Bytes: 8
  %loadMem_483eeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483eeb = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483eeb)
  store %struct.Memory* %call_483eeb, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %ecx	 RIP: 483ef3	 Bytes: 6
  %loadMem_483ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ef3 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ef3)
  store %struct.Memory* %call_483ef3, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %ecx	 RIP: 483ef9	 Bytes: 3
  %loadMem_483ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ef9 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ef9)
  store %struct.Memory* %call_483ef9, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 483efc	 Bytes: 3
  %loadMem_483efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483efc = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483efc)
  store %struct.Memory* %call_483efc, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 483eff	 Bytes: 4
  %loadMem_483eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483eff = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483eff)
  store %struct.Memory* %call_483eff, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %ecx	 RIP: 483f03	 Bytes: 6
  %loadMem_483f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f03 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f03)
  store %struct.Memory* %call_483f03, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %ecx	 RIP: 483f09	 Bytes: 3
  %loadMem_483f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f09 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f09)
  store %struct.Memory* %call_483f09, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 483f0c	 Bytes: 3
  %loadMem_483f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f0c = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f0c)
  store %struct.Memory* %call_483f0c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 483f0f	 Bytes: 4
  %loadMem_483f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f0f = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f0f)
  store %struct.Memory* %call_483f0f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 483f13	 Bytes: 8
  %loadMem_483f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f13 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f13)
  store %struct.Memory* %call_483f13, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rax	 RIP: 483f1b	 Bytes: 6
  %loadMem_483f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f1b = call %struct.Memory* @routine_addq__0xb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f1b)
  store %struct.Memory* %call_483f1b, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 483f21	 Bytes: 4
  %loadMem_483f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f21 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f21)
  store %struct.Memory* %call_483f21, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 483f25	 Bytes: 4
  %loadMem_483f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f25 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f25)
  store %struct.Memory* %call_483f25, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 483f29	 Bytes: 3
  %loadMem_483f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f29 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f29)
  store %struct.Memory* %call_483f29, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 483f2c	 Bytes: 4
  %loadMem_483f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f2c = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f2c)
  store %struct.Memory* %call_483f2c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 483f30	 Bytes: 4
  %loadMem_483f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f30 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f30)
  store %struct.Memory* %call_483f30, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 483f34	 Bytes: 3
  %loadMem_483f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f34 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f34)
  store %struct.Memory* %call_483f34, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 483f37	 Bytes: 4
  %loadMem_483f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f37 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f37)
  store %struct.Memory* %call_483f37, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 483f3b	 Bytes: 4
  %loadMem_483f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f3b = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f3b)
  store %struct.Memory* %call_483f3b, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 483f3f	 Bytes: 2
  %loadMem_483f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f3f = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f3f)
  store %struct.Memory* %call_483f3f, %struct.Memory** %MEMORY

  ; Code: movslq -0x34(%rbp), %rax	 RIP: 483f41	 Bytes: 4
  %loadMem_483f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f41 = call %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f41)
  store %struct.Memory* %call_483f41, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xd0(%rbp,%rax,4)	 RIP: 483f45	 Bytes: 7
  %loadMem_483f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f45 = call %struct.Memory* @routine_movl__ecx__MINUS0xd0__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f45)
  store %struct.Memory* %call_483f45, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 483f4c	 Bytes: 3
  %loadMem_483f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f4c = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f4c)
  store %struct.Memory* %call_483f4c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 483f4f	 Bytes: 3
  %loadMem_483f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f4f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f4f)
  store %struct.Memory* %call_483f4f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 483f52	 Bytes: 3
  %loadMem_483f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f52 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f52)
  store %struct.Memory* %call_483f52, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 483f55	 Bytes: 3
  %loadMem_483f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f55 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f55)
  store %struct.Memory* %call_483f55, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 483f58	 Bytes: 3
  %loadMem_483f58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f58 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f58)
  store %struct.Memory* %call_483f58, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x34(%rbp)	 RIP: 483f5b	 Bytes: 3
  %loadMem_483f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f5b = call %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f5b)
  store %struct.Memory* %call_483f5b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483ee1	 RIP: 483f5e	 Bytes: 5
  %loadMem_483f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f5e = call %struct.Memory* @routine_jmpq_.L_483ee1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f5e, i64 -125, i64 5)
  store %struct.Memory* %call_483f5e, %struct.Memory** %MEMORY

  br label %block_.L_483ee1

  ; Code: .L_483f63:	 RIP: 483f63	 Bytes: 0
block_.L_483f63:

  ; Code: jmpq .L_483f68	 RIP: 483f63	 Bytes: 5
  %loadMem_483f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f63 = call %struct.Memory* @routine_jmpq_.L_483f68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f63, i64 5, i64 5)
  store %struct.Memory* %call_483f63, %struct.Memory** %MEMORY

  br label %block_.L_483f68

  ; Code: .L_483f68:	 RIP: 483f68	 Bytes: 0
block_.L_483f68:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 483f68	 Bytes: 3
  %loadMem_483f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f68 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f68)
  store %struct.Memory* %call_483f68, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 483f6b	 Bytes: 3
  %loadMem_483f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f6b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f6b)
  store %struct.Memory* %call_483f6b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 483f6e	 Bytes: 3
  %loadMem_483f6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f6e = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f6e)
  store %struct.Memory* %call_483f6e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483ed0	 RIP: 483f71	 Bytes: 5
  %loadMem_483f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f71 = call %struct.Memory* @routine_jmpq_.L_483ed0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f71, i64 -161, i64 5)
  store %struct.Memory* %call_483f71, %struct.Memory** %MEMORY

  br label %block_.L_483ed0

  ; Code: .L_483f76:	 RIP: 483f76	 Bytes: 0
block_.L_483f76:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 483f76	 Bytes: 3
  %loadMem_483f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f76 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f76)
  store %struct.Memory* %call_483f76, %struct.Memory** %MEMORY

  ; Code: cmpl -0x120(%rbp), %eax	 RIP: 483f79	 Bytes: 6
  %loadMem_483f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f79 = call %struct.Memory* @routine_cmpl_MINUS0x120__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f79)
  store %struct.Memory* %call_483f79, %struct.Memory** %MEMORY

  ; Code: jne .L_483f92	 RIP: 483f7f	 Bytes: 6
  %loadMem_483f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f7f = call %struct.Memory* @routine_jne_.L_483f92(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f7f, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_483f7f, %struct.Memory** %MEMORY

  %loadBr_483f7f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483f7f = icmp eq i8 %loadBr_483f7f, 1
  br i1 %cmpBr_483f7f, label %block_.L_483f92, label %block_483f85

block_483f85:
  ; Code: xorl %eax, %eax	 RIP: 483f85	 Bytes: 2
  %loadMem_483f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f85 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f85)
  store %struct.Memory* %call_483f85, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x22c(%rbp)	 RIP: 483f87	 Bytes: 6
  %loadMem_483f87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f87 = call %struct.Memory* @routine_movl__eax__MINUS0x22c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f87)
  store %struct.Memory* %call_483f87, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483fae	 RIP: 483f8d	 Bytes: 5
  %loadMem_483f8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f8d = call %struct.Memory* @routine_jmpq_.L_483fae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f8d, i64 33, i64 5)
  store %struct.Memory* %call_483f8d, %struct.Memory** %MEMORY

  br label %block_.L_483fae

  ; Code: .L_483f92:	 RIP: 483f92	 Bytes: 0
block_.L_483f92:

  ; Code: movsd 0x2d89e(%rip), %xmm0	 RIP: 483f92	 Bytes: 8
  %loadMem_483f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f92 = call %struct.Memory* @routine_movsd_0x2d89e__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f92)
  store %struct.Memory* %call_483f92, %struct.Memory** %MEMORY

  ; Code: mulsd -0x18(%rbp), %xmm0	 RIP: 483f9a	 Bytes: 5
  %loadMem_483f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483f9a = call %struct.Memory* @routine_mulsd_MINUS0x18__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483f9a)
  store %struct.Memory* %call_483f9a, %struct.Memory** %MEMORY

  ; Code: callq .floor_plt	 RIP: 483f9f	 Bytes: 5
  %loadMem1_483f9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_483f9f = call %struct.Memory* @routine_callq_.floor_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_483f9f, i64 -536047, i64 5, i64 5)
  store %struct.Memory* %call1_483f9f, %struct.Memory** %MEMORY

  %loadMem2_483f9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_483f9f = load i64, i64* %3
  %call2_483f9f = call %struct.Memory* @ext_floor(%struct.State* %0, i64  %loadPC_483f9f, %struct.Memory* %loadMem2_483f9f)
  store %struct.Memory* %call2_483f9f, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %eax	 RIP: 483fa4	 Bytes: 4
  %loadMem_483fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fa4 = call %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fa4)
  store %struct.Memory* %call_483fa4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x22c(%rbp)	 RIP: 483fa8	 Bytes: 6
  %loadMem_483fa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fa8 = call %struct.Memory* @routine_movl__eax__MINUS0x22c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fa8)
  store %struct.Memory* %call_483fa8, %struct.Memory** %MEMORY

  ; Code: .L_483fae:	 RIP: 483fae	 Bytes: 0
  br label %block_.L_483fae
block_.L_483fae:

  ; Code: movl -0x22c(%rbp), %eax	 RIP: 483fae	 Bytes: 6
  %loadMem_483fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fae = call %struct.Memory* @routine_movl_MINUS0x22c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fae)
  store %struct.Memory* %call_483fae, %struct.Memory** %MEMORY

  ; Code: leaq -0xd0(%rbp), %rdi	 RIP: 483fb4	 Bytes: 7
  %loadMem_483fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fb4 = call %struct.Memory* @routine_leaq_MINUS0xd0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fb4)
  store %struct.Memory* %call_483fb4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 483fbb	 Bytes: 3
  %loadMem_483fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fbb = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fbb)
  store %struct.Memory* %call_483fbb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 483fbe	 Bytes: 8
  %loadMem_483fbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fbe = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fbe)
  store %struct.Memory* %call_483fbe, %struct.Memory** %MEMORY

  ; Code: movl 0x18(%rcx), %esi	 RIP: 483fc6	 Bytes: 3
  %loadMem_483fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fc6 = call %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fc6)
  store %struct.Memory* %call_483fc6, %struct.Memory** %MEMORY

  ; Code: callq .SATD	 RIP: 483fc9	 Bytes: 5
  %loadMem1_483fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_483fc9 = call %struct.Memory* @routine_callq_.SATD(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_483fc9, i64 -151113, i64 5, i64 5)
  store %struct.Memory* %call1_483fc9, %struct.Memory** %MEMORY

  %loadMem2_483fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_483fc9 = load i64, i64* %3
  %call2_483fc9 = call %struct.Memory* @sub_45f180.SATD(%struct.State* %0, i64  %loadPC_483fc9, %struct.Memory* %loadMem2_483fc9)
  store %struct.Memory* %call2_483fc9, %struct.Memory** %MEMORY

  ; Code: addl -0x40(%rbp), %eax	 RIP: 483fce	 Bytes: 3
  %loadMem_483fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fce = call %struct.Memory* @routine_addl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fce)
  store %struct.Memory* %call_483fce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40(%rbp)	 RIP: 483fd1	 Bytes: 3
  %loadMem_483fd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fd1 = call %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fd1)
  store %struct.Memory* %call_483fd1, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 483fd4	 Bytes: 3
  %loadMem_483fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fd4 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fd4)
  store %struct.Memory* %call_483fd4, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 483fd7	 Bytes: 4
  %loadMem_483fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fd7 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fd7)
  store %struct.Memory* %call_483fd7, %struct.Memory** %MEMORY

  ; Code: cmpl (%rcx), %eax	 RIP: 483fdb	 Bytes: 2
  %loadMem_483fdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fdb = call %struct.Memory* @routine_cmpl___rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fdb)
  store %struct.Memory* %call_483fdb, %struct.Memory** %MEMORY

  ; Code: jge .L_483ff2	 RIP: 483fdd	 Bytes: 6
  %loadMem_483fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fdd = call %struct.Memory* @routine_jge_.L_483ff2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fdd, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_483fdd, %struct.Memory** %MEMORY

  %loadBr_483fdd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_483fdd = icmp eq i8 %loadBr_483fdd, 1
  br i1 %cmpBr_483fdd, label %block_.L_483ff2, label %block_483fe3

block_483fe3:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 483fe3	 Bytes: 3
  %loadMem_483fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fe3 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fe3)
  store %struct.Memory* %call_483fe3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 483fe6	 Bytes: 3
  %loadMem_483fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fe6 = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fe6)
  store %struct.Memory* %call_483fe6, %struct.Memory** %MEMORY

  ; Code: movl -0x40(%rbp), %eax	 RIP: 483fe9	 Bytes: 3
  %loadMem_483fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fe9 = call %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fe9)
  store %struct.Memory* %call_483fe9, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rcx	 RIP: 483fec	 Bytes: 4
  %loadMem_483fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fec = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fec)
  store %struct.Memory* %call_483fec, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 483ff0	 Bytes: 2
  %loadMem_483ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ff0 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ff0)
  store %struct.Memory* %call_483ff0, %struct.Memory** %MEMORY

  ; Code: .L_483ff2:	 RIP: 483ff2	 Bytes: 0
  br label %block_.L_483ff2
block_.L_483ff2:

  ; Code: jmpq .L_4856a7	 RIP: 483ff2	 Bytes: 5
  %loadMem_483ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ff2 = call %struct.Memory* @routine_jmpq_.L_4856a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ff2, i64 5813, i64 5)
  store %struct.Memory* %call_483ff2, %struct.Memory** %MEMORY

  br label %block_.L_4856a7

  ; Code: .L_483ff7:	 RIP: 483ff7	 Bytes: 0
block_.L_483ff7:

  ; Code: movq 0x6cb900, %rax	 RIP: 483ff7	 Bytes: 8
  %loadMem_483ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483ff7 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483ff7)
  store %struct.Memory* %call_483ff7, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 483fff	 Bytes: 7
  %loadMem_483fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_483fff = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_483fff)
  store %struct.Memory* %call_483fff, %struct.Memory** %MEMORY

  ; Code: jne .L_4842e1	 RIP: 484006	 Bytes: 6
  %loadMem_484006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484006 = call %struct.Memory* @routine_jne_.L_4842e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484006, i8* %BRANCH_TAKEN, i64 731, i64 6, i64 6)
  store %struct.Memory* %call_484006, %struct.Memory** %MEMORY

  %loadBr_484006 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484006 = icmp eq i8 %loadBr_484006, 1
  br i1 %cmpBr_484006, label %block_.L_4842e1, label %block_48400c

block_48400c:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 48400c	 Bytes: 7
  %loadMem_48400c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48400c = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48400c)
  store %struct.Memory* %call_48400c, %struct.Memory** %MEMORY

  ; Code: .L_484013:	 RIP: 484013	 Bytes: 0
  br label %block_.L_484013
block_.L_484013:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 484013	 Bytes: 4
  %loadMem_484013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484013 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484013)
  store %struct.Memory* %call_484013, %struct.Memory** %MEMORY

  ; Code: jge .L_484122	 RIP: 484017	 Bytes: 6
  %loadMem_484017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484017 = call %struct.Memory* @routine_jge_.L_484122(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484017, i8* %BRANCH_TAKEN, i64 267, i64 6, i64 6)
  store %struct.Memory* %call_484017, %struct.Memory** %MEMORY

  %loadBr_484017 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484017 = icmp eq i8 %loadBr_484017, 1
  br i1 %cmpBr_484017, label %block_.L_484122, label %block_48401d

block_48401d:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 48401d	 Bytes: 7
  %loadMem_48401d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48401d = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48401d)
  store %struct.Memory* %call_48401d, %struct.Memory** %MEMORY

  ; Code: .L_484024:	 RIP: 484024	 Bytes: 0
  br label %block_.L_484024
block_.L_484024:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 484024	 Bytes: 4
  %loadMem_484024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484024 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484024)
  store %struct.Memory* %call_484024, %struct.Memory** %MEMORY

  ; Code: jge .L_48410f	 RIP: 484028	 Bytes: 6
  %loadMem_484028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484028 = call %struct.Memory* @routine_jge_.L_48410f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484028, i8* %BRANCH_TAKEN, i64 231, i64 6, i64 6)
  store %struct.Memory* %call_484028, %struct.Memory** %MEMORY

  %loadBr_484028 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484028 = icmp eq i8 %loadBr_484028, 1
  br i1 %cmpBr_484028, label %block_.L_48410f, label %block_48402e

block_48402e:
  ; Code: movq 0x6cb900, %rax	 RIP: 48402e	 Bytes: 8
  %loadMem_48402e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48402e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48402e)
  store %struct.Memory* %call_48402e, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rax	 RIP: 484036	 Bytes: 6
  %loadMem_484036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484036 = call %struct.Memory* @routine_addq__0xb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484036)
  store %struct.Memory* %call_484036, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rcx	 RIP: 48403c	 Bytes: 4
  %loadMem_48403c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48403c = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48403c)
  store %struct.Memory* %call_48403c, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rcx	 RIP: 484040	 Bytes: 4
  %loadMem_484040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484040 = call %struct.Memory* @routine_shlq__0x9___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484040)
  store %struct.Memory* %call_484040, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 484044	 Bytes: 3
  %loadMem_484044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484044 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484044)
  store %struct.Memory* %call_484044, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 484047	 Bytes: 4
  %loadMem_484047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484047 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484047)
  store %struct.Memory* %call_484047, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 48404b	 Bytes: 4
  %loadMem_48404b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48404b = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48404b)
  store %struct.Memory* %call_48404b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48404f	 Bytes: 3
  %loadMem_48404f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48404f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48404f)
  store %struct.Memory* %call_48404f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484052	 Bytes: 4
  %loadMem_484052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484052 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484052)
  store %struct.Memory* %call_484052, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %dx	 RIP: 484056	 Bytes: 4
  %loadMem_484056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484056 = call %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484056)
  store %struct.Memory* %call_484056, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 48405a	 Bytes: 8
  %loadMem_48405a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48405a = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48405a)
  store %struct.Memory* %call_48405a, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rax	 RIP: 484062	 Bytes: 6
  %loadMem_484062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484062 = call %struct.Memory* @routine_addq__0x3138___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484062)
  store %struct.Memory* %call_484062, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 484068	 Bytes: 6
  %loadMem_484068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484068 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484068)
  store %struct.Memory* %call_484068, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 48406e	 Bytes: 3
  %loadMem_48406e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48406e = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48406e)
  store %struct.Memory* %call_48406e, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 484071	 Bytes: 3
  %loadMem_484071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484071 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484071)
  store %struct.Memory* %call_484071, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 484074	 Bytes: 4
  %loadMem_484074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484074 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484074)
  store %struct.Memory* %call_484074, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 484078	 Bytes: 3
  %loadMem_484078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484078 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484078)
  store %struct.Memory* %call_484078, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 48407b	 Bytes: 6
  %loadMem_48407b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48407b = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48407b)
  store %struct.Memory* %call_48407b, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 484081	 Bytes: 3
  %loadMem_484081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484081 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484081)
  store %struct.Memory* %call_484081, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 484084	 Bytes: 3
  %loadMem_484084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484084 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484084)
  store %struct.Memory* %call_484084, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 484087	 Bytes: 4
  %loadMem_484087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484087 = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484087)
  store %struct.Memory* %call_484087, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rax	 RIP: 48408b	 Bytes: 8
  %loadMem_48408b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48408b = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48408b)
  store %struct.Memory* %call_48408b, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %esi	 RIP: 484093	 Bytes: 6
  %loadMem_484093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484093 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484093)
  store %struct.Memory* %call_484093, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 484099	 Bytes: 3
  %loadMem_484099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484099 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484099)
  store %struct.Memory* %call_484099, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 48409c	 Bytes: 3
  %loadMem_48409c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48409c = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48409c)
  store %struct.Memory* %call_48409c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 48409f	 Bytes: 4
  %loadMem_48409f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48409f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48409f)
  store %struct.Memory* %call_48409f, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %esi	 RIP: 4840a3	 Bytes: 6
  %loadMem_4840a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840a3 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840a3)
  store %struct.Memory* %call_4840a3, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4840a9	 Bytes: 3
  %loadMem_4840a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840a9 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840a9)
  store %struct.Memory* %call_4840a9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4840ac	 Bytes: 3
  %loadMem_4840ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840ac = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840ac)
  store %struct.Memory* %call_4840ac, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %esi	 RIP: 4840af	 Bytes: 4
  %loadMem_4840af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840af = call %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840af)
  store %struct.Memory* %call_4840af, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4840b3	 Bytes: 8
  %loadMem_4840b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840b3 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840b3)
  store %struct.Memory* %call_4840b3, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rax	 RIP: 4840bb	 Bytes: 6
  %loadMem_4840bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840bb = call %struct.Memory* @routine_addq__0xb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840bb)
  store %struct.Memory* %call_4840bb, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rcx	 RIP: 4840c1	 Bytes: 4
  %loadMem_4840c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840c1 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840c1)
  store %struct.Memory* %call_4840c1, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rcx	 RIP: 4840c5	 Bytes: 4
  %loadMem_4840c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840c5 = call %struct.Memory* @routine_shlq__0x9___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840c5)
  store %struct.Memory* %call_4840c5, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4840c9	 Bytes: 3
  %loadMem_4840c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840c9 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840c9)
  store %struct.Memory* %call_4840c9, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4840cc	 Bytes: 4
  %loadMem_4840cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840cc = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840cc)
  store %struct.Memory* %call_4840cc, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4840d0	 Bytes: 4
  %loadMem_4840d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840d0 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840d0)
  store %struct.Memory* %call_4840d0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4840d4	 Bytes: 3
  %loadMem_4840d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840d4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840d4)
  store %struct.Memory* %call_4840d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4840d7	 Bytes: 4
  %loadMem_4840d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840d7 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840d7)
  store %struct.Memory* %call_4840d7, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %edi	 RIP: 4840db	 Bytes: 4
  %loadMem_4840db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840db = call %struct.Memory* @routine_movzwl___rax__rcx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840db)
  store %struct.Memory* %call_4840db, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4840df	 Bytes: 2
  %loadMem_4840df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840df = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840df)
  store %struct.Memory* %call_4840df, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4840e1	 Bytes: 8
  %loadMem_4840e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840e1 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840e1)
  store %struct.Memory* %call_4840e1, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 4840e9	 Bytes: 6
  %loadMem_4840e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840e9 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840e9)
  store %struct.Memory* %call_4840e9, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4840ef	 Bytes: 4
  %loadMem_4840ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840ef = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840ef)
  store %struct.Memory* %call_4840ef, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4840f3	 Bytes: 4
  %loadMem_4840f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840f3 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840f3)
  store %struct.Memory* %call_4840f3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4840f7	 Bytes: 3
  %loadMem_4840f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840f7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840f7)
  store %struct.Memory* %call_4840f7, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4840fa	 Bytes: 4
  %loadMem_4840fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840fa = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840fa)
  store %struct.Memory* %call_4840fa, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4840fe	 Bytes: 3
  %loadMem_4840fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4840fe = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4840fe)
  store %struct.Memory* %call_4840fe, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484101	 Bytes: 3
  %loadMem_484101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484101 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484101)
  store %struct.Memory* %call_484101, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484104	 Bytes: 3
  %loadMem_484104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484104 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484104)
  store %struct.Memory* %call_484104, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 484107	 Bytes: 3
  %loadMem_484107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484107 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484107)
  store %struct.Memory* %call_484107, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484024	 RIP: 48410a	 Bytes: 5
  %loadMem_48410a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48410a = call %struct.Memory* @routine_jmpq_.L_484024(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48410a, i64 -230, i64 5)
  store %struct.Memory* %call_48410a, %struct.Memory** %MEMORY

  br label %block_.L_484024

  ; Code: .L_48410f:	 RIP: 48410f	 Bytes: 0
block_.L_48410f:

  ; Code: jmpq .L_484114	 RIP: 48410f	 Bytes: 5
  %loadMem_48410f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48410f = call %struct.Memory* @routine_jmpq_.L_484114(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48410f, i64 5, i64 5)
  store %struct.Memory* %call_48410f, %struct.Memory** %MEMORY

  br label %block_.L_484114

  ; Code: .L_484114:	 RIP: 484114	 Bytes: 0
block_.L_484114:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 484114	 Bytes: 3
  %loadMem_484114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484114 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484114)
  store %struct.Memory* %call_484114, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484117	 Bytes: 3
  %loadMem_484117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484117 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484117)
  store %struct.Memory* %call_484117, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 48411a	 Bytes: 3
  %loadMem_48411a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48411a = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48411a)
  store %struct.Memory* %call_48411a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484013	 RIP: 48411d	 Bytes: 5
  %loadMem_48411d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48411d = call %struct.Memory* @routine_jmpq_.L_484013(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48411d, i64 -266, i64 5)
  store %struct.Memory* %call_48411d, %struct.Memory** %MEMORY

  br label %block_.L_484013

  ; Code: .L_484122:	 RIP: 484122	 Bytes: 0
block_.L_484122:

  ; Code: movq 0x6cc628, %rdi	 RIP: 484122	 Bytes: 8
  %loadMem_484122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484122 = call %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484122)
  store %struct.Memory* %call_484122, %struct.Memory** %MEMORY

  ; Code: callq .store_coding_state	 RIP: 48412a	 Bytes: 5
  %loadMem1_48412a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_48412a = call %struct.Memory* @routine_callq_.store_coding_state(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_48412a, i64 104342, i64 5, i64 5)
  store %struct.Memory* %call1_48412a, %struct.Memory** %MEMORY

  %loadMem2_48412a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_48412a = load i64, i64* %3
  %call2_48412a = call %struct.Memory* @sub_49d8c0.store_coding_state(%struct.State* %0, i64  %loadPC_48412a, %struct.Memory* %loadMem2_48412a)
  store %struct.Memory* %call2_48412a, %struct.Memory** %MEMORY

  ; Code: leaq -0x48(%rbp), %rdi	 RIP: 48412f	 Bytes: 4
  %loadMem_48412f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48412f = call %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48412f)
  store %struct.Memory* %call_48412f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 484133	 Bytes: 3
  %loadMem_484133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484133 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484133)
  store %struct.Memory* %call_484133, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edx	 RIP: 484136	 Bytes: 3
  %loadMem_484136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484136 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484136)
  store %struct.Memory* %call_484136, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 484139	 Bytes: 3
  %loadMem_484139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484139 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484139)
  store %struct.Memory* %call_484139, %struct.Memory** %MEMORY

  ; Code: movsd -0x18(%rbp), %xmm0	 RIP: 48413c	 Bytes: 5
  %loadMem_48413c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48413c = call %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48413c)
  store %struct.Memory* %call_48413c, %struct.Memory** %MEMORY

  ; Code: movsd -0x100(%rbp), %xmm1	 RIP: 484141	 Bytes: 8
  %loadMem_484141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484141 = call %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484141)
  store %struct.Memory* %call_484141, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %r8d	 RIP: 484149	 Bytes: 7
  %loadMem_484149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484149 = call %struct.Memory* @routine_movl_MINUS0x120__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484149)
  store %struct.Memory* %call_484149, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_4x4IntraBlocks	 RIP: 484150	 Bytes: 5
  %loadMem1_484150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_484150 = call %struct.Memory* @routine_callq_.RDCost_for_4x4IntraBlocks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_484150, i64 -4208, i64 5, i64 5)
  store %struct.Memory* %call1_484150, %struct.Memory** %MEMORY

  %loadMem2_484150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_484150 = load i64, i64* %3
  %call2_484150 = call %struct.Memory* @sub_4830e0.RDCost_for_4x4IntraBlocks(%struct.State* %0, i64  %loadPC_484150, %struct.Memory* %loadMem2_484150)
  store %struct.Memory* %call2_484150, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0xd8(%rbp)	 RIP: 484155	 Bytes: 8
  %loadMem_484155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484155 = call %struct.Memory* @routine_movsd__xmm0__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484155)
  store %struct.Memory* %call_484155, %struct.Memory** %MEMORY

  ; Code: movsd -0xd8(%rbp), %xmm0	 RIP: 48415d	 Bytes: 8
  %loadMem_48415d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48415d = call %struct.Memory* @routine_movsd_MINUS0xd8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48415d)
  store %struct.Memory* %call_48415d, %struct.Memory** %MEMORY

  ; Code: subsd -0x100(%rbp), %xmm0	 RIP: 484165	 Bytes: 8
  %loadMem_484165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484165 = call %struct.Memory* @routine_subsd_MINUS0x100__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484165)
  store %struct.Memory* %call_484165, %struct.Memory** %MEMORY

  ; Code: movaps 0x3964c(%rip), %xmm1	 RIP: 48416d	 Bytes: 7
  %loadMem_48416d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48416d = call %struct.Memory* @routine_movaps_0x3964c__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48416d)
  store %struct.Memory* %call_48416d, %struct.Memory** %MEMORY

  ; Code: pand %xmm1, %xmm0	 RIP: 484174	 Bytes: 4
  %loadMem_484174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484174 = call %struct.Memory* @routine_pand__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484174)
  store %struct.Memory* %call_484174, %struct.Memory** %MEMORY

  ; Code: ucomisd -0x108(%rbp), %xmm0	 RIP: 484178	 Bytes: 8
  %loadMem_484178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484178 = call %struct.Memory* @routine_ucomisd_MINUS0x108__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484178)
  store %struct.Memory* %call_484178, %struct.Memory** %MEMORY

  ; Code: jbe .L_4842cf	 RIP: 484180	 Bytes: 6
  %loadMem_484180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484180 = call %struct.Memory* @routine_jbe_.L_4842cf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484180, i8* %BRANCH_TAKEN, i64 335, i64 6, i64 6)
  store %struct.Memory* %call_484180, %struct.Memory** %MEMORY

  %loadBr_484180 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484180 = icmp eq i8 %loadBr_484180, 1
  br i1 %cmpBr_484180, label %block_.L_4842cf, label %block_484186

block_484186:
  ; Code: movsd -0xd8(%rbp), %xmm0	 RIP: 484186	 Bytes: 8
  %loadMem_484186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484186 = call %struct.Memory* @routine_movsd_MINUS0xd8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484186)
  store %struct.Memory* %call_484186, %struct.Memory** %MEMORY

  ; Code: movsd -0x100(%rbp), %xmm1	 RIP: 48418e	 Bytes: 8
  %loadMem_48418e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48418e = call %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48418e)
  store %struct.Memory* %call_48418e, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 484196	 Bytes: 4
  %loadMem_484196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484196 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484196)
  store %struct.Memory* %call_484196, %struct.Memory** %MEMORY

  ; Code: jbe .L_4842cf	 RIP: 48419a	 Bytes: 6
  %loadMem_48419a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48419a = call %struct.Memory* @routine_jbe_.L_4842cf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48419a, i8* %BRANCH_TAKEN, i64 309, i64 6, i64 6)
  store %struct.Memory* %call_48419a, %struct.Memory** %MEMORY

  %loadBr_48419a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48419a = icmp eq i8 %loadBr_48419a, 1
  br i1 %cmpBr_48419a, label %block_.L_4842cf, label %block_4841a0

block_4841a0:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4841a0	 Bytes: 7
  %loadMem_4841a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841a0 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841a0)
  store %struct.Memory* %call_4841a0, %struct.Memory** %MEMORY

  ; Code: .L_4841a7:	 RIP: 4841a7	 Bytes: 0
  br label %block_.L_4841a7
block_.L_4841a7:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4841a7	 Bytes: 4
  %loadMem_4841a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841a7 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841a7)
  store %struct.Memory* %call_4841a7, %struct.Memory** %MEMORY

  ; Code: jge .L_484228	 RIP: 4841ab	 Bytes: 6
  %loadMem_4841ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841ab = call %struct.Memory* @routine_jge_.L_484228(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841ab, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_4841ab, %struct.Memory** %MEMORY

  %loadBr_4841ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4841ab = icmp eq i8 %loadBr_4841ab, 1
  br i1 %cmpBr_4841ab, label %block_.L_484228, label %block_4841b1

block_4841b1:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4841b1	 Bytes: 7
  %loadMem_4841b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841b1 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841b1)
  store %struct.Memory* %call_4841b1, %struct.Memory** %MEMORY

  ; Code: .L_4841b8:	 RIP: 4841b8	 Bytes: 0
  br label %block_.L_4841b8
block_.L_4841b8:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4841b8	 Bytes: 4
  %loadMem_4841b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841b8 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841b8)
  store %struct.Memory* %call_4841b8, %struct.Memory** %MEMORY

  ; Code: jge .L_484215	 RIP: 4841bc	 Bytes: 6
  %loadMem_4841bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841bc = call %struct.Memory* @routine_jge_.L_484215(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841bc, i8* %BRANCH_TAKEN, i64 89, i64 6, i64 6)
  store %struct.Memory* %call_4841bc, %struct.Memory** %MEMORY

  %loadBr_4841bc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4841bc = icmp eq i8 %loadBr_4841bc, 1
  br i1 %cmpBr_4841bc, label %block_.L_484215, label %block_4841c2

block_4841c2:
  ; Code: movq 0x6cb900, %rax	 RIP: 4841c2	 Bytes: 8
  %loadMem_4841c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841c2 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841c2)
  store %struct.Memory* %call_4841c2, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4841ca	 Bytes: 7
  %loadMem_4841ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841ca = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841ca)
  store %struct.Memory* %call_4841ca, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4841d1	 Bytes: 4
  %loadMem_4841d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841d1 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841d1)
  store %struct.Memory* %call_4841d1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4841d5	 Bytes: 4
  %loadMem_4841d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841d5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841d5)
  store %struct.Memory* %call_4841d5, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4841d9	 Bytes: 4
  %loadMem_4841d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841d9 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841d9)
  store %struct.Memory* %call_4841d9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4841dd	 Bytes: 4
  %loadMem_4841dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841dd = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841dd)
  store %struct.Memory* %call_4841dd, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4841e1	 Bytes: 4
  %loadMem_4841e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841e1 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841e1)
  store %struct.Memory* %call_4841e1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4841e5	 Bytes: 4
  %loadMem_4841e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841e5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841e5)
  store %struct.Memory* %call_4841e5, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4841e9	 Bytes: 4
  %loadMem_4841e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841e9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841e9)
  store %struct.Memory* %call_4841e9, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4841ed	 Bytes: 3
  %loadMem_4841ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841ed = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841ed)
  store %struct.Memory* %call_4841ed, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc608, %rax	 RIP: 4841f0	 Bytes: 8
  %loadMem_4841f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841f0 = call %struct.Memory* @routine_movq_0x6cc608___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841f0)
  store %struct.Memory* %call_4841f0, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4841f8	 Bytes: 4
  %loadMem_4841f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841f8 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841f8)
  store %struct.Memory* %call_4841f8, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4841fc	 Bytes: 4
  %loadMem_4841fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4841fc = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4841fc)
  store %struct.Memory* %call_4841fc, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484200	 Bytes: 4
  %loadMem_484200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484200 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484200)
  store %struct.Memory* %call_484200, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 484204	 Bytes: 3
  %loadMem_484204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484204 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484204)
  store %struct.Memory* %call_484204, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484207	 Bytes: 3
  %loadMem_484207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484207 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484207)
  store %struct.Memory* %call_484207, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48420a	 Bytes: 3
  %loadMem_48420a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48420a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48420a)
  store %struct.Memory* %call_48420a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 48420d	 Bytes: 3
  %loadMem_48420d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48420d = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48420d)
  store %struct.Memory* %call_48420d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4841b8	 RIP: 484210	 Bytes: 5
  %loadMem_484210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484210 = call %struct.Memory* @routine_jmpq_.L_4841b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484210, i64 -88, i64 5)
  store %struct.Memory* %call_484210, %struct.Memory** %MEMORY

  br label %block_.L_4841b8

  ; Code: .L_484215:	 RIP: 484215	 Bytes: 0
block_.L_484215:

  ; Code: jmpq .L_48421a	 RIP: 484215	 Bytes: 5
  %loadMem_484215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484215 = call %struct.Memory* @routine_jmpq_.L_48421a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484215, i64 5, i64 5)
  store %struct.Memory* %call_484215, %struct.Memory** %MEMORY

  br label %block_.L_48421a

  ; Code: .L_48421a:	 RIP: 48421a	 Bytes: 0
block_.L_48421a:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 48421a	 Bytes: 3
  %loadMem_48421a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48421a = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48421a)
  store %struct.Memory* %call_48421a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48421d	 Bytes: 3
  %loadMem_48421d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48421d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48421d)
  store %struct.Memory* %call_48421d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 484220	 Bytes: 3
  %loadMem_484220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484220 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484220)
  store %struct.Memory* %call_484220, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4841a7	 RIP: 484223	 Bytes: 5
  %loadMem_484223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484223 = call %struct.Memory* @routine_jmpq_.L_4841a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484223, i64 -124, i64 5)
  store %struct.Memory* %call_484223, %struct.Memory** %MEMORY

  br label %block_.L_4841a7

  ; Code: .L_484228:	 RIP: 484228	 Bytes: 0
block_.L_484228:

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 484228	 Bytes: 7
  %loadMem_484228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484228 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484228)
  store %struct.Memory* %call_484228, %struct.Memory** %MEMORY

  ; Code: .L_48422f:	 RIP: 48422f	 Bytes: 0
  br label %block_.L_48422f
block_.L_48422f:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 48422f	 Bytes: 4
  %loadMem_48422f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48422f = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48422f)
  store %struct.Memory* %call_48422f, %struct.Memory** %MEMORY

  ; Code: jge .L_4842b3	 RIP: 484233	 Bytes: 6
  %loadMem_484233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484233 = call %struct.Memory* @routine_jge_.L_4842b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484233, i8* %BRANCH_TAKEN, i64 128, i64 6, i64 6)
  store %struct.Memory* %call_484233, %struct.Memory** %MEMORY

  %loadBr_484233 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484233 = icmp eq i8 %loadBr_484233, 1
  br i1 %cmpBr_484233, label %block_.L_4842b3, label %block_484239

block_484239:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 484239	 Bytes: 7
  %loadMem_484239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484239 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484239)
  store %struct.Memory* %call_484239, %struct.Memory** %MEMORY

  ; Code: .L_484240:	 RIP: 484240	 Bytes: 0
  br label %block_.L_484240
block_.L_484240:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 484240	 Bytes: 4
  %loadMem_484240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484240 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484240)
  store %struct.Memory* %call_484240, %struct.Memory** %MEMORY

  ; Code: jge .L_4842a0	 RIP: 484244	 Bytes: 6
  %loadMem_484244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484244 = call %struct.Memory* @routine_jge_.L_4842a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484244, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_484244, %struct.Memory** %MEMORY

  %loadBr_484244 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484244 = icmp eq i8 %loadBr_484244, 1
  br i1 %cmpBr_484244, label %block_.L_4842a0, label %block_48424a

block_48424a:
  ; Code: leaq -0x90(%rbp), %rax	 RIP: 48424a	 Bytes: 7
  %loadMem_48424a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48424a = call %struct.Memory* @routine_leaq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48424a)
  store %struct.Memory* %call_48424a, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 484251	 Bytes: 8
  %loadMem_484251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484251 = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484251)
  store %struct.Memory* %call_484251, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rcx), %rcx	 RIP: 484259	 Bytes: 7
  %loadMem_484259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484259 = call %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484259)
  store %struct.Memory* %call_484259, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edx	 RIP: 484260	 Bytes: 6
  %loadMem_484260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484260 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484260)
  store %struct.Memory* %call_484260, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 484266	 Bytes: 3
  %loadMem_484266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484266 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484266)
  store %struct.Memory* %call_484266, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 484269	 Bytes: 3
  %loadMem_484269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484269 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484269)
  store %struct.Memory* %call_484269, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 48426c	 Bytes: 4
  %loadMem_48426c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48426c = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48426c)
  store %struct.Memory* %call_48426c, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %edx	 RIP: 484270	 Bytes: 6
  %loadMem_484270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484270 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484270)
  store %struct.Memory* %call_484270, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 484276	 Bytes: 3
  %loadMem_484276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484276 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484276)
  store %struct.Memory* %call_484276, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 484279	 Bytes: 3
  %loadMem_484279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484279 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484279)
  store %struct.Memory* %call_484279, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rsi,2), %edx	 RIP: 48427c	 Bytes: 4
  %loadMem_48427c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48427c = call %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48427c)
  store %struct.Memory* %call_48427c, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 484280	 Bytes: 4
  %loadMem_484280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484280 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484280)
  store %struct.Memory* %call_484280, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 484284	 Bytes: 4
  %loadMem_484284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484284 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484284)
  store %struct.Memory* %call_484284, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 484288	 Bytes: 3
  %loadMem_484288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484288 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484288)
  store %struct.Memory* %call_484288, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 48428b	 Bytes: 4
  %loadMem_48428b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48428b = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48428b)
  store %struct.Memory* %call_48428b, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 48428f	 Bytes: 3
  %loadMem_48428f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48428f = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48428f)
  store %struct.Memory* %call_48428f, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 484292	 Bytes: 3
  %loadMem_484292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484292 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484292)
  store %struct.Memory* %call_484292, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484295	 Bytes: 3
  %loadMem_484295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484295 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484295)
  store %struct.Memory* %call_484295, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 484298	 Bytes: 3
  %loadMem_484298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484298 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484298)
  store %struct.Memory* %call_484298, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484240	 RIP: 48429b	 Bytes: 5
  %loadMem_48429b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48429b = call %struct.Memory* @routine_jmpq_.L_484240(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48429b, i64 -91, i64 5)
  store %struct.Memory* %call_48429b, %struct.Memory** %MEMORY

  br label %block_.L_484240

  ; Code: .L_4842a0:	 RIP: 4842a0	 Bytes: 0
block_.L_4842a0:

  ; Code: jmpq .L_4842a5	 RIP: 4842a0	 Bytes: 5
  %loadMem_4842a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842a0 = call %struct.Memory* @routine_jmpq_.L_4842a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842a0, i64 5, i64 5)
  store %struct.Memory* %call_4842a0, %struct.Memory** %MEMORY

  br label %block_.L_4842a5

  ; Code: .L_4842a5:	 RIP: 4842a5	 Bytes: 0
block_.L_4842a5:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4842a5	 Bytes: 3
  %loadMem_4842a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842a5 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842a5)
  store %struct.Memory* %call_4842a5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4842a8	 Bytes: 3
  %loadMem_4842a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842a8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842a8)
  store %struct.Memory* %call_4842a8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4842ab	 Bytes: 3
  %loadMem_4842ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842ab = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842ab)
  store %struct.Memory* %call_4842ab, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48422f	 RIP: 4842ae	 Bytes: 5
  %loadMem_4842ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842ae = call %struct.Memory* @routine_jmpq_.L_48422f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842ae, i64 -127, i64 5)
  store %struct.Memory* %call_4842ae, %struct.Memory** %MEMORY

  br label %block_.L_48422f

  ; Code: .L_4842b3:	 RIP: 4842b3	 Bytes: 0
block_.L_4842b3:

  ; Code: movl -0x48(%rbp), %eax	 RIP: 4842b3	 Bytes: 3
  %loadMem_4842b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842b3 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842b3)
  store %struct.Memory* %call_4842b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 4842b6	 Bytes: 3
  %loadMem_4842b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842b6 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842b6)
  store %struct.Memory* %call_4842b6, %struct.Memory** %MEMORY

  ; Code: movsd -0xd8(%rbp), %xmm0	 RIP: 4842b9	 Bytes: 8
  %loadMem_4842b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842b9 = call %struct.Memory* @routine_movsd_MINUS0xd8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842b9)
  store %struct.Memory* %call_4842b9, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x100(%rbp)	 RIP: 4842c1	 Bytes: 8
  %loadMem_4842c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842c1 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842c1)
  store %struct.Memory* %call_4842c1, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 4842c9	 Bytes: 3
  %loadMem_4842c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842c9 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842c9)
  store %struct.Memory* %call_4842c9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 4842cc	 Bytes: 3
  %loadMem_4842cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842cc = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842cc)
  store %struct.Memory* %call_4842cc, %struct.Memory** %MEMORY

  ; Code: .L_4842cf:	 RIP: 4842cf	 Bytes: 0
  br label %block_.L_4842cf
block_.L_4842cf:

  ; Code: movq 0x6cc628, %rdi	 RIP: 4842cf	 Bytes: 8
  %loadMem_4842cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842cf = call %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842cf)
  store %struct.Memory* %call_4842cf, %struct.Memory** %MEMORY

  ; Code: callq .reset_coding_state	 RIP: 4842d7	 Bytes: 5
  %loadMem1_4842d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4842d7 = call %struct.Memory* @routine_callq_.reset_coding_state(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4842d7, i64 104745, i64 5, i64 5)
  store %struct.Memory* %call1_4842d7, %struct.Memory** %MEMORY

  %loadMem2_4842d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4842d7 = load i64, i64* %3
  %call2_4842d7 = call %struct.Memory* @sub_49dc00.reset_coding_state(%struct.State* %0, i64  %loadPC_4842d7, %struct.Memory* %loadMem2_4842d7)
  store %struct.Memory* %call2_4842d7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4856a2	 RIP: 4842dc	 Bytes: 5
  %loadMem_4842dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842dc = call %struct.Memory* @routine_jmpq_.L_4856a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842dc, i64 5062, i64 5)
  store %struct.Memory* %call_4842dc, %struct.Memory** %MEMORY

  br label %block_.L_4856a2

  ; Code: .L_4842e1:	 RIP: 4842e1	 Bytes: 0
block_.L_4842e1:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4842e1	 Bytes: 7
  %loadMem_4842e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842e1 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842e1)
  store %struct.Memory* %call_4842e1, %struct.Memory** %MEMORY

  ; Code: .L_4842e8:	 RIP: 4842e8	 Bytes: 0
  br label %block_.L_4842e8
block_.L_4842e8:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4842e8	 Bytes: 4
  %loadMem_4842e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842e8 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842e8)
  store %struct.Memory* %call_4842e8, %struct.Memory** %MEMORY

  ; Code: jge .L_484539	 RIP: 4842ec	 Bytes: 6
  %loadMem_4842ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842ec = call %struct.Memory* @routine_jge_.L_484539(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842ec, i8* %BRANCH_TAKEN, i64 589, i64 6, i64 6)
  store %struct.Memory* %call_4842ec, %struct.Memory** %MEMORY

  %loadBr_4842ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4842ec = icmp eq i8 %loadBr_4842ec, 1
  br i1 %cmpBr_4842ec, label %block_.L_484539, label %block_4842f2

block_4842f2:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4842f2	 Bytes: 7
  %loadMem_4842f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842f2 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842f2)
  store %struct.Memory* %call_4842f2, %struct.Memory** %MEMORY

  ; Code: .L_4842f9:	 RIP: 4842f9	 Bytes: 0
  br label %block_.L_4842f9
block_.L_4842f9:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4842f9	 Bytes: 4
  %loadMem_4842f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842f9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842f9)
  store %struct.Memory* %call_4842f9, %struct.Memory** %MEMORY

  ; Code: jge .L_484526	 RIP: 4842fd	 Bytes: 6
  %loadMem_4842fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4842fd = call %struct.Memory* @routine_jge_.L_484526(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4842fd, i8* %BRANCH_TAKEN, i64 553, i64 6, i64 6)
  store %struct.Memory* %call_4842fd, %struct.Memory** %MEMORY

  %loadBr_4842fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4842fd = icmp eq i8 %loadBr_4842fd, 1
  br i1 %cmpBr_4842fd, label %block_.L_484526, label %block_484303

block_484303:
  ; Code: movq $0x723720, %rax	 RIP: 484303	 Bytes: 10
  %loadMem_484303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484303 = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484303)
  store %struct.Memory* %call_484303, %struct.Memory** %MEMORY

  ; Code: movq $0x6d40f0, %rcx	 RIP: 48430d	 Bytes: 10
  %loadMem_48430d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48430d = call %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48430d)
  store %struct.Memory* %call_48430d, %struct.Memory** %MEMORY

  ; Code: movq $0x6f6fa0, %rdx	 RIP: 484317	 Bytes: 10
  %loadMem_484317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484317 = call %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484317)
  store %struct.Memory* %call_484317, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 484321	 Bytes: 8
  %loadMem_484321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484321 = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484321)
  store %struct.Memory* %call_484321, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 484329	 Bytes: 3
  %loadMem_484329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484329 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484329)
  store %struct.Memory* %call_484329, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %edi	 RIP: 48432c	 Bytes: 6
  %loadMem_48432c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48432c = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48432c)
  store %struct.Memory* %call_48432c, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 484332	 Bytes: 3
  %loadMem_484332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484332 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484332)
  store %struct.Memory* %call_484332, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 484335	 Bytes: 3
  %loadMem_484335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484335 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484335)
  store %struct.Memory* %call_484335, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 484338	 Bytes: 4
  %loadMem_484338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484338 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484338)
  store %struct.Memory* %call_484338, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %edi	 RIP: 48433c	 Bytes: 6
  %loadMem_48433c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48433c = call %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48433c)
  store %struct.Memory* %call_48433c, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 484342	 Bytes: 3
  %loadMem_484342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484342 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484342)
  store %struct.Memory* %call_484342, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 484345	 Bytes: 3
  %loadMem_484345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484345 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484345)
  store %struct.Memory* %call_484345, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 484348	 Bytes: 5
  %loadMem_484348 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484348 = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484348)
  store %struct.Memory* %call_484348, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 48434d	 Bytes: 8
  %loadMem_48434d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48434d = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48434d)
  store %struct.Memory* %call_48434d, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 484355	 Bytes: 7
  %loadMem_484355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484355 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484355)
  store %struct.Memory* %call_484355, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %r8	 RIP: 48435c	 Bytes: 7
  %loadMem_48435c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48435c = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48435c)
  store %struct.Memory* %call_48435c, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 484363	 Bytes: 4
  %loadMem_484363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484363 = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484363)
  store %struct.Memory* %call_484363, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 484367	 Bytes: 3
  %loadMem_484367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484367 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484367)
  store %struct.Memory* %call_484367, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r9d	 RIP: 48436a	 Bytes: 7
  %loadMem_48436a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48436a = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48436a)
  store %struct.Memory* %call_48436a, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 484371	 Bytes: 4
  %loadMem_484371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484371 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484371)
  store %struct.Memory* %call_484371, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 484375	 Bytes: 3
  %loadMem_484375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484375 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484375)
  store %struct.Memory* %call_484375, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 484378	 Bytes: 4
  %loadMem_484378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484378 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484378)
  store %struct.Memory* %call_484378, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 48437c	 Bytes: 3
  %loadMem_48437c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48437c = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48437c)
  store %struct.Memory* %call_48437c, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r9d	 RIP: 48437f	 Bytes: 7
  %loadMem_48437f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48437f = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48437f)
  store %struct.Memory* %call_48437f, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 484386	 Bytes: 4
  %loadMem_484386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484386 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484386)
  store %struct.Memory* %call_484386, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 48438a	 Bytes: 3
  %loadMem_48438a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48438a = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48438a)
  store %struct.Memory* %call_48438a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 48438d	 Bytes: 5
  %loadMem_48438d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48438d = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48438d)
  store %struct.Memory* %call_48438d, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 484392	 Bytes: 3
  %loadMem_484392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484392 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484392)
  store %struct.Memory* %call_484392, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x15c(%rbp)	 RIP: 484395	 Bytes: 6
  %loadMem_484395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484395 = call %struct.Memory* @routine_movl__edi__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484395)
  store %struct.Memory* %call_484395, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rsi	 RIP: 48439b	 Bytes: 8
  %loadMem_48439b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48439b = call %struct.Memory* @routine_movq_0x726418___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48439b)
  store %struct.Memory* %call_48439b, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %edi	 RIP: 4843a3	 Bytes: 6
  %loadMem_4843a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843a3 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843a3)
  store %struct.Memory* %call_4843a3, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 4843a9	 Bytes: 3
  %loadMem_4843a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843a9 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843a9)
  store %struct.Memory* %call_4843a9, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4843ac	 Bytes: 3
  %loadMem_4843ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843ac = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843ac)
  store %struct.Memory* %call_4843ac, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4843af	 Bytes: 4
  %loadMem_4843af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843af = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843af)
  store %struct.Memory* %call_4843af, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %edi	 RIP: 4843b3	 Bytes: 6
  %loadMem_4843b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843b3 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843b3)
  store %struct.Memory* %call_4843b3, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4843b9	 Bytes: 3
  %loadMem_4843b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843b9 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843b9)
  store %struct.Memory* %call_4843b9, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4843bc	 Bytes: 3
  %loadMem_4843bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843bc = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843bc)
  store %struct.Memory* %call_4843bc, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 4843bf	 Bytes: 5
  %loadMem_4843bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843bf = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843bf)
  store %struct.Memory* %call_4843bf, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4843c4	 Bytes: 8
  %loadMem_4843c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843c4 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843c4)
  store %struct.Memory* %call_4843c4, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rsi	 RIP: 4843cc	 Bytes: 7
  %loadMem_4843cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843cc = call %struct.Memory* @routine_addq__0xb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843cc)
  store %struct.Memory* %call_4843cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %r8	 RIP: 4843d3	 Bytes: 4
  %loadMem_4843d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843d3 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843d3)
  store %struct.Memory* %call_4843d3, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 4843d7	 Bytes: 4
  %loadMem_4843d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843d7 = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843d7)
  store %struct.Memory* %call_4843d7, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4843db	 Bytes: 3
  %loadMem_4843db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843db = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843db)
  store %struct.Memory* %call_4843db, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 4843de	 Bytes: 4
  %loadMem_4843de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843de = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843de)
  store %struct.Memory* %call_4843de, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 4843e2	 Bytes: 4
  %loadMem_4843e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843e2 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843e2)
  store %struct.Memory* %call_4843e2, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4843e6	 Bytes: 3
  %loadMem_4843e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843e6 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843e6)
  store %struct.Memory* %call_4843e6, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %r8	 RIP: 4843e9	 Bytes: 4
  %loadMem_4843e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843e9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843e9)
  store %struct.Memory* %call_4843e9, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 4843ed	 Bytes: 5
  %loadMem_4843ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843ed = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843ed)
  store %struct.Memory* %call_4843ed, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 4843f2	 Bytes: 3
  %loadMem_4843f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843f2 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843f2)
  store %struct.Memory* %call_4843f2, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x158(%rbp)	 RIP: 4843f5	 Bytes: 6
  %loadMem_4843f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843f5 = call %struct.Memory* @routine_movl__edi__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843f5)
  store %struct.Memory* %call_4843f5, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 4843fb	 Bytes: 8
  %loadMem_4843fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4843fb = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4843fb)
  store %struct.Memory* %call_4843fb, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rsi), %rsi	 RIP: 484403	 Bytes: 4
  %loadMem_484403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484403 = call %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484403)
  store %struct.Memory* %call_484403, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %edi	 RIP: 484407	 Bytes: 6
  %loadMem_484407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484407 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484407)
  store %struct.Memory* %call_484407, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 48440d	 Bytes: 3
  %loadMem_48440d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48440d = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48440d)
  store %struct.Memory* %call_48440d, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 484410	 Bytes: 3
  %loadMem_484410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484410 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484410)
  store %struct.Memory* %call_484410, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 484413	 Bytes: 4
  %loadMem_484413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484413 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484413)
  store %struct.Memory* %call_484413, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %edi	 RIP: 484417	 Bytes: 6
  %loadMem_484417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484417 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484417)
  store %struct.Memory* %call_484417, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 48441d	 Bytes: 3
  %loadMem_48441d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48441d = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48441d)
  store %struct.Memory* %call_48441d, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 484420	 Bytes: 3
  %loadMem_484420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484420 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484420)
  store %struct.Memory* %call_484420, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 484423	 Bytes: 5
  %loadMem_484423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484423 = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484423)
  store %struct.Memory* %call_484423, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 484428	 Bytes: 8
  %loadMem_484428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484428 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484428)
  store %struct.Memory* %call_484428, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 484430	 Bytes: 7
  %loadMem_484430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484430 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484430)
  store %struct.Memory* %call_484430, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 484437	 Bytes: 7
  %loadMem_484437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484437 = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484437)
  store %struct.Memory* %call_484437, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %r8	 RIP: 48443e	 Bytes: 7
  %loadMem_48443e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48443e = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48443e)
  store %struct.Memory* %call_48443e, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 484445	 Bytes: 4
  %loadMem_484445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484445 = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484445)
  store %struct.Memory* %call_484445, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 484449	 Bytes: 3
  %loadMem_484449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484449 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484449)
  store %struct.Memory* %call_484449, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r9d	 RIP: 48444c	 Bytes: 7
  %loadMem_48444c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48444c = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48444c)
  store %struct.Memory* %call_48444c, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 484453	 Bytes: 4
  %loadMem_484453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484453 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484453)
  store %struct.Memory* %call_484453, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 484457	 Bytes: 3
  %loadMem_484457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484457 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484457)
  store %struct.Memory* %call_484457, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 48445a	 Bytes: 4
  %loadMem_48445a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48445a = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48445a)
  store %struct.Memory* %call_48445a, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 48445e	 Bytes: 3
  %loadMem_48445e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48445e = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48445e)
  store %struct.Memory* %call_48445e, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r9d	 RIP: 484461	 Bytes: 7
  %loadMem_484461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484461 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484461)
  store %struct.Memory* %call_484461, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 484468	 Bytes: 4
  %loadMem_484468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484468 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484468)
  store %struct.Memory* %call_484468, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 48446c	 Bytes: 3
  %loadMem_48446c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48446c = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48446c)
  store %struct.Memory* %call_48446c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 48446f	 Bytes: 5
  %loadMem_48446f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48446f = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48446f)
  store %struct.Memory* %call_48446f, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 484474	 Bytes: 3
  %loadMem_484474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484474 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484474)
  store %struct.Memory* %call_484474, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x154(%rbp)	 RIP: 484477	 Bytes: 6
  %loadMem_484477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484477 = call %struct.Memory* @routine_movl__edi__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484477)
  store %struct.Memory* %call_484477, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %edi	 RIP: 48447d	 Bytes: 6
  %loadMem_48447d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48447d = call %struct.Memory* @routine_movl_MINUS0x154__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48447d)
  store %struct.Memory* %call_48447d, %struct.Memory** %MEMORY

  ; Code: subl -0x15c(%rbp), %edi	 RIP: 484483	 Bytes: 6
  %loadMem_484483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484483 = call %struct.Memory* @routine_subl_MINUS0x15c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484483)
  store %struct.Memory* %call_484483, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 484489	 Bytes: 4
  %loadMem_484489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484489 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484489)
  store %struct.Memory* %call_484489, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 48448d	 Bytes: 4
  %loadMem_48448d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48448d = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48448d)
  store %struct.Memory* %call_48448d, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r8	 RIP: 484491	 Bytes: 3
  %loadMem_484491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484491 = call %struct.Memory* @routine_movq__rdx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484491)
  store %struct.Memory* %call_484491, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 484494	 Bytes: 3
  %loadMem_484494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484494 = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484494)
  store %struct.Memory* %call_484494, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 484497	 Bytes: 4
  %loadMem_484497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484497 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484497)
  store %struct.Memory* %call_484497, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%r8,%rsi,4)	 RIP: 48449b	 Bytes: 4
  %loadMem_48449b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48449b = call %struct.Memory* @routine_movl__edi____r8__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48449b)
  store %struct.Memory* %call_48449b, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %edi	 RIP: 48449f	 Bytes: 6
  %loadMem_48449f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48449f = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48449f)
  store %struct.Memory* %call_48449f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4844a5	 Bytes: 4
  %loadMem_4844a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844a5 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844a5)
  store %struct.Memory* %call_4844a5, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4844a9	 Bytes: 4
  %loadMem_4844a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844a9 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844a9)
  store %struct.Memory* %call_4844a9, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4844ad	 Bytes: 3
  %loadMem_4844ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844ad = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844ad)
  store %struct.Memory* %call_4844ad, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4844b0	 Bytes: 4
  %loadMem_4844b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844b0 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844b0)
  store %struct.Memory* %call_4844b0, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r9d	 RIP: 4844b4	 Bytes: 4
  %loadMem_4844b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844b4 = call %struct.Memory* @routine_movl___rdx__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844b4)
  store %struct.Memory* %call_4844b4, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4844b8	 Bytes: 4
  %loadMem_4844b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844b8 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844b8)
  store %struct.Memory* %call_4844b8, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %edi	 RIP: 4844bc	 Bytes: 3
  %loadMem_4844bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844bc = call %struct.Memory* @routine_addl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844bc)
  store %struct.Memory* %call_4844bc, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x168(%rbp)	 RIP: 4844bf	 Bytes: 6
  %loadMem_4844bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844bf = call %struct.Memory* @routine_movl__edi__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844bf)
  store %struct.Memory* %call_4844bf, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %edi	 RIP: 4844c5	 Bytes: 6
  %loadMem_4844c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844c5 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844c5)
  store %struct.Memory* %call_4844c5, %struct.Memory** %MEMORY

  ; Code: subl -0x168(%rbp), %edi	 RIP: 4844cb	 Bytes: 6
  %loadMem_4844cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844cb = call %struct.Memory* @routine_subl_MINUS0x168__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844cb)
  store %struct.Memory* %call_4844cb, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4844d1	 Bytes: 4
  %loadMem_4844d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844d1 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844d1)
  store %struct.Memory* %call_4844d1, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4844d5	 Bytes: 4
  %loadMem_4844d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844d5 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844d5)
  store %struct.Memory* %call_4844d5, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4844d9	 Bytes: 3
  %loadMem_4844d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844d9 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844d9)
  store %struct.Memory* %call_4844d9, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4844dc	 Bytes: 3
  %loadMem_4844dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844dc = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844dc)
  store %struct.Memory* %call_4844dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4844df	 Bytes: 4
  %loadMem_4844df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844df = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844df)
  store %struct.Memory* %call_4844df, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rsi,%rdx,4)	 RIP: 4844e3	 Bytes: 3
  %loadMem_4844e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844e3 = call %struct.Memory* @routine_movl__edi____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844e3)
  store %struct.Memory* %call_4844e3, %struct.Memory** %MEMORY

  ; Code: movl -0x168(%rbp), %edi	 RIP: 4844e6	 Bytes: 6
  %loadMem_4844e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844e6 = call %struct.Memory* @routine_movl_MINUS0x168__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844e6)
  store %struct.Memory* %call_4844e6, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4844ec	 Bytes: 4
  %loadMem_4844ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844ec = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844ec)
  store %struct.Memory* %call_4844ec, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4844f0	 Bytes: 4
  %loadMem_4844f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844f0 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844f0)
  store %struct.Memory* %call_4844f0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4844f4	 Bytes: 3
  %loadMem_4844f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844f4 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844f4)
  store %struct.Memory* %call_4844f4, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4844f7	 Bytes: 4
  %loadMem_4844f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844f7 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844f7)
  store %struct.Memory* %call_4844f7, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %r9d	 RIP: 4844fb	 Bytes: 4
  %loadMem_4844fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844fb = call %struct.Memory* @routine_movl___rcx__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844fb)
  store %struct.Memory* %call_4844fb, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4844ff	 Bytes: 4
  %loadMem_4844ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4844ff = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4844ff)
  store %struct.Memory* %call_4844ff, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %edi	 RIP: 484503	 Bytes: 3
  %loadMem_484503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484503 = call %struct.Memory* @routine_addl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484503)
  store %struct.Memory* %call_484503, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484506	 Bytes: 4
  %loadMem_484506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484506 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484506)
  store %struct.Memory* %call_484506, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 48450a	 Bytes: 4
  %loadMem_48450a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48450a = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48450a)
  store %struct.Memory* %call_48450a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48450e	 Bytes: 3
  %loadMem_48450e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48450e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48450e)
  store %struct.Memory* %call_48450e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 484511	 Bytes: 4
  %loadMem_484511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484511 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484511)
  store %struct.Memory* %call_484511, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 484515	 Bytes: 3
  %loadMem_484515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484515 = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484515)
  store %struct.Memory* %call_484515, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484518	 Bytes: 3
  %loadMem_484518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484518 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484518)
  store %struct.Memory* %call_484518, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48451b	 Bytes: 3
  %loadMem_48451b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48451b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48451b)
  store %struct.Memory* %call_48451b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 48451e	 Bytes: 3
  %loadMem_48451e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48451e = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48451e)
  store %struct.Memory* %call_48451e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4842f9	 RIP: 484521	 Bytes: 5
  %loadMem_484521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484521 = call %struct.Memory* @routine_jmpq_.L_4842f9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484521, i64 -552, i64 5)
  store %struct.Memory* %call_484521, %struct.Memory** %MEMORY

  br label %block_.L_4842f9

  ; Code: .L_484526:	 RIP: 484526	 Bytes: 0
block_.L_484526:

  ; Code: jmpq .L_48452b	 RIP: 484526	 Bytes: 5
  %loadMem_484526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484526 = call %struct.Memory* @routine_jmpq_.L_48452b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484526, i64 5, i64 5)
  store %struct.Memory* %call_484526, %struct.Memory** %MEMORY

  br label %block_.L_48452b

  ; Code: .L_48452b:	 RIP: 48452b	 Bytes: 0
block_.L_48452b:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 48452b	 Bytes: 3
  %loadMem_48452b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48452b = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48452b)
  store %struct.Memory* %call_48452b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48452e	 Bytes: 3
  %loadMem_48452e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48452e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48452e)
  store %struct.Memory* %call_48452e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 484531	 Bytes: 3
  %loadMem_484531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484531 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484531)
  store %struct.Memory* %call_484531, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4842e8	 RIP: 484534	 Bytes: 5
  %loadMem_484534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484534 = call %struct.Memory* @routine_jmpq_.L_4842e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484534, i64 -588, i64 5)
  store %struct.Memory* %call_484534, %struct.Memory** %MEMORY

  br label %block_.L_4842e8

  ; Code: .L_484539:	 RIP: 484539	 Bytes: 0
block_.L_484539:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 484539	 Bytes: 7
  %loadMem_484539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484539 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484539)
  store %struct.Memory* %call_484539, %struct.Memory** %MEMORY

  ; Code: .L_484540:	 RIP: 484540	 Bytes: 0
  br label %block_.L_484540
block_.L_484540:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 484540	 Bytes: 4
  %loadMem_484540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484540 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484540)
  store %struct.Memory* %call_484540, %struct.Memory** %MEMORY

  ; Code: jge .L_4845b8	 RIP: 484544	 Bytes: 6
  %loadMem_484544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484544 = call %struct.Memory* @routine_jge_.L_4845b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484544, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_484544, %struct.Memory** %MEMORY

  %loadBr_484544 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484544 = icmp eq i8 %loadBr_484544, 1
  br i1 %cmpBr_484544, label %block_.L_4845b8, label %block_48454a

block_48454a:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 48454a	 Bytes: 7
  %loadMem_48454a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48454a = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48454a)
  store %struct.Memory* %call_48454a, %struct.Memory** %MEMORY

  ; Code: .L_484551:	 RIP: 484551	 Bytes: 0
  br label %block_.L_484551
block_.L_484551:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 484551	 Bytes: 4
  %loadMem_484551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484551 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484551)
  store %struct.Memory* %call_484551, %struct.Memory** %MEMORY

  ; Code: jge .L_4845a5	 RIP: 484555	 Bytes: 6
  %loadMem_484555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484555 = call %struct.Memory* @routine_jge_.L_4845a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484555, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_484555, %struct.Memory** %MEMORY

  %loadBr_484555 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484555 = icmp eq i8 %loadBr_484555, 1
  br i1 %cmpBr_484555, label %block_.L_4845a5, label %block_48455b

block_48455b:
  ; Code: movq $0x723720, %rax	 RIP: 48455b	 Bytes: 10
  %loadMem_48455b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48455b = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48455b)
  store %struct.Memory* %call_48455b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484565	 Bytes: 4
  %loadMem_484565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484565 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484565)
  store %struct.Memory* %call_484565, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 484569	 Bytes: 4
  %loadMem_484569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484569 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484569)
  store %struct.Memory* %call_484569, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48456d	 Bytes: 3
  %loadMem_48456d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48456d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48456d)
  store %struct.Memory* %call_48456d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 484570	 Bytes: 4
  %loadMem_484570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484570 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484570)
  store %struct.Memory* %call_484570, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 484574	 Bytes: 3
  %loadMem_484574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484574 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484574)
  store %struct.Memory* %call_484574, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 484577	 Bytes: 8
  %loadMem_484577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484577 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484577)
  store %struct.Memory* %call_484577, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 48457f	 Bytes: 6
  %loadMem_48457f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48457f = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48457f)
  store %struct.Memory* %call_48457f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484585	 Bytes: 4
  %loadMem_484585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484585 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484585)
  store %struct.Memory* %call_484585, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 484589	 Bytes: 4
  %loadMem_484589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484589 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484589)
  store %struct.Memory* %call_484589, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48458d	 Bytes: 3
  %loadMem_48458d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48458d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48458d)
  store %struct.Memory* %call_48458d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 484590	 Bytes: 4
  %loadMem_484590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484590 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484590)
  store %struct.Memory* %call_484590, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 484594	 Bytes: 3
  %loadMem_484594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484594 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484594)
  store %struct.Memory* %call_484594, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484597	 Bytes: 3
  %loadMem_484597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484597 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484597)
  store %struct.Memory* %call_484597, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48459a	 Bytes: 3
  %loadMem_48459a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48459a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48459a)
  store %struct.Memory* %call_48459a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 48459d	 Bytes: 3
  %loadMem_48459d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48459d = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48459d)
  store %struct.Memory* %call_48459d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484551	 RIP: 4845a0	 Bytes: 5
  %loadMem_4845a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845a0 = call %struct.Memory* @routine_jmpq_.L_484551(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845a0, i64 -79, i64 5)
  store %struct.Memory* %call_4845a0, %struct.Memory** %MEMORY

  br label %block_.L_484551

  ; Code: .L_4845a5:	 RIP: 4845a5	 Bytes: 0
block_.L_4845a5:

  ; Code: jmpq .L_4845aa	 RIP: 4845a5	 Bytes: 5
  %loadMem_4845a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845a5 = call %struct.Memory* @routine_jmpq_.L_4845aa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845a5, i64 5, i64 5)
  store %struct.Memory* %call_4845a5, %struct.Memory** %MEMORY

  br label %block_.L_4845aa

  ; Code: .L_4845aa:	 RIP: 4845aa	 Bytes: 0
block_.L_4845aa:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4845aa	 Bytes: 3
  %loadMem_4845aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845aa = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845aa)
  store %struct.Memory* %call_4845aa, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4845ad	 Bytes: 3
  %loadMem_4845ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845ad = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845ad)
  store %struct.Memory* %call_4845ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4845b0	 Bytes: 3
  %loadMem_4845b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845b0 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845b0)
  store %struct.Memory* %call_4845b0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484540	 RIP: 4845b3	 Bytes: 5
  %loadMem_4845b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845b3 = call %struct.Memory* @routine_jmpq_.L_484540(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845b3, i64 -115, i64 5)
  store %struct.Memory* %call_4845b3, %struct.Memory** %MEMORY

  br label %block_.L_484540

  ; Code: .L_4845b8:	 RIP: 4845b8	 Bytes: 0
block_.L_4845b8:

  ; Code: movq 0x6cc628, %rdi	 RIP: 4845b8	 Bytes: 8
  %loadMem_4845b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845b8 = call %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845b8)
  store %struct.Memory* %call_4845b8, %struct.Memory** %MEMORY

  ; Code: callq .store_coding_state	 RIP: 4845c0	 Bytes: 5
  %loadMem1_4845c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4845c0 = call %struct.Memory* @routine_callq_.store_coding_state(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4845c0, i64 103168, i64 5, i64 5)
  store %struct.Memory* %call1_4845c0, %struct.Memory** %MEMORY

  %loadMem2_4845c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4845c0 = load i64, i64* %3
  %call2_4845c0 = call %struct.Memory* @sub_49d8c0.store_coding_state(%struct.State* %0, i64  %loadPC_4845c0, %struct.Memory* %loadMem2_4845c0)
  store %struct.Memory* %call2_4845c0, %struct.Memory** %MEMORY

  ; Code: leaq -0x48(%rbp), %rdi	 RIP: 4845c5	 Bytes: 4
  %loadMem_4845c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845c5 = call %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845c5)
  store %struct.Memory* %call_4845c5, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4845c9	 Bytes: 3
  %loadMem_4845c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845c9 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845c9)
  store %struct.Memory* %call_4845c9, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edx	 RIP: 4845cc	 Bytes: 3
  %loadMem_4845cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845cc = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845cc)
  store %struct.Memory* %call_4845cc, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 4845cf	 Bytes: 3
  %loadMem_4845cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845cf = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845cf)
  store %struct.Memory* %call_4845cf, %struct.Memory** %MEMORY

  ; Code: movsd -0x18(%rbp), %xmm0	 RIP: 4845d2	 Bytes: 5
  %loadMem_4845d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845d2 = call %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845d2)
  store %struct.Memory* %call_4845d2, %struct.Memory** %MEMORY

  ; Code: movsd -0x100(%rbp), %xmm1	 RIP: 4845d7	 Bytes: 8
  %loadMem_4845d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845d7 = call %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845d7)
  store %struct.Memory* %call_4845d7, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %r8d	 RIP: 4845df	 Bytes: 7
  %loadMem_4845df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845df = call %struct.Memory* @routine_movl_MINUS0x120__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845df)
  store %struct.Memory* %call_4845df, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_4x4IntraBlocks	 RIP: 4845e6	 Bytes: 5
  %loadMem1_4845e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4845e6 = call %struct.Memory* @routine_callq_.RDCost_for_4x4IntraBlocks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4845e6, i64 -5382, i64 5, i64 5)
  store %struct.Memory* %call1_4845e6, %struct.Memory** %MEMORY

  %loadMem2_4845e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4845e6 = load i64, i64* %3
  %call2_4845e6 = call %struct.Memory* @sub_4830e0.RDCost_for_4x4IntraBlocks(%struct.State* %0, i64  %loadPC_4845e6, %struct.Memory* %loadMem2_4845e6)
  store %struct.Memory* %call2_4845e6, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %ecx	 RIP: 4845eb	 Bytes: 4
  %loadMem_4845eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845eb = call %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845eb)
  store %struct.Memory* %call_4845eb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x160(%rbp)	 RIP: 4845ef	 Bytes: 6
  %loadMem_4845ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845ef = call %struct.Memory* @routine_movl__ecx__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845ef)
  store %struct.Memory* %call_4845ef, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc628, %rdi	 RIP: 4845f5	 Bytes: 8
  %loadMem_4845f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4845f5 = call %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4845f5)
  store %struct.Memory* %call_4845f5, %struct.Memory** %MEMORY

  ; Code: callq .reset_coding_state	 RIP: 4845fd	 Bytes: 5
  %loadMem1_4845fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4845fd = call %struct.Memory* @routine_callq_.reset_coding_state(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4845fd, i64 103939, i64 5, i64 5)
  store %struct.Memory* %call1_4845fd, %struct.Memory** %MEMORY

  %loadMem2_4845fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4845fd = load i64, i64* %3
  %call2_4845fd = call %struct.Memory* @sub_49dc00.reset_coding_state(%struct.State* %0, i64  %loadPC_4845fd, %struct.Memory* %loadMem2_4845fd)
  store %struct.Memory* %call2_4845fd, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 484602	 Bytes: 7
  %loadMem_484602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484602 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484602)
  store %struct.Memory* %call_484602, %struct.Memory** %MEMORY

  ; Code: .L_484609:	 RIP: 484609	 Bytes: 0
  br label %block_.L_484609
block_.L_484609:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 484609	 Bytes: 4
  %loadMem_484609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484609 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484609)
  store %struct.Memory* %call_484609, %struct.Memory** %MEMORY

  ; Code: jge .L_4846be	 RIP: 48460d	 Bytes: 6
  %loadMem_48460d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48460d = call %struct.Memory* @routine_jge_.L_4846be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48460d, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_48460d, %struct.Memory** %MEMORY

  %loadBr_48460d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48460d = icmp eq i8 %loadBr_48460d, 1
  br i1 %cmpBr_48460d, label %block_.L_4846be, label %block_484613

block_484613:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 484613	 Bytes: 7
  %loadMem_484613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484613 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484613)
  store %struct.Memory* %call_484613, %struct.Memory** %MEMORY

  ; Code: .L_48461a:	 RIP: 48461a	 Bytes: 0
  br label %block_.L_48461a
block_.L_48461a:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 48461a	 Bytes: 4
  %loadMem_48461a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48461a = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48461a)
  store %struct.Memory* %call_48461a, %struct.Memory** %MEMORY

  ; Code: jge .L_4846ab	 RIP: 48461e	 Bytes: 6
  %loadMem_48461e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48461e = call %struct.Memory* @routine_jge_.L_4846ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48461e, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_48461e, %struct.Memory** %MEMORY

  %loadBr_48461e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48461e = icmp eq i8 %loadBr_48461e, 1
  br i1 %cmpBr_48461e, label %block_.L_4846ab, label %block_484624

block_484624:
  ; Code: movq $0x6f6fa0, %rax	 RIP: 484624	 Bytes: 10
  %loadMem_484624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484624 = call %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484624)
  store %struct.Memory* %call_484624, %struct.Memory** %MEMORY

  ; Code: movq $0x722ff0, %rcx	 RIP: 48462e	 Bytes: 10
  %loadMem_48462e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48462e = call %struct.Memory* @routine_movq__0x722ff0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48462e)
  store %struct.Memory* %call_48462e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 484638	 Bytes: 8
  %loadMem_484638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484638 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484638)
  store %struct.Memory* %call_484638, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 484640	 Bytes: 7
  %loadMem_484640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484640 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484640)
  store %struct.Memory* %call_484640, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 484647	 Bytes: 4
  %loadMem_484647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484647 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484647)
  store %struct.Memory* %call_484647, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 48464b	 Bytes: 4
  %loadMem_48464b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48464b = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48464b)
  store %struct.Memory* %call_48464b, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 48464f	 Bytes: 3
  %loadMem_48464f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48464f = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48464f)
  store %struct.Memory* %call_48464f, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 484652	 Bytes: 4
  %loadMem_484652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484652 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484652)
  store %struct.Memory* %call_484652, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 484656	 Bytes: 3
  %loadMem_484656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484656 = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484656)
  store %struct.Memory* %call_484656, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 484659	 Bytes: 4
  %loadMem_484659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484659 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484659)
  store %struct.Memory* %call_484659, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 48465d	 Bytes: 4
  %loadMem_48465d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48465d = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48465d)
  store %struct.Memory* %call_48465d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484661	 Bytes: 3
  %loadMem_484661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484661 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484661)
  store %struct.Memory* %call_484661, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 484664	 Bytes: 4
  %loadMem_484664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484664 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484664)
  store %struct.Memory* %call_484664, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rdx,4)	 RIP: 484668	 Bytes: 3
  %loadMem_484668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484668 = call %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484668)
  store %struct.Memory* %call_484668, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48466b	 Bytes: 4
  %loadMem_48466b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48466b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48466b)
  store %struct.Memory* %call_48466b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 48466f	 Bytes: 4
  %loadMem_48466f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48466f = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48466f)
  store %struct.Memory* %call_48466f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 484673	 Bytes: 3
  %loadMem_484673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484673 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484673)
  store %struct.Memory* %call_484673, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 484676	 Bytes: 4
  %loadMem_484676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484676 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484676)
  store %struct.Memory* %call_484676, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 48467a	 Bytes: 3
  %loadMem_48467a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48467a = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48467a)
  store %struct.Memory* %call_48467a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 48467d	 Bytes: 8
  %loadMem_48467d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48467d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48467d)
  store %struct.Memory* %call_48467d, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 484685	 Bytes: 6
  %loadMem_484685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484685 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484685)
  store %struct.Memory* %call_484685, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48468b	 Bytes: 4
  %loadMem_48468b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48468b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48468b)
  store %struct.Memory* %call_48468b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 48468f	 Bytes: 4
  %loadMem_48468f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48468f = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48468f)
  store %struct.Memory* %call_48468f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 484693	 Bytes: 3
  %loadMem_484693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484693 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484693)
  store %struct.Memory* %call_484693, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 484696	 Bytes: 4
  %loadMem_484696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484696 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484696)
  store %struct.Memory* %call_484696, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 48469a	 Bytes: 3
  %loadMem_48469a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48469a = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48469a)
  store %struct.Memory* %call_48469a, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 48469d	 Bytes: 3
  %loadMem_48469d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48469d = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48469d)
  store %struct.Memory* %call_48469d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4846a0	 Bytes: 3
  %loadMem_4846a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846a0 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846a0)
  store %struct.Memory* %call_4846a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4846a3	 Bytes: 3
  %loadMem_4846a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846a3 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846a3)
  store %struct.Memory* %call_4846a3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48461a	 RIP: 4846a6	 Bytes: 5
  %loadMem_4846a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846a6 = call %struct.Memory* @routine_jmpq_.L_48461a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846a6, i64 -140, i64 5)
  store %struct.Memory* %call_4846a6, %struct.Memory** %MEMORY

  br label %block_.L_48461a

  ; Code: .L_4846ab:	 RIP: 4846ab	 Bytes: 0
block_.L_4846ab:

  ; Code: jmpq .L_4846b0	 RIP: 4846ab	 Bytes: 5
  %loadMem_4846ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846ab = call %struct.Memory* @routine_jmpq_.L_4846b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846ab, i64 5, i64 5)
  store %struct.Memory* %call_4846ab, %struct.Memory** %MEMORY

  br label %block_.L_4846b0

  ; Code: .L_4846b0:	 RIP: 4846b0	 Bytes: 0
block_.L_4846b0:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4846b0	 Bytes: 3
  %loadMem_4846b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846b0 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846b0)
  store %struct.Memory* %call_4846b0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4846b3	 Bytes: 3
  %loadMem_4846b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846b3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846b3)
  store %struct.Memory* %call_4846b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4846b6	 Bytes: 3
  %loadMem_4846b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846b6 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846b6)
  store %struct.Memory* %call_4846b6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484609	 RIP: 4846b9	 Bytes: 5
  %loadMem_4846b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846b9 = call %struct.Memory* @routine_jmpq_.L_484609(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846b9, i64 -176, i64 5)
  store %struct.Memory* %call_4846b9, %struct.Memory** %MEMORY

  br label %block_.L_484609

  ; Code: .L_4846be:	 RIP: 4846be	 Bytes: 0
block_.L_4846be:

  ; Code: movq 0x6cc628, %rdi	 RIP: 4846be	 Bytes: 8
  %loadMem_4846be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846be = call %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846be)
  store %struct.Memory* %call_4846be, %struct.Memory** %MEMORY

  ; Code: callq .store_coding_state	 RIP: 4846c6	 Bytes: 5
  %loadMem1_4846c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4846c6 = call %struct.Memory* @routine_callq_.store_coding_state(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4846c6, i64 102906, i64 5, i64 5)
  store %struct.Memory* %call1_4846c6, %struct.Memory** %MEMORY

  %loadMem2_4846c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4846c6 = load i64, i64* %3
  %call2_4846c6 = call %struct.Memory* @sub_49d8c0.store_coding_state(%struct.State* %0, i64  %loadPC_4846c6, %struct.Memory* %loadMem2_4846c6)
  store %struct.Memory* %call2_4846c6, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 4846cb	 Bytes: 2
  %loadMem_4846cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846cb = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846cb)
  store %struct.Memory* %call_4846cb, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4846cd	 Bytes: 3
  %loadMem_4846cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846cd = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846cd)
  store %struct.Memory* %call_4846cd, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 4846d0	 Bytes: 3
  %loadMem_4846d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846d0 = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846d0)
  store %struct.Memory* %call_4846d0, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %esi	 RIP: 4846d3	 Bytes: 3
  %loadMem_4846d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846d3 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846d3)
  store %struct.Memory* %call_4846d3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4846d6	 Bytes: 2
  %loadMem_4846d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846d6 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846d6)
  store %struct.Memory* %call_4846d6, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_4x4Blocks_Chroma	 RIP: 4846d8	 Bytes: 5
  %loadMem1_4846d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4846d8 = call %struct.Memory* @routine_callq_.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4846d8, i64 -4536, i64 5, i64 5)
  store %struct.Memory* %call1_4846d8, %struct.Memory** %MEMORY

  %loadMem2_4846d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4846d8 = load i64, i64* %3
  %call2_4846d8 = call %struct.Memory* @sub_483520.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  %loadPC_4846d8, %struct.Memory* %loadMem2_4846d8)
  store %struct.Memory* %call2_4846d8, %struct.Memory** %MEMORY

  ; Code: addl -0x160(%rbp), %eax	 RIP: 4846dd	 Bytes: 6
  %loadMem_4846dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846dd = call %struct.Memory* @routine_addl_MINUS0x160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846dd)
  store %struct.Memory* %call_4846dd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x160(%rbp)	 RIP: 4846e3	 Bytes: 6
  %loadMem_4846e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846e3 = call %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846e3)
  store %struct.Memory* %call_4846e3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4846e9	 Bytes: 7
  %loadMem_4846e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846e9 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846e9)
  store %struct.Memory* %call_4846e9, %struct.Memory** %MEMORY

  ; Code: .L_4846f0:	 RIP: 4846f0	 Bytes: 0
  br label %block_.L_4846f0
block_.L_4846f0:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4846f0	 Bytes: 4
  %loadMem_4846f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846f0 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846f0)
  store %struct.Memory* %call_4846f0, %struct.Memory** %MEMORY

  ; Code: jge .L_4847a5	 RIP: 4846f4	 Bytes: 6
  %loadMem_4846f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846f4 = call %struct.Memory* @routine_jge_.L_4847a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846f4, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_4846f4, %struct.Memory** %MEMORY

  %loadBr_4846f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4846f4 = icmp eq i8 %loadBr_4846f4, 1
  br i1 %cmpBr_4846f4, label %block_.L_4847a5, label %block_4846fa

block_4846fa:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4846fa	 Bytes: 7
  %loadMem_4846fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4846fa = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4846fa)
  store %struct.Memory* %call_4846fa, %struct.Memory** %MEMORY

  ; Code: .L_484701:	 RIP: 484701	 Bytes: 0
  br label %block_.L_484701
block_.L_484701:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 484701	 Bytes: 4
  %loadMem_484701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484701 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484701)
  store %struct.Memory* %call_484701, %struct.Memory** %MEMORY

  ; Code: jge .L_484792	 RIP: 484705	 Bytes: 6
  %loadMem_484705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484705 = call %struct.Memory* @routine_jge_.L_484792(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484705, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_484705, %struct.Memory** %MEMORY

  %loadBr_484705 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484705 = icmp eq i8 %loadBr_484705, 1
  br i1 %cmpBr_484705, label %block_.L_484792, label %block_48470b

block_48470b:
  ; Code: movq $0x6d40f0, %rax	 RIP: 48470b	 Bytes: 10
  %loadMem_48470b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48470b = call %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48470b)
  store %struct.Memory* %call_48470b, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 484715	 Bytes: 10
  %loadMem_484715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484715 = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484715)
  store %struct.Memory* %call_484715, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 48471f	 Bytes: 8
  %loadMem_48471f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48471f = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48471f)
  store %struct.Memory* %call_48471f, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 484727	 Bytes: 7
  %loadMem_484727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484727 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484727)
  store %struct.Memory* %call_484727, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 48472e	 Bytes: 4
  %loadMem_48472e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48472e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48472e)
  store %struct.Memory* %call_48472e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 484732	 Bytes: 4
  %loadMem_484732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484732 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484732)
  store %struct.Memory* %call_484732, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484736	 Bytes: 3
  %loadMem_484736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484736 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484736)
  store %struct.Memory* %call_484736, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 484739	 Bytes: 4
  %loadMem_484739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484739 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484739)
  store %struct.Memory* %call_484739, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 48473d	 Bytes: 3
  %loadMem_48473d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48473d = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48473d)
  store %struct.Memory* %call_48473d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 484740	 Bytes: 4
  %loadMem_484740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484740 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484740)
  store %struct.Memory* %call_484740, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 484744	 Bytes: 4
  %loadMem_484744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484744 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484744)
  store %struct.Memory* %call_484744, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484748	 Bytes: 3
  %loadMem_484748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484748 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484748)
  store %struct.Memory* %call_484748, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 48474b	 Bytes: 4
  %loadMem_48474b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48474b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48474b)
  store %struct.Memory* %call_48474b, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rdx,4)	 RIP: 48474f	 Bytes: 3
  %loadMem_48474f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48474f = call %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48474f)
  store %struct.Memory* %call_48474f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484752	 Bytes: 4
  %loadMem_484752 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484752 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484752)
  store %struct.Memory* %call_484752, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 484756	 Bytes: 4
  %loadMem_484756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484756 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484756)
  store %struct.Memory* %call_484756, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48475a	 Bytes: 3
  %loadMem_48475a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48475a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48475a)
  store %struct.Memory* %call_48475a, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48475d	 Bytes: 4
  %loadMem_48475d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48475d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48475d)
  store %struct.Memory* %call_48475d, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 484761	 Bytes: 3
  %loadMem_484761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484761 = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484761)
  store %struct.Memory* %call_484761, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 484764	 Bytes: 8
  %loadMem_484764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484764 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484764)
  store %struct.Memory* %call_484764, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 48476c	 Bytes: 6
  %loadMem_48476c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48476c = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48476c)
  store %struct.Memory* %call_48476c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484772	 Bytes: 4
  %loadMem_484772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484772 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484772)
  store %struct.Memory* %call_484772, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 484776	 Bytes: 4
  %loadMem_484776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484776 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484776)
  store %struct.Memory* %call_484776, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48477a	 Bytes: 3
  %loadMem_48477a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48477a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48477a)
  store %struct.Memory* %call_48477a, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48477d	 Bytes: 4
  %loadMem_48477d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48477d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48477d)
  store %struct.Memory* %call_48477d, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 484781	 Bytes: 3
  %loadMem_484781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484781 = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484781)
  store %struct.Memory* %call_484781, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484784	 Bytes: 3
  %loadMem_484784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484784 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484784)
  store %struct.Memory* %call_484784, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484787	 Bytes: 3
  %loadMem_484787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484787 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484787)
  store %struct.Memory* %call_484787, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 48478a	 Bytes: 3
  %loadMem_48478a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48478a = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48478a)
  store %struct.Memory* %call_48478a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484701	 RIP: 48478d	 Bytes: 5
  %loadMem_48478d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48478d = call %struct.Memory* @routine_jmpq_.L_484701(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48478d, i64 -140, i64 5)
  store %struct.Memory* %call_48478d, %struct.Memory** %MEMORY

  br label %block_.L_484701

  ; Code: .L_484792:	 RIP: 484792	 Bytes: 0
block_.L_484792:

  ; Code: jmpq .L_484797	 RIP: 484792	 Bytes: 5
  %loadMem_484792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484792 = call %struct.Memory* @routine_jmpq_.L_484797(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484792, i64 5, i64 5)
  store %struct.Memory* %call_484792, %struct.Memory** %MEMORY

  br label %block_.L_484797

  ; Code: .L_484797:	 RIP: 484797	 Bytes: 0
block_.L_484797:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 484797	 Bytes: 3
  %loadMem_484797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484797 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484797)
  store %struct.Memory* %call_484797, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48479a	 Bytes: 3
  %loadMem_48479a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48479a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48479a)
  store %struct.Memory* %call_48479a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 48479d	 Bytes: 3
  %loadMem_48479d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48479d = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48479d)
  store %struct.Memory* %call_48479d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4846f0	 RIP: 4847a0	 Bytes: 5
  %loadMem_4847a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847a0 = call %struct.Memory* @routine_jmpq_.L_4846f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847a0, i64 -176, i64 5)
  store %struct.Memory* %call_4847a0, %struct.Memory** %MEMORY

  br label %block_.L_4846f0

  ; Code: .L_4847a5:	 RIP: 4847a5	 Bytes: 0
block_.L_4847a5:

  ; Code: movl $0x1, %edx	 RIP: 4847a5	 Bytes: 5
  %loadMem_4847a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847a5 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847a5)
  store %struct.Memory* %call_4847a5, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4847aa	 Bytes: 3
  %loadMem_4847aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847aa = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847aa)
  store %struct.Memory* %call_4847aa, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %eax	 RIP: 4847ad	 Bytes: 3
  %loadMem_4847ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847ad = call %struct.Memory* @routine_addl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847ad)
  store %struct.Memory* %call_4847ad, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %esi	 RIP: 4847b0	 Bytes: 3
  %loadMem_4847b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847b0 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847b0)
  store %struct.Memory* %call_4847b0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 4847b3	 Bytes: 2
  %loadMem_4847b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847b3 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847b3)
  store %struct.Memory* %call_4847b3, %struct.Memory** %MEMORY

  ; Code: callq .RDCost_for_4x4Blocks_Chroma	 RIP: 4847b5	 Bytes: 5
  %loadMem1_4847b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4847b5 = call %struct.Memory* @routine_callq_.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4847b5, i64 -4757, i64 5, i64 5)
  store %struct.Memory* %call1_4847b5, %struct.Memory** %MEMORY

  %loadMem2_4847b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4847b5 = load i64, i64* %3
  %call2_4847b5 = call %struct.Memory* @sub_483520.RDCost_for_4x4Blocks_Chroma(%struct.State* %0, i64  %loadPC_4847b5, %struct.Memory* %loadMem2_4847b5)
  store %struct.Memory* %call2_4847b5, %struct.Memory** %MEMORY

  ; Code: addl -0x160(%rbp), %eax	 RIP: 4847ba	 Bytes: 6
  %loadMem_4847ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847ba = call %struct.Memory* @routine_addl_MINUS0x160__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847ba)
  store %struct.Memory* %call_4847ba, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x160(%rbp)	 RIP: 4847c0	 Bytes: 6
  %loadMem_4847c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847c0 = call %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847c0)
  store %struct.Memory* %call_4847c0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc628, %rdi	 RIP: 4847c6	 Bytes: 8
  %loadMem_4847c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847c6 = call %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847c6)
  store %struct.Memory* %call_4847c6, %struct.Memory** %MEMORY

  ; Code: callq .reset_coding_state	 RIP: 4847ce	 Bytes: 5
  %loadMem1_4847ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4847ce = call %struct.Memory* @routine_callq_.reset_coding_state(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4847ce, i64 103474, i64 5, i64 5)
  store %struct.Memory* %call1_4847ce, %struct.Memory** %MEMORY

  %loadMem2_4847ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4847ce = load i64, i64* %3
  %call2_4847ce = call %struct.Memory* @sub_49dc00.reset_coding_state(%struct.State* %0, i64  %loadPC_4847ce, %struct.Memory* %loadMem2_4847ce)
  store %struct.Memory* %call2_4847ce, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4847d3	 Bytes: 7
  %loadMem_4847d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847d3 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847d3)
  store %struct.Memory* %call_4847d3, %struct.Memory** %MEMORY

  ; Code: .L_4847da:	 RIP: 4847da	 Bytes: 0
  br label %block_.L_4847da
block_.L_4847da:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4847da	 Bytes: 4
  %loadMem_4847da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847da = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847da)
  store %struct.Memory* %call_4847da, %struct.Memory** %MEMORY

  ; Code: jge .L_484853	 RIP: 4847de	 Bytes: 6
  %loadMem_4847de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847de = call %struct.Memory* @routine_jge_.L_484853(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847de, i8* %BRANCH_TAKEN, i64 117, i64 6, i64 6)
  store %struct.Memory* %call_4847de, %struct.Memory** %MEMORY

  %loadBr_4847de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4847de = icmp eq i8 %loadBr_4847de, 1
  br i1 %cmpBr_4847de, label %block_.L_484853, label %block_4847e4

block_4847e4:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4847e4	 Bytes: 7
  %loadMem_4847e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847e4 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847e4)
  store %struct.Memory* %call_4847e4, %struct.Memory** %MEMORY

  ; Code: .L_4847eb:	 RIP: 4847eb	 Bytes: 0
  br label %block_.L_4847eb
block_.L_4847eb:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4847eb	 Bytes: 4
  %loadMem_4847eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847eb = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847eb)
  store %struct.Memory* %call_4847eb, %struct.Memory** %MEMORY

  ; Code: jge .L_484840	 RIP: 4847ef	 Bytes: 6
  %loadMem_4847ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847ef = call %struct.Memory* @routine_jge_.L_484840(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847ef, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_4847ef, %struct.Memory** %MEMORY

  %loadBr_4847ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4847ef = icmp eq i8 %loadBr_4847ef, 1
  br i1 %cmpBr_4847ef, label %block_.L_484840, label %block_4847f5

block_4847f5:
  ; Code: movq $0x6d2ec0, %rax	 RIP: 4847f5	 Bytes: 10
  %loadMem_4847f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847f5 = call %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847f5)
  store %struct.Memory* %call_4847f5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4847ff	 Bytes: 8
  %loadMem_4847ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4847ff = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4847ff)
  store %struct.Memory* %call_4847ff, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 484807	 Bytes: 7
  %loadMem_484807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484807 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484807)
  store %struct.Memory* %call_484807, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 48480e	 Bytes: 4
  %loadMem_48480e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48480e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48480e)
  store %struct.Memory* %call_48480e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 484812	 Bytes: 4
  %loadMem_484812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484812 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484812)
  store %struct.Memory* %call_484812, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484816	 Bytes: 3
  %loadMem_484816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484816 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484816)
  store %struct.Memory* %call_484816, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 484819	 Bytes: 4
  %loadMem_484819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484819 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484819)
  store %struct.Memory* %call_484819, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 48481d	 Bytes: 3
  %loadMem_48481d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48481d = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48481d)
  store %struct.Memory* %call_48481d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 484820	 Bytes: 4
  %loadMem_484820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484820 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484820)
  store %struct.Memory* %call_484820, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 484824	 Bytes: 4
  %loadMem_484824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484824 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484824)
  store %struct.Memory* %call_484824, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 484828	 Bytes: 3
  %loadMem_484828 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484828 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484828)
  store %struct.Memory* %call_484828, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48482b	 Bytes: 4
  %loadMem_48482b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48482b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48482b)
  store %struct.Memory* %call_48482b, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 48482f	 Bytes: 3
  %loadMem_48482f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48482f = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48482f)
  store %struct.Memory* %call_48482f, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484832	 Bytes: 3
  %loadMem_484832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484832 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484832)
  store %struct.Memory* %call_484832, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484835	 Bytes: 3
  %loadMem_484835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484835 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484835)
  store %struct.Memory* %call_484835, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 484838	 Bytes: 3
  %loadMem_484838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484838 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484838)
  store %struct.Memory* %call_484838, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4847eb	 RIP: 48483b	 Bytes: 5
  %loadMem_48483b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48483b = call %struct.Memory* @routine_jmpq_.L_4847eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48483b, i64 -80, i64 5)
  store %struct.Memory* %call_48483b, %struct.Memory** %MEMORY

  br label %block_.L_4847eb

  ; Code: .L_484840:	 RIP: 484840	 Bytes: 0
block_.L_484840:

  ; Code: jmpq .L_484845	 RIP: 484840	 Bytes: 5
  %loadMem_484840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484840 = call %struct.Memory* @routine_jmpq_.L_484845(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484840, i64 5, i64 5)
  store %struct.Memory* %call_484840, %struct.Memory** %MEMORY

  br label %block_.L_484845

  ; Code: .L_484845:	 RIP: 484845	 Bytes: 0
block_.L_484845:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 484845	 Bytes: 3
  %loadMem_484845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484845 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484845)
  store %struct.Memory* %call_484845, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484848	 Bytes: 3
  %loadMem_484848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484848 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484848)
  store %struct.Memory* %call_484848, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 48484b	 Bytes: 3
  %loadMem_48484b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48484b = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48484b)
  store %struct.Memory* %call_48484b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4847da	 RIP: 48484e	 Bytes: 5
  %loadMem_48484e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48484e = call %struct.Memory* @routine_jmpq_.L_4847da(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48484e, i64 -116, i64 5)
  store %struct.Memory* %call_48484e, %struct.Memory** %MEMORY

  br label %block_.L_4847da

  ; Code: .L_484853:	 RIP: 484853	 Bytes: 0
block_.L_484853:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 484853	 Bytes: 7
  %loadMem_484853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484853 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484853)
  store %struct.Memory* %call_484853, %struct.Memory** %MEMORY

  ; Code: .L_48485a:	 RIP: 48485a	 Bytes: 0
  br label %block_.L_48485a
block_.L_48485a:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 48485a	 Bytes: 4
  %loadMem_48485a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48485a = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48485a)
  store %struct.Memory* %call_48485a, %struct.Memory** %MEMORY

  ; Code: jge .L_484ee2	 RIP: 48485e	 Bytes: 6
  %loadMem_48485e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48485e = call %struct.Memory* @routine_jge_.L_484ee2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48485e, i8* %BRANCH_TAKEN, i64 1668, i64 6, i64 6)
  store %struct.Memory* %call_48485e, %struct.Memory** %MEMORY

  %loadBr_48485e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48485e = icmp eq i8 %loadBr_48485e, 1
  br i1 %cmpBr_48485e, label %block_.L_484ee2, label %block_484864

block_484864:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 484864	 Bytes: 7
  %loadMem_484864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484864 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484864)
  store %struct.Memory* %call_484864, %struct.Memory** %MEMORY

  ; Code: .L_48486b:	 RIP: 48486b	 Bytes: 0
  br label %block_.L_48486b
block_.L_48486b:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 48486b	 Bytes: 4
  %loadMem_48486b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48486b = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48486b)
  store %struct.Memory* %call_48486b, %struct.Memory** %MEMORY

  ; Code: jge .L_484ecf	 RIP: 48486f	 Bytes: 6
  %loadMem_48486f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48486f = call %struct.Memory* @routine_jge_.L_484ecf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48486f, i8* %BRANCH_TAKEN, i64 1632, i64 6, i64 6)
  store %struct.Memory* %call_48486f, %struct.Memory** %MEMORY

  %loadBr_48486f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48486f = icmp eq i8 %loadBr_48486f, 1
  br i1 %cmpBr_48486f, label %block_.L_484ecf, label %block_484875

block_484875:
  ; Code: xorl %eax, %eax	 RIP: 484875	 Bytes: 2
  %loadMem_484875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484875 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484875)
  store %struct.Memory* %call_484875, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 484877	 Bytes: 10
  %loadMem_484877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484877 = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484877)
  store %struct.Memory* %call_484877, %struct.Memory** %MEMORY

  ; Code: movq $0x6d2ec0, %rdx	 RIP: 484881	 Bytes: 10
  %loadMem_484881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484881 = call %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484881)
  store %struct.Memory* %call_484881, %struct.Memory** %MEMORY

  ; Code: movq $0x722ff0, %rsi	 RIP: 48488b	 Bytes: 10
  %loadMem_48488b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48488b = call %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48488b)
  store %struct.Memory* %call_48488b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 484895	 Bytes: 4
  %loadMem_484895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484895 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484895)
  store %struct.Memory* %call_484895, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 484899	 Bytes: 4
  %loadMem_484899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484899 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484899)
  store %struct.Memory* %call_484899, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 48489d	 Bytes: 3
  %loadMem_48489d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48489d = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48489d)
  store %struct.Memory* %call_48489d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4848a0	 Bytes: 4
  %loadMem_4848a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848a0 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848a0)
  store %struct.Memory* %call_4848a0, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdi,4), %r8d	 RIP: 4848a4	 Bytes: 4
  %loadMem_4848a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848a4 = call %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848a4)
  store %struct.Memory* %call_4848a4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4848a8	 Bytes: 4
  %loadMem_4848a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848a8 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848a8)
  store %struct.Memory* %call_4848a8, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4848ac	 Bytes: 4
  %loadMem_4848ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848ac = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848ac)
  store %struct.Memory* %call_4848ac, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 4848b0	 Bytes: 3
  %loadMem_4848b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848b0 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848b0)
  store %struct.Memory* %call_4848b0, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4848b3	 Bytes: 3
  %loadMem_4848b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848b3 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848b3)
  store %struct.Memory* %call_4848b3, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4848b6	 Bytes: 4
  %loadMem_4848b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848b6 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848b6)
  store %struct.Memory* %call_4848b6, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%rsi,4), %r9d	 RIP: 4848ba	 Bytes: 4
  %loadMem_4848ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848ba = call %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848ba)
  store %struct.Memory* %call_4848ba, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4848be	 Bytes: 4
  %loadMem_4848be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848be = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848be)
  store %struct.Memory* %call_4848be, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 4848c2	 Bytes: 3
  %loadMem_4848c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848c2 = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848c2)
  store %struct.Memory* %call_4848c2, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x168(%rbp)	 RIP: 4848c5	 Bytes: 7
  %loadMem_4848c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848c5 = call %struct.Memory* @routine_movl__r8d__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848c5)
  store %struct.Memory* %call_4848c5, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4848cc	 Bytes: 4
  %loadMem_4848cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848cc = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848cc)
  store %struct.Memory* %call_4848cc, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4848d0	 Bytes: 4
  %loadMem_4848d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848d0 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848d0)
  store %struct.Memory* %call_4848d0, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4848d4	 Bytes: 3
  %loadMem_4848d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848d4 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848d4)
  store %struct.Memory* %call_4848d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4848d7	 Bytes: 4
  %loadMem_4848d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848d7 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848d7)
  store %struct.Memory* %call_4848d7, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r8d	 RIP: 4848db	 Bytes: 4
  %loadMem_4848db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848db = call %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848db)
  store %struct.Memory* %call_4848db, %struct.Memory** %MEMORY

  ; Code: addl -0x168(%rbp), %r8d	 RIP: 4848df	 Bytes: 7
  %loadMem_4848df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848df = call %struct.Memory* @routine_addl_MINUS0x168__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848df)
  store %struct.Memory* %call_4848df, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x158(%rbp)	 RIP: 4848e6	 Bytes: 7
  %loadMem_4848e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848e6 = call %struct.Memory* @routine_movl__r8d__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848e6)
  store %struct.Memory* %call_4848e6, %struct.Memory** %MEMORY

  ; Code: movl -0x168(%rbp), %r8d	 RIP: 4848ed	 Bytes: 7
  %loadMem_4848ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848ed = call %struct.Memory* @routine_movl_MINUS0x168__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848ed)
  store %struct.Memory* %call_4848ed, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4848f4	 Bytes: 4
  %loadMem_4848f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848f4 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848f4)
  store %struct.Memory* %call_4848f4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4848f8	 Bytes: 4
  %loadMem_4848f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848f8 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848f8)
  store %struct.Memory* %call_4848f8, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4848fc	 Bytes: 3
  %loadMem_4848fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848fc = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848fc)
  store %struct.Memory* %call_4848fc, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4848ff	 Bytes: 3
  %loadMem_4848ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4848ff = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4848ff)
  store %struct.Memory* %call_4848ff, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 484902	 Bytes: 4
  %loadMem_484902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484902 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484902)
  store %struct.Memory* %call_484902, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %r9d	 RIP: 484906	 Bytes: 4
  %loadMem_484906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484906 = call %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484906)
  store %struct.Memory* %call_484906, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 48490a	 Bytes: 4
  %loadMem_48490a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48490a = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48490a)
  store %struct.Memory* %call_48490a, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 48490e	 Bytes: 3
  %loadMem_48490e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48490e = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48490e)
  store %struct.Memory* %call_48490e, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x15c(%rbp)	 RIP: 484911	 Bytes: 7
  %loadMem_484911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484911 = call %struct.Memory* @routine_movl__r8d__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484911)
  store %struct.Memory* %call_484911, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %r8d	 RIP: 484918	 Bytes: 7
  %loadMem_484918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484918 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484918)
  store %struct.Memory* %call_484918, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 48491f	 Bytes: 4
  %loadMem_48491f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48491f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48491f)
  store %struct.Memory* %call_48491f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 484923	 Bytes: 4
  %loadMem_484923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484923 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484923)
  store %struct.Memory* %call_484923, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484927	 Bytes: 3
  %loadMem_484927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484927 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484927)
  store %struct.Memory* %call_484927, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 48492a	 Bytes: 4
  %loadMem_48492a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48492a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48492a)
  store %struct.Memory* %call_48492a, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %r8d	 RIP: 48492e	 Bytes: 4
  %loadMem_48492e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48492e = call %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48492e)
  store %struct.Memory* %call_48492e, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x154(%rbp)	 RIP: 484932	 Bytes: 7
  %loadMem_484932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484932 = call %struct.Memory* @routine_movl__r8d__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484932)
  store %struct.Memory* %call_484932, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 484939	 Bytes: 8
  %loadMem_484939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484939 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484939)
  store %struct.Memory* %call_484939, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rcx), %r8d	 RIP: 484941	 Bytes: 7
  %loadMem_484941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484941 = call %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484941)
  store %struct.Memory* %call_484941, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %r9d	 RIP: 484948	 Bytes: 7
  %loadMem_484948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484948 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484948)
  store %struct.Memory* %call_484948, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 48494f	 Bytes: 8
  %loadMem_48494f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48494f = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48494f)
  store %struct.Memory* %call_48494f, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 484957	 Bytes: 7
  %loadMem_484957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484957 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484957)
  store %struct.Memory* %call_484957, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 48495e	 Bytes: 7
  %loadMem_48495e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48495e = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48495e)
  store %struct.Memory* %call_48495e, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 484965	 Bytes: 4
  %loadMem_484965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484965 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484965)
  store %struct.Memory* %call_484965, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484969	 Bytes: 3
  %loadMem_484969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484969 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484969)
  store %struct.Memory* %call_484969, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r10d	 RIP: 48496c	 Bytes: 7
  %loadMem_48496c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48496c = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48496c)
  store %struct.Memory* %call_48496c, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r10d	 RIP: 484973	 Bytes: 4
  %loadMem_484973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484973 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484973)
  store %struct.Memory* %call_484973, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 484977	 Bytes: 3
  %loadMem_484977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484977 = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484977)
  store %struct.Memory* %call_484977, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 48497a	 Bytes: 4
  %loadMem_48497a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48497a = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48497a)
  store %struct.Memory* %call_48497a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 48497e	 Bytes: 3
  %loadMem_48497e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48497e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48497e)
  store %struct.Memory* %call_48497e, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r10d	 RIP: 484981	 Bytes: 7
  %loadMem_484981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484981 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484981)
  store %struct.Memory* %call_484981, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r10d	 RIP: 484988	 Bytes: 4
  %loadMem_484988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484988 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484988)
  store %struct.Memory* %call_484988, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 48498c	 Bytes: 3
  %loadMem_48498c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48498c = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48498c)
  store %struct.Memory* %call_48498c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %r10d	 RIP: 48498f	 Bytes: 5
  %loadMem_48498f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48498f = call %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48498f)
  store %struct.Memory* %call_48498f, %struct.Memory** %MEMORY

  ; Code: addl %r10d, %r9d	 RIP: 484994	 Bytes: 3
  %loadMem_484994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484994 = call %struct.Memory* @routine_addl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484994)
  store %struct.Memory* %call_484994, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %eax	 RIP: 484997	 Bytes: 3
  %loadMem_484997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484997 = call %struct.Memory* @routine_cmpl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484997)
  store %struct.Memory* %call_484997, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x230(%rbp)	 RIP: 48499a	 Bytes: 7
  %loadMem_48499a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48499a = call %struct.Memory* @routine_movl__r8d__MINUS0x230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48499a)
  store %struct.Memory* %call_48499a, %struct.Memory** %MEMORY

  ; Code: jle .L_4849b4	 RIP: 4849a1	 Bytes: 6
  %loadMem_4849a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849a1 = call %struct.Memory* @routine_jle_.L_4849b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849a1, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4849a1, %struct.Memory** %MEMORY

  %loadBr_4849a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4849a1 = icmp eq i8 %loadBr_4849a1, 1
  br i1 %cmpBr_4849a1, label %block_.L_4849b4, label %block_4849a7

block_4849a7:
  ; Code: xorl %eax, %eax	 RIP: 4849a7	 Bytes: 2
  %loadMem_4849a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849a7 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849a7)
  store %struct.Memory* %call_4849a7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x234(%rbp)	 RIP: 4849a9	 Bytes: 6
  %loadMem_4849a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849a9 = call %struct.Memory* @routine_movl__eax__MINUS0x234__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849a9)
  store %struct.Memory* %call_4849a9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484a02	 RIP: 4849af	 Bytes: 5
  %loadMem_4849af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849af = call %struct.Memory* @routine_jmpq_.L_484a02(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849af, i64 83, i64 5)
  store %struct.Memory* %call_4849af, %struct.Memory** %MEMORY

  br label %block_.L_484a02

  ; Code: .L_4849b4:	 RIP: 4849b4	 Bytes: 0
block_.L_4849b4:

  ; Code: movl -0x15c(%rbp), %eax	 RIP: 4849b4	 Bytes: 6
  %loadMem_4849b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849b4 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849b4)
  store %struct.Memory* %call_4849b4, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4849ba	 Bytes: 8
  %loadMem_4849ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849ba = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849ba)
  store %struct.Memory* %call_4849ba, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4849c2	 Bytes: 7
  %loadMem_4849c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849c2 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849c2)
  store %struct.Memory* %call_4849c2, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 4849c9	 Bytes: 7
  %loadMem_4849c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849c9 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849c9)
  store %struct.Memory* %call_4849c9, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4849d0	 Bytes: 4
  %loadMem_4849d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849d0 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849d0)
  store %struct.Memory* %call_4849d0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4849d4	 Bytes: 3
  %loadMem_4849d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849d4 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849d4)
  store %struct.Memory* %call_4849d4, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 4849d7	 Bytes: 6
  %loadMem_4849d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849d7 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849d7)
  store %struct.Memory* %call_4849d7, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4849dd	 Bytes: 3
  %loadMem_4849dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849dd = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849dd)
  store %struct.Memory* %call_4849dd, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4849e0	 Bytes: 3
  %loadMem_4849e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849e0 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849e0)
  store %struct.Memory* %call_4849e0, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4849e3	 Bytes: 4
  %loadMem_4849e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849e3 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849e3)
  store %struct.Memory* %call_4849e3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4849e7	 Bytes: 3
  %loadMem_4849e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849e7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849e7)
  store %struct.Memory* %call_4849e7, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 4849ea	 Bytes: 6
  %loadMem_4849ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849ea = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849ea)
  store %struct.Memory* %call_4849ea, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4849f0	 Bytes: 3
  %loadMem_4849f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849f0 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849f0)
  store %struct.Memory* %call_4849f0, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4849f3	 Bytes: 3
  %loadMem_4849f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849f3 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849f3)
  store %struct.Memory* %call_4849f3, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4849f6	 Bytes: 4
  %loadMem_4849f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849f6 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849f6)
  store %struct.Memory* %call_4849f6, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4849fa	 Bytes: 2
  %loadMem_4849fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849fa = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849fa)
  store %struct.Memory* %call_4849fa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x234(%rbp)	 RIP: 4849fc	 Bytes: 6
  %loadMem_4849fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4849fc = call %struct.Memory* @routine_movl__eax__MINUS0x234__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4849fc)
  store %struct.Memory* %call_4849fc, %struct.Memory** %MEMORY

  ; Code: .L_484a02:	 RIP: 484a02	 Bytes: 0
  br label %block_.L_484a02
block_.L_484a02:

  ; Code: movl -0x234(%rbp), %eax	 RIP: 484a02	 Bytes: 6
  %loadMem_484a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a02 = call %struct.Memory* @routine_movl_MINUS0x234__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a02)
  store %struct.Memory* %call_484a02, %struct.Memory** %MEMORY

  ; Code: movl -0x230(%rbp), %ecx	 RIP: 484a08	 Bytes: 6
  %loadMem_484a08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a08 = call %struct.Memory* @routine_movl_MINUS0x230__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a08)
  store %struct.Memory* %call_484a08, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 484a0e	 Bytes: 2
  %loadMem_484a0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a0e = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a0e)
  store %struct.Memory* %call_484a0e, %struct.Memory** %MEMORY

  ; Code: jge .L_484a2f	 RIP: 484a10	 Bytes: 6
  %loadMem_484a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a10 = call %struct.Memory* @routine_jge_.L_484a2f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a10, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_484a10, %struct.Memory** %MEMORY

  %loadBr_484a10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484a10 = icmp eq i8 %loadBr_484a10, 1
  br i1 %cmpBr_484a10, label %block_.L_484a2f, label %block_484a16

block_484a16:
  ; Code: movq 0x6cb900, %rax	 RIP: 484a16	 Bytes: 8
  %loadMem_484a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a16 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a16)
  store %struct.Memory* %call_484a16, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 484a1e	 Bytes: 6
  %loadMem_484a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a1e = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a1e)
  store %struct.Memory* %call_484a1e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x238(%rbp)	 RIP: 484a24	 Bytes: 6
  %loadMem_484a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a24 = call %struct.Memory* @routine_movl__ecx__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a24)
  store %struct.Memory* %call_484a24, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484ae8	 RIP: 484a2a	 Bytes: 5
  %loadMem_484a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a2a = call %struct.Memory* @routine_jmpq_.L_484ae8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a2a, i64 190, i64 5)
  store %struct.Memory* %call_484a2a, %struct.Memory** %MEMORY

  br label %block_.L_484ae8

  ; Code: .L_484a2f:	 RIP: 484a2f	 Bytes: 0
block_.L_484a2f:

  ; Code: xorl %eax, %eax	 RIP: 484a2f	 Bytes: 2
  %loadMem_484a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a2f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a2f)
  store %struct.Memory* %call_484a2f, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %ecx	 RIP: 484a31	 Bytes: 6
  %loadMem_484a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a31 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a31)
  store %struct.Memory* %call_484a31, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 484a37	 Bytes: 8
  %loadMem_484a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a37 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a37)
  store %struct.Memory* %call_484a37, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 484a3f	 Bytes: 7
  %loadMem_484a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a3f = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a3f)
  store %struct.Memory* %call_484a3f, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rsi	 RIP: 484a46	 Bytes: 7
  %loadMem_484a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a46 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a46)
  store %struct.Memory* %call_484a46, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 484a4d	 Bytes: 4
  %loadMem_484a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a4d = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a4d)
  store %struct.Memory* %call_484a4d, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484a51	 Bytes: 3
  %loadMem_484a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a51 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a51)
  store %struct.Memory* %call_484a51, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edi	 RIP: 484a54	 Bytes: 6
  %loadMem_484a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a54 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a54)
  store %struct.Memory* %call_484a54, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 484a5a	 Bytes: 3
  %loadMem_484a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a5a = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a5a)
  store %struct.Memory* %call_484a5a, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 484a5d	 Bytes: 3
  %loadMem_484a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a5d = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a5d)
  store %struct.Memory* %call_484a5d, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 484a60	 Bytes: 4
  %loadMem_484a60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a60 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a60)
  store %struct.Memory* %call_484a60, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484a64	 Bytes: 3
  %loadMem_484a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a64 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a64)
  store %struct.Memory* %call_484a64, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %edi	 RIP: 484a67	 Bytes: 6
  %loadMem_484a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a67 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a67)
  store %struct.Memory* %call_484a67, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 484a6d	 Bytes: 3
  %loadMem_484a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a6d = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a6d)
  store %struct.Memory* %call_484a6d, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 484a70	 Bytes: 3
  %loadMem_484a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a70 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a70)
  store %struct.Memory* %call_484a70, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 484a73	 Bytes: 4
  %loadMem_484a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a73 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a73)
  store %struct.Memory* %call_484a73, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 484a77	 Bytes: 2
  %loadMem_484a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a77 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a77)
  store %struct.Memory* %call_484a77, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 484a79	 Bytes: 2
  %loadMem_484a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a79 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a79)
  store %struct.Memory* %call_484a79, %struct.Memory** %MEMORY

  ; Code: jle .L_484a8e	 RIP: 484a7b	 Bytes: 6
  %loadMem_484a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a7b = call %struct.Memory* @routine_jle_.L_484a8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a7b, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_484a7b, %struct.Memory** %MEMORY

  %loadBr_484a7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484a7b = icmp eq i8 %loadBr_484a7b, 1
  br i1 %cmpBr_484a7b, label %block_.L_484a8e, label %block_484a81

block_484a81:
  ; Code: xorl %eax, %eax	 RIP: 484a81	 Bytes: 2
  %loadMem_484a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a81 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a81)
  store %struct.Memory* %call_484a81, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x23c(%rbp)	 RIP: 484a83	 Bytes: 6
  %loadMem_484a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a83 = call %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a83)
  store %struct.Memory* %call_484a83, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484adc	 RIP: 484a89	 Bytes: 5
  %loadMem_484a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a89 = call %struct.Memory* @routine_jmpq_.L_484adc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a89, i64 83, i64 5)
  store %struct.Memory* %call_484a89, %struct.Memory** %MEMORY

  br label %block_.L_484adc

  ; Code: .L_484a8e:	 RIP: 484a8e	 Bytes: 0
block_.L_484a8e:

  ; Code: movl -0x15c(%rbp), %eax	 RIP: 484a8e	 Bytes: 6
  %loadMem_484a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a8e = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a8e)
  store %struct.Memory* %call_484a8e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 484a94	 Bytes: 8
  %loadMem_484a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a94 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a94)
  store %struct.Memory* %call_484a94, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 484a9c	 Bytes: 7
  %loadMem_484a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484a9c = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484a9c)
  store %struct.Memory* %call_484a9c, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 484aa3	 Bytes: 7
  %loadMem_484aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484aa3 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484aa3)
  store %struct.Memory* %call_484aa3, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 484aaa	 Bytes: 4
  %loadMem_484aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484aaa = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484aaa)
  store %struct.Memory* %call_484aaa, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484aae	 Bytes: 3
  %loadMem_484aae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484aae = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484aae)
  store %struct.Memory* %call_484aae, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 484ab1	 Bytes: 6
  %loadMem_484ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ab1 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ab1)
  store %struct.Memory* %call_484ab1, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 484ab7	 Bytes: 3
  %loadMem_484ab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ab7 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ab7)
  store %struct.Memory* %call_484ab7, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484aba	 Bytes: 3
  %loadMem_484aba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484aba = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484aba)
  store %struct.Memory* %call_484aba, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 484abd	 Bytes: 4
  %loadMem_484abd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484abd = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484abd)
  store %struct.Memory* %call_484abd, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484ac1	 Bytes: 3
  %loadMem_484ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ac1 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ac1)
  store %struct.Memory* %call_484ac1, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 484ac4	 Bytes: 6
  %loadMem_484ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ac4 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ac4)
  store %struct.Memory* %call_484ac4, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 484aca	 Bytes: 3
  %loadMem_484aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484aca = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484aca)
  store %struct.Memory* %call_484aca, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484acd	 Bytes: 3
  %loadMem_484acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484acd = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484acd)
  store %struct.Memory* %call_484acd, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 484ad0	 Bytes: 4
  %loadMem_484ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ad0 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ad0)
  store %struct.Memory* %call_484ad0, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 484ad4	 Bytes: 2
  %loadMem_484ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ad4 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ad4)
  store %struct.Memory* %call_484ad4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x23c(%rbp)	 RIP: 484ad6	 Bytes: 6
  %loadMem_484ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ad6 = call %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ad6)
  store %struct.Memory* %call_484ad6, %struct.Memory** %MEMORY

  ; Code: .L_484adc:	 RIP: 484adc	 Bytes: 0
  br label %block_.L_484adc
block_.L_484adc:

  ; Code: movl -0x23c(%rbp), %eax	 RIP: 484adc	 Bytes: 6
  %loadMem_484adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484adc = call %struct.Memory* @routine_movl_MINUS0x23c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484adc)
  store %struct.Memory* %call_484adc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x238(%rbp)	 RIP: 484ae2	 Bytes: 6
  %loadMem_484ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ae2 = call %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ae2)
  store %struct.Memory* %call_484ae2, %struct.Memory** %MEMORY

  ; Code: .L_484ae8:	 RIP: 484ae8	 Bytes: 0
  br label %block_.L_484ae8
block_.L_484ae8:

  ; Code: movl -0x238(%rbp), %eax	 RIP: 484ae8	 Bytes: 6
  %loadMem_484ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ae8 = call %struct.Memory* @routine_movl_MINUS0x238__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ae8)
  store %struct.Memory* %call_484ae8, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 484aee	 Bytes: 2
  %loadMem_484aee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484aee = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484aee)
  store %struct.Memory* %call_484aee, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 484af0	 Bytes: 3
  %loadMem_484af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484af0 = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484af0)
  store %struct.Memory* %call_484af0, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 484af3	 Bytes: 8
  %loadMem_484af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484af3 = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484af3)
  store %struct.Memory* %call_484af3, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rsi), %rsi	 RIP: 484afb	 Bytes: 7
  %loadMem_484afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484afb = call %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484afb)
  store %struct.Memory* %call_484afb, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 484b02	 Bytes: 3
  %loadMem_484b02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b02 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b02)
  store %struct.Memory* %call_484b02, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 484b05	 Bytes: 6
  %loadMem_484b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b05 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b05)
  store %struct.Memory* %call_484b05, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 484b0b	 Bytes: 3
  %loadMem_484b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b0b = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b0b)
  store %struct.Memory* %call_484b0b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 484b0e	 Bytes: 3
  %loadMem_484b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b0e = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b0e)
  store %struct.Memory* %call_484b0e, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 484b11	 Bytes: 4
  %loadMem_484b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b11 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b11)
  store %struct.Memory* %call_484b11, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 484b15	 Bytes: 6
  %loadMem_484b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b15 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b15)
  store %struct.Memory* %call_484b15, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 484b1b	 Bytes: 3
  %loadMem_484b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b1b = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b1b)
  store %struct.Memory* %call_484b1b, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 484b1e	 Bytes: 3
  %loadMem_484b1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b1e = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b1e)
  store %struct.Memory* %call_484b1e, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 484b21	 Bytes: 4
  %loadMem_484b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b21 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b21)
  store %struct.Memory* %call_484b21, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 484b25	 Bytes: 8
  %loadMem_484b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b25 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b25)
  store %struct.Memory* %call_484b25, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rsi), %eax	 RIP: 484b2d	 Bytes: 6
  %loadMem_484b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b2d = call %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b2d)
  store %struct.Memory* %call_484b2d, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %r8d	 RIP: 484b33	 Bytes: 7
  %loadMem_484b33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b33 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b33)
  store %struct.Memory* %call_484b33, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 484b3a	 Bytes: 8
  %loadMem_484b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b3a = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b3a)
  store %struct.Memory* %call_484b3a, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rsi	 RIP: 484b42	 Bytes: 7
  %loadMem_484b42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b42 = call %struct.Memory* @routine_addq__0xb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b42)
  store %struct.Memory* %call_484b42, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdi	 RIP: 484b49	 Bytes: 4
  %loadMem_484b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b49 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b49)
  store %struct.Memory* %call_484b49, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 484b4d	 Bytes: 4
  %loadMem_484b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b4d = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b4d)
  store %struct.Memory* %call_484b4d, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 484b51	 Bytes: 3
  %loadMem_484b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b51 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b51)
  store %struct.Memory* %call_484b51, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 484b54	 Bytes: 4
  %loadMem_484b54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b54 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b54)
  store %struct.Memory* %call_484b54, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 484b58	 Bytes: 4
  %loadMem_484b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b58 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b58)
  store %struct.Memory* %call_484b58, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 484b5c	 Bytes: 3
  %loadMem_484b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b5c = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b5c)
  store %struct.Memory* %call_484b5c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 484b5f	 Bytes: 4
  %loadMem_484b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b5f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b5f)
  store %struct.Memory* %call_484b5f, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 484b63	 Bytes: 5
  %loadMem_484b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b63 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b63)
  store %struct.Memory* %call_484b63, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 484b68	 Bytes: 3
  %loadMem_484b68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b68 = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b68)
  store %struct.Memory* %call_484b68, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 484b6b	 Bytes: 3
  %loadMem_484b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b6b = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b6b)
  store %struct.Memory* %call_484b6b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x240(%rbp)	 RIP: 484b6e	 Bytes: 6
  %loadMem_484b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b6e = call %struct.Memory* @routine_movl__eax__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b6e)
  store %struct.Memory* %call_484b6e, %struct.Memory** %MEMORY

  ; Code: jle .L_484b87	 RIP: 484b74	 Bytes: 6
  %loadMem_484b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b74 = call %struct.Memory* @routine_jle_.L_484b87(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b74, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_484b74, %struct.Memory** %MEMORY

  %loadBr_484b74 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484b74 = icmp eq i8 %loadBr_484b74, 1
  br i1 %cmpBr_484b74, label %block_.L_484b87, label %block_484b7a

block_484b7a:
  ; Code: xorl %eax, %eax	 RIP: 484b7a	 Bytes: 2
  %loadMem_484b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b7a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b7a)
  store %struct.Memory* %call_484b7a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x244(%rbp)	 RIP: 484b7c	 Bytes: 6
  %loadMem_484b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b7c = call %struct.Memory* @routine_movl__eax__MINUS0x244__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b7c)
  store %struct.Memory* %call_484b7c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484bc2	 RIP: 484b82	 Bytes: 5
  %loadMem_484b82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b82 = call %struct.Memory* @routine_jmpq_.L_484bc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b82, i64 64, i64 5)
  store %struct.Memory* %call_484b82, %struct.Memory** %MEMORY

  br label %block_.L_484bc2

  ; Code: .L_484b87:	 RIP: 484b87	 Bytes: 0
block_.L_484b87:

  ; Code: movl -0x158(%rbp), %eax	 RIP: 484b87	 Bytes: 6
  %loadMem_484b87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b87 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b87)
  store %struct.Memory* %call_484b87, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 484b8d	 Bytes: 8
  %loadMem_484b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b8d = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b8d)
  store %struct.Memory* %call_484b8d, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rcx	 RIP: 484b95	 Bytes: 7
  %loadMem_484b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b95 = call %struct.Memory* @routine_addq__0xb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b95)
  store %struct.Memory* %call_484b95, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 484b9c	 Bytes: 4
  %loadMem_484b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484b9c = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484b9c)
  store %struct.Memory* %call_484b9c, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 484ba0	 Bytes: 4
  %loadMem_484ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ba0 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ba0)
  store %struct.Memory* %call_484ba0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484ba4	 Bytes: 3
  %loadMem_484ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ba4 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ba4)
  store %struct.Memory* %call_484ba4, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 484ba7	 Bytes: 4
  %loadMem_484ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ba7 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ba7)
  store %struct.Memory* %call_484ba7, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 484bab	 Bytes: 4
  %loadMem_484bab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bab = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bab)
  store %struct.Memory* %call_484bab, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484baf	 Bytes: 3
  %loadMem_484baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484baf = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484baf)
  store %struct.Memory* %call_484baf, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 484bb2	 Bytes: 4
  %loadMem_484bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bb2 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bb2)
  store %struct.Memory* %call_484bb2, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 484bb6	 Bytes: 4
  %loadMem_484bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bb6 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bb6)
  store %struct.Memory* %call_484bb6, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 484bba	 Bytes: 2
  %loadMem_484bba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bba = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bba)
  store %struct.Memory* %call_484bba, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x244(%rbp)	 RIP: 484bbc	 Bytes: 6
  %loadMem_484bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bbc = call %struct.Memory* @routine_movl__eax__MINUS0x244__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bbc)
  store %struct.Memory* %call_484bbc, %struct.Memory** %MEMORY

  ; Code: .L_484bc2:	 RIP: 484bc2	 Bytes: 0
  br label %block_.L_484bc2
block_.L_484bc2:

  ; Code: movl -0x244(%rbp), %eax	 RIP: 484bc2	 Bytes: 6
  %loadMem_484bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bc2 = call %struct.Memory* @routine_movl_MINUS0x244__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bc2)
  store %struct.Memory* %call_484bc2, %struct.Memory** %MEMORY

  ; Code: movl -0x240(%rbp), %ecx	 RIP: 484bc8	 Bytes: 6
  %loadMem_484bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bc8 = call %struct.Memory* @routine_movl_MINUS0x240__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bc8)
  store %struct.Memory* %call_484bc8, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 484bce	 Bytes: 2
  %loadMem_484bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bce = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bce)
  store %struct.Memory* %call_484bce, %struct.Memory** %MEMORY

  ; Code: jge .L_484bef	 RIP: 484bd0	 Bytes: 6
  %loadMem_484bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bd0 = call %struct.Memory* @routine_jge_.L_484bef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bd0, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_484bd0, %struct.Memory** %MEMORY

  %loadBr_484bd0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484bd0 = icmp eq i8 %loadBr_484bd0, 1
  br i1 %cmpBr_484bd0, label %block_.L_484bef, label %block_484bd6

block_484bd6:
  ; Code: movq 0x6cb900, %rax	 RIP: 484bd6	 Bytes: 8
  %loadMem_484bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bd6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bd6)
  store %struct.Memory* %call_484bd6, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 484bde	 Bytes: 6
  %loadMem_484bde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bde = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bde)
  store %struct.Memory* %call_484bde, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x248(%rbp)	 RIP: 484be4	 Bytes: 6
  %loadMem_484be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484be4 = call %struct.Memory* @routine_movl__ecx__MINUS0x248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484be4)
  store %struct.Memory* %call_484be4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484c82	 RIP: 484bea	 Bytes: 5
  %loadMem_484bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bea = call %struct.Memory* @routine_jmpq_.L_484c82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bea, i64 152, i64 5)
  store %struct.Memory* %call_484bea, %struct.Memory** %MEMORY

  br label %block_.L_484c82

  ; Code: .L_484bef:	 RIP: 484bef	 Bytes: 0
block_.L_484bef:

  ; Code: xorl %eax, %eax	 RIP: 484bef	 Bytes: 2
  %loadMem_484bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bef = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bef)
  store %struct.Memory* %call_484bef, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %ecx	 RIP: 484bf1	 Bytes: 6
  %loadMem_484bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bf1 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bf1)
  store %struct.Memory* %call_484bf1, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 484bf7	 Bytes: 8
  %loadMem_484bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bf7 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bf7)
  store %struct.Memory* %call_484bf7, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rdx	 RIP: 484bff	 Bytes: 7
  %loadMem_484bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484bff = call %struct.Memory* @routine_addq__0xb8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484bff)
  store %struct.Memory* %call_484bff, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rsi	 RIP: 484c06	 Bytes: 4
  %loadMem_484c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c06 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c06)
  store %struct.Memory* %call_484c06, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 484c0a	 Bytes: 4
  %loadMem_484c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c0a = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c0a)
  store %struct.Memory* %call_484c0a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484c0e	 Bytes: 3
  %loadMem_484c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c0e = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c0e)
  store %struct.Memory* %call_484c0e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 484c11	 Bytes: 4
  %loadMem_484c11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c11 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c11)
  store %struct.Memory* %call_484c11, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 484c15	 Bytes: 4
  %loadMem_484c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c15 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c15)
  store %struct.Memory* %call_484c15, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484c19	 Bytes: 3
  %loadMem_484c19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c19 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c19)
  store %struct.Memory* %call_484c19, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 484c1c	 Bytes: 4
  %loadMem_484c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c1c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c1c)
  store %struct.Memory* %call_484c1c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 484c20	 Bytes: 4
  %loadMem_484c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c20 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c20)
  store %struct.Memory* %call_484c20, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 484c24	 Bytes: 2
  %loadMem_484c24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c24 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c24)
  store %struct.Memory* %call_484c24, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 484c26	 Bytes: 2
  %loadMem_484c26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c26 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c26)
  store %struct.Memory* %call_484c26, %struct.Memory** %MEMORY

  ; Code: jle .L_484c3b	 RIP: 484c28	 Bytes: 6
  %loadMem_484c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c28 = call %struct.Memory* @routine_jle_.L_484c3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c28, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_484c28, %struct.Memory** %MEMORY

  %loadBr_484c28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484c28 = icmp eq i8 %loadBr_484c28, 1
  br i1 %cmpBr_484c28, label %block_.L_484c3b, label %block_484c2e

block_484c2e:
  ; Code: xorl %eax, %eax	 RIP: 484c2e	 Bytes: 2
  %loadMem_484c2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c2e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c2e)
  store %struct.Memory* %call_484c2e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24c(%rbp)	 RIP: 484c30	 Bytes: 6
  %loadMem_484c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c30 = call %struct.Memory* @routine_movl__eax__MINUS0x24c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c30)
  store %struct.Memory* %call_484c30, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484c76	 RIP: 484c36	 Bytes: 5
  %loadMem_484c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c36 = call %struct.Memory* @routine_jmpq_.L_484c76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c36, i64 64, i64 5)
  store %struct.Memory* %call_484c36, %struct.Memory** %MEMORY

  br label %block_.L_484c76

  ; Code: .L_484c3b:	 RIP: 484c3b	 Bytes: 0
block_.L_484c3b:

  ; Code: movl -0x158(%rbp), %eax	 RIP: 484c3b	 Bytes: 6
  %loadMem_484c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c3b = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c3b)
  store %struct.Memory* %call_484c3b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 484c41	 Bytes: 8
  %loadMem_484c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c41 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c41)
  store %struct.Memory* %call_484c41, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rcx	 RIP: 484c49	 Bytes: 7
  %loadMem_484c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c49 = call %struct.Memory* @routine_addq__0xb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c49)
  store %struct.Memory* %call_484c49, %struct.Memory** %MEMORY

  ; Code: movslq -0x24(%rbp), %rdx	 RIP: 484c50	 Bytes: 4
  %loadMem_484c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c50 = call %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c50)
  store %struct.Memory* %call_484c50, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 484c54	 Bytes: 4
  %loadMem_484c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c54 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c54)
  store %struct.Memory* %call_484c54, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484c58	 Bytes: 3
  %loadMem_484c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c58 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c58)
  store %struct.Memory* %call_484c58, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 484c5b	 Bytes: 4
  %loadMem_484c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c5b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c5b)
  store %struct.Memory* %call_484c5b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 484c5f	 Bytes: 4
  %loadMem_484c5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c5f = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c5f)
  store %struct.Memory* %call_484c5f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484c63	 Bytes: 3
  %loadMem_484c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c63 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c63)
  store %struct.Memory* %call_484c63, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 484c66	 Bytes: 4
  %loadMem_484c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c66 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c66)
  store %struct.Memory* %call_484c66, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 484c6a	 Bytes: 4
  %loadMem_484c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c6a = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c6a)
  store %struct.Memory* %call_484c6a, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 484c6e	 Bytes: 2
  %loadMem_484c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c6e = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c6e)
  store %struct.Memory* %call_484c6e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24c(%rbp)	 RIP: 484c70	 Bytes: 6
  %loadMem_484c70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c70 = call %struct.Memory* @routine_movl__eax__MINUS0x24c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c70)
  store %struct.Memory* %call_484c70, %struct.Memory** %MEMORY

  ; Code: .L_484c76:	 RIP: 484c76	 Bytes: 0
  br label %block_.L_484c76
block_.L_484c76:

  ; Code: movl -0x24c(%rbp), %eax	 RIP: 484c76	 Bytes: 6
  %loadMem_484c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c76 = call %struct.Memory* @routine_movl_MINUS0x24c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c76)
  store %struct.Memory* %call_484c76, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x248(%rbp)	 RIP: 484c7c	 Bytes: 6
  %loadMem_484c7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c7c = call %struct.Memory* @routine_movl__eax__MINUS0x248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c7c)
  store %struct.Memory* %call_484c7c, %struct.Memory** %MEMORY

  ; Code: .L_484c82:	 RIP: 484c82	 Bytes: 0
  br label %block_.L_484c82
block_.L_484c82:

  ; Code: movl -0x248(%rbp), %eax	 RIP: 484c82	 Bytes: 6
  %loadMem_484c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c82 = call %struct.Memory* @routine_movl_MINUS0x248__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c82)
  store %struct.Memory* %call_484c82, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 484c88	 Bytes: 2
  %loadMem_484c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c88 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c88)
  store %struct.Memory* %call_484c88, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 484c8a	 Bytes: 3
  %loadMem_484c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c8a = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c8a)
  store %struct.Memory* %call_484c8a, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 484c8d	 Bytes: 8
  %loadMem_484c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c8d = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c8d)
  store %struct.Memory* %call_484c8d, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rsi), %rsi	 RIP: 484c95	 Bytes: 7
  %loadMem_484c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c95 = call %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c95)
  store %struct.Memory* %call_484c95, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 484c9c	 Bytes: 6
  %loadMem_484c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484c9c = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484c9c)
  store %struct.Memory* %call_484c9c, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 484ca2	 Bytes: 3
  %loadMem_484ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ca2 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ca2)
  store %struct.Memory* %call_484ca2, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 484ca5	 Bytes: 3
  %loadMem_484ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ca5 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ca5)
  store %struct.Memory* %call_484ca5, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 484ca8	 Bytes: 4
  %loadMem_484ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ca8 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ca8)
  store %struct.Memory* %call_484ca8, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 484cac	 Bytes: 6
  %loadMem_484cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cac = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cac)
  store %struct.Memory* %call_484cac, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 484cb2	 Bytes: 3
  %loadMem_484cb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cb2 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cb2)
  store %struct.Memory* %call_484cb2, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 484cb5	 Bytes: 3
  %loadMem_484cb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cb5 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cb5)
  store %struct.Memory* %call_484cb5, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 484cb8	 Bytes: 4
  %loadMem_484cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cb8 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cb8)
  store %struct.Memory* %call_484cb8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 484cbc	 Bytes: 8
  %loadMem_484cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cbc = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cbc)
  store %struct.Memory* %call_484cbc, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rsi), %eax	 RIP: 484cc4	 Bytes: 6
  %loadMem_484cc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cc4 = call %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cc4)
  store %struct.Memory* %call_484cc4, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %r8d	 RIP: 484cca	 Bytes: 7
  %loadMem_484cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cca = call %struct.Memory* @routine_movl_MINUS0x154__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cca)
  store %struct.Memory* %call_484cca, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 484cd1	 Bytes: 8
  %loadMem_484cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cd1 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cd1)
  store %struct.Memory* %call_484cd1, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 484cd9	 Bytes: 7
  %loadMem_484cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cd9 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cd9)
  store %struct.Memory* %call_484cd9, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 484ce0	 Bytes: 7
  %loadMem_484ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ce0 = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ce0)
  store %struct.Memory* %call_484ce0, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdi	 RIP: 484ce7	 Bytes: 7
  %loadMem_484ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ce7 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ce7)
  store %struct.Memory* %call_484ce7, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 484cee	 Bytes: 4
  %loadMem_484cee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cee = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cee)
  store %struct.Memory* %call_484cee, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 484cf2	 Bytes: 3
  %loadMem_484cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cf2 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cf2)
  store %struct.Memory* %call_484cf2, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r9d	 RIP: 484cf5	 Bytes: 7
  %loadMem_484cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cf5 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cf5)
  store %struct.Memory* %call_484cf5, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 484cfc	 Bytes: 4
  %loadMem_484cfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484cfc = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484cfc)
  store %struct.Memory* %call_484cfc, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 484d00	 Bytes: 3
  %loadMem_484d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d00 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d00)
  store %struct.Memory* %call_484d00, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 484d03	 Bytes: 4
  %loadMem_484d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d03 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d03)
  store %struct.Memory* %call_484d03, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 484d07	 Bytes: 3
  %loadMem_484d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d07 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d07)
  store %struct.Memory* %call_484d07, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r9d	 RIP: 484d0a	 Bytes: 7
  %loadMem_484d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d0a = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d0a)
  store %struct.Memory* %call_484d0a, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 484d11	 Bytes: 4
  %loadMem_484d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d11 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d11)
  store %struct.Memory* %call_484d11, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 484d15	 Bytes: 3
  %loadMem_484d15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d15 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d15)
  store %struct.Memory* %call_484d15, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 484d18	 Bytes: 5
  %loadMem_484d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d18 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d18)
  store %struct.Memory* %call_484d18, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 484d1d	 Bytes: 3
  %loadMem_484d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d1d = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d1d)
  store %struct.Memory* %call_484d1d, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 484d20	 Bytes: 3
  %loadMem_484d20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d20 = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d20)
  store %struct.Memory* %call_484d20, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x250(%rbp)	 RIP: 484d23	 Bytes: 6
  %loadMem_484d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d23 = call %struct.Memory* @routine_movl__eax__MINUS0x250__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d23)
  store %struct.Memory* %call_484d23, %struct.Memory** %MEMORY

  ; Code: jle .L_484d3c	 RIP: 484d29	 Bytes: 6
  %loadMem_484d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d29 = call %struct.Memory* @routine_jle_.L_484d3c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d29, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_484d29, %struct.Memory** %MEMORY

  %loadBr_484d29 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484d29 = icmp eq i8 %loadBr_484d29, 1
  br i1 %cmpBr_484d29, label %block_.L_484d3c, label %block_484d2f

block_484d2f:
  ; Code: xorl %eax, %eax	 RIP: 484d2f	 Bytes: 2
  %loadMem_484d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d2f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d2f)
  store %struct.Memory* %call_484d2f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x254(%rbp)	 RIP: 484d31	 Bytes: 6
  %loadMem_484d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d31 = call %struct.Memory* @routine_movl__eax__MINUS0x254__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d31)
  store %struct.Memory* %call_484d31, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484d91	 RIP: 484d37	 Bytes: 5
  %loadMem_484d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d37 = call %struct.Memory* @routine_jmpq_.L_484d91(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d37, i64 90, i64 5)
  store %struct.Memory* %call_484d37, %struct.Memory** %MEMORY

  br label %block_.L_484d91

  ; Code: .L_484d3c:	 RIP: 484d3c	 Bytes: 0
block_.L_484d3c:

  ; Code: movl -0x154(%rbp), %eax	 RIP: 484d3c	 Bytes: 6
  %loadMem_484d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d3c = call %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d3c)
  store %struct.Memory* %call_484d3c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 484d42	 Bytes: 8
  %loadMem_484d42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d42 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d42)
  store %struct.Memory* %call_484d42, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 484d4a	 Bytes: 7
  %loadMem_484d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d4a = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d4a)
  store %struct.Memory* %call_484d4a, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 484d51	 Bytes: 7
  %loadMem_484d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d51 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d51)
  store %struct.Memory* %call_484d51, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 484d58	 Bytes: 7
  %loadMem_484d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d58 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d58)
  store %struct.Memory* %call_484d58, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 484d5f	 Bytes: 4
  %loadMem_484d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d5f = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d5f)
  store %struct.Memory* %call_484d5f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484d63	 Bytes: 3
  %loadMem_484d63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d63 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d63)
  store %struct.Memory* %call_484d63, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 484d66	 Bytes: 6
  %loadMem_484d66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d66 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d66)
  store %struct.Memory* %call_484d66, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 484d6c	 Bytes: 3
  %loadMem_484d6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d6c = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d6c)
  store %struct.Memory* %call_484d6c, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484d6f	 Bytes: 3
  %loadMem_484d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d6f = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d6f)
  store %struct.Memory* %call_484d6f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 484d72	 Bytes: 4
  %loadMem_484d72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d72 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d72)
  store %struct.Memory* %call_484d72, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484d76	 Bytes: 3
  %loadMem_484d76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d76 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d76)
  store %struct.Memory* %call_484d76, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 484d79	 Bytes: 6
  %loadMem_484d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d79 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d79)
  store %struct.Memory* %call_484d79, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 484d7f	 Bytes: 3
  %loadMem_484d7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d7f = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d7f)
  store %struct.Memory* %call_484d7f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484d82	 Bytes: 3
  %loadMem_484d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d82 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d82)
  store %struct.Memory* %call_484d82, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 484d85	 Bytes: 4
  %loadMem_484d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d85 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d85)
  store %struct.Memory* %call_484d85, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 484d89	 Bytes: 2
  %loadMem_484d89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d89 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d89)
  store %struct.Memory* %call_484d89, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x254(%rbp)	 RIP: 484d8b	 Bytes: 6
  %loadMem_484d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d8b = call %struct.Memory* @routine_movl__eax__MINUS0x254__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d8b)
  store %struct.Memory* %call_484d8b, %struct.Memory** %MEMORY

  ; Code: .L_484d91:	 RIP: 484d91	 Bytes: 0
  br label %block_.L_484d91
block_.L_484d91:

  ; Code: movl -0x254(%rbp), %eax	 RIP: 484d91	 Bytes: 6
  %loadMem_484d91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d91 = call %struct.Memory* @routine_movl_MINUS0x254__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d91)
  store %struct.Memory* %call_484d91, %struct.Memory** %MEMORY

  ; Code: movl -0x250(%rbp), %ecx	 RIP: 484d97	 Bytes: 6
  %loadMem_484d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d97 = call %struct.Memory* @routine_movl_MINUS0x250__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d97)
  store %struct.Memory* %call_484d97, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 484d9d	 Bytes: 2
  %loadMem_484d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d9d = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d9d)
  store %struct.Memory* %call_484d9d, %struct.Memory** %MEMORY

  ; Code: jge .L_484dbe	 RIP: 484d9f	 Bytes: 6
  %loadMem_484d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484d9f = call %struct.Memory* @routine_jge_.L_484dbe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484d9f, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_484d9f, %struct.Memory** %MEMORY

  %loadBr_484d9f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484d9f = icmp eq i8 %loadBr_484d9f, 1
  br i1 %cmpBr_484d9f, label %block_.L_484dbe, label %block_484da5

block_484da5:
  ; Code: movq 0x6cb900, %rax	 RIP: 484da5	 Bytes: 8
  %loadMem_484da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484da5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484da5)
  store %struct.Memory* %call_484da5, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 484dad	 Bytes: 6
  %loadMem_484dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dad = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dad)
  store %struct.Memory* %call_484dad, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x258(%rbp)	 RIP: 484db3	 Bytes: 6
  %loadMem_484db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484db3 = call %struct.Memory* @routine_movl__ecx__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484db3)
  store %struct.Memory* %call_484db3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484e85	 RIP: 484db9	 Bytes: 5
  %loadMem_484db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484db9 = call %struct.Memory* @routine_jmpq_.L_484e85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484db9, i64 204, i64 5)
  store %struct.Memory* %call_484db9, %struct.Memory** %MEMORY

  br label %block_.L_484e85

  ; Code: .L_484dbe:	 RIP: 484dbe	 Bytes: 0
block_.L_484dbe:

  ; Code: xorl %eax, %eax	 RIP: 484dbe	 Bytes: 2
  %loadMem_484dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dbe = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dbe)
  store %struct.Memory* %call_484dbe, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %ecx	 RIP: 484dc0	 Bytes: 6
  %loadMem_484dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dc0 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dc0)
  store %struct.Memory* %call_484dc0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 484dc6	 Bytes: 8
  %loadMem_484dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dc6 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dc6)
  store %struct.Memory* %call_484dc6, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 484dce	 Bytes: 7
  %loadMem_484dce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dce = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dce)
  store %struct.Memory* %call_484dce, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rdx	 RIP: 484dd5	 Bytes: 7
  %loadMem_484dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dd5 = call %struct.Memory* @routine_addq__0x800___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dd5)
  store %struct.Memory* %call_484dd5, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rsi	 RIP: 484ddc	 Bytes: 7
  %loadMem_484ddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ddc = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ddc)
  store %struct.Memory* %call_484ddc, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 484de3	 Bytes: 4
  %loadMem_484de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484de3 = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484de3)
  store %struct.Memory* %call_484de3, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484de7	 Bytes: 3
  %loadMem_484de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484de7 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484de7)
  store %struct.Memory* %call_484de7, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edi	 RIP: 484dea	 Bytes: 6
  %loadMem_484dea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dea = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dea)
  store %struct.Memory* %call_484dea, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 484df0	 Bytes: 3
  %loadMem_484df0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484df0 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484df0)
  store %struct.Memory* %call_484df0, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 484df3	 Bytes: 3
  %loadMem_484df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484df3 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484df3)
  store %struct.Memory* %call_484df3, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 484df6	 Bytes: 4
  %loadMem_484df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484df6 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484df6)
  store %struct.Memory* %call_484df6, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 484dfa	 Bytes: 3
  %loadMem_484dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dfa = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dfa)
  store %struct.Memory* %call_484dfa, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %edi	 RIP: 484dfd	 Bytes: 6
  %loadMem_484dfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484dfd = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484dfd)
  store %struct.Memory* %call_484dfd, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 484e03	 Bytes: 3
  %loadMem_484e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e03 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e03)
  store %struct.Memory* %call_484e03, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 484e06	 Bytes: 3
  %loadMem_484e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e06 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e06)
  store %struct.Memory* %call_484e06, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 484e09	 Bytes: 4
  %loadMem_484e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e09 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e09)
  store %struct.Memory* %call_484e09, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 484e0d	 Bytes: 2
  %loadMem_484e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e0d = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e0d)
  store %struct.Memory* %call_484e0d, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 484e0f	 Bytes: 2
  %loadMem_484e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e0f = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e0f)
  store %struct.Memory* %call_484e0f, %struct.Memory** %MEMORY

  ; Code: jle .L_484e24	 RIP: 484e11	 Bytes: 6
  %loadMem_484e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e11 = call %struct.Memory* @routine_jle_.L_484e24(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e11, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_484e11, %struct.Memory** %MEMORY

  %loadBr_484e11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484e11 = icmp eq i8 %loadBr_484e11, 1
  br i1 %cmpBr_484e11, label %block_.L_484e24, label %block_484e17

block_484e17:
  ; Code: xorl %eax, %eax	 RIP: 484e17	 Bytes: 2
  %loadMem_484e17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e17 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e17)
  store %struct.Memory* %call_484e17, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x25c(%rbp)	 RIP: 484e19	 Bytes: 6
  %loadMem_484e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e19 = call %struct.Memory* @routine_movl__eax__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e19)
  store %struct.Memory* %call_484e19, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484e79	 RIP: 484e1f	 Bytes: 5
  %loadMem_484e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e1f = call %struct.Memory* @routine_jmpq_.L_484e79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e1f, i64 90, i64 5)
  store %struct.Memory* %call_484e1f, %struct.Memory** %MEMORY

  br label %block_.L_484e79

  ; Code: .L_484e24:	 RIP: 484e24	 Bytes: 0
block_.L_484e24:

  ; Code: movl -0x154(%rbp), %eax	 RIP: 484e24	 Bytes: 6
  %loadMem_484e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e24 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e24)
  store %struct.Memory* %call_484e24, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 484e2a	 Bytes: 8
  %loadMem_484e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e2a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e2a)
  store %struct.Memory* %call_484e2a, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 484e32	 Bytes: 7
  %loadMem_484e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e32 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e32)
  store %struct.Memory* %call_484e32, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 484e39	 Bytes: 7
  %loadMem_484e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e39 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e39)
  store %struct.Memory* %call_484e39, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 484e40	 Bytes: 7
  %loadMem_484e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e40 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e40)
  store %struct.Memory* %call_484e40, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 484e47	 Bytes: 4
  %loadMem_484e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e47 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e47)
  store %struct.Memory* %call_484e47, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484e4b	 Bytes: 3
  %loadMem_484e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e4b = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e4b)
  store %struct.Memory* %call_484e4b, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 484e4e	 Bytes: 6
  %loadMem_484e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e4e = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e4e)
  store %struct.Memory* %call_484e4e, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 484e54	 Bytes: 3
  %loadMem_484e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e54 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e54)
  store %struct.Memory* %call_484e54, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484e57	 Bytes: 3
  %loadMem_484e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e57 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e57)
  store %struct.Memory* %call_484e57, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 484e5a	 Bytes: 4
  %loadMem_484e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e5a = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e5a)
  store %struct.Memory* %call_484e5a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 484e5e	 Bytes: 3
  %loadMem_484e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e5e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e5e)
  store %struct.Memory* %call_484e5e, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 484e61	 Bytes: 6
  %loadMem_484e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e61 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e61)
  store %struct.Memory* %call_484e61, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 484e67	 Bytes: 3
  %loadMem_484e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e67 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e67)
  store %struct.Memory* %call_484e67, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484e6a	 Bytes: 3
  %loadMem_484e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e6a = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e6a)
  store %struct.Memory* %call_484e6a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 484e6d	 Bytes: 4
  %loadMem_484e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e6d = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e6d)
  store %struct.Memory* %call_484e6d, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 484e71	 Bytes: 2
  %loadMem_484e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e71 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e71)
  store %struct.Memory* %call_484e71, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x25c(%rbp)	 RIP: 484e73	 Bytes: 6
  %loadMem_484e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e73 = call %struct.Memory* @routine_movl__eax__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e73)
  store %struct.Memory* %call_484e73, %struct.Memory** %MEMORY

  ; Code: .L_484e79:	 RIP: 484e79	 Bytes: 0
  br label %block_.L_484e79
block_.L_484e79:

  ; Code: movl -0x25c(%rbp), %eax	 RIP: 484e79	 Bytes: 6
  %loadMem_484e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e79 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e79)
  store %struct.Memory* %call_484e79, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x258(%rbp)	 RIP: 484e7f	 Bytes: 6
  %loadMem_484e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e7f = call %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e7f)
  store %struct.Memory* %call_484e7f, %struct.Memory** %MEMORY

  ; Code: .L_484e85:	 RIP: 484e85	 Bytes: 0
  br label %block_.L_484e85
block_.L_484e85:

  ; Code: movl -0x258(%rbp), %eax	 RIP: 484e85	 Bytes: 6
  %loadMem_484e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e85 = call %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e85)
  store %struct.Memory* %call_484e85, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 484e8b	 Bytes: 3
  %loadMem_484e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e8b = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e8b)
  store %struct.Memory* %call_484e8b, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rdx	 RIP: 484e8e	 Bytes: 8
  %loadMem_484e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e8e = call %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e8e)
  store %struct.Memory* %call_484e8e, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rdx), %rdx	 RIP: 484e96	 Bytes: 7
  %loadMem_484e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e96 = call %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e96)
  store %struct.Memory* %call_484e96, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 484e9d	 Bytes: 4
  %loadMem_484e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484e9d = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484e9d)
  store %struct.Memory* %call_484e9d, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 484ea1	 Bytes: 6
  %loadMem_484ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ea1 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ea1)
  store %struct.Memory* %call_484ea1, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 484ea7	 Bytes: 3
  %loadMem_484ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ea7 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ea7)
  store %struct.Memory* %call_484ea7, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 484eaa	 Bytes: 3
  %loadMem_484eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eaa = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eaa)
  store %struct.Memory* %call_484eaa, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 484ead	 Bytes: 4
  %loadMem_484ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ead = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ead)
  store %struct.Memory* %call_484ead, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 484eb1	 Bytes: 6
  %loadMem_484eb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eb1 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eb1)
  store %struct.Memory* %call_484eb1, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 484eb7	 Bytes: 3
  %loadMem_484eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eb7 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eb7)
  store %struct.Memory* %call_484eb7, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 484eba	 Bytes: 3
  %loadMem_484eba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eba = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eba)
  store %struct.Memory* %call_484eba, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx,%rsi,2)	 RIP: 484ebd	 Bytes: 4
  %loadMem_484ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ebd = call %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ebd)
  store %struct.Memory* %call_484ebd, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 484ec1	 Bytes: 3
  %loadMem_484ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ec1 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ec1)
  store %struct.Memory* %call_484ec1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484ec4	 Bytes: 3
  %loadMem_484ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ec4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ec4)
  store %struct.Memory* %call_484ec4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 484ec7	 Bytes: 3
  %loadMem_484ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ec7 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ec7)
  store %struct.Memory* %call_484ec7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48486b	 RIP: 484eca	 Bytes: 5
  %loadMem_484eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eca = call %struct.Memory* @routine_jmpq_.L_48486b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eca, i64 -1631, i64 5)
  store %struct.Memory* %call_484eca, %struct.Memory** %MEMORY

  br label %block_.L_48486b

  ; Code: .L_484ecf:	 RIP: 484ecf	 Bytes: 0
block_.L_484ecf:

  ; Code: jmpq .L_484ed4	 RIP: 484ecf	 Bytes: 5
  %loadMem_484ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ecf = call %struct.Memory* @routine_jmpq_.L_484ed4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ecf, i64 5, i64 5)
  store %struct.Memory* %call_484ecf, %struct.Memory** %MEMORY

  br label %block_.L_484ed4

  ; Code: .L_484ed4:	 RIP: 484ed4	 Bytes: 0
block_.L_484ed4:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 484ed4	 Bytes: 3
  %loadMem_484ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ed4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ed4)
  store %struct.Memory* %call_484ed4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 484ed7	 Bytes: 3
  %loadMem_484ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ed7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ed7)
  store %struct.Memory* %call_484ed7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 484eda	 Bytes: 3
  %loadMem_484eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eda = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eda)
  store %struct.Memory* %call_484eda, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48485a	 RIP: 484edd	 Bytes: 5
  %loadMem_484edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484edd = call %struct.Memory* @routine_jmpq_.L_48485a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484edd, i64 -1667, i64 5)
  store %struct.Memory* %call_484edd, %struct.Memory** %MEMORY

  br label %block_.L_48485a

  ; Code: .L_484ee2:	 RIP: 484ee2	 Bytes: 0
block_.L_484ee2:

  ; Code: movl $0x0, -0x164(%rbp)	 RIP: 484ee2	 Bytes: 10
  %loadMem_484ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ee2 = call %struct.Memory* @routine_movl__0x0__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ee2)
  store %struct.Memory* %call_484ee2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 484eec	 Bytes: 7
  %loadMem_484eec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484eec = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484eec)
  store %struct.Memory* %call_484eec, %struct.Memory** %MEMORY

  ; Code: .L_484ef3:	 RIP: 484ef3	 Bytes: 0
  br label %block_.L_484ef3
block_.L_484ef3:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 484ef3	 Bytes: 4
  %loadMem_484ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ef3 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ef3)
  store %struct.Memory* %call_484ef3, %struct.Memory** %MEMORY

  ; Code: jge .L_48513a	 RIP: 484ef7	 Bytes: 6
  %loadMem_484ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ef7 = call %struct.Memory* @routine_jge_.L_48513a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ef7, i8* %BRANCH_TAKEN, i64 579, i64 6, i64 6)
  store %struct.Memory* %call_484ef7, %struct.Memory** %MEMORY

  %loadBr_484ef7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484ef7 = icmp eq i8 %loadBr_484ef7, 1
  br i1 %cmpBr_484ef7, label %block_.L_48513a, label %block_484efd

block_484efd:
  ; Code: movl -0xe4(%rbp), %eax	 RIP: 484efd	 Bytes: 6
  %loadMem_484efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484efd = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484efd)
  store %struct.Memory* %call_484efd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 484f03	 Bytes: 3
  %loadMem_484f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f03 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f03)
  store %struct.Memory* %call_484f03, %struct.Memory** %MEMORY

  ; Code: .L_484f06:	 RIP: 484f06	 Bytes: 0
  br label %block_.L_484f06
block_.L_484f06:

  ; Code: movl -0x38(%rbp), %eax	 RIP: 484f06	 Bytes: 3
  %loadMem_484f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f06 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f06)
  store %struct.Memory* %call_484f06, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %ecx	 RIP: 484f09	 Bytes: 6
  %loadMem_484f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f09 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f09)
  store %struct.Memory* %call_484f09, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %ecx	 RIP: 484f0f	 Bytes: 3
  %loadMem_484f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f0f = call %struct.Memory* @routine_addl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f0f)
  store %struct.Memory* %call_484f0f, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 484f12	 Bytes: 2
  %loadMem_484f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f12 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f12)
  store %struct.Memory* %call_484f12, %struct.Memory** %MEMORY

  ; Code: jge .L_485127	 RIP: 484f14	 Bytes: 6
  %loadMem_484f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f14 = call %struct.Memory* @routine_jge_.L_485127(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f14, i8* %BRANCH_TAKEN, i64 531, i64 6, i64 6)
  store %struct.Memory* %call_484f14, %struct.Memory** %MEMORY

  %loadBr_484f14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_484f14 = icmp eq i8 %loadBr_484f14, 1
  br i1 %cmpBr_484f14, label %block_.L_485127, label %block_484f1a

block_484f1a:
  ; Code: movq 0x726418, %rax	 RIP: 484f1a	 Bytes: 8
  %loadMem_484f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f1a = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f1a)
  store %struct.Memory* %call_484f1a, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %ecx	 RIP: 484f22	 Bytes: 6
  %loadMem_484f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f22 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f22)
  store %struct.Memory* %call_484f22, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %ecx	 RIP: 484f28	 Bytes: 3
  %loadMem_484f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f28 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f28)
  store %struct.Memory* %call_484f28, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 484f2b	 Bytes: 3
  %loadMem_484f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f2b = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f2b)
  store %struct.Memory* %call_484f2b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 484f2e	 Bytes: 4
  %loadMem_484f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f2e = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f2e)
  store %struct.Memory* %call_484f2e, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 484f32	 Bytes: 4
  %loadMem_484f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f32 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f32)
  store %struct.Memory* %call_484f32, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 484f36	 Bytes: 4
  %loadMem_484f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f36 = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f36)
  store %struct.Memory* %call_484f36, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 484f3a	 Bytes: 8
  %loadMem_484f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f3a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f3a)
  store %struct.Memory* %call_484f3a, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 484f42	 Bytes: 7
  %loadMem_484f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f42 = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f42)
  store %struct.Memory* %call_484f42, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 484f49	 Bytes: 6
  %loadMem_484f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f49 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f49)
  store %struct.Memory* %call_484f49, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 484f4f	 Bytes: 3
  %loadMem_484f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f4f = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f4f)
  store %struct.Memory* %call_484f4f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484f52	 Bytes: 3
  %loadMem_484f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f52 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f52)
  store %struct.Memory* %call_484f52, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 484f55	 Bytes: 4
  %loadMem_484f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f55 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f55)
  store %struct.Memory* %call_484f55, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 484f59	 Bytes: 4
  %loadMem_484f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f59 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f59)
  store %struct.Memory* %call_484f59, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 484f5d	 Bytes: 4
  %loadMem_484f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f5d = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f5d)
  store %struct.Memory* %call_484f5d, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 484f61	 Bytes: 2
  %loadMem_484f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f61 = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f61)
  store %struct.Memory* %call_484f61, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rax	 RIP: 484f63	 Bytes: 8
  %loadMem_484f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f63 = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f63)
  store %struct.Memory* %call_484f63, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 484f6b	 Bytes: 6
  %loadMem_484f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f6b = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f6b)
  store %struct.Memory* %call_484f6b, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 484f71	 Bytes: 3
  %loadMem_484f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f71 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f71)
  store %struct.Memory* %call_484f71, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484f74	 Bytes: 3
  %loadMem_484f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f74 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f74)
  store %struct.Memory* %call_484f74, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 484f77	 Bytes: 4
  %loadMem_484f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f77 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f77)
  store %struct.Memory* %call_484f77, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 484f7b	 Bytes: 4
  %loadMem_484f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f7b = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f7b)
  store %struct.Memory* %call_484f7b, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 484f7f	 Bytes: 4
  %loadMem_484f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f7f = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f7f)
  store %struct.Memory* %call_484f7f, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 484f83	 Bytes: 8
  %loadMem_484f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f83 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f83)
  store %struct.Memory* %call_484f83, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 484f8b	 Bytes: 7
  %loadMem_484f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f8b = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f8b)
  store %struct.Memory* %call_484f8b, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edi	 RIP: 484f92	 Bytes: 6
  %loadMem_484f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f92 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f92)
  store %struct.Memory* %call_484f92, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edi	 RIP: 484f98	 Bytes: 3
  %loadMem_484f98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f98 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f98)
  store %struct.Memory* %call_484f98, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 484f9b	 Bytes: 3
  %loadMem_484f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f9b = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f9b)
  store %struct.Memory* %call_484f9b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 484f9e	 Bytes: 4
  %loadMem_484f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484f9e = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484f9e)
  store %struct.Memory* %call_484f9e, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 484fa2	 Bytes: 4
  %loadMem_484fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fa2 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fa2)
  store %struct.Memory* %call_484fa2, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %edi	 RIP: 484fa6	 Bytes: 4
  %loadMem_484fa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fa6 = call %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fa6)
  store %struct.Memory* %call_484fa6, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 484faa	 Bytes: 2
  %loadMem_484faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484faa = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484faa)
  store %struct.Memory* %call_484faa, %struct.Memory** %MEMORY

  ; Code: imull %esi, %ecx	 RIP: 484fac	 Bytes: 3
  %loadMem_484fac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fac = call %struct.Memory* @routine_imull__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fac)
  store %struct.Memory* %call_484fac, %struct.Memory** %MEMORY

  ; Code: addl -0x164(%rbp), %ecx	 RIP: 484faf	 Bytes: 6
  %loadMem_484faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484faf = call %struct.Memory* @routine_addl_MINUS0x164__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484faf)
  store %struct.Memory* %call_484faf, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x164(%rbp)	 RIP: 484fb5	 Bytes: 6
  %loadMem_484fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fb5 = call %struct.Memory* @routine_movl__ecx__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fb5)
  store %struct.Memory* %call_484fb5, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 484fbb	 Bytes: 8
  %loadMem_484fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fbb = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fbb)
  store %struct.Memory* %call_484fbb, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 484fc3	 Bytes: 3
  %loadMem_484fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fc3 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fc3)
  store %struct.Memory* %call_484fc3, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %ecx	 RIP: 484fc6	 Bytes: 6
  %loadMem_484fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fc6 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fc6)
  store %struct.Memory* %call_484fc6, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %ecx	 RIP: 484fcc	 Bytes: 3
  %loadMem_484fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fcc = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fcc)
  store %struct.Memory* %call_484fcc, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 484fcf	 Bytes: 3
  %loadMem_484fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fcf = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fcf)
  store %struct.Memory* %call_484fcf, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 484fd2	 Bytes: 4
  %loadMem_484fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fd2 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fd2)
  store %struct.Memory* %call_484fd2, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 484fd6	 Bytes: 4
  %loadMem_484fd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fd6 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fd6)
  store %struct.Memory* %call_484fd6, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 484fda	 Bytes: 4
  %loadMem_484fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fda = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fda)
  store %struct.Memory* %call_484fda, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 484fde	 Bytes: 8
  %loadMem_484fde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fde = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fde)
  store %struct.Memory* %call_484fde, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 484fe6	 Bytes: 7
  %loadMem_484fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fe6 = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fe6)
  store %struct.Memory* %call_484fe6, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 484fed	 Bytes: 3
  %loadMem_484fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484fed = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484fed)
  store %struct.Memory* %call_484fed, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 484ff0	 Bytes: 6
  %loadMem_484ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ff0 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ff0)
  store %struct.Memory* %call_484ff0, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 484ff6	 Bytes: 3
  %loadMem_484ff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ff6 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ff6)
  store %struct.Memory* %call_484ff6, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 484ff9	 Bytes: 3
  %loadMem_484ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ff9 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ff9)
  store %struct.Memory* %call_484ff9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 484ffc	 Bytes: 4
  %loadMem_484ffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_484ffc = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_484ffc)
  store %struct.Memory* %call_484ffc, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 485000	 Bytes: 4
  %loadMem_485000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485000 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485000)
  store %struct.Memory* %call_485000, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 485004	 Bytes: 4
  %loadMem_485004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485004 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485004)
  store %struct.Memory* %call_485004, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 485008	 Bytes: 2
  %loadMem_485008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485008 = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485008)
  store %struct.Memory* %call_485008, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 48500a	 Bytes: 8
  %loadMem_48500a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48500a = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48500a)
  store %struct.Memory* %call_48500a, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 485012	 Bytes: 3
  %loadMem_485012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485012 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485012)
  store %struct.Memory* %call_485012, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 485015	 Bytes: 6
  %loadMem_485015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485015 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485015)
  store %struct.Memory* %call_485015, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 48501b	 Bytes: 3
  %loadMem_48501b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48501b = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48501b)
  store %struct.Memory* %call_48501b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 48501e	 Bytes: 3
  %loadMem_48501e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48501e = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48501e)
  store %struct.Memory* %call_48501e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 485021	 Bytes: 4
  %loadMem_485021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485021 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485021)
  store %struct.Memory* %call_485021, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 485025	 Bytes: 4
  %loadMem_485025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485025 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485025)
  store %struct.Memory* %call_485025, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 485029	 Bytes: 4
  %loadMem_485029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485029 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485029)
  store %struct.Memory* %call_485029, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 48502d	 Bytes: 8
  %loadMem_48502d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48502d = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48502d)
  store %struct.Memory* %call_48502d, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 485035	 Bytes: 7
  %loadMem_485035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485035 = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485035)
  store %struct.Memory* %call_485035, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 48503c	 Bytes: 3
  %loadMem_48503c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48503c = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48503c)
  store %struct.Memory* %call_48503c, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edi	 RIP: 48503f	 Bytes: 6
  %loadMem_48503f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48503f = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48503f)
  store %struct.Memory* %call_48503f, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edi	 RIP: 485045	 Bytes: 3
  %loadMem_485045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485045 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485045)
  store %struct.Memory* %call_485045, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 485048	 Bytes: 3
  %loadMem_485048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485048 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485048)
  store %struct.Memory* %call_485048, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 48504b	 Bytes: 4
  %loadMem_48504b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48504b = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48504b)
  store %struct.Memory* %call_48504b, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 48504f	 Bytes: 4
  %loadMem_48504f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48504f = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48504f)
  store %struct.Memory* %call_48504f, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %edi	 RIP: 485053	 Bytes: 4
  %loadMem_485053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485053 = call %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485053)
  store %struct.Memory* %call_485053, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 485057	 Bytes: 2
  %loadMem_485057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485057 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485057)
  store %struct.Memory* %call_485057, %struct.Memory** %MEMORY

  ; Code: imull %esi, %ecx	 RIP: 485059	 Bytes: 3
  %loadMem_485059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485059 = call %struct.Memory* @routine_imull__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485059)
  store %struct.Memory* %call_485059, %struct.Memory** %MEMORY

  ; Code: addl -0x164(%rbp), %ecx	 RIP: 48505c	 Bytes: 6
  %loadMem_48505c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48505c = call %struct.Memory* @routine_addl_MINUS0x164__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48505c)
  store %struct.Memory* %call_48505c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x164(%rbp)	 RIP: 485062	 Bytes: 6
  %loadMem_485062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485062 = call %struct.Memory* @routine_movl__ecx__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485062)
  store %struct.Memory* %call_485062, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 485068	 Bytes: 8
  %loadMem_485068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485068 = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485068)
  store %struct.Memory* %call_485068, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 485070	 Bytes: 4
  %loadMem_485070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485070 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485070)
  store %struct.Memory* %call_485070, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %ecx	 RIP: 485074	 Bytes: 6
  %loadMem_485074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485074 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485074)
  store %struct.Memory* %call_485074, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %ecx	 RIP: 48507a	 Bytes: 3
  %loadMem_48507a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48507a = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48507a)
  store %struct.Memory* %call_48507a, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 48507d	 Bytes: 3
  %loadMem_48507d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48507d = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48507d)
  store %struct.Memory* %call_48507d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 485080	 Bytes: 4
  %loadMem_485080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485080 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485080)
  store %struct.Memory* %call_485080, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 485084	 Bytes: 4
  %loadMem_485084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485084 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485084)
  store %struct.Memory* %call_485084, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 485088	 Bytes: 4
  %loadMem_485088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485088 = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485088)
  store %struct.Memory* %call_485088, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 48508c	 Bytes: 8
  %loadMem_48508c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48508c = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48508c)
  store %struct.Memory* %call_48508c, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 485094	 Bytes: 7
  %loadMem_485094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485094 = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485094)
  store %struct.Memory* %call_485094, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 48509b	 Bytes: 4
  %loadMem_48509b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48509b = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48509b)
  store %struct.Memory* %call_48509b, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 48509f	 Bytes: 6
  %loadMem_48509f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48509f = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48509f)
  store %struct.Memory* %call_48509f, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4850a5	 Bytes: 3
  %loadMem_4850a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850a5 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850a5)
  store %struct.Memory* %call_4850a5, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4850a8	 Bytes: 3
  %loadMem_4850a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850a8 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850a8)
  store %struct.Memory* %call_4850a8, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4850ab	 Bytes: 4
  %loadMem_4850ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850ab = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850ab)
  store %struct.Memory* %call_4850ab, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4850af	 Bytes: 4
  %loadMem_4850af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850af = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850af)
  store %struct.Memory* %call_4850af, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4850b3	 Bytes: 4
  %loadMem_4850b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850b3 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850b3)
  store %struct.Memory* %call_4850b3, %struct.Memory** %MEMORY

  ; Code: subl %esi, %ecx	 RIP: 4850b7	 Bytes: 2
  %loadMem_4850b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850b7 = call %struct.Memory* @routine_subl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850b7)
  store %struct.Memory* %call_4850b7, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rax	 RIP: 4850b9	 Bytes: 8
  %loadMem_4850b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850b9 = call %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850b9)
  store %struct.Memory* %call_4850b9, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4850c1	 Bytes: 4
  %loadMem_4850c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850c1 = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850c1)
  store %struct.Memory* %call_4850c1, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 4850c5	 Bytes: 6
  %loadMem_4850c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850c5 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850c5)
  store %struct.Memory* %call_4850c5, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 4850cb	 Bytes: 3
  %loadMem_4850cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850cb = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850cb)
  store %struct.Memory* %call_4850cb, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4850ce	 Bytes: 3
  %loadMem_4850ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850ce = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850ce)
  store %struct.Memory* %call_4850ce, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4850d1	 Bytes: 4
  %loadMem_4850d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850d1 = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850d1)
  store %struct.Memory* %call_4850d1, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 4850d5	 Bytes: 4
  %loadMem_4850d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850d5 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850d5)
  store %struct.Memory* %call_4850d5, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %esi	 RIP: 4850d9	 Bytes: 4
  %loadMem_4850d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850d9 = call %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850d9)
  store %struct.Memory* %call_4850d9, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4850dd	 Bytes: 8
  %loadMem_4850dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850dd = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850dd)
  store %struct.Memory* %call_4850dd, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 4850e5	 Bytes: 7
  %loadMem_4850e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850e5 = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850e5)
  store %struct.Memory* %call_4850e5, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rax	 RIP: 4850ec	 Bytes: 4
  %loadMem_4850ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850ec = call %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850ec)
  store %struct.Memory* %call_4850ec, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edi	 RIP: 4850f0	 Bytes: 6
  %loadMem_4850f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850f0 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850f0)
  store %struct.Memory* %call_4850f0, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edi	 RIP: 4850f6	 Bytes: 3
  %loadMem_4850f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850f6 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850f6)
  store %struct.Memory* %call_4850f6, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rdx	 RIP: 4850f9	 Bytes: 3
  %loadMem_4850f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850f9 = call %struct.Memory* @routine_movslq__edi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850f9)
  store %struct.Memory* %call_4850f9, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4850fc	 Bytes: 4
  %loadMem_4850fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4850fc = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4850fc)
  store %struct.Memory* %call_4850fc, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rdx	 RIP: 485100	 Bytes: 4
  %loadMem_485100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485100 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485100)
  store %struct.Memory* %call_485100, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %edi	 RIP: 485104	 Bytes: 4
  %loadMem_485104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485104 = call %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485104)
  store %struct.Memory* %call_485104, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 485108	 Bytes: 2
  %loadMem_485108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485108 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485108)
  store %struct.Memory* %call_485108, %struct.Memory** %MEMORY

  ; Code: imull %esi, %ecx	 RIP: 48510a	 Bytes: 3
  %loadMem_48510a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48510a = call %struct.Memory* @routine_imull__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48510a)
  store %struct.Memory* %call_48510a, %struct.Memory** %MEMORY

  ; Code: addl -0x164(%rbp), %ecx	 RIP: 48510d	 Bytes: 6
  %loadMem_48510d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48510d = call %struct.Memory* @routine_addl_MINUS0x164__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48510d)
  store %struct.Memory* %call_48510d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x164(%rbp)	 RIP: 485113	 Bytes: 6
  %loadMem_485113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485113 = call %struct.Memory* @routine_movl__ecx__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485113)
  store %struct.Memory* %call_485113, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 485119	 Bytes: 3
  %loadMem_485119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485119 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485119)
  store %struct.Memory* %call_485119, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48511c	 Bytes: 3
  %loadMem_48511c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48511c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48511c)
  store %struct.Memory* %call_48511c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 48511f	 Bytes: 3
  %loadMem_48511f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48511f = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48511f)
  store %struct.Memory* %call_48511f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484f06	 RIP: 485122	 Bytes: 5
  %loadMem_485122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485122 = call %struct.Memory* @routine_jmpq_.L_484f06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485122, i64 -540, i64 5)
  store %struct.Memory* %call_485122, %struct.Memory** %MEMORY

  br label %block_.L_484f06

  ; Code: .L_485127:	 RIP: 485127	 Bytes: 0
block_.L_485127:

  ; Code: jmpq .L_48512c	 RIP: 485127	 Bytes: 5
  %loadMem_485127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485127 = call %struct.Memory* @routine_jmpq_.L_48512c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485127, i64 5, i64 5)
  store %struct.Memory* %call_485127, %struct.Memory** %MEMORY

  br label %block_.L_48512c

  ; Code: .L_48512c:	 RIP: 48512c	 Bytes: 0
block_.L_48512c:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 48512c	 Bytes: 3
  %loadMem_48512c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48512c = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48512c)
  store %struct.Memory* %call_48512c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48512f	 Bytes: 3
  %loadMem_48512f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48512f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48512f)
  store %struct.Memory* %call_48512f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 485132	 Bytes: 3
  %loadMem_485132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485132 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485132)
  store %struct.Memory* %call_485132, %struct.Memory** %MEMORY

  ; Code: jmpq .L_484ef3	 RIP: 485135	 Bytes: 5
  %loadMem_485135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485135 = call %struct.Memory* @routine_jmpq_.L_484ef3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485135, i64 -578, i64 5)
  store %struct.Memory* %call_485135, %struct.Memory** %MEMORY

  br label %block_.L_484ef3

  ; Code: .L_48513a:	 RIP: 48513a	 Bytes: 0
block_.L_48513a:

  ; Code: cvtsi2sdl -0x164(%rbp), %xmm0	 RIP: 48513a	 Bytes: 8
  %loadMem_48513a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48513a = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x164__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48513a)
  store %struct.Memory* %call_48513a, %struct.Memory** %MEMORY

  ; Code: movsd -0x18(%rbp), %xmm1	 RIP: 485142	 Bytes: 5
  %loadMem_485142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485142 = call %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485142)
  store %struct.Memory* %call_485142, %struct.Memory** %MEMORY

  ; Code: cvtsi2sdl -0x160(%rbp), %xmm2	 RIP: 485147	 Bytes: 8
  %loadMem_485147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485147 = call %struct.Memory* @routine_cvtsi2sdl_MINUS0x160__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485147)
  store %struct.Memory* %call_485147, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm2, %xmm1	 RIP: 48514f	 Bytes: 4
  %loadMem_48514f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48514f = call %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48514f)
  store %struct.Memory* %call_48514f, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 485153	 Bytes: 4
  %loadMem_485153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485153 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485153)
  store %struct.Memory* %call_485153, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0xd8(%rbp)	 RIP: 485157	 Bytes: 8
  %loadMem_485157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485157 = call %struct.Memory* @routine_movsd__xmm0__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485157)
  store %struct.Memory* %call_485157, %struct.Memory** %MEMORY

  ; Code: movsd -0xd8(%rbp), %xmm0	 RIP: 48515f	 Bytes: 8
  %loadMem_48515f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48515f = call %struct.Memory* @routine_movsd_MINUS0xd8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48515f)
  store %struct.Memory* %call_48515f, %struct.Memory** %MEMORY

  ; Code: movsd -0x100(%rbp), %xmm1	 RIP: 485167	 Bytes: 8
  %loadMem_485167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485167 = call %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485167)
  store %struct.Memory* %call_485167, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 48516f	 Bytes: 4
  %loadMem_48516f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48516f = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48516f)
  store %struct.Memory* %call_48516f, %struct.Memory** %MEMORY

  ; Code: jbe .L_48569d	 RIP: 485173	 Bytes: 6
  %loadMem_485173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485173 = call %struct.Memory* @routine_jbe_.L_48569d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485173, i8* %BRANCH_TAKEN, i64 1322, i64 6, i64 6)
  store %struct.Memory* %call_485173, %struct.Memory** %MEMORY

  %loadBr_485173 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485173 = icmp eq i8 %loadBr_485173, 1
  br i1 %cmpBr_485173, label %block_.L_48569d, label %block_485179

block_485179:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485179	 Bytes: 7
  %loadMem_485179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485179 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485179)
  store %struct.Memory* %call_485179, %struct.Memory** %MEMORY

  ; Code: .L_485180:	 RIP: 485180	 Bytes: 0
  br label %block_.L_485180
block_.L_485180:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 485180	 Bytes: 4
  %loadMem_485180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485180 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485180)
  store %struct.Memory* %call_485180, %struct.Memory** %MEMORY

  ; Code: jge .L_485201	 RIP: 485184	 Bytes: 6
  %loadMem_485184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485184 = call %struct.Memory* @routine_jge_.L_485201(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485184, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_485184, %struct.Memory** %MEMORY

  %loadBr_485184 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485184 = icmp eq i8 %loadBr_485184, 1
  br i1 %cmpBr_485184, label %block_.L_485201, label %block_48518a

block_48518a:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 48518a	 Bytes: 7
  %loadMem_48518a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48518a = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48518a)
  store %struct.Memory* %call_48518a, %struct.Memory** %MEMORY

  ; Code: .L_485191:	 RIP: 485191	 Bytes: 0
  br label %block_.L_485191
block_.L_485191:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 485191	 Bytes: 4
  %loadMem_485191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485191 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485191)
  store %struct.Memory* %call_485191, %struct.Memory** %MEMORY

  ; Code: jge .L_4851ee	 RIP: 485195	 Bytes: 6
  %loadMem_485195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485195 = call %struct.Memory* @routine_jge_.L_4851ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485195, i8* %BRANCH_TAKEN, i64 89, i64 6, i64 6)
  store %struct.Memory* %call_485195, %struct.Memory** %MEMORY

  %loadBr_485195 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485195 = icmp eq i8 %loadBr_485195, 1
  br i1 %cmpBr_485195, label %block_.L_4851ee, label %block_48519b

block_48519b:
  ; Code: movq 0x6cb900, %rax	 RIP: 48519b	 Bytes: 8
  %loadMem_48519b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48519b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48519b)
  store %struct.Memory* %call_48519b, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4851a3	 Bytes: 7
  %loadMem_4851a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851a3 = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851a3)
  store %struct.Memory* %call_4851a3, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4851aa	 Bytes: 4
  %loadMem_4851aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851aa = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851aa)
  store %struct.Memory* %call_4851aa, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4851ae	 Bytes: 4
  %loadMem_4851ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851ae = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851ae)
  store %struct.Memory* %call_4851ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4851b2	 Bytes: 4
  %loadMem_4851b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851b2 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851b2)
  store %struct.Memory* %call_4851b2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4851b6	 Bytes: 4
  %loadMem_4851b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851b6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851b6)
  store %struct.Memory* %call_4851b6, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4851ba	 Bytes: 4
  %loadMem_4851ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851ba = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851ba)
  store %struct.Memory* %call_4851ba, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4851be	 Bytes: 4
  %loadMem_4851be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851be = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851be)
  store %struct.Memory* %call_4851be, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4851c2	 Bytes: 4
  %loadMem_4851c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851c2 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851c2)
  store %struct.Memory* %call_4851c2, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4851c6	 Bytes: 3
  %loadMem_4851c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851c6 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851c6)
  store %struct.Memory* %call_4851c6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cc608, %rax	 RIP: 4851c9	 Bytes: 8
  %loadMem_4851c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851c9 = call %struct.Memory* @routine_movq_0x6cc608___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851c9)
  store %struct.Memory* %call_4851c9, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4851d1	 Bytes: 4
  %loadMem_4851d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851d1 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851d1)
  store %struct.Memory* %call_4851d1, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4851d5	 Bytes: 4
  %loadMem_4851d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851d5 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851d5)
  store %struct.Memory* %call_4851d5, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4851d9	 Bytes: 4
  %loadMem_4851d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851d9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851d9)
  store %struct.Memory* %call_4851d9, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4851dd	 Bytes: 3
  %loadMem_4851dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851dd = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851dd)
  store %struct.Memory* %call_4851dd, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4851e0	 Bytes: 3
  %loadMem_4851e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851e0 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851e0)
  store %struct.Memory* %call_4851e0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4851e3	 Bytes: 3
  %loadMem_4851e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851e3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851e3)
  store %struct.Memory* %call_4851e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4851e6	 Bytes: 3
  %loadMem_4851e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851e6 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851e6)
  store %struct.Memory* %call_4851e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485191	 RIP: 4851e9	 Bytes: 5
  %loadMem_4851e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851e9 = call %struct.Memory* @routine_jmpq_.L_485191(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851e9, i64 -88, i64 5)
  store %struct.Memory* %call_4851e9, %struct.Memory** %MEMORY

  br label %block_.L_485191

  ; Code: .L_4851ee:	 RIP: 4851ee	 Bytes: 0
block_.L_4851ee:

  ; Code: jmpq .L_4851f3	 RIP: 4851ee	 Bytes: 5
  %loadMem_4851ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851ee = call %struct.Memory* @routine_jmpq_.L_4851f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851ee, i64 5, i64 5)
  store %struct.Memory* %call_4851ee, %struct.Memory** %MEMORY

  br label %block_.L_4851f3

  ; Code: .L_4851f3:	 RIP: 4851f3	 Bytes: 0
block_.L_4851f3:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4851f3	 Bytes: 3
  %loadMem_4851f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851f3 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851f3)
  store %struct.Memory* %call_4851f3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4851f6	 Bytes: 3
  %loadMem_4851f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851f6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851f6)
  store %struct.Memory* %call_4851f6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4851f9	 Bytes: 3
  %loadMem_4851f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851f9 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851f9)
  store %struct.Memory* %call_4851f9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485180	 RIP: 4851fc	 Bytes: 5
  %loadMem_4851fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4851fc = call %struct.Memory* @routine_jmpq_.L_485180(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4851fc, i64 -124, i64 5)
  store %struct.Memory* %call_4851fc, %struct.Memory** %MEMORY

  br label %block_.L_485180

  ; Code: .L_485201:	 RIP: 485201	 Bytes: 0
block_.L_485201:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485201	 Bytes: 7
  %loadMem_485201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485201 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485201)
  store %struct.Memory* %call_485201, %struct.Memory** %MEMORY

  ; Code: .L_485208:	 RIP: 485208	 Bytes: 0
  br label %block_.L_485208
block_.L_485208:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 485208	 Bytes: 4
  %loadMem_485208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485208 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485208)
  store %struct.Memory* %call_485208, %struct.Memory** %MEMORY

  ; Code: jge .L_485293	 RIP: 48520c	 Bytes: 6
  %loadMem_48520c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48520c = call %struct.Memory* @routine_jge_.L_485293(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48520c, i8* %BRANCH_TAKEN, i64 135, i64 6, i64 6)
  store %struct.Memory* %call_48520c, %struct.Memory** %MEMORY

  %loadBr_48520c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48520c = icmp eq i8 %loadBr_48520c, 1
  br i1 %cmpBr_48520c, label %block_.L_485293, label %block_485212

block_485212:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 485212	 Bytes: 7
  %loadMem_485212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485212 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485212)
  store %struct.Memory* %call_485212, %struct.Memory** %MEMORY

  ; Code: .L_485219:	 RIP: 485219	 Bytes: 0
  br label %block_.L_485219
block_.L_485219:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 485219	 Bytes: 4
  %loadMem_485219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485219 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485219)
  store %struct.Memory* %call_485219, %struct.Memory** %MEMORY

  ; Code: jge .L_485280	 RIP: 48521d	 Bytes: 6
  %loadMem_48521d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48521d = call %struct.Memory* @routine_jge_.L_485280(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48521d, i8* %BRANCH_TAKEN, i64 99, i64 6, i64 6)
  store %struct.Memory* %call_48521d, %struct.Memory** %MEMORY

  %loadBr_48521d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48521d = icmp eq i8 %loadBr_48521d, 1
  br i1 %cmpBr_48521d, label %block_.L_485280, label %block_485223

block_485223:
  ; Code: movq $0x6f9560, %rax	 RIP: 485223	 Bytes: 10
  %loadMem_485223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485223 = call %struct.Memory* @routine_movq__0x6f9560___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485223)
  store %struct.Memory* %call_485223, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 48522d	 Bytes: 8
  %loadMem_48522d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48522d = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48522d)
  store %struct.Memory* %call_48522d, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rcx), %rcx	 RIP: 485235	 Bytes: 7
  %loadMem_485235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485235 = call %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485235)
  store %struct.Memory* %call_485235, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 48523c	 Bytes: 3
  %loadMem_48523c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48523c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48523c)
  store %struct.Memory* %call_48523c, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %edx	 RIP: 48523f	 Bytes: 3
  %loadMem_48523f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48523f = call %struct.Memory* @routine_addl__0x4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48523f)
  store %struct.Memory* %call_48523f, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 485242	 Bytes: 3
  %loadMem_485242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485242 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485242)
  store %struct.Memory* %call_485242, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 485245	 Bytes: 4
  %loadMem_485245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485245 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485245)
  store %struct.Memory* %call_485245, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 485249	 Bytes: 4
  %loadMem_485249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485249 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485249)
  store %struct.Memory* %call_485249, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 48524d	 Bytes: 4
  %loadMem_48524d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48524d = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48524d)
  store %struct.Memory* %call_48524d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 485251	 Bytes: 4
  %loadMem_485251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485251 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485251)
  store %struct.Memory* %call_485251, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 485255	 Bytes: 4
  %loadMem_485255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485255 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485255)
  store %struct.Memory* %call_485255, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 485259	 Bytes: 4
  %loadMem_485259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485259 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485259)
  store %struct.Memory* %call_485259, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %edx	 RIP: 48525d	 Bytes: 3
  %loadMem_48525d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48525d = call %struct.Memory* @routine_movl___rcx__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48525d)
  store %struct.Memory* %call_48525d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485260	 Bytes: 4
  %loadMem_485260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485260 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485260)
  store %struct.Memory* %call_485260, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 485264	 Bytes: 4
  %loadMem_485264 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485264 = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485264)
  store %struct.Memory* %call_485264, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485268	 Bytes: 3
  %loadMem_485268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485268 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485268)
  store %struct.Memory* %call_485268, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48526b	 Bytes: 4
  %loadMem_48526b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48526b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48526b)
  store %struct.Memory* %call_48526b, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 48526f	 Bytes: 3
  %loadMem_48526f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48526f = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48526f)
  store %struct.Memory* %call_48526f, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 485272	 Bytes: 3
  %loadMem_485272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485272 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485272)
  store %struct.Memory* %call_485272, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485275	 Bytes: 3
  %loadMem_485275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485275 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485275)
  store %struct.Memory* %call_485275, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 485278	 Bytes: 3
  %loadMem_485278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485278 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485278)
  store %struct.Memory* %call_485278, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485219	 RIP: 48527b	 Bytes: 5
  %loadMem_48527b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48527b = call %struct.Memory* @routine_jmpq_.L_485219(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48527b, i64 -98, i64 5)
  store %struct.Memory* %call_48527b, %struct.Memory** %MEMORY

  br label %block_.L_485219

  ; Code: .L_485280:	 RIP: 485280	 Bytes: 0
block_.L_485280:

  ; Code: jmpq .L_485285	 RIP: 485280	 Bytes: 5
  %loadMem_485280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485280 = call %struct.Memory* @routine_jmpq_.L_485285(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485280, i64 5, i64 5)
  store %struct.Memory* %call_485280, %struct.Memory** %MEMORY

  br label %block_.L_485285

  ; Code: .L_485285:	 RIP: 485285	 Bytes: 0
block_.L_485285:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 485285	 Bytes: 3
  %loadMem_485285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485285 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485285)
  store %struct.Memory* %call_485285, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485288	 Bytes: 3
  %loadMem_485288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485288 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485288)
  store %struct.Memory* %call_485288, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 48528b	 Bytes: 3
  %loadMem_48528b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48528b = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48528b)
  store %struct.Memory* %call_48528b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485208	 RIP: 48528e	 Bytes: 5
  %loadMem_48528e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48528e = call %struct.Memory* @routine_jmpq_.L_485208(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48528e, i64 -134, i64 5)
  store %struct.Memory* %call_48528e, %struct.Memory** %MEMORY

  br label %block_.L_485208

  ; Code: .L_485293:	 RIP: 485293	 Bytes: 0
block_.L_485293:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485293	 Bytes: 7
  %loadMem_485293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485293 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485293)
  store %struct.Memory* %call_485293, %struct.Memory** %MEMORY

  ; Code: .L_48529a:	 RIP: 48529a	 Bytes: 0
  br label %block_.L_48529a
block_.L_48529a:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 48529a	 Bytes: 4
  %loadMem_48529a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48529a = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48529a)
  store %struct.Memory* %call_48529a, %struct.Memory** %MEMORY

  ; Code: jge .L_48532b	 RIP: 48529e	 Bytes: 6
  %loadMem_48529e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48529e = call %struct.Memory* @routine_jge_.L_48532b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48529e, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_48529e, %struct.Memory** %MEMORY

  %loadBr_48529e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48529e = icmp eq i8 %loadBr_48529e, 1
  br i1 %cmpBr_48529e, label %block_.L_48532b, label %block_4852a4

block_4852a4:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4852a4	 Bytes: 7
  %loadMem_4852a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852a4 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852a4)
  store %struct.Memory* %call_4852a4, %struct.Memory** %MEMORY

  ; Code: .L_4852ab:	 RIP: 4852ab	 Bytes: 0
  br label %block_.L_4852ab
block_.L_4852ab:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4852ab	 Bytes: 4
  %loadMem_4852ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852ab = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852ab)
  store %struct.Memory* %call_4852ab, %struct.Memory** %MEMORY

  ; Code: jge .L_485318	 RIP: 4852af	 Bytes: 6
  %loadMem_4852af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852af = call %struct.Memory* @routine_jge_.L_485318(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852af, i8* %BRANCH_TAKEN, i64 105, i64 6, i64 6)
  store %struct.Memory* %call_4852af, %struct.Memory** %MEMORY

  %loadBr_4852af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4852af = icmp eq i8 %loadBr_4852af, 1
  br i1 %cmpBr_4852af, label %block_.L_485318, label %block_4852b5

block_4852b5:
  ; Code: movq $0x6f9560, %rax	 RIP: 4852b5	 Bytes: 10
  %loadMem_4852b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852b5 = call %struct.Memory* @routine_movq__0x6f9560___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852b5)
  store %struct.Memory* %call_4852b5, %struct.Memory** %MEMORY

  ; Code: addq $0x90, %rax	 RIP: 4852bf	 Bytes: 6
  %loadMem_4852bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852bf = call %struct.Memory* @routine_addq__0x90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852bf)
  store %struct.Memory* %call_4852bf, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4852c5	 Bytes: 8
  %loadMem_4852c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852c5 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852c5)
  store %struct.Memory* %call_4852c5, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rcx), %rcx	 RIP: 4852cd	 Bytes: 7
  %loadMem_4852cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852cd = call %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852cd)
  store %struct.Memory* %call_4852cd, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4852d4	 Bytes: 3
  %loadMem_4852d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852d4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852d4)
  store %struct.Memory* %call_4852d4, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %edx	 RIP: 4852d7	 Bytes: 3
  %loadMem_4852d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852d7 = call %struct.Memory* @routine_addl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852d7)
  store %struct.Memory* %call_4852d7, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 4852da	 Bytes: 3
  %loadMem_4852da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852da = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852da)
  store %struct.Memory* %call_4852da, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4852dd	 Bytes: 4
  %loadMem_4852dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852dd = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852dd)
  store %struct.Memory* %call_4852dd, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 4852e1	 Bytes: 4
  %loadMem_4852e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852e1 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852e1)
  store %struct.Memory* %call_4852e1, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4852e5	 Bytes: 4
  %loadMem_4852e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852e5 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852e5)
  store %struct.Memory* %call_4852e5, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4852e9	 Bytes: 4
  %loadMem_4852e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852e9 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852e9)
  store %struct.Memory* %call_4852e9, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 4852ed	 Bytes: 4
  %loadMem_4852ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852ed = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852ed)
  store %struct.Memory* %call_4852ed, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4852f1	 Bytes: 4
  %loadMem_4852f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852f1 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852f1)
  store %struct.Memory* %call_4852f1, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %edx	 RIP: 4852f5	 Bytes: 3
  %loadMem_4852f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852f5 = call %struct.Memory* @routine_movl___rcx__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852f5)
  store %struct.Memory* %call_4852f5, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4852f8	 Bytes: 4
  %loadMem_4852f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852f8 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852f8)
  store %struct.Memory* %call_4852f8, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 4852fc	 Bytes: 4
  %loadMem_4852fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4852fc = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4852fc)
  store %struct.Memory* %call_4852fc, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485300	 Bytes: 3
  %loadMem_485300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485300 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485300)
  store %struct.Memory* %call_485300, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485303	 Bytes: 4
  %loadMem_485303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485303 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485303)
  store %struct.Memory* %call_485303, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 485307	 Bytes: 3
  %loadMem_485307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485307 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485307)
  store %struct.Memory* %call_485307, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 48530a	 Bytes: 3
  %loadMem_48530a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48530a = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48530a)
  store %struct.Memory* %call_48530a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48530d	 Bytes: 3
  %loadMem_48530d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48530d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48530d)
  store %struct.Memory* %call_48530d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 485310	 Bytes: 3
  %loadMem_485310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485310 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485310)
  store %struct.Memory* %call_485310, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4852ab	 RIP: 485313	 Bytes: 5
  %loadMem_485313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485313 = call %struct.Memory* @routine_jmpq_.L_4852ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485313, i64 -104, i64 5)
  store %struct.Memory* %call_485313, %struct.Memory** %MEMORY

  br label %block_.L_4852ab

  ; Code: .L_485318:	 RIP: 485318	 Bytes: 0
block_.L_485318:

  ; Code: jmpq .L_48531d	 RIP: 485318	 Bytes: 5
  %loadMem_485318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485318 = call %struct.Memory* @routine_jmpq_.L_48531d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485318, i64 5, i64 5)
  store %struct.Memory* %call_485318, %struct.Memory** %MEMORY

  br label %block_.L_48531d

  ; Code: .L_48531d:	 RIP: 48531d	 Bytes: 0
block_.L_48531d:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 48531d	 Bytes: 3
  %loadMem_48531d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48531d = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48531d)
  store %struct.Memory* %call_48531d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485320	 Bytes: 3
  %loadMem_485320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485320 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485320)
  store %struct.Memory* %call_485320, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 485323	 Bytes: 3
  %loadMem_485323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485323 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485323)
  store %struct.Memory* %call_485323, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48529a	 RIP: 485326	 Bytes: 5
  %loadMem_485326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485326 = call %struct.Memory* @routine_jmpq_.L_48529a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485326, i64 -140, i64 5)
  store %struct.Memory* %call_485326, %struct.Memory** %MEMORY

  br label %block_.L_48529a

  ; Code: .L_48532b:	 RIP: 48532b	 Bytes: 0
block_.L_48532b:

  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 48532b	 Bytes: 7
  %loadMem_48532b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48532b = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48532b)
  store %struct.Memory* %call_48532b, %struct.Memory** %MEMORY

  ; Code: .L_485332:	 RIP: 485332	 Bytes: 0
  br label %block_.L_485332
block_.L_485332:

  ; Code: cmpl $0x2, -0x2c(%rbp)	 RIP: 485332	 Bytes: 4
  %loadMem_485332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485332 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485332)
  store %struct.Memory* %call_485332, %struct.Memory** %MEMORY

  ; Code: jge .L_4855f6	 RIP: 485336	 Bytes: 6
  %loadMem_485336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485336 = call %struct.Memory* @routine_jge_.L_4855f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485336, i8* %BRANCH_TAKEN, i64 704, i64 6, i64 6)
  store %struct.Memory* %call_485336, %struct.Memory** %MEMORY

  %loadBr_485336 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485336 = icmp eq i8 %loadBr_485336, 1
  br i1 %cmpBr_485336, label %block_.L_4855f6, label %block_48533c

block_48533c:
  ; Code: movl $0x2, %eax	 RIP: 48533c	 Bytes: 5
  %loadMem_48533c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48533c = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48533c)
  store %struct.Memory* %call_48533c, %struct.Memory** %MEMORY

  ; Code: movq $0x6d0920, %rcx	 RIP: 485341	 Bytes: 10
  %loadMem_485341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485341 = call %struct.Memory* @routine_movq__0x6d0920___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485341)
  store %struct.Memory* %call_485341, %struct.Memory** %MEMORY

  ; Code: movq $0x6cd4f0, %rdx	 RIP: 48534b	 Bytes: 10
  %loadMem_48534b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48534b = call %struct.Memory* @routine_movq__0x6cd4f0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48534b)
  store %struct.Memory* %call_48534b, %struct.Memory** %MEMORY

  ; Code: movq $0x7107b0, %rsi	 RIP: 485355	 Bytes: 10
  %loadMem_485355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485355 = call %struct.Memory* @routine_movq__0x7107b0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485355)
  store %struct.Memory* %call_485355, %struct.Memory** %MEMORY

  ; Code: movq $0x6d4600, %rdi	 RIP: 48535f	 Bytes: 10
  %loadMem_48535f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48535f = call %struct.Memory* @routine_movq__0x6d4600___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48535f)
  store %struct.Memory* %call_48535f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %r8	 RIP: 485369	 Bytes: 4
  %loadMem_485369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485369 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485369)
  store %struct.Memory* %call_485369, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 48536d	 Bytes: 4
  %loadMem_48536d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48536d = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48536d)
  store %struct.Memory* %call_48536d, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 485371	 Bytes: 3
  %loadMem_485371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485371 = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485371)
  store %struct.Memory* %call_485371, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r9d	 RIP: 485374	 Bytes: 4
  %loadMem_485374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485374 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485374)
  store %struct.Memory* %call_485374, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x260(%rbp)	 RIP: 485378	 Bytes: 6
  %loadMem_485378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485378 = call %struct.Memory* @routine_movl__eax__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485378)
  store %struct.Memory* %call_485378, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %eax	 RIP: 48537e	 Bytes: 3
  %loadMem_48537e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48537e = call %struct.Memory* @routine_movl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48537e)
  store %struct.Memory* %call_48537e, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x268(%rbp)	 RIP: 485381	 Bytes: 7
  %loadMem_485381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485381 = call %struct.Memory* @routine_movq__rdx__MINUS0x268__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485381)
  store %struct.Memory* %call_485381, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485388	 Bytes: 1
  %loadMem_485388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485388 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485388)
  store %struct.Memory* %call_485388, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %r9d	 RIP: 485389	 Bytes: 7
  %loadMem_485389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485389 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485389)
  store %struct.Memory* %call_485389, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485390	 Bytes: 3
  %loadMem_485390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485390 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485390)
  store %struct.Memory* %call_485390, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485393	 Bytes: 3
  %loadMem_485393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485393 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485393)
  store %struct.Memory* %call_485393, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 485396	 Bytes: 4
  %loadMem_485396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485396 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485396)
  store %struct.Memory* %call_485396, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 48539a	 Bytes: 3
  %loadMem_48539a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48539a = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48539a)
  store %struct.Memory* %call_48539a, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x26c(%rbp)	 RIP: 48539d	 Bytes: 6
  %loadMem_48539d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48539d = call %struct.Memory* @routine_movl__edx__MINUS0x26c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48539d)
  store %struct.Memory* %call_48539d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4853a3	 Bytes: 1
  %loadMem_4853a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853a3 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853a3)
  store %struct.Memory* %call_4853a3, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4853a4	 Bytes: 3
  %loadMem_4853a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853a4 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853a4)
  store %struct.Memory* %call_4853a4, %struct.Memory** %MEMORY

  ; Code: movl -0x26c(%rbp), %r10d	 RIP: 4853a7	 Bytes: 7
  %loadMem_4853a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853a7 = call %struct.Memory* @routine_movl_MINUS0x26c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853a7)
  store %struct.Memory* %call_4853a7, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 4853ae	 Bytes: 3
  %loadMem_4853ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853ae = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853ae)
  store %struct.Memory* %call_4853ae, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %r8	 RIP: 4853b1	 Bytes: 3
  %loadMem_4853b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853b1 = call %struct.Memory* @routine_movslq__r10d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853b1)
  store %struct.Memory* %call_4853b1, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 4853b4	 Bytes: 4
  %loadMem_4853b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853b4 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853b4)
  store %struct.Memory* %call_4853b4, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 4853b8	 Bytes: 3
  %loadMem_4853b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853b8 = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853b8)
  store %struct.Memory* %call_4853b8, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4853bb	 Bytes: 3
  %loadMem_4853bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853bb = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853bb)
  store %struct.Memory* %call_4853bb, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4853be	 Bytes: 2
  %loadMem_4853be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853be = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853be)
  store %struct.Memory* %call_4853be, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4853c0	 Bytes: 1
  %loadMem_4853c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853c0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853c0)
  store %struct.Memory* %call_4853c0, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4853c1	 Bytes: 3
  %loadMem_4853c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853c1 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853c1)
  store %struct.Memory* %call_4853c1, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4853c4	 Bytes: 3
  %loadMem_4853c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853c4 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853c4)
  store %struct.Memory* %call_4853c4, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 4853c7	 Bytes: 4
  %loadMem_4853c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853c7 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853c7)
  store %struct.Memory* %call_4853c7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x270(%rbp)	 RIP: 4853cb	 Bytes: 6
  %loadMem_4853cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853cb = call %struct.Memory* @routine_movl__eax__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853cb)
  store %struct.Memory* %call_4853cb, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4853d1	 Bytes: 3
  %loadMem_4853d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853d1 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853d1)
  store %struct.Memory* %call_4853d1, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4853d4	 Bytes: 1
  %loadMem_4853d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853d4 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853d4)
  store %struct.Memory* %call_4853d4, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4853d5	 Bytes: 3
  %loadMem_4853d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853d5 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853d5)
  store %struct.Memory* %call_4853d5, %struct.Memory** %MEMORY

  ; Code: movl -0x270(%rbp), %r10d	 RIP: 4853d8	 Bytes: 7
  %loadMem_4853d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853d8 = call %struct.Memory* @routine_movl_MINUS0x270__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853d8)
  store %struct.Memory* %call_4853d8, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 4853df	 Bytes: 3
  %loadMem_4853df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853df = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853df)
  store %struct.Memory* %call_4853df, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %r8	 RIP: 4853e2	 Bytes: 3
  %loadMem_4853e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853e2 = call %struct.Memory* @routine_movslq__r10d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853e2)
  store %struct.Memory* %call_4853e2, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%r8,4), %eax	 RIP: 4853e5	 Bytes: 4
  %loadMem_4853e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853e5 = call %struct.Memory* @routine_movl___rdi__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853e5)
  store %struct.Memory* %call_4853e5, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4853e9	 Bytes: 4
  %loadMem_4853e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853e9 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853e9)
  store %struct.Memory* %call_4853e9, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 4853ed	 Bytes: 4
  %loadMem_4853ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853ed = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853ed)
  store %struct.Memory* %call_4853ed, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4853f1	 Bytes: 3
  %loadMem_4853f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853f1 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853f1)
  store %struct.Memory* %call_4853f1, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r10d	 RIP: 4853f4	 Bytes: 4
  %loadMem_4853f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853f4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853f4)
  store %struct.Memory* %call_4853f4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x274(%rbp)	 RIP: 4853f8	 Bytes: 6
  %loadMem_4853f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853f8 = call %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853f8)
  store %struct.Memory* %call_4853f8, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4853fe	 Bytes: 3
  %loadMem_4853fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4853fe = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4853fe)
  store %struct.Memory* %call_4853fe, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485401	 Bytes: 1
  %loadMem_485401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485401 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485401)
  store %struct.Memory* %call_485401, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485402	 Bytes: 3
  %loadMem_485402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485402 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485402)
  store %struct.Memory* %call_485402, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485405	 Bytes: 3
  %loadMem_485405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485405 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485405)
  store %struct.Memory* %call_485405, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 485408	 Bytes: 4
  %loadMem_485408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485408 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485408)
  store %struct.Memory* %call_485408, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 48540c	 Bytes: 3
  %loadMem_48540c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48540c = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48540c)
  store %struct.Memory* %call_48540c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x278(%rbp)	 RIP: 48540f	 Bytes: 6
  %loadMem_48540f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48540f = call %struct.Memory* @routine_movl__edx__MINUS0x278__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48540f)
  store %struct.Memory* %call_48540f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485415	 Bytes: 1
  %loadMem_485415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485415 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485415)
  store %struct.Memory* %call_485415, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485416	 Bytes: 3
  %loadMem_485416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485416 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485416)
  store %struct.Memory* %call_485416, %struct.Memory** %MEMORY

  ; Code: movl -0x278(%rbp), %r10d	 RIP: 485419	 Bytes: 7
  %loadMem_485419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485419 = call %struct.Memory* @routine_movl_MINUS0x278__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485419)
  store %struct.Memory* %call_485419, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 485420	 Bytes: 3
  %loadMem_485420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485420 = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485420)
  store %struct.Memory* %call_485420, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 485423	 Bytes: 3
  %loadMem_485423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485423 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485423)
  store %struct.Memory* %call_485423, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 485426	 Bytes: 4
  %loadMem_485426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485426 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485426)
  store %struct.Memory* %call_485426, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 48542a	 Bytes: 3
  %loadMem_48542a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48542a = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48542a)
  store %struct.Memory* %call_48542a, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 48542d	 Bytes: 3
  %loadMem_48542d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48542d = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48542d)
  store %struct.Memory* %call_48542d, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485430	 Bytes: 2
  %loadMem_485430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485430 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485430)
  store %struct.Memory* %call_485430, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485432	 Bytes: 1
  %loadMem_485432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485432 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485432)
  store %struct.Memory* %call_485432, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485433	 Bytes: 3
  %loadMem_485433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485433 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485433)
  store %struct.Memory* %call_485433, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485436	 Bytes: 3
  %loadMem_485436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485436 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485436)
  store %struct.Memory* %call_485436, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 485439	 Bytes: 4
  %loadMem_485439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485439 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485439)
  store %struct.Memory* %call_485439, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27c(%rbp)	 RIP: 48543d	 Bytes: 6
  %loadMem_48543d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48543d = call %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48543d)
  store %struct.Memory* %call_48543d, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 485443	 Bytes: 3
  %loadMem_485443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485443 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485443)
  store %struct.Memory* %call_485443, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485446	 Bytes: 1
  %loadMem_485446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485446 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485446)
  store %struct.Memory* %call_485446, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485447	 Bytes: 3
  %loadMem_485447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485447 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485447)
  store %struct.Memory* %call_485447, %struct.Memory** %MEMORY

  ; Code: movl -0x27c(%rbp), %r10d	 RIP: 48544a	 Bytes: 7
  %loadMem_48544a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48544a = call %struct.Memory* @routine_movl_MINUS0x27c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48544a)
  store %struct.Memory* %call_48544a, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 485451	 Bytes: 3
  %loadMem_485451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485451 = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485451)
  store %struct.Memory* %call_485451, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdi	 RIP: 485454	 Bytes: 3
  %loadMem_485454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485454 = call %struct.Memory* @routine_movslq__r10d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485454)
  store %struct.Memory* %call_485454, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %eax	 RIP: 485457	 Bytes: 6
  %loadMem_485457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485457 = call %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485457)
  store %struct.Memory* %call_485457, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rsi,%rdi,4)	 RIP: 48545d	 Bytes: 3
  %loadMem_48545d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48545d = call %struct.Memory* @routine_movl__eax____rsi__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48545d)
  store %struct.Memory* %call_48545d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 485460	 Bytes: 4
  %loadMem_485460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485460 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485460)
  store %struct.Memory* %call_485460, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 485464	 Bytes: 4
  %loadMem_485464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485464 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485464)
  store %struct.Memory* %call_485464, %struct.Memory** %MEMORY

  ; Code: movq -0x268(%rbp), %rdi	 RIP: 485468	 Bytes: 7
  %loadMem_485468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485468 = call %struct.Memory* @routine_movq_MINUS0x268__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485468)
  store %struct.Memory* %call_485468, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 48546f	 Bytes: 3
  %loadMem_48546f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48546f = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48546f)
  store %struct.Memory* %call_48546f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 485472	 Bytes: 3
  %loadMem_485472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485472 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485472)
  store %struct.Memory* %call_485472, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485475	 Bytes: 1
  %loadMem_485475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485475 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485475)
  store %struct.Memory* %call_485475, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485476	 Bytes: 3
  %loadMem_485476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485476 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485476)
  store %struct.Memory* %call_485476, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485479	 Bytes: 3
  %loadMem_485479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485479 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485479)
  store %struct.Memory* %call_485479, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 48547c	 Bytes: 4
  %loadMem_48547c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48547c = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48547c)
  store %struct.Memory* %call_48547c, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 485480	 Bytes: 3
  %loadMem_485480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485480 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485480)
  store %struct.Memory* %call_485480, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x280(%rbp)	 RIP: 485483	 Bytes: 6
  %loadMem_485483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485483 = call %struct.Memory* @routine_movl__edx__MINUS0x280__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485483)
  store %struct.Memory* %call_485483, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485489	 Bytes: 1
  %loadMem_485489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485489 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485489)
  store %struct.Memory* %call_485489, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 48548a	 Bytes: 3
  %loadMem_48548a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48548a = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48548a)
  store %struct.Memory* %call_48548a, %struct.Memory** %MEMORY

  ; Code: movl -0x280(%rbp), %r10d	 RIP: 48548d	 Bytes: 7
  %loadMem_48548d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48548d = call %struct.Memory* @routine_movl_MINUS0x280__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48548d)
  store %struct.Memory* %call_48548d, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 485494	 Bytes: 3
  %loadMem_485494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485494 = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485494)
  store %struct.Memory* %call_485494, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 485497	 Bytes: 3
  %loadMem_485497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485497 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485497)
  store %struct.Memory* %call_485497, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 48549a	 Bytes: 4
  %loadMem_48549a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48549a = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48549a)
  store %struct.Memory* %call_48549a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 48549e	 Bytes: 3
  %loadMem_48549e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48549e = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48549e)
  store %struct.Memory* %call_48549e, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 4854a1	 Bytes: 3
  %loadMem_4854a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854a1 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854a1)
  store %struct.Memory* %call_4854a1, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4854a4	 Bytes: 2
  %loadMem_4854a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854a4 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854a4)
  store %struct.Memory* %call_4854a4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4854a6	 Bytes: 1
  %loadMem_4854a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854a6 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854a6)
  store %struct.Memory* %call_4854a6, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4854a7	 Bytes: 3
  %loadMem_4854a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854a7 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854a7)
  store %struct.Memory* %call_4854a7, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4854aa	 Bytes: 3
  %loadMem_4854aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854aa = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854aa)
  store %struct.Memory* %call_4854aa, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 4854ad	 Bytes: 4
  %loadMem_4854ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854ad = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854ad)
  store %struct.Memory* %call_4854ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x284(%rbp)	 RIP: 4854b1	 Bytes: 6
  %loadMem_4854b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854b1 = call %struct.Memory* @routine_movl__eax__MINUS0x284__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854b1)
  store %struct.Memory* %call_4854b1, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4854b7	 Bytes: 3
  %loadMem_4854b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854b7 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854b7)
  store %struct.Memory* %call_4854b7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4854ba	 Bytes: 1
  %loadMem_4854ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854ba = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854ba)
  store %struct.Memory* %call_4854ba, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4854bb	 Bytes: 3
  %loadMem_4854bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854bb = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854bb)
  store %struct.Memory* %call_4854bb, %struct.Memory** %MEMORY

  ; Code: movl -0x284(%rbp), %r10d	 RIP: 4854be	 Bytes: 7
  %loadMem_4854be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854be = call %struct.Memory* @routine_movl_MINUS0x284__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854be)
  store %struct.Memory* %call_4854be, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 4854c5	 Bytes: 3
  %loadMem_4854c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854c5 = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854c5)
  store %struct.Memory* %call_4854c5, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 4854c8	 Bytes: 3
  %loadMem_4854c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854c8 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854c8)
  store %struct.Memory* %call_4854c8, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%rsi,4), %eax	 RIP: 4854cb	 Bytes: 3
  %loadMem_4854cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854cb = call %struct.Memory* @routine_movl___rdi__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854cb)
  store %struct.Memory* %call_4854cb, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4854ce	 Bytes: 4
  %loadMem_4854ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854ce = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854ce)
  store %struct.Memory* %call_4854ce, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4854d2	 Bytes: 4
  %loadMem_4854d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854d2 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854d2)
  store %struct.Memory* %call_4854d2, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 4854d6	 Bytes: 3
  %loadMem_4854d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854d6 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854d6)
  store %struct.Memory* %call_4854d6, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %r10d	 RIP: 4854d9	 Bytes: 4
  %loadMem_4854d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854d9 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854d9)
  store %struct.Memory* %call_4854d9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x288(%rbp)	 RIP: 4854dd	 Bytes: 6
  %loadMem_4854dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854dd = call %struct.Memory* @routine_movl__eax__MINUS0x288__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854dd)
  store %struct.Memory* %call_4854dd, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4854e3	 Bytes: 3
  %loadMem_4854e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854e3 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854e3)
  store %struct.Memory* %call_4854e3, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4854e6	 Bytes: 1
  %loadMem_4854e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854e6 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854e6)
  store %struct.Memory* %call_4854e6, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4854e7	 Bytes: 3
  %loadMem_4854e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854e7 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854e7)
  store %struct.Memory* %call_4854e7, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 4854ea	 Bytes: 3
  %loadMem_4854ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854ea = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854ea)
  store %struct.Memory* %call_4854ea, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 4854ed	 Bytes: 4
  %loadMem_4854ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854ed = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854ed)
  store %struct.Memory* %call_4854ed, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 4854f1	 Bytes: 3
  %loadMem_4854f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854f1 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854f1)
  store %struct.Memory* %call_4854f1, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x28c(%rbp)	 RIP: 4854f4	 Bytes: 6
  %loadMem_4854f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854f4 = call %struct.Memory* @routine_movl__edx__MINUS0x28c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854f4)
  store %struct.Memory* %call_4854f4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4854fa	 Bytes: 1
  %loadMem_4854fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854fa = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854fa)
  store %struct.Memory* %call_4854fa, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 4854fb	 Bytes: 3
  %loadMem_4854fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854fb = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854fb)
  store %struct.Memory* %call_4854fb, %struct.Memory** %MEMORY

  ; Code: movl -0x28c(%rbp), %r10d	 RIP: 4854fe	 Bytes: 7
  %loadMem_4854fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4854fe = call %struct.Memory* @routine_movl_MINUS0x28c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4854fe)
  store %struct.Memory* %call_4854fe, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r10d	 RIP: 485505	 Bytes: 3
  %loadMem_485505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485505 = call %struct.Memory* @routine_addl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485505)
  store %struct.Memory* %call_485505, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 485508	 Bytes: 3
  %loadMem_485508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485508 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485508)
  store %struct.Memory* %call_485508, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 48550b	 Bytes: 4
  %loadMem_48550b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48550b = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48550b)
  store %struct.Memory* %call_48550b, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 48550f	 Bytes: 3
  %loadMem_48550f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48550f = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48550f)
  store %struct.Memory* %call_48550f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485512	 Bytes: 3
  %loadMem_485512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485512 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485512)
  store %struct.Memory* %call_485512, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485515	 Bytes: 2
  %loadMem_485515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485515 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485515)
  store %struct.Memory* %call_485515, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485517	 Bytes: 1
  %loadMem_485517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485517 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485517)
  store %struct.Memory* %call_485517, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 485518	 Bytes: 3
  %loadMem_485518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485518 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485518)
  store %struct.Memory* %call_485518, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 48551b	 Bytes: 3
  %loadMem_48551b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48551b = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48551b)
  store %struct.Memory* %call_48551b, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %r10d	 RIP: 48551e	 Bytes: 4
  %loadMem_48551e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48551e = call %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48551e)
  store %struct.Memory* %call_48551e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x290(%rbp)	 RIP: 485522	 Bytes: 6
  %loadMem_485522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485522 = call %struct.Memory* @routine_movl__eax__MINUS0x290__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485522)
  store %struct.Memory* %call_485522, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %eax	 RIP: 485528	 Bytes: 3
  %loadMem_485528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485528 = call %struct.Memory* @routine_movl__r10d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485528)
  store %struct.Memory* %call_485528, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 48552b	 Bytes: 1
  %loadMem_48552b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48552b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48552b)
  store %struct.Memory* %call_48552b, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 48552c	 Bytes: 3
  %loadMem_48552c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48552c = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48552c)
  store %struct.Memory* %call_48552c, %struct.Memory** %MEMORY

  ; Code: movl -0x290(%rbp), %r10d	 RIP: 48552f	 Bytes: 7
  %loadMem_48552f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48552f = call %struct.Memory* @routine_movl_MINUS0x290__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48552f)
  store %struct.Memory* %call_48552f, %struct.Memory** %MEMORY

  ; Code: addl %eax, %r10d	 RIP: 485536	 Bytes: 3
  %loadMem_485536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485536 = call %struct.Memory* @routine_addl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485536)
  store %struct.Memory* %call_485536, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rsi	 RIP: 485539	 Bytes: 3
  %loadMem_485539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485539 = call %struct.Memory* @routine_movslq__r10d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485539)
  store %struct.Memory* %call_485539, %struct.Memory** %MEMORY

  ; Code: movl -0x288(%rbp), %eax	 RIP: 48553c	 Bytes: 6
  %loadMem_48553c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48553c = call %struct.Memory* @routine_movl_MINUS0x288__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48553c)
  store %struct.Memory* %call_48553c, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rsi,4)	 RIP: 485542	 Bytes: 3
  %loadMem_485542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485542 = call %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485542)
  store %struct.Memory* %call_485542, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 485545	 Bytes: 7
  %loadMem_485545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485545 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485545)
  store %struct.Memory* %call_485545, %struct.Memory** %MEMORY

  ; Code: .L_48554c:	 RIP: 48554c	 Bytes: 0
  br label %block_.L_48554c
block_.L_48554c:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 48554c	 Bytes: 4
  %loadMem_48554c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48554c = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48554c)
  store %struct.Memory* %call_48554c, %struct.Memory** %MEMORY

  ; Code: jge .L_4855e3	 RIP: 485550	 Bytes: 6
  %loadMem_485550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485550 = call %struct.Memory* @routine_jge_.L_4855e3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485550, i8* %BRANCH_TAKEN, i64 147, i64 6, i64 6)
  store %struct.Memory* %call_485550, %struct.Memory** %MEMORY

  %loadBr_485550 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485550 = icmp eq i8 %loadBr_485550, 1
  br i1 %cmpBr_485550, label %block_.L_4855e3, label %block_485556

block_485556:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 485556	 Bytes: 7
  %loadMem_485556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485556 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485556)
  store %struct.Memory* %call_485556, %struct.Memory** %MEMORY

  ; Code: .L_48555d:	 RIP: 48555d	 Bytes: 0
  br label %block_.L_48555d
block_.L_48555d:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 48555d	 Bytes: 4
  %loadMem_48555d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48555d = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48555d)
  store %struct.Memory* %call_48555d, %struct.Memory** %MEMORY

  ; Code: jge .L_4855d0	 RIP: 485561	 Bytes: 6
  %loadMem_485561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485561 = call %struct.Memory* @routine_jge_.L_4855d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485561, i8* %BRANCH_TAKEN, i64 111, i64 6, i64 6)
  store %struct.Memory* %call_485561, %struct.Memory** %MEMORY

  %loadBr_485561 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485561 = icmp eq i8 %loadBr_485561, 1
  br i1 %cmpBr_485561, label %block_.L_4855d0, label %block_485567

block_485567:
  ; Code: leaq -0x1f0(%rbp), %rax	 RIP: 485567	 Bytes: 7
  %loadMem_485567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485567 = call %struct.Memory* @routine_leaq_MINUS0x1f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485567)
  store %struct.Memory* %call_485567, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 48556e	 Bytes: 8
  %loadMem_48556e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48556e = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48556e)
  store %struct.Memory* %call_48556e, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rcx), %rcx	 RIP: 485576	 Bytes: 7
  %loadMem_485576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485576 = call %struct.Memory* @routine_movq_0x1940__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485576)
  store %struct.Memory* %call_485576, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 48557d	 Bytes: 4
  %loadMem_48557d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48557d = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48557d)
  store %struct.Memory* %call_48557d, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 485581	 Bytes: 4
  %loadMem_485581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485581 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485581)
  store %struct.Memory* %call_485581, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %esi	 RIP: 485585	 Bytes: 6
  %loadMem_485585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485585 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485585)
  store %struct.Memory* %call_485585, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %esi	 RIP: 48558b	 Bytes: 3
  %loadMem_48558b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48558b = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48558b)
  store %struct.Memory* %call_48558b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 48558e	 Bytes: 3
  %loadMem_48558e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48558e = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48558e)
  store %struct.Memory* %call_48558e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 485591	 Bytes: 4
  %loadMem_485591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485591 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485591)
  store %struct.Memory* %call_485591, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %esi	 RIP: 485595	 Bytes: 6
  %loadMem_485595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485595 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485595)
  store %struct.Memory* %call_485595, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %esi	 RIP: 48559b	 Bytes: 3
  %loadMem_48559b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48559b = call %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48559b)
  store %struct.Memory* %call_48559b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 48559e	 Bytes: 3
  %loadMem_48559e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48559e = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48559e)
  store %struct.Memory* %call_48559e, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4855a1	 Bytes: 4
  %loadMem_4855a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855a1 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855a1)
  store %struct.Memory* %call_4855a1, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4855a5	 Bytes: 4
  %loadMem_4855a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855a5 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855a5)
  store %struct.Memory* %call_4855a5, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4855a9	 Bytes: 4
  %loadMem_4855a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855a9 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855a9)
  store %struct.Memory* %call_4855a9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4855ad	 Bytes: 3
  %loadMem_4855ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855ad = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855ad)
  store %struct.Memory* %call_4855ad, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 4855b0	 Bytes: 4
  %loadMem_4855b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855b0 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855b0)
  store %struct.Memory* %call_4855b0, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4855b4	 Bytes: 4
  %loadMem_4855b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855b4 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855b4)
  store %struct.Memory* %call_4855b4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4855b8	 Bytes: 3
  %loadMem_4855b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855b8 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855b8)
  store %struct.Memory* %call_4855b8, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 4855bb	 Bytes: 4
  %loadMem_4855bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855bb = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855bb)
  store %struct.Memory* %call_4855bb, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4855bf	 Bytes: 3
  %loadMem_4855bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855bf = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855bf)
  store %struct.Memory* %call_4855bf, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4855c2	 Bytes: 3
  %loadMem_4855c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855c2 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855c2)
  store %struct.Memory* %call_4855c2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4855c5	 Bytes: 3
  %loadMem_4855c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855c5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855c5)
  store %struct.Memory* %call_4855c5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4855c8	 Bytes: 3
  %loadMem_4855c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855c8 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855c8)
  store %struct.Memory* %call_4855c8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48555d	 RIP: 4855cb	 Bytes: 5
  %loadMem_4855cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855cb = call %struct.Memory* @routine_jmpq_.L_48555d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855cb, i64 -110, i64 5)
  store %struct.Memory* %call_4855cb, %struct.Memory** %MEMORY

  br label %block_.L_48555d

  ; Code: .L_4855d0:	 RIP: 4855d0	 Bytes: 0
block_.L_4855d0:

  ; Code: jmpq .L_4855d5	 RIP: 4855d0	 Bytes: 5
  %loadMem_4855d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855d0 = call %struct.Memory* @routine_jmpq_.L_4855d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855d0, i64 5, i64 5)
  store %struct.Memory* %call_4855d0, %struct.Memory** %MEMORY

  br label %block_.L_4855d5

  ; Code: .L_4855d5:	 RIP: 4855d5	 Bytes: 0
block_.L_4855d5:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4855d5	 Bytes: 3
  %loadMem_4855d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855d5 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855d5)
  store %struct.Memory* %call_4855d5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4855d8	 Bytes: 3
  %loadMem_4855d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855d8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855d8)
  store %struct.Memory* %call_4855d8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4855db	 Bytes: 3
  %loadMem_4855db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855db = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855db)
  store %struct.Memory* %call_4855db, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48554c	 RIP: 4855de	 Bytes: 5
  %loadMem_4855de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855de = call %struct.Memory* @routine_jmpq_.L_48554c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855de, i64 -146, i64 5)
  store %struct.Memory* %call_4855de, %struct.Memory** %MEMORY

  br label %block_.L_48554c

  ; Code: .L_4855e3:	 RIP: 4855e3	 Bytes: 0
block_.L_4855e3:

  ; Code: jmpq .L_4855e8	 RIP: 4855e3	 Bytes: 5
  %loadMem_4855e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855e3 = call %struct.Memory* @routine_jmpq_.L_4855e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855e3, i64 5, i64 5)
  store %struct.Memory* %call_4855e3, %struct.Memory** %MEMORY

  br label %block_.L_4855e8

  ; Code: .L_4855e8:	 RIP: 4855e8	 Bytes: 0
block_.L_4855e8:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4855e8	 Bytes: 3
  %loadMem_4855e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855e8 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855e8)
  store %struct.Memory* %call_4855e8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4855eb	 Bytes: 3
  %loadMem_4855eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855eb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855eb)
  store %struct.Memory* %call_4855eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4855ee	 Bytes: 3
  %loadMem_4855ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855ee = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855ee)
  store %struct.Memory* %call_4855ee, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485332	 RIP: 4855f1	 Bytes: 5
  %loadMem_4855f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855f1 = call %struct.Memory* @routine_jmpq_.L_485332(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855f1, i64 -703, i64 5)
  store %struct.Memory* %call_4855f1, %struct.Memory** %MEMORY

  br label %block_.L_485332

  ; Code: .L_4855f6:	 RIP: 4855f6	 Bytes: 0
block_.L_4855f6:

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4855f6	 Bytes: 7
  %loadMem_4855f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855f6 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855f6)
  store %struct.Memory* %call_4855f6, %struct.Memory** %MEMORY

  ; Code: .L_4855fd:	 RIP: 4855fd	 Bytes: 0
  br label %block_.L_4855fd
block_.L_4855fd:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 4855fd	 Bytes: 4
  %loadMem_4855fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4855fd = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4855fd)
  store %struct.Memory* %call_4855fd, %struct.Memory** %MEMORY

  ; Code: jge .L_485681	 RIP: 485601	 Bytes: 6
  %loadMem_485601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485601 = call %struct.Memory* @routine_jge_.L_485681(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485601, i8* %BRANCH_TAKEN, i64 128, i64 6, i64 6)
  store %struct.Memory* %call_485601, %struct.Memory** %MEMORY

  %loadBr_485601 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485601 = icmp eq i8 %loadBr_485601, 1
  br i1 %cmpBr_485601, label %block_.L_485681, label %block_485607

block_485607:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 485607	 Bytes: 7
  %loadMem_485607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485607 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485607)
  store %struct.Memory* %call_485607, %struct.Memory** %MEMORY

  ; Code: .L_48560e:	 RIP: 48560e	 Bytes: 0
  br label %block_.L_48560e
block_.L_48560e:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 48560e	 Bytes: 4
  %loadMem_48560e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48560e = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48560e)
  store %struct.Memory* %call_48560e, %struct.Memory** %MEMORY

  ; Code: jge .L_48566e	 RIP: 485612	 Bytes: 6
  %loadMem_485612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485612 = call %struct.Memory* @routine_jge_.L_48566e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485612, i8* %BRANCH_TAKEN, i64 92, i64 6, i64 6)
  store %struct.Memory* %call_485612, %struct.Memory** %MEMORY

  %loadBr_485612 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485612 = icmp eq i8 %loadBr_485612, 1
  br i1 %cmpBr_485612, label %block_.L_48566e, label %block_485618

block_485618:
  ; Code: leaq -0x90(%rbp), %rax	 RIP: 485618	 Bytes: 7
  %loadMem_485618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485618 = call %struct.Memory* @routine_leaq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485618)
  store %struct.Memory* %call_485618, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rcx	 RIP: 48561f	 Bytes: 8
  %loadMem_48561f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48561f = call %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48561f)
  store %struct.Memory* %call_48561f, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rcx), %rcx	 RIP: 485627	 Bytes: 7
  %loadMem_485627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485627 = call %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485627)
  store %struct.Memory* %call_485627, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edx	 RIP: 48562e	 Bytes: 6
  %loadMem_48562e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48562e = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48562e)
  store %struct.Memory* %call_48562e, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 485634	 Bytes: 3
  %loadMem_485634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485634 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485634)
  store %struct.Memory* %call_485634, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 485637	 Bytes: 3
  %loadMem_485637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485637 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485637)
  store %struct.Memory* %call_485637, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 48563a	 Bytes: 4
  %loadMem_48563a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48563a = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48563a)
  store %struct.Memory* %call_48563a, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %edx	 RIP: 48563e	 Bytes: 6
  %loadMem_48563e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48563e = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48563e)
  store %struct.Memory* %call_48563e, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 485644	 Bytes: 3
  %loadMem_485644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485644 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485644)
  store %struct.Memory* %call_485644, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 485647	 Bytes: 3
  %loadMem_485647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485647 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485647)
  store %struct.Memory* %call_485647, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rsi,2), %edx	 RIP: 48564a	 Bytes: 4
  %loadMem_48564a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48564a = call %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48564a)
  store %struct.Memory* %call_48564a, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 48564e	 Bytes: 4
  %loadMem_48564e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48564e = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48564e)
  store %struct.Memory* %call_48564e, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 485652	 Bytes: 4
  %loadMem_485652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485652 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485652)
  store %struct.Memory* %call_485652, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485656	 Bytes: 3
  %loadMem_485656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485656 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485656)
  store %struct.Memory* %call_485656, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 485659	 Bytes: 4
  %loadMem_485659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485659 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485659)
  store %struct.Memory* %call_485659, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 48565d	 Bytes: 3
  %loadMem_48565d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48565d = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48565d)
  store %struct.Memory* %call_48565d, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 485660	 Bytes: 3
  %loadMem_485660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485660 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485660)
  store %struct.Memory* %call_485660, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485663	 Bytes: 3
  %loadMem_485663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485663 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485663)
  store %struct.Memory* %call_485663, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 485666	 Bytes: 3
  %loadMem_485666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485666 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485666)
  store %struct.Memory* %call_485666, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48560e	 RIP: 485669	 Bytes: 5
  %loadMem_485669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485669 = call %struct.Memory* @routine_jmpq_.L_48560e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485669, i64 -91, i64 5)
  store %struct.Memory* %call_485669, %struct.Memory** %MEMORY

  br label %block_.L_48560e

  ; Code: .L_48566e:	 RIP: 48566e	 Bytes: 0
block_.L_48566e:

  ; Code: jmpq .L_485673	 RIP: 48566e	 Bytes: 5
  %loadMem_48566e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48566e = call %struct.Memory* @routine_jmpq_.L_485673(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48566e, i64 5, i64 5)
  store %struct.Memory* %call_48566e, %struct.Memory** %MEMORY

  br label %block_.L_485673

  ; Code: .L_485673:	 RIP: 485673	 Bytes: 0
block_.L_485673:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 485673	 Bytes: 3
  %loadMem_485673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485673 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485673)
  store %struct.Memory* %call_485673, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485676	 Bytes: 3
  %loadMem_485676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485676 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485676)
  store %struct.Memory* %call_485676, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 485679	 Bytes: 3
  %loadMem_485679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485679 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485679)
  store %struct.Memory* %call_485679, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4855fd	 RIP: 48567c	 Bytes: 5
  %loadMem_48567c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48567c = call %struct.Memory* @routine_jmpq_.L_4855fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48567c, i64 -127, i64 5)
  store %struct.Memory* %call_48567c, %struct.Memory** %MEMORY

  br label %block_.L_4855fd

  ; Code: .L_485681:	 RIP: 485681	 Bytes: 0
block_.L_485681:

  ; Code: movl -0x48(%rbp), %eax	 RIP: 485681	 Bytes: 3
  %loadMem_485681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485681 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485681)
  store %struct.Memory* %call_485681, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 485684	 Bytes: 3
  %loadMem_485684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485684 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485684)
  store %struct.Memory* %call_485684, %struct.Memory** %MEMORY

  ; Code: movsd -0xd8(%rbp), %xmm0	 RIP: 485687	 Bytes: 8
  %loadMem_485687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485687 = call %struct.Memory* @routine_movsd_MINUS0xd8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485687)
  store %struct.Memory* %call_485687, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x100(%rbp)	 RIP: 48568f	 Bytes: 8
  %loadMem_48568f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48568f = call %struct.Memory* @routine_movsd__xmm0__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48568f)
  store %struct.Memory* %call_48568f, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %eax	 RIP: 485697	 Bytes: 3
  %loadMem_485697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485697 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485697)
  store %struct.Memory* %call_485697, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x28(%rbp)	 RIP: 48569a	 Bytes: 3
  %loadMem_48569a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48569a = call %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48569a)
  store %struct.Memory* %call_48569a, %struct.Memory** %MEMORY

  ; Code: .L_48569d:	 RIP: 48569d	 Bytes: 0
  br label %block_.L_48569d
block_.L_48569d:

  ; Code: jmpq .L_4856a2	 RIP: 48569d	 Bytes: 5
  %loadMem_48569d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48569d = call %struct.Memory* @routine_jmpq_.L_4856a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48569d, i64 5, i64 5)
  store %struct.Memory* %call_48569d, %struct.Memory** %MEMORY

  br label %block_.L_4856a2

  ; Code: .L_4856a2:	 RIP: 4856a2	 Bytes: 0
block_.L_4856a2:

  ; Code: jmpq .L_4856a7	 RIP: 4856a2	 Bytes: 5
  %loadMem_4856a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856a2 = call %struct.Memory* @routine_jmpq_.L_4856a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856a2, i64 5, i64 5)
  store %struct.Memory* %call_4856a2, %struct.Memory** %MEMORY

  br label %block_.L_4856a7

  ; Code: .L_4856a7:	 RIP: 4856a7	 Bytes: 0
block_.L_4856a7:

  ; Code: jmpq .L_4856ac	 RIP: 4856a7	 Bytes: 5
  %loadMem_4856a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856a7 = call %struct.Memory* @routine_jmpq_.L_4856ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856a7, i64 5, i64 5)
  store %struct.Memory* %call_4856a7, %struct.Memory** %MEMORY

  br label %block_.L_4856ac

  ; Code: .L_4856ac:	 RIP: 4856ac	 Bytes: 0
block_.L_4856ac:

  ; Code: jmpq .L_4856b1	 RIP: 4856ac	 Bytes: 5
  %loadMem_4856ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856ac = call %struct.Memory* @routine_jmpq_.L_4856b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856ac, i64 5, i64 5)
  store %struct.Memory* %call_4856ac, %struct.Memory** %MEMORY

  br label %block_.L_4856b1

  ; Code: .L_4856b1:	 RIP: 4856b1	 Bytes: 0
block_.L_4856b1:

  ; Code: movl -0x24(%rbp), %eax	 RIP: 4856b1	 Bytes: 3
  %loadMem_4856b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856b1 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856b1)
  store %struct.Memory* %call_4856b1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4856b4	 Bytes: 3
  %loadMem_4856b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856b4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856b4)
  store %struct.Memory* %call_4856b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x24(%rbp)	 RIP: 4856b7	 Bytes: 3
  %loadMem_4856b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856b7 = call %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856b7)
  store %struct.Memory* %call_4856b7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_483d5b	 RIP: 4856ba	 Bytes: 5
  %loadMem_4856ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856ba = call %struct.Memory* @routine_jmpq_.L_483d5b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856ba, i64 -6495, i64 5)
  store %struct.Memory* %call_4856ba, %struct.Memory** %MEMORY

  br label %block_.L_483d5b

  ; Code: .L_4856bf:	 RIP: 4856bf	 Bytes: 0
block_.L_4856bf:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 4856bf	 Bytes: 3
  %loadMem_4856bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856bf = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856bf)
  store %struct.Memory* %call_4856bf, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4856c2	 Bytes: 8
  %loadMem_4856c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856c2 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856c2)
  store %struct.Memory* %call_4856c2, %struct.Memory** %MEMORY

  ; Code: movq 0x68(%rcx), %rcx	 RIP: 4856ca	 Bytes: 4
  %loadMem_4856ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856ca = call %struct.Memory* @routine_movq_0x68__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856ca)
  store %struct.Memory* %call_4856ca, %struct.Memory** %MEMORY

  ; Code: movslq -0xf4(%rbp), %rdx	 RIP: 4856ce	 Bytes: 7
  %loadMem_4856ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856ce = call %struct.Memory* @routine_movslq_MINUS0xf4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856ce)
  store %struct.Memory* %call_4856ce, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 4856d5	 Bytes: 4
  %loadMem_4856d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856d5 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856d5)
  store %struct.Memory* %call_4856d5, %struct.Memory** %MEMORY

  ; Code: movslq -0xf8(%rbp), %rdx	 RIP: 4856d9	 Bytes: 7
  %loadMem_4856d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856d9 = call %struct.Memory* @routine_movslq_MINUS0xf8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856d9)
  store %struct.Memory* %call_4856d9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 4856e0	 Bytes: 3
  %loadMem_4856e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856e0 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856e0)
  store %struct.Memory* %call_4856e0, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %eax	 RIP: 4856e3	 Bytes: 6
  %loadMem_4856e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856e3 = call %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856e3)
  store %struct.Memory* %call_4856e3, %struct.Memory** %MEMORY

  ; Code: cmpl -0x28(%rbp), %eax	 RIP: 4856e9	 Bytes: 3
  %loadMem_4856e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856e9 = call %struct.Memory* @routine_cmpl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856e9)
  store %struct.Memory* %call_4856e9, %struct.Memory** %MEMORY

  ; Code: jne .L_485702	 RIP: 4856ec	 Bytes: 6
  %loadMem_4856ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856ec = call %struct.Memory* @routine_jne_.L_485702(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856ec, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_4856ec, %struct.Memory** %MEMORY

  %loadBr_4856ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4856ec = icmp eq i8 %loadBr_4856ec, 1
  br i1 %cmpBr_4856ec, label %block_.L_485702, label %block_4856f2

block_4856f2:
  ; Code: movl $0xffffffff, %eax	 RIP: 4856f2	 Bytes: 5
  %loadMem_4856f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856f2 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856f2)
  store %struct.Memory* %call_4856f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x294(%rbp)	 RIP: 4856f7	 Bytes: 6
  %loadMem_4856f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856f7 = call %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856f7)
  store %struct.Memory* %call_4856f7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485737	 RIP: 4856fd	 Bytes: 5
  %loadMem_4856fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4856fd = call %struct.Memory* @routine_jmpq_.L_485737(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4856fd, i64 58, i64 5)
  store %struct.Memory* %call_4856fd, %struct.Memory** %MEMORY

  br label %block_.L_485737

  ; Code: .L_485702:	 RIP: 485702	 Bytes: 0
block_.L_485702:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 485702	 Bytes: 3
  %loadMem_485702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485702 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485702)
  store %struct.Memory* %call_485702, %struct.Memory** %MEMORY

  ; Code: cmpl -0x120(%rbp), %eax	 RIP: 485705	 Bytes: 6
  %loadMem_485705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485705 = call %struct.Memory* @routine_cmpl_MINUS0x120__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485705)
  store %struct.Memory* %call_485705, %struct.Memory** %MEMORY

  ; Code: jge .L_48571f	 RIP: 48570b	 Bytes: 6
  %loadMem_48570b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48570b = call %struct.Memory* @routine_jge_.L_48571f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48570b, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_48570b, %struct.Memory** %MEMORY

  %loadBr_48570b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48570b = icmp eq i8 %loadBr_48570b, 1
  br i1 %cmpBr_48570b, label %block_.L_48571f, label %block_485711

block_485711:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 485711	 Bytes: 3
  %loadMem_485711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485711 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485711)
  store %struct.Memory* %call_485711, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x298(%rbp)	 RIP: 485714	 Bytes: 6
  %loadMem_485714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485714 = call %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485714)
  store %struct.Memory* %call_485714, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48572b	 RIP: 48571a	 Bytes: 5
  %loadMem_48571a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48571a = call %struct.Memory* @routine_jmpq_.L_48572b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48571a, i64 17, i64 5)
  store %struct.Memory* %call_48571a, %struct.Memory** %MEMORY

  br label %block_.L_48572b

  ; Code: .L_48571f:	 RIP: 48571f	 Bytes: 0
block_.L_48571f:

  ; Code: movl -0x28(%rbp), %eax	 RIP: 48571f	 Bytes: 3
  %loadMem_48571f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48571f = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48571f)
  store %struct.Memory* %call_48571f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 485722	 Bytes: 3
  %loadMem_485722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485722 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485722)
  store %struct.Memory* %call_485722, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x298(%rbp)	 RIP: 485725	 Bytes: 6
  %loadMem_485725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485725 = call %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485725)
  store %struct.Memory* %call_485725, %struct.Memory** %MEMORY

  ; Code: .L_48572b:	 RIP: 48572b	 Bytes: 0
  br label %block_.L_48572b
block_.L_48572b:

  ; Code: movl -0x298(%rbp), %eax	 RIP: 48572b	 Bytes: 6
  %loadMem_48572b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48572b = call %struct.Memory* @routine_movl_MINUS0x298__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48572b)
  store %struct.Memory* %call_48572b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x294(%rbp)	 RIP: 485731	 Bytes: 6
  %loadMem_485731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485731 = call %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485731)
  store %struct.Memory* %call_485731, %struct.Memory** %MEMORY

  ; Code: .L_485737:	 RIP: 485737	 Bytes: 0
  br label %block_.L_485737
block_.L_485737:

  ; Code: movl -0x294(%rbp), %eax	 RIP: 485737	 Bytes: 6
  %loadMem_485737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485737 = call %struct.Memory* @routine_movl_MINUS0x294__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485737)
  store %struct.Memory* %call_485737, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 48573d	 Bytes: 8
  %loadMem_48573d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48573d = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48573d)
  store %struct.Memory* %call_48573d, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rcx), %rcx	 RIP: 485745	 Bytes: 7
  %loadMem_485745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485745 = call %struct.Memory* @routine_movq_0x3758__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485745)
  store %struct.Memory* %call_485745, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 48574c	 Bytes: 8
  %loadMem_48574c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48574c = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48574c)
  store %struct.Memory* %call_48574c, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rdx), %rdx	 RIP: 485754	 Bytes: 4
  %loadMem_485754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485754 = call %struct.Memory* @routine_movslq_0xc__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485754)
  store %struct.Memory* %call_485754, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rdx, %rdx	 RIP: 485758	 Bytes: 7
  %loadMem_485758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485758 = call %struct.Memory* @routine_imulq__0x278___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485758)
  store %struct.Memory* %call_485758, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 48575f	 Bytes: 3
  %loadMem_48575f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48575f = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48575f)
  store %struct.Memory* %call_48575f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 485762	 Bytes: 3
  %loadMem_485762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485762 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485762)
  store %struct.Memory* %call_485762, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %esi	 RIP: 485765	 Bytes: 3
  %loadMem_485765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485765 = call %struct.Memory* @routine_shll__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485765)
  store %struct.Memory* %call_485765, %struct.Memory** %MEMORY

  ; Code: addl -0x10(%rbp), %esi	 RIP: 485768	 Bytes: 3
  %loadMem_485768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485768 = call %struct.Memory* @routine_addl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485768)
  store %struct.Memory* %call_485768, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 48576b	 Bytes: 3
  %loadMem_48576b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48576b = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48576b)
  store %struct.Memory* %call_48576b, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x14c(%rcx,%rdx,4)	 RIP: 48576e	 Bytes: 7
  %loadMem_48576e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48576e = call %struct.Memory* @routine_movl__eax__0x14c__rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48576e)
  store %struct.Memory* %call_48576e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 485775	 Bytes: 8
  %loadMem_485775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485775 = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485775)
  store %struct.Memory* %call_485775, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x9a0(%rcx)	 RIP: 48577d	 Bytes: 7
  %loadMem_48577d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48577d = call %struct.Memory* @routine_cmpl__0x0__0x9a0__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48577d)
  store %struct.Memory* %call_48577d, %struct.Memory** %MEMORY

  ; Code: jne .L_48670b	 RIP: 485784	 Bytes: 6
  %loadMem_485784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485784 = call %struct.Memory* @routine_jne_.L_48670b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485784, i8* %BRANCH_TAKEN, i64 3975, i64 6, i64 6)
  store %struct.Memory* %call_485784, %struct.Memory** %MEMORY

  %loadBr_485784 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485784 = icmp eq i8 %loadBr_485784, 1
  br i1 %cmpBr_485784, label %block_.L_48670b, label %block_48578a

block_48578a:
  ; Code: movq 0x6cb900, %rax	 RIP: 48578a	 Bytes: 8
  %loadMem_48578a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48578a = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48578a)
  store %struct.Memory* %call_48578a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 485792	 Bytes: 7
  %loadMem_485792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485792 = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485792)
  store %struct.Memory* %call_485792, %struct.Memory** %MEMORY

  ; Code: jne .L_4858d7	 RIP: 485799	 Bytes: 6
  %loadMem_485799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485799 = call %struct.Memory* @routine_jne_.L_4858d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485799, i8* %BRANCH_TAKEN, i64 318, i64 6, i64 6)
  store %struct.Memory* %call_485799, %struct.Memory** %MEMORY

  %loadBr_485799 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485799 = icmp eq i8 %loadBr_485799, 1
  br i1 %cmpBr_485799, label %block_.L_4858d7, label %block_48579f

block_48579f:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 48579f	 Bytes: 7
  %loadMem_48579f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48579f = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48579f)
  store %struct.Memory* %call_48579f, %struct.Memory** %MEMORY

  ; Code: .L_4857a6:	 RIP: 4857a6	 Bytes: 0
  br label %block_.L_4857a6
block_.L_4857a6:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4857a6	 Bytes: 4
  %loadMem_4857a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857a6 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857a6)
  store %struct.Memory* %call_4857a6, %struct.Memory** %MEMORY

  ; Code: jge .L_4858b5	 RIP: 4857aa	 Bytes: 6
  %loadMem_4857aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857aa = call %struct.Memory* @routine_jge_.L_4858b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857aa, i8* %BRANCH_TAKEN, i64 267, i64 6, i64 6)
  store %struct.Memory* %call_4857aa, %struct.Memory** %MEMORY

  %loadBr_4857aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4857aa = icmp eq i8 %loadBr_4857aa, 1
  br i1 %cmpBr_4857aa, label %block_.L_4858b5, label %block_4857b0

block_4857b0:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4857b0	 Bytes: 7
  %loadMem_4857b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857b0 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857b0)
  store %struct.Memory* %call_4857b0, %struct.Memory** %MEMORY

  ; Code: .L_4857b7:	 RIP: 4857b7	 Bytes: 0
  br label %block_.L_4857b7
block_.L_4857b7:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4857b7	 Bytes: 4
  %loadMem_4857b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857b7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857b7)
  store %struct.Memory* %call_4857b7, %struct.Memory** %MEMORY

  ; Code: jge .L_4858a2	 RIP: 4857bb	 Bytes: 6
  %loadMem_4857bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857bb = call %struct.Memory* @routine_jge_.L_4858a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857bb, i8* %BRANCH_TAKEN, i64 231, i64 6, i64 6)
  store %struct.Memory* %call_4857bb, %struct.Memory** %MEMORY

  %loadBr_4857bb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4857bb = icmp eq i8 %loadBr_4857bb, 1
  br i1 %cmpBr_4857bb, label %block_.L_4858a2, label %block_4857c1

block_4857c1:
  ; Code: movq 0x6cb900, %rax	 RIP: 4857c1	 Bytes: 8
  %loadMem_4857c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857c1 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857c1)
  store %struct.Memory* %call_4857c1, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rax	 RIP: 4857c9	 Bytes: 6
  %loadMem_4857c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857c9 = call %struct.Memory* @routine_addq__0xb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857c9)
  store %struct.Memory* %call_4857c9, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 4857cf	 Bytes: 4
  %loadMem_4857cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857cf = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857cf)
  store %struct.Memory* %call_4857cf, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rcx	 RIP: 4857d3	 Bytes: 4
  %loadMem_4857d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857d3 = call %struct.Memory* @routine_shlq__0x9___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857d3)
  store %struct.Memory* %call_4857d3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4857d7	 Bytes: 3
  %loadMem_4857d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857d7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857d7)
  store %struct.Memory* %call_4857d7, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4857da	 Bytes: 4
  %loadMem_4857da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857da = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857da)
  store %struct.Memory* %call_4857da, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4857de	 Bytes: 4
  %loadMem_4857de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857de = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857de)
  store %struct.Memory* %call_4857de, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4857e2	 Bytes: 3
  %loadMem_4857e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857e2 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857e2)
  store %struct.Memory* %call_4857e2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4857e5	 Bytes: 4
  %loadMem_4857e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857e5 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857e5)
  store %struct.Memory* %call_4857e5, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %dx	 RIP: 4857e9	 Bytes: 4
  %loadMem_4857e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857e9 = call %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857e9)
  store %struct.Memory* %call_4857e9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4857ed	 Bytes: 8
  %loadMem_4857ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857ed = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857ed)
  store %struct.Memory* %call_4857ed, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rax	 RIP: 4857f5	 Bytes: 6
  %loadMem_4857f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857f5 = call %struct.Memory* @routine_addq__0x3138___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857f5)
  store %struct.Memory* %call_4857f5, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 4857fb	 Bytes: 6
  %loadMem_4857fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4857fb = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4857fb)
  store %struct.Memory* %call_4857fb, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 485801	 Bytes: 3
  %loadMem_485801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485801 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485801)
  store %struct.Memory* %call_485801, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 485804	 Bytes: 3
  %loadMem_485804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485804 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485804)
  store %struct.Memory* %call_485804, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 485807	 Bytes: 4
  %loadMem_485807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485807 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485807)
  store %struct.Memory* %call_485807, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48580b	 Bytes: 3
  %loadMem_48580b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48580b = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48580b)
  store %struct.Memory* %call_48580b, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 48580e	 Bytes: 6
  %loadMem_48580e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48580e = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48580e)
  store %struct.Memory* %call_48580e, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 485814	 Bytes: 3
  %loadMem_485814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485814 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485814)
  store %struct.Memory* %call_485814, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 485817	 Bytes: 3
  %loadMem_485817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485817 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485817)
  store %struct.Memory* %call_485817, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rax,%rcx,2)	 RIP: 48581a	 Bytes: 4
  %loadMem_48581a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48581a = call %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48581a)
  store %struct.Memory* %call_48581a, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rax	 RIP: 48581e	 Bytes: 8
  %loadMem_48581e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48581e = call %struct.Memory* @routine_movq_0x726418___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48581e)
  store %struct.Memory* %call_48581e, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %esi	 RIP: 485826	 Bytes: 6
  %loadMem_485826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485826 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485826)
  store %struct.Memory* %call_485826, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 48582c	 Bytes: 3
  %loadMem_48582c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48582c = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48582c)
  store %struct.Memory* %call_48582c, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 48582f	 Bytes: 3
  %loadMem_48582f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48582f = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48582f)
  store %struct.Memory* %call_48582f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 485832	 Bytes: 4
  %loadMem_485832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485832 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485832)
  store %struct.Memory* %call_485832, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %esi	 RIP: 485836	 Bytes: 6
  %loadMem_485836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485836 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485836)
  store %struct.Memory* %call_485836, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 48583c	 Bytes: 3
  %loadMem_48583c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48583c = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48583c)
  store %struct.Memory* %call_48583c, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 48583f	 Bytes: 3
  %loadMem_48583f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48583f = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48583f)
  store %struct.Memory* %call_48583f, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %esi	 RIP: 485842	 Bytes: 4
  %loadMem_485842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485842 = call %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485842)
  store %struct.Memory* %call_485842, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 485846	 Bytes: 8
  %loadMem_485846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485846 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485846)
  store %struct.Memory* %call_485846, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rax	 RIP: 48584e	 Bytes: 6
  %loadMem_48584e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48584e = call %struct.Memory* @routine_addq__0xb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48584e)
  store %struct.Memory* %call_48584e, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 485854	 Bytes: 4
  %loadMem_485854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485854 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485854)
  store %struct.Memory* %call_485854, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rcx	 RIP: 485858	 Bytes: 4
  %loadMem_485858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485858 = call %struct.Memory* @routine_shlq__0x9___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485858)
  store %struct.Memory* %call_485858, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48585c	 Bytes: 3
  %loadMem_48585c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48585c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48585c)
  store %struct.Memory* %call_48585c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48585f	 Bytes: 4
  %loadMem_48585f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48585f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48585f)
  store %struct.Memory* %call_48585f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 485863	 Bytes: 4
  %loadMem_485863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485863 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485863)
  store %struct.Memory* %call_485863, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485867	 Bytes: 3
  %loadMem_485867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485867 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485867)
  store %struct.Memory* %call_485867, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48586a	 Bytes: 4
  %loadMem_48586a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48586a = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48586a)
  store %struct.Memory* %call_48586a, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %edi	 RIP: 48586e	 Bytes: 4
  %loadMem_48586e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48586e = call %struct.Memory* @routine_movzwl___rax__rcx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48586e)
  store %struct.Memory* %call_48586e, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 485872	 Bytes: 2
  %loadMem_485872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485872 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485872)
  store %struct.Memory* %call_485872, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 485874	 Bytes: 8
  %loadMem_485874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485874 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485874)
  store %struct.Memory* %call_485874, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 48587c	 Bytes: 6
  %loadMem_48587c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48587c = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48587c)
  store %struct.Memory* %call_48587c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485882	 Bytes: 4
  %loadMem_485882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485882 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485882)
  store %struct.Memory* %call_485882, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485886	 Bytes: 4
  %loadMem_485886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485886 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485886)
  store %struct.Memory* %call_485886, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48588a	 Bytes: 3
  %loadMem_48588a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48588a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48588a)
  store %struct.Memory* %call_48588a, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48588d	 Bytes: 4
  %loadMem_48588d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48588d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48588d)
  store %struct.Memory* %call_48588d, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 485891	 Bytes: 3
  %loadMem_485891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485891 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485891)
  store %struct.Memory* %call_485891, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 485894	 Bytes: 3
  %loadMem_485894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485894 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485894)
  store %struct.Memory* %call_485894, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485897	 Bytes: 3
  %loadMem_485897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485897 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485897)
  store %struct.Memory* %call_485897, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 48589a	 Bytes: 3
  %loadMem_48589a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48589a = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48589a)
  store %struct.Memory* %call_48589a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4857b7	 RIP: 48589d	 Bytes: 5
  %loadMem_48589d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48589d = call %struct.Memory* @routine_jmpq_.L_4857b7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48589d, i64 -230, i64 5)
  store %struct.Memory* %call_48589d, %struct.Memory** %MEMORY

  br label %block_.L_4857b7

  ; Code: .L_4858a2:	 RIP: 4858a2	 Bytes: 0
block_.L_4858a2:

  ; Code: jmpq .L_4858a7	 RIP: 4858a2	 Bytes: 5
  %loadMem_4858a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858a2 = call %struct.Memory* @routine_jmpq_.L_4858a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858a2, i64 5, i64 5)
  store %struct.Memory* %call_4858a2, %struct.Memory** %MEMORY

  br label %block_.L_4858a7

  ; Code: .L_4858a7:	 RIP: 4858a7	 Bytes: 0
block_.L_4858a7:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4858a7	 Bytes: 3
  %loadMem_4858a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858a7 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858a7)
  store %struct.Memory* %call_4858a7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4858aa	 Bytes: 3
  %loadMem_4858aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858aa = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858aa)
  store %struct.Memory* %call_4858aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4858ad	 Bytes: 3
  %loadMem_4858ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858ad = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858ad)
  store %struct.Memory* %call_4858ad, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4857a6	 RIP: 4858b0	 Bytes: 5
  %loadMem_4858b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858b0 = call %struct.Memory* @routine_jmpq_.L_4857a6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858b0, i64 -266, i64 5)
  store %struct.Memory* %call_4858b0, %struct.Memory** %MEMORY

  br label %block_.L_4857a6

  ; Code: .L_4858b5:	 RIP: 4858b5	 Bytes: 0
block_.L_4858b5:

  ; Code: leaq -0x44(%rbp), %rdx	 RIP: 4858b5	 Bytes: 4
  %loadMem_4858b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858b5 = call %struct.Memory* @routine_leaq_MINUS0x44__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858b5)
  store %struct.Memory* %call_4858b5, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 4858b9	 Bytes: 5
  %loadMem_4858b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858b9 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858b9)
  store %struct.Memory* %call_4858b9, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edi	 RIP: 4858be	 Bytes: 6
  %loadMem_4858be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858be = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858be)
  store %struct.Memory* %call_4858be, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 4858c4	 Bytes: 6
  %loadMem_4858c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858c4 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858c4)
  store %struct.Memory* %call_4858c4, %struct.Memory** %MEMORY

  ; Code: callq .dct_luma	 RIP: 4858ca	 Bytes: 5
  %loadMem1_4858ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4858ca = call %struct.Memory* @routine_callq_.dct_luma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4858ca, i64 -521850, i64 5, i64 5)
  store %struct.Memory* %call1_4858ca, %struct.Memory** %MEMORY

  %loadMem2_4858ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4858ca = load i64, i64* %3
  %call2_4858ca = call %struct.Memory* @sub_406250.dct_luma(%struct.State* %0, i64  %loadPC_4858ca, %struct.Memory* %loadMem2_4858ca)
  store %struct.Memory* %call2_4858ca, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 4858cf	 Bytes: 3
  %loadMem_4858cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858cf = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858cf)
  store %struct.Memory* %call_4858cf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486706	 RIP: 4858d2	 Bytes: 5
  %loadMem_4858d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858d2 = call %struct.Memory* @routine_jmpq_.L_486706(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858d2, i64 3636, i64 5)
  store %struct.Memory* %call_4858d2, %struct.Memory** %MEMORY

  br label %block_.L_486706

  ; Code: .L_4858d7:	 RIP: 4858d7	 Bytes: 0
block_.L_4858d7:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4858d7	 Bytes: 7
  %loadMem_4858d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858d7 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858d7)
  store %struct.Memory* %call_4858d7, %struct.Memory** %MEMORY

  ; Code: .L_4858de:	 RIP: 4858de	 Bytes: 0
  br label %block_.L_4858de
block_.L_4858de:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 4858de	 Bytes: 4
  %loadMem_4858de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858de = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858de)
  store %struct.Memory* %call_4858de, %struct.Memory** %MEMORY

  ; Code: jge .L_485b2f	 RIP: 4858e2	 Bytes: 6
  %loadMem_4858e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858e2 = call %struct.Memory* @routine_jge_.L_485b2f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858e2, i8* %BRANCH_TAKEN, i64 589, i64 6, i64 6)
  store %struct.Memory* %call_4858e2, %struct.Memory** %MEMORY

  %loadBr_4858e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4858e2 = icmp eq i8 %loadBr_4858e2, 1
  br i1 %cmpBr_4858e2, label %block_.L_485b2f, label %block_4858e8

block_4858e8:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4858e8	 Bytes: 7
  %loadMem_4858e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858e8 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858e8)
  store %struct.Memory* %call_4858e8, %struct.Memory** %MEMORY

  ; Code: .L_4858ef:	 RIP: 4858ef	 Bytes: 0
  br label %block_.L_4858ef
block_.L_4858ef:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 4858ef	 Bytes: 4
  %loadMem_4858ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858ef = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858ef)
  store %struct.Memory* %call_4858ef, %struct.Memory** %MEMORY

  ; Code: jge .L_485b1c	 RIP: 4858f3	 Bytes: 6
  %loadMem_4858f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858f3 = call %struct.Memory* @routine_jge_.L_485b1c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858f3, i8* %BRANCH_TAKEN, i64 553, i64 6, i64 6)
  store %struct.Memory* %call_4858f3, %struct.Memory** %MEMORY

  %loadBr_4858f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4858f3 = icmp eq i8 %loadBr_4858f3, 1
  br i1 %cmpBr_4858f3, label %block_.L_485b1c, label %block_4858f9

block_4858f9:
  ; Code: movq $0x723720, %rax	 RIP: 4858f9	 Bytes: 10
  %loadMem_4858f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4858f9 = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4858f9)
  store %struct.Memory* %call_4858f9, %struct.Memory** %MEMORY

  ; Code: movq $0x6d40f0, %rcx	 RIP: 485903	 Bytes: 10
  %loadMem_485903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485903 = call %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485903)
  store %struct.Memory* %call_485903, %struct.Memory** %MEMORY

  ; Code: movq $0x6f6fa0, %rdx	 RIP: 48590d	 Bytes: 10
  %loadMem_48590d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48590d = call %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48590d)
  store %struct.Memory* %call_48590d, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 485917	 Bytes: 8
  %loadMem_485917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485917 = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485917)
  store %struct.Memory* %call_485917, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 48591f	 Bytes: 3
  %loadMem_48591f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48591f = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48591f)
  store %struct.Memory* %call_48591f, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %edi	 RIP: 485922	 Bytes: 6
  %loadMem_485922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485922 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485922)
  store %struct.Memory* %call_485922, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 485928	 Bytes: 3
  %loadMem_485928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485928 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485928)
  store %struct.Memory* %call_485928, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 48592b	 Bytes: 3
  %loadMem_48592b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48592b = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48592b)
  store %struct.Memory* %call_48592b, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 48592e	 Bytes: 4
  %loadMem_48592e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48592e = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48592e)
  store %struct.Memory* %call_48592e, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %edi	 RIP: 485932	 Bytes: 6
  %loadMem_485932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485932 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485932)
  store %struct.Memory* %call_485932, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 485938	 Bytes: 3
  %loadMem_485938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485938 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485938)
  store %struct.Memory* %call_485938, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 48593b	 Bytes: 3
  %loadMem_48593b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48593b = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48593b)
  store %struct.Memory* %call_48593b, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 48593e	 Bytes: 5
  %loadMem_48593e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48593e = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48593e)
  store %struct.Memory* %call_48593e, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 485943	 Bytes: 8
  %loadMem_485943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485943 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485943)
  store %struct.Memory* %call_485943, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 48594b	 Bytes: 7
  %loadMem_48594b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48594b = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48594b)
  store %struct.Memory* %call_48594b, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %r8	 RIP: 485952	 Bytes: 7
  %loadMem_485952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485952 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485952)
  store %struct.Memory* %call_485952, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 485959	 Bytes: 4
  %loadMem_485959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485959 = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485959)
  store %struct.Memory* %call_485959, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 48595d	 Bytes: 3
  %loadMem_48595d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48595d = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48595d)
  store %struct.Memory* %call_48595d, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r9d	 RIP: 485960	 Bytes: 7
  %loadMem_485960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485960 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485960)
  store %struct.Memory* %call_485960, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 485967	 Bytes: 4
  %loadMem_485967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485967 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485967)
  store %struct.Memory* %call_485967, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 48596b	 Bytes: 3
  %loadMem_48596b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48596b = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48596b)
  store %struct.Memory* %call_48596b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 48596e	 Bytes: 4
  %loadMem_48596e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48596e = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48596e)
  store %struct.Memory* %call_48596e, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 485972	 Bytes: 3
  %loadMem_485972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485972 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485972)
  store %struct.Memory* %call_485972, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r9d	 RIP: 485975	 Bytes: 7
  %loadMem_485975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485975 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485975)
  store %struct.Memory* %call_485975, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 48597c	 Bytes: 4
  %loadMem_48597c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48597c = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48597c)
  store %struct.Memory* %call_48597c, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 485980	 Bytes: 3
  %loadMem_485980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485980 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485980)
  store %struct.Memory* %call_485980, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 485983	 Bytes: 5
  %loadMem_485983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485983 = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485983)
  store %struct.Memory* %call_485983, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 485988	 Bytes: 3
  %loadMem_485988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485988 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485988)
  store %struct.Memory* %call_485988, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x15c(%rbp)	 RIP: 48598b	 Bytes: 6
  %loadMem_48598b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48598b = call %struct.Memory* @routine_movl__edi__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48598b)
  store %struct.Memory* %call_48598b, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rsi	 RIP: 485991	 Bytes: 8
  %loadMem_485991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485991 = call %struct.Memory* @routine_movq_0x726418___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485991)
  store %struct.Memory* %call_485991, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %edi	 RIP: 485999	 Bytes: 6
  %loadMem_485999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485999 = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485999)
  store %struct.Memory* %call_485999, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 48599f	 Bytes: 3
  %loadMem_48599f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48599f = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48599f)
  store %struct.Memory* %call_48599f, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4859a2	 Bytes: 3
  %loadMem_4859a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859a2 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859a2)
  store %struct.Memory* %call_4859a2, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 4859a5	 Bytes: 4
  %loadMem_4859a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859a5 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859a5)
  store %struct.Memory* %call_4859a5, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %edi	 RIP: 4859a9	 Bytes: 6
  %loadMem_4859a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859a9 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859a9)
  store %struct.Memory* %call_4859a9, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 4859af	 Bytes: 3
  %loadMem_4859af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859af = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859af)
  store %struct.Memory* %call_4859af, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 4859b2	 Bytes: 3
  %loadMem_4859b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859b2 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859b2)
  store %struct.Memory* %call_4859b2, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 4859b5	 Bytes: 5
  %loadMem_4859b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859b5 = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859b5)
  store %struct.Memory* %call_4859b5, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4859ba	 Bytes: 8
  %loadMem_4859ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859ba = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859ba)
  store %struct.Memory* %call_4859ba, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rsi	 RIP: 4859c2	 Bytes: 7
  %loadMem_4859c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859c2 = call %struct.Memory* @routine_addq__0xb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859c2)
  store %struct.Memory* %call_4859c2, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %r8	 RIP: 4859c9	 Bytes: 4
  %loadMem_4859c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859c9 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859c9)
  store %struct.Memory* %call_4859c9, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 4859cd	 Bytes: 4
  %loadMem_4859cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859cd = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859cd)
  store %struct.Memory* %call_4859cd, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4859d1	 Bytes: 3
  %loadMem_4859d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859d1 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859d1)
  store %struct.Memory* %call_4859d1, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %r8	 RIP: 4859d4	 Bytes: 4
  %loadMem_4859d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859d4 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859d4)
  store %struct.Memory* %call_4859d4, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 4859d8	 Bytes: 4
  %loadMem_4859d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859d8 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859d8)
  store %struct.Memory* %call_4859d8, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 4859dc	 Bytes: 3
  %loadMem_4859dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859dc = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859dc)
  store %struct.Memory* %call_4859dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %r8	 RIP: 4859df	 Bytes: 4
  %loadMem_4859df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859df = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859df)
  store %struct.Memory* %call_4859df, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 4859e3	 Bytes: 5
  %loadMem_4859e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859e3 = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859e3)
  store %struct.Memory* %call_4859e3, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 4859e8	 Bytes: 3
  %loadMem_4859e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859e8 = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859e8)
  store %struct.Memory* %call_4859e8, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x158(%rbp)	 RIP: 4859eb	 Bytes: 6
  %loadMem_4859eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859eb = call %struct.Memory* @routine_movl__edi__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859eb)
  store %struct.Memory* %call_4859eb, %struct.Memory** %MEMORY

  ; Code: movq 0x6f6f90, %rsi	 RIP: 4859f1	 Bytes: 8
  %loadMem_4859f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859f1 = call %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859f1)
  store %struct.Memory* %call_4859f1, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rsi), %rsi	 RIP: 4859f9	 Bytes: 4
  %loadMem_4859f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859f9 = call %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859f9)
  store %struct.Memory* %call_4859f9, %struct.Memory** %MEMORY

  ; Code: movl -0xf0(%rbp), %edi	 RIP: 4859fd	 Bytes: 6
  %loadMem_4859fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4859fd = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4859fd)
  store %struct.Memory* %call_4859fd, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 485a03	 Bytes: 3
  %loadMem_485a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a03 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a03)
  store %struct.Memory* %call_485a03, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 485a06	 Bytes: 3
  %loadMem_485a06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a06 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a06)
  store %struct.Memory* %call_485a06, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 485a09	 Bytes: 4
  %loadMem_485a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a09 = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a09)
  store %struct.Memory* %call_485a09, %struct.Memory** %MEMORY

  ; Code: movl -0xec(%rbp), %edi	 RIP: 485a0d	 Bytes: 6
  %loadMem_485a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a0d = call %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a0d)
  store %struct.Memory* %call_485a0d, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 485a13	 Bytes: 3
  %loadMem_485a13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a13 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a13)
  store %struct.Memory* %call_485a13, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 485a16	 Bytes: 3
  %loadMem_485a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a16 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a16)
  store %struct.Memory* %call_485a16, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %edi	 RIP: 485a19	 Bytes: 5
  %loadMem_485a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a19 = call %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a19)
  store %struct.Memory* %call_485a19, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 485a1e	 Bytes: 8
  %loadMem_485a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a1e = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a1e)
  store %struct.Memory* %call_485a1e, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 485a26	 Bytes: 7
  %loadMem_485a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a26 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a26)
  store %struct.Memory* %call_485a26, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 485a2d	 Bytes: 7
  %loadMem_485a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a2d = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a2d)
  store %struct.Memory* %call_485a2d, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %r8	 RIP: 485a34	 Bytes: 7
  %loadMem_485a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a34 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a34)
  store %struct.Memory* %call_485a34, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 485a3b	 Bytes: 4
  %loadMem_485a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a3b = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a3b)
  store %struct.Memory* %call_485a3b, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 485a3f	 Bytes: 3
  %loadMem_485a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a3f = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a3f)
  store %struct.Memory* %call_485a3f, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r9d	 RIP: 485a42	 Bytes: 7
  %loadMem_485a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a42 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a42)
  store %struct.Memory* %call_485a42, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 485a49	 Bytes: 4
  %loadMem_485a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a49 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a49)
  store %struct.Memory* %call_485a49, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 485a4d	 Bytes: 3
  %loadMem_485a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a4d = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a4d)
  store %struct.Memory* %call_485a4d, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 485a50	 Bytes: 4
  %loadMem_485a50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a50 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a50)
  store %struct.Memory* %call_485a50, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rsi	 RIP: 485a54	 Bytes: 3
  %loadMem_485a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a54 = call %struct.Memory* @routine_addq__r8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a54)
  store %struct.Memory* %call_485a54, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r9d	 RIP: 485a57	 Bytes: 7
  %loadMem_485a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a57 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a57)
  store %struct.Memory* %call_485a57, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 485a5e	 Bytes: 4
  %loadMem_485a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a5e = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a5e)
  store %struct.Memory* %call_485a5e, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %r8	 RIP: 485a62	 Bytes: 3
  %loadMem_485a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a62 = call %struct.Memory* @routine_movslq__r9d___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a62)
  store %struct.Memory* %call_485a62, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%r8,2), %r9d	 RIP: 485a65	 Bytes: 5
  %loadMem_485a65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a65 = call %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a65)
  store %struct.Memory* %call_485a65, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %edi	 RIP: 485a6a	 Bytes: 3
  %loadMem_485a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a6a = call %struct.Memory* @routine_subl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a6a)
  store %struct.Memory* %call_485a6a, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x154(%rbp)	 RIP: 485a6d	 Bytes: 6
  %loadMem_485a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a6d = call %struct.Memory* @routine_movl__edi__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a6d)
  store %struct.Memory* %call_485a6d, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %edi	 RIP: 485a73	 Bytes: 6
  %loadMem_485a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a73 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a73)
  store %struct.Memory* %call_485a73, %struct.Memory** %MEMORY

  ; Code: subl -0x15c(%rbp), %edi	 RIP: 485a79	 Bytes: 6
  %loadMem_485a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a79 = call %struct.Memory* @routine_subl_MINUS0x15c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a79)
  store %struct.Memory* %call_485a79, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 485a7f	 Bytes: 4
  %loadMem_485a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a7f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a7f)
  store %struct.Memory* %call_485a7f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 485a83	 Bytes: 4
  %loadMem_485a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a83 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a83)
  store %struct.Memory* %call_485a83, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r8	 RIP: 485a87	 Bytes: 3
  %loadMem_485a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a87 = call %struct.Memory* @routine_movq__rdx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a87)
  store %struct.Memory* %call_485a87, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 485a8a	 Bytes: 3
  %loadMem_485a8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a8a = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a8a)
  store %struct.Memory* %call_485a8a, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 485a8d	 Bytes: 4
  %loadMem_485a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a8d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a8d)
  store %struct.Memory* %call_485a8d, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%r8,%rsi,4)	 RIP: 485a91	 Bytes: 4
  %loadMem_485a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a91 = call %struct.Memory* @routine_movl__edi____r8__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a91)
  store %struct.Memory* %call_485a91, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %edi	 RIP: 485a95	 Bytes: 6
  %loadMem_485a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a95 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a95)
  store %struct.Memory* %call_485a95, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 485a9b	 Bytes: 4
  %loadMem_485a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a9b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a9b)
  store %struct.Memory* %call_485a9b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 485a9f	 Bytes: 4
  %loadMem_485a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485a9f = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485a9f)
  store %struct.Memory* %call_485a9f, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 485aa3	 Bytes: 3
  %loadMem_485aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485aa3 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485aa3)
  store %struct.Memory* %call_485aa3, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 485aa6	 Bytes: 4
  %loadMem_485aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485aa6 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485aa6)
  store %struct.Memory* %call_485aa6, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r9d	 RIP: 485aaa	 Bytes: 4
  %loadMem_485aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485aaa = call %struct.Memory* @routine_movl___rdx__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485aaa)
  store %struct.Memory* %call_485aaa, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 485aae	 Bytes: 4
  %loadMem_485aae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485aae = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485aae)
  store %struct.Memory* %call_485aae, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %edi	 RIP: 485ab2	 Bytes: 3
  %loadMem_485ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ab2 = call %struct.Memory* @routine_addl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ab2)
  store %struct.Memory* %call_485ab2, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x168(%rbp)	 RIP: 485ab5	 Bytes: 6
  %loadMem_485ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ab5 = call %struct.Memory* @routine_movl__edi__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ab5)
  store %struct.Memory* %call_485ab5, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %edi	 RIP: 485abb	 Bytes: 6
  %loadMem_485abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485abb = call %struct.Memory* @routine_movl_MINUS0x158__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485abb)
  store %struct.Memory* %call_485abb, %struct.Memory** %MEMORY

  ; Code: subl -0x168(%rbp), %edi	 RIP: 485ac1	 Bytes: 6
  %loadMem_485ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ac1 = call %struct.Memory* @routine_subl_MINUS0x168__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ac1)
  store %struct.Memory* %call_485ac1, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 485ac7	 Bytes: 4
  %loadMem_485ac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ac7 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ac7)
  store %struct.Memory* %call_485ac7, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 485acb	 Bytes: 4
  %loadMem_485acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485acb = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485acb)
  store %struct.Memory* %call_485acb, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 485acf	 Bytes: 3
  %loadMem_485acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485acf = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485acf)
  store %struct.Memory* %call_485acf, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 485ad2	 Bytes: 3
  %loadMem_485ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ad2 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ad2)
  store %struct.Memory* %call_485ad2, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 485ad5	 Bytes: 4
  %loadMem_485ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ad5 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ad5)
  store %struct.Memory* %call_485ad5, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rsi,%rdx,4)	 RIP: 485ad9	 Bytes: 3
  %loadMem_485ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ad9 = call %struct.Memory* @routine_movl__edi____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ad9)
  store %struct.Memory* %call_485ad9, %struct.Memory** %MEMORY

  ; Code: movl -0x168(%rbp), %edi	 RIP: 485adc	 Bytes: 6
  %loadMem_485adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485adc = call %struct.Memory* @routine_movl_MINUS0x168__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485adc)
  store %struct.Memory* %call_485adc, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 485ae2	 Bytes: 4
  %loadMem_485ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ae2 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ae2)
  store %struct.Memory* %call_485ae2, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 485ae6	 Bytes: 4
  %loadMem_485ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ae6 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ae6)
  store %struct.Memory* %call_485ae6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 485aea	 Bytes: 3
  %loadMem_485aea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485aea = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485aea)
  store %struct.Memory* %call_485aea, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 485aed	 Bytes: 4
  %loadMem_485aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485aed = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485aed)
  store %struct.Memory* %call_485aed, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %r9d	 RIP: 485af1	 Bytes: 4
  %loadMem_485af1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485af1 = call %struct.Memory* @routine_movl___rcx__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485af1)
  store %struct.Memory* %call_485af1, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 485af5	 Bytes: 4
  %loadMem_485af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485af5 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485af5)
  store %struct.Memory* %call_485af5, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %edi	 RIP: 485af9	 Bytes: 3
  %loadMem_485af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485af9 = call %struct.Memory* @routine_addl__r9d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485af9)
  store %struct.Memory* %call_485af9, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485afc	 Bytes: 4
  %loadMem_485afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485afc = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485afc)
  store %struct.Memory* %call_485afc, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485b00	 Bytes: 4
  %loadMem_485b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b00 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b00)
  store %struct.Memory* %call_485b00, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485b04	 Bytes: 3
  %loadMem_485b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b04 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b04)
  store %struct.Memory* %call_485b04, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485b07	 Bytes: 4
  %loadMem_485b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b07 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b07)
  store %struct.Memory* %call_485b07, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 485b0b	 Bytes: 3
  %loadMem_485b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b0b = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b0b)
  store %struct.Memory* %call_485b0b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 485b0e	 Bytes: 3
  %loadMem_485b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b0e = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b0e)
  store %struct.Memory* %call_485b0e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485b11	 Bytes: 3
  %loadMem_485b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b11 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b11)
  store %struct.Memory* %call_485b11, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 485b14	 Bytes: 3
  %loadMem_485b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b14 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b14)
  store %struct.Memory* %call_485b14, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4858ef	 RIP: 485b17	 Bytes: 5
  %loadMem_485b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b17 = call %struct.Memory* @routine_jmpq_.L_4858ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b17, i64 -552, i64 5)
  store %struct.Memory* %call_485b17, %struct.Memory** %MEMORY

  br label %block_.L_4858ef

  ; Code: .L_485b1c:	 RIP: 485b1c	 Bytes: 0
block_.L_485b1c:

  ; Code: jmpq .L_485b21	 RIP: 485b1c	 Bytes: 5
  %loadMem_485b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b1c = call %struct.Memory* @routine_jmpq_.L_485b21(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b1c, i64 5, i64 5)
  store %struct.Memory* %call_485b1c, %struct.Memory** %MEMORY

  br label %block_.L_485b21

  ; Code: .L_485b21:	 RIP: 485b21	 Bytes: 0
block_.L_485b21:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 485b21	 Bytes: 3
  %loadMem_485b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b21 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b21)
  store %struct.Memory* %call_485b21, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485b24	 Bytes: 3
  %loadMem_485b24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b24 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b24)
  store %struct.Memory* %call_485b24, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 485b27	 Bytes: 3
  %loadMem_485b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b27 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b27)
  store %struct.Memory* %call_485b27, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4858de	 RIP: 485b2a	 Bytes: 5
  %loadMem_485b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b2a = call %struct.Memory* @routine_jmpq_.L_4858de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b2a, i64 -588, i64 5)
  store %struct.Memory* %call_485b2a, %struct.Memory** %MEMORY

  br label %block_.L_4858de

  ; Code: .L_485b2f:	 RIP: 485b2f	 Bytes: 0
block_.L_485b2f:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485b2f	 Bytes: 7
  %loadMem_485b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b2f = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b2f)
  store %struct.Memory* %call_485b2f, %struct.Memory** %MEMORY

  ; Code: .L_485b36:	 RIP: 485b36	 Bytes: 0
  br label %block_.L_485b36
block_.L_485b36:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 485b36	 Bytes: 4
  %loadMem_485b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b36 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b36)
  store %struct.Memory* %call_485b36, %struct.Memory** %MEMORY

  ; Code: jge .L_485bae	 RIP: 485b3a	 Bytes: 6
  %loadMem_485b3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b3a = call %struct.Memory* @routine_jge_.L_485bae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b3a, i8* %BRANCH_TAKEN, i64 116, i64 6, i64 6)
  store %struct.Memory* %call_485b3a, %struct.Memory** %MEMORY

  %loadBr_485b3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485b3a = icmp eq i8 %loadBr_485b3a, 1
  br i1 %cmpBr_485b3a, label %block_.L_485bae, label %block_485b40

block_485b40:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 485b40	 Bytes: 7
  %loadMem_485b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b40 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b40)
  store %struct.Memory* %call_485b40, %struct.Memory** %MEMORY

  ; Code: .L_485b47:	 RIP: 485b47	 Bytes: 0
  br label %block_.L_485b47
block_.L_485b47:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 485b47	 Bytes: 4
  %loadMem_485b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b47 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b47)
  store %struct.Memory* %call_485b47, %struct.Memory** %MEMORY

  ; Code: jge .L_485b9b	 RIP: 485b4b	 Bytes: 6
  %loadMem_485b4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b4b = call %struct.Memory* @routine_jge_.L_485b9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b4b, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_485b4b, %struct.Memory** %MEMORY

  %loadBr_485b4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485b4b = icmp eq i8 %loadBr_485b4b, 1
  br i1 %cmpBr_485b4b, label %block_.L_485b9b, label %block_485b51

block_485b51:
  ; Code: movq $0x723720, %rax	 RIP: 485b51	 Bytes: 10
  %loadMem_485b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b51 = call %struct.Memory* @routine_movq__0x723720___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b51)
  store %struct.Memory* %call_485b51, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485b5b	 Bytes: 4
  %loadMem_485b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b5b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b5b)
  store %struct.Memory* %call_485b5b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485b5f	 Bytes: 4
  %loadMem_485b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b5f = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b5f)
  store %struct.Memory* %call_485b5f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485b63	 Bytes: 3
  %loadMem_485b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b63 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b63)
  store %struct.Memory* %call_485b63, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485b66	 Bytes: 4
  %loadMem_485b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b66 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b66)
  store %struct.Memory* %call_485b66, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 485b6a	 Bytes: 3
  %loadMem_485b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b6a = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b6a)
  store %struct.Memory* %call_485b6a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 485b6d	 Bytes: 8
  %loadMem_485b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b6d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b6d)
  store %struct.Memory* %call_485b6d, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 485b75	 Bytes: 6
  %loadMem_485b75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b75 = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b75)
  store %struct.Memory* %call_485b75, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485b7b	 Bytes: 4
  %loadMem_485b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b7b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b7b)
  store %struct.Memory* %call_485b7b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485b7f	 Bytes: 4
  %loadMem_485b7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b7f = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b7f)
  store %struct.Memory* %call_485b7f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485b83	 Bytes: 3
  %loadMem_485b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b83 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b83)
  store %struct.Memory* %call_485b83, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485b86	 Bytes: 4
  %loadMem_485b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b86 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b86)
  store %struct.Memory* %call_485b86, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 485b8a	 Bytes: 3
  %loadMem_485b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b8a = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b8a)
  store %struct.Memory* %call_485b8a, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 485b8d	 Bytes: 3
  %loadMem_485b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b8d = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b8d)
  store %struct.Memory* %call_485b8d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485b90	 Bytes: 3
  %loadMem_485b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b90 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b90)
  store %struct.Memory* %call_485b90, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 485b93	 Bytes: 3
  %loadMem_485b93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b93 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b93)
  store %struct.Memory* %call_485b93, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485b47	 RIP: 485b96	 Bytes: 5
  %loadMem_485b96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b96 = call %struct.Memory* @routine_jmpq_.L_485b47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b96, i64 -79, i64 5)
  store %struct.Memory* %call_485b96, %struct.Memory** %MEMORY

  br label %block_.L_485b47

  ; Code: .L_485b9b:	 RIP: 485b9b	 Bytes: 0
block_.L_485b9b:

  ; Code: jmpq .L_485ba0	 RIP: 485b9b	 Bytes: 5
  %loadMem_485b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485b9b = call %struct.Memory* @routine_jmpq_.L_485ba0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485b9b, i64 5, i64 5)
  store %struct.Memory* %call_485b9b, %struct.Memory** %MEMORY

  br label %block_.L_485ba0

  ; Code: .L_485ba0:	 RIP: 485ba0	 Bytes: 0
block_.L_485ba0:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 485ba0	 Bytes: 3
  %loadMem_485ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ba0 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ba0)
  store %struct.Memory* %call_485ba0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485ba3	 Bytes: 3
  %loadMem_485ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ba3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ba3)
  store %struct.Memory* %call_485ba3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 485ba6	 Bytes: 3
  %loadMem_485ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ba6 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ba6)
  store %struct.Memory* %call_485ba6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485b36	 RIP: 485ba9	 Bytes: 5
  %loadMem_485ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ba9 = call %struct.Memory* @routine_jmpq_.L_485b36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ba9, i64 -115, i64 5)
  store %struct.Memory* %call_485ba9, %struct.Memory** %MEMORY

  br label %block_.L_485b36

  ; Code: .L_485bae:	 RIP: 485bae	 Bytes: 0
block_.L_485bae:

  ; Code: leaq -0x44(%rbp), %rdx	 RIP: 485bae	 Bytes: 4
  %loadMem_485bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bae = call %struct.Memory* @routine_leaq_MINUS0x44__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bae)
  store %struct.Memory* %call_485bae, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 485bb2	 Bytes: 5
  %loadMem_485bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bb2 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bb2)
  store %struct.Memory* %call_485bb2, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edi	 RIP: 485bb7	 Bytes: 6
  %loadMem_485bb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bb7 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bb7)
  store %struct.Memory* %call_485bb7, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 485bbd	 Bytes: 6
  %loadMem_485bbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bbd = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bbd)
  store %struct.Memory* %call_485bbd, %struct.Memory** %MEMORY

  ; Code: callq .dct_luma	 RIP: 485bc3	 Bytes: 5
  %loadMem1_485bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_485bc3 = call %struct.Memory* @routine_callq_.dct_luma(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_485bc3, i64 -522611, i64 5, i64 5)
  store %struct.Memory* %call1_485bc3, %struct.Memory** %MEMORY

  %loadMem2_485bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_485bc3 = load i64, i64* %3
  %call2_485bc3 = call %struct.Memory* @sub_406250.dct_luma(%struct.State* %0, i64  %loadPC_485bc3, %struct.Memory* %loadMem2_485bc3)
  store %struct.Memory* %call2_485bc3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 485bc8	 Bytes: 3
  %loadMem_485bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bc8 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bc8)
  store %struct.Memory* %call_485bc8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485bcb	 Bytes: 7
  %loadMem_485bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bcb = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bcb)
  store %struct.Memory* %call_485bcb, %struct.Memory** %MEMORY

  ; Code: .L_485bd2:	 RIP: 485bd2	 Bytes: 0
  br label %block_.L_485bd2
block_.L_485bd2:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 485bd2	 Bytes: 4
  %loadMem_485bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bd2 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bd2)
  store %struct.Memory* %call_485bd2, %struct.Memory** %MEMORY

  ; Code: jge .L_485c87	 RIP: 485bd6	 Bytes: 6
  %loadMem_485bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bd6 = call %struct.Memory* @routine_jge_.L_485c87(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bd6, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_485bd6, %struct.Memory** %MEMORY

  %loadBr_485bd6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485bd6 = icmp eq i8 %loadBr_485bd6, 1
  br i1 %cmpBr_485bd6, label %block_.L_485c87, label %block_485bdc

block_485bdc:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 485bdc	 Bytes: 7
  %loadMem_485bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bdc = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bdc)
  store %struct.Memory* %call_485bdc, %struct.Memory** %MEMORY

  ; Code: .L_485be3:	 RIP: 485be3	 Bytes: 0
  br label %block_.L_485be3
block_.L_485be3:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 485be3	 Bytes: 4
  %loadMem_485be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485be3 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485be3)
  store %struct.Memory* %call_485be3, %struct.Memory** %MEMORY

  ; Code: jge .L_485c74	 RIP: 485be7	 Bytes: 6
  %loadMem_485be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485be7 = call %struct.Memory* @routine_jge_.L_485c74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485be7, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_485be7, %struct.Memory** %MEMORY

  %loadBr_485be7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485be7 = icmp eq i8 %loadBr_485be7, 1
  br i1 %cmpBr_485be7, label %block_.L_485c74, label %block_485bed

block_485bed:
  ; Code: movq $0x6f6fa0, %rax	 RIP: 485bed	 Bytes: 10
  %loadMem_485bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bed = call %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bed)
  store %struct.Memory* %call_485bed, %struct.Memory** %MEMORY

  ; Code: movq $0x722ff0, %rcx	 RIP: 485bf7	 Bytes: 10
  %loadMem_485bf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485bf7 = call %struct.Memory* @routine_movq__0x722ff0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485bf7)
  store %struct.Memory* %call_485bf7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 485c01	 Bytes: 8
  %loadMem_485c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c01 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c01)
  store %struct.Memory* %call_485c01, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 485c09	 Bytes: 7
  %loadMem_485c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c09 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c09)
  store %struct.Memory* %call_485c09, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 485c10	 Bytes: 4
  %loadMem_485c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c10 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c10)
  store %struct.Memory* %call_485c10, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 485c14	 Bytes: 4
  %loadMem_485c14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c14 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c14)
  store %struct.Memory* %call_485c14, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 485c18	 Bytes: 3
  %loadMem_485c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c18 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c18)
  store %struct.Memory* %call_485c18, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 485c1b	 Bytes: 4
  %loadMem_485c1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c1b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c1b)
  store %struct.Memory* %call_485c1b, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 485c1f	 Bytes: 3
  %loadMem_485c1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c1f = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c1f)
  store %struct.Memory* %call_485c1f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 485c22	 Bytes: 4
  %loadMem_485c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c22 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c22)
  store %struct.Memory* %call_485c22, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 485c26	 Bytes: 4
  %loadMem_485c26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c26 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c26)
  store %struct.Memory* %call_485c26, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 485c2a	 Bytes: 3
  %loadMem_485c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c2a = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c2a)
  store %struct.Memory* %call_485c2a, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 485c2d	 Bytes: 4
  %loadMem_485c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c2d = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c2d)
  store %struct.Memory* %call_485c2d, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rdx,4)	 RIP: 485c31	 Bytes: 3
  %loadMem_485c31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c31 = call %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c31)
  store %struct.Memory* %call_485c31, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485c34	 Bytes: 4
  %loadMem_485c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c34 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c34)
  store %struct.Memory* %call_485c34, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485c38	 Bytes: 4
  %loadMem_485c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c38 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c38)
  store %struct.Memory* %call_485c38, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485c3c	 Bytes: 3
  %loadMem_485c3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c3c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c3c)
  store %struct.Memory* %call_485c3c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485c3f	 Bytes: 4
  %loadMem_485c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c3f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c3f)
  store %struct.Memory* %call_485c3f, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 485c43	 Bytes: 3
  %loadMem_485c43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c43 = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c43)
  store %struct.Memory* %call_485c43, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 485c46	 Bytes: 8
  %loadMem_485c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c46 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c46)
  store %struct.Memory* %call_485c46, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 485c4e	 Bytes: 6
  %loadMem_485c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c4e = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c4e)
  store %struct.Memory* %call_485c4e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485c54	 Bytes: 4
  %loadMem_485c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c54 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c54)
  store %struct.Memory* %call_485c54, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485c58	 Bytes: 4
  %loadMem_485c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c58 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c58)
  store %struct.Memory* %call_485c58, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485c5c	 Bytes: 3
  %loadMem_485c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c5c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c5c)
  store %struct.Memory* %call_485c5c, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485c5f	 Bytes: 4
  %loadMem_485c5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c5f = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c5f)
  store %struct.Memory* %call_485c5f, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 485c63	 Bytes: 3
  %loadMem_485c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c63 = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c63)
  store %struct.Memory* %call_485c63, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 485c66	 Bytes: 3
  %loadMem_485c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c66 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c66)
  store %struct.Memory* %call_485c66, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485c69	 Bytes: 3
  %loadMem_485c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c69 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c69)
  store %struct.Memory* %call_485c69, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 485c6c	 Bytes: 3
  %loadMem_485c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c6c = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c6c)
  store %struct.Memory* %call_485c6c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485be3	 RIP: 485c6f	 Bytes: 5
  %loadMem_485c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c6f = call %struct.Memory* @routine_jmpq_.L_485be3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c6f, i64 -140, i64 5)
  store %struct.Memory* %call_485c6f, %struct.Memory** %MEMORY

  br label %block_.L_485be3

  ; Code: .L_485c74:	 RIP: 485c74	 Bytes: 0
block_.L_485c74:

  ; Code: jmpq .L_485c79	 RIP: 485c74	 Bytes: 5
  %loadMem_485c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c74 = call %struct.Memory* @routine_jmpq_.L_485c79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c74, i64 5, i64 5)
  store %struct.Memory* %call_485c74, %struct.Memory** %MEMORY

  br label %block_.L_485c79

  ; Code: .L_485c79:	 RIP: 485c79	 Bytes: 0
block_.L_485c79:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 485c79	 Bytes: 3
  %loadMem_485c79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c79 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c79)
  store %struct.Memory* %call_485c79, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485c7c	 Bytes: 3
  %loadMem_485c7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c7c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c7c)
  store %struct.Memory* %call_485c7c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 485c7f	 Bytes: 3
  %loadMem_485c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c7f = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c7f)
  store %struct.Memory* %call_485c7f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485bd2	 RIP: 485c82	 Bytes: 5
  %loadMem_485c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c82 = call %struct.Memory* @routine_jmpq_.L_485bd2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c82, i64 -176, i64 5)
  store %struct.Memory* %call_485c82, %struct.Memory** %MEMORY

  br label %block_.L_485bd2

  ; Code: .L_485c87:	 RIP: 485c87	 Bytes: 0
block_.L_485c87:

  ; Code: xorl %edi, %edi	 RIP: 485c87	 Bytes: 2
  %loadMem_485c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c87 = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c87)
  store %struct.Memory* %call_485c87, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 485c89	 Bytes: 3
  %loadMem_485c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c89 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c89)
  store %struct.Memory* %call_485c89, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %eax	 RIP: 485c8c	 Bytes: 3
  %loadMem_485c8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c8c = call %struct.Memory* @routine_addl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c8c)
  store %struct.Memory* %call_485c8c, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edx	 RIP: 485c8f	 Bytes: 3
  %loadMem_485c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c8f = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c8f)
  store %struct.Memory* %call_485c8f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 485c92	 Bytes: 2
  %loadMem_485c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c92 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c92)
  store %struct.Memory* %call_485c92, %struct.Memory** %MEMORY

  ; Code: callq .dct_chroma4x4	 RIP: 485c94	 Bytes: 5
  %loadMem1_485c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_485c94 = call %struct.Memory* @routine_callq_.dct_chroma4x4(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_485c94, i64 -503764, i64 5, i64 5)
  store %struct.Memory* %call1_485c94, %struct.Memory** %MEMORY

  %loadMem2_485c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_485c94 = load i64, i64* %3
  %call2_485c94 = call %struct.Memory* @sub_40acc0.dct_chroma4x4(%struct.State* %0, i64  %loadPC_485c94, %struct.Memory* %loadMem2_485c94)
  store %struct.Memory* %call2_485c94, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edx	 RIP: 485c99	 Bytes: 5
  %loadMem_485c99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c99 = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c99)
  store %struct.Memory* %call_485c99, %struct.Memory** %MEMORY

  ; Code: movq $0x7107b0, %rcx	 RIP: 485c9e	 Bytes: 10
  %loadMem_485c9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485c9e = call %struct.Memory* @routine_movq__0x7107b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485c9e)
  store %struct.Memory* %call_485c9e, %struct.Memory** %MEMORY

  ; Code: movq $0x6d4600, %r8	 RIP: 485ca8	 Bytes: 10
  %loadMem_485ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ca8 = call %struct.Memory* @routine_movq__0x6d4600___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ca8)
  store %struct.Memory* %call_485ca8, %struct.Memory** %MEMORY

  ; Code: movq $0x6d0920, %r9	 RIP: 485cb2	 Bytes: 10
  %loadMem_485cb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cb2 = call %struct.Memory* @routine_movq__0x6d0920___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cb2)
  store %struct.Memory* %call_485cb2, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 485cbc	 Bytes: 3
  %loadMem_485cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cbc = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cbc)
  store %struct.Memory* %call_485cbc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x29c(%rbp)	 RIP: 485cbf	 Bytes: 6
  %loadMem_485cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cbf = call %struct.Memory* @routine_movl__eax__MINUS0x29c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cbf)
  store %struct.Memory* %call_485cbf, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 485cc5	 Bytes: 2
  %loadMem_485cc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cc5 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cc5)
  store %struct.Memory* %call_485cc5, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2a0(%rbp)	 RIP: 485cc7	 Bytes: 6
  %loadMem_485cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cc7 = call %struct.Memory* @routine_movl__edx__MINUS0x2a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cc7)
  store %struct.Memory* %call_485cc7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485ccd	 Bytes: 1
  %loadMem_485ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ccd = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ccd)
  store %struct.Memory* %call_485ccd, %struct.Memory** %MEMORY

  ; Code: movl -0x2a0(%rbp), %esi	 RIP: 485cce	 Bytes: 6
  %loadMem_485cce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cce = call %struct.Memory* @routine_movl_MINUS0x2a0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cce)
  store %struct.Memory* %call_485cce, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485cd4	 Bytes: 2
  %loadMem_485cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cd4 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cd4)
  store %struct.Memory* %call_485cd4, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485cd6	 Bytes: 3
  %loadMem_485cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cd6 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cd6)
  store %struct.Memory* %call_485cd6, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485cd9	 Bytes: 3
  %loadMem_485cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cd9 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cd9)
  store %struct.Memory* %call_485cd9, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485cdc	 Bytes: 2
  %loadMem_485cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cdc = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cdc)
  store %struct.Memory* %call_485cdc, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2a4(%rbp)	 RIP: 485cde	 Bytes: 6
  %loadMem_485cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cde = call %struct.Memory* @routine_movl__edx__MINUS0x2a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cde)
  store %struct.Memory* %call_485cde, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485ce4	 Bytes: 1
  %loadMem_485ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ce4 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ce4)
  store %struct.Memory* %call_485ce4, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485ce5	 Bytes: 2
  %loadMem_485ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ce5 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ce5)
  store %struct.Memory* %call_485ce5, %struct.Memory** %MEMORY

  ; Code: movl -0x2a4(%rbp), %edi	 RIP: 485ce7	 Bytes: 6
  %loadMem_485ce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ce7 = call %struct.Memory* @routine_movl_MINUS0x2a4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ce7)
  store %struct.Memory* %call_485ce7, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 485ced	 Bytes: 2
  %loadMem_485ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ced = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ced)
  store %struct.Memory* %call_485ced, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 485cef	 Bytes: 3
  %loadMem_485cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cef = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cef)
  store %struct.Memory* %call_485cef, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r10	 RIP: 485cf2	 Bytes: 4
  %loadMem_485cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cf2 = call %struct.Memory* @routine_shlq__0x4___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cf2)
  store %struct.Memory* %call_485cf2, %struct.Memory** %MEMORY

  ; Code: addq %r10, %r9	 RIP: 485cf6	 Bytes: 3
  %loadMem_485cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cf6 = call %struct.Memory* @routine_addq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cf6)
  store %struct.Memory* %call_485cf6, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485cf9	 Bytes: 3
  %loadMem_485cf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cf9 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cf9)
  store %struct.Memory* %call_485cf9, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485cfc	 Bytes: 2
  %loadMem_485cfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cfc = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cfc)
  store %struct.Memory* %call_485cfc, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485cfe	 Bytes: 1
  %loadMem_485cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cfe = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cfe)
  store %struct.Memory* %call_485cfe, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485cff	 Bytes: 2
  %loadMem_485cff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485cff = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485cff)
  store %struct.Memory* %call_485cff, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485d01	 Bytes: 3
  %loadMem_485d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d01 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d01)
  store %struct.Memory* %call_485d01, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485d04	 Bytes: 3
  %loadMem_485d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d04 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d04)
  store %struct.Memory* %call_485d04, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a8(%rbp)	 RIP: 485d07	 Bytes: 6
  %loadMem_485d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d07 = call %struct.Memory* @routine_movl__eax__MINUS0x2a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d07)
  store %struct.Memory* %call_485d07, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485d0d	 Bytes: 2
  %loadMem_485d0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d0d = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d0d)
  store %struct.Memory* %call_485d0d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d0f	 Bytes: 1
  %loadMem_485d0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d0f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d0f)
  store %struct.Memory* %call_485d0f, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d10	 Bytes: 2
  %loadMem_485d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d10 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d10)
  store %struct.Memory* %call_485d10, %struct.Memory** %MEMORY

  ; Code: movl -0x2a8(%rbp), %edi	 RIP: 485d12	 Bytes: 6
  %loadMem_485d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d12 = call %struct.Memory* @routine_movl_MINUS0x2a8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d12)
  store %struct.Memory* %call_485d12, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 485d18	 Bytes: 2
  %loadMem_485d18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d18 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d18)
  store %struct.Memory* %call_485d18, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 485d1a	 Bytes: 3
  %loadMem_485d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d1a = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d1a)
  store %struct.Memory* %call_485d1a, %struct.Memory** %MEMORY

  ; Code: movl -0x29c(%rbp), %eax	 RIP: 485d1d	 Bytes: 6
  %loadMem_485d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d1d = call %struct.Memory* @routine_movl_MINUS0x29c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d1d)
  store %struct.Memory* %call_485d1d, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%r9,%r10,4)	 RIP: 485d23	 Bytes: 4
  %loadMem_485d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d23 = call %struct.Memory* @routine_movl__eax____r9__r10_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d23)
  store %struct.Memory* %call_485d23, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 485d27	 Bytes: 3
  %loadMem_485d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d27 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d27)
  store %struct.Memory* %call_485d27, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d2a	 Bytes: 1
  %loadMem_485d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d2a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d2a)
  store %struct.Memory* %call_485d2a, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d2b	 Bytes: 2
  %loadMem_485d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d2b = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d2b)
  store %struct.Memory* %call_485d2b, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485d2d	 Bytes: 3
  %loadMem_485d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d2d = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d2d)
  store %struct.Memory* %call_485d2d, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485d30	 Bytes: 3
  %loadMem_485d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d30 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d30)
  store %struct.Memory* %call_485d30, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485d33	 Bytes: 2
  %loadMem_485d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d33 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d33)
  store %struct.Memory* %call_485d33, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2ac(%rbp)	 RIP: 485d35	 Bytes: 6
  %loadMem_485d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d35 = call %struct.Memory* @routine_movl__edx__MINUS0x2ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d35)
  store %struct.Memory* %call_485d35, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d3b	 Bytes: 1
  %loadMem_485d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d3b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d3b)
  store %struct.Memory* %call_485d3b, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d3c	 Bytes: 2
  %loadMem_485d3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d3c = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d3c)
  store %struct.Memory* %call_485d3c, %struct.Memory** %MEMORY

  ; Code: movl -0x2ac(%rbp), %edi	 RIP: 485d3e	 Bytes: 6
  %loadMem_485d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d3e = call %struct.Memory* @routine_movl_MINUS0x2ac__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d3e)
  store %struct.Memory* %call_485d3e, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 485d44	 Bytes: 2
  %loadMem_485d44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d44 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d44)
  store %struct.Memory* %call_485d44, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 485d46	 Bytes: 3
  %loadMem_485d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d46 = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d46)
  store %struct.Memory* %call_485d46, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r9	 RIP: 485d49	 Bytes: 4
  %loadMem_485d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d49 = call %struct.Memory* @routine_shlq__0x4___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d49)
  store %struct.Memory* %call_485d49, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 485d4d	 Bytes: 3
  %loadMem_485d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d4d = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d4d)
  store %struct.Memory* %call_485d4d, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485d50	 Bytes: 3
  %loadMem_485d50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d50 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d50)
  store %struct.Memory* %call_485d50, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485d53	 Bytes: 2
  %loadMem_485d53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d53 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d53)
  store %struct.Memory* %call_485d53, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d55	 Bytes: 1
  %loadMem_485d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d55 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d55)
  store %struct.Memory* %call_485d55, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d56	 Bytes: 2
  %loadMem_485d56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d56 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d56)
  store %struct.Memory* %call_485d56, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485d58	 Bytes: 3
  %loadMem_485d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d58 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d58)
  store %struct.Memory* %call_485d58, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485d5b	 Bytes: 3
  %loadMem_485d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d5b = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d5b)
  store %struct.Memory* %call_485d5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2b0(%rbp)	 RIP: 485d5e	 Bytes: 6
  %loadMem_485d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d5e = call %struct.Memory* @routine_movl__eax__MINUS0x2b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d5e)
  store %struct.Memory* %call_485d5e, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485d64	 Bytes: 2
  %loadMem_485d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d64 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d64)
  store %struct.Memory* %call_485d64, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d66	 Bytes: 1
  %loadMem_485d66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d66 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d66)
  store %struct.Memory* %call_485d66, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d67	 Bytes: 2
  %loadMem_485d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d67 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d67)
  store %struct.Memory* %call_485d67, %struct.Memory** %MEMORY

  ; Code: movl -0x2b0(%rbp), %edi	 RIP: 485d69	 Bytes: 6
  %loadMem_485d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d69 = call %struct.Memory* @routine_movl_MINUS0x2b0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d69)
  store %struct.Memory* %call_485d69, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 485d6f	 Bytes: 2
  %loadMem_485d6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d6f = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d6f)
  store %struct.Memory* %call_485d6f, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 485d71	 Bytes: 3
  %loadMem_485d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d71 = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d71)
  store %struct.Memory* %call_485d71, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%r9,4), %eax	 RIP: 485d74	 Bytes: 4
  %loadMem_485d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d74 = call %struct.Memory* @routine_movl___r8__r9_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d74)
  store %struct.Memory* %call_485d74, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 485d78	 Bytes: 3
  %loadMem_485d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d78 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d78)
  store %struct.Memory* %call_485d78, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2b4(%rbp)	 RIP: 485d7b	 Bytes: 6
  %loadMem_485d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d7b = call %struct.Memory* @routine_movl__eax__MINUS0x2b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d7b)
  store %struct.Memory* %call_485d7b, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485d81	 Bytes: 2
  %loadMem_485d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d81 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d81)
  store %struct.Memory* %call_485d81, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d83	 Bytes: 1
  %loadMem_485d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d83 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d83)
  store %struct.Memory* %call_485d83, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d84	 Bytes: 2
  %loadMem_485d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d84 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d84)
  store %struct.Memory* %call_485d84, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485d86	 Bytes: 3
  %loadMem_485d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d86 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d86)
  store %struct.Memory* %call_485d86, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485d89	 Bytes: 3
  %loadMem_485d89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d89 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d89)
  store %struct.Memory* %call_485d89, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485d8c	 Bytes: 2
  %loadMem_485d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d8c = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d8c)
  store %struct.Memory* %call_485d8c, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2b8(%rbp)	 RIP: 485d8e	 Bytes: 6
  %loadMem_485d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d8e = call %struct.Memory* @routine_movl__edx__MINUS0x2b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d8e)
  store %struct.Memory* %call_485d8e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485d94	 Bytes: 1
  %loadMem_485d94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d94 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d94)
  store %struct.Memory* %call_485d94, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485d95	 Bytes: 2
  %loadMem_485d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d95 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d95)
  store %struct.Memory* %call_485d95, %struct.Memory** %MEMORY

  ; Code: movl -0x2b8(%rbp), %edi	 RIP: 485d97	 Bytes: 6
  %loadMem_485d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d97 = call %struct.Memory* @routine_movl_MINUS0x2b8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d97)
  store %struct.Memory* %call_485d97, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 485d9d	 Bytes: 2
  %loadMem_485d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d9d = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d9d)
  store %struct.Memory* %call_485d9d, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 485d9f	 Bytes: 3
  %loadMem_485d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485d9f = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485d9f)
  store %struct.Memory* %call_485d9f, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 485da2	 Bytes: 4
  %loadMem_485da2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485da2 = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485da2)
  store %struct.Memory* %call_485da2, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 485da6	 Bytes: 3
  %loadMem_485da6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485da6 = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485da6)
  store %struct.Memory* %call_485da6, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485da9	 Bytes: 3
  %loadMem_485da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485da9 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485da9)
  store %struct.Memory* %call_485da9, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485dac	 Bytes: 2
  %loadMem_485dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dac = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dac)
  store %struct.Memory* %call_485dac, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485dae	 Bytes: 1
  %loadMem_485dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dae = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dae)
  store %struct.Memory* %call_485dae, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485daf	 Bytes: 2
  %loadMem_485daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485daf = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485daf)
  store %struct.Memory* %call_485daf, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485db1	 Bytes: 3
  %loadMem_485db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485db1 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485db1)
  store %struct.Memory* %call_485db1, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485db4	 Bytes: 3
  %loadMem_485db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485db4 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485db4)
  store %struct.Memory* %call_485db4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2bc(%rbp)	 RIP: 485db7	 Bytes: 6
  %loadMem_485db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485db7 = call %struct.Memory* @routine_movl__eax__MINUS0x2bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485db7)
  store %struct.Memory* %call_485db7, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485dbd	 Bytes: 2
  %loadMem_485dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dbd = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dbd)
  store %struct.Memory* %call_485dbd, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485dbf	 Bytes: 1
  %loadMem_485dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dbf = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dbf)
  store %struct.Memory* %call_485dbf, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485dc0	 Bytes: 2
  %loadMem_485dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dc0 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dc0)
  store %struct.Memory* %call_485dc0, %struct.Memory** %MEMORY

  ; Code: movl -0x2bc(%rbp), %edi	 RIP: 485dc2	 Bytes: 6
  %loadMem_485dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dc2 = call %struct.Memory* @routine_movl_MINUS0x2bc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dc2)
  store %struct.Memory* %call_485dc2, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 485dc8	 Bytes: 2
  %loadMem_485dc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dc8 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dc8)
  store %struct.Memory* %call_485dc8, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 485dca	 Bytes: 3
  %loadMem_485dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dca = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dca)
  store %struct.Memory* %call_485dca, %struct.Memory** %MEMORY

  ; Code: movl -0x2b4(%rbp), %eax	 RIP: 485dcd	 Bytes: 6
  %loadMem_485dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dcd = call %struct.Memory* @routine_movl_MINUS0x2b4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dcd)
  store %struct.Memory* %call_485dcd, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%r8,4)	 RIP: 485dd3	 Bytes: 4
  %loadMem_485dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dd3 = call %struct.Memory* @routine_movl__eax____rcx__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dd3)
  store %struct.Memory* %call_485dd3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485dd7	 Bytes: 7
  %loadMem_485dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dd7 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dd7)
  store %struct.Memory* %call_485dd7, %struct.Memory** %MEMORY

  ; Code: .L_485dde:	 RIP: 485dde	 Bytes: 0
  br label %block_.L_485dde
block_.L_485dde:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 485dde	 Bytes: 4
  %loadMem_485dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485dde = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485dde)
  store %struct.Memory* %call_485dde, %struct.Memory** %MEMORY

  ; Code: jge .L_485e93	 RIP: 485de2	 Bytes: 6
  %loadMem_485de2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485de2 = call %struct.Memory* @routine_jge_.L_485e93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485de2, i8* %BRANCH_TAKEN, i64 177, i64 6, i64 6)
  store %struct.Memory* %call_485de2, %struct.Memory** %MEMORY

  %loadBr_485de2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485de2 = icmp eq i8 %loadBr_485de2, 1
  br i1 %cmpBr_485de2, label %block_.L_485e93, label %block_485de8

block_485de8:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 485de8	 Bytes: 7
  %loadMem_485de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485de8 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485de8)
  store %struct.Memory* %call_485de8, %struct.Memory** %MEMORY

  ; Code: .L_485def:	 RIP: 485def	 Bytes: 0
  br label %block_.L_485def
block_.L_485def:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 485def	 Bytes: 4
  %loadMem_485def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485def = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485def)
  store %struct.Memory* %call_485def, %struct.Memory** %MEMORY

  ; Code: jge .L_485e80	 RIP: 485df3	 Bytes: 6
  %loadMem_485df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485df3 = call %struct.Memory* @routine_jge_.L_485e80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485df3, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_485df3, %struct.Memory** %MEMORY

  %loadBr_485df3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485df3 = icmp eq i8 %loadBr_485df3, 1
  br i1 %cmpBr_485df3, label %block_.L_485e80, label %block_485df9

block_485df9:
  ; Code: movq $0x6d40f0, %rax	 RIP: 485df9	 Bytes: 10
  %loadMem_485df9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485df9 = call %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485df9)
  store %struct.Memory* %call_485df9, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 485e03	 Bytes: 10
  %loadMem_485e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e03 = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e03)
  store %struct.Memory* %call_485e03, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 485e0d	 Bytes: 8
  %loadMem_485e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e0d = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e0d)
  store %struct.Memory* %call_485e0d, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rdx	 RIP: 485e15	 Bytes: 7
  %loadMem_485e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e15 = call %struct.Memory* @routine_addq__0x3338___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e15)
  store %struct.Memory* %call_485e15, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 485e1c	 Bytes: 4
  %loadMem_485e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e1c = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e1c)
  store %struct.Memory* %call_485e1c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 485e20	 Bytes: 4
  %loadMem_485e20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e20 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e20)
  store %struct.Memory* %call_485e20, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 485e24	 Bytes: 3
  %loadMem_485e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e24 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e24)
  store %struct.Memory* %call_485e24, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 485e27	 Bytes: 4
  %loadMem_485e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e27 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e27)
  store %struct.Memory* %call_485e27, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 485e2b	 Bytes: 3
  %loadMem_485e2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e2b = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e2b)
  store %struct.Memory* %call_485e2b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 485e2e	 Bytes: 4
  %loadMem_485e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e2e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e2e)
  store %struct.Memory* %call_485e2e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 485e32	 Bytes: 4
  %loadMem_485e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e32 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e32)
  store %struct.Memory* %call_485e32, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 485e36	 Bytes: 3
  %loadMem_485e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e36 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e36)
  store %struct.Memory* %call_485e36, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 485e39	 Bytes: 4
  %loadMem_485e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e39 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e39)
  store %struct.Memory* %call_485e39, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rdx,4)	 RIP: 485e3d	 Bytes: 3
  %loadMem_485e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e3d = call %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e3d)
  store %struct.Memory* %call_485e3d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485e40	 Bytes: 4
  %loadMem_485e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e40 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e40)
  store %struct.Memory* %call_485e40, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485e44	 Bytes: 4
  %loadMem_485e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e44 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e44)
  store %struct.Memory* %call_485e44, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485e48	 Bytes: 3
  %loadMem_485e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e48 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e48)
  store %struct.Memory* %call_485e48, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485e4b	 Bytes: 4
  %loadMem_485e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e4b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e4b)
  store %struct.Memory* %call_485e4b, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 485e4f	 Bytes: 3
  %loadMem_485e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e4f = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e4f)
  store %struct.Memory* %call_485e4f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 485e52	 Bytes: 8
  %loadMem_485e52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e52 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e52)
  store %struct.Memory* %call_485e52, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rax	 RIP: 485e5a	 Bytes: 6
  %loadMem_485e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e5a = call %struct.Memory* @routine_addq__0x3338___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e5a)
  store %struct.Memory* %call_485e5a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 485e60	 Bytes: 4
  %loadMem_485e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e60 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e60)
  store %struct.Memory* %call_485e60, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 485e64	 Bytes: 4
  %loadMem_485e64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e64 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e64)
  store %struct.Memory* %call_485e64, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 485e68	 Bytes: 3
  %loadMem_485e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e68 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e68)
  store %struct.Memory* %call_485e68, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 485e6b	 Bytes: 4
  %loadMem_485e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e6b = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e6b)
  store %struct.Memory* %call_485e6b, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rax,%rcx,4)	 RIP: 485e6f	 Bytes: 3
  %loadMem_485e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e6f = call %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e6f)
  store %struct.Memory* %call_485e6f, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 485e72	 Bytes: 3
  %loadMem_485e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e72 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e72)
  store %struct.Memory* %call_485e72, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485e75	 Bytes: 3
  %loadMem_485e75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e75 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e75)
  store %struct.Memory* %call_485e75, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 485e78	 Bytes: 3
  %loadMem_485e78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e78 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e78)
  store %struct.Memory* %call_485e78, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485def	 RIP: 485e7b	 Bytes: 5
  %loadMem_485e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e7b = call %struct.Memory* @routine_jmpq_.L_485def(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e7b, i64 -140, i64 5)
  store %struct.Memory* %call_485e7b, %struct.Memory** %MEMORY

  br label %block_.L_485def

  ; Code: .L_485e80:	 RIP: 485e80	 Bytes: 0
block_.L_485e80:

  ; Code: jmpq .L_485e85	 RIP: 485e80	 Bytes: 5
  %loadMem_485e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e80 = call %struct.Memory* @routine_jmpq_.L_485e85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e80, i64 5, i64 5)
  store %struct.Memory* %call_485e80, %struct.Memory** %MEMORY

  br label %block_.L_485e85

  ; Code: .L_485e85:	 RIP: 485e85	 Bytes: 0
block_.L_485e85:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 485e85	 Bytes: 3
  %loadMem_485e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e85 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e85)
  store %struct.Memory* %call_485e85, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 485e88	 Bytes: 3
  %loadMem_485e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e88 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e88)
  store %struct.Memory* %call_485e88, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 485e8b	 Bytes: 3
  %loadMem_485e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e8b = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e8b)
  store %struct.Memory* %call_485e8b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485dde	 RIP: 485e8e	 Bytes: 5
  %loadMem_485e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e8e = call %struct.Memory* @routine_jmpq_.L_485dde(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e8e, i64 -176, i64 5)
  store %struct.Memory* %call_485e8e, %struct.Memory** %MEMORY

  br label %block_.L_485dde

  ; Code: .L_485e93:	 RIP: 485e93	 Bytes: 0
block_.L_485e93:

  ; Code: movl $0x1, %edi	 RIP: 485e93	 Bytes: 5
  %loadMem_485e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e93 = call %struct.Memory* @routine_movl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e93)
  store %struct.Memory* %call_485e93, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 485e98	 Bytes: 3
  %loadMem_485e98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e98 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e98)
  store %struct.Memory* %call_485e98, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %eax	 RIP: 485e9b	 Bytes: 3
  %loadMem_485e9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e9b = call %struct.Memory* @routine_addl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e9b)
  store %struct.Memory* %call_485e9b, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edx	 RIP: 485e9e	 Bytes: 3
  %loadMem_485e9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485e9e = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485e9e)
  store %struct.Memory* %call_485e9e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 485ea1	 Bytes: 2
  %loadMem_485ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ea1 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ea1)
  store %struct.Memory* %call_485ea1, %struct.Memory** %MEMORY

  ; Code: callq .dct_chroma4x4	 RIP: 485ea3	 Bytes: 5
  %loadMem1_485ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_485ea3 = call %struct.Memory* @routine_callq_.dct_chroma4x4(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_485ea3, i64 -504291, i64 5, i64 5)
  store %struct.Memory* %call1_485ea3, %struct.Memory** %MEMORY

  %loadMem2_485ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_485ea3 = load i64, i64* %3
  %call2_485ea3 = call %struct.Memory* @sub_40acc0.dct_chroma4x4(%struct.State* %0, i64  %loadPC_485ea3, %struct.Memory* %loadMem2_485ea3)
  store %struct.Memory* %call2_485ea3, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edx	 RIP: 485ea8	 Bytes: 5
  %loadMem_485ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ea8 = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ea8)
  store %struct.Memory* %call_485ea8, %struct.Memory** %MEMORY

  ; Code: movq $0x7107b0, %rcx	 RIP: 485ead	 Bytes: 10
  %loadMem_485ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ead = call %struct.Memory* @routine_movq__0x7107b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ead)
  store %struct.Memory* %call_485ead, %struct.Memory** %MEMORY

  ; Code: addq $0x40, %rcx	 RIP: 485eb7	 Bytes: 4
  %loadMem_485eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485eb7 = call %struct.Memory* @routine_addq__0x40___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485eb7)
  store %struct.Memory* %call_485eb7, %struct.Memory** %MEMORY

  ; Code: movq $0x6d4600, %r8	 RIP: 485ebb	 Bytes: 10
  %loadMem_485ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ebb = call %struct.Memory* @routine_movq__0x6d4600___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ebb)
  store %struct.Memory* %call_485ebb, %struct.Memory** %MEMORY

  ; Code: addq $0x40, %r8	 RIP: 485ec5	 Bytes: 4
  %loadMem_485ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ec5 = call %struct.Memory* @routine_addq__0x40___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ec5)
  store %struct.Memory* %call_485ec5, %struct.Memory** %MEMORY

  ; Code: movq $0x6d0920, %r9	 RIP: 485ec9	 Bytes: 10
  %loadMem_485ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ec9 = call %struct.Memory* @routine_movq__0x6d0920___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ec9)
  store %struct.Memory* %call_485ec9, %struct.Memory** %MEMORY

  ; Code: addq $0x40, %r9	 RIP: 485ed3	 Bytes: 4
  %loadMem_485ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ed3 = call %struct.Memory* @routine_addq__0x40___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ed3)
  store %struct.Memory* %call_485ed3, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 485ed7	 Bytes: 3
  %loadMem_485ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ed7 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ed7)
  store %struct.Memory* %call_485ed7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c0(%rbp)	 RIP: 485eda	 Bytes: 6
  %loadMem_485eda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485eda = call %struct.Memory* @routine_movl__eax__MINUS0x2c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485eda)
  store %struct.Memory* %call_485eda, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 485ee0	 Bytes: 2
  %loadMem_485ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ee0 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ee0)
  store %struct.Memory* %call_485ee0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2c4(%rbp)	 RIP: 485ee2	 Bytes: 6
  %loadMem_485ee2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ee2 = call %struct.Memory* @routine_movl__edx__MINUS0x2c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ee2)
  store %struct.Memory* %call_485ee2, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485ee8	 Bytes: 1
  %loadMem_485ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ee8 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ee8)
  store %struct.Memory* %call_485ee8, %struct.Memory** %MEMORY

  ; Code: movl -0x2c4(%rbp), %esi	 RIP: 485ee9	 Bytes: 6
  %loadMem_485ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ee9 = call %struct.Memory* @routine_movl_MINUS0x2c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ee9)
  store %struct.Memory* %call_485ee9, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485eef	 Bytes: 2
  %loadMem_485eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485eef = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485eef)
  store %struct.Memory* %call_485eef, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485ef1	 Bytes: 3
  %loadMem_485ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ef1 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ef1)
  store %struct.Memory* %call_485ef1, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485ef4	 Bytes: 3
  %loadMem_485ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ef4 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ef4)
  store %struct.Memory* %call_485ef4, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485ef7	 Bytes: 2
  %loadMem_485ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ef7 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ef7)
  store %struct.Memory* %call_485ef7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2c8(%rbp)	 RIP: 485ef9	 Bytes: 6
  %loadMem_485ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ef9 = call %struct.Memory* @routine_movl__edx__MINUS0x2c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ef9)
  store %struct.Memory* %call_485ef9, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485eff	 Bytes: 1
  %loadMem_485eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485eff = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485eff)
  store %struct.Memory* %call_485eff, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f00	 Bytes: 2
  %loadMem_485f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f00 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f00)
  store %struct.Memory* %call_485f00, %struct.Memory** %MEMORY

  ; Code: movl -0x2c8(%rbp), %edi	 RIP: 485f02	 Bytes: 6
  %loadMem_485f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f02 = call %struct.Memory* @routine_movl_MINUS0x2c8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f02)
  store %struct.Memory* %call_485f02, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 485f08	 Bytes: 2
  %loadMem_485f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f08 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f08)
  store %struct.Memory* %call_485f08, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 485f0a	 Bytes: 3
  %loadMem_485f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f0a = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f0a)
  store %struct.Memory* %call_485f0a, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r10	 RIP: 485f0d	 Bytes: 4
  %loadMem_485f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f0d = call %struct.Memory* @routine_shlq__0x4___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f0d)
  store %struct.Memory* %call_485f0d, %struct.Memory** %MEMORY

  ; Code: addq %r10, %r9	 RIP: 485f11	 Bytes: 3
  %loadMem_485f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f11 = call %struct.Memory* @routine_addq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f11)
  store %struct.Memory* %call_485f11, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485f14	 Bytes: 3
  %loadMem_485f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f14 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f14)
  store %struct.Memory* %call_485f14, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485f17	 Bytes: 2
  %loadMem_485f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f17 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f17)
  store %struct.Memory* %call_485f17, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f19	 Bytes: 1
  %loadMem_485f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f19 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f19)
  store %struct.Memory* %call_485f19, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f1a	 Bytes: 2
  %loadMem_485f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f1a = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f1a)
  store %struct.Memory* %call_485f1a, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485f1c	 Bytes: 3
  %loadMem_485f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f1c = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f1c)
  store %struct.Memory* %call_485f1c, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485f1f	 Bytes: 3
  %loadMem_485f1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f1f = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f1f)
  store %struct.Memory* %call_485f1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2cc(%rbp)	 RIP: 485f22	 Bytes: 6
  %loadMem_485f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f22 = call %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f22)
  store %struct.Memory* %call_485f22, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485f28	 Bytes: 2
  %loadMem_485f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f28 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f28)
  store %struct.Memory* %call_485f28, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f2a	 Bytes: 1
  %loadMem_485f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f2a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f2a)
  store %struct.Memory* %call_485f2a, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f2b	 Bytes: 2
  %loadMem_485f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f2b = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f2b)
  store %struct.Memory* %call_485f2b, %struct.Memory** %MEMORY

  ; Code: movl -0x2cc(%rbp), %edi	 RIP: 485f2d	 Bytes: 6
  %loadMem_485f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f2d = call %struct.Memory* @routine_movl_MINUS0x2cc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f2d)
  store %struct.Memory* %call_485f2d, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 485f33	 Bytes: 2
  %loadMem_485f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f33 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f33)
  store %struct.Memory* %call_485f33, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r10	 RIP: 485f35	 Bytes: 3
  %loadMem_485f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f35 = call %struct.Memory* @routine_movslq__edi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f35)
  store %struct.Memory* %call_485f35, %struct.Memory** %MEMORY

  ; Code: movl -0x2c0(%rbp), %eax	 RIP: 485f38	 Bytes: 6
  %loadMem_485f38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f38 = call %struct.Memory* @routine_movl_MINUS0x2c0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f38)
  store %struct.Memory* %call_485f38, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%r9,%r10,4)	 RIP: 485f3e	 Bytes: 4
  %loadMem_485f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f3e = call %struct.Memory* @routine_movl__eax____r9__r10_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f3e)
  store %struct.Memory* %call_485f3e, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 485f42	 Bytes: 3
  %loadMem_485f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f42 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f42)
  store %struct.Memory* %call_485f42, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f45	 Bytes: 1
  %loadMem_485f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f45 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f45)
  store %struct.Memory* %call_485f45, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f46	 Bytes: 2
  %loadMem_485f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f46 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f46)
  store %struct.Memory* %call_485f46, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485f48	 Bytes: 3
  %loadMem_485f48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f48 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f48)
  store %struct.Memory* %call_485f48, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485f4b	 Bytes: 3
  %loadMem_485f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f4b = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f4b)
  store %struct.Memory* %call_485f4b, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485f4e	 Bytes: 2
  %loadMem_485f4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f4e = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f4e)
  store %struct.Memory* %call_485f4e, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2d0(%rbp)	 RIP: 485f50	 Bytes: 6
  %loadMem_485f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f50 = call %struct.Memory* @routine_movl__edx__MINUS0x2d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f50)
  store %struct.Memory* %call_485f50, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f56	 Bytes: 1
  %loadMem_485f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f56 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f56)
  store %struct.Memory* %call_485f56, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f57	 Bytes: 2
  %loadMem_485f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f57 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f57)
  store %struct.Memory* %call_485f57, %struct.Memory** %MEMORY

  ; Code: movl -0x2d0(%rbp), %edi	 RIP: 485f59	 Bytes: 6
  %loadMem_485f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f59 = call %struct.Memory* @routine_movl_MINUS0x2d0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f59)
  store %struct.Memory* %call_485f59, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 485f5f	 Bytes: 2
  %loadMem_485f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f5f = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f5f)
  store %struct.Memory* %call_485f5f, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 485f61	 Bytes: 3
  %loadMem_485f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f61 = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f61)
  store %struct.Memory* %call_485f61, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r9	 RIP: 485f64	 Bytes: 4
  %loadMem_485f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f64 = call %struct.Memory* @routine_shlq__0x4___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f64)
  store %struct.Memory* %call_485f64, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r8	 RIP: 485f68	 Bytes: 3
  %loadMem_485f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f68 = call %struct.Memory* @routine_addq__r9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f68)
  store %struct.Memory* %call_485f68, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485f6b	 Bytes: 3
  %loadMem_485f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f6b = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f6b)
  store %struct.Memory* %call_485f6b, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485f6e	 Bytes: 2
  %loadMem_485f6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f6e = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f6e)
  store %struct.Memory* %call_485f6e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f70	 Bytes: 1
  %loadMem_485f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f70 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f70)
  store %struct.Memory* %call_485f70, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f71	 Bytes: 2
  %loadMem_485f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f71 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f71)
  store %struct.Memory* %call_485f71, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485f73	 Bytes: 3
  %loadMem_485f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f73 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f73)
  store %struct.Memory* %call_485f73, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485f76	 Bytes: 3
  %loadMem_485f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f76 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f76)
  store %struct.Memory* %call_485f76, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2d4(%rbp)	 RIP: 485f79	 Bytes: 6
  %loadMem_485f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f79 = call %struct.Memory* @routine_movl__eax__MINUS0x2d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f79)
  store %struct.Memory* %call_485f79, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485f7f	 Bytes: 2
  %loadMem_485f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f7f = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f7f)
  store %struct.Memory* %call_485f7f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f81	 Bytes: 1
  %loadMem_485f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f81 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f81)
  store %struct.Memory* %call_485f81, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f82	 Bytes: 2
  %loadMem_485f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f82 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f82)
  store %struct.Memory* %call_485f82, %struct.Memory** %MEMORY

  ; Code: movl -0x2d4(%rbp), %edi	 RIP: 485f84	 Bytes: 6
  %loadMem_485f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f84 = call %struct.Memory* @routine_movl_MINUS0x2d4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f84)
  store %struct.Memory* %call_485f84, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 485f8a	 Bytes: 2
  %loadMem_485f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f8a = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f8a)
  store %struct.Memory* %call_485f8a, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r9	 RIP: 485f8c	 Bytes: 3
  %loadMem_485f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f8c = call %struct.Memory* @routine_movslq__edi___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f8c)
  store %struct.Memory* %call_485f8c, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%r9,4), %eax	 RIP: 485f8f	 Bytes: 4
  %loadMem_485f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f8f = call %struct.Memory* @routine_movl___r8__r9_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f8f)
  store %struct.Memory* %call_485f8f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edi	 RIP: 485f93	 Bytes: 3
  %loadMem_485f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f93 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f93)
  store %struct.Memory* %call_485f93, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2d8(%rbp)	 RIP: 485f96	 Bytes: 6
  %loadMem_485f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f96 = call %struct.Memory* @routine_movl__eax__MINUS0x2d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f96)
  store %struct.Memory* %call_485f96, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485f9c	 Bytes: 2
  %loadMem_485f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f9c = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f9c)
  store %struct.Memory* %call_485f9c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485f9e	 Bytes: 1
  %loadMem_485f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f9e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f9e)
  store %struct.Memory* %call_485f9e, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485f9f	 Bytes: 2
  %loadMem_485f9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485f9f = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485f9f)
  store %struct.Memory* %call_485f9f, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 485fa1	 Bytes: 3
  %loadMem_485fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fa1 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fa1)
  store %struct.Memory* %call_485fa1, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485fa4	 Bytes: 3
  %loadMem_485fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fa4 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fa4)
  store %struct.Memory* %call_485fa4, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485fa7	 Bytes: 2
  %loadMem_485fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fa7 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fa7)
  store %struct.Memory* %call_485fa7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2dc(%rbp)	 RIP: 485fa9	 Bytes: 6
  %loadMem_485fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fa9 = call %struct.Memory* @routine_movl__edx__MINUS0x2dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fa9)
  store %struct.Memory* %call_485fa9, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485faf	 Bytes: 1
  %loadMem_485faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485faf = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485faf)
  store %struct.Memory* %call_485faf, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485fb0	 Bytes: 2
  %loadMem_485fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fb0 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fb0)
  store %struct.Memory* %call_485fb0, %struct.Memory** %MEMORY

  ; Code: movl -0x2dc(%rbp), %edi	 RIP: 485fb2	 Bytes: 6
  %loadMem_485fb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fb2 = call %struct.Memory* @routine_movl_MINUS0x2dc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fb2)
  store %struct.Memory* %call_485fb2, %struct.Memory** %MEMORY

  ; Code: addl %edx, %edi	 RIP: 485fb8	 Bytes: 2
  %loadMem_485fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fb8 = call %struct.Memory* @routine_addl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fb8)
  store %struct.Memory* %call_485fb8, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 485fba	 Bytes: 3
  %loadMem_485fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fba = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fba)
  store %struct.Memory* %call_485fba, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r8	 RIP: 485fbd	 Bytes: 4
  %loadMem_485fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fbd = call %struct.Memory* @routine_shlq__0x4___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fbd)
  store %struct.Memory* %call_485fbd, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rcx	 RIP: 485fc1	 Bytes: 3
  %loadMem_485fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fc1 = call %struct.Memory* @routine_addq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fc1)
  store %struct.Memory* %call_485fc1, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 485fc4	 Bytes: 3
  %loadMem_485fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fc4 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fc4)
  store %struct.Memory* %call_485fc4, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 485fc7	 Bytes: 2
  %loadMem_485fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fc7 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fc7)
  store %struct.Memory* %call_485fc7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485fc9	 Bytes: 1
  %loadMem_485fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fc9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fc9)
  store %struct.Memory* %call_485fc9, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485fca	 Bytes: 2
  %loadMem_485fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fca = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fca)
  store %struct.Memory* %call_485fca, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 485fcc	 Bytes: 3
  %loadMem_485fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fcc = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fcc)
  store %struct.Memory* %call_485fcc, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %edi	 RIP: 485fcf	 Bytes: 3
  %loadMem_485fcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fcf = call %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fcf)
  store %struct.Memory* %call_485fcf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e0(%rbp)	 RIP: 485fd2	 Bytes: 6
  %loadMem_485fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fd2 = call %struct.Memory* @routine_movl__eax__MINUS0x2e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fd2)
  store %struct.Memory* %call_485fd2, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 485fd8	 Bytes: 2
  %loadMem_485fd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fd8 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fd8)
  store %struct.Memory* %call_485fd8, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 485fda	 Bytes: 1
  %loadMem_485fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fda = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fda)
  store %struct.Memory* %call_485fda, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 485fdb	 Bytes: 2
  %loadMem_485fdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fdb = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fdb)
  store %struct.Memory* %call_485fdb, %struct.Memory** %MEMORY

  ; Code: movl -0x2e0(%rbp), %edi	 RIP: 485fdd	 Bytes: 6
  %loadMem_485fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fdd = call %struct.Memory* @routine_movl_MINUS0x2e0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fdd)
  store %struct.Memory* %call_485fdd, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edi	 RIP: 485fe3	 Bytes: 2
  %loadMem_485fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fe3 = call %struct.Memory* @routine_addl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fe3)
  store %struct.Memory* %call_485fe3, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %r8	 RIP: 485fe5	 Bytes: 3
  %loadMem_485fe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fe5 = call %struct.Memory* @routine_movslq__edi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fe5)
  store %struct.Memory* %call_485fe5, %struct.Memory** %MEMORY

  ; Code: movl -0x2d8(%rbp), %eax	 RIP: 485fe8	 Bytes: 6
  %loadMem_485fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fe8 = call %struct.Memory* @routine_movl_MINUS0x2d8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fe8)
  store %struct.Memory* %call_485fe8, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%r8,4)	 RIP: 485fee	 Bytes: 4
  %loadMem_485fee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485fee = call %struct.Memory* @routine_movl__eax____rcx__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485fee)
  store %struct.Memory* %call_485fee, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 485ff2	 Bytes: 7
  %loadMem_485ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ff2 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ff2)
  store %struct.Memory* %call_485ff2, %struct.Memory** %MEMORY

  ; Code: .L_485ff9:	 RIP: 485ff9	 Bytes: 0
  br label %block_.L_485ff9
block_.L_485ff9:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 485ff9	 Bytes: 4
  %loadMem_485ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ff9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ff9)
  store %struct.Memory* %call_485ff9, %struct.Memory** %MEMORY

  ; Code: jge .L_486072	 RIP: 485ffd	 Bytes: 6
  %loadMem_485ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_485ffd = call %struct.Memory* @routine_jge_.L_486072(%struct.State* %0, i64  0, %struct.Memory* %loadMem_485ffd, i8* %BRANCH_TAKEN, i64 117, i64 6, i64 6)
  store %struct.Memory* %call_485ffd, %struct.Memory** %MEMORY

  %loadBr_485ffd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_485ffd = icmp eq i8 %loadBr_485ffd, 1
  br i1 %cmpBr_485ffd, label %block_.L_486072, label %block_486003

block_486003:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 486003	 Bytes: 7
  %loadMem_486003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486003 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486003)
  store %struct.Memory* %call_486003, %struct.Memory** %MEMORY

  ; Code: .L_48600a:	 RIP: 48600a	 Bytes: 0
  br label %block_.L_48600a
block_.L_48600a:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 48600a	 Bytes: 4
  %loadMem_48600a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48600a = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48600a)
  store %struct.Memory* %call_48600a, %struct.Memory** %MEMORY

  ; Code: jge .L_48605f	 RIP: 48600e	 Bytes: 6
  %loadMem_48600e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48600e = call %struct.Memory* @routine_jge_.L_48605f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48600e, i8* %BRANCH_TAKEN, i64 81, i64 6, i64 6)
  store %struct.Memory* %call_48600e, %struct.Memory** %MEMORY

  %loadBr_48600e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48600e = icmp eq i8 %loadBr_48600e, 1
  br i1 %cmpBr_48600e, label %block_.L_48605f, label %block_486014

block_486014:
  ; Code: movq $0x6d2ec0, %rax	 RIP: 486014	 Bytes: 10
  %loadMem_486014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486014 = call %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486014)
  store %struct.Memory* %call_486014, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 48601e	 Bytes: 8
  %loadMem_48601e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48601e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48601e)
  store %struct.Memory* %call_48601e, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 486026	 Bytes: 7
  %loadMem_486026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486026 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486026)
  store %struct.Memory* %call_486026, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 48602d	 Bytes: 4
  %loadMem_48602d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48602d = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48602d)
  store %struct.Memory* %call_48602d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 486031	 Bytes: 4
  %loadMem_486031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486031 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486031)
  store %struct.Memory* %call_486031, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486035	 Bytes: 3
  %loadMem_486035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486035 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486035)
  store %struct.Memory* %call_486035, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 486038	 Bytes: 4
  %loadMem_486038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486038 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486038)
  store %struct.Memory* %call_486038, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 48603c	 Bytes: 3
  %loadMem_48603c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48603c = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48603c)
  store %struct.Memory* %call_48603c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48603f	 Bytes: 4
  %loadMem_48603f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48603f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48603f)
  store %struct.Memory* %call_48603f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 486043	 Bytes: 4
  %loadMem_486043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486043 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486043)
  store %struct.Memory* %call_486043, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 486047	 Bytes: 3
  %loadMem_486047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486047 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486047)
  store %struct.Memory* %call_486047, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48604a	 Bytes: 4
  %loadMem_48604a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48604a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48604a)
  store %struct.Memory* %call_48604a, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 48604e	 Bytes: 3
  %loadMem_48604e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48604e = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48604e)
  store %struct.Memory* %call_48604e, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 486051	 Bytes: 3
  %loadMem_486051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486051 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486051)
  store %struct.Memory* %call_486051, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486054	 Bytes: 3
  %loadMem_486054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486054 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486054)
  store %struct.Memory* %call_486054, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 486057	 Bytes: 3
  %loadMem_486057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486057 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486057)
  store %struct.Memory* %call_486057, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48600a	 RIP: 48605a	 Bytes: 5
  %loadMem_48605a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48605a = call %struct.Memory* @routine_jmpq_.L_48600a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48605a, i64 -80, i64 5)
  store %struct.Memory* %call_48605a, %struct.Memory** %MEMORY

  br label %block_.L_48600a

  ; Code: .L_48605f:	 RIP: 48605f	 Bytes: 0
block_.L_48605f:

  ; Code: jmpq .L_486064	 RIP: 48605f	 Bytes: 5
  %loadMem_48605f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48605f = call %struct.Memory* @routine_jmpq_.L_486064(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48605f, i64 5, i64 5)
  store %struct.Memory* %call_48605f, %struct.Memory** %MEMORY

  br label %block_.L_486064

  ; Code: .L_486064:	 RIP: 486064	 Bytes: 0
block_.L_486064:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 486064	 Bytes: 3
  %loadMem_486064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486064 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486064)
  store %struct.Memory* %call_486064, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486067	 Bytes: 3
  %loadMem_486067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486067 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486067)
  store %struct.Memory* %call_486067, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 48606a	 Bytes: 3
  %loadMem_48606a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48606a = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48606a)
  store %struct.Memory* %call_48606a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_485ff9	 RIP: 48606d	 Bytes: 5
  %loadMem_48606d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48606d = call %struct.Memory* @routine_jmpq_.L_485ff9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48606d, i64 -116, i64 5)
  store %struct.Memory* %call_48606d, %struct.Memory** %MEMORY

  br label %block_.L_485ff9

  ; Code: .L_486072:	 RIP: 486072	 Bytes: 0
block_.L_486072:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 486072	 Bytes: 7
  %loadMem_486072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486072 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486072)
  store %struct.Memory* %call_486072, %struct.Memory** %MEMORY

  ; Code: .L_486079:	 RIP: 486079	 Bytes: 0
  br label %block_.L_486079
block_.L_486079:

  ; Code: cmpl $0x4, -0x30(%rbp)	 RIP: 486079	 Bytes: 4
  %loadMem_486079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486079 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486079)
  store %struct.Memory* %call_486079, %struct.Memory** %MEMORY

  ; Code: jge .L_486701	 RIP: 48607d	 Bytes: 6
  %loadMem_48607d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48607d = call %struct.Memory* @routine_jge_.L_486701(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48607d, i8* %BRANCH_TAKEN, i64 1668, i64 6, i64 6)
  store %struct.Memory* %call_48607d, %struct.Memory** %MEMORY

  %loadBr_48607d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48607d = icmp eq i8 %loadBr_48607d, 1
  br i1 %cmpBr_48607d, label %block_.L_486701, label %block_486083

block_486083:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 486083	 Bytes: 7
  %loadMem_486083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486083 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486083)
  store %struct.Memory* %call_486083, %struct.Memory** %MEMORY

  ; Code: .L_48608a:	 RIP: 48608a	 Bytes: 0
  br label %block_.L_48608a
block_.L_48608a:

  ; Code: cmpl $0x4, -0x2c(%rbp)	 RIP: 48608a	 Bytes: 4
  %loadMem_48608a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48608a = call %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48608a)
  store %struct.Memory* %call_48608a, %struct.Memory** %MEMORY

  ; Code: jge .L_4866ee	 RIP: 48608e	 Bytes: 6
  %loadMem_48608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48608e = call %struct.Memory* @routine_jge_.L_4866ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48608e, i8* %BRANCH_TAKEN, i64 1632, i64 6, i64 6)
  store %struct.Memory* %call_48608e, %struct.Memory** %MEMORY

  %loadBr_48608e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48608e = icmp eq i8 %loadBr_48608e, 1
  br i1 %cmpBr_48608e, label %block_.L_4866ee, label %block_486094

block_486094:
  ; Code: xorl %eax, %eax	 RIP: 486094	 Bytes: 2
  %loadMem_486094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486094 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486094)
  store %struct.Memory* %call_486094, %struct.Memory** %MEMORY

  ; Code: movq $0x6f8f20, %rcx	 RIP: 486096	 Bytes: 10
  %loadMem_486096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486096 = call %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486096)
  store %struct.Memory* %call_486096, %struct.Memory** %MEMORY

  ; Code: movq $0x6d2ec0, %rdx	 RIP: 4860a0	 Bytes: 10
  %loadMem_4860a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860a0 = call %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860a0)
  store %struct.Memory* %call_4860a0, %struct.Memory** %MEMORY

  ; Code: movq $0x722ff0, %rsi	 RIP: 4860aa	 Bytes: 10
  %loadMem_4860aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860aa = call %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860aa)
  store %struct.Memory* %call_4860aa, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 4860b4	 Bytes: 4
  %loadMem_4860b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860b4 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860b4)
  store %struct.Memory* %call_4860b4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 4860b8	 Bytes: 4
  %loadMem_4860b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860b8 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860b8)
  store %struct.Memory* %call_4860b8, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 4860bc	 Bytes: 3
  %loadMem_4860bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860bc = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860bc)
  store %struct.Memory* %call_4860bc, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 4860bf	 Bytes: 4
  %loadMem_4860bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860bf = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860bf)
  store %struct.Memory* %call_4860bf, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdi,4), %r8d	 RIP: 4860c3	 Bytes: 4
  %loadMem_4860c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860c3 = call %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860c3)
  store %struct.Memory* %call_4860c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4860c7	 Bytes: 4
  %loadMem_4860c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860c7 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860c7)
  store %struct.Memory* %call_4860c7, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4860cb	 Bytes: 4
  %loadMem_4860cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860cb = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860cb)
  store %struct.Memory* %call_4860cb, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 4860cf	 Bytes: 3
  %loadMem_4860cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860cf = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860cf)
  store %struct.Memory* %call_4860cf, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdi	 RIP: 4860d2	 Bytes: 3
  %loadMem_4860d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860d2 = call %struct.Memory* @routine_addq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860d2)
  store %struct.Memory* %call_4860d2, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4860d5	 Bytes: 4
  %loadMem_4860d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860d5 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860d5)
  store %struct.Memory* %call_4860d5, %struct.Memory** %MEMORY

  ; Code: movl (%rdi,%rsi,4), %r9d	 RIP: 4860d9	 Bytes: 4
  %loadMem_4860d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860d9 = call %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860d9)
  store %struct.Memory* %call_4860d9, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 4860dd	 Bytes: 4
  %loadMem_4860dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860dd = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860dd)
  store %struct.Memory* %call_4860dd, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 4860e1	 Bytes: 3
  %loadMem_4860e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860e1 = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860e1)
  store %struct.Memory* %call_4860e1, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x168(%rbp)	 RIP: 4860e4	 Bytes: 7
  %loadMem_4860e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860e4 = call %struct.Memory* @routine_movl__r8d__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860e4)
  store %struct.Memory* %call_4860e4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 4860eb	 Bytes: 4
  %loadMem_4860eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860eb = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860eb)
  store %struct.Memory* %call_4860eb, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4860ef	 Bytes: 4
  %loadMem_4860ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860ef = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860ef)
  store %struct.Memory* %call_4860ef, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4860f3	 Bytes: 3
  %loadMem_4860f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860f3 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860f3)
  store %struct.Memory* %call_4860f3, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 4860f6	 Bytes: 4
  %loadMem_4860f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860f6 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860f6)
  store %struct.Memory* %call_4860f6, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %r8d	 RIP: 4860fa	 Bytes: 4
  %loadMem_4860fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860fa = call %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860fa)
  store %struct.Memory* %call_4860fa, %struct.Memory** %MEMORY

  ; Code: addl -0x168(%rbp), %r8d	 RIP: 4860fe	 Bytes: 7
  %loadMem_4860fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4860fe = call %struct.Memory* @routine_addl_MINUS0x168__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4860fe)
  store %struct.Memory* %call_4860fe, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x158(%rbp)	 RIP: 486105	 Bytes: 7
  %loadMem_486105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486105 = call %struct.Memory* @routine_movl__r8d__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486105)
  store %struct.Memory* %call_486105, %struct.Memory** %MEMORY

  ; Code: movl -0x168(%rbp), %r8d	 RIP: 48610c	 Bytes: 7
  %loadMem_48610c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48610c = call %struct.Memory* @routine_movl_MINUS0x168__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48610c)
  store %struct.Memory* %call_48610c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 486113	 Bytes: 4
  %loadMem_486113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486113 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486113)
  store %struct.Memory* %call_486113, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 486117	 Bytes: 4
  %loadMem_486117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486117 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486117)
  store %struct.Memory* %call_486117, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 48611b	 Bytes: 3
  %loadMem_48611b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48611b = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48611b)
  store %struct.Memory* %call_48611b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 48611e	 Bytes: 3
  %loadMem_48611e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48611e = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48611e)
  store %struct.Memory* %call_48611e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 486121	 Bytes: 4
  %loadMem_486121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486121 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486121)
  store %struct.Memory* %call_486121, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %r9d	 RIP: 486125	 Bytes: 4
  %loadMem_486125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486125 = call %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486125)
  store %struct.Memory* %call_486125, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %r9d	 RIP: 486129	 Bytes: 4
  %loadMem_486129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486129 = call %struct.Memory* @routine_sarl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486129)
  store %struct.Memory* %call_486129, %struct.Memory** %MEMORY

  ; Code: subl %r9d, %r8d	 RIP: 48612d	 Bytes: 3
  %loadMem_48612d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48612d = call %struct.Memory* @routine_subl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48612d)
  store %struct.Memory* %call_48612d, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x15c(%rbp)	 RIP: 486130	 Bytes: 7
  %loadMem_486130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486130 = call %struct.Memory* @routine_movl__r8d__MINUS0x15c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486130)
  store %struct.Memory* %call_486130, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %r8d	 RIP: 486137	 Bytes: 7
  %loadMem_486137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486137 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486137)
  store %struct.Memory* %call_486137, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 48613e	 Bytes: 4
  %loadMem_48613e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48613e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48613e)
  store %struct.Memory* %call_48613e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 486142	 Bytes: 4
  %loadMem_486142 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486142 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486142)
  store %struct.Memory* %call_486142, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486146	 Bytes: 3
  %loadMem_486146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486146 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486146)
  store %struct.Memory* %call_486146, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 486149	 Bytes: 4
  %loadMem_486149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486149 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486149)
  store %struct.Memory* %call_486149, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %r8d	 RIP: 48614d	 Bytes: 4
  %loadMem_48614d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48614d = call %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48614d)
  store %struct.Memory* %call_48614d, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x154(%rbp)	 RIP: 486151	 Bytes: 7
  %loadMem_486151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486151 = call %struct.Memory* @routine_movl__r8d__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486151)
  store %struct.Memory* %call_486151, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 486158	 Bytes: 8
  %loadMem_486158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486158 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486158)
  store %struct.Memory* %call_486158, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rcx), %r8d	 RIP: 486160	 Bytes: 7
  %loadMem_486160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486160 = call %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486160)
  store %struct.Memory* %call_486160, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %r9d	 RIP: 486167	 Bytes: 7
  %loadMem_486167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486167 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486167)
  store %struct.Memory* %call_486167, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 48616e	 Bytes: 8
  %loadMem_48616e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48616e = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48616e)
  store %struct.Memory* %call_48616e, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 486176	 Bytes: 7
  %loadMem_486176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486176 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486176)
  store %struct.Memory* %call_486176, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 48617d	 Bytes: 7
  %loadMem_48617d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48617d = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48617d)
  store %struct.Memory* %call_48617d, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 486184	 Bytes: 4
  %loadMem_486184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486184 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486184)
  store %struct.Memory* %call_486184, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486188	 Bytes: 3
  %loadMem_486188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486188 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486188)
  store %struct.Memory* %call_486188, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r10d	 RIP: 48618b	 Bytes: 7
  %loadMem_48618b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48618b = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48618b)
  store %struct.Memory* %call_48618b, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r10d	 RIP: 486192	 Bytes: 4
  %loadMem_486192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486192 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486192)
  store %struct.Memory* %call_486192, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 486196	 Bytes: 3
  %loadMem_486196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486196 = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486196)
  store %struct.Memory* %call_486196, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 486199	 Bytes: 4
  %loadMem_486199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486199 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486199)
  store %struct.Memory* %call_486199, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 48619d	 Bytes: 3
  %loadMem_48619d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48619d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48619d)
  store %struct.Memory* %call_48619d, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r10d	 RIP: 4861a0	 Bytes: 7
  %loadMem_4861a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861a0 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861a0)
  store %struct.Memory* %call_4861a0, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r10d	 RIP: 4861a7	 Bytes: 4
  %loadMem_4861a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861a7 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861a7)
  store %struct.Memory* %call_4861a7, %struct.Memory** %MEMORY

  ; Code: movslq %r10d, %rdx	 RIP: 4861ab	 Bytes: 3
  %loadMem_4861ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861ab = call %struct.Memory* @routine_movslq__r10d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861ab)
  store %struct.Memory* %call_4861ab, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %r10d	 RIP: 4861ae	 Bytes: 5
  %loadMem_4861ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861ae = call %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861ae)
  store %struct.Memory* %call_4861ae, %struct.Memory** %MEMORY

  ; Code: addl %r10d, %r9d	 RIP: 4861b3	 Bytes: 3
  %loadMem_4861b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861b3 = call %struct.Memory* @routine_addl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861b3)
  store %struct.Memory* %call_4861b3, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %eax	 RIP: 4861b6	 Bytes: 3
  %loadMem_4861b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861b6 = call %struct.Memory* @routine_cmpl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861b6)
  store %struct.Memory* %call_4861b6, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x2e4(%rbp)	 RIP: 4861b9	 Bytes: 7
  %loadMem_4861b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861b9 = call %struct.Memory* @routine_movl__r8d__MINUS0x2e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861b9)
  store %struct.Memory* %call_4861b9, %struct.Memory** %MEMORY

  ; Code: jle .L_4861d3	 RIP: 4861c0	 Bytes: 6
  %loadMem_4861c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861c0 = call %struct.Memory* @routine_jle_.L_4861d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861c0, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_4861c0, %struct.Memory** %MEMORY

  %loadBr_4861c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4861c0 = icmp eq i8 %loadBr_4861c0, 1
  br i1 %cmpBr_4861c0, label %block_.L_4861d3, label %block_4861c6

block_4861c6:
  ; Code: xorl %eax, %eax	 RIP: 4861c6	 Bytes: 2
  %loadMem_4861c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861c6 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861c6)
  store %struct.Memory* %call_4861c6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e8(%rbp)	 RIP: 4861c8	 Bytes: 6
  %loadMem_4861c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861c8 = call %struct.Memory* @routine_movl__eax__MINUS0x2e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861c8)
  store %struct.Memory* %call_4861c8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486221	 RIP: 4861ce	 Bytes: 5
  %loadMem_4861ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861ce = call %struct.Memory* @routine_jmpq_.L_486221(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861ce, i64 83, i64 5)
  store %struct.Memory* %call_4861ce, %struct.Memory** %MEMORY

  br label %block_.L_486221

  ; Code: .L_4861d3:	 RIP: 4861d3	 Bytes: 0
block_.L_4861d3:

  ; Code: movl -0x15c(%rbp), %eax	 RIP: 4861d3	 Bytes: 6
  %loadMem_4861d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861d3 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861d3)
  store %struct.Memory* %call_4861d3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4861d9	 Bytes: 8
  %loadMem_4861d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861d9 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861d9)
  store %struct.Memory* %call_4861d9, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4861e1	 Bytes: 7
  %loadMem_4861e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861e1 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861e1)
  store %struct.Memory* %call_4861e1, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 4861e8	 Bytes: 7
  %loadMem_4861e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861e8 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861e8)
  store %struct.Memory* %call_4861e8, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4861ef	 Bytes: 4
  %loadMem_4861ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861ef = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861ef)
  store %struct.Memory* %call_4861ef, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4861f3	 Bytes: 3
  %loadMem_4861f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861f3 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861f3)
  store %struct.Memory* %call_4861f3, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 4861f6	 Bytes: 6
  %loadMem_4861f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861f6 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861f6)
  store %struct.Memory* %call_4861f6, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4861fc	 Bytes: 3
  %loadMem_4861fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861fc = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861fc)
  store %struct.Memory* %call_4861fc, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4861ff	 Bytes: 3
  %loadMem_4861ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4861ff = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4861ff)
  store %struct.Memory* %call_4861ff, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 486202	 Bytes: 4
  %loadMem_486202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486202 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486202)
  store %struct.Memory* %call_486202, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486206	 Bytes: 3
  %loadMem_486206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486206 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486206)
  store %struct.Memory* %call_486206, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 486209	 Bytes: 6
  %loadMem_486209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486209 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486209)
  store %struct.Memory* %call_486209, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 48620f	 Bytes: 3
  %loadMem_48620f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48620f = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48620f)
  store %struct.Memory* %call_48620f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 486212	 Bytes: 3
  %loadMem_486212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486212 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486212)
  store %struct.Memory* %call_486212, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 486215	 Bytes: 4
  %loadMem_486215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486215 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486215)
  store %struct.Memory* %call_486215, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 486219	 Bytes: 2
  %loadMem_486219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486219 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486219)
  store %struct.Memory* %call_486219, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e8(%rbp)	 RIP: 48621b	 Bytes: 6
  %loadMem_48621b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48621b = call %struct.Memory* @routine_movl__eax__MINUS0x2e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48621b)
  store %struct.Memory* %call_48621b, %struct.Memory** %MEMORY

  ; Code: .L_486221:	 RIP: 486221	 Bytes: 0
  br label %block_.L_486221
block_.L_486221:

  ; Code: movl -0x2e8(%rbp), %eax	 RIP: 486221	 Bytes: 6
  %loadMem_486221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486221 = call %struct.Memory* @routine_movl_MINUS0x2e8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486221)
  store %struct.Memory* %call_486221, %struct.Memory** %MEMORY

  ; Code: movl -0x2e4(%rbp), %ecx	 RIP: 486227	 Bytes: 6
  %loadMem_486227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486227 = call %struct.Memory* @routine_movl_MINUS0x2e4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486227)
  store %struct.Memory* %call_486227, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 48622d	 Bytes: 2
  %loadMem_48622d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48622d = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48622d)
  store %struct.Memory* %call_48622d, %struct.Memory** %MEMORY

  ; Code: jge .L_48624e	 RIP: 48622f	 Bytes: 6
  %loadMem_48622f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48622f = call %struct.Memory* @routine_jge_.L_48624e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48622f, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_48622f, %struct.Memory** %MEMORY

  %loadBr_48622f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48622f = icmp eq i8 %loadBr_48622f, 1
  br i1 %cmpBr_48622f, label %block_.L_48624e, label %block_486235

block_486235:
  ; Code: movq 0x6cb900, %rax	 RIP: 486235	 Bytes: 8
  %loadMem_486235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486235 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486235)
  store %struct.Memory* %call_486235, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 48623d	 Bytes: 6
  %loadMem_48623d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48623d = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48623d)
  store %struct.Memory* %call_48623d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2ec(%rbp)	 RIP: 486243	 Bytes: 6
  %loadMem_486243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486243 = call %struct.Memory* @routine_movl__ecx__MINUS0x2ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486243)
  store %struct.Memory* %call_486243, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486307	 RIP: 486249	 Bytes: 5
  %loadMem_486249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486249 = call %struct.Memory* @routine_jmpq_.L_486307(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486249, i64 190, i64 5)
  store %struct.Memory* %call_486249, %struct.Memory** %MEMORY

  br label %block_.L_486307

  ; Code: .L_48624e:	 RIP: 48624e	 Bytes: 0
block_.L_48624e:

  ; Code: xorl %eax, %eax	 RIP: 48624e	 Bytes: 2
  %loadMem_48624e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48624e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48624e)
  store %struct.Memory* %call_48624e, %struct.Memory** %MEMORY

  ; Code: movl -0x15c(%rbp), %ecx	 RIP: 486250	 Bytes: 6
  %loadMem_486250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486250 = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486250)
  store %struct.Memory* %call_486250, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 486256	 Bytes: 8
  %loadMem_486256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486256 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486256)
  store %struct.Memory* %call_486256, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 48625e	 Bytes: 7
  %loadMem_48625e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48625e = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48625e)
  store %struct.Memory* %call_48625e, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rsi	 RIP: 486265	 Bytes: 7
  %loadMem_486265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486265 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486265)
  store %struct.Memory* %call_486265, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 48626c	 Bytes: 4
  %loadMem_48626c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48626c = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48626c)
  store %struct.Memory* %call_48626c, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 486270	 Bytes: 3
  %loadMem_486270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486270 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486270)
  store %struct.Memory* %call_486270, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edi	 RIP: 486273	 Bytes: 6
  %loadMem_486273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486273 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486273)
  store %struct.Memory* %call_486273, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 486279	 Bytes: 3
  %loadMem_486279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486279 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486279)
  store %struct.Memory* %call_486279, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 48627c	 Bytes: 3
  %loadMem_48627c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48627c = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48627c)
  store %struct.Memory* %call_48627c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 48627f	 Bytes: 4
  %loadMem_48627f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48627f = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48627f)
  store %struct.Memory* %call_48627f, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 486283	 Bytes: 3
  %loadMem_486283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486283 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486283)
  store %struct.Memory* %call_486283, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %edi	 RIP: 486286	 Bytes: 6
  %loadMem_486286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486286 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486286)
  store %struct.Memory* %call_486286, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 48628c	 Bytes: 3
  %loadMem_48628c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48628c = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48628c)
  store %struct.Memory* %call_48628c, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 48628f	 Bytes: 3
  %loadMem_48628f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48628f = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48628f)
  store %struct.Memory* %call_48628f, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 486292	 Bytes: 4
  %loadMem_486292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486292 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486292)
  store %struct.Memory* %call_486292, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 486296	 Bytes: 2
  %loadMem_486296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486296 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486296)
  store %struct.Memory* %call_486296, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 486298	 Bytes: 2
  %loadMem_486298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486298 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486298)
  store %struct.Memory* %call_486298, %struct.Memory** %MEMORY

  ; Code: jle .L_4862ad	 RIP: 48629a	 Bytes: 6
  %loadMem_48629a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48629a = call %struct.Memory* @routine_jle_.L_4862ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48629a, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_48629a, %struct.Memory** %MEMORY

  %loadBr_48629a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_48629a = icmp eq i8 %loadBr_48629a, 1
  br i1 %cmpBr_48629a, label %block_.L_4862ad, label %block_4862a0

block_4862a0:
  ; Code: xorl %eax, %eax	 RIP: 4862a0	 Bytes: 2
  %loadMem_4862a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862a0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862a0)
  store %struct.Memory* %call_4862a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f0(%rbp)	 RIP: 4862a2	 Bytes: 6
  %loadMem_4862a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862a2 = call %struct.Memory* @routine_movl__eax__MINUS0x2f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862a2)
  store %struct.Memory* %call_4862a2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4862fb	 RIP: 4862a8	 Bytes: 5
  %loadMem_4862a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862a8 = call %struct.Memory* @routine_jmpq_.L_4862fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862a8, i64 83, i64 5)
  store %struct.Memory* %call_4862a8, %struct.Memory** %MEMORY

  br label %block_.L_4862fb

  ; Code: .L_4862ad:	 RIP: 4862ad	 Bytes: 0
block_.L_4862ad:

  ; Code: movl -0x15c(%rbp), %eax	 RIP: 4862ad	 Bytes: 6
  %loadMem_4862ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862ad = call %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862ad)
  store %struct.Memory* %call_4862ad, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4862b3	 Bytes: 8
  %loadMem_4862b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862b3 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862b3)
  store %struct.Memory* %call_4862b3, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 4862bb	 Bytes: 7
  %loadMem_4862bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862bb = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862bb)
  store %struct.Memory* %call_4862bb, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 4862c2	 Bytes: 7
  %loadMem_4862c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862c2 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862c2)
  store %struct.Memory* %call_4862c2, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4862c9	 Bytes: 4
  %loadMem_4862c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862c9 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862c9)
  store %struct.Memory* %call_4862c9, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4862cd	 Bytes: 3
  %loadMem_4862cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862cd = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862cd)
  store %struct.Memory* %call_4862cd, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 4862d0	 Bytes: 6
  %loadMem_4862d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862d0 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862d0)
  store %struct.Memory* %call_4862d0, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 4862d6	 Bytes: 3
  %loadMem_4862d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862d6 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862d6)
  store %struct.Memory* %call_4862d6, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4862d9	 Bytes: 3
  %loadMem_4862d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862d9 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862d9)
  store %struct.Memory* %call_4862d9, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4862dc	 Bytes: 4
  %loadMem_4862dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862dc = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862dc)
  store %struct.Memory* %call_4862dc, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4862e0	 Bytes: 3
  %loadMem_4862e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862e0 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862e0)
  store %struct.Memory* %call_4862e0, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 4862e3	 Bytes: 6
  %loadMem_4862e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862e3 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862e3)
  store %struct.Memory* %call_4862e3, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 4862e9	 Bytes: 3
  %loadMem_4862e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862e9 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862e9)
  store %struct.Memory* %call_4862e9, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4862ec	 Bytes: 3
  %loadMem_4862ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862ec = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862ec)
  store %struct.Memory* %call_4862ec, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4862ef	 Bytes: 4
  %loadMem_4862ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862ef = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862ef)
  store %struct.Memory* %call_4862ef, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4862f3	 Bytes: 2
  %loadMem_4862f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862f3 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862f3)
  store %struct.Memory* %call_4862f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f0(%rbp)	 RIP: 4862f5	 Bytes: 6
  %loadMem_4862f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862f5 = call %struct.Memory* @routine_movl__eax__MINUS0x2f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862f5)
  store %struct.Memory* %call_4862f5, %struct.Memory** %MEMORY

  ; Code: .L_4862fb:	 RIP: 4862fb	 Bytes: 0
  br label %block_.L_4862fb
block_.L_4862fb:

  ; Code: movl -0x2f0(%rbp), %eax	 RIP: 4862fb	 Bytes: 6
  %loadMem_4862fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4862fb = call %struct.Memory* @routine_movl_MINUS0x2f0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4862fb)
  store %struct.Memory* %call_4862fb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ec(%rbp)	 RIP: 486301	 Bytes: 6
  %loadMem_486301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486301 = call %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486301)
  store %struct.Memory* %call_486301, %struct.Memory** %MEMORY

  ; Code: .L_486307:	 RIP: 486307	 Bytes: 0
  br label %block_.L_486307
block_.L_486307:

  ; Code: movl -0x2ec(%rbp), %eax	 RIP: 486307	 Bytes: 6
  %loadMem_486307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486307 = call %struct.Memory* @routine_movl_MINUS0x2ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486307)
  store %struct.Memory* %call_486307, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 48630d	 Bytes: 2
  %loadMem_48630d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48630d = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48630d)
  store %struct.Memory* %call_48630d, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 48630f	 Bytes: 3
  %loadMem_48630f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48630f = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48630f)
  store %struct.Memory* %call_48630f, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 486312	 Bytes: 8
  %loadMem_486312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486312 = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486312)
  store %struct.Memory* %call_486312, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rsi), %rsi	 RIP: 48631a	 Bytes: 7
  %loadMem_48631a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48631a = call %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48631a)
  store %struct.Memory* %call_48631a, %struct.Memory** %MEMORY

  ; Code: movq (%rsi), %rsi	 RIP: 486321	 Bytes: 3
  %loadMem_486321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486321 = call %struct.Memory* @routine_movq___rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486321)
  store %struct.Memory* %call_486321, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 486324	 Bytes: 6
  %loadMem_486324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486324 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486324)
  store %struct.Memory* %call_486324, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 48632a	 Bytes: 3
  %loadMem_48632a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48632a = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48632a)
  store %struct.Memory* %call_48632a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 48632d	 Bytes: 3
  %loadMem_48632d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48632d = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48632d)
  store %struct.Memory* %call_48632d, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 486330	 Bytes: 4
  %loadMem_486330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486330 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486330)
  store %struct.Memory* %call_486330, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 486334	 Bytes: 6
  %loadMem_486334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486334 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486334)
  store %struct.Memory* %call_486334, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 48633a	 Bytes: 3
  %loadMem_48633a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48633a = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48633a)
  store %struct.Memory* %call_48633a, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 48633d	 Bytes: 3
  %loadMem_48633d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48633d = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48633d)
  store %struct.Memory* %call_48633d, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 486340	 Bytes: 4
  %loadMem_486340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486340 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486340)
  store %struct.Memory* %call_486340, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 486344	 Bytes: 8
  %loadMem_486344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486344 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486344)
  store %struct.Memory* %call_486344, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rsi), %eax	 RIP: 48634c	 Bytes: 6
  %loadMem_48634c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48634c = call %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48634c)
  store %struct.Memory* %call_48634c, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %r8d	 RIP: 486352	 Bytes: 7
  %loadMem_486352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486352 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486352)
  store %struct.Memory* %call_486352, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 486359	 Bytes: 8
  %loadMem_486359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486359 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486359)
  store %struct.Memory* %call_486359, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rsi	 RIP: 486361	 Bytes: 7
  %loadMem_486361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486361 = call %struct.Memory* @routine_addq__0xb8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486361)
  store %struct.Memory* %call_486361, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdi	 RIP: 486368	 Bytes: 4
  %loadMem_486368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486368 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486368)
  store %struct.Memory* %call_486368, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 48636c	 Bytes: 4
  %loadMem_48636c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48636c = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48636c)
  store %struct.Memory* %call_48636c, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 486370	 Bytes: 3
  %loadMem_486370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486370 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486370)
  store %struct.Memory* %call_486370, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdi	 RIP: 486373	 Bytes: 4
  %loadMem_486373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486373 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486373)
  store %struct.Memory* %call_486373, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 486377	 Bytes: 4
  %loadMem_486377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486377 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486377)
  store %struct.Memory* %call_486377, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 48637b	 Bytes: 3
  %loadMem_48637b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48637b = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48637b)
  store %struct.Memory* %call_48637b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 48637e	 Bytes: 4
  %loadMem_48637e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48637e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48637e)
  store %struct.Memory* %call_48637e, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 486382	 Bytes: 5
  %loadMem_486382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486382 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486382)
  store %struct.Memory* %call_486382, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 486387	 Bytes: 3
  %loadMem_486387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486387 = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486387)
  store %struct.Memory* %call_486387, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 48638a	 Bytes: 3
  %loadMem_48638a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48638a = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48638a)
  store %struct.Memory* %call_48638a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f4(%rbp)	 RIP: 48638d	 Bytes: 6
  %loadMem_48638d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48638d = call %struct.Memory* @routine_movl__eax__MINUS0x2f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48638d)
  store %struct.Memory* %call_48638d, %struct.Memory** %MEMORY

  ; Code: jle .L_4863a6	 RIP: 486393	 Bytes: 6
  %loadMem_486393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486393 = call %struct.Memory* @routine_jle_.L_4863a6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486393, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_486393, %struct.Memory** %MEMORY

  %loadBr_486393 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486393 = icmp eq i8 %loadBr_486393, 1
  br i1 %cmpBr_486393, label %block_.L_4863a6, label %block_486399

block_486399:
  ; Code: xorl %eax, %eax	 RIP: 486399	 Bytes: 2
  %loadMem_486399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486399 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486399)
  store %struct.Memory* %call_486399, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f8(%rbp)	 RIP: 48639b	 Bytes: 6
  %loadMem_48639b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48639b = call %struct.Memory* @routine_movl__eax__MINUS0x2f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48639b)
  store %struct.Memory* %call_48639b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4863e1	 RIP: 4863a1	 Bytes: 5
  %loadMem_4863a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863a1 = call %struct.Memory* @routine_jmpq_.L_4863e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863a1, i64 64, i64 5)
  store %struct.Memory* %call_4863a1, %struct.Memory** %MEMORY

  br label %block_.L_4863e1

  ; Code: .L_4863a6:	 RIP: 4863a6	 Bytes: 0
block_.L_4863a6:

  ; Code: movl -0x158(%rbp), %eax	 RIP: 4863a6	 Bytes: 6
  %loadMem_4863a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863a6 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863a6)
  store %struct.Memory* %call_4863a6, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4863ac	 Bytes: 8
  %loadMem_4863ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863ac = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863ac)
  store %struct.Memory* %call_4863ac, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rcx	 RIP: 4863b4	 Bytes: 7
  %loadMem_4863b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863b4 = call %struct.Memory* @routine_addq__0xb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863b4)
  store %struct.Memory* %call_4863b4, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 4863bb	 Bytes: 4
  %loadMem_4863bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863bb = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863bb)
  store %struct.Memory* %call_4863bb, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 4863bf	 Bytes: 4
  %loadMem_4863bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863bf = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863bf)
  store %struct.Memory* %call_4863bf, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4863c3	 Bytes: 3
  %loadMem_4863c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863c3 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863c3)
  store %struct.Memory* %call_4863c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 4863c6	 Bytes: 4
  %loadMem_4863c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863c6 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863c6)
  store %struct.Memory* %call_4863c6, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4863ca	 Bytes: 4
  %loadMem_4863ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863ca = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863ca)
  store %struct.Memory* %call_4863ca, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4863ce	 Bytes: 3
  %loadMem_4863ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863ce = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863ce)
  store %struct.Memory* %call_4863ce, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 4863d1	 Bytes: 4
  %loadMem_4863d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863d1 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863d1)
  store %struct.Memory* %call_4863d1, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4863d5	 Bytes: 4
  %loadMem_4863d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863d5 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863d5)
  store %struct.Memory* %call_4863d5, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4863d9	 Bytes: 2
  %loadMem_4863d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863d9 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863d9)
  store %struct.Memory* %call_4863d9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2f8(%rbp)	 RIP: 4863db	 Bytes: 6
  %loadMem_4863db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863db = call %struct.Memory* @routine_movl__eax__MINUS0x2f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863db)
  store %struct.Memory* %call_4863db, %struct.Memory** %MEMORY

  ; Code: .L_4863e1:	 RIP: 4863e1	 Bytes: 0
  br label %block_.L_4863e1
block_.L_4863e1:

  ; Code: movl -0x2f8(%rbp), %eax	 RIP: 4863e1	 Bytes: 6
  %loadMem_4863e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863e1 = call %struct.Memory* @routine_movl_MINUS0x2f8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863e1)
  store %struct.Memory* %call_4863e1, %struct.Memory** %MEMORY

  ; Code: movl -0x2f4(%rbp), %ecx	 RIP: 4863e7	 Bytes: 6
  %loadMem_4863e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863e7 = call %struct.Memory* @routine_movl_MINUS0x2f4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863e7)
  store %struct.Memory* %call_4863e7, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4863ed	 Bytes: 2
  %loadMem_4863ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863ed = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863ed)
  store %struct.Memory* %call_4863ed, %struct.Memory** %MEMORY

  ; Code: jge .L_48640e	 RIP: 4863ef	 Bytes: 6
  %loadMem_4863ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863ef = call %struct.Memory* @routine_jge_.L_48640e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863ef, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4863ef, %struct.Memory** %MEMORY

  %loadBr_4863ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4863ef = icmp eq i8 %loadBr_4863ef, 1
  br i1 %cmpBr_4863ef, label %block_.L_48640e, label %block_4863f5

block_4863f5:
  ; Code: movq 0x6cb900, %rax	 RIP: 4863f5	 Bytes: 8
  %loadMem_4863f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863f5 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863f5)
  store %struct.Memory* %call_4863f5, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 4863fd	 Bytes: 6
  %loadMem_4863fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4863fd = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4863fd)
  store %struct.Memory* %call_4863fd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2fc(%rbp)	 RIP: 486403	 Bytes: 6
  %loadMem_486403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486403 = call %struct.Memory* @routine_movl__ecx__MINUS0x2fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486403)
  store %struct.Memory* %call_486403, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4864a1	 RIP: 486409	 Bytes: 5
  %loadMem_486409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486409 = call %struct.Memory* @routine_jmpq_.L_4864a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486409, i64 152, i64 5)
  store %struct.Memory* %call_486409, %struct.Memory** %MEMORY

  br label %block_.L_4864a1

  ; Code: .L_48640e:	 RIP: 48640e	 Bytes: 0
block_.L_48640e:

  ; Code: xorl %eax, %eax	 RIP: 48640e	 Bytes: 2
  %loadMem_48640e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48640e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48640e)
  store %struct.Memory* %call_48640e, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %ecx	 RIP: 486410	 Bytes: 6
  %loadMem_486410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486410 = call %struct.Memory* @routine_movl_MINUS0x158__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486410)
  store %struct.Memory* %call_486410, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 486416	 Bytes: 8
  %loadMem_486416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486416 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486416)
  store %struct.Memory* %call_486416, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rdx	 RIP: 48641e	 Bytes: 7
  %loadMem_48641e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48641e = call %struct.Memory* @routine_addq__0xb8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48641e)
  store %struct.Memory* %call_48641e, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rsi	 RIP: 486425	 Bytes: 4
  %loadMem_486425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486425 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486425)
  store %struct.Memory* %call_486425, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 486429	 Bytes: 4
  %loadMem_486429 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486429 = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486429)
  store %struct.Memory* %call_486429, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 48642d	 Bytes: 3
  %loadMem_48642d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48642d = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48642d)
  store %struct.Memory* %call_48642d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rsi	 RIP: 486430	 Bytes: 4
  %loadMem_486430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486430 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486430)
  store %struct.Memory* %call_486430, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 486434	 Bytes: 4
  %loadMem_486434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486434 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486434)
  store %struct.Memory* %call_486434, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 486438	 Bytes: 3
  %loadMem_486438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486438 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486438)
  store %struct.Memory* %call_486438, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 48643b	 Bytes: 4
  %loadMem_48643b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48643b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48643b)
  store %struct.Memory* %call_48643b, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 48643f	 Bytes: 4
  %loadMem_48643f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48643f = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48643f)
  store %struct.Memory* %call_48643f, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 486443	 Bytes: 2
  %loadMem_486443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486443 = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486443)
  store %struct.Memory* %call_486443, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 486445	 Bytes: 2
  %loadMem_486445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486445 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486445)
  store %struct.Memory* %call_486445, %struct.Memory** %MEMORY

  ; Code: jle .L_48645a	 RIP: 486447	 Bytes: 6
  %loadMem_486447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486447 = call %struct.Memory* @routine_jle_.L_48645a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486447, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_486447, %struct.Memory** %MEMORY

  %loadBr_486447 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486447 = icmp eq i8 %loadBr_486447, 1
  br i1 %cmpBr_486447, label %block_.L_48645a, label %block_48644d

block_48644d:
  ; Code: xorl %eax, %eax	 RIP: 48644d	 Bytes: 2
  %loadMem_48644d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48644d = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48644d)
  store %struct.Memory* %call_48644d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x300(%rbp)	 RIP: 48644f	 Bytes: 6
  %loadMem_48644f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48644f = call %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48644f)
  store %struct.Memory* %call_48644f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486495	 RIP: 486455	 Bytes: 5
  %loadMem_486455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486455 = call %struct.Memory* @routine_jmpq_.L_486495(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486455, i64 64, i64 5)
  store %struct.Memory* %call_486455, %struct.Memory** %MEMORY

  br label %block_.L_486495

  ; Code: .L_48645a:	 RIP: 48645a	 Bytes: 0
block_.L_48645a:

  ; Code: movl -0x158(%rbp), %eax	 RIP: 48645a	 Bytes: 6
  %loadMem_48645a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48645a = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48645a)
  store %struct.Memory* %call_48645a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 486460	 Bytes: 8
  %loadMem_486460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486460 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486460)
  store %struct.Memory* %call_486460, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rcx	 RIP: 486468	 Bytes: 7
  %loadMem_486468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486468 = call %struct.Memory* @routine_addq__0xb8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486468)
  store %struct.Memory* %call_486468, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rdx	 RIP: 48646f	 Bytes: 4
  %loadMem_48646f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48646f = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48646f)
  store %struct.Memory* %call_48646f, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 486473	 Bytes: 4
  %loadMem_486473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486473 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486473)
  store %struct.Memory* %call_486473, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486477	 Bytes: 3
  %loadMem_486477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486477 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486477)
  store %struct.Memory* %call_486477, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rdx	 RIP: 48647a	 Bytes: 4
  %loadMem_48647a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48647a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48647a)
  store %struct.Memory* %call_48647a, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 48647e	 Bytes: 4
  %loadMem_48647e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48647e = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48647e)
  store %struct.Memory* %call_48647e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486482	 Bytes: 3
  %loadMem_486482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486482 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486482)
  store %struct.Memory* %call_486482, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 486485	 Bytes: 4
  %loadMem_486485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486485 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486485)
  store %struct.Memory* %call_486485, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 486489	 Bytes: 4
  %loadMem_486489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486489 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486489)
  store %struct.Memory* %call_486489, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 48648d	 Bytes: 2
  %loadMem_48648d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48648d = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48648d)
  store %struct.Memory* %call_48648d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x300(%rbp)	 RIP: 48648f	 Bytes: 6
  %loadMem_48648f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48648f = call %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48648f)
  store %struct.Memory* %call_48648f, %struct.Memory** %MEMORY

  ; Code: .L_486495:	 RIP: 486495	 Bytes: 0
  br label %block_.L_486495
block_.L_486495:

  ; Code: movl -0x300(%rbp), %eax	 RIP: 486495	 Bytes: 6
  %loadMem_486495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486495 = call %struct.Memory* @routine_movl_MINUS0x300__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486495)
  store %struct.Memory* %call_486495, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2fc(%rbp)	 RIP: 48649b	 Bytes: 6
  %loadMem_48649b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48649b = call %struct.Memory* @routine_movl__eax__MINUS0x2fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48649b)
  store %struct.Memory* %call_48649b, %struct.Memory** %MEMORY

  ; Code: .L_4864a1:	 RIP: 4864a1	 Bytes: 0
  br label %block_.L_4864a1
block_.L_4864a1:

  ; Code: movl -0x2fc(%rbp), %eax	 RIP: 4864a1	 Bytes: 6
  %loadMem_4864a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864a1 = call %struct.Memory* @routine_movl_MINUS0x2fc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864a1)
  store %struct.Memory* %call_4864a1, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4864a7	 Bytes: 2
  %loadMem_4864a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864a7 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864a7)
  store %struct.Memory* %call_4864a7, %struct.Memory** %MEMORY

  ; Code: movw %ax, %dx	 RIP: 4864a9	 Bytes: 3
  %loadMem_4864a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864a9 = call %struct.Memory* @routine_movw__ax___dx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864a9)
  store %struct.Memory* %call_4864a9, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rsi	 RIP: 4864ac	 Bytes: 8
  %loadMem_4864ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864ac = call %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864ac)
  store %struct.Memory* %call_4864ac, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rsi), %rsi	 RIP: 4864b4	 Bytes: 7
  %loadMem_4864b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864b4 = call %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864b4)
  store %struct.Memory* %call_4864b4, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 4864bb	 Bytes: 6
  %loadMem_4864bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864bb = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864bb)
  store %struct.Memory* %call_4864bb, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4864c1	 Bytes: 3
  %loadMem_4864c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864c1 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864c1)
  store %struct.Memory* %call_4864c1, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4864c4	 Bytes: 3
  %loadMem_4864c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864c4 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864c4)
  store %struct.Memory* %call_4864c4, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdi,8), %rsi	 RIP: 4864c7	 Bytes: 4
  %loadMem_4864c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864c7 = call %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864c7)
  store %struct.Memory* %call_4864c7, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 4864cb	 Bytes: 6
  %loadMem_4864cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864cb = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864cb)
  store %struct.Memory* %call_4864cb, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4864d1	 Bytes: 3
  %loadMem_4864d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864d1 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864d1)
  store %struct.Memory* %call_4864d1, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 4864d4	 Bytes: 3
  %loadMem_4864d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864d4 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864d4)
  store %struct.Memory* %call_4864d4, %struct.Memory** %MEMORY

  ; Code: movw %dx, (%rsi,%rdi,2)	 RIP: 4864d7	 Bytes: 4
  %loadMem_4864d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864d7 = call %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864d7)
  store %struct.Memory* %call_4864d7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4864db	 Bytes: 8
  %loadMem_4864db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864db = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864db)
  store %struct.Memory* %call_4864db, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rsi), %eax	 RIP: 4864e3	 Bytes: 6
  %loadMem_4864e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864e3 = call %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864e3)
  store %struct.Memory* %call_4864e3, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %r8d	 RIP: 4864e9	 Bytes: 7
  %loadMem_4864e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864e9 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864e9)
  store %struct.Memory* %call_4864e9, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4864f0	 Bytes: 8
  %loadMem_4864f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864f0 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864f0)
  store %struct.Memory* %call_4864f0, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rsi	 RIP: 4864f8	 Bytes: 7
  %loadMem_4864f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864f8 = call %struct.Memory* @routine_addq__0x2138___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864f8)
  store %struct.Memory* %call_4864f8, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rsi	 RIP: 4864ff	 Bytes: 7
  %loadMem_4864ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4864ff = call %struct.Memory* @routine_addq__0x800___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4864ff)
  store %struct.Memory* %call_4864ff, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdi	 RIP: 486506	 Bytes: 7
  %loadMem_486506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486506 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486506)
  store %struct.Memory* %call_486506, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 48650d	 Bytes: 4
  %loadMem_48650d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48650d = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48650d)
  store %struct.Memory* %call_48650d, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 486511	 Bytes: 3
  %loadMem_486511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486511 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486511)
  store %struct.Memory* %call_486511, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %r9d	 RIP: 486514	 Bytes: 7
  %loadMem_486514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486514 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486514)
  store %struct.Memory* %call_486514, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %r9d	 RIP: 48651b	 Bytes: 4
  %loadMem_48651b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48651b = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48651b)
  store %struct.Memory* %call_48651b, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 48651f	 Bytes: 3
  %loadMem_48651f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48651f = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48651f)
  store %struct.Memory* %call_48651f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 486522	 Bytes: 4
  %loadMem_486522 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486522 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486522)
  store %struct.Memory* %call_486522, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 486526	 Bytes: 3
  %loadMem_486526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486526 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486526)
  store %struct.Memory* %call_486526, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %r9d	 RIP: 486529	 Bytes: 7
  %loadMem_486529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486529 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486529)
  store %struct.Memory* %call_486529, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %r9d	 RIP: 486530	 Bytes: 4
  %loadMem_486530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486530 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486530)
  store %struct.Memory* %call_486530, %struct.Memory** %MEMORY

  ; Code: movslq %r9d, %rdi	 RIP: 486534	 Bytes: 3
  %loadMem_486534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486534 = call %struct.Memory* @routine_movslq__r9d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486534)
  store %struct.Memory* %call_486534, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %r9d	 RIP: 486537	 Bytes: 5
  %loadMem_486537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486537 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486537)
  store %struct.Memory* %call_486537, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %r8d	 RIP: 48653c	 Bytes: 3
  %loadMem_48653c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48653c = call %struct.Memory* @routine_addl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48653c)
  store %struct.Memory* %call_48653c, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %ecx	 RIP: 48653f	 Bytes: 3
  %loadMem_48653f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48653f = call %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48653f)
  store %struct.Memory* %call_48653f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x304(%rbp)	 RIP: 486542	 Bytes: 6
  %loadMem_486542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486542 = call %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486542)
  store %struct.Memory* %call_486542, %struct.Memory** %MEMORY

  ; Code: jle .L_48655b	 RIP: 486548	 Bytes: 6
  %loadMem_486548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486548 = call %struct.Memory* @routine_jle_.L_48655b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486548, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_486548, %struct.Memory** %MEMORY

  %loadBr_486548 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486548 = icmp eq i8 %loadBr_486548, 1
  br i1 %cmpBr_486548, label %block_.L_48655b, label %block_48654e

block_48654e:
  ; Code: xorl %eax, %eax	 RIP: 48654e	 Bytes: 2
  %loadMem_48654e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48654e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48654e)
  store %struct.Memory* %call_48654e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x308(%rbp)	 RIP: 486550	 Bytes: 6
  %loadMem_486550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486550 = call %struct.Memory* @routine_movl__eax__MINUS0x308__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486550)
  store %struct.Memory* %call_486550, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4865b0	 RIP: 486556	 Bytes: 5
  %loadMem_486556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486556 = call %struct.Memory* @routine_jmpq_.L_4865b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486556, i64 90, i64 5)
  store %struct.Memory* %call_486556, %struct.Memory** %MEMORY

  br label %block_.L_4865b0

  ; Code: .L_48655b:	 RIP: 48655b	 Bytes: 0
block_.L_48655b:

  ; Code: movl -0x154(%rbp), %eax	 RIP: 48655b	 Bytes: 6
  %loadMem_48655b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48655b = call %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48655b)
  store %struct.Memory* %call_48655b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 486561	 Bytes: 8
  %loadMem_486561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486561 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486561)
  store %struct.Memory* %call_486561, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 486569	 Bytes: 7
  %loadMem_486569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486569 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486569)
  store %struct.Memory* %call_486569, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 486570	 Bytes: 7
  %loadMem_486570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486570 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486570)
  store %struct.Memory* %call_486570, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 486577	 Bytes: 7
  %loadMem_486577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486577 = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486577)
  store %struct.Memory* %call_486577, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 48657e	 Bytes: 4
  %loadMem_48657e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48657e = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48657e)
  store %struct.Memory* %call_48657e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486582	 Bytes: 3
  %loadMem_486582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486582 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486582)
  store %struct.Memory* %call_486582, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 486585	 Bytes: 6
  %loadMem_486585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486585 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486585)
  store %struct.Memory* %call_486585, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 48658b	 Bytes: 3
  %loadMem_48658b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48658b = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48658b)
  store %struct.Memory* %call_48658b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 48658e	 Bytes: 3
  %loadMem_48658e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48658e = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48658e)
  store %struct.Memory* %call_48658e, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 486591	 Bytes: 4
  %loadMem_486591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486591 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486591)
  store %struct.Memory* %call_486591, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 486595	 Bytes: 3
  %loadMem_486595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486595 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486595)
  store %struct.Memory* %call_486595, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 486598	 Bytes: 6
  %loadMem_486598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486598 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486598)
  store %struct.Memory* %call_486598, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 48659e	 Bytes: 3
  %loadMem_48659e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48659e = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48659e)
  store %struct.Memory* %call_48659e, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4865a1	 Bytes: 3
  %loadMem_4865a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865a1 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865a1)
  store %struct.Memory* %call_4865a1, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4865a4	 Bytes: 4
  %loadMem_4865a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865a4 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865a4)
  store %struct.Memory* %call_4865a4, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 4865a8	 Bytes: 2
  %loadMem_4865a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865a8 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865a8)
  store %struct.Memory* %call_4865a8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x308(%rbp)	 RIP: 4865aa	 Bytes: 6
  %loadMem_4865aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865aa = call %struct.Memory* @routine_movl__eax__MINUS0x308__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865aa)
  store %struct.Memory* %call_4865aa, %struct.Memory** %MEMORY

  ; Code: .L_4865b0:	 RIP: 4865b0	 Bytes: 0
  br label %block_.L_4865b0
block_.L_4865b0:

  ; Code: movl -0x308(%rbp), %eax	 RIP: 4865b0	 Bytes: 6
  %loadMem_4865b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865b0 = call %struct.Memory* @routine_movl_MINUS0x308__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865b0)
  store %struct.Memory* %call_4865b0, %struct.Memory** %MEMORY

  ; Code: movl -0x304(%rbp), %ecx	 RIP: 4865b6	 Bytes: 6
  %loadMem_4865b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865b6 = call %struct.Memory* @routine_movl_MINUS0x304__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865b6)
  store %struct.Memory* %call_4865b6, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 4865bc	 Bytes: 2
  %loadMem_4865bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865bc = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865bc)
  store %struct.Memory* %call_4865bc, %struct.Memory** %MEMORY

  ; Code: jge .L_4865dd	 RIP: 4865be	 Bytes: 6
  %loadMem_4865be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865be = call %struct.Memory* @routine_jge_.L_4865dd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865be, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4865be, %struct.Memory** %MEMORY

  %loadBr_4865be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4865be = icmp eq i8 %loadBr_4865be, 1
  br i1 %cmpBr_4865be, label %block_.L_4865dd, label %block_4865c4

block_4865c4:
  ; Code: movq 0x6cb900, %rax	 RIP: 4865c4	 Bytes: 8
  %loadMem_4865c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865c4 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865c4)
  store %struct.Memory* %call_4865c4, %struct.Memory** %MEMORY

  ; Code: movl 0x11bf0(%rax), %ecx	 RIP: 4865cc	 Bytes: 6
  %loadMem_4865cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865cc = call %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865cc)
  store %struct.Memory* %call_4865cc, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x30c(%rbp)	 RIP: 4865d2	 Bytes: 6
  %loadMem_4865d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865d2 = call %struct.Memory* @routine_movl__ecx__MINUS0x30c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865d2)
  store %struct.Memory* %call_4865d2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4866a4	 RIP: 4865d8	 Bytes: 5
  %loadMem_4865d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865d8 = call %struct.Memory* @routine_jmpq_.L_4866a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865d8, i64 204, i64 5)
  store %struct.Memory* %call_4865d8, %struct.Memory** %MEMORY

  br label %block_.L_4866a4

  ; Code: .L_4865dd:	 RIP: 4865dd	 Bytes: 0
block_.L_4865dd:

  ; Code: xorl %eax, %eax	 RIP: 4865dd	 Bytes: 2
  %loadMem_4865dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865dd = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865dd)
  store %struct.Memory* %call_4865dd, %struct.Memory** %MEMORY

  ; Code: movl -0x154(%rbp), %ecx	 RIP: 4865df	 Bytes: 6
  %loadMem_4865df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865df = call %struct.Memory* @routine_movl_MINUS0x154__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865df)
  store %struct.Memory* %call_4865df, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4865e5	 Bytes: 8
  %loadMem_4865e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865e5 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865e5)
  store %struct.Memory* %call_4865e5, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rdx	 RIP: 4865ed	 Bytes: 7
  %loadMem_4865ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865ed = call %struct.Memory* @routine_addq__0x2138___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865ed)
  store %struct.Memory* %call_4865ed, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rdx	 RIP: 4865f4	 Bytes: 7
  %loadMem_4865f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865f4 = call %struct.Memory* @routine_addq__0x800___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865f4)
  store %struct.Memory* %call_4865f4, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rsi	 RIP: 4865fb	 Bytes: 7
  %loadMem_4865fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4865fb = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4865fb)
  store %struct.Memory* %call_4865fb, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rsi	 RIP: 486602	 Bytes: 4
  %loadMem_486602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486602 = call %struct.Memory* @routine_shlq__0x9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486602)
  store %struct.Memory* %call_486602, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 486606	 Bytes: 3
  %loadMem_486606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486606 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486606)
  store %struct.Memory* %call_486606, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edi	 RIP: 486609	 Bytes: 6
  %loadMem_486609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486609 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486609)
  store %struct.Memory* %call_486609, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %edi	 RIP: 48660f	 Bytes: 3
  %loadMem_48660f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48660f = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48660f)
  store %struct.Memory* %call_48660f, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 486612	 Bytes: 3
  %loadMem_486612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486612 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486612)
  store %struct.Memory* %call_486612, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 486615	 Bytes: 4
  %loadMem_486615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486615 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486615)
  store %struct.Memory* %call_486615, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 486619	 Bytes: 3
  %loadMem_486619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486619 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486619)
  store %struct.Memory* %call_486619, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %edi	 RIP: 48661c	 Bytes: 6
  %loadMem_48661c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48661c = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48661c)
  store %struct.Memory* %call_48661c, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %edi	 RIP: 486622	 Bytes: 3
  %loadMem_486622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486622 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486622)
  store %struct.Memory* %call_486622, %struct.Memory** %MEMORY

  ; Code: movslq %edi, %rsi	 RIP: 486625	 Bytes: 3
  %loadMem_486625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486625 = call %struct.Memory* @routine_movslq__edi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486625)
  store %struct.Memory* %call_486625, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rsi,2), %edi	 RIP: 486628	 Bytes: 4
  %loadMem_486628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486628 = call %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486628)
  store %struct.Memory* %call_486628, %struct.Memory** %MEMORY

  ; Code: addl %edi, %ecx	 RIP: 48662c	 Bytes: 2
  %loadMem_48662c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48662c = call %struct.Memory* @routine_addl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48662c)
  store %struct.Memory* %call_48662c, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 48662e	 Bytes: 2
  %loadMem_48662e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48662e = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48662e)
  store %struct.Memory* %call_48662e, %struct.Memory** %MEMORY

  ; Code: jle .L_486643	 RIP: 486630	 Bytes: 6
  %loadMem_486630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486630 = call %struct.Memory* @routine_jle_.L_486643(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486630, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_486630, %struct.Memory** %MEMORY

  %loadBr_486630 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486630 = icmp eq i8 %loadBr_486630, 1
  br i1 %cmpBr_486630, label %block_.L_486643, label %block_486636

block_486636:
  ; Code: xorl %eax, %eax	 RIP: 486636	 Bytes: 2
  %loadMem_486636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486636 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486636)
  store %struct.Memory* %call_486636, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x310(%rbp)	 RIP: 486638	 Bytes: 6
  %loadMem_486638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486638 = call %struct.Memory* @routine_movl__eax__MINUS0x310__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486638)
  store %struct.Memory* %call_486638, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486698	 RIP: 48663e	 Bytes: 5
  %loadMem_48663e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48663e = call %struct.Memory* @routine_jmpq_.L_486698(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48663e, i64 90, i64 5)
  store %struct.Memory* %call_48663e, %struct.Memory** %MEMORY

  br label %block_.L_486698

  ; Code: .L_486643:	 RIP: 486643	 Bytes: 0
block_.L_486643:

  ; Code: movl -0x154(%rbp), %eax	 RIP: 486643	 Bytes: 6
  %loadMem_486643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486643 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486643)
  store %struct.Memory* %call_486643, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 486649	 Bytes: 8
  %loadMem_486649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486649 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486649)
  store %struct.Memory* %call_486649, %struct.Memory** %MEMORY

  ; Code: addq $0x2138, %rcx	 RIP: 486651	 Bytes: 7
  %loadMem_486651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486651 = call %struct.Memory* @routine_addq__0x2138___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486651)
  store %struct.Memory* %call_486651, %struct.Memory** %MEMORY

  ; Code: addq $0x800, %rcx	 RIP: 486658	 Bytes: 7
  %loadMem_486658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486658 = call %struct.Memory* @routine_addq__0x800___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486658)
  store %struct.Memory* %call_486658, %struct.Memory** %MEMORY

  ; Code: movslq -0x16c(%rbp), %rdx	 RIP: 48665f	 Bytes: 7
  %loadMem_48665f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48665f = call %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48665f)
  store %struct.Memory* %call_48665f, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 486666	 Bytes: 4
  %loadMem_486666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486666 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486666)
  store %struct.Memory* %call_486666, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 48666a	 Bytes: 3
  %loadMem_48666a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48666a = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48666a)
  store %struct.Memory* %call_48666a, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 48666d	 Bytes: 6
  %loadMem_48666d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48666d = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48666d)
  store %struct.Memory* %call_48666d, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %esi	 RIP: 486673	 Bytes: 3
  %loadMem_486673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486673 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486673)
  store %struct.Memory* %call_486673, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 486676	 Bytes: 3
  %loadMem_486676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486676 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486676)
  store %struct.Memory* %call_486676, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 486679	 Bytes: 4
  %loadMem_486679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486679 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486679)
  store %struct.Memory* %call_486679, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 48667d	 Bytes: 3
  %loadMem_48667d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48667d = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48667d)
  store %struct.Memory* %call_48667d, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %esi	 RIP: 486680	 Bytes: 6
  %loadMem_486680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486680 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486680)
  store %struct.Memory* %call_486680, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %esi	 RIP: 486686	 Bytes: 3
  %loadMem_486686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486686 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486686)
  store %struct.Memory* %call_486686, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 486689	 Bytes: 3
  %loadMem_486689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486689 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486689)
  store %struct.Memory* %call_486689, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 48668c	 Bytes: 4
  %loadMem_48668c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48668c = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48668c)
  store %struct.Memory* %call_48668c, %struct.Memory** %MEMORY

  ; Code: addl %esi, %eax	 RIP: 486690	 Bytes: 2
  %loadMem_486690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486690 = call %struct.Memory* @routine_addl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486690)
  store %struct.Memory* %call_486690, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x310(%rbp)	 RIP: 486692	 Bytes: 6
  %loadMem_486692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486692 = call %struct.Memory* @routine_movl__eax__MINUS0x310__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486692)
  store %struct.Memory* %call_486692, %struct.Memory** %MEMORY

  ; Code: .L_486698:	 RIP: 486698	 Bytes: 0
  br label %block_.L_486698
block_.L_486698:

  ; Code: movl -0x310(%rbp), %eax	 RIP: 486698	 Bytes: 6
  %loadMem_486698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486698 = call %struct.Memory* @routine_movl_MINUS0x310__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486698)
  store %struct.Memory* %call_486698, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30c(%rbp)	 RIP: 48669e	 Bytes: 6
  %loadMem_48669e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48669e = call %struct.Memory* @routine_movl__eax__MINUS0x30c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48669e)
  store %struct.Memory* %call_48669e, %struct.Memory** %MEMORY

  ; Code: .L_4866a4:	 RIP: 4866a4	 Bytes: 0
  br label %block_.L_4866a4
block_.L_4866a4:

  ; Code: movl -0x30c(%rbp), %eax	 RIP: 4866a4	 Bytes: 6
  %loadMem_4866a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866a4 = call %struct.Memory* @routine_movl_MINUS0x30c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866a4)
  store %struct.Memory* %call_4866a4, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4866aa	 Bytes: 3
  %loadMem_4866aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866aa = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866aa)
  store %struct.Memory* %call_4866aa, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rdx	 RIP: 4866ad	 Bytes: 8
  %loadMem_4866ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866ad = call %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866ad)
  store %struct.Memory* %call_4866ad, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rdx), %rdx	 RIP: 4866b5	 Bytes: 7
  %loadMem_4866b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866b5 = call %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866b5)
  store %struct.Memory* %call_4866b5, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 4866bc	 Bytes: 4
  %loadMem_4866bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866bc = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866bc)
  store %struct.Memory* %call_4866bc, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %eax	 RIP: 4866c0	 Bytes: 6
  %loadMem_4866c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866c0 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866c0)
  store %struct.Memory* %call_4866c0, %struct.Memory** %MEMORY

  ; Code: addl -0x30(%rbp), %eax	 RIP: 4866c6	 Bytes: 3
  %loadMem_4866c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866c6 = call %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866c6)
  store %struct.Memory* %call_4866c6, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 4866c9	 Bytes: 3
  %loadMem_4866c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866c9 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866c9)
  store %struct.Memory* %call_4866c9, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdx	 RIP: 4866cc	 Bytes: 4
  %loadMem_4866cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866cc = call %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866cc)
  store %struct.Memory* %call_4866cc, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %eax	 RIP: 4866d0	 Bytes: 6
  %loadMem_4866d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866d0 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866d0)
  store %struct.Memory* %call_4866d0, %struct.Memory** %MEMORY

  ; Code: addl -0x2c(%rbp), %eax	 RIP: 4866d6	 Bytes: 3
  %loadMem_4866d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866d6 = call %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866d6)
  store %struct.Memory* %call_4866d6, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 4866d9	 Bytes: 3
  %loadMem_4866d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866d9 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866d9)
  store %struct.Memory* %call_4866d9, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rdx,%rsi,2)	 RIP: 4866dc	 Bytes: 4
  %loadMem_4866dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866dc = call %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866dc)
  store %struct.Memory* %call_4866dc, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4866e0	 Bytes: 3
  %loadMem_4866e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866e0 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866e0)
  store %struct.Memory* %call_4866e0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4866e3	 Bytes: 3
  %loadMem_4866e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866e3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866e3)
  store %struct.Memory* %call_4866e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4866e6	 Bytes: 3
  %loadMem_4866e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866e6 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866e6)
  store %struct.Memory* %call_4866e6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_48608a	 RIP: 4866e9	 Bytes: 5
  %loadMem_4866e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866e9 = call %struct.Memory* @routine_jmpq_.L_48608a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866e9, i64 -1631, i64 5)
  store %struct.Memory* %call_4866e9, %struct.Memory** %MEMORY

  br label %block_.L_48608a

  ; Code: .L_4866ee:	 RIP: 4866ee	 Bytes: 0
block_.L_4866ee:

  ; Code: jmpq .L_4866f3	 RIP: 4866ee	 Bytes: 5
  %loadMem_4866ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866ee = call %struct.Memory* @routine_jmpq_.L_4866f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866ee, i64 5, i64 5)
  store %struct.Memory* %call_4866ee, %struct.Memory** %MEMORY

  br label %block_.L_4866f3

  ; Code: .L_4866f3:	 RIP: 4866f3	 Bytes: 0
block_.L_4866f3:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4866f3	 Bytes: 3
  %loadMem_4866f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866f3 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866f3)
  store %struct.Memory* %call_4866f3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4866f6	 Bytes: 3
  %loadMem_4866f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866f6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866f6)
  store %struct.Memory* %call_4866f6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4866f9	 Bytes: 3
  %loadMem_4866f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866f9 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866f9)
  store %struct.Memory* %call_4866f9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486079	 RIP: 4866fc	 Bytes: 5
  %loadMem_4866fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4866fc = call %struct.Memory* @routine_jmpq_.L_486079(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4866fc, i64 -1667, i64 5)
  store %struct.Memory* %call_4866fc, %struct.Memory** %MEMORY

  br label %block_.L_486079

  ; Code: .L_486701:	 RIP: 486701	 Bytes: 0
block_.L_486701:

  ; Code: jmpq .L_486706	 RIP: 486701	 Bytes: 5
  %loadMem_486701 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486701 = call %struct.Memory* @routine_jmpq_.L_486706(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486701, i64 5, i64 5)
  store %struct.Memory* %call_486701, %struct.Memory** %MEMORY

  br label %block_.L_486706

  ; Code: .L_486706:	 RIP: 486706	 Bytes: 0
block_.L_486706:

  ; Code: jmpq .L_486aa6	 RIP: 486706	 Bytes: 5
  %loadMem_486706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486706 = call %struct.Memory* @routine_jmpq_.L_486aa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486706, i64 928, i64 5)
  store %struct.Memory* %call_486706, %struct.Memory** %MEMORY

  br label %block_.L_486aa6

  ; Code: .L_48670b:	 RIP: 48670b	 Bytes: 0
block_.L_48670b:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 48670b	 Bytes: 7
  %loadMem_48670b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48670b = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48670b)
  store %struct.Memory* %call_48670b, %struct.Memory** %MEMORY

  ; Code: .L_486712:	 RIP: 486712	 Bytes: 0
  br label %block_.L_486712
block_.L_486712:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 486712	 Bytes: 4
  %loadMem_486712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486712 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486712)
  store %struct.Memory* %call_486712, %struct.Memory** %MEMORY

  ; Code: jge .L_486793	 RIP: 486716	 Bytes: 6
  %loadMem_486716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486716 = call %struct.Memory* @routine_jge_.L_486793(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486716, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_486716, %struct.Memory** %MEMORY

  %loadBr_486716 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486716 = icmp eq i8 %loadBr_486716, 1
  br i1 %cmpBr_486716, label %block_.L_486793, label %block_48671c

block_48671c:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 48671c	 Bytes: 7
  %loadMem_48671c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48671c = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48671c)
  store %struct.Memory* %call_48671c, %struct.Memory** %MEMORY

  ; Code: .L_486723:	 RIP: 486723	 Bytes: 0
  br label %block_.L_486723
block_.L_486723:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 486723	 Bytes: 4
  %loadMem_486723 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486723 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486723)
  store %struct.Memory* %call_486723, %struct.Memory** %MEMORY

  ; Code: jge .L_486780	 RIP: 486727	 Bytes: 6
  %loadMem_486727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486727 = call %struct.Memory* @routine_jge_.L_486780(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486727, i8* %BRANCH_TAKEN, i64 89, i64 6, i64 6)
  store %struct.Memory* %call_486727, %struct.Memory** %MEMORY

  %loadBr_486727 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486727 = icmp eq i8 %loadBr_486727, 1
  br i1 %cmpBr_486727, label %block_.L_486780, label %block_48672d

block_48672d:
  ; Code: movq 0x6cc608, %rax	 RIP: 48672d	 Bytes: 8
  %loadMem_48672d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48672d = call %struct.Memory* @routine_movq_0x6cc608___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48672d)
  store %struct.Memory* %call_48672d, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 486735	 Bytes: 4
  %loadMem_486735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486735 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486735)
  store %struct.Memory* %call_486735, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486739	 Bytes: 4
  %loadMem_486739 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486739 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486739)
  store %struct.Memory* %call_486739, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48673d	 Bytes: 4
  %loadMem_48673d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48673d = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48673d)
  store %struct.Memory* %call_48673d, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 486741	 Bytes: 3
  %loadMem_486741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486741 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486741)
  store %struct.Memory* %call_486741, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 486744	 Bytes: 8
  %loadMem_486744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486744 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486744)
  store %struct.Memory* %call_486744, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 48674c	 Bytes: 7
  %loadMem_48674c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48674c = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48674c)
  store %struct.Memory* %call_48674c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 486753	 Bytes: 4
  %loadMem_486753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486753 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486753)
  store %struct.Memory* %call_486753, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486757	 Bytes: 4
  %loadMem_486757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486757 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486757)
  store %struct.Memory* %call_486757, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 48675b	 Bytes: 4
  %loadMem_48675b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48675b = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48675b)
  store %struct.Memory* %call_48675b, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 48675f	 Bytes: 4
  %loadMem_48675f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48675f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48675f)
  store %struct.Memory* %call_48675f, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 486763	 Bytes: 4
  %loadMem_486763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486763 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486763)
  store %struct.Memory* %call_486763, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486767	 Bytes: 4
  %loadMem_486767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486767 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486767)
  store %struct.Memory* %call_486767, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 48676b	 Bytes: 4
  %loadMem_48676b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48676b = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48676b)
  store %struct.Memory* %call_48676b, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 48676f	 Bytes: 3
  %loadMem_48676f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48676f = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48676f)
  store %struct.Memory* %call_48676f, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 486772	 Bytes: 3
  %loadMem_486772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486772 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486772)
  store %struct.Memory* %call_486772, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486775	 Bytes: 3
  %loadMem_486775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486775 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486775)
  store %struct.Memory* %call_486775, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 486778	 Bytes: 3
  %loadMem_486778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486778 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486778)
  store %struct.Memory* %call_486778, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486723	 RIP: 48677b	 Bytes: 5
  %loadMem_48677b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48677b = call %struct.Memory* @routine_jmpq_.L_486723(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48677b, i64 -88, i64 5)
  store %struct.Memory* %call_48677b, %struct.Memory** %MEMORY

  br label %block_.L_486723

  ; Code: .L_486780:	 RIP: 486780	 Bytes: 0
block_.L_486780:

  ; Code: jmpq .L_486785	 RIP: 486780	 Bytes: 5
  %loadMem_486780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486780 = call %struct.Memory* @routine_jmpq_.L_486785(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486780, i64 5, i64 5)
  store %struct.Memory* %call_486780, %struct.Memory** %MEMORY

  br label %block_.L_486785

  ; Code: .L_486785:	 RIP: 486785	 Bytes: 0
block_.L_486785:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 486785	 Bytes: 3
  %loadMem_486785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486785 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486785)
  store %struct.Memory* %call_486785, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486788	 Bytes: 3
  %loadMem_486788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486788 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486788)
  store %struct.Memory* %call_486788, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 48678b	 Bytes: 3
  %loadMem_48678b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48678b = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48678b)
  store %struct.Memory* %call_48678b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486712	 RIP: 48678e	 Bytes: 5
  %loadMem_48678e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48678e = call %struct.Memory* @routine_jmpq_.L_486712(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48678e, i64 -124, i64 5)
  store %struct.Memory* %call_48678e, %struct.Memory** %MEMORY

  br label %block_.L_486712

  ; Code: .L_486793:	 RIP: 486793	 Bytes: 0
block_.L_486793:

  ; Code: movq 0x6cb900, %rax	 RIP: 486793	 Bytes: 8
  %loadMem_486793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486793 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486793)
  store %struct.Memory* %call_486793, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 48679b	 Bytes: 7
  %loadMem_48679b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48679b = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48679b)
  store %struct.Memory* %call_48679b, %struct.Memory** %MEMORY

  ; Code: je .L_4868d7	 RIP: 4867a2	 Bytes: 6
  %loadMem_4867a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867a2 = call %struct.Memory* @routine_je_.L_4868d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867a2, i8* %BRANCH_TAKEN, i64 309, i64 6, i64 6)
  store %struct.Memory* %call_4867a2, %struct.Memory** %MEMORY

  %loadBr_4867a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4867a2 = icmp eq i8 %loadBr_4867a2, 1
  br i1 %cmpBr_4867a2, label %block_.L_4868d7, label %block_4867a8

block_4867a8:
  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 4867a8	 Bytes: 7
  %loadMem_4867a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867a8 = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867a8)
  store %struct.Memory* %call_4867a8, %struct.Memory** %MEMORY

  ; Code: .L_4867af:	 RIP: 4867af	 Bytes: 0
  br label %block_.L_4867af
block_.L_4867af:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 4867af	 Bytes: 4
  %loadMem_4867af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867af = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867af)
  store %struct.Memory* %call_4867af, %struct.Memory** %MEMORY

  ; Code: jge .L_48683a	 RIP: 4867b3	 Bytes: 6
  %loadMem_4867b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867b3 = call %struct.Memory* @routine_jge_.L_48683a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867b3, i8* %BRANCH_TAKEN, i64 135, i64 6, i64 6)
  store %struct.Memory* %call_4867b3, %struct.Memory** %MEMORY

  %loadBr_4867b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4867b3 = icmp eq i8 %loadBr_4867b3, 1
  br i1 %cmpBr_4867b3, label %block_.L_48683a, label %block_4867b9

block_4867b9:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4867b9	 Bytes: 7
  %loadMem_4867b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867b9 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867b9)
  store %struct.Memory* %call_4867b9, %struct.Memory** %MEMORY

  ; Code: .L_4867c0:	 RIP: 4867c0	 Bytes: 0
  br label %block_.L_4867c0
block_.L_4867c0:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 4867c0	 Bytes: 4
  %loadMem_4867c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867c0 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867c0)
  store %struct.Memory* %call_4867c0, %struct.Memory** %MEMORY

  ; Code: jge .L_486827	 RIP: 4867c4	 Bytes: 6
  %loadMem_4867c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867c4 = call %struct.Memory* @routine_jge_.L_486827(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867c4, i8* %BRANCH_TAKEN, i64 99, i64 6, i64 6)
  store %struct.Memory* %call_4867c4, %struct.Memory** %MEMORY

  %loadBr_4867c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4867c4 = icmp eq i8 %loadBr_4867c4, 1
  br i1 %cmpBr_4867c4, label %block_.L_486827, label %block_4867ca

block_4867ca:
  ; Code: movq $0x6f9560, %rax	 RIP: 4867ca	 Bytes: 10
  %loadMem_4867ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867ca = call %struct.Memory* @routine_movq__0x6f9560___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867ca)
  store %struct.Memory* %call_4867ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4867d4	 Bytes: 4
  %loadMem_4867d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867d4 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867d4)
  store %struct.Memory* %call_4867d4, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 4867d8	 Bytes: 4
  %loadMem_4867d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867d8 = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867d8)
  store %struct.Memory* %call_4867d8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4867dc	 Bytes: 3
  %loadMem_4867dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867dc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867dc)
  store %struct.Memory* %call_4867dc, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4867df	 Bytes: 4
  %loadMem_4867df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867df = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867df)
  store %struct.Memory* %call_4867df, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4867e3	 Bytes: 3
  %loadMem_4867e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867e3 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867e3)
  store %struct.Memory* %call_4867e3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 4867e6	 Bytes: 8
  %loadMem_4867e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867e6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867e6)
  store %struct.Memory* %call_4867e6, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 4867ee	 Bytes: 7
  %loadMem_4867ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867ee = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867ee)
  store %struct.Memory* %call_4867ee, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 4867f5	 Bytes: 3
  %loadMem_4867f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867f5 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867f5)
  store %struct.Memory* %call_4867f5, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %esi	 RIP: 4867f8	 Bytes: 3
  %loadMem_4867f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867f8 = call %struct.Memory* @routine_addl__0x4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867f8)
  store %struct.Memory* %call_4867f8, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 4867fb	 Bytes: 3
  %loadMem_4867fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867fb = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867fb)
  store %struct.Memory* %call_4867fb, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4867fe	 Bytes: 4
  %loadMem_4867fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4867fe = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4867fe)
  store %struct.Memory* %call_4867fe, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 486802	 Bytes: 4
  %loadMem_486802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486802 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486802)
  store %struct.Memory* %call_486802, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486806	 Bytes: 4
  %loadMem_486806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486806 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486806)
  store %struct.Memory* %call_486806, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48680a	 Bytes: 4
  %loadMem_48680a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48680a = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48680a)
  store %struct.Memory* %call_48680a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 48680e	 Bytes: 4
  %loadMem_48680e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48680e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48680e)
  store %struct.Memory* %call_48680e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 486812	 Bytes: 4
  %loadMem_486812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486812 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486812)
  store %struct.Memory* %call_486812, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 486816	 Bytes: 3
  %loadMem_486816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486816 = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486816)
  store %struct.Memory* %call_486816, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 486819	 Bytes: 3
  %loadMem_486819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486819 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486819)
  store %struct.Memory* %call_486819, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48681c	 Bytes: 3
  %loadMem_48681c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48681c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48681c)
  store %struct.Memory* %call_48681c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 48681f	 Bytes: 3
  %loadMem_48681f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48681f = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48681f)
  store %struct.Memory* %call_48681f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4867c0	 RIP: 486822	 Bytes: 5
  %loadMem_486822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486822 = call %struct.Memory* @routine_jmpq_.L_4867c0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486822, i64 -98, i64 5)
  store %struct.Memory* %call_486822, %struct.Memory** %MEMORY

  br label %block_.L_4867c0

  ; Code: .L_486827:	 RIP: 486827	 Bytes: 0
block_.L_486827:

  ; Code: jmpq .L_48682c	 RIP: 486827	 Bytes: 5
  %loadMem_486827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486827 = call %struct.Memory* @routine_jmpq_.L_48682c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486827, i64 5, i64 5)
  store %struct.Memory* %call_486827, %struct.Memory** %MEMORY

  br label %block_.L_48682c

  ; Code: .L_48682c:	 RIP: 48682c	 Bytes: 0
block_.L_48682c:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 48682c	 Bytes: 3
  %loadMem_48682c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48682c = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48682c)
  store %struct.Memory* %call_48682c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 48682f	 Bytes: 3
  %loadMem_48682f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48682f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48682f)
  store %struct.Memory* %call_48682f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 486832	 Bytes: 3
  %loadMem_486832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486832 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486832)
  store %struct.Memory* %call_486832, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4867af	 RIP: 486835	 Bytes: 5
  %loadMem_486835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486835 = call %struct.Memory* @routine_jmpq_.L_4867af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486835, i64 -134, i64 5)
  store %struct.Memory* %call_486835, %struct.Memory** %MEMORY

  br label %block_.L_4867af

  ; Code: .L_48683a:	 RIP: 48683a	 Bytes: 0
block_.L_48683a:

  ; Code: movl $0x0, -0x30(%rbp)	 RIP: 48683a	 Bytes: 7
  %loadMem_48683a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48683a = call %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48683a)
  store %struct.Memory* %call_48683a, %struct.Memory** %MEMORY

  ; Code: .L_486841:	 RIP: 486841	 Bytes: 0
  br label %block_.L_486841
block_.L_486841:

  ; Code: cmpl $0x2, -0x30(%rbp)	 RIP: 486841	 Bytes: 4
  %loadMem_486841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486841 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486841)
  store %struct.Memory* %call_486841, %struct.Memory** %MEMORY

  ; Code: jge .L_4868d2	 RIP: 486845	 Bytes: 6
  %loadMem_486845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486845 = call %struct.Memory* @routine_jge_.L_4868d2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486845, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_486845, %struct.Memory** %MEMORY

  %loadBr_486845 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486845 = icmp eq i8 %loadBr_486845, 1
  br i1 %cmpBr_486845, label %block_.L_4868d2, label %block_48684b

block_48684b:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 48684b	 Bytes: 7
  %loadMem_48684b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48684b = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48684b)
  store %struct.Memory* %call_48684b, %struct.Memory** %MEMORY

  ; Code: .L_486852:	 RIP: 486852	 Bytes: 0
  br label %block_.L_486852
block_.L_486852:

  ; Code: cmpl $0x12, -0x2c(%rbp)	 RIP: 486852	 Bytes: 4
  %loadMem_486852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486852 = call %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486852)
  store %struct.Memory* %call_486852, %struct.Memory** %MEMORY

  ; Code: jge .L_4868bf	 RIP: 486856	 Bytes: 6
  %loadMem_486856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486856 = call %struct.Memory* @routine_jge_.L_4868bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486856, i8* %BRANCH_TAKEN, i64 105, i64 6, i64 6)
  store %struct.Memory* %call_486856, %struct.Memory** %MEMORY

  %loadBr_486856 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486856 = icmp eq i8 %loadBr_486856, 1
  br i1 %cmpBr_486856, label %block_.L_4868bf, label %block_48685c

block_48685c:
  ; Code: movq $0x6f9560, %rax	 RIP: 48685c	 Bytes: 10
  %loadMem_48685c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48685c = call %struct.Memory* @routine_movq__0x6f9560___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48685c)
  store %struct.Memory* %call_48685c, %struct.Memory** %MEMORY

  ; Code: addq $0x90, %rax	 RIP: 486866	 Bytes: 6
  %loadMem_486866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486866 = call %struct.Memory* @routine_addq__0x90___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486866)
  store %struct.Memory* %call_486866, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 48686c	 Bytes: 4
  %loadMem_48686c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48686c = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48686c)
  store %struct.Memory* %call_48686c, %struct.Memory** %MEMORY

  ; Code: imulq $0x48, %rcx, %rcx	 RIP: 486870	 Bytes: 4
  %loadMem_486870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486870 = call %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486870)
  store %struct.Memory* %call_486870, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 486874	 Bytes: 3
  %loadMem_486874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486874 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486874)
  store %struct.Memory* %call_486874, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 486877	 Bytes: 4
  %loadMem_486877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486877 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486877)
  store %struct.Memory* %call_486877, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 48687b	 Bytes: 3
  %loadMem_48687b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48687b = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48687b)
  store %struct.Memory* %call_48687b, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 48687e	 Bytes: 8
  %loadMem_48687e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48687e = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48687e)
  store %struct.Memory* %call_48687e, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rax), %rax	 RIP: 486886	 Bytes: 7
  %loadMem_486886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486886 = call %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486886)
  store %struct.Memory* %call_486886, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %esi	 RIP: 48688d	 Bytes: 3
  %loadMem_48688d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48688d = call %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48688d)
  store %struct.Memory* %call_48688d, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %esi	 RIP: 486890	 Bytes: 3
  %loadMem_486890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486890 = call %struct.Memory* @routine_addl__0x8___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486890)
  store %struct.Memory* %call_486890, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rcx	 RIP: 486893	 Bytes: 3
  %loadMem_486893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486893 = call %struct.Memory* @routine_movslq__esi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486893)
  store %struct.Memory* %call_486893, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486896	 Bytes: 4
  %loadMem_486896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486896 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486896)
  store %struct.Memory* %call_486896, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 48689a	 Bytes: 4
  %loadMem_48689a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48689a = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48689a)
  store %struct.Memory* %call_48689a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 48689e	 Bytes: 4
  %loadMem_48689e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48689e = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48689e)
  store %struct.Memory* %call_48689e, %struct.Memory** %MEMORY

  ; Code: movslq -0x30(%rbp), %rcx	 RIP: 4868a2	 Bytes: 4
  %loadMem_4868a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868a2 = call %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868a2)
  store %struct.Memory* %call_4868a2, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 4868a6	 Bytes: 4
  %loadMem_4868a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868a6 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868a6)
  store %struct.Memory* %call_4868a6, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 4868aa	 Bytes: 4
  %loadMem_4868aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868aa = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868aa)
  store %struct.Memory* %call_4868aa, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,4)	 RIP: 4868ae	 Bytes: 3
  %loadMem_4868ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868ae = call %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868ae)
  store %struct.Memory* %call_4868ae, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 4868b1	 Bytes: 3
  %loadMem_4868b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868b1 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868b1)
  store %struct.Memory* %call_4868b1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4868b4	 Bytes: 3
  %loadMem_4868b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868b4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868b4)
  store %struct.Memory* %call_4868b4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 4868b7	 Bytes: 3
  %loadMem_4868b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868b7 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868b7)
  store %struct.Memory* %call_4868b7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486852	 RIP: 4868ba	 Bytes: 5
  %loadMem_4868ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868ba = call %struct.Memory* @routine_jmpq_.L_486852(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868ba, i64 -104, i64 5)
  store %struct.Memory* %call_4868ba, %struct.Memory** %MEMORY

  br label %block_.L_486852

  ; Code: .L_4868bf:	 RIP: 4868bf	 Bytes: 0
block_.L_4868bf:

  ; Code: jmpq .L_4868c4	 RIP: 4868bf	 Bytes: 5
  %loadMem_4868bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868bf = call %struct.Memory* @routine_jmpq_.L_4868c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868bf, i64 5, i64 5)
  store %struct.Memory* %call_4868bf, %struct.Memory** %MEMORY

  br label %block_.L_4868c4

  ; Code: .L_4868c4:	 RIP: 4868c4	 Bytes: 0
block_.L_4868c4:

  ; Code: movl -0x30(%rbp), %eax	 RIP: 4868c4	 Bytes: 3
  %loadMem_4868c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868c4 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868c4)
  store %struct.Memory* %call_4868c4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4868c7	 Bytes: 3
  %loadMem_4868c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868c7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868c7)
  store %struct.Memory* %call_4868c7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 4868ca	 Bytes: 3
  %loadMem_4868ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868ca = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868ca)
  store %struct.Memory* %call_4868ca, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486841	 RIP: 4868cd	 Bytes: 5
  %loadMem_4868cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868cd = call %struct.Memory* @routine_jmpq_.L_486841(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868cd, i64 -140, i64 5)
  store %struct.Memory* %call_4868cd, %struct.Memory** %MEMORY

  br label %block_.L_486841

  ; Code: .L_4868d2:	 RIP: 4868d2	 Bytes: 0
block_.L_4868d2:

  ; Code: jmpq .L_4868d7	 RIP: 4868d2	 Bytes: 5
  %loadMem_4868d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868d2 = call %struct.Memory* @routine_jmpq_.L_4868d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868d2, i64 5, i64 5)
  store %struct.Memory* %call_4868d2, %struct.Memory** %MEMORY

  br label %block_.L_4868d7

  ; Code: .L_4868d7:	 RIP: 4868d7	 Bytes: 0
block_.L_4868d7:

  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4868d7	 Bytes: 7
  %loadMem_4868d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868d7 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868d7)
  store %struct.Memory* %call_4868d7, %struct.Memory** %MEMORY

  ; Code: .L_4868de:	 RIP: 4868de	 Bytes: 0
  br label %block_.L_4868de
block_.L_4868de:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 4868de	 Bytes: 4
  %loadMem_4868de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868de = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868de)
  store %struct.Memory* %call_4868de, %struct.Memory** %MEMORY

  ; Code: jge .L_4869c2	 RIP: 4868e2	 Bytes: 6
  %loadMem_4868e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868e2 = call %struct.Memory* @routine_jge_.L_4869c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868e2, i8* %BRANCH_TAKEN, i64 224, i64 6, i64 6)
  store %struct.Memory* %call_4868e2, %struct.Memory** %MEMORY

  %loadBr_4868e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4868e2 = icmp eq i8 %loadBr_4868e2, 1
  br i1 %cmpBr_4868e2, label %block_.L_4869c2, label %block_4868e8

block_4868e8:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4868e8	 Bytes: 7
  %loadMem_4868e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868e8 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868e8)
  store %struct.Memory* %call_4868e8, %struct.Memory** %MEMORY

  ; Code: .L_4868ef:	 RIP: 4868ef	 Bytes: 0
  br label %block_.L_4868ef
block_.L_4868ef:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 4868ef	 Bytes: 4
  %loadMem_4868ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868ef = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868ef)
  store %struct.Memory* %call_4868ef, %struct.Memory** %MEMORY

  ; Code: jge .L_4869af	 RIP: 4868f3	 Bytes: 6
  %loadMem_4868f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868f3 = call %struct.Memory* @routine_jge_.L_4869af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868f3, i8* %BRANCH_TAKEN, i64 188, i64 6, i64 6)
  store %struct.Memory* %call_4868f3, %struct.Memory** %MEMORY

  %loadBr_4868f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4868f3 = icmp eq i8 %loadBr_4868f3, 1
  br i1 %cmpBr_4868f3, label %block_.L_4869af, label %block_4868f9

block_4868f9:
  ; Code: leaq -0x90(%rbp), %rax	 RIP: 4868f9	 Bytes: 7
  %loadMem_4868f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4868f9 = call %struct.Memory* @routine_leaq_MINUS0x90__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4868f9)
  store %struct.Memory* %call_4868f9, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 486900	 Bytes: 4
  %loadMem_486900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486900 = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486900)
  store %struct.Memory* %call_486900, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 486904	 Bytes: 4
  %loadMem_486904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486904 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486904)
  store %struct.Memory* %call_486904, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 486908	 Bytes: 3
  %loadMem_486908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486908 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486908)
  store %struct.Memory* %call_486908, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 48690b	 Bytes: 4
  %loadMem_48690b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48690b = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48690b)
  store %struct.Memory* %call_48690b, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 48690f	 Bytes: 3
  %loadMem_48690f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48690f = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48690f)
  store %struct.Memory* %call_48690f, %struct.Memory** %MEMORY

  ; Code: movw %dx, %si	 RIP: 486912	 Bytes: 3
  %loadMem_486912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486912 = call %struct.Memory* @routine_movw__dx___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486912)
  store %struct.Memory* %call_486912, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 486915	 Bytes: 8
  %loadMem_486915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486915 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486915)
  store %struct.Memory* %call_486915, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 48691d	 Bytes: 7
  %loadMem_48691d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48691d = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48691d)
  store %struct.Memory* %call_48691d, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edx	 RIP: 486924	 Bytes: 6
  %loadMem_486924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486924 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486924)
  store %struct.Memory* %call_486924, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 48692a	 Bytes: 3
  %loadMem_48692a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48692a = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48692a)
  store %struct.Memory* %call_48692a, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 48692d	 Bytes: 3
  %loadMem_48692d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48692d = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48692d)
  store %struct.Memory* %call_48692d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486930	 Bytes: 4
  %loadMem_486930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486930 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486930)
  store %struct.Memory* %call_486930, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %edx	 RIP: 486934	 Bytes: 6
  %loadMem_486934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486934 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486934)
  store %struct.Memory* %call_486934, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 48693a	 Bytes: 3
  %loadMem_48693a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48693a = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48693a)
  store %struct.Memory* %call_48693a, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 48693d	 Bytes: 3
  %loadMem_48693d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48693d = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48693d)
  store %struct.Memory* %call_48693d, %struct.Memory** %MEMORY

  ; Code: movw %si, (%rax,%rcx,2)	 RIP: 486940	 Bytes: 4
  %loadMem_486940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486940 = call %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486940)
  store %struct.Memory* %call_486940, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 486944	 Bytes: 8
  %loadMem_486944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486944 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486944)
  store %struct.Memory* %call_486944, %struct.Memory** %MEMORY

  ; Code: addq $0xb8, %rax	 RIP: 48694c	 Bytes: 6
  %loadMem_48694c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48694c = call %struct.Memory* @routine_addq__0xb8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48694c)
  store %struct.Memory* %call_48694c, %struct.Memory** %MEMORY

  ; Code: movslq -0x28(%rbp), %rcx	 RIP: 486952	 Bytes: 4
  %loadMem_486952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486952 = call %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486952)
  store %struct.Memory* %call_486952, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rcx	 RIP: 486956	 Bytes: 4
  %loadMem_486956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486956 = call %struct.Memory* @routine_shlq__0x9___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486956)
  store %struct.Memory* %call_486956, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48695a	 Bytes: 3
  %loadMem_48695a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48695a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48695a)
  store %struct.Memory* %call_48695a, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 48695d	 Bytes: 4
  %loadMem_48695d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48695d = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48695d)
  store %struct.Memory* %call_48695d, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 486961	 Bytes: 4
  %loadMem_486961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486961 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486961)
  store %struct.Memory* %call_486961, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 486965	 Bytes: 3
  %loadMem_486965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486965 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486965)
  store %struct.Memory* %call_486965, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 486968	 Bytes: 4
  %loadMem_486968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486968 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486968)
  store %struct.Memory* %call_486968, %struct.Memory** %MEMORY

  ; Code: movw (%rax,%rcx,2), %si	 RIP: 48696c	 Bytes: 4
  %loadMem_48696c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48696c = call %struct.Memory* @routine_movw___rax__rcx_2____si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48696c)
  store %struct.Memory* %call_48696c, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 486970	 Bytes: 8
  %loadMem_486970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486970 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486970)
  store %struct.Memory* %call_486970, %struct.Memory** %MEMORY

  ; Code: addq $0x3138, %rax	 RIP: 486978	 Bytes: 6
  %loadMem_486978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486978 = call %struct.Memory* @routine_addq__0x3138___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486978)
  store %struct.Memory* %call_486978, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %edx	 RIP: 48697e	 Bytes: 6
  %loadMem_48697e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48697e = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48697e)
  store %struct.Memory* %call_48697e, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 486984	 Bytes: 3
  %loadMem_486984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486984 = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486984)
  store %struct.Memory* %call_486984, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 486987	 Bytes: 3
  %loadMem_486987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486987 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486987)
  store %struct.Memory* %call_486987, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 48698a	 Bytes: 4
  %loadMem_48698a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48698a = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48698a)
  store %struct.Memory* %call_48698a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 48698e	 Bytes: 3
  %loadMem_48698e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48698e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48698e)
  store %struct.Memory* %call_48698e, %struct.Memory** %MEMORY

  ; Code: movl -0xe0(%rbp), %edx	 RIP: 486991	 Bytes: 6
  %loadMem_486991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486991 = call %struct.Memory* @routine_movl_MINUS0xe0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486991)
  store %struct.Memory* %call_486991, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 486997	 Bytes: 3
  %loadMem_486997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486997 = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486997)
  store %struct.Memory* %call_486997, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 48699a	 Bytes: 3
  %loadMem_48699a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48699a = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48699a)
  store %struct.Memory* %call_48699a, %struct.Memory** %MEMORY

  ; Code: movw %si, (%rax,%rcx,2)	 RIP: 48699d	 Bytes: 4
  %loadMem_48699d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_48699d = call %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_48699d)
  store %struct.Memory* %call_48699d, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 4869a1	 Bytes: 3
  %loadMem_4869a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869a1 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869a1)
  store %struct.Memory* %call_4869a1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4869a4	 Bytes: 3
  %loadMem_4869a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869a4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869a4)
  store %struct.Memory* %call_4869a4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 4869a7	 Bytes: 3
  %loadMem_4869a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869a7 = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869a7)
  store %struct.Memory* %call_4869a7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4868ef	 RIP: 4869aa	 Bytes: 5
  %loadMem_4869aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869aa = call %struct.Memory* @routine_jmpq_.L_4868ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869aa, i64 -187, i64 5)
  store %struct.Memory* %call_4869aa, %struct.Memory** %MEMORY

  br label %block_.L_4868ef

  ; Code: .L_4869af:	 RIP: 4869af	 Bytes: 0
block_.L_4869af:

  ; Code: jmpq .L_4869b4	 RIP: 4869af	 Bytes: 5
  %loadMem_4869af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869af = call %struct.Memory* @routine_jmpq_.L_4869b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869af, i64 5, i64 5)
  store %struct.Memory* %call_4869af, %struct.Memory** %MEMORY

  br label %block_.L_4869b4

  ; Code: .L_4869b4:	 RIP: 4869b4	 Bytes: 0
block_.L_4869b4:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 4869b4	 Bytes: 3
  %loadMem_4869b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869b4 = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869b4)
  store %struct.Memory* %call_4869b4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4869b7	 Bytes: 3
  %loadMem_4869b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869b7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869b7)
  store %struct.Memory* %call_4869b7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 4869ba	 Bytes: 3
  %loadMem_4869ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869ba = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869ba)
  store %struct.Memory* %call_4869ba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4868de	 RIP: 4869bd	 Bytes: 5
  %loadMem_4869bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869bd = call %struct.Memory* @routine_jmpq_.L_4868de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869bd, i64 -223, i64 5)
  store %struct.Memory* %call_4869bd, %struct.Memory** %MEMORY

  br label %block_.L_4868de

  ; Code: .L_4869c2:	 RIP: 4869c2	 Bytes: 0
block_.L_4869c2:

  ; Code: movq 0x6cb900, %rax	 RIP: 4869c2	 Bytes: 8
  %loadMem_4869c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869c2 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869c2)
  store %struct.Memory* %call_4869c2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 4869ca	 Bytes: 7
  %loadMem_4869ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869ca = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869ca)
  store %struct.Memory* %call_4869ca, %struct.Memory** %MEMORY

  ; Code: je .L_486aa1	 RIP: 4869d1	 Bytes: 6
  %loadMem_4869d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869d1 = call %struct.Memory* @routine_je_.L_486aa1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869d1, i8* %BRANCH_TAKEN, i64 208, i64 6, i64 6)
  store %struct.Memory* %call_4869d1, %struct.Memory** %MEMORY

  %loadBr_4869d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4869d1 = icmp eq i8 %loadBr_4869d1, 1
  br i1 %cmpBr_4869d1, label %block_.L_486aa1, label %block_4869d7

block_4869d7:
  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 4869d7	 Bytes: 7
  %loadMem_4869d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869d7 = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869d7)
  store %struct.Memory* %call_4869d7, %struct.Memory** %MEMORY

  ; Code: .L_4869de:	 RIP: 4869de	 Bytes: 0
  br label %block_.L_4869de
block_.L_4869de:

  ; Code: cmpl $0x2, -0x2c(%rbp)	 RIP: 4869de	 Bytes: 4
  %loadMem_4869de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869de = call %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869de)
  store %struct.Memory* %call_4869de, %struct.Memory** %MEMORY

  ; Code: jge .L_486a9c	 RIP: 4869e2	 Bytes: 6
  %loadMem_4869e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869e2 = call %struct.Memory* @routine_jge_.L_486a9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869e2, i8* %BRANCH_TAKEN, i64 186, i64 6, i64 6)
  store %struct.Memory* %call_4869e2, %struct.Memory** %MEMORY

  %loadBr_4869e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4869e2 = icmp eq i8 %loadBr_4869e2, 1
  br i1 %cmpBr_4869e2, label %block_.L_486a9c, label %block_4869e8

block_4869e8:
  ; Code: movl $0x0, -0x3c(%rbp)	 RIP: 4869e8	 Bytes: 7
  %loadMem_4869e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869e8 = call %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869e8)
  store %struct.Memory* %call_4869e8, %struct.Memory** %MEMORY

  ; Code: .L_4869ef:	 RIP: 4869ef	 Bytes: 0
  br label %block_.L_4869ef
block_.L_4869ef:

  ; Code: cmpl $0x4, -0x3c(%rbp)	 RIP: 4869ef	 Bytes: 4
  %loadMem_4869ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869ef = call %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869ef)
  store %struct.Memory* %call_4869ef, %struct.Memory** %MEMORY

  ; Code: jge .L_486a89	 RIP: 4869f3	 Bytes: 6
  %loadMem_4869f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869f3 = call %struct.Memory* @routine_jge_.L_486a89(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869f3, i8* %BRANCH_TAKEN, i64 150, i64 6, i64 6)
  store %struct.Memory* %call_4869f3, %struct.Memory** %MEMORY

  %loadBr_4869f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4869f3 = icmp eq i8 %loadBr_4869f3, 1
  br i1 %cmpBr_4869f3, label %block_.L_486a89, label %block_4869f9

block_4869f9:
  ; Code: movl $0x0, -0x38(%rbp)	 RIP: 4869f9	 Bytes: 7
  %loadMem_4869f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4869f9 = call %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4869f9)
  store %struct.Memory* %call_4869f9, %struct.Memory** %MEMORY

  ; Code: .L_486a00:	 RIP: 486a00	 Bytes: 0
  br label %block_.L_486a00
block_.L_486a00:

  ; Code: cmpl $0x4, -0x38(%rbp)	 RIP: 486a00	 Bytes: 4
  %loadMem_486a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a00 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a00)
  store %struct.Memory* %call_486a00, %struct.Memory** %MEMORY

  ; Code: jge .L_486a76	 RIP: 486a04	 Bytes: 6
  %loadMem_486a04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a04 = call %struct.Memory* @routine_jge_.L_486a76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a04, i8* %BRANCH_TAKEN, i64 114, i64 6, i64 6)
  store %struct.Memory* %call_486a04, %struct.Memory** %MEMORY

  %loadBr_486a04 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_486a04 = icmp eq i8 %loadBr_486a04, 1
  br i1 %cmpBr_486a04, label %block_.L_486a76, label %block_486a0a

block_486a0a:
  ; Code: leaq -0x1f0(%rbp), %rax	 RIP: 486a0a	 Bytes: 7
  %loadMem_486a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a0a = call %struct.Memory* @routine_leaq_MINUS0x1f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a0a)
  store %struct.Memory* %call_486a0a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 486a11	 Bytes: 4
  %loadMem_486a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a11 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a11)
  store %struct.Memory* %call_486a11, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 486a15	 Bytes: 4
  %loadMem_486a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a15 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a15)
  store %struct.Memory* %call_486a15, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 486a19	 Bytes: 3
  %loadMem_486a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a19 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a19)
  store %struct.Memory* %call_486a19, %struct.Memory** %MEMORY

  ; Code: movslq -0x3c(%rbp), %rcx	 RIP: 486a1c	 Bytes: 4
  %loadMem_486a1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a1c = call %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a1c)
  store %struct.Memory* %call_486a1c, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 486a20	 Bytes: 4
  %loadMem_486a20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a20 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a20)
  store %struct.Memory* %call_486a20, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 486a24	 Bytes: 3
  %loadMem_486a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a24 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a24)
  store %struct.Memory* %call_486a24, %struct.Memory** %MEMORY

  ; Code: movslq -0x38(%rbp), %rcx	 RIP: 486a27	 Bytes: 4
  %loadMem_486a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a27 = call %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a27)
  store %struct.Memory* %call_486a27, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 486a2b	 Bytes: 3
  %loadMem_486a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a2b = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a2b)
  store %struct.Memory* %call_486a2b, %struct.Memory** %MEMORY

  ; Code: movw %dx, %si	 RIP: 486a2e	 Bytes: 3
  %loadMem_486a2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a2e = call %struct.Memory* @routine_movw__dx___si(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a2e)
  store %struct.Memory* %call_486a2e, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 486a31	 Bytes: 8
  %loadMem_486a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a31 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a31)
  store %struct.Memory* %call_486a31, %struct.Memory** %MEMORY

  ; Code: movq 0x1940(%rax), %rax	 RIP: 486a39	 Bytes: 7
  %loadMem_486a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a39 = call %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a39)
  store %struct.Memory* %call_486a39, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 486a40	 Bytes: 4
  %loadMem_486a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a40 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a40)
  store %struct.Memory* %call_486a40, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486a44	 Bytes: 4
  %loadMem_486a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a44 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a44)
  store %struct.Memory* %call_486a44, %struct.Memory** %MEMORY

  ; Code: movl -0xe8(%rbp), %edx	 RIP: 486a48	 Bytes: 6
  %loadMem_486a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a48 = call %struct.Memory* @routine_movl_MINUS0xe8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a48)
  store %struct.Memory* %call_486a48, %struct.Memory** %MEMORY

  ; Code: addl -0x3c(%rbp), %edx	 RIP: 486a4e	 Bytes: 3
  %loadMem_486a4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a4e = call %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a4e)
  store %struct.Memory* %call_486a4e, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 486a51	 Bytes: 3
  %loadMem_486a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a51 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a51)
  store %struct.Memory* %call_486a51, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 486a54	 Bytes: 4
  %loadMem_486a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a54 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a54)
  store %struct.Memory* %call_486a54, %struct.Memory** %MEMORY

  ; Code: movl -0xe4(%rbp), %edx	 RIP: 486a58	 Bytes: 6
  %loadMem_486a58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a58 = call %struct.Memory* @routine_movl_MINUS0xe4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a58)
  store %struct.Memory* %call_486a58, %struct.Memory** %MEMORY

  ; Code: addl -0x38(%rbp), %edx	 RIP: 486a5e	 Bytes: 3
  %loadMem_486a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a5e = call %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a5e)
  store %struct.Memory* %call_486a5e, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 486a61	 Bytes: 3
  %loadMem_486a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a61 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a61)
  store %struct.Memory* %call_486a61, %struct.Memory** %MEMORY

  ; Code: movw %si, (%rax,%rcx,2)	 RIP: 486a64	 Bytes: 4
  %loadMem_486a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a64 = call %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a64)
  store %struct.Memory* %call_486a64, %struct.Memory** %MEMORY

  ; Code: movl -0x38(%rbp), %eax	 RIP: 486a68	 Bytes: 3
  %loadMem_486a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a68 = call %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a68)
  store %struct.Memory* %call_486a68, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486a6b	 Bytes: 3
  %loadMem_486a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a6b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a6b)
  store %struct.Memory* %call_486a6b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38(%rbp)	 RIP: 486a6e	 Bytes: 3
  %loadMem_486a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a6e = call %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a6e)
  store %struct.Memory* %call_486a6e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_486a00	 RIP: 486a71	 Bytes: 5
  %loadMem_486a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a71 = call %struct.Memory* @routine_jmpq_.L_486a00(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a71, i64 -113, i64 5)
  store %struct.Memory* %call_486a71, %struct.Memory** %MEMORY

  br label %block_.L_486a00

  ; Code: .L_486a76:	 RIP: 486a76	 Bytes: 0
block_.L_486a76:

  ; Code: jmpq .L_486a7b	 RIP: 486a76	 Bytes: 5
  %loadMem_486a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a76 = call %struct.Memory* @routine_jmpq_.L_486a7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a76, i64 5, i64 5)
  store %struct.Memory* %call_486a76, %struct.Memory** %MEMORY

  br label %block_.L_486a7b

  ; Code: .L_486a7b:	 RIP: 486a7b	 Bytes: 0
block_.L_486a7b:

  ; Code: movl -0x3c(%rbp), %eax	 RIP: 486a7b	 Bytes: 3
  %loadMem_486a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a7b = call %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a7b)
  store %struct.Memory* %call_486a7b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486a7e	 Bytes: 3
  %loadMem_486a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a7e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a7e)
  store %struct.Memory* %call_486a7e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3c(%rbp)	 RIP: 486a81	 Bytes: 3
  %loadMem_486a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a81 = call %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a81)
  store %struct.Memory* %call_486a81, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4869ef	 RIP: 486a84	 Bytes: 5
  %loadMem_486a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a84 = call %struct.Memory* @routine_jmpq_.L_4869ef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a84, i64 -149, i64 5)
  store %struct.Memory* %call_486a84, %struct.Memory** %MEMORY

  br label %block_.L_4869ef

  ; Code: .L_486a89:	 RIP: 486a89	 Bytes: 0
block_.L_486a89:

  ; Code: jmpq .L_486a8e	 RIP: 486a89	 Bytes: 5
  %loadMem_486a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a89 = call %struct.Memory* @routine_jmpq_.L_486a8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a89, i64 5, i64 5)
  store %struct.Memory* %call_486a89, %struct.Memory** %MEMORY

  br label %block_.L_486a8e

  ; Code: .L_486a8e:	 RIP: 486a8e	 Bytes: 0
block_.L_486a8e:

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 486a8e	 Bytes: 3
  %loadMem_486a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a8e = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a8e)
  store %struct.Memory* %call_486a8e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 486a91	 Bytes: 3
  %loadMem_486a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a91 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a91)
  store %struct.Memory* %call_486a91, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 486a94	 Bytes: 3
  %loadMem_486a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a94 = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a94)
  store %struct.Memory* %call_486a94, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4869de	 RIP: 486a97	 Bytes: 5
  %loadMem_486a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a97 = call %struct.Memory* @routine_jmpq_.L_4869de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a97, i64 -185, i64 5)
  store %struct.Memory* %call_486a97, %struct.Memory** %MEMORY

  br label %block_.L_4869de

  ; Code: .L_486a9c:	 RIP: 486a9c	 Bytes: 0
block_.L_486a9c:

  ; Code: jmpq .L_486aa1	 RIP: 486a9c	 Bytes: 5
  %loadMem_486a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486a9c = call %struct.Memory* @routine_jmpq_.L_486aa1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486a9c, i64 5, i64 5)
  store %struct.Memory* %call_486a9c, %struct.Memory** %MEMORY

  br label %block_.L_486aa1

  ; Code: .L_486aa1:	 RIP: 486aa1	 Bytes: 0
block_.L_486aa1:

  ; Code: jmpq .L_486aa6	 RIP: 486aa1	 Bytes: 5
  %loadMem_486aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486aa1 = call %struct.Memory* @routine_jmpq_.L_486aa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486aa1, i64 5, i64 5)
  store %struct.Memory* %call_486aa1, %struct.Memory** %MEMORY

  br label %block_.L_486aa6

  ; Code: .L_486aa6:	 RIP: 486aa6	 Bytes: 0
block_.L_486aa6:

  ; Code: movl -0x4c(%rbp), %eax	 RIP: 486aa6	 Bytes: 3
  %loadMem_486aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486aa6 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486aa6)
  store %struct.Memory* %call_486aa6, %struct.Memory** %MEMORY

  ; Code: addq $0x308, %rsp	 RIP: 486aa9	 Bytes: 7
  %loadMem_486aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486aa9 = call %struct.Memory* @routine_addq__0x308___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486aa9)
  store %struct.Memory* %call_486aa9, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 486ab0	 Bytes: 1
  %loadMem_486ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486ab0 = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486ab0)
  store %struct.Memory* %call_486ab0, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 486ab1	 Bytes: 1
  %loadMem_486ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486ab1 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486ab1)
  store %struct.Memory* %call_486ab1, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 486ab2	 Bytes: 1
  %loadMem_486ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_486ab2 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_486ab2)
  store %struct.Memory* %call_486ab2, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_486ab2
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x308___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 776)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 4294967295)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x138__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0x2e030__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2e030__rip__type* @G_0x2e030__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x2def0__rip____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2def0__rip__type* @G_0x2def0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x2___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 2)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 24
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdx__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x1f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R10D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 3)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x1fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_shll__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_shll__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_shll__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x200__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0xe0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb900___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x98__r11____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 220
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x9c__r11____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0xe0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 224
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xa8__r11____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xac__r11____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xe4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1f8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xe8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movsd__xmm2__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 256
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd__xmm1__MINUS0x108__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 264
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x3758__r11____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R11
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb900___rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0xc__rbx____rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x278___rbx___rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %9, i64 632)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rbx___r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = load i64, i64* %RBX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x20c__r11____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x16c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xc__r11____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R11
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0xe0__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 224
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r10d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x204__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 4294967295)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x150__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0xdc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x208__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0x20c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 524
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x20c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 524
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_0x6cb8f8___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0xd8__r9_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = add i64 %9, 216
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_483c09(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 312
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483ba6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x11868__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 71784
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x134__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl__edx__MINUS0x210__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_483bb3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x210__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x210__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 336
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483bf0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x14c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x214__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483bfd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x214__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x214__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_483c42(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x68__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x140__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x13c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483c52(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4294967295)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x218__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_483c97(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x128__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x124__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x21c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483ca7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x21c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x21c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 280
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_483ccd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 284
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_483cdd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483d18(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x118__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x11c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 284
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_483d00(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x224__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483d0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x224__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x220__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x10c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x114__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x7fffffff____rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 2147483647)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xe4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xe8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.intrapred_luma(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x9__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 9)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4856bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__al__MINUS0x225__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 549
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_je_.L_483de3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483d95(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x7__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_483daa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 272
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jne_.L_483de3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483dbe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x8__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 8)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_483dd3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 268
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x0__MINUS0x114__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 276
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setne__al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %AL)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x225__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 549
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i8
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %6 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i8 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i8 %7, 7
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %11, i64 1)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 255
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 500
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb8f8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x95c__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 2396
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483e1b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483ea0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x960__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483e49(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_483e44(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_483e49(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4856b1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x0__0x964__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483e77(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_483e72(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_483e77(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x0__0x968__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_483e9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x5__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_483e9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_483ea0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x1f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 500
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4856ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x9a0__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_483ff7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_483f76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_483f63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x726418___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x726418_type* @G_0x726418 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0xf0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xec__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0xb8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 184)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzwl___rax__rdx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0xd0__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -208
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483ee1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_483f68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483ed0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x120__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 288
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_483f92(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x22c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483fae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movsd_0x2d89e__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2d89e__rip__type* @G_0x2d89e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_MINUS0x18__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.floor_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl_MINUS0x22c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 556
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0xd0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x18__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.SATD(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl___rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_483ff2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_4856a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4842e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_484122(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_48410f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  store i16 %6, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw___rax__rcx_2____dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_addq__0x3138___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 12600)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__esi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0xe0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__dx____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movl_MINUS0xf0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0xec__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}




















define %struct.Memory* @routine_movzwl___rax__rcx_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_subl__edi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addq__0x3338___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 6)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_484024(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_484114(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_484013(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_0x6cc628___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cc628_type* @G_0x6cc628 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_callq_.store_coding_state(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x48__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x10__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x120__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 288
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.RDCost_for_4x4IntraBlocks(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 216
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0xd8__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fsub double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subsd_MINUS0x100__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE3MVnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = add i64 %3, 4
  %8 = inttoptr i64 %7 to float*
  %9 = load float, float* %8
  %10 = add i64 %3, 8
  %11 = inttoptr i64 %10 to float*
  %12 = load float, float* %11
  %13 = add i64 %3, 12
  %14 = inttoptr i64 %13 to float*
  %15 = load float, float* %14
  %16 = bitcast i8* %2 to float*
  store float %6, float* %16, align 1
  %17 = getelementptr inbounds i8, i8* %2, i64 4
  %18 = bitcast i8* %17 to float*
  store float %9, float* %18, align 1
  %19 = getelementptr inbounds i8, i8* %2, i64 8
  %20 = bitcast i8* %19 to float*
  store float %12, float* %20, align 1
  %21 = getelementptr inbounds i8, i8* %2, i64 12
  %22 = bitcast i8* %21 to float*
  store float %15, float* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps_0x3964c__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x3964c__rip__type* @G_0x3964c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE3MVnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PANDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = and i64 %12, %7
  %17 = and i64 %15, %10
  %18 = trunc i64 %16 to i32
  %19 = lshr i64 %16, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast i8* %2 to i32*
  store i32 %18, i32* %21, align 1
  %22 = getelementptr inbounds i8, i8* %2, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %20, i32* %23, align 1
  %24 = trunc i64 %17 to i32
  %25 = getelementptr inbounds i8, i8* %2, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = lshr i64 %17, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pand__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PANDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i64) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %3 to double*
  %8 = load double, double* %7
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd_MINUS0x108__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp ne i8 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %2, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %14 = select i1 %11, i64 %3, i64 %4
  store i64 %14, i64* %13, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jbe_.L_4842cf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = bitcast i8* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}






define %struct.Memory* @routine_cmpl__0x2__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_484228(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x12__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 18)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_484215(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x3738__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_0x6cc608___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cc608_type* @G_0x6cc608 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4841b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48421a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4841a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4842b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 56
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4842a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x90__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1918__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0xe8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x3c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xe4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x38__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movzwl___rcx__rsi_2____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484240(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4842a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_48422f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movsd__xmm0__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 256
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_callq_.reset_coding_state(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4856a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_484539(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_484526(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x723720___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x723720_type* @G__0x723720 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d40f0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6d40f0_type* @G__0x6d40f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6f6fa0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x6f6fa0_type* @G__0x6f6fa0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6f6f90___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6f6f90_type* @G_0x6f6f90 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq___rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xf0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xec__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movzwl___rsi__r8_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x2138___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 8504)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x16c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 220
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 44
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r9d___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xe0__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 224
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x30__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 48
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movzwl___rsi__r8_2____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_subl__r9d___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edi__MINUS0x15c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x726418___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x726418_type* @G_0x726418 to i64))
  ret %struct.Memory* %11
}




















define %struct.Memory* @routine_addq__0xb8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 184)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x24__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_MINUS0x30__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__edi__MINUS0x158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_0x8__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}






















define %struct.Memory* @routine_addq__0x800___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2048)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_movl__edi__MINUS0x154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x154__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x15c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 348
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edi____r8__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x15c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rdx__rsi_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x1___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_addl__r9d___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edi__MINUS0x168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x158__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x168__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 360
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rdx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edi____rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x168__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rcx__rdx_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}














define %struct.Memory* @routine_movl__edi____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4842f9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48452b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4842e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4845b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4845a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_484551(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4845aa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_484540(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__ecx__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jge_.L_4846be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4846ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6f6fa0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6f6fa0_type* @G__0x6f6fa0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x722ff0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x722ff0_type* @G__0x722ff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}










define %struct.Memory* @routine_movl__edi____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}










define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}






















define %struct.Memory* @routine_jmpq_.L_48461a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4846b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_484609(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_xorl__edx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.RDCost_for_4x4Blocks_Chroma(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x160__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 352
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jge_.L_4847a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_484792(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6d40f0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6d40f0_type* @G__0x6d40f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6f8f20___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6f8f20_type* @G__0x6f8f20 to i64))
  ret %struct.Memory* %11
}
























































define %struct.Memory* @routine_jmpq_.L_484701(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_484797(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4846f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addl__0x8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 8)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_jge_.L_484853(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_484840(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6d2ec0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6d2ec0_type* @G__0x6d2ec0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


















define %struct.Memory* @routine_jmpq_.L_4847eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_484845(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4847da(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_484ee2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_484ecf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x6d2ec0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x6d2ec0_type* @G__0x6d2ec0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x722ff0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x722ff0_type* @G__0x722ff0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x30__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rsi__rdi_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rdi__rsi_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RDI
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_subl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R9D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r8d__MINUS0x168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl___rdx__rsi_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl_MINUS0x168__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 360
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r8d__MINUS0x158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x168__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 360
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl___rsi__rdx_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movl__r8d__MINUS0x15c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x15c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 348
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_addl___rcx__rdx_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i32, i32* %R8D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RCX
  %19 = load i64, i64* %RDX
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %17, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl__r8d__MINUS0x154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x11bf0__rcx____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 72688
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x15c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 348
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addq__0x2138___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 8504)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0xdc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 220
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x2c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 44
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r10d___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addl_MINUS0x30__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 48
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movzwl___rcx__rdx_2____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R10D to i64*
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl__r10d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R10D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__r9d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d__MINUS0x230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_4849b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x234__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484a02(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x15c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movslq__esi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x234__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x230__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_484a2f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x11bf0__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484ae8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x15c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0x2138___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8504)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xdc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xe0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzwl___rdx__rsi_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_484a8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484adc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_movl_MINUS0x23c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x238__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax___dx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1940__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__eax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movw__dx____rsi__rdi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movl_0x11bec__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x158__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 344
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shlq__0x5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 5)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movzwl___rsi__rdi_2____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 2
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R9D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_cmpl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_484b87(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x244__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484bc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0xb8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 184)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_movl_MINUS0x244__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x240__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_484bef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484c82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x158__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0xb8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 184)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_jle_.L_484c3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x24c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 588
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484c76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




























define %struct.Memory* @routine_movl_MINUS0x24c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 588
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x248__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_0x1918__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}




















define %struct.Memory* @routine_movl_0x11bf0__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 72688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x154__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 340
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movslq_MINUS0x16c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movslq__r9d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__eax__MINUS0x250__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_484d3c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x254__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484d91(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__0x800___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2048)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_movl_MINUS0x254__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x250__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_484dbe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484e85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x154__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__0x800___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2048)
  ret %struct.Memory* %12
}






























define %struct.Memory* @routine_jle_.L_484e24(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_484e79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1940__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movslq__eax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movw__cx____rdx__rsi_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_48486b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_484ed4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_48485a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jge_.L_48513a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0xe4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_485127(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xe8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x3c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl_MINUS0x3c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}






























define %struct.Memory* @routine_movl_MINUS0xe8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x3c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzwl___rax__rdx_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl_MINUS0x164__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 356
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6f6f90___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6f6f90_type* @G_0x6f6f90 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movq_0x1940__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}






























































define %struct.Memory* @routine_movq_0x8__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


















































































define %struct.Memory* @routine_jmpq_.L_484f06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48512c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_484ef3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sitofp i32 %6 to double
  %8 = bitcast i8* %2 to double*
  store double %7, double* %8, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x164__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0x18__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cvtsi2sdl_MINUS0x160__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SDI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}










define %struct.Memory* @routine_jbe_.L_48569d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JBEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485201(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4851ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






































define %struct.Memory* @routine_jmpq_.L_485191(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4851f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485180(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_485293(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485280(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x6f9560___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6f9560_type* @G__0x6f9560 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_0x3738__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_addl__0x4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 4)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl___rcx__rsi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_imulq__0x48___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 72)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_485219(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_485285(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485208(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_48532b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485318(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x90___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 144)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_addl__0x8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_4852ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48531d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_48529a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4855f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x6d0920___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6d0920_type* @G__0x6d0920 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6cd4f0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x6cd4f0_type* @G__0x6cd4f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x7107b0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x7107b0_type* @G__0x7107b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d4600___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x6d4600_type* @G__0x6d4600 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_shlq__0x6___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r9d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x268__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x260__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 608
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_idivl__r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_shll__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x10__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__edx__MINUS0x26c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 620
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x26c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 620
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__edx___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movslq__r10d___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 4)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_shll__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x270__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 624
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__eax___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movl___rdi__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}








define %struct.Memory* @routine_movl_MINUS0xc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x274__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x278__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x278__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 632
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movslq__r10d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 4)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x27c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 636
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x274__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rsi__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_movq_MINUS0x268__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 616
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__edx__MINUS0x280__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 640
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x280__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 640
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movslq__r10d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__eax__MINUS0x284__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 644
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x284__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 644
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl___rdi__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}






define %struct.Memory* @routine_addq__rsi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x288__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x28c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x28c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 652
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






















define %struct.Memory* @routine_movl__eax__MINUS0x290__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x290__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 656
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl_MINUS0x288__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_jge_.L_4855e3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4855d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x1f0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x1940__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 6464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl_MINUS0xe4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x38__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




























define %struct.Memory* @routine_jmpq_.L_48555d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4855d5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_48554c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4855e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485332(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_485681(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_48566e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








































define %struct.Memory* @routine_jmpq_.L_48560e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_485673(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4855fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jmpq_.L_4856ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_483d5b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x68__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0xf4__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0xf8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 40
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_485702(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_485737(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_48571f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x298__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_48572b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x298__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x294__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_0x3758__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movslq_0xc__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_imulq__0x278___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 632)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shll__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x10__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__0x14c__rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 332
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}




define %struct.Memory* @routine_cmpl__0x0__0x9a0__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 2464
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_48670b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_4858d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4858b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4858a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


































































































define %struct.Memory* @routine_jmpq_.L_4857b7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4858a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4857a6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x44__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 1)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_callq_.dct_luma(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_486706(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_485b2f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485b1c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















































































define %struct.Memory* @routine_movslq_MINUS0x28__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




























































































































































define %struct.Memory* @routine_jmpq_.L_4858ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_485b21(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4858de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_485bae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485b9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_485b47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_485ba0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485b36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jge_.L_485c87(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485c74(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























































define %struct.Memory* @routine_jmpq_.L_485be3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_485c79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485bd2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_xorl__edi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.dct_chroma4x4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x7107b0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x7107b0_type* @G__0x7107b0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d4600___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x6d4600_type* @G__0x6d4600 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x6d0920___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x6d0920_type* @G__0x6d0920 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__MINUS0x29c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x2a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2a0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x10__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x2a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2a4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__edx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edi___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r10___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x2a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2a8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x29c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____r9__r10_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R9
  %16 = load i64, i64* %R10
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}














define %struct.Memory* @routine_movl__edx__MINUS0x2ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2ac__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__edi___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x2b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2b0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl___r8__r9_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %R9
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl_MINUS0xc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x2b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2b8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_addq__r8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x2bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2bc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__r8_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_jge_.L_485e93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_485e80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























































define %struct.Memory* @routine_jmpq_.L_485def(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_485e85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485dde(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 1)
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_addq__0x40___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x40___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x40___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x2c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2c4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__edx__MINUS0x2c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x2c0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__edx__MINUS0x2d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 720
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2d0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 720
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__eax__MINUS0x2d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 724
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2d4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 724
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__eax__MINUS0x2d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_movl__edx__MINUS0x2dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 732
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x2dc__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 732
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__eax__MINUS0x2e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x2e0__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x2d8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_486072(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_48605f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


































define %struct.Memory* @routine_jmpq_.L_48600a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_486064(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_485ff9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_486701(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4866ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























































































































define %struct.Memory* @routine_movl__r8d__MINUS0x2e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 740
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4861d3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_486221(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_movl_MINUS0x2e8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2e4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_48624e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x2ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_486307(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_jle_.L_4862ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4862fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_movl_MINUS0x2f0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






































define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl__eax__MINUS0x2f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_4863a6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 760
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4863e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl_MINUS0x2f8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 760
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2f4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_48640e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x2fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 764
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4864a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_jle_.L_48645a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_486495(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




























define %struct.Memory* @routine_movl_MINUS0x300__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 764
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2fc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 764
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


































































define %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_48655b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x308__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4865b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x308__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x304__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_4865dd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x30c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4866a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








































define %struct.Memory* @routine_jle_.L_486643(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x310__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_486698(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






































define %struct.Memory* @routine_movl_MINUS0x310__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x30c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x30c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
































define %struct.Memory* @routine_jmpq_.L_48608a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4866f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_486079(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_486aa6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_486793(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_486780(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






































define %struct.Memory* @routine_jmpq_.L_486723(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_486785(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_486712(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_4868d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_48683a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_486827(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_addl__0x4___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jmpq_.L_4867c0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_48682c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4867af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4868d2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4868bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






















define %struct.Memory* @routine_addl__0x8___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 8)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jmpq_.L_486852(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4868c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_486841(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4868d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4869c2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_4869af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movw__dx___si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %SI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movw__si____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %SI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




















define %struct.Memory* @routine_movw___rax__rcx_2____si(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %SI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %SI, i64 %18)
  ret %struct.Memory* %21
}
















define %struct.Memory* @routine_movl_MINUS0xe0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_4868ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4869b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4868de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_je_.L_486aa1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_486a9c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_486a89(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_486a76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















































define %struct.Memory* @routine_jmpq_.L_486a00(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_486a7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4869ef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_486a8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4869de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_486aa1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x308___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 776)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

